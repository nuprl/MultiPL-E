name: HumanEval_134_check_if_last_char_is_a_letter
language: php
results:
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    $lastChar = substr($txt,\
    \ -1);\n    if (ctype_alpha($lastChar) && !ctype_alpha(substr($txt, -2, 1))) {\n\
    \        return true;\n    } else {\n        return false;\n    }\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqcsgi8c2.php:31\n\
    Stack trace:\n#0 /tmp/tmpqcsgi8c2.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpqcsgi8c2.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9w_izcm_.php:31\n\
    Stack trace:\n#0 /tmp/tmp9w_izcm_.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp9w_izcm_.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last_char = substr($txt, -1);\n\
    \tif (ctype_alpha($last_char) && strpos($txt, $last_char) === strlen($txt) - 1)\
    \ {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\");\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\"\
    );\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \");\necho\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"\");\necho \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpahxs326r.php:32\n\
    Stack trace:\n#0 /tmp/tmpahxs326r.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpahxs326r.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    return ctype_alpha(substr($txt,\
    \ -1));\n}\necho check_if_last_char_is_a_letter(\"apple pie\") . \"\\n\";\necho\
    \ check_if_last_char_is_a_letter(\"apple pi e\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e \") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\") . \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3cepwkm9.php:23\n\
    Stack trace:\n#0 /tmp/tmp3cepwkm9.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp3cepwkm9.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \treturn ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1));\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi\
    \ e\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \");\n\
    echo \"<br>\";\necho check_if_last_char_is_a_letter(\"\");\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br>1<br><br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4epskzsf.php:30\n\
    Stack trace:\n#0 /tmp/tmp4epskzsf.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp4epskzsf.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$lastChar = substr($txt, -1);\n\
    \treturn ctype_alpha($lastChar) && !ctype_alpha(substr($txt, -2, 1));\n}\necho\
    \ check_if_last_char_is_a_letter(\"apple pie\") ? \"True\" : \"False\";\necho\
    \ \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e\") ? \"True\" :\
    \ \"False\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e\
    \ \") ? \"True\" : \"False\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    \") ? \"True\" : \"False\";\necho \"<br>\";\nfunction candidate(...$args) {\n\
    \    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: False<br>True<br>False<br>False<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp42aov0v6.php:31\n\
    Stack trace:\n#0 /tmp/tmp42aov0v6.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp42aov0v6.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last_char = substr($txt, -1);\n\
    \tif (ctype_alpha($last_char) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpztuxm1k5.php:31\n\
    Stack trace:\n#0 /tmp/tmpztuxm1k5.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpztuxm1k5.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last_char = substr($txt, -1);\n\
    \tif (ctype_alpha($last_char) && strpos($txt, $last_char) === strlen($txt) - 1)\
    \ {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpa1hi1f6a.php:28\n\
    Stack trace:\n#0 /tmp/tmpa1hi1f6a.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpa1hi1f6a.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\tif (strlen($txt) == 0) {\n\t\
    \treturn false;\n\t}\n\t$lastChar = substr($txt, -1);\n\tif (ctype_alpha($lastChar)\
    \ && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\t}\n\treturn false;\n\
    }\necho check_if_last_char_is_a_letter(\"apple pie\") . \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e\") . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \"\
    ) . \"<br>\";\necho check_if_last_char_is_a_letter(\"\") . \"<br>\";\nfunction\
    \ candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: <br>1<br><br><br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpv4rnu974.php:33\n\
    Stack trace:\n#0 /tmp/tmpv4rnu974.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpv4rnu974.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e \") . PHP_EOL;\n\
    echo check_if_last_char_is_a_letter(\"\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmtdf81ef.php:31\n\
    Stack trace:\n#0 /tmp/tmpmtdf81ef.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpmtdf81ef.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    $lastChar = substr($txt,\
    \ -1);\n    if (ctype_alpha($lastChar) && !ctype_alpha(substr($txt, -2, 1))) {\n\
    \        return true;\n    } else {\n        return false;\n    }\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpase_do3m.php:31\n\
    Stack trace:\n#0 /tmp/tmpase_do3m.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpase_do3m.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$lastChar = substr($txt, -1);\n\
    \tif (ctype_alpha($lastChar) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e \") . PHP_EOL;\n\
    echo check_if_last_char_is_a_letter(\"\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpc0qijdrm.php:31\n\
    Stack trace:\n#0 /tmp/tmpc0qijdrm.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpc0qijdrm.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$lastChar = substr($txt, -1);\n\
    \tif ($lastChar == \" \") {\n\t\treturn false;\n\t} else {\n\t\treturn ctype_alpha($lastChar);\n\
    \t}\n}\necho check_if_last_char_is_a_letter(\"apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \"\
    ) . \"\\n\";\necho check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpws8pvzgl.php:28\n\
    Stack trace:\n#0 /tmp/tmpws8pvzgl.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpws8pvzgl.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && strpos($txt, $last) === strlen($txt) - 1) {\n\t\t\
    return true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi\
    \ e\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \");\n\
    echo \"<br>\";\necho check_if_last_char_is_a_letter(\"\");\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br><br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphmmwp0ar.php:31\n\
    Stack trace:\n#0 /tmp/tmphmmwp0ar.php(43): test()\n#1 {main}\n  thrown in /tmp/tmphmmwp0ar.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$txt = trim($txt);\n\tif (strlen($txt)\
    \ == 0) {\n\t\treturn false;\n\t}\n\t$lastChar = substr($txt, -1);\n\tif (ctype_alpha($lastChar))\
    \ {\n\t\t$txt = substr($txt, 0, -1);\n\t\t$txt = trim($txt);\n\t\tif (strlen($txt)\
    \ == 0) {\n\t\t\treturn true;\n\t\t}\n\t\t$lastChar = substr($txt, -1);\n\t\t\
    if ($lastChar == \" \") {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\
    echo check_if_last_char_is_a_letter(\"apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \"\
    ) . \"\\n\";\necho check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3agdu6g_.php:40\n\
    Stack trace:\n#0 /tmp/tmp3agdu6g_.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp3agdu6g_.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    $last = substr($txt, -1);\n\
    \    if (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n        return\
    \ true;\n    } else {\n        return false;\n    }\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e\")\
    \ . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"<br>\"\
    ;\necho check_if_last_char_is_a_letter(\"\") . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br>1<br><br><br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2xw_410s.php:31\n\
    Stack trace:\n#0 /tmp/tmp2xw_410s.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp2xw_410s.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_hyfp8xp.php:31\n\
    Stack trace:\n#0 /tmp/tmp_hyfp8xp.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_hyfp8xp.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$lastChar = substr($txt, -1);\n\
    \tif (ctype_alpha($lastChar) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e \") . PHP_EOL;\n\
    echo check_if_last_char_is_a_letter(\"\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzyq07to_.php:31\n\
    Stack trace:\n#0 /tmp/tmpzyq07to_.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpzyq07to_.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t}\n\treturn false;\n}\necho check_if_last_char_is_a_letter(\"apple pie\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") . \"\\n\";\necho\
    \ check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    \") . \"\\n\";\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9p1p14ud.php:30\n\
    Stack trace:\n#0 /tmp/tmp9p1p14ud.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp9p1p14ud.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    $lastChar = substr($txt,\
    \ -1);\n    if (ctype_alpha($lastChar) && !ctype_alpha(substr($txt, -2, 1))) {\n\
    \        return true;\n    } else {\n        return false;\n    }\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e\")\
    \ . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"<br>\"\
    ;\necho check_if_last_char_is_a_letter(\"\") . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br>1<br><br><br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcv5hphol.php:31\n\
    Stack trace:\n#0 /tmp/tmpcv5hphol.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpcv5hphol.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    $last = substr($txt, -1);\n\
    \    if(ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n        return\
    \ true;\n    } else {\n        return false;\n    }\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4xfj0tw7.php:31\n\
    Stack trace:\n#0 /tmp/tmp4xfj0tw7.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp4xfj0tw7.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e \") . PHP_EOL;\n\
    echo check_if_last_char_is_a_letter(\"\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplpraw2g8.php:31\n\
    Stack trace:\n#0 /tmp/tmplpraw2g8.php(40): test()\n#1 {main}\n  thrown in /tmp/tmplpraw2g8.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp24jf4vty.php:31\n\
    Stack trace:\n#0 /tmp/tmp24jf4vty.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp24jf4vty.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \t$last2 = substr($txt, -2, 1);\n\tif (ctype_alpha($last) && !ctype_alpha($last2))\
    \ {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsmiaq4q0.php:32\n\
    Stack trace:\n#0 /tmp/tmpsmiaq4q0.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpsmiaq4q0.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && strpos($txt, $last) == strlen($txt) - 1) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_w3_wpto.php:28\n\
    Stack trace:\n#0 /tmp/tmp_w3_wpto.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_w3_wpto.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n  $last = substr($txt, -1);\n\
    \  if (ctype_alpha($last) && ctype_space(substr($txt, -2, 1))) {\n    return true;\n\
    \  } else {\n    return false;\n  }\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e \") . PHP_EOL;\n\
    echo check_if_last_char_is_a_letter(\"\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpknfq6xb6.php:31\n\
    Stack trace:\n#0 /tmp/tmpknfq6xb6.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpknfq6xb6.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    $lastChar = substr($txt,\
    \ -1);\n    if (ctype_alpha($lastChar) && !ctype_alpha(substr($txt, -2, 1))) {\n\
    \        return true;\n    } else {\n        return false;\n    }\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi\
    \ e\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \");\n\
    echo \"<br>\";\necho check_if_last_char_is_a_letter(\"\");\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br>1<br><br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpe5xsv5_f.php:34\n\
    Stack trace:\n#0 /tmp/tmpe5xsv5_f.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpe5xsv5_f.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_q_a25u_.php:31\n\
    Stack trace:\n#0 /tmp/tmp_q_a25u_.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_q_a25u_.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$txt = trim($txt);\n\tif (empty($txt))\
    \ {\n\t\treturn false;\n\t}\n\t$lastChar = substr($txt, -1);\n\tif (ctype_alpha($lastChar))\
    \ {\n\t\treturn true;\n\t}\n\treturn false;\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e \") . PHP_EOL;\n\
    echo check_if_last_char_is_a_letter(\"\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n1\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4uha_0x3.php:31\n\
    Stack trace:\n#0 /tmp/tmp4uha_0x3.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp4uha_0x3.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif(ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpy9y4jqbk.php:31\n\
    Stack trace:\n#0 /tmp/tmpy9y4jqbk.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpy9y4jqbk.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    $last_char = substr($txt,\
    \ -1);\n    if (ctype_alpha($last_char) && strpos($txt, $last_char) == strlen($txt)\
    \ - 1) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\
    echo check_if_last_char_is_a_letter(\"apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \"\
    ) . \"\\n\";\necho check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2ir13sj1.php:28\n\
    Stack trace:\n#0 /tmp/tmp2ir13sj1.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp2ir13sj1.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && strpos($txt, $last) === strlen($txt) - 1) {\n\t\t\
    return true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi\
    \ e\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \");\n\
    echo \"<br>\";\necho check_if_last_char_is_a_letter(\"\");\necho \"<br>\";\necho\
    \ check_if_last_char_is_a_letter(\"apple pi ee\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi ee \");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple\
    \ pi ee  \");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi\
    \ ee   \");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi ee\
    \    \");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi ee \
    \    \");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi ee \
    \     \");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi ee\
    \       \");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi ee\
    \        \");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi\
    \ ee         \");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple\
    \ pi ee          \");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi ee           \");\necho \"<br>\";\necho\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected identifier \"candidate\", expecting\
    \ \"(\" in /tmp/tmpvztbubk3.php on line 52\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && strpos($txt, $last) == strlen($txt) - 1) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpq16d2z20.php:28\n\
    Stack trace:\n#0 /tmp/tmpq16d2z20.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpq16d2z20.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$txt = trim($txt);\n\t$lastChar\
    \ = substr($txt, -1);\n\tif(ctype_alpha($lastChar)) {\n\t\treturn true;\n\t} else\
    \ {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"apple pie\"\
    ) . PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e\") . PHP_EOL;\n\
    echo check_if_last_char_is_a_letter(\"apple pi e \") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"\
    \") . PHP_EOL;\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n1\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpb9sskq6w.php:29\n\
    Stack trace:\n#0 /tmp/tmpb9sskq6w.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpb9sskq6w.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif(ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e \") . PHP_EOL;\n\
    echo check_if_last_char_is_a_letter(\"\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwa955cfk.php:31\n\
    Stack trace:\n#0 /tmp/tmpwa955cfk.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpwa955cfk.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$lastChar = substr($txt, -1);\n\
    \treturn ctype_alpha($lastChar) && !ctype_alpha(substr($txt, -2, 1));\n}\necho\
    \ check_if_last_char_is_a_letter(\"apple pie\") ? \"True\" : \"False\";\necho\
    \ \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e\") ? \"True\" :\
    \ \"False\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e\
    \ \") ? \"True\" : \"False\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    \") ? \"True\" : \"False\";\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: False<br>True<br>False<br>False
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpr3n3jusr.php:30\n\
    Stack trace:\n#0 /tmp/tmpr3n3jusr.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpr3n3jusr.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e \") . PHP_EOL;\n\
    echo check_if_last_char_is_a_letter(\"\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp23vt58g5.php:31\n\
    Stack trace:\n#0 /tmp/tmp23vt58g5.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp23vt58g5.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t}\n\treturn false;\n}\necho check_if_last_char_is_a_letter(\"apple pie\");\n\
    echo \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e\");\necho \"\
    <br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \");\necho \"<br>\"\
    ;\necho check_if_last_char_is_a_letter(\"\");\nfunction candidate(...$args) {\n\
    \    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br>1<br><br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpn4uhgfk1.php:33\n\
    Stack trace:\n#0 /tmp/tmpn4uhgfk1.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpn4uhgfk1.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n  $lastChar = substr($txt, -1);\n\
    \  if (ctype_alpha($lastChar) && !ctype_alpha(substr($txt, -2, 1))) {\n    return\
    \ true;\n  } else {\n    return false;\n  }\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfjj96g_w.php:31\n\
    Stack trace:\n#0 /tmp/tmpfjj96g_w.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpfjj96g_w.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\");\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppvnotccy.php:28\n\
    Stack trace:\n#0 /tmp/tmppvnotccy.php(37): test()\n#1 {main}\n  thrown in /tmp/tmppvnotccy.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \treturn ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1));\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi\
    \ e\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \");\n\
    echo \"<br>\";\necho check_if_last_char_is_a_letter(\"\");\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br>1<br><br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpks7anzsp.php:30\n\
    Stack trace:\n#0 /tmp/tmpks7anzsp.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpks7anzsp.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsikzf9d0.php:31\n\
    Stack trace:\n#0 /tmp/tmpsikzf9d0.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpsikzf9d0.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$lastChar = substr($txt, -1);\n\
    \treturn ctype_alpha($lastChar) && !ctype_alnum($lastChar);\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") ? \"True\" : \"False\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e\") ? \"True\" : \"False\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e \") ? \"True\" : \"False\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    \") ? \"True\" : \"False\";\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: False<br>False<br>False<br>False
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpba4mvw8t.php:28\n\
    Stack trace:\n#0 /tmp/tmpba4mvw8t.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpba4mvw8t.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$txt = trim($txt);\n\t$last\
    \ = substr($txt, -1);\n\tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2,\
    \ 1))) {\n\t\treturn true;\n\t}\n\treturn false;\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e \") . PHP_EOL;\n\
    echo check_if_last_char_is_a_letter(\"\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n1\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpe1kxkpoh.php:31\n\
    Stack trace:\n#0 /tmp/tmpe1kxkpoh.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpe1kxkpoh.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$txt = trim($txt);\n\tif (strlen($txt)\
    \ == 0) {\n\t\treturn false;\n\t}\n\t$last_char = substr($txt, -1);\n\tif (ctype_alpha($last_char))\
    \ {\n\t\treturn true;\n\t}\n\treturn false;\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi\
    \ e\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \");\n\
    echo \"<br>\";\necho check_if_last_char_is_a_letter(\"\");\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>1<br>1<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6x9oqmh6.php:34\n\
    Stack trace:\n#0 /tmp/tmp6x9oqmh6.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp6x9oqmh6.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e\")\
    \ . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"<br>\"\
    ;\necho check_if_last_char_is_a_letter(\"\") . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br>1<br><br><br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpg21zw14k.php:31\n\
    Stack trace:\n#0 /tmp/tmpg21zw14k.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpg21zw14k.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    $last = substr($txt, -1);\n\
    \    if (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n        return\
    \ true;\n    } else {\n        return false;\n    }\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpudc4gse1.php:31\n\
    Stack trace:\n#0 /tmp/tmpudc4gse1.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpudc4gse1.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$txt = trim($txt);\n\tif (empty($txt))\
    \ {\n\t\treturn false;\n\t}\n\t$lastChar = substr($txt, -1);\n\tif (ctype_alpha($lastChar))\
    \ {\n\t\treturn true;\n\t}\n\treturn false;\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi\
    \ e\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \");\n\
    echo \"<br>\";\necho check_if_last_char_is_a_letter(\"\");\necho \"<br>\";\nfunction\
    \ candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>1<br>1<br><br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5hwn9vlc.php:35\n\
    Stack trace:\n#0 /tmp/tmp5hwn9vlc.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp5hwn9vlc.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6r0nld0u.php:31\n\
    Stack trace:\n#0 /tmp/tmp6r0nld0u.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp6r0nld0u.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpx634h3o3.php:31\n\
    Stack trace:\n#0 /tmp/tmpx634h3o3.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpx634h3o3.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n  $last = substr($txt, -1);\n\
    \  if (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n    return\
    \ true;\n  } else {\n    return false;\n  }\n}\nfunction candidate(...$args) {\n\
    \    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_s_1u9b2.php:27\n\
    Stack trace:\n#0 /tmp/tmp_s_1u9b2.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp_s_1u9b2.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last_char = substr($txt, -1);\n\
    \treturn ctype_alpha($last_char) && !ctype_alnum($last_char);\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") ? \"True\" : \"False\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e\") ? \"True\" : \"False\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e \") ? \"True\" : \"False\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    \") ? \"True\" : \"False\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e .\") ? \"True\" : \"False\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e ?\") ? \"True\" : \"False\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e !\") ? \"True\" : \"False\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e ,\") ? \"True\" : \"False\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e ;\") ? \"True\" : \"False\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e :\") ? \"True\" : \"False\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e -\") ? \"True\" : \"False\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e _\") ? \"True\" : \"False\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e *\") ? \"True\" : \"False\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e &\") ?\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected identifier \"candidate\", expecting\
    \ \"(\" in /tmp/tmp28cof3ak.php on line 42\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last_char = substr($txt, -1);\n\
    \tif (ctype_alpha($last_char) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e \") . PHP_EOL;\n\
    echo check_if_last_char_is_a_letter(\"\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpw7r60o5w.php:31\n\
    Stack trace:\n#0 /tmp/tmpw7r60o5w.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpw7r60o5w.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkws2uow5.php:31\n\
    Stack trace:\n#0 /tmp/tmpkws2uow5.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpkws2uow5.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    $last = substr($txt, -1);\n\
    \    if (ctype_alpha($last) && ctype_space(substr($txt, -2, 1))) {\n        return\
    \ true;\n    } else {\n        return false;\n    }\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptmyngatx.php:31\n\
    Stack trace:\n#0 /tmp/tmptmyngatx.php(40): test()\n#1 {main}\n  thrown in /tmp/tmptmyngatx.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e \") . PHP_EOL;\n\
    echo check_if_last_char_is_a_letter(\"\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp39ktg44j.php:31\n\
    Stack trace:\n#0 /tmp/tmp39ktg44j.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp39ktg44j.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$txt = trim($txt);\n\t$last\
    \ = substr($txt, -1);\n\tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2,\
    \ 1))) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n1\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmquchw3i.php:32\n\
    Stack trace:\n#0 /tmp/tmpmquchw3i.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpmquchw3i.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$txt = trim($txt);\n\t$lastChar\
    \ = substr($txt, -1);\n\tif (ctype_alpha($lastChar)) {\n\t\treturn True;\n\t}\
    \ else {\n\t\treturn False;\n\t}\n}\necho check_if_last_char_is_a_letter(\"apple\
    \ pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") . \"\\\
    n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    \") . \"\\n\";\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n1\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplzg99l1_.php:29\n\
    Stack trace:\n#0 /tmp/tmplzg99l1_.php(41): test()\n#1 {main}\n  thrown in /tmp/tmplzg99l1_.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$lastChar = substr($txt, -1);\n\
    \tif (ctype_alpha($lastChar) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpatj70ey9.php:31\n\
    Stack trace:\n#0 /tmp/tmpatj70ey9.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpatj70ey9.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t}\n\treturn false;\n}\necho check_if_last_char_is_a_letter(\"apple pie\") .\
    \ PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e\") . PHP_EOL;\necho\
    \ check_if_last_char_is_a_letter(\"apple pi e \") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"\
    \") . PHP_EOL;\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprk90l503.php:30\n\
    Stack trace:\n#0 /tmp/tmprk90l503.php(39): test()\n#1 {main}\n  thrown in /tmp/tmprk90l503.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (preg_match(\"/[a-zA-Z]/\", $last) && !preg_match(\"/\\w/\", $last)) {\n\t\
    \treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e\")\
    \ . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"<br>\"\
    ;\necho check_if_last_char_is_a_letter(\"\") . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br><br><br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpy3sk_zom.php:29\n\
    Stack trace:\n#0 /tmp/tmpy3sk_zom.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpy3sk_zom.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$lastChar = substr($txt, -1);\n\
    \tif (ctype_alpha($lastChar) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e \") . PHP_EOL;\n\
    echo check_if_last_char_is_a_letter(\"\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkphsm6n1.php:31\n\
    Stack trace:\n#0 /tmp/tmpkphsm6n1.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpkphsm6n1.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && strpos($txt, $last) === strlen($txt) - 1) {\n\t\t\
    return true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e \") . PHP_EOL;\n\
    echo check_if_last_char_is_a_letter(\"\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp71vd11kh.php:28\n\
    Stack trace:\n#0 /tmp/tmp71vd11kh.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp71vd11kh.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    if (strlen($txt) == 0) {\n\
    \        return false;\n    }\n    $lastChar = substr($txt, -1);\n    if (ctype_alpha($lastChar))\
    \ {\n        if (strlen($txt) == 1) {\n            return true;\n        }\n \
    \       $secondLastChar = substr($txt, -2, 1);\n        if (ctype_alpha($secondLastChar))\
    \ {\n            return false;\n        }\n        return true;\n    }\n    return\
    \ false;\n}\necho check_if_last_char_is_a_letter(\"apple pie\") ? \"true\" : \"\
    false\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e\")\
    \ ? \"true\" : \"false\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e \") ? \"true\" : \"false\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    \") ? \"true\" : \"false\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    a\") ? \"true\" : \"false\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    ab\") ? \"true\" : \"false\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    abc\") ? \"true\" : \"false\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    abcd\") ? \"true\" : \"false\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    abcde\") ? \"true\" : \"false\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    abcdef\") ? \"true\" : \"false\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    abcdefg\") ? \"true\" : \"false\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    abcdefgh\") ? \"true\" : \"false\";\n\nfunction candidate(...$args) {\n    return\
    \ check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(\"apple\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: false<br>true<br>false<br>false<br>true<br>false<br>false<br>false<br>false<br>false<br>false<br>false
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e\")\
    \ . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"<br>\"\
    ;\necho check_if_last_char_is_a_letter(\"\") . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br>1<br><br><br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpnnhonluu.php:31\n\
    Stack trace:\n#0 /tmp/tmpnnhonluu.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpnnhonluu.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && strpos($txt, $last) == strlen($txt) - 1) {\n\t\treturn\
    \ true;\n\t}\n\treturn false;\n}\necho check_if_last_char_is_a_letter(\"apple\
    \ pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") . \"\\\
    n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    \") . \"\\n\";\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmhkguow9.php:27\n\
    Stack trace:\n#0 /tmp/tmpmhkguow9.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpmhkguow9.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last_char = substr($txt, -1);\n\
    \tif (ctype_alpha($last_char) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi\
    \ e\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \");\n\
    echo \"<br>\";\necho check_if_last_char_is_a_letter(\"\");\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br>1<br><br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsunzuot1.php:34\n\
    Stack trace:\n#0 /tmp/tmpsunzuot1.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpsunzuot1.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    $lastChar = substr($txt,\
    \ -1);\n    if (ctype_alpha($lastChar) && !ctype_alpha(substr($txt, -2, 1))) {\n\
    \        return true;\n    } else {\n        return false;\n    }\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpuftvjjgy.php:31\n\
    Stack trace:\n#0 /tmp/tmpuftvjjgy.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpuftvjjgy.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    $last = substr($txt, -1);\n\
    \    if (ctype_alpha($last) && strpos($txt, $last) == strlen($txt) - 1) {\n  \
    \      return true;\n    } else {\n        return false;\n    }\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e\")\
    \ . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"<br>\"\
    ;\necho check_if_last_char_is_a_letter(\"\") . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br><br><br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpnbqmyhdf.php:28\n\
    Stack trace:\n#0 /tmp/tmpnbqmyhdf.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpnbqmyhdf.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e \") . PHP_EOL;\n\
    echo check_if_last_char_is_a_letter(\"\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprenohq5i.php:31\n\
    Stack trace:\n#0 /tmp/tmprenohq5i.php(40): test()\n#1 {main}\n  thrown in /tmp/tmprenohq5i.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n  $lastChar = substr($txt, -1);\n\
    \  if (ctype_alpha($lastChar) && !ctype_alpha(substr($txt, -2, 1))) {\n    return\
    \ true;\n  } else {\n    return false;\n  }\n}\nfunction candidate(...$args) {\n\
    \    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8lkt5xoi.php:27\n\
    Stack trace:\n#0 /tmp/tmp8lkt5xoi.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp8lkt5xoi.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e \") . PHP_EOL;\n\
    echo check_if_last_char_is_a_letter(\"\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzttk2jkh.php:31\n\
    Stack trace:\n#0 /tmp/tmpzttk2jkh.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpzttk2jkh.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbra8eyvh.php:31\n\
    Stack trace:\n#0 /tmp/tmpbra8eyvh.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpbra8eyvh.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    $last_char = substr($txt,\
    \ -1);\n    if (ctype_alpha($last_char) && !ctype_alpha(substr($txt, -2, 1)))\
    \ {\n        return true;\n    } else {\n        return false;\n    }\n}\necho\
    \ check_if_last_char_is_a_letter(\"apple pie\") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"\
    apple pi e\") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e \"\
    ) . PHP_EOL;\necho check_if_last_char_is_a_letter(\"\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp21tccdya.php:31\n\
    Stack trace:\n#0 /tmp/tmp21tccdya.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp21tccdya.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t}\n\treturn false;\n}\necho check_if_last_char_is_a_letter(\"apple pie\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") . \"\\n\";\necho\
    \ check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    \") . \"\\n\";\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcm55yy7_.php:30\n\
    Stack trace:\n#0 /tmp/tmpcm55yy7_.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpcm55yy7_.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$arr = explode(\" \", $txt);\n\
    \t$last = array_pop($arr);\n\tif (ctype_alpha($last) && strlen($last) == 1) {\n\
    \t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$lastChar = substr($txt, -1);\n\
    \tif (ctype_alpha($lastChar) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkio4bq2d.php:31\n\
    Stack trace:\n#0 /tmp/tmpkio4bq2d.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpkio4bq2d.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e\")\
    \ . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"<br>\"\
    ;\necho check_if_last_char_is_a_letter(\"\") . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br>1<br><br><br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpo0dfsjck.php:31\n\
    Stack trace:\n#0 /tmp/tmpo0dfsjck.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpo0dfsjck.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \treturn ctype_alpha($last) && !ctype_alnum($last);\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") ? \"True\" : \"False\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e\") ? \"True\" : \"False\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e \") ? \"True\" : \"False\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    \") ? \"True\" : \"False\";\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: False<br>False<br>False<br>False
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp273qq32e.php:28\n\
    Stack trace:\n#0 /tmp/tmp273qq32e.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp273qq32e.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif(ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi\
    \ e\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \");\n\
    echo \"<br>\";\necho check_if_last_char_is_a_letter(\"\");\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br>1<br><br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5igiqpz1.php:34\n\
    Stack trace:\n#0 /tmp/tmp5igiqpz1.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp5igiqpz1.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e \") . PHP_EOL;\n\
    echo check_if_last_char_is_a_letter(\"\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp60j8nys7.php:31\n\
    Stack trace:\n#0 /tmp/tmp60j8nys7.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp60j8nys7.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpr5rxl03d.php:31\n\
    Stack trace:\n#0 /tmp/tmpr5rxl03d.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpr5rxl03d.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (preg_match(\"/[a-zA-Z]/\", $last) && !preg_match(\"/[a-zA-Z]/\", $txt[strlen($txt)\
    \ - 2])) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi\
    \ e\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \");\n\
    echo \"<br>\";\necho check_if_last_char_is_a_letter(\"\");\necho \"<br>\";\nfunction\
    \ candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: <br>1<br><br><br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmps7vtrvp0.php:35\n\
    Stack trace:\n#0 /tmp/tmps7vtrvp0.php(44): test()\n#1 {main}\n  thrown in /tmp/tmps7vtrvp0.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    if (strlen($txt) == 0) {\n\
    \        return false;\n    }\n    $lastChar = substr($txt, -1);\n    if (ctype_alpha($lastChar))\
    \ {\n        return true;\n    }\n    return false;\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpc6lmjyao.php:30\n\
    Stack trace:\n#0 /tmp/tmpc6lmjyao.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpc6lmjyao.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n  $lastChar = substr($txt, -1);\n\
    \  if ($lastChar == \" \") {\n    return false;\n  } elseif (ctype_alpha($lastChar))\
    \ {\n    return true;\n  } else {\n    return false;\n  }\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e \") . PHP_EOL;\n\
    echo check_if_last_char_is_a_letter(\"\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgbvs2ofz.php:30\n\
    Stack trace:\n#0 /tmp/tmpgbvs2ofz.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpgbvs2ofz.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e \") . PHP_EOL;\n\
    echo check_if_last_char_is_a_letter(\"\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpj263mqsg.php:31\n\
    Stack trace:\n#0 /tmp/tmpj263mqsg.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpj263mqsg.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpp305swrz.php:31\n\
    Stack trace:\n#0 /tmp/tmpp305swrz.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpp305swrz.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e\")\
    \ . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"<br>\"\
    ;\necho check_if_last_char_is_a_letter(\"\") . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br>1<br><br><br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpffvl1pgy.php:31\n\
    Stack trace:\n#0 /tmp/tmpffvl1pgy.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpffvl1pgy.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && strpos($txt, $last) === strlen($txt) - 1) {\n\t\t\
    return true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpow784diq.php:28\n\
    Stack trace:\n#0 /tmp/tmpow784diq.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpow784diq.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e \") . PHP_EOL;\n\
    echo check_if_last_char_is_a_letter(\"\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4fxojrur.php:31\n\
    Stack trace:\n#0 /tmp/tmp4fxojrur.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp4fxojrur.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    $last_char = substr($txt,\
    \ -1);\n    if (ctype_alpha($last_char) && !ctype_alpha(substr($txt, -2, 1)))\
    \ {\n        return true;\n    } else {\n        return false;\n    }\n}\necho\
    \ check_if_last_char_is_a_letter(\"apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \"\
    ) . \"\\n\";\necho check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp07ohhegw.php:31\n\
    Stack trace:\n#0 /tmp/tmp07ohhegw.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp07ohhegw.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    if (strlen($txt) == 0) {\n\
    \        return false;\n    }\n    $lastChar = substr($txt, -1);\n    if (ctype_alpha($lastChar))\
    \ {\n        return true;\n    }\n    return false;\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpag4k7nnm.php:30\n\
    Stack trace:\n#0 /tmp/tmpag4k7nnm.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpag4k7nnm.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e \") . PHP_EOL;\n\
    echo check_if_last_char_is_a_letter(\"\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpstk2oim9.php:31\n\
    Stack trace:\n#0 /tmp/tmpstk2oim9.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpstk2oim9.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$lastChar = substr($txt, -1);\n\
    \tif (ctype_alpha($lastChar) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e \") . PHP_EOL;\n\
    echo check_if_last_char_is_a_letter(\"\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvjk8pve8.php:31\n\
    Stack trace:\n#0 /tmp/tmpvjk8pve8.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpvjk8pve8.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last_char = substr($txt, -1);\n\
    \tif (ctype_alpha($last_char) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprxf_rz9n.php:31\n\
    Stack trace:\n#0 /tmp/tmprxf_rz9n.php(40): test()\n#1 {main}\n  thrown in /tmp/tmprxf_rz9n.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\tif (empty($txt)) {\n\t\treturn\
    \ false;\n\t}\n\t$last_char = substr($txt, -1);\n\tif (ctype_alpha($last_char))\
    \ {\n\t\treturn true;\n\t}\n\treturn false;\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3mbo_1e5.php:30\n\
    Stack trace:\n#0 /tmp/tmp3mbo_1e5.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp3mbo_1e5.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e \") . PHP_EOL;\n\
    echo check_if_last_char_is_a_letter(\"\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8sm6ovux.php:31\n\
    Stack trace:\n#0 /tmp/tmp8sm6ovux.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp8sm6ovux.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$lastChar = substr($txt, -1);\n\
    \tif (ctype_alpha($lastChar) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7eorvyv8.php:31\n\
    Stack trace:\n#0 /tmp/tmp7eorvyv8.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp7eorvyv8.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif(ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e\")\
    \ . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"<br>\"\
    ;\necho check_if_last_char_is_a_letter(\"\") . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br>1<br><br><br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp87u5k1x7.php:31\n\
    Stack trace:\n#0 /tmp/tmp87u5k1x7.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp87u5k1x7.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    $last = substr($txt, -1);\n\
    \    if (ctype_alpha($last) && strpos($txt, $last) == strlen($txt) - 1) {\n  \
    \      return true;\n    } else {\n        return false;\n    }\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e \") . PHP_EOL;\n\
    echo check_if_last_char_is_a_letter(\"\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpky19qs5a.php:28\n\
    Stack trace:\n#0 /tmp/tmpky19qs5a.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpky19qs5a.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last_char = substr($txt, -1);\n\
    \tif (ctype_alpha($last_char) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpd6dqneez.php:31\n\
    Stack trace:\n#0 /tmp/tmpd6dqneez.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpd6dqneez.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    $last_char = substr($txt,\
    \ -1);\n    if (ctype_alpha($last_char) && !ctype_alpha(substr($txt, -2, 1)))\
    \ {\n        return true;\n    } else {\n        return false;\n    }\n}\necho\
    \ check_if_last_char_is_a_letter(\"apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \"\
    ) . \"\\n\";\necho check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkvji3ma6.php:31\n\
    Stack trace:\n#0 /tmp/tmpkvji3ma6.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpkvji3ma6.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \treturn ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1));\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxjj7zg9f.php:27\n\
    Stack trace:\n#0 /tmp/tmpxjj7zg9f.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpxjj7zg9f.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last_char = substr($txt, -1);\n\
    \tif (ctype_alpha($last_char) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpiwrlx1g8.php:31\n\
    Stack trace:\n#0 /tmp/tmpiwrlx1g8.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpiwrlx1g8.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    $last_char = substr($txt,\
    \ -1);\n    if (preg_match(\"/[a-zA-Z]/\", $last_char) && !preg_match(\"/[a-zA-Z]/\"\
    , substr($txt, -2, 1))) {\n        return true;\n    } else {\n        return\
    \ false;\n    }\n}\necho check_if_last_char_is_a_letter(\"apple pie\") . \"<br>\"\
    ;\necho check_if_last_char_is_a_letter(\"apple pi e\") . \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e \") . \"<br>\";\necho check_if_last_char_is_a_letter(\"\") . \"<br>\"\
    ;\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: <br>1<br><br><br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpq0vc4q6i.php:31\n\
    Stack trace:\n#0 /tmp/tmpq0vc4q6i.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpq0vc4q6i.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$txt = trim($txt);\n\t$last\
    \ = substr($txt, -1);\n\tif (ctype_alpha($last) && strpos($txt, $last) == strlen($txt)\
    \ - 1) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpu69zquv5.php:29\n\
    Stack trace:\n#0 /tmp/tmpu69zquv5.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpu69zquv5.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n  $lastChar = substr($txt, -1);\n\
    \  if (ctype_alpha($lastChar) && !ctype_alpha(substr($txt, -2, 1))) {\n    return\
    \ true;\n  } else {\n    return false;\n  }\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e \") . PHP_EOL;\n\
    echo check_if_last_char_is_a_letter(\"\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfjvy6hkw.php:31\n\
    Stack trace:\n#0 /tmp/tmpfjvy6hkw.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpfjvy6hkw.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$txt = trim($txt);\n\t$last\
    \ = substr($txt, -1);\n\tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2,\
    \ 1))) {\n\t\treturn true;\n\t}\n\treturn false;\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n1\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpog1ze711.php:31\n\
    Stack trace:\n#0 /tmp/tmpog1ze711.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpog1ze711.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \treturn ctype_alpha($last) && !ctype_alnum($last);\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3bmk6cty.php:25\n\
    Stack trace:\n#0 /tmp/tmp3bmk6cty.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp3bmk6cty.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$txt = trim($txt);\n\t$lastChar\
    \ = substr($txt, -1);\n\tif (ctype_alpha($lastChar)) {\n\t\treturn True;\n\t}\
    \ else {\n\t\treturn False;\n\t}\n}\necho check_if_last_char_is_a_letter(\"apple\
    \ pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") . \"\\\
    n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    \") . \"\\n\";\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n1\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpm8rffmry.php:29\n\
    Stack trace:\n#0 /tmp/tmpm8rffmry.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpm8rffmry.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif(ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpw9lphq09.php:31\n\
    Stack trace:\n#0 /tmp/tmpw9lphq09.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpw9lphq09.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last_char = substr($txt, -1);\n\
    \tif (ctype_alpha($last_char) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e \") . PHP_EOL;\n\
    echo check_if_last_char_is_a_letter(\"\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1a2_9eo5.php:31\n\
    Stack trace:\n#0 /tmp/tmp1a2_9eo5.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1a2_9eo5.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && strpos($txt, $last) == strlen($txt) - 1) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpq3_cyter.php:28\n\
    Stack trace:\n#0 /tmp/tmpq3_cyter.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpq3_cyter.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e \") . PHP_EOL;\n\
    echo check_if_last_char_is_a_letter(\"\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfsdrc3r7.php:31\n\
    Stack trace:\n#0 /tmp/tmpfsdrc3r7.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpfsdrc3r7.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && strpos($txt, $last) == strlen($txt) - 1) {\n\t\treturn\
    \ true;\n\t}\n\treturn false;\n}\necho check_if_last_char_is_a_letter(\"apple\
    \ pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") . \"\\\
    n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    \") . \"\\n\";\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpamc0tfnv.php:27\n\
    Stack trace:\n#0 /tmp/tmpamc0tfnv.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpamc0tfnv.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpu2_xf4qa.php:31\n\
    Stack trace:\n#0 /tmp/tmpu2_xf4qa.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpu2_xf4qa.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e \") . PHP_EOL;\n\
    echo check_if_last_char_is_a_letter(\"\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpv65631kd.php:31\n\
    Stack trace:\n#0 /tmp/tmpv65631kd.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpv65631kd.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last_char = substr($txt, -1);\n\
    \tif (ctype_alpha($last_char) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjewp1aj9.php:31\n\
    Stack trace:\n#0 /tmp/tmpjewp1aj9.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpjewp1aj9.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdn62lnss.php:31\n\
    Stack trace:\n#0 /tmp/tmpdn62lnss.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpdn62lnss.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \treturn ctype_alpha($last) && strpos($txt, $last) === strlen($txt) - 1;\n}\n\
    echo check_if_last_char_is_a_letter(\"apple pie\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi\
    \ e \");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\");\nfunction\
    \ candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br><br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpk9nvolx2.php:27\n\
    Stack trace:\n#0 /tmp/tmpk9nvolx2.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpk9nvolx2.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$lastChar = substr($txt, -1);\n\
    \tif (ctype_alpha($lastChar) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplxartvf1.php:31\n\
    Stack trace:\n#0 /tmp/tmplxartvf1.php(40): test()\n#1 {main}\n  thrown in /tmp/tmplxartvf1.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    $last = substr($txt, -1);\n\
    \    if (ctype_alpha($last) && strpos($txt, $last) === strlen($txt) - 1) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5pp03oq8.php:28\n\
    Stack trace:\n#0 /tmp/tmp5pp03oq8.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp5pp03oq8.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && !ctype_alnum($last)) {\n\t\treturn true;\n\t}\n\t\
    return false;\n}\necho check_if_last_char_is_a_letter(\"apple pie\") . PHP_EOL;\n\
    echo check_if_last_char_is_a_letter(\"apple pi e\") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"\
    apple pi e \") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"\") . PHP_EOL;\n\
    function candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpg5klv9d8.php:28\n\
    Stack trace:\n#0 /tmp/tmpg5klv9d8.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpg5klv9d8.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$txt = trim($txt);\n\tif(strlen($txt)\
    \ == 0) {\n\t\treturn false;\n\t}\n\t$lastChar = $txt[strlen($txt) - 1];\n\tif(ctype_alpha($lastChar))\
    \ {\n\t\t$txt = substr($txt, 0, strlen($txt) - 1);\n\t\tif(strpos($txt, $lastChar)\
    \ === false) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e\")\
    \ . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"<br>\"\
    ;\necho check_if_last_char_is_a_letter(\"\") . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br><br><br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptbeo7seh.php:34\n\
    Stack trace:\n#0 /tmp/tmptbeo7seh.php(46): test()\n#1 {main}\n  thrown in /tmp/tmptbeo7seh.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \t$last_two = substr($txt, -2);\n\tif (ctype_alpha($last) && !ctype_alpha($last_two))\
    \ {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpnwohqzpd.php:32\n\
    Stack trace:\n#0 /tmp/tmpnwohqzpd.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpnwohqzpd.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t}\n\treturn false;\n}\necho check_if_last_char_is_a_letter(\"apple pie\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") . \"\\n\";\necho\
    \ check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    \") . \"\\n\";\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprtozi8k_.php:30\n\
    Stack trace:\n#0 /tmp/tmprtozi8k_.php(39): test()\n#1 {main}\n  thrown in /tmp/tmprtozi8k_.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkq0osqhj.php:31\n\
    Stack trace:\n#0 /tmp/tmpkq0osqhj.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpkq0osqhj.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6u_n3g1u.php:31\n\
    Stack trace:\n#0 /tmp/tmp6u_n3g1u.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp6u_n3g1u.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t}\n\treturn false;\n}\necho check_if_last_char_is_a_letter(\"apple pie\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") . \"\\n\";\necho\
    \ check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    \") . \"\\n\";\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp453m2_a4.php:30\n\
    Stack trace:\n#0 /tmp/tmp453m2_a4.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp453m2_a4.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && strpos($txt, $last) == strlen($txt) - 1) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e \") . PHP_EOL;\n\
    echo check_if_last_char_is_a_letter(\"\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2slax3yy.php:28\n\
    Stack trace:\n#0 /tmp/tmp2slax3yy.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp2slax3yy.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$txt = trim($txt);\n\t$txt\
    \ = str_split($txt);\n\t$last = array_pop($txt);\n\tif (ctype_alpha($last)) {\n\
    \t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e \") . PHP_EOL;\n\
    echo check_if_last_char_is_a_letter(\"\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n1\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpi787zi10.php:30\n\
    Stack trace:\n#0 /tmp/tmpi787zi10.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpi787zi10.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    $lastChar = substr($txt,\
    \ -1);\n    $lastChar = preg_replace('/\\s+/', '', $lastChar);\n    if (ctype_alpha($lastChar))\
    \ {\n        return true;\n    } else {\n        return false;\n    }\n}\necho\
    \ check_if_last_char_is_a_letter(\"apple pie\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi\
    \ e \");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\");\necho \"\
    <br>\";\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>1<br><br><br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpflgjpvw5.php:33\n\
    Stack trace:\n#0 /tmp/tmpflgjpvw5.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpflgjpvw5.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    $lastChar = substr($txt,\
    \ -1);\n    if (ctype_alpha($lastChar) && !ctype_alpha(substr($txt, -2, 1))) {\n\
    \        return true;\n    } else {\n        return false;\n    }\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e\")\
    \ . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"<br>\"\
    ;\necho check_if_last_char_is_a_letter(\"\") . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br>1<br><br><br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpay4fh9ah.php:31\n\
    Stack trace:\n#0 /tmp/tmpay4fh9ah.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpay4fh9ah.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last_char = substr($txt, -1);\n\
    \tif (ctype_alpha($last_char) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e \") . PHP_EOL;\n\
    echo check_if_last_char_is_a_letter(\"\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9i8i73w3.php:31\n\
    Stack trace:\n#0 /tmp/tmp9i8i73w3.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp9i8i73w3.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$lastChar = substr($txt, -1);\n\
    \tif (ctype_alpha($lastChar) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e \") . PHP_EOL;\n\
    echo check_if_last_char_is_a_letter(\"\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4zi3dz9g.php:31\n\
    Stack trace:\n#0 /tmp/tmp4zi3dz9g.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp4zi3dz9g.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && strpos($txt, $last) == strlen($txt) - 1) {\n\t\treturn\
    \ true;\n\t}\n\treturn false;\n}\necho check_if_last_char_is_a_letter(\"apple\
    \ pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") . \"\\\
    n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    \") . \"\\n\";\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmo1f9ofi.php:27\n\
    Stack trace:\n#0 /tmp/tmpmo1f9ofi.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpmo1f9ofi.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$txt = trim($txt);\n\tif (strlen($txt)\
    \ == 0) {\n\t\treturn false;\n\t}\n\t$lastChar = substr($txt, -1);\n\tif (ctype_alpha($lastChar))\
    \ {\n\t\treturn true;\n\t}\n\treturn false;\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e \") . PHP_EOL;\n\
    echo check_if_last_char_is_a_letter(\"\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n1\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpy3wrylff.php:31\n\
    Stack trace:\n#0 /tmp/tmpy3wrylff.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpy3wrylff.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \t$last_two = substr($txt, -2);\n\tif (ctype_alpha($last) && !ctype_alpha($last_two))\
    \ {\n\t\treturn true;\n\t}\n\treturn false;\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e \") . PHP_EOL;\n\
    echo check_if_last_char_is_a_letter(\"\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpl0u96uxy.php:31\n\
    Stack trace:\n#0 /tmp/tmpl0u96uxy.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpl0u96uxy.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    $last_char = substr($txt,\
    \ -1);\n    if (ctype_alpha($last_char) && !ctype_alpha(substr($txt, -2, 1)))\
    \ {\n        return true;\n    } else {\n        return false;\n    }\n}\necho\
    \ check_if_last_char_is_a_letter(\"apple pie\") . \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e\") . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \"\
    ) . \"<br>\";\necho check_if_last_char_is_a_letter(\"\") . \"<br>\";\nfunction\
    \ candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: <br>1<br><br><br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3kfek31y.php:31\n\
    Stack trace:\n#0 /tmp/tmp3kfek31y.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp3kfek31y.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$txt = trim($txt);\n\t$last\
    \ = substr($txt, -1);\n\tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2,\
    \ 1))) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e \") . PHP_EOL;\n\
    echo check_if_last_char_is_a_letter(\"\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n1\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsihks3yv.php:32\n\
    Stack trace:\n#0 /tmp/tmpsihks3yv.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpsihks3yv.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$lastChar = substr($txt, -1);\n\
    \tif(ctype_alpha($lastChar) && strpos($txt, $lastChar) == strlen($txt) - 1) {\n\
    \t\treturn true;\n\t}\n\treturn false;\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e\")\
    \ . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"<br>\"\
    ;\necho check_if_last_char_is_a_letter(\"\") . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br><br><br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbf9bnoe5.php:27\n\
    Stack trace:\n#0 /tmp/tmpbf9bnoe5.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpbf9bnoe5.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last_char = substr($txt, -1);\n\
    \tif (ctype_alpha($last_char) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpo5bydp4n.php:31\n\
    Stack trace:\n#0 /tmp/tmpo5bydp4n.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpo5bydp4n.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    $last = substr($txt, -1);\n\
    \    if (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n        return\
    \ true;\n    } else {\n        return false;\n    }\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7kf_2ezs.php:31\n\
    Stack trace:\n#0 /tmp/tmp7kf_2ezs.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp7kf_2ezs.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last_char = substr($txt, -1);\n\
    \tif (ctype_alpha($last_char) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0ua_d3xg.php:31\n\
    Stack trace:\n#0 /tmp/tmp0ua_d3xg.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp0ua_d3xg.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$lastChar = substr($txt, -1);\n\
    \tif (ctype_alpha($lastChar) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e\")\
    \ . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"<br>\"\
    ;\necho check_if_last_char_is_a_letter(\"\") . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br>1<br><br><br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2s408adt.php:31\n\
    Stack trace:\n#0 /tmp/tmp2s408adt.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp2s408adt.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$lastChar = substr($txt, -1);\n\
    \tif(ctype_alpha($lastChar) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\");\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1p4ehaf8.php:28\n\
    Stack trace:\n#0 /tmp/tmp1p4ehaf8.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp1p4ehaf8.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last_char = substr($txt, -1);\n\
    \tif (ctype_alpha($last_char) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn\
    \ true;\n\t}\n\treturn false;\n}\necho check_if_last_char_is_a_letter(\"apple\
    \ pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") . \"\\\
    n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    \") . \"\\n\";\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8dv34mol.php:30\n\
    Stack trace:\n#0 /tmp/tmp8dv34mol.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp8dv34mol.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && strpos($txt, $last) == strlen($txt) - 1) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e \") . PHP_EOL;\n\
    echo check_if_last_char_is_a_letter(\"\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp05pm17qd.php:28\n\
    Stack trace:\n#0 /tmp/tmp05pm17qd.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp05pm17qd.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && strpos($txt, $last) == strlen($txt) - 1) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpb0uq0vq_.php:28\n\
    Stack trace:\n#0 /tmp/tmpb0uq0vq_.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpb0uq0vq_.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last_char = substr($txt, -1);\n\
    \tif (ctype_alpha($last_char) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e \") . PHP_EOL;\n\
    echo check_if_last_char_is_a_letter(\"\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3qu0o1o_.php:31\n\
    Stack trace:\n#0 /tmp/tmp3qu0o1o_.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp3qu0o1o_.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e \") . PHP_EOL;\n\
    echo check_if_last_char_is_a_letter(\"\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpyf_1qdai.php:31\n\
    Stack trace:\n#0 /tmp/tmpyf_1qdai.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpyf_1qdai.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e \") . PHP_EOL;\n\
    echo check_if_last_char_is_a_letter(\"\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9wgtm5av.php:31\n\
    Stack trace:\n#0 /tmp/tmp9wgtm5av.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp9wgtm5av.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\tif (preg_match(\"/[a-zA-Z]$/\"\
    , $txt)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi\
    \ e\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \");\n\
    echo \"<br>\";\necho check_if_last_char_is_a_letter(\"\");\necho \"<br>\";\nfunction\
    \ candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>1<br><br><br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpi03yp48l.php:31\n\
    Stack trace:\n#0 /tmp/tmpi03yp48l.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpi03yp48l.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last_char = substr($txt, -1);\n\
    \tif (ctype_alpha($last_char) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e \") . PHP_EOL;\n\
    echo check_if_last_char_is_a_letter(\"\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1oa803qg.php:31\n\
    Stack trace:\n#0 /tmp/tmp1oa803qg.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1oa803qg.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last_char = substr($txt, -1);\n\
    \tif(ctype_alpha($last_char) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn\
    \ true;\n\t}\n\treturn false;\n}\necho check_if_last_char_is_a_letter(\"apple\
    \ pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") . \"\\\
    n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    \") . \"\\n\";\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8zy42el7.php:30\n\
    Stack trace:\n#0 /tmp/tmp8zy42el7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp8zy42el7.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\tif (strlen($txt) == 0) {\n\t\
    \treturn false;\n\t}\n\t$lastChar = substr($txt, -1);\n\t$lastChar = strtolower($lastChar);\n\
    \tif (preg_match(\"/[a-z]/\", $lastChar)) {\n\t\treturn true;\n\t}\n\treturn false;\n\
    }\necho check_if_last_char_is_a_letter(\"apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \"\
    ) . \"\\n\";\necho check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpig1q9zpk.php:31\n\
    Stack trace:\n#0 /tmp/tmpig1q9zpk.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpig1q9zpk.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && strpos($txt, $last) == strlen($txt) - 1) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e \") . PHP_EOL;\n\
    echo check_if_last_char_is_a_letter(\"\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgynm3bgy.php:28\n\
    Stack trace:\n#0 /tmp/tmpgynm3bgy.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpgynm3bgy.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$lastChar = substr($txt, -1);\n\
    \tif (ctype_alpha($lastChar) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e\")\
    \ . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"<br>\"\
    ;\necho check_if_last_char_is_a_letter(\"\") . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br>1<br><br><br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpig0l6_tl.php:31\n\
    Stack trace:\n#0 /tmp/tmpig0l6_tl.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpig0l6_tl.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && !ctype_alnum($last)) {\n\t\treturn true;\n\t} else\
    \ {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"apple pie\"\
    ) . PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e\") . PHP_EOL;\n\
    echo check_if_last_char_is_a_letter(\"apple pi e \") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"\
    \") . PHP_EOL;\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprivt7wbc.php:29\n\
    Stack trace:\n#0 /tmp/tmprivt7wbc.php(40): test()\n#1 {main}\n  thrown in /tmp/tmprivt7wbc.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \treturn ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1));\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") ? \"True\" : \"False\";\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e\") ? \"True\" : \"False\";\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e \") ? \"True\" : \"False\";\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    \") ? \"True\" : \"False\";\necho \"\\n\";\nfunction candidate(...$args) {\n \
    \   return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "False\nTrue\nFalse\nFalse\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpn61rzya3.php:31\n\
    Stack trace:\n#0 /tmp/tmpn61rzya3.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpn61rzya3.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \treturn ctype_alpha($last) && !ctype_alnum($last);\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") ? \"True\" : \"False\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e\") ? \"True\" : \"False\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e \") ? \"True\" : \"False\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    \") ? \"True\" : \"False\";\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: False<br>False<br>False<br>False
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2km22mja.php:28\n\
    Stack trace:\n#0 /tmp/tmp2km22mja.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp2km22mja.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvxyhhc0h.php:31\n\
    Stack trace:\n#0 /tmp/tmpvxyhhc0h.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpvxyhhc0h.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    $last_char = substr($txt,\
    \ -1);\n    return ctype_alpha($last_char) && !ctype_alnum($last_char);\n}\necho\
    \ check_if_last_char_is_a_letter(\"apple pie\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi\
    \ e \");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\");\nfunction\
    \ candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br><br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6ucvnebq.php:28\n\
    Stack trace:\n#0 /tmp/tmp6ucvnebq.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp6ucvnebq.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e \") . PHP_EOL;\n\
    echo check_if_last_char_is_a_letter(\"\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsg5s14hc.php:31\n\
    Stack trace:\n#0 /tmp/tmpsg5s14hc.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpsg5s14hc.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last_char = substr($txt, -1);\n\
    \tif (ctype_alpha($last_char) && strpos($txt, $last_char) === strlen($txt) - 1)\
    \ {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi\
    \ e\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \");\n\
    echo \"<br>\";\necho check_if_last_char_is_a_letter(\"\");\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br><br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2o5_r46x.php:31\n\
    Stack trace:\n#0 /tmp/tmp2o5_r46x.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp2o5_r46x.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$lastChar = substr($txt, -1);\n\
    \tif (ctype_alpha($lastChar) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdsb1ftw0.php:31\n\
    Stack trace:\n#0 /tmp/tmpdsb1ftw0.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpdsb1ftw0.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n  $last = substr($txt, -1);\n\
    \  if (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n    return\
    \ true;\n  } else {\n    return false;\n  }\n}\nfunction candidate(...$args) {\n\
    \    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbehhccnr.php:27\n\
    Stack trace:\n#0 /tmp/tmpbehhccnr.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpbehhccnr.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$lastChar = substr($txt, -1);\n\
    \tif (ctype_alpha($lastChar) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi\
    \ e\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \");\n\
    echo \"<br>\";\necho check_if_last_char_is_a_letter(\"\");\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br>1<br><br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjmnbp1a6.php:34\n\
    Stack trace:\n#0 /tmp/tmpjmnbp1a6.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpjmnbp1a6.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$lastChar = substr($txt, -1);\n\
    \tif (ctype_alpha($lastChar) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi\
    \ e\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \");\n\
    echo \"<br>\";\necho check_if_last_char_is_a_letter(\"\");\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br>1<br><br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpy9h9t38p.php:34\n\
    Stack trace:\n#0 /tmp/tmpy9h9t38p.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpy9h9t38p.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \t$last_is_letter = ctype_alpha($last);\n\t$last_is_space = ctype_space($last);\n\
    \t$last_is_word = preg_match('/[a-zA-Z]\\s/', $txt);\n\treturn $last_is_letter\
    \ && !$last_is_space && !$last_is_word;\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") ? \"True\" : \"False\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e\") ? \"True\" : \"False\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e \") ? \"True\" : \"False\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    \") ? \"True\" : \"False\";\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: False<br>False<br>False<br>False
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4nrimhio.php:30\n\
    Stack trace:\n#0 /tmp/tmp4nrimhio.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp4nrimhio.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \treturn ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1));\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e\")\
    \ . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"<br>\"\
    ;\necho check_if_last_char_is_a_letter(\"\") . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br>1<br><br><br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplnx5pywv.php:27\n\
    Stack trace:\n#0 /tmp/tmplnx5pywv.php(36): test()\n#1 {main}\n  thrown in /tmp/tmplnx5pywv.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif(ctype_alpha($last) && strpos($txt, $last) == strlen($txt) - 1) {\n\t\treturn\
    \ true;\n\t}\n\treturn false;\n}\necho check_if_last_char_is_a_letter(\"apple\
    \ pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") . \"\\\
    n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    \") . \"\\n\";\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7mp753u4.php:27\n\
    Stack trace:\n#0 /tmp/tmp7mp753u4.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp7mp753u4.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t}\n\treturn false;\n}\necho check_if_last_char_is_a_letter(\"apple pie\");\n\
    echo \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e\");\necho \"\
    <br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \");\necho \"<br>\"\
    ;\necho check_if_last_char_is_a_letter(\"\");\nfunction candidate(...$args) {\n\
    \    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br>1<br><br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphmpf3ebt.php:33\n\
    Stack trace:\n#0 /tmp/tmphmpf3ebt.php(42): test()\n#1 {main}\n  thrown in /tmp/tmphmpf3ebt.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t}\n\treturn false;\n}\necho check_if_last_char_is_a_letter(\"apple pie\") .\
    \ PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e\") . PHP_EOL;\necho\
    \ check_if_last_char_is_a_letter(\"apple pi e \") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"\
    \") . PHP_EOL;\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpnujb07oq.php:30\n\
    Stack trace:\n#0 /tmp/tmpnujb07oq.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpnujb07oq.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$lastChar = substr($txt, -1);\n\
    \tif (ctype_alpha($lastChar) && !ctype_alnum($lastChar)) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e \") . PHP_EOL;\n\
    echo check_if_last_char_is_a_letter(\"\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmps67phspb.php:29\n\
    Stack trace:\n#0 /tmp/tmps67phspb.php(40): test()\n#1 {main}\n  thrown in /tmp/tmps67phspb.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpynu8tgfi.php:31\n\
    Stack trace:\n#0 /tmp/tmpynu8tgfi.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpynu8tgfi.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e \") . PHP_EOL;\n\
    echo check_if_last_char_is_a_letter(\"\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1migbxwu.php:31\n\
    Stack trace:\n#0 /tmp/tmp1migbxwu.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1migbxwu.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    $lastChar = substr($txt,\
    \ -1);\n    if (ctype_alpha($lastChar) && !ctype_alpha(substr($txt, -2, 1))) {\n\
    \        return true;\n    } else {\n        return false;\n    }\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpb7_ans1z.php:31\n\
    Stack trace:\n#0 /tmp/tmpb7_ans1z.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpb7_ans1z.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n  $last = substr($txt, -1);\n\
    \  if (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n    return\
    \ true;\n  } else {\n    return false;\n  }\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e \") . PHP_EOL;\n\
    echo check_if_last_char_is_a_letter(\"\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwivbqi0z.php:31\n\
    Stack trace:\n#0 /tmp/tmpwivbqi0z.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpwivbqi0z.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \treturn ctype_alpha($last) && !ctype_alnum($last);\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8mtepbre.php:25\n\
    Stack trace:\n#0 /tmp/tmp8mtepbre.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp8mtepbre.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t}\n\treturn false;\n}\necho check_if_last_char_is_a_letter(\"apple pie\") .\
    \ PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e\") . PHP_EOL;\necho\
    \ check_if_last_char_is_a_letter(\"apple pi e \") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"\
    \") . PHP_EOL;\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp13hap3w5.php:30\n\
    Stack trace:\n#0 /tmp/tmp13hap3w5.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp13hap3w5.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && strpos($txt, $last) == strlen($txt) - 1) {\n\t\treturn\
    \ true;\n\t}\n\treturn false;\n}\necho check_if_last_char_is_a_letter(\"apple\
    \ pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") . \"\\\
    n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    \") . \"\\n\";\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzp3b46u_.php:27\n\
    Stack trace:\n#0 /tmp/tmpzp3b46u_.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpzp3b46u_.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last_char = substr($txt, -1);\n\
    \tif (preg_match(\"/[a-zA-Z]/\", $last_char) && !preg_match(\"/[a-zA-Z]/\", substr($txt,\
    \ -2, 1))) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp46mtw_kf.php:31\n\
    Stack trace:\n#0 /tmp/tmp46mtw_kf.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp46mtw_kf.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$lastChar = substr($txt, -1);\n\
    \tif (ctype_alpha($lastChar) && strpos($txt, $lastChar) == strlen($txt) - 1) {\n\
    \t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e \") . PHP_EOL;\n\
    echo check_if_last_char_is_a_letter(\"\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpy5rwosh2.php:28\n\
    Stack trace:\n#0 /tmp/tmpy5rwosh2.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpy5rwosh2.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp96hobly0.php:31\n\
    Stack trace:\n#0 /tmp/tmp96hobly0.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp96hobly0.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    $last = substr($txt, -1);\n\
    \    if (ctype_alpha($last) && strpos($txt, $last) == strlen($txt) - 1) {\n  \
    \      return true;\n    } else {\n        return false;\n    }\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e\")\
    \ . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"<br>\"\
    ;\necho check_if_last_char_is_a_letter(\"\") . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br><br><br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjqfykwno.php:28\n\
    Stack trace:\n#0 /tmp/tmpjqfykwno.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpjqfykwno.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && strpos($txt, $last) === strlen($txt) - 1) {\n\t\t\
    return true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjr93p538.php:28\n\
    Stack trace:\n#0 /tmp/tmpjr93p538.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpjr93p538.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e \") . PHP_EOL;\n\
    echo check_if_last_char_is_a_letter(\"\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppsnn5s1i.php:31\n\
    Stack trace:\n#0 /tmp/tmppsnn5s1i.php(40): test()\n#1 {main}\n  thrown in /tmp/tmppsnn5s1i.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpamuil4mx.php:31\n\
    Stack trace:\n#0 /tmp/tmpamuil4mx.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpamuil4mx.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp33fg5s0y.php:31\n\
    Stack trace:\n#0 /tmp/tmp33fg5s0y.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp33fg5s0y.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1ik1l7w9.php:31\n\
    Stack trace:\n#0 /tmp/tmp1ik1l7w9.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1ik1l7w9.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$txt = trim($txt);\n\tif (strlen($txt)\
    \ == 0) {\n\t\treturn false;\n\t}\n\t$last_char = substr($txt, -1);\n\tif (ctype_alpha($last_char))\
    \ {\n\t\treturn true;\n\t}\n\treturn false;\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n1\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpq321vwle.php:31\n\
    Stack trace:\n#0 /tmp/tmpq321vwle.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpq321vwle.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && strpos($txt, $last) == strlen($txt) - 1) {\n\t\treturn\
    \ true;\n\t}\n\treturn false;\n}\necho check_if_last_char_is_a_letter(\"apple\
    \ pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") . \"\\\
    n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    \") . \"\\n\";\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpy3ty2tzs.php:27\n\
    Stack trace:\n#0 /tmp/tmpy3ty2tzs.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpy3ty2tzs.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$lastChar = substr($txt, -1);\n\
    \tif (ctype_alpha($lastChar) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi\
    \ e\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \");\n\
    echo \"<br>\";\necho check_if_last_char_is_a_letter(\"\");\necho \"<br>\";\necho\
    \ check_if_last_char_is_a_letter(\"apple p\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple p \");\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: <br>1<br><br><br>1<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsrfwwnqr.php:38\n\
    Stack trace:\n#0 /tmp/tmpsrfwwnqr.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpsrfwwnqr.php\
    \ on line 38\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e \") . PHP_EOL;\n\
    echo check_if_last_char_is_a_letter(\"\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvoxmt46d.php:31\n\
    Stack trace:\n#0 /tmp/tmpvoxmt46d.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpvoxmt46d.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && strlen($txt) > 0) {\n\t\treturn true;\n\t} else {\n\
    \t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"apple pie\")\
    \ . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e\") . \"<br>\"\
    ;\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    \") . \"<br>\";\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>1<br><br><br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqle_gw8z.php:28\n\
    Stack trace:\n#0 /tmp/tmpqle_gw8z.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpqle_gw8z.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$txt = trim($txt);\n\tif (strlen($txt)\
    \ == 0) {\n\t\treturn false;\n\t}\n\t$lastChar = substr($txt, -1);\n\tif (ctype_alpha($lastChar))\
    \ {\n\t\treturn true;\n\t}\n\treturn false;\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n1\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpquhfgys3.php:31\n\
    Stack trace:\n#0 /tmp/tmpquhfgys3.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpquhfgys3.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    $last = substr($txt, -1);\n\
    \    if (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n        return\
    \ true;\n    } else {\n        return false;\n    }\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1lpdx2rp.php:31\n\
    Stack trace:\n#0 /tmp/tmp1lpdx2rp.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1lpdx2rp.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && strpos($txt, $last) == strlen($txt) - 1) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e \") . PHP_EOL;\n\
    echo check_if_last_char_is_a_letter(\"\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphj86gbx0.php:28\n\
    Stack trace:\n#0 /tmp/tmphj86gbx0.php(40): test()\n#1 {main}\n  thrown in /tmp/tmphj86gbx0.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    $last = substr($txt, -1);\n\
    \    if (ctype_alpha($last) && strpos($txt, $last) == strlen($txt) - 1) {\n  \
    \      return true;\n    } else {\n        return false;\n    }\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e\")\
    \ . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"<br>\"\
    ;\necho check_if_last_char_is_a_letter(\"\") . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br><br><br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwq786yvk.php:28\n\
    Stack trace:\n#0 /tmp/tmpwq786yvk.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpwq786yvk.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception

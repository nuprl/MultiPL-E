name: HumanEval_74_total_match
language: php
results:
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$sum1 = 0;\n\t$sum2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$sum1 += strlen($value);\n\
    \t}\n\tforeach ($lst2 as $value) {\n\t\t$sum2 += strlen($value);\n\t}\n\tif ($sum1\
    \ < $sum2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\t}\n}\necho \"\
    <pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi', 'hi', 'admin',\
    \ 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpi3x8yqin.php:49\n\
    Stack trace:\n#0 /tmp/tmpi3x8yqin.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpi3x8yqin.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $total1 = 0;\n    $total2 = 0;\n    for ($i = 0; $i < count($lst1); $i++)\
    \ {\n        $total1 += strlen($lst1[$i]);\n    }\n    for ($i = 0; $i < count($lst2);\
    \ $i++) {\n        $total2 += strlen($lst2[$i]);\n    }\n    if ($total1 < $total2)\
    \ {\n        return $lst1;\n    } else {\n        return $lst2;\n    }\n}\necho\
    \ total_match(['hi', 'admin'], ['hI', 'Hi']);\nfunction candidate(...$args) {\n\
    \    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: Array
  stderr: "PHP Warning:  Array to string conversion in /tmp/tmp4edvwbxt.php on line\
    \ 26\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4edvwbxt.php:38\n\
    Stack trace:\n#0 /tmp/tmp4edvwbxt.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp4edvwbxt.php\
    \ on line 38\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7795ioco.php:49\n\
    Stack trace:\n#0 /tmp/tmp7795ioco.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp7795ioco.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpasf6xhj0.php:49\n\
    Stack trace:\n#0 /tmp/tmpasf6xhj0.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpasf6xhj0.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $total1 = 0;\n    $total2 = 0;\n    foreach($lst1 as $word) {\n     \
    \   $total1 += strlen($word);\n    }\n    foreach($lst2 as $word) {\n        $total2\
    \ += strlen($word);\n    }\n    if($total1 < $total2) {\n        return $lst1;\n\
    \    } else {\n        return $lst2;\n    }\n}\necho implode(', ', total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"<br>\";\necho implode(', ', total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"<br>\";\necho implode(',\
    \ ', total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"<br>\";\necho\
    \ implode(', ', total_match(['4'], ['1', '2', '3', '4', '5']));\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: hI, Hi<br>hi, admin<br>hI, hi, hi<br>4
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsm9jx30m.php:44\n\
    Stack trace:\n#0 /tmp/tmpsm9jx30m.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpsm9jx30m.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_total = 0;\n\t$lst2_total = 0;\n\tfor ($i=0; $i < count($lst1); $i++)\
    \ { \n\t\t$lst1_total += strlen($lst1[$i]);\n\t}\n\tfor ($i=0; $i < count($lst2);\
    \ $i++) { \n\t\t$lst2_total += strlen($lst2[$i]);\n\t}\n\tif ($lst1_total < $lst2_total)\
    \ {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\t}\n}\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho\
    \ \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI',\
    \ 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsq3m4he0.php:49\n\
    Stack trace:\n#0 /tmp/tmpsq3m4he0.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpsq3m4he0.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $total1 = 0;\n    $total2 = 0;\n    foreach($lst1 as $item) {\n     \
    \   $total1 += strlen($item);\n    }\n    foreach($lst2 as $item) {\n        $total2\
    \ += strlen($item);\n    }\n    if($total1 < $total2) {\n        return $lst1;\n\
    \    } else {\n        return $lst2;\n    }\n}\necho total_match(['hi', 'admin'],\
    \ ['hI', 'Hi']);\necho \"<br>\";\necho total_match(['hi', 'admin'], ['hi', 'hi',\
    \ 'admin', 'project']);\necho \"<br>\";\necho total_match(['hi', 'admin'], ['hI',\
    \ 'hi', 'hi']);\necho \"<br>\";\necho total_match(['4'], ['1', '2', '3', '4',\
    \ '5']);\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: Array<br>Array<br>Array<br>Array
  stderr: "PHP Warning:  Array to string conversion in /tmp/tmpsn4u_gco.php on line\
    \ 26\nPHP Warning:  Array to string conversion in /tmp/tmpsn4u_gco.php on line\
    \ 28\nPHP Warning:  Array to string conversion in /tmp/tmpsn4u_gco.php on line\
    \ 30\nPHP Warning:  Array to string conversion in /tmp/tmpsn4u_gco.php on line\
    \ 32\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsn4u_gco.php:44\n\
    Stack trace:\n#0 /tmp/tmpsn4u_gco.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpsn4u_gco.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$count1 = 0;\n\t$count2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$count1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$count2 += strlen($value);\n\
    \t}\n\tif ($count1 < $count2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpiru2ks6e.php:49\n\
    Stack trace:\n#0 /tmp/tmpiru2ks6e.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpiru2ks6e.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpu9jfwt2i.php:49\n\
    Stack trace:\n#0 /tmp/tmpu9jfwt2i.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpu9jfwt2i.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $total1 = 0;\n    $total2 = 0;\n    foreach($lst1 as $item) {\n     \
    \   $total1 += strlen($item);\n    }\n    foreach($lst2 as $item) {\n        $total2\
    \ += strlen($item);\n    }\n    if($total1 < $total2) {\n        return $lst1;\n\
    \    } else {\n        return $lst2;\n    }\n}\necho implode(', ', total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho '<br>';\necho implode(', ', total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho '<br>';\necho implode(',\
    \ ', total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho '<br>';\necho implode(',\
    \ ', total_match(['4'], ['1', '2', '3', '4', '5']));\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: hI, Hi<br>hi, admin<br>hI, hi, hi<br>4
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpoa1a7628.php:44\n\
    Stack trace:\n#0 /tmp/tmpoa1a7628.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpoa1a7628.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5jxgdn8g.php:49\n\
    Stack trace:\n#0 /tmp/tmp5jxgdn8g.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp5jxgdn8g.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_total = 0;\n\t$lst2_total = 0;\n\tforeach ($lst1 as $value) {\n\t\
    \t$lst1_total += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$lst2_total\
    \ += strlen($value);\n\t}\n\tif ($lst1_total < $lst2_total) {\n\t\treturn $lst1;\n\
    \t} else {\n\t\treturn $lst2;\n\t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjuu9lwd0.php:49\n\
    Stack trace:\n#0 /tmp/tmpjuu9lwd0.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpjuu9lwd0.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmet9y_c_.php:49\n\
    Stack trace:\n#0 /tmp/tmpmet9y_c_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpmet9y_c_.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $total1 = 0;\n    $total2 = 0;\n    foreach($lst1 as $str) {\n      \
    \  $total1 += strlen($str);\n    }\n    foreach($lst2 as $str) {\n        $total2\
    \ += strlen($str);\n    }\n    if($total1 < $total2) {\n        return $lst1;\n\
    \    } else {\n        return $lst2;\n    }\n}\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp89yx8xbi.php:49\n\
    Stack trace:\n#0 /tmp/tmp89yx8xbi.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp89yx8xbi.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0c2me9w5.php:49\n\
    Stack trace:\n#0 /tmp/tmp0c2me9w5.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp0c2me9w5.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpk10fxhn5.php:49\n\
    Stack trace:\n#0 /tmp/tmpk10fxhn5.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpk10fxhn5.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1aiqcr50.php:41\n\
    Stack trace:\n#0 /tmp/tmp1aiqcr50.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp1aiqcr50.php\
    \ on line 41\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$sum1 = 0;\n\t$sum2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$sum1 += strlen($value);\n\
    \t}\n\tforeach ($lst2 as $value) {\n\t\t$sum2 += strlen($value);\n\t}\n\tif ($sum1\
    \ < $sum2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\t}\n}\necho \"\
    <pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi', 'hi', 'admin',\
    \ 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6j447wqd.php:49\n\
    Stack trace:\n#0 /tmp/tmp6j447wqd.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp6j447wqd.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3rf2ln60.php:40\n\
    Stack trace:\n#0 /tmp/tmp3rf2ln60.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp3rf2ln60.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_count = 0;\n\t$lst2_count = 0;\n\tfor ($i=0; $i < count($lst1); $i++)\
    \ { \n\t\t$lst1_count += strlen($lst1[$i]);\n\t}\n\tfor ($i=0; $i < count($lst2);\
    \ $i++) { \n\t\t$lst2_count += strlen($lst2[$i]);\n\t}\n\tif ($lst1_count < $lst2_count)\
    \ {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\t}\n}\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho\
    \ \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI',\
    \ 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpefh9gwsp.php:49\n\
    Stack trace:\n#0 /tmp/tmpefh9gwsp.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpefh9gwsp.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpi090xidi.php:49\n\
    Stack trace:\n#0 /tmp/tmpi090xidi.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpi090xidi.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_total = 0;\n\t$lst2_total = 0;\n\tforeach ($lst1 as $value) {\n\t\
    \t$lst1_total += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$lst2_total\
    \ += strlen($value);\n\t}\n\tif ($lst1_total < $lst2_total) {\n\t\treturn $lst1;\n\
    \t} else {\n\t\treturn $lst2;\n\t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpj4640ceg.php:49\n\
    Stack trace:\n#0 /tmp/tmpj4640ceg.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpj4640ceg.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 > $total2) {\n\t\treturn $lst2;\n\t} else {\n\t\treturn $lst1;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $lst1_total = 0;\n    $lst2_total = 0;\n    foreach($lst1 as $str) {\n\
    \        $lst1_total += strlen($str);\n    }\n    foreach($lst2 as $str) {\n \
    \       $lst2_total += strlen($str);\n    }\n    if($lst1_total < $lst2_total)\
    \ {\n        return $lst1;\n    } else {\n        return $lst2;\n    }\n}\necho\
    \ implode(', ', total_match(['hi', 'admin'], ['hI', 'Hi']));\necho \"<br>\";\n\
    echo implode(', ', total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']));\n\
    echo \"<br>\";\necho implode(', ', total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\n\
    echo \"<br>\";\necho implode(', ', total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    function candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"\
    hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: hI, Hi<br>hi, admin<br>hI, hi, hi<br>4
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp44j78yo3.php:44\n\
    Stack trace:\n#0 /tmp/tmp44j78yo3.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp44j78yo3.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $word) {\n\t\t$total1\
    \ += strlen($word);\n\t}\n\tforeach ($lst2 as $word) {\n\t\t$total2 += strlen($word);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho total_match(['hi', 'admin'], ['hI', 'Hi']);\necho \"<br>\";\necho\
    \ total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']);\necho \"<br>\"\
    ;\necho total_match(['hi', 'admin'], ['hI', 'hi', 'hi']);\necho \"<br>\";\necho\
    \ total_match(['4'], ['1', '2', '3', '4', '5']);\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: Array<br>Array<br>Array<br>Array
  stderr: "PHP Warning:  Array to string conversion in /tmp/tmpre3jnw18.php on line\
    \ 26\nPHP Warning:  Array to string conversion in /tmp/tmpre3jnw18.php on line\
    \ 28\nPHP Warning:  Array to string conversion in /tmp/tmpre3jnw18.php on line\
    \ 30\nPHP Warning:  Array to string conversion in /tmp/tmpre3jnw18.php on line\
    \ 32\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpre3jnw18.php:44\n\
    Stack trace:\n#0 /tmp/tmpre3jnw18.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpre3jnw18.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfvni75j1.php:49\n\
    Stack trace:\n#0 /tmp/tmpfvni75j1.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpfvni75j1.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_total = 0;\n\t$lst2_total = 0;\n\tforeach ($lst1 as $item) {\n\t\t\
    $lst1_total += strlen($item);\n\t}\n\tforeach ($lst2 as $item) {\n\t\t$lst2_total\
    \ += strlen($item);\n\t}\n\tif ($lst1_total < $lst2_total) {\n\t\treturn $lst1;\n\
    \t} else {\n\t\treturn $lst2;\n\t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4ddb58df.php:49\n\
    Stack trace:\n#0 /tmp/tmp4ddb58df.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp4ddb58df.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_total = 0;\n\t$lst2_total = 0;\n\tforeach ($lst1 as $value) {\n\t\
    \t$lst1_total += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$lst2_total\
    \ += strlen($value);\n\t}\n\tif ($lst1_total < $lst2_total) {\n\t\treturn $lst1;\n\
    \t} else {\n\t\treturn $lst2;\n\t}\n}\necho total_match(['hi', 'admin'], ['hI',\
    \ 'Hi']);\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: Array
  stderr: "PHP Warning:  Array to string conversion in /tmp/tmpqrd9_oz_.php on line\
    \ 26\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqrd9_oz_.php:38\n\
    Stack trace:\n#0 /tmp/tmpqrd9_oz_.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpqrd9_oz_.php\
    \ on line 38\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpb4a1jny_.php:49\n\
    Stack trace:\n#0 /tmp/tmpb4a1jny_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpb4a1jny_.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpr0obaelb.php:40\n\
    Stack trace:\n#0 /tmp/tmpr0obaelb.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpr0obaelb.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\n\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1ezfup95.php:52\n\
    Stack trace:\n#0 /tmp/tmp1ezfup95.php(57): test()\n#1 {main}\n  thrown in /tmp/tmp1ezfup95.php\
    \ on line 52\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $total1 = 0;\n    $total2 = 0;\n    foreach($lst1 as $word) {\n     \
    \   $total1 += strlen($word);\n    }\n    foreach($lst2 as $word) {\n        $total2\
    \ += strlen($word);\n    }\n    if($total1 < $total2) {\n        return $lst1;\n\
    \    } else {\n        return $lst2;\n    }\n}\necho implode(\", \", total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"<br>\";\necho implode(\", \", total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"<br>\";\necho implode(\"\
    , \", total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"<br>\";\necho\
    \ implode(\", \", total_match(['4'], ['1', '2', '3', '4', '5']));\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: hI, Hi<br>hi, admin<br>hI, hi, hi<br>4
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp67c4vryx.php:44\n\
    Stack trace:\n#0 /tmp/tmp67c4vryx.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp67c4vryx.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_total = 0;\n\t$lst2_total = 0;\n\tforeach ($lst1 as $value) {\n\t\
    \t$lst1_total += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$lst2_total\
    \ += strlen($value);\n\t}\n\tif ($lst1_total < $lst2_total) {\n\t\treturn $lst1;\n\
    \t} else {\n\t\treturn $lst2;\n\t}\n}\necho total_match(['hi', 'admin'], ['hI',\
    \ 'Hi']);\necho \"<br>\";\necho total_match(['hi', 'admin'], ['hi', 'hi', 'admin',\
    \ 'project']);\necho \"<br>\";\necho total_match(['hi', 'admin'], ['hI', 'hi',\
    \ 'hi']);\necho \"<br>\";\necho total_match(['4'], ['1', '2', '3', '4', '5']);\n\
    function candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"\
    hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: Array<br>Array<br>Array<br>Array
  stderr: "PHP Warning:  Array to string conversion in /tmp/tmptvlhcg0r.php on line\
    \ 26\nPHP Warning:  Array to string conversion in /tmp/tmptvlhcg0r.php on line\
    \ 28\nPHP Warning:  Array to string conversion in /tmp/tmptvlhcg0r.php on line\
    \ 30\nPHP Warning:  Array to string conversion in /tmp/tmptvlhcg0r.php on line\
    \ 32\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptvlhcg0r.php:44\n\
    Stack trace:\n#0 /tmp/tmptvlhcg0r.php(49): test()\n#1 {main}\n  thrown in /tmp/tmptvlhcg0r.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpouwow4qb.php:40\n\
    Stack trace:\n#0 /tmp/tmpouwow4qb.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpouwow4qb.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2hp1yuyp.php:49\n\
    Stack trace:\n#0 /tmp/tmp2hp1yuyp.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp2hp1yuyp.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_total = 0;\n\t$lst2_total = 0;\n\tforeach ($lst1 as $word) {\n\t\t\
    $lst1_total += strlen($word);\n\t}\n\tforeach ($lst2 as $word) {\n\t\t$lst2_total\
    \ += strlen($word);\n\t}\n\tif ($lst1_total < $lst2_total) {\n\t\treturn $lst1;\n\
    \t} else {\n\t\treturn $lst2;\n\t}\n}\necho implode(\", \", total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"<br>\";\necho implode(\", \", total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"<br>\";\necho implode(\"\
    , \", total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"<br>\";\necho\
    \ implode(\", \", total_match(['4'], ['1', '2', '3', '4', '5']));\necho \"<br>\"\
    ;\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"\
    hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: hI, Hi<br>hi, admin<br>hI, hi, hi<br>4<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpypd2d1ss.php:45\n\
    Stack trace:\n#0 /tmp/tmpypd2d1ss.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpypd2d1ss.php\
    \ on line 45\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_total = 0;\n\t$lst2_total = 0;\n\tforeach ($lst1 as $str) {\n\t\t\
    $lst1_total += strlen($str);\n\t}\n\tforeach ($lst2 as $str) {\n\t\t$lst2_total\
    \ += strlen($str);\n\t}\n\tif ($lst1_total < $lst2_total) {\n\t\treturn $lst1;\n\
    \t} else {\n\t\treturn $lst2;\n\t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpuqfo6yay.php:49\n\
    Stack trace:\n#0 /tmp/tmpuqfo6yay.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpuqfo6yay.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpu9xifgne.php:49\n\
    Stack trace:\n#0 /tmp/tmpu9xifgne.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpu9xifgne.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $total1 = 0;\n    $total2 = 0;\n    foreach($lst1 as $str) {\n      \
    \  $total1 += strlen($str);\n    }\n    foreach($lst2 as $str) {\n        $total2\
    \ += strlen($str);\n    }\n    if($total1 < $total2) {\n        return $lst1;\n\
    \    } else {\n        return $lst2;\n    }\n}\necho implode(\", \", total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"<br>\";\necho implode(\", \", total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"<br>\";\necho implode(\"\
    , \", total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"<br>\";\necho\
    \ implode(\", \", total_match(['4'], ['1', '2', '3', '4', '5']));\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: hI, Hi<br>hi, admin<br>hI, hi, hi<br>4
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbbke8mof.php:44\n\
    Stack trace:\n#0 /tmp/tmpbbke8mof.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpbbke8mof.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_total = 0;\n\t$lst2_total = 0;\n\tforeach ($lst1 as $key => $value)\
    \ {\n\t\t$lst1_total += strlen($value);\n\t}\n\tforeach ($lst2 as $key => $value)\
    \ {\n\t\t$lst2_total += strlen($value);\n\t}\n\tif ($lst1_total == $lst2_total)\
    \ {\n\t\treturn $lst1;\n\t} elseif ($lst1_total < $lst2_total) {\n\t\treturn $lst1;\n\
    \t} else {\n\t\treturn $lst2;\n\t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $sum1 = 0;\n    $sum2 = 0;\n    foreach($lst1 as $l1) {\n        $sum1\
    \ += strlen($l1);\n    }\n    foreach($lst2 as $l2) {\n        $sum2 += strlen($l2);\n\
    \    }\n    if($sum1 < $sum2) {\n        return $lst1;\n    } else {\n       \
    \ return $lst2;\n    }\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'],\
    \ ['hI', 'Hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3y5y92a2.php:49\n\
    Stack trace:\n#0 /tmp/tmp3y5y92a2.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp3y5y92a2.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $lst1_total = 0;\n    $lst2_total = 0;\n    foreach($lst1 as $item) {\n\
    \        $lst1_total += strlen($item);\n    }\n    foreach($lst2 as $item) {\n\
    \        $lst2_total += strlen($item);\n    }\n    if($lst1_total < $lst2_total)\
    \ {\n        return $lst1;\n    } else {\n        return $lst2;\n    }\n}\necho\
    \ implode(\", \", total_match(['hi', 'admin'], ['hI', 'Hi']));\necho \"<br>\"\
    ;\necho implode(\", \", total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']));\n\
    echo \"<br>\";\necho implode(\", \", total_match(['hi', 'admin'], ['hI', 'hi',\
    \ 'hi']));\necho \"<br>\";\necho implode(\", \", total_match(['4'], ['1', '2',\
    \ '3', '4', '5']));\necho \"<br>\";\necho implode(\", \", total_match(['hi', 'admin'],\
    \ ['hI', 'Hi']));\necho \"<br>\";\necho implode(\", \", total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']));\necho \"<br>\";\necho implode(\", \", total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"<br>\";\necho implode(\", \", total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"<br>\";\necho implode(\", \", total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"<br>\";\necho implode(\", \", total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"<br>\";\necho implode(\"\
    , \", total_match(['hi', 'admin'], ['hI', 'hi',\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected identifier \"candidate\", expecting\
    \ \"(\" in /tmp/tmphxyv8lr8.php on line 47\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_total = 0;\n\t$lst2_total = 0;\n\tforeach ($lst1 as $value) {\n\t\
    \t$lst1_total += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$lst2_total\
    \ += strlen($value);\n\t}\n\tif ($lst1_total < $lst2_total) {\n\t\treturn $lst1;\n\
    \t} else {\n\t\treturn $lst2;\n\t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9iv2vy9z.php:49\n\
    Stack trace:\n#0 /tmp/tmp9iv2vy9z.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp9iv2vy9z.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpr0qgc4ce.php:49\n\
    Stack trace:\n#0 /tmp/tmpr0qgc4ce.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpr0qgc4ce.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $total1 = 0;\n    $total2 = 0;\n    foreach($lst1 as $str) {\n      \
    \  $total1 += strlen($str);\n    }\n    foreach($lst2 as $str) {\n        $total2\
    \ += strlen($str);\n    }\n    if($total1 < $total2) {\n        return $lst1;\n\
    \    } else {\n        return $lst2;\n    }\n}\necho implode(\", \", total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"<br>\";\necho implode(\", \", total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"<br>\";\necho implode(\"\
    , \", total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"<br>\";\necho\
    \ implode(\", \", total_match(['4'], ['1', '2', '3', '4', '5']));\necho \"<br>\"\
    ;\necho implode(\", \", total_match([], []));\nfunction candidate(...$args) {\n\
    \    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: hI, Hi<br>hi, admin<br>hI, hi, hi<br>4<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp__nl_ucr.php:46\n\
    Stack trace:\n#0 /tmp/tmp__nl_ucr.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp__nl_ucr.php\
    \ on line 46\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_total = 0;\n\t$lst2_total = 0;\n\tforeach ($lst1 as $value) {\n\t\
    \t$lst1_total += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$lst2_total\
    \ += strlen($value);\n\t}\n\tif ($lst1_total < $lst2_total) {\n\t\treturn $lst1;\n\
    \t} else {\n\t\treturn $lst2;\n\t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpttvud4uu.php:49\n\
    Stack trace:\n#0 /tmp/tmpttvud4uu.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpttvud4uu.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpl_kzlqbx.php:49\n\
    Stack trace:\n#0 /tmp/tmpl_kzlqbx.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpl_kzlqbx.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_total = 0;\n\t$lst2_total = 0;\n\tforeach ($lst1 as $word) {\n\t\t\
    $lst1_total += strlen($word);\n\t}\n\tforeach ($lst2 as $word) {\n\t\t$lst2_total\
    \ += strlen($word);\n\t}\n\tif ($lst1_total < $lst2_total) {\n\t\treturn $lst1;\n\
    \t} else {\n\t\treturn $lst2;\n\t}\n}\necho implode(\", \", total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"<br>\";\necho implode(\", \", total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"<br>\";\necho implode(\"\
    , \", total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"<br>\";\necho\
    \ implode(\", \", total_match(['4'], ['1', '2', '3', '4', '5']));\necho \"<br>\"\
    ;\necho implode(\", \", total_match(['hi', 'admin'], ['hI', 'Hi']));\necho \"\
    <br>\";\necho implode(\", \", total_match(['hi', 'admin'], ['hi', 'hi', 'admin',\
    \ 'project']));\necho \"<br>\";\necho implode(\", \", total_match(['hi', 'admin'],\
    \ ['hI', 'hi', 'hi']));\necho \"<br>\";\necho implode(\", \", total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"<br>\";\nfunction candidate(...$args) {\n\
    \    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: hI, Hi<br>hi, admin<br>hI, hi, hi<br>4<br>hI, Hi<br>hi, admin<br>hI, hi,
    hi<br>4<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpp33o4icy.php:53\n\
    Stack trace:\n#0 /tmp/tmpp33o4icy.php(58): test()\n#1 {main}\n  thrown in /tmp/tmpp33o4icy.php\
    \ on line 53\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_total = 0;\n\t$lst2_total = 0;\n\tforeach ($lst1 as $item) {\n\t\t\
    $lst1_total += strlen($item);\n\t}\n\tforeach ($lst2 as $item) {\n\t\t$lst2_total\
    \ += strlen($item);\n\t}\n\tif ($lst1_total < $lst2_total) {\n\t\treturn $lst1;\n\
    \t} else {\n\t\treturn $lst2;\n\t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqh1n34mr.php:49\n\
    Stack trace:\n#0 /tmp/tmpqh1n34mr.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpqh1n34mr.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $lst1_total = 0;\n    $lst2_total = 0;\n    foreach($lst1 as $item) {\n\
    \        $lst1_total += strlen($item);\n    }\n    foreach($lst2 as $item) {\n\
    \        $lst2_total += strlen($item);\n    }\n    if($lst1_total < $lst2_total)\
    \ {\n        return $lst1;\n    } else {\n        return $lst2;\n    }\n}\necho\
    \ implode(', ', total_match(['hi', 'admin'], ['hI', 'Hi']));\necho \"<br>\";\n\
    echo implode(', ', total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']));\n\
    echo \"<br>\";\necho implode(', ', total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\n\
    echo \"<br>\";\necho implode(', ', total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo \"<br>\";\necho implode(', ', total_match([], []));\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: hI, Hi<br>hi, admin<br>hI, hi, hi<br>4<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpi_rgwigg.php:46\n\
    Stack trace:\n#0 /tmp/tmpi_rgwigg.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpi_rgwigg.php\
    \ on line 46\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_total = 0;\n\t$lst2_total = 0;\n\tforeach ($lst1 as $value) {\n\t\
    \t$lst1_total += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$lst2_total\
    \ += strlen($value);\n\t}\n\tif ($lst1_total < $lst2_total) {\n\t\treturn $lst1;\n\
    \t} else {\n\t\treturn $lst2;\n\t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp71ns6yu5.php:49\n\
    Stack trace:\n#0 /tmp/tmp71ns6yu5.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp71ns6yu5.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplrsedyen.php:49\n\
    Stack trace:\n#0 /tmp/tmplrsedyen.php(54): test()\n#1 {main}\n  thrown in /tmp/tmplrsedyen.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_total = 0;\n\t$lst2_total = 0;\n\tforeach ($lst1 as $item) {\n\t\t\
    $lst1_total += strlen($item);\n\t}\n\tforeach ($lst2 as $item) {\n\t\t$lst2_total\
    \ += strlen($item);\n\t}\n\tif ($lst1_total < $lst2_total) {\n\t\treturn $lst1;\n\
    \t} else {\n\t\treturn $lst2;\n\t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpc01ot7mg.php:49\n\
    Stack trace:\n#0 /tmp/tmpc01ot7mg.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc01ot7mg.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$count1 = 0;\n\t$count2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$count1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$count2 += strlen($value);\n\
    \t}\n\tif ($count1 < $count2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwzkkfuqe.php:49\n\
    Stack trace:\n#0 /tmp/tmpwzkkfuqe.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpwzkkfuqe.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpf4wzzjit.php:49\n\
    Stack trace:\n#0 /tmp/tmpf4wzzjit.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpf4wzzjit.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $word) {\n\t\t$total1\
    \ += strlen($word);\n\t}\n\tforeach ($lst2 as $word) {\n\t\t$total2 += strlen($word);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho total_match(['hi', 'admin'], ['hI', 'Hi']);\necho \"<br>\";\necho\
    \ total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']);\necho \"<br>\"\
    ;\necho total_match(['hi', 'admin'], ['hI', 'hi', 'hi']);\necho \"<br>\";\necho\
    \ total_match(['4'], ['1', '2', '3', '4', '5']);\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: Array<br>Array<br>Array<br>Array
  stderr: "PHP Warning:  Array to string conversion in /tmp/tmpuiefax75.php on line\
    \ 26\nPHP Warning:  Array to string conversion in /tmp/tmpuiefax75.php on line\
    \ 28\nPHP Warning:  Array to string conversion in /tmp/tmpuiefax75.php on line\
    \ 30\nPHP Warning:  Array to string conversion in /tmp/tmpuiefax75.php on line\
    \ 32\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpuiefax75.php:44\n\
    Stack trace:\n#0 /tmp/tmpuiefax75.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpuiefax75.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $count1 = 0;\n    $count2 = 0;\n    for ($i = 0; $i < count($lst1); $i++)\
    \ {\n        $count1 += strlen($lst1[$i]);\n    }\n    for ($i = 0; $i < count($lst2);\
    \ $i++) {\n        $count2 += strlen($lst2[$i]);\n    }\n    if ($count1 < $count2)\
    \ {\n        return $lst1;\n    } else {\n        return $lst2;\n    }\n}\necho\
    \ \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi', 'hi', 'admin',\
    \ 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpa7pnnirl.php:49\n\
    Stack trace:\n#0 /tmp/tmpa7pnnirl.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpa7pnnirl.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$count1 = 0;\n\t$count2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$count1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$count2 += strlen($value);\n\
    \t}\n\tif ($count1 < $count2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvn21tx39.php:49\n\
    Stack trace:\n#0 /tmp/tmpvn21tx39.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpvn21tx39.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_total = 0;\n\t$lst2_total = 0;\n\tforeach ($lst1 as $value) {\n\t\
    \t$lst1_total += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$lst2_total\
    \ += strlen($value);\n\t}\n\tif ($lst1_total < $lst2_total) {\n\t\treturn $lst1;\n\
    \t} else {\n\t\treturn $lst2;\n\t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkd9gvl1b.php:49\n\
    Stack trace:\n#0 /tmp/tmpkd9gvl1b.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpkd9gvl1b.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9x3edy4f.php:49\n\
    Stack trace:\n#0 /tmp/tmp9x3edy4f.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp9x3edy4f.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$sum1 = 0;\n\t$sum2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$sum1 += strlen($value);\n\
    \t}\n\tforeach ($lst2 as $value) {\n\t\t$sum2 += strlen($value);\n\t}\n\tif ($sum1\
    \ < $sum2) {\n\t\treturn $lst1;\n\t} elseif ($sum1 > $sum2) {\n\t\treturn $lst2;\n\
    \t} else {\n\t\treturn $lst1;\n\t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_total = 0;\n\t$lst2_total = 0;\n\tforeach ($lst1 as $value) {\n\t\
    \t$lst1_total += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$lst2_total\
    \ += strlen($value);\n\t}\n\tif ($lst1_total < $lst2_total) {\n\t\treturn $lst1;\n\
    \t} else {\n\t\treturn $lst2;\n\t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpyrhsa2qn.php:49\n\
    Stack trace:\n#0 /tmp/tmpyrhsa2qn.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpyrhsa2qn.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $total1 = 0;\n    $total2 = 0;\n    foreach($lst1 as $word) {\n     \
    \   $total1 += strlen($word);\n    }\n    foreach($lst2 as $word) {\n        $total2\
    \ += strlen($word);\n    }\n    if($total1 < $total2) {\n        return $lst1;\n\
    \    } else {\n        return $lst2;\n    }\n}\necho total_match(['hi', 'admin'],\
    \ ['hI', 'Hi']);\necho \"<br>\";\necho total_match(['hi', 'admin'], ['hi', 'hi',\
    \ 'admin', 'project']);\necho \"<br>\";\necho total_match(['hi', 'admin'], ['hI',\
    \ 'hi', 'hi']);\necho \"<br>\";\necho total_match(['4'], ['1', '2', '3', '4',\
    \ '5']);\necho \"<br>\";\necho total_match([], []);\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: Array<br>Array<br>Array<br>Array<br>Array
  stderr: "PHP Warning:  Array to string conversion in /tmp/tmpgzwiyfyp.php on line\
    \ 26\nPHP Warning:  Array to string conversion in /tmp/tmpgzwiyfyp.php on line\
    \ 28\nPHP Warning:  Array to string conversion in /tmp/tmpgzwiyfyp.php on line\
    \ 30\nPHP Warning:  Array to string conversion in /tmp/tmpgzwiyfyp.php on line\
    \ 32\nPHP Warning:  Array to string conversion in /tmp/tmpgzwiyfyp.php on line\
    \ 34\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgzwiyfyp.php:46\n\
    Stack trace:\n#0 /tmp/tmpgzwiyfyp.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpgzwiyfyp.php\
    \ on line 46\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpn8rqitbp.php:49\n\
    Stack trace:\n#0 /tmp/tmpn8rqitbp.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpn8rqitbp.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $count1 = 0;\n    $count2 = 0;\n    foreach($lst1 as $item) {\n     \
    \   $count1 += strlen($item);\n    }\n    foreach($lst2 as $item) {\n        $count2\
    \ += strlen($item);\n    }\n    if($count1 < $count2) {\n        return $lst1;\n\
    \    } else {\n        return $lst2;\n    }\n}\necho implode(', ', total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"<br>\";\necho implode(', ', total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"<br>\";\necho implode(',\
    \ ', total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"<br>\";\necho\
    \ implode(', ', total_match(['4'], ['1', '2', '3', '4', '5']));\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: hI, Hi<br>hi, admin<br>hI, hi, hi<br>4
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptvsrd78u.php:44\n\
    Stack trace:\n#0 /tmp/tmptvsrd78u.php(49): test()\n#1 {main}\n  thrown in /tmp/tmptvsrd78u.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjs78wekv.php:49\n\
    Stack trace:\n#0 /tmp/tmpjs78wekv.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpjs78wekv.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_total = 0;\n\t$lst2_total = 0;\n\tforeach ($lst1 as $value) {\n\t\
    \t$lst1_total += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$lst2_total\
    \ += strlen($value);\n\t}\n\tif ($lst1_total < $lst2_total) {\n\t\treturn $lst1;\n\
    \t} else {\n\t\treturn $lst2;\n\t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp163rt0sc.php:49\n\
    Stack trace:\n#0 /tmp/tmp163rt0sc.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp163rt0sc.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_total = 0;\n\t$lst2_total = 0;\n\tforeach ($lst1 as $item) {\n\t\t\
    $lst1_total += strlen($item);\n\t}\n\tforeach ($lst2 as $item) {\n\t\t$lst2_total\
    \ += strlen($item);\n\t}\n\tif ($lst1_total < $lst2_total) {\n\t\treturn $lst1;\n\
    \t} else {\n\t\treturn $lst2;\n\t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpc9ixfrwn.php:49\n\
    Stack trace:\n#0 /tmp/tmpc9ixfrwn.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9ixfrwn.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$sum1 = 0;\n\t$sum2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$sum1 += strlen($value);\n\
    \t}\n\tforeach ($lst2 as $value) {\n\t\t$sum2 += strlen($value);\n\t}\n\tif ($sum1\
    \ < $sum2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\t}\n}\necho \"\
    <pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi', 'hi', 'admin',\
    \ 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvzogz6n9.php:49\n\
    Stack trace:\n#0 /tmp/tmpvzogz6n9.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpvzogz6n9.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpec1e2jim.php:49\n\
    Stack trace:\n#0 /tmp/tmpec1e2jim.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpec1e2jim.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqn4_cegk.php:40\n\
    Stack trace:\n#0 /tmp/tmpqn4_cegk.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpqn4_cegk.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzxo64vy4.php:49\n\
    Stack trace:\n#0 /tmp/tmpzxo64vy4.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpzxo64vy4.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbwcoir8a.php:49\n\
    Stack trace:\n#0 /tmp/tmpbwcoir8a.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpbwcoir8a.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_len = 0;\n\t$lst2_len = 0;\n\tforeach ($lst1 as $value) {\n\t\t$lst1_len\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$lst2_len += strlen($value);\n\
    \t}\n\tif ($lst1_len < $lst2_len) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn\
    \ $lst2;\n\t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI',\
    \ 'Hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpz8ltjai7.php:49\n\
    Stack trace:\n#0 /tmp/tmpz8ltjai7.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpz8ltjai7.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $lst1_total = 0;\n    $lst2_total = 0;\n    foreach($lst1 as $word) {\n\
    \        $lst1_total += strlen($word);\n    }\n    foreach($lst2 as $word) {\n\
    \        $lst2_total += strlen($word);\n    }\n    if($lst1_total < $lst2_total)\
    \ {\n        return $lst1;\n    } else {\n        return $lst2;\n    }\n}\necho\
    \ implode(', ', total_match(['hi', 'admin'], ['hI', 'Hi']));\necho '<br>';\necho\
    \ implode(', ', total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']));\n\
    echo '<br>';\necho implode(', ', total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\n\
    echo '<br>';\necho implode(', ', total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo '<br>';\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: hI, Hi<br>hi, admin<br>hI, hi, hi<br>4<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpoafkpuv8.php:45\n\
    Stack trace:\n#0 /tmp/tmpoafkpuv8.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpoafkpuv8.php\
    \ on line 45\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp52fmyr6w.php:49\n\
    Stack trace:\n#0 /tmp/tmp52fmyr6w.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp52fmyr6w.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_total = 0;\n\t$lst2_total = 0;\n\tforeach ($lst1 as $value) {\n\t\
    \t$lst1_total += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$lst2_total\
    \ += strlen($value);\n\t}\n\tif ($lst1_total < $lst2_total) {\n\t\treturn $lst1;\n\
    \t} else {\n\t\treturn $lst2;\n\t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpnv6o502r.php:49\n\
    Stack trace:\n#0 /tmp/tmpnv6o502r.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpnv6o502r.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2iafzltt.php:49\n\
    Stack trace:\n#0 /tmp/tmp2iafzltt.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp2iafzltt.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_len = 0;\n\t$lst2_len = 0;\n\tforeach ($lst1 as $item) {\n\t\t$lst1_len\
    \ += strlen($item);\n\t}\n\tforeach ($lst2 as $item) {\n\t\t$lst2_len += strlen($item);\n\
    \t}\n\tif ($lst1_len < $lst2_len) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn\
    \ $lst2;\n\t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI',\
    \ 'Hi']));\necho \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp799twreg.php:40\n\
    Stack trace:\n#0 /tmp/tmp799twreg.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp799twreg.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_count = 0;\n\t$lst2_count = 0;\n\tforeach ($lst1 as $value) {\n\t\
    \t$lst1_count += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$lst2_count\
    \ += strlen($value);\n\t}\n\tif ($lst1_count < $lst2_count) {\n\t\treturn $lst1;\n\
    \t} else {\n\t\treturn $lst2;\n\t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpii9ufpct.php:49\n\
    Stack trace:\n#0 /tmp/tmpii9ufpct.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpii9ufpct.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho total_match(['hi', 'admin'], ['hI', 'Hi']);\necho \"<br>\";\necho\
    \ total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']);\necho \"<br>\"\
    ;\necho total_match(['hi', 'admin'], ['hI', 'hi', 'hi']);\necho \"<br>\";\necho\
    \ total_match(['4'], ['1', '2', '3', '4', '5']);\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: Array<br>Array<br>Array<br>Array
  stderr: "PHP Warning:  Array to string conversion in /tmp/tmpdxvkchoj.php on line\
    \ 26\nPHP Warning:  Array to string conversion in /tmp/tmpdxvkchoj.php on line\
    \ 28\nPHP Warning:  Array to string conversion in /tmp/tmpdxvkchoj.php on line\
    \ 30\nPHP Warning:  Array to string conversion in /tmp/tmpdxvkchoj.php on line\
    \ 32\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdxvkchoj.php:44\n\
    Stack trace:\n#0 /tmp/tmpdxvkchoj.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpdxvkchoj.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7rbthf5a.php:49\n\
    Stack trace:\n#0 /tmp/tmp7rbthf5a.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp7rbthf5a.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_total = 0;\n\t$lst2_total = 0;\n\tforeach ($lst1 as $value) {\n\t\
    \t$lst1_total += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$lst2_total\
    \ += strlen($value);\n\t}\n\tif ($lst1_total < $lst2_total) {\n\t\treturn $lst1;\n\
    \t} else {\n\t\treturn $lst2;\n\t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmps1tjc0t0.php:49\n\
    Stack trace:\n#0 /tmp/tmps1tjc0t0.php(54): test()\n#1 {main}\n  thrown in /tmp/tmps1tjc0t0.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcdr51rpa.php:49\n\
    Stack trace:\n#0 /tmp/tmpcdr51rpa.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpcdr51rpa.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpu0r188tm.php:49\n\
    Stack trace:\n#0 /tmp/tmpu0r188tm.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpu0r188tm.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $total1 = 0;\n    $total2 = 0;\n    foreach($lst1 as $item) {\n     \
    \   $total1 += strlen($item);\n    }\n    foreach($lst2 as $item) {\n        $total2\
    \ += strlen($item);\n    }\n    if($total1 < $total2) {\n        return $lst1;\n\
    \    } else {\n        return $lst2;\n    }\n}\necho implode(\", \", total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"<br>\";\necho implode(\", \", total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"<br>\";\necho implode(\"\
    , \", total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"<br>\";\necho\
    \ implode(\", \", total_match(['4'], ['1', '2', '3', '4', '5']));\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: hI, Hi<br>hi, admin<br>hI, hi, hi<br>4
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppe968579.php:44\n\
    Stack trace:\n#0 /tmp/tmppe968579.php(49): test()\n#1 {main}\n  thrown in /tmp/tmppe968579.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8ee4yblw.php:49\n\
    Stack trace:\n#0 /tmp/tmp8ee4yblw.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp8ee4yblw.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_total = 0;\n\t$lst2_total = 0;\n\tforeach ($lst1 as $value) {\n\t\
    \t$lst1_total += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$lst2_total\
    \ += strlen($value);\n\t}\n\tif ($lst1_total < $lst2_total) {\n\t\treturn $lst1;\n\
    \t} else {\n\t\treturn $lst2;\n\t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqkvyqy4v.php:49\n\
    Stack trace:\n#0 /tmp/tmpqkvyqy4v.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpqkvyqy4v.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_len = 0;\n\t$lst2_len = 0;\n\tforeach ($lst1 as $str) {\n\t\t$lst1_len\
    \ += strlen($str);\n\t}\n\tforeach ($lst2 as $str) {\n\t\t$lst2_len += strlen($str);\n\
    \t}\n\treturn $lst1_len < $lst2_len ? $lst1 : $lst2;\n}\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6b4bkdev.php:45\n\
    Stack trace:\n#0 /tmp/tmp6b4bkdev.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp6b4bkdev.php\
    \ on line 45\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_total = 0;\n\t$lst2_total = 0;\n\tforeach ($lst1 as $value) {\n\t\
    \t$lst1_total += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$lst2_total\
    \ += strlen($value);\n\t}\n\tif ($lst1_total == $lst2_total) {\n\t\treturn $lst1;\n\
    \t} elseif ($lst1_total < $lst2_total) {\n\t\treturn $lst1;\n\t} else {\n\t\t\
    return $lst2;\n\t}\n}\necho \"<pre>\";\nprint_r(total_match(['4'], ['1', '2',\
    \ '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args) {\n    return\
    \ total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $lst) {\n\t\t$total1\
    \ += strlen($lst);\n\t}\n\tforeach ($lst2 as $lst) {\n\t\t$total2 += strlen($lst);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp54lbytni.php:49\n\
    Stack trace:\n#0 /tmp/tmp54lbytni.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp54lbytni.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $total1 = 0;\n    $total2 = 0;\n    foreach($lst1 as $item){\n      \
    \  $total1 += strlen($item);\n    }\n    foreach($lst2 as $item){\n        $total2\
    \ += strlen($item);\n    }\n    if($total1 < $total2){\n        return $lst1;\n\
    \    } else {\n        return $lst2;\n    }\n}\necho total_match(['hi', 'admin'],\
    \ ['hI', 'Hi']);\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: Array
  stderr: "PHP Warning:  Array to string conversion in /tmp/tmpbf92nf0i.php on line\
    \ 26\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbf92nf0i.php:38\n\
    Stack trace:\n#0 /tmp/tmpbf92nf0i.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpbf92nf0i.php\
    \ on line 38\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $total1 = 0;\n    $total2 = 0;\n    foreach($lst1 as $word) {\n     \
    \   $total1 += strlen($word);\n    }\n    foreach($lst2 as $word) {\n        $total2\
    \ += strlen($word);\n    }\n    if($total1 < $total2) {\n        return $lst1;\n\
    \    } else {\n        return $lst2;\n    }\n}\necho implode(\", \", total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"<br>\";\necho implode(\", \", total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"<br>\";\necho implode(\"\
    , \", total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"<br>\";\necho\
    \ implode(\", \", total_match(['4'], ['1', '2', '3', '4', '5']));\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: hI, Hi<br>hi, admin<br>hI, hi, hi<br>4
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8z715sjc.php:44\n\
    Stack trace:\n#0 /tmp/tmp8z715sjc.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp8z715sjc.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $count1 = 0;\n    $count2 = 0;\n    foreach($lst1 as $lst1_item) {\n\
    \        $count1 += strlen($lst1_item);\n    }\n    foreach($lst2 as $lst2_item)\
    \ {\n        $count2 += strlen($lst2_item);\n    }\n    if($count1 < $count2)\
    \ {\n        return $lst1;\n    } else {\n        return $lst2;\n    }\n}\necho\
    \ total_match(['hi', 'admin'], ['hI', 'Hi']);\nfunction candidate(...$args) {\n\
    \    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: Array
  stderr: "PHP Warning:  Array to string conversion in /tmp/tmp4iajmsmh.php on line\
    \ 26\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4iajmsmh.php:38\n\
    Stack trace:\n#0 /tmp/tmp4iajmsmh.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp4iajmsmh.php\
    \ on line 38\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7hbvo9ou.php:49\n\
    Stack trace:\n#0 /tmp/tmp7hbvo9ou.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp7hbvo9ou.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2fyluv6i.php:49\n\
    Stack trace:\n#0 /tmp/tmp2fyluv6i.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp2fyluv6i.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$count1 = 0;\n\t$count2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$count1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$count2 += strlen($value);\n\
    \t}\n\tif ($count1 < $count2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppr44beec.php:49\n\
    Stack trace:\n#0 /tmp/tmppr44beec.php(54): test()\n#1 {main}\n  thrown in /tmp/tmppr44beec.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplv377283.php:49\n\
    Stack trace:\n#0 /tmp/tmplv377283.php(54): test()\n#1 {main}\n  thrown in /tmp/tmplv377283.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$count1 = 0;\n\t$count2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$count1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$count2 += strlen($value);\n\
    \t}\n\tif ($count1 < $count2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbq_9j48d.php:49\n\
    Stack trace:\n#0 /tmp/tmpbq_9j48d.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpbq_9j48d.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpuwznaoi1.php:49\n\
    Stack trace:\n#0 /tmp/tmpuwznaoi1.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpuwznaoi1.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvfoclka2.php:49\n\
    Stack trace:\n#0 /tmp/tmpvfoclka2.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpvfoclka2.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $lst1_count = 0;\n    $lst2_count = 0;\n    foreach($lst1 as $item) {\n\
    \        $lst1_count += strlen($item);\n    }\n    foreach($lst2 as $item) {\n\
    \        $lst2_count += strlen($item);\n    }\n    if($lst1_count < $lst2_count)\
    \ {\n        return $lst1;\n    } else {\n        return $lst2;\n    }\n}\necho\
    \ \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi', 'hi', 'admin',\
    \ 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdbj9py5v.php:49\n\
    Stack trace:\n#0 /tmp/tmpdbj9py5v.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpdbj9py5v.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$count1 = 0;\n\t$count2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$count1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$count2 += strlen($value);\n\
    \t}\n\tif ($count1 < $count2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpz8pv27iu.php:49\n\
    Stack trace:\n#0 /tmp/tmpz8pv27iu.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpz8pv27iu.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $word) {\n\t\t$total1\
    \ += strlen($word);\n\t}\n\tforeach ($lst2 as $word) {\n\t\t$total2 += strlen($word);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho total_match(['hi', 'admin'], ['hI', 'Hi']);\necho \"<br>\";\necho\
    \ total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']);\necho \"<br>\"\
    ;\necho total_match(['hi', 'admin'], ['hI', 'hi', 'hi']);\necho \"<br>\";\necho\
    \ total_match(['4'], ['1', '2', '3', '4', '5']);\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: Array<br>Array<br>Array<br>Array
  stderr: "PHP Warning:  Array to string conversion in /tmp/tmpy4n10utj.php on line\
    \ 26\nPHP Warning:  Array to string conversion in /tmp/tmpy4n10utj.php on line\
    \ 28\nPHP Warning:  Array to string conversion in /tmp/tmpy4n10utj.php on line\
    \ 30\nPHP Warning:  Array to string conversion in /tmp/tmpy4n10utj.php on line\
    \ 32\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpy4n10utj.php:44\n\
    Stack trace:\n#0 /tmp/tmpy4n10utj.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpy4n10utj.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp899aezme.php:49\n\
    Stack trace:\n#0 /tmp/tmp899aezme.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp899aezme.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6ccs1o8y.php:49\n\
    Stack trace:\n#0 /tmp/tmp6ccs1o8y.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp6ccs1o8y.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_total = 0;\n\t$lst2_total = 0;\n\tforeach ($lst1 as $item) {\n\t\t\
    $lst1_total += strlen($item);\n\t}\n\tforeach ($lst2 as $item) {\n\t\t$lst2_total\
    \ += strlen($item);\n\t}\n\tif ($lst1_total < $lst2_total) {\n\t\treturn $lst1;\n\
    \t} else {\n\t\treturn $lst2;\n\t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzwdu3luu.php:49\n\
    Stack trace:\n#0 /tmp/tmpzwdu3luu.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpzwdu3luu.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $count1 = 0;\n    $count2 = 0;\n    foreach($lst1 as $value) {\n    \
    \    $count1 += strlen($value);\n    }\n    foreach($lst2 as $value) {\n     \
    \   $count2 += strlen($value);\n    }\n    if($count1 < $count2) {\n        return\
    \ $lst1;\n    } else {\n        return $lst2;\n    }\n}\necho implode(\", \",\
    \ total_match(['hi', 'admin'], ['hI', 'Hi']));\necho \"<br>\";\necho implode(\"\
    , \", total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"\
    <br>\";\necho implode(\", \", total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\n\
    echo \"<br>\";\necho implode(\", \", total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    function candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"\
    hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: hI, Hi<br>hi, admin<br>hI, hi, hi<br>4
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpeg3ntxox.php:44\n\
    Stack trace:\n#0 /tmp/tmpeg3ntxox.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpeg3ntxox.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_total = 0;\n\t$lst2_total = 0;\n\tforeach ($lst1 as $value) {\n\t\
    \t$lst1_total += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$lst2_total\
    \ += strlen($value);\n\t}\n\tif ($lst1_total < $lst2_total) {\n\t\treturn $lst1;\n\
    \t} else {\n\t\treturn $lst2;\n\t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp63f6s9ht.php:49\n\
    Stack trace:\n#0 /tmp/tmp63f6s9ht.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp63f6s9ht.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $total1 = 0;\n    $total2 = 0;\n    for ($i = 0; $i < count($lst1); $i++)\
    \ {\n        $total1 += strlen($lst1[$i]);\n    }\n    for ($i = 0; $i < count($lst2);\
    \ $i++) {\n        $total2 += strlen($lst2[$i]);\n    }\n    if ($total1 < $total2)\
    \ {\n        return $lst1;\n    } else {\n        return $lst2;\n    }\n}\necho\
    \ total_match(['hi', 'admin'], ['hI', 'Hi']);\nfunction candidate(...$args) {\n\
    \    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: Array
  stderr: "PHP Warning:  Array to string conversion in /tmp/tmp6xi74yiq.php on line\
    \ 26\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6xi74yiq.php:38\n\
    Stack trace:\n#0 /tmp/tmp6xi74yiq.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp6xi74yiq.php\
    \ on line 38\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_total = 0;\n\t$lst2_total = 0;\n\tforeach ($lst1 as $value) {\n\t\
    \t$lst1_total += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$lst2_total\
    \ += strlen($value);\n\t}\n\tif ($lst1_total < $lst2_total) {\n\t\treturn $lst1;\n\
    \t} else {\n\t\treturn $lst2;\n\t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpinxo79t4.php:49\n\
    Stack trace:\n#0 /tmp/tmpinxo79t4.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpinxo79t4.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppbhudskz.php:49\n\
    Stack trace:\n#0 /tmp/tmppbhudskz.php(54): test()\n#1 {main}\n  thrown in /tmp/tmppbhudskz.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_total = 0;\n\t$lst2_total = 0;\n\tfor ($i=0; $i < count($lst1); $i++)\
    \ { \n\t\t$lst1_total += strlen($lst1[$i]);\n\t}\n\tfor ($i=0; $i < count($lst2);\
    \ $i++) { \n\t\t$lst2_total += strlen($lst2[$i]);\n\t}\n\tif ($lst1_total < $lst2_total)\
    \ {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\t}\n}\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho\
    \ \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI',\
    \ 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpaenvxdvs.php:49\n\
    Stack trace:\n#0 /tmp/tmpaenvxdvs.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpaenvxdvs.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_len = 0;\n\t$lst2_len = 0;\n\tforeach ($lst1 as $value) {\n\t\t$lst1_len\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$lst2_len += strlen($value);\n\
    \t}\n\tif ($lst1_len < $lst2_len) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn\
    \ $lst2;\n\t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI',\
    \ 'Hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpf7xqw40d.php:49\n\
    Stack trace:\n#0 /tmp/tmpf7xqw40d.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpf7xqw40d.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_total = 0;\n\t$lst2_total = 0;\n\tforeach ($lst1 as $value) {\n\t\
    \t$lst1_total += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$lst2_total\
    \ += strlen($value);\n\t}\n\tif ($lst1_total < $lst2_total) {\n\t\treturn $lst1;\n\
    \t} else {\n\t\treturn $lst2;\n\t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgzln7tya.php:49\n\
    Stack trace:\n#0 /tmp/tmpgzln7tya.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpgzln7tya.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $lst1_total = 0;\n    $lst2_total = 0;\n    foreach($lst1 as $lst1_item)\
    \ {\n        $lst1_total += strlen($lst1_item);\n    }\n    foreach($lst2 as $lst2_item)\
    \ {\n        $lst2_total += strlen($lst2_item);\n    }\n    if($lst1_total < $lst2_total)\
    \ {\n        return $lst1;\n    } else {\n        return $lst2;\n    }\n}\necho\
    \ implode(', ', total_match(['hi', 'admin'], ['hI', 'Hi']));\necho '<br>';\necho\
    \ implode(', ', total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']));\n\
    echo '<br>';\necho implode(', ', total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\n\
    echo '<br>';\necho implode(', ', total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo '<br>';\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: hI, Hi<br>hi, admin<br>hI, hi, hi<br>4<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpc610j4y2.php:45\n\
    Stack trace:\n#0 /tmp/tmpc610j4y2.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpc610j4y2.php\
    \ on line 45\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpe2th_u5c.php:40\n\
    Stack trace:\n#0 /tmp/tmpe2th_u5c.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpe2th_u5c.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$sum1 = 0;\n\t$sum2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$sum1 += strlen($value);\n\
    \t}\n\tforeach ($lst2 as $value) {\n\t\t$sum2 += strlen($value);\n\t}\n\tif ($sum1\
    \ < $sum2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\t}\n}\necho \"\
    <pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi', 'hi', 'admin',\
    \ 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkk9nprtr.php:49\n\
    Stack trace:\n#0 /tmp/tmpkk9nprtr.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpkk9nprtr.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzo4egc39.php:40\n\
    Stack trace:\n#0 /tmp/tmpzo4egc39.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpzo4egc39.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $total1 = 0;\n    $total2 = 0;\n    foreach($lst1 as $item) {\n     \
    \   $total1 += strlen($item);\n    }\n    foreach($lst2 as $item) {\n        $total2\
    \ += strlen($item);\n    }\n    if($total1 < $total2) {\n        return $lst1;\n\
    \    } else {\n        return $lst2;\n    }\n}\necho total_match(['hi', 'admin'],\
    \ ['hI', 'Hi']);\necho total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']);\n\
    echo total_match(['hi', 'admin'], ['hI', 'hi', 'hi']);\necho total_match(['4'],\
    \ ['1', '2', '3', '4', '5']);\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ArrayArrayArrayArray
  stderr: "PHP Warning:  Array to string conversion in /tmp/tmpd3t8astz.php on line\
    \ 26\nPHP Warning:  Array to string conversion in /tmp/tmpd3t8astz.php on line\
    \ 27\nPHP Warning:  Array to string conversion in /tmp/tmpd3t8astz.php on line\
    \ 28\nPHP Warning:  Array to string conversion in /tmp/tmpd3t8astz.php on line\
    \ 29\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpd3t8astz.php:41\n\
    Stack trace:\n#0 /tmp/tmpd3t8astz.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpd3t8astz.php\
    \ on line 41\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqt25j1_b.php:49\n\
    Stack trace:\n#0 /tmp/tmpqt25j1_b.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpqt25j1_b.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpyjrw2fkz.php:49\n\
    Stack trace:\n#0 /tmp/tmpyjrw2fkz.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpyjrw2fkz.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp15pr7d0y.php:40\n\
    Stack trace:\n#0 /tmp/tmp15pr7d0y.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp15pr7d0y.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n  $total1 = 0;\n  $total2 = 0;\n  foreach($lst1 as $word) {\n    $total1\
    \ += strlen($word);\n  }\n  foreach($lst2 as $word) {\n    $total2 += strlen($word);\n\
    \  }\n  if($total1 < $total2) {\n    return $lst1;\n  } else {\n    return $lst2;\n\
    \  }\n}\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"\
    admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp00g584j5.php:37\n\
    Stack trace:\n#0 /tmp/tmp00g584j5.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp00g584j5.php\
    \ on line 37\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpa4ixx6n4.php:49\n\
    Stack trace:\n#0 /tmp/tmpa4ixx6n4.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpa4ixx6n4.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_total = 0;\n\t$lst2_total = 0;\n\tforeach ($lst1 as $value) {\n\t\
    \t$lst1_total += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$lst2_total\
    \ += strlen($value);\n\t}\n\tif ($lst1_total < $lst2_total) {\n\t\treturn $lst1;\n\
    \t} else {\n\t\treturn $lst2;\n\t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp66rxrjc4.php:49\n\
    Stack trace:\n#0 /tmp/tmp66rxrjc4.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp66rxrjc4.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_total = 0;\n\t$lst2_total = 0;\n\tforeach ($lst1 as $value) {\n\t\
    \t$lst1_total += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$lst2_total\
    \ += strlen($value);\n\t}\n\tif ($lst1_total < $lst2_total) {\n\t\treturn $lst1;\n\
    \t} else {\n\t\treturn $lst2;\n\t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjar55l0n.php:49\n\
    Stack trace:\n#0 /tmp/tmpjar55l0n.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpjar55l0n.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $total1 = 0;\n    $total2 = 0;\n    foreach($lst1 as $item) {\n     \
    \   $total1 += strlen($item);\n    }\n    foreach($lst2 as $item) {\n        $total2\
    \ += strlen($item);\n    }\n    if($total1 < $total2) {\n        return $lst1;\n\
    \    } else {\n        return $lst2;\n    }\n}\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"</pre>\";\n\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\"\
    ;\n\necho \"<pre>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpx037m3xa.php:52\n\
    Stack trace:\n#0 /tmp/tmpx037m3xa.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpx037m3xa.php\
    \ on line 52\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpd4d74xcc.php:49\n\
    Stack trace:\n#0 /tmp/tmpd4d74xcc.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpd4d74xcc.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_total = 0;\n\t$lst2_total = 0;\n\tforeach ($lst1 as $value) {\n\t\
    \t$lst1_total += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$lst2_total\
    \ += strlen($value);\n\t}\n\tif ($lst1_total < $lst2_total) {\n\t\treturn $lst1;\n\
    \t} else {\n\t\treturn $lst2;\n\t}\n}\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprarwzdol.php:40\n\
    Stack trace:\n#0 /tmp/tmprarwzdol.php(45): test()\n#1 {main}\n  thrown in /tmp/tmprarwzdol.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_total = 0;\n\t$lst2_total = 0;\n\tforeach ($lst1 as $key => $value)\
    \ {\n\t\t$lst1_total += strlen($value);\n\t}\n\tforeach ($lst2 as $key => $value)\
    \ {\n\t\t$lst2_total += strlen($value);\n\t}\n\tif ($lst1_total < $lst2_total)\
    \ {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\t}\n}\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\nfunction\
    \ candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\"\
    , \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"\
    )) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpeeyf0lr9.php:40\n\
    Stack trace:\n#0 /tmp/tmpeeyf0lr9.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpeeyf0lr9.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_sl0kbml.php:40\n\
    Stack trace:\n#0 /tmp/tmp_sl0kbml.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp_sl0kbml.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfsr0p9qb.php:49\n\
    Stack trace:\n#0 /tmp/tmpfsr0p9qb.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpfsr0p9qb.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgo8253gl.php:49\n\
    Stack trace:\n#0 /tmp/tmpgo8253gl.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpgo8253gl.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9dt7_j55.php:49\n\
    Stack trace:\n#0 /tmp/tmp9dt7_j55.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp9dt7_j55.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $count1 = 0;\n    $count2 = 0;\n    for ($i = 0; $i < count($lst1); $i++)\
    \ {\n        $count1 += strlen($lst1[$i]);\n    }\n    for ($i = 0; $i < count($lst2);\
    \ $i++) {\n        $count2 += strlen($lst2[$i]);\n    }\n    if ($count1 < $count2)\
    \ {\n        return $lst1;\n    } else {\n        return $lst2;\n    }\n}\necho\
    \ \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi', 'hi', 'admin',\
    \ 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp65radd1v.php:49\n\
    Stack trace:\n#0 /tmp/tmp65radd1v.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp65radd1v.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpk9576heq.php:49\n\
    Stack trace:\n#0 /tmp/tmpk9576heq.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpk9576heq.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_total = 0;\n\t$lst2_total = 0;\n\tforeach ($lst1 as $key => $value)\
    \ {\n\t\t$lst1_total += strlen($value);\n\t}\n\tforeach ($lst2 as $key => $value)\
    \ {\n\t\t$lst2_total += strlen($value);\n\t}\n\tif ($lst1_total < $lst2_total)\
    \ {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\t}\n}\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho\
    \ \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI',\
    \ 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4oslehfn.php:49\n\
    Stack trace:\n#0 /tmp/tmp4oslehfn.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp4oslehfn.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} elseif ($total1 > $total2)\
    \ {\n\t\treturn $lst2;\n\t} else {\n\t\treturn $lst1;\n\t}\n}\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho\
    \ \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI',\
    \ 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $lst1_total = 0;\n    $lst2_total = 0;\n    foreach($lst1 as $item) {\n\
    \        $lst1_total += strlen($item);\n    }\n    foreach($lst2 as $item) {\n\
    \        $lst2_total += strlen($item);\n    }\n    if($lst1_total < $lst2_total)\
    \ {\n        return $lst1;\n    } else {\n        return $lst2;\n    }\n}\necho\
    \ implode(', ', total_match(['hi', 'admin'], ['hI', 'Hi']));\necho '<br>';\necho\
    \ implode(', ', total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']));\n\
    echo '<br>';\necho implode(', ', total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\n\
    echo '<br>';\necho implode(', ', total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo '<br>';\necho implode(', ', total_match([], []));\necho '<br>';\nfunction\
    \ candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\"\
    , \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"\
    )) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: hI, Hi<br>hi, admin<br>hI, hi, hi<br>4<br><br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpf78t3nvw.php:47\n\
    Stack trace:\n#0 /tmp/tmpf78t3nvw.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpf78t3nvw.php\
    \ on line 47\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp39imfp6b.php:49\n\
    Stack trace:\n#0 /tmp/tmp39imfp6b.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp39imfp6b.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpt5yxy_ak.php:49\n\
    Stack trace:\n#0 /tmp/tmpt5yxy_ak.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpt5yxy_ak.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $str) {\n\t\t$total1\
    \ += strlen($str);\n\t}\n\tforeach ($lst2 as $str) {\n\t\t$total2 += strlen($str);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho implode(\", \", total_match(['hi', 'admin'], ['hI', 'Hi']));\necho\
    \ \"<br>\";\necho implode(\", \", total_match(['hi', 'admin'], ['hi', 'hi', 'admin',\
    \ 'project']));\necho \"<br>\";\necho implode(\", \", total_match(['hi', 'admin'],\
    \ ['hI', 'hi', 'hi']));\necho \"<br>\";\necho implode(\", \", total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"<br>\";\nfunction candidate(...$args) {\n\
    \    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: hI, Hi<br>hi, admin<br>hI, hi, hi<br>4<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpj39fr93a.php:45\n\
    Stack trace:\n#0 /tmp/tmpj39fr93a.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpj39fr93a.php\
    \ on line 45\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $total1 = 0;\n    $total2 = 0;\n    foreach($lst1 as $value) {\n    \
    \    $total1 += strlen($value);\n    }\n    foreach($lst2 as $value) {\n     \
    \   $total2 += strlen($value);\n    }\n    if($total1 < $total2) {\n        return\
    \ $lst1;\n    }\n    else {\n        return $lst2;\n    }\n}\necho \"<pre>\";\n\
    print_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho \"\
    <pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI',\
    \ 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpk7kubvg2.php:50\n\
    Stack trace:\n#0 /tmp/tmpk7kubvg2.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpk7kubvg2.php\
    \ on line 50\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpz7wqfswi.php:49\n\
    Stack trace:\n#0 /tmp/tmpz7wqfswi.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpz7wqfswi.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_total = 0;\n\t$lst2_total = 0;\n\tforeach ($lst1 as $value) {\n\t\
    \t$lst1_total += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$lst2_total\
    \ += strlen($value);\n\t}\n\tif ($lst1_total < $lst2_total) {\n\t\treturn $lst1;\n\
    \t} else {\n\t\treturn $lst2;\n\t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpekyjqnh6.php:49\n\
    Stack trace:\n#0 /tmp/tmpekyjqnh6.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpekyjqnh6.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tfor ($i=0; $i < count($lst1); $i++) { \n\
    \t\t$total1 += strlen($lst1[$i]);\n\t}\n\tfor ($i=0; $i < count($lst2); $i++)\
    \ { \n\t\t$total2 += strlen($lst2[$i]);\n\t}\n\tif ($total1 < $total2) {\n\t\t\
    return $lst1;\n\t} else {\n\t\treturn $lst2;\n\t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjhddai4p.php:49\n\
    Stack trace:\n#0 /tmp/tmpjhddai4p.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpjhddai4p.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_total = 0;\n\t$lst2_total = 0;\n\tforeach ($lst1 as $value) {\n\t\
    \t$lst1_total += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$lst2_total\
    \ += strlen($value);\n\t}\n\tif ($lst1_total < $lst2_total) {\n\t\treturn $lst1;\n\
    \t} else {\n\t\treturn $lst2;\n\t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5b7h15cu.php:49\n\
    Stack trace:\n#0 /tmp/tmp5b7h15cu.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp5b7h15cu.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_total = 0;\n\t$lst2_total = 0;\n\tforeach ($lst1 as $value) {\n\t\
    \t$lst1_total += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$lst2_total\
    \ += strlen($value);\n\t}\n\tif ($lst1_total < $lst2_total) {\n\t\treturn $lst1;\n\
    \t} else {\n\t\treturn $lst2;\n\t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppvdiu95o.php:49\n\
    Stack trace:\n#0 /tmp/tmppvdiu95o.php(54): test()\n#1 {main}\n  thrown in /tmp/tmppvdiu95o.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $key => $value) {\n\t\
    \t$total1 += strlen($value);\n\t}\n\tforeach ($lst2 as $key => $value) {\n\t\t\
    $total2 += strlen($value);\n\t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\
    \t} else {\n\t\treturn $lst2;\n\t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\nfunction candidate(...$args) {\n\
    \    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcev0c8s8.php:40\n\
    Stack trace:\n#0 /tmp/tmpcev0c8s8.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpcev0c8s8.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1b9vmv81.php:49\n\
    Stack trace:\n#0 /tmp/tmp1b9vmv81.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp1b9vmv81.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgtkag9rd.php:49\n\
    Stack trace:\n#0 /tmp/tmpgtkag9rd.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpgtkag9rd.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgj0bfpcu.php:49\n\
    Stack trace:\n#0 /tmp/tmpgj0bfpcu.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpgj0bfpcu.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $lst1_total = 0;\n    $lst2_total = 0;\n    foreach($lst1 as $lst1_item)\
    \ {\n        $lst1_total += strlen($lst1_item);\n    }\n    foreach($lst2 as $lst2_item)\
    \ {\n        $lst2_total += strlen($lst2_item);\n    }\n    if($lst1_total > $lst2_total)\
    \ {\n        return $lst2;\n    } else {\n        return $lst1;\n    }\n}\necho\
    \ total_match(['hi', 'admin'], ['hI', 'Hi']);\necho \"<br>\";\necho total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']);\necho \"<br>\";\necho total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']);\necho \"<br>\";\necho total_match(['4'], ['1',\
    \ '2', '3', '4', '5']);\necho \"<br>\";\necho total_match([], []);\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: Array<br>Array<br>Array<br>Array<br>Array
  stderr: "PHP Warning:  Array to string conversion in /tmp/tmpoy_wyxed.php on line\
    \ 26\nPHP Warning:  Array to string conversion in /tmp/tmpoy_wyxed.php on line\
    \ 28\nPHP Warning:  Array to string conversion in /tmp/tmpoy_wyxed.php on line\
    \ 30\nPHP Warning:  Array to string conversion in /tmp/tmpoy_wyxed.php on line\
    \ 32\nPHP Warning:  Array to string conversion in /tmp/tmpoy_wyxed.php on line\
    \ 34\n"
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_total = 0;\n\t$lst2_total = 0;\n\tforeach ($lst1 as $key => $value)\
    \ {\n\t\t$lst1_total += strlen($value);\n\t}\n\tforeach ($lst2 as $key => $value)\
    \ {\n\t\t$lst2_total += strlen($value);\n\t}\n\tif ($lst1_total < $lst2_total)\
    \ {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\t}\n}\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho\
    \ \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI',\
    \ 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7h62w2i0.php:49\n\
    Stack trace:\n#0 /tmp/tmp7h62w2i0.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp7h62w2i0.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $sum1 = 0;\n    $sum2 = 0;\n    foreach($lst1 as $item) {\n        $sum1\
    \ += strlen($item);\n    }\n    foreach($lst2 as $item) {\n        $sum2 += strlen($item);\n\
    \    }\n    if($sum1 < $sum2) {\n        return $lst1;\n    } else {\n       \
    \ return $lst2;\n    }\n}\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvls3qyj4.php:37\n\
    Stack trace:\n#0 /tmp/tmpvls3qyj4.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpvls3qyj4.php\
    \ on line 37\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_total = 0;\n\t$lst2_total = 0;\n\tforeach ($lst1 as $value) {\n\t\
    \t$lst1_total += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$lst2_total\
    \ += strlen($value);\n\t}\n\tif ($lst1_total < $lst2_total) {\n\t\treturn $lst1;\n\
    \t} else {\n\t\treturn $lst2;\n\t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfgc0ss2r.php:49\n\
    Stack trace:\n#0 /tmp/tmpfgc0ss2r.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpfgc0ss2r.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpod4yqubm.php:49\n\
    Stack trace:\n#0 /tmp/tmpod4yqubm.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpod4yqubm.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpl6_xdvw2.php:49\n\
    Stack trace:\n#0 /tmp/tmpl6_xdvw2.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpl6_xdvw2.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $count1 = 0;\n    $count2 = 0;\n    foreach($lst1 as $word) {\n     \
    \   $count1 += strlen($word);\n    }\n    foreach($lst2 as $word) {\n        $count2\
    \ += strlen($word);\n    }\n    if($count1 < $count2) {\n        return $lst1;\n\
    \    } else {\n        return $lst2;\n    }\n}\necho implode(\", \", total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"<br>\";\necho implode(\", \", total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"<br>\";\necho implode(\"\
    , \", total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"<br>\";\necho\
    \ implode(\", \", total_match(['4'], ['1', '2', '3', '4', '5']));\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: hI, Hi<br>hi, admin<br>hI, hi, hi<br>4
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpt6fgr6eo.php:44\n\
    Stack trace:\n#0 /tmp/tmpt6fgr6eo.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpt6fgr6eo.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmu83pfxx.php:49\n\
    Stack trace:\n#0 /tmp/tmpmu83pfxx.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpmu83pfxx.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpiysbr22d.php:49\n\
    Stack trace:\n#0 /tmp/tmpiysbr22d.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpiysbr22d.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 > $total2) {\n\t\treturn $lst2;\n\t} else {\n\t\treturn $lst1;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $lst1_total = 0;\n    $lst2_total = 0;\n    foreach($lst1 as $item) {\n\
    \        $lst1_total += strlen($item);\n    }\n    foreach($lst2 as $item) {\n\
    \        $lst2_total += strlen($item);\n    }\n    if($lst1_total < $lst2_total)\
    \ {\n        return $lst1;\n    } else {\n        return $lst2;\n    }\n}\necho\
    \ implode(', ', total_match(['hi', 'admin'], ['hI', 'Hi']));\necho \"<br>\";\n\
    echo implode(', ', total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']));\n\
    echo \"<br>\";\necho implode(', ', total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\n\
    echo \"<br>\";\necho implode(', ', total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    function candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"\
    hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: hI, Hi<br>hi, admin<br>hI, hi, hi<br>4
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_a27jhxr.php:44\n\
    Stack trace:\n#0 /tmp/tmp_a27jhxr.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp_a27jhxr.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $lst1_total = 0;\n    $lst2_total = 0;\n    foreach($lst1 as $item) {\n\
    \        $lst1_total += strlen($item);\n    }\n    foreach($lst2 as $item) {\n\
    \        $lst2_total += strlen($item);\n    }\n    if($lst1_total < $lst2_total)\
    \ {\n        return $lst1;\n    } else {\n        return $lst2;\n    }\n}\necho\
    \ implode(', ', total_match(['hi', 'admin'], ['hI', 'Hi']));\necho '<br>';\necho\
    \ implode(', ', total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']));\n\
    echo '<br>';\necho implode(', ', total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\n\
    echo '<br>';\necho implode(', ', total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    function candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"\
    hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: hI, Hi<br>hi, admin<br>hI, hi, hi<br>4
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwp2evoar.php:44\n\
    Stack trace:\n#0 /tmp/tmpwp2evoar.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpwp2evoar.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $total1 = 0;\n    $total2 = 0;\n    foreach($lst1 as $word) {\n     \
    \   $total1 += strlen($word);\n    }\n    foreach($lst2 as $word) {\n        $total2\
    \ += strlen($word);\n    }\n    if($total1 < $total2) {\n        return $lst1;\n\
    \    } else {\n        return $lst2;\n    }\n}\necho total_match(['hi', 'admin'],\
    \ ['hI', 'Hi']);\necho \"<br>\";\necho total_match(['hi', 'admin'], ['hi', 'hi',\
    \ 'admin', 'project']);\necho \"<br>\";\necho total_match(['hi', 'admin'], ['hI',\
    \ 'hi', 'hi']);\necho \"<br>\";\necho total_match(['4'], ['1', '2', '3', '4',\
    \ '5']);\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: Array<br>Array<br>Array<br>Array
  stderr: "PHP Warning:  Array to string conversion in /tmp/tmp7ytjin3y.php on line\
    \ 26\nPHP Warning:  Array to string conversion in /tmp/tmp7ytjin3y.php on line\
    \ 28\nPHP Warning:  Array to string conversion in /tmp/tmp7ytjin3y.php on line\
    \ 30\nPHP Warning:  Array to string conversion in /tmp/tmp7ytjin3y.php on line\
    \ 32\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7ytjin3y.php:44\n\
    Stack trace:\n#0 /tmp/tmp7ytjin3y.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp7ytjin3y.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_total = 0;\n\t$lst2_total = 0;\n\tfor ($i=0; $i < count($lst1); $i++)\
    \ { \n\t\t$lst1_total += strlen($lst1[$i]);\n\t}\n\tfor ($i=0; $i < count($lst2);\
    \ $i++) { \n\t\t$lst2_total += strlen($lst2[$i]);\n\t}\n\tif ($lst1_total < $lst2_total)\
    \ {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\t}\n}\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho\
    \ \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI',\
    \ 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp28j4ayqg.php:49\n\
    Stack trace:\n#0 /tmp/tmp28j4ayqg.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp28j4ayqg.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_jqsvuxp.php:40\n\
    Stack trace:\n#0 /tmp/tmp_jqsvuxp.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp_jqsvuxp.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp80d6cncf.php:49\n\
    Stack trace:\n#0 /tmp/tmp80d6cncf.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp80d6cncf.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_count = 0;\n\t$lst2_count = 0;\n\tforeach ($lst1 as $value) {\n\t\
    \t$lst1_count += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$lst2_count\
    \ += strlen($value);\n\t}\n\tif ($lst1_count < $lst2_count) {\n\t\treturn $lst1;\n\
    \t} else {\n\t\treturn $lst2;\n\t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwc38kjbf.php:49\n\
    Stack trace:\n#0 /tmp/tmpwc38kjbf.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpwc38kjbf.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6j1z0wbm.php:49\n\
    Stack trace:\n#0 /tmp/tmp6j1z0wbm.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp6j1z0wbm.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_total = 0;\n\t$lst2_total = 0;\n\tforeach ($lst1 as $value) {\n\t\
    \t$lst1_total += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$lst2_total\
    \ += strlen($value);\n\t}\n\tif ($lst1_total < $lst2_total) {\n\t\treturn $lst1;\n\
    \t} else {\n\t\treturn $lst2;\n\t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1utbra1r.php:49\n\
    Stack trace:\n#0 /tmp/tmp1utbra1r.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp1utbra1r.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_total = 0;\n\t$lst2_total = 0;\n\tforeach ($lst1 as $value) {\n\t\
    \t$lst1_total += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$lst2_total\
    \ += strlen($value);\n\t}\n\tif ($lst1_total < $lst2_total) {\n\t\treturn $lst1;\n\
    \t} else {\n\t\treturn $lst2;\n\t}\n}\necho implode(', ', total_match(['hi', 'admin'],\
    \ ['hI', 'Hi']));\necho '<br>';\necho implode(', ', total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']));\necho '<br>';\necho implode(', ', total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho '<br>';\necho implode(', ', total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: hI, Hi<br>hi, admin<br>hI, hi, hi<br>4
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpavh1cj4r.php:44\n\
    Stack trace:\n#0 /tmp/tmpavh1cj4r.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpavh1cj4r.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_count = 0;\n\t$lst2_count = 0;\n\tforeach ($lst1 as $value) {\n\t\
    \t$lst1_count += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$lst2_count\
    \ += strlen($value);\n\t}\n\tif ($lst1_count < $lst2_count) {\n\t\treturn $lst1;\n\
    \t} else {\n\t\treturn $lst2;\n\t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgmvpjl3t.php:49\n\
    Stack trace:\n#0 /tmp/tmpgmvpjl3t.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpgmvpjl3t.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 > $total2) {\n\t\treturn $lst2;\n\t} else {\n\t\treturn $lst1;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_total = 0;\n\t$lst2_total = 0;\n\tforeach ($lst1 as $value) {\n\t\
    \t$lst1_total += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$lst2_total\
    \ += strlen($value);\n\t}\n\tif ($lst1_total < $lst2_total) {\n\t\treturn $lst1;\n\
    \t} else {\n\t\treturn $lst2;\n\t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmple1du1is.php:49\n\
    Stack trace:\n#0 /tmp/tmple1du1is.php(54): test()\n#1 {main}\n  thrown in /tmp/tmple1du1is.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $lst1_total = 0;\n    $lst2_total = 0;\n    foreach($lst1 as $item) {\n\
    \        $lst1_total += strlen($item);\n    }\n    foreach($lst2 as $item) {\n\
    \        $lst2_total += strlen($item);\n    }\n    if($lst1_total < $lst2_total)\
    \ {\n        return $lst1;\n    } else {\n        return $lst2;\n    }\n}\necho\
    \ implode(', ', total_match(['hi', 'admin'], ['hI', 'Hi']));\necho \"<br>\";\n\
    echo implode(', ', total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']));\n\
    echo \"<br>\";\necho implode(', ', total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\n\
    echo \"<br>\";\necho implode(', ', total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo \"<br>\";\necho implode(', ', total_match([], []));\necho \"<br>\";\nfunction\
    \ candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\"\
    , \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"\
    )) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: hI, Hi<br>hi, admin<br>hI, hi, hi<br>4<br><br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzy7vvj6g.php:47\n\
    Stack trace:\n#0 /tmp/tmpzy7vvj6g.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpzy7vvj6g.php\
    \ on line 47\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpghimjaiy.php:49\n\
    Stack trace:\n#0 /tmp/tmpghimjaiy.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpghimjaiy.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgxlvgc0e.php:40\n\
    Stack trace:\n#0 /tmp/tmpgxlvgc0e.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpgxlvgc0e.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpebod363w.php:49\n\
    Stack trace:\n#0 /tmp/tmpebod363w.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpebod363w.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_total = 0;\n\t$lst2_total = 0;\n\tforeach ($lst1 as $value) {\n\t\
    \t$lst1_total += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$lst2_total\
    \ += strlen($value);\n\t}\n\tif ($lst1_total < $lst2_total) {\n\t\treturn $lst1;\n\
    \t} else {\n\t\treturn $lst2;\n\t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8_ur342m.php:49\n\
    Stack trace:\n#0 /tmp/tmp8_ur342m.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp8_ur342m.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_total = 0;\n\t$lst2_total = 0;\n\tforeach ($lst1 as $value) {\n\t\
    \t$lst1_total += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$lst2_total\
    \ += strlen($value);\n\t}\n\tif ($lst1_total < $lst2_total) {\n\t\treturn $lst1;\n\
    \t} else {\n\t\treturn $lst2;\n\t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp13a68wyq.php:49\n\
    Stack trace:\n#0 /tmp/tmp13a68wyq.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp13a68wyq.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $key => $value) {\n\t\
    \t$total1 += strlen($value);\n\t}\n\tforeach ($lst2 as $key => $value) {\n\t\t\
    $total2 += strlen($value);\n\t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\
    \t} else {\n\t\treturn $lst2;\n\t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpa46s8xdc.php:49\n\
    Stack trace:\n#0 /tmp/tmpa46s8xdc.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpa46s8xdc.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_total = 0;\n\t$lst2_total = 0;\n\tforeach ($lst1 as $value) {\n\t\
    \t$lst1_total += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$lst2_total\
    \ += strlen($value);\n\t}\n\tif ($lst1_total < $lst2_total) {\n\t\treturn $lst1;\n\
    \t} else {\n\t\treturn $lst2;\n\t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmyy3vize.php:49\n\
    Stack trace:\n#0 /tmp/tmpmyy3vize.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpmyy3vize.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$count1 = 0;\n\t$count2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$count1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$count2 += strlen($value);\n\
    \t}\n\tif ($count1 < $count2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpq3e905qq.php:49\n\
    Stack trace:\n#0 /tmp/tmpq3e905qq.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpq3e905qq.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$count1 = 0;\n\t$count2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$count1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$count2 += strlen($value);\n\
    \t}\n\tif ($count1 < $count2) {\n\t\treturn $lst1;\n\t} elseif ($count1 > $count2)\
    \ {\n\t\treturn $lst2;\n\t} else {\n\t\treturn $lst1;\n\t}\n}\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho\
    \ \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI',\
    \ 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_count = 0;\n\t$lst2_count = 0;\n\tforeach ($lst1 as $value) {\n\t\
    \t$lst1_count += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$lst2_count\
    \ += strlen($value);\n\t}\n\tif ($lst1_count < $lst2_count) {\n\t\treturn $lst1;\n\
    \t} else {\n\t\treturn $lst2;\n\t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpd4wqmd7b.php:49\n\
    Stack trace:\n#0 /tmp/tmpd4wqmd7b.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpd4wqmd7b.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $total1 = 0;\n    $total2 = 0;\n    for ($i = 0; $i < count($lst1); $i++)\
    \ {\n        $total1 += strlen($lst1[$i]);\n    }\n    for ($i = 0; $i < count($lst2);\
    \ $i++) {\n        $total2 += strlen($lst2[$i]);\n    }\n    if ($total1 < $total2)\
    \ {\n        return $lst1;\n    } else {\n        return $lst2;\n    }\n}\necho\
    \ \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi', 'hi', 'admin',\
    \ 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpg9czbh4b.php:49\n\
    Stack trace:\n#0 /tmp/tmpg9czbh4b.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpg9czbh4b.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpidzkizyn.php:49\n\
    Stack trace:\n#0 /tmp/tmpidzkizyn.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpidzkizyn.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 == $total2) {\n\t\treturn $lst1;\n\t} elseif ($total1 < $total2)\
    \ {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\t}\n}\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho\
    \ \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI',\
    \ 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\n\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6apg14_b.php:52\n\
    Stack trace:\n#0 /tmp/tmp6apg14_b.php(57): test()\n#1 {main}\n  thrown in /tmp/tmp6apg14_b.php\
    \ on line 52\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_total = 0;\n\t$lst2_total = 0;\n\tforeach ($lst1 as $lst1_item) {\n\
    \t\t$lst1_total += strlen($lst1_item);\n\t}\n\tforeach ($lst2 as $lst2_item) {\n\
    \t\t$lst2_total += strlen($lst2_item);\n\t}\n\tif ($lst1_total < $lst2_total)\
    \ {\n\t\treturn $lst1;\n\t} elseif ($lst1_total > $lst2_total) {\n\t\treturn $lst2;\n\
    \t} else {\n\t\treturn $lst1;\n\t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$str1 = implode($lst1);\n\t$str2 = implode($lst2);\n\tif (strlen($str1)\
    \ < strlen($str2)) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\t}\n\
    }\necho total_match(['hi', 'admin'], ['hI', 'Hi']);\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: Array
  stderr: "PHP Warning:  Array to string conversion in /tmp/tmpy_gjj7cy.php on line\
    \ 20\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpy_gjj7cy.php:32\n\
    Stack trace:\n#0 /tmp/tmpy_gjj7cy.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpy_gjj7cy.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $total1 = 0;\n    $total2 = 0;\n    foreach($lst1 as $item) {\n     \
    \   $total1 += strlen($item);\n    }\n    foreach($lst2 as $item) {\n        $total2\
    \ += strlen($item);\n    }\n    if($total1 < $total2) {\n        return $lst1;\n\
    \    } else {\n        return $lst2;\n    }\n}\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8w1xro9x.php:49\n\
    Stack trace:\n#0 /tmp/tmp8w1xro9x.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp8w1xro9x.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp270xwyu2.php:49\n\
    Stack trace:\n#0 /tmp/tmp270xwyu2.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp270xwyu2.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_total = 0;\n\t$lst2_total = 0;\n\tforeach ($lst1 as $value) {\n\t\
    \t$lst1_total += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$lst2_total\
    \ += strlen($value);\n\t}\n\tif ($lst1_total < $lst2_total) {\n\t\treturn $lst1;\n\
    \t} else {\n\t\treturn $lst2;\n\t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcq63ndtr.php:49\n\
    Stack trace:\n#0 /tmp/tmpcq63ndtr.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpcq63ndtr.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $total1 = 0;\n    $total2 = 0;\n    foreach($lst1 as $item) {\n     \
    \   $total1 += strlen($item);\n    }\n    foreach($lst2 as $item) {\n        $total2\
    \ += strlen($item);\n    }\n    if($total1 < $total2) {\n        return $lst1;\n\
    \    } else {\n        return $lst2;\n    }\n}\necho implode(', ', total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho '<br>';\necho implode(', ', total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho '<br>';\necho implode(',\
    \ ', total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho '<br>';\necho implode(',\
    \ ', total_match(['4'], ['1', '2', '3', '4', '5']));\necho '<br>';\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: hI, Hi<br>hi, admin<br>hI, hi, hi<br>4<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptx8bveh9.php:45\n\
    Stack trace:\n#0 /tmp/tmptx8bveh9.php(50): test()\n#1 {main}\n  thrown in /tmp/tmptx8bveh9.php\
    \ on line 45\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$total2 += strlen($value);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqsc1r1jd.php:49\n\
    Stack trace:\n#0 /tmp/tmpqsc1r1jd.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpqsc1r1jd.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$count1 = 0;\n\t$count2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$count1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$count2 += strlen($value);\n\
    \t}\n\tif ($count1 < $count2) {\n\t\treturn $lst1;\n\t} elseif ($count1 > $count2)\
    \ {\n\t\treturn $lst2;\n\t} else {\n\t\treturn $lst1;\n\t}\n}\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho\
    \ \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI',\
    \ 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $total1 = 0;\n    $total2 = 0;\n    foreach($lst1 as $value) {\n    \
    \    $total1 += strlen($value);\n    }\n    foreach($lst2 as $value) {\n     \
    \   $total2 += strlen($value);\n    }\n    if($total1 < $total2) {\n        return\
    \ $lst1;\n    } else {\n        return $lst2;\n    }\n}\necho implode(\", \",\
    \ total_match(['hi', 'admin'], ['hI', 'Hi']));\necho \"<br>\";\necho implode(\"\
    , \", total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"\
    <br>\";\necho implode(\", \", total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\n\
    echo \"<br>\";\necho implode(\", \", total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    function candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"\
    hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: hI, Hi<br>hi, admin<br>hI, hi, hi<br>4
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvg1sfhxz.php:44\n\
    Stack trace:\n#0 /tmp/tmpvg1sfhxz.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpvg1sfhxz.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception

name: HumanEval_15_string_sequence
language: php
results:
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n\t$str = \"\";\n\tfor ($i =\
    \ 0; $i <= $n; $i++) {\n\t\t$str .= $i . \" \";\n\t}\n\treturn $str;\n}\n\nfunction\
    \ candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpnvwutxjx.php:20\n\
    Stack trace:\n#0 /tmp/tmpnvwutxjx.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpnvwutxjx.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9grs01sf.php:20\n\
    Stack trace:\n#0 /tmp/tmp9grs01sf.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp9grs01sf.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp67w1linb.php:20\n\
    Stack trace:\n#0 /tmp/tmp67w1linb.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp67w1linb.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= \"$i \";\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7k625nk2.php:20\n\
    Stack trace:\n#0 /tmp/tmp7k625nk2.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp7k625nk2.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp97p73urn.php:20\n\
    Stack trace:\n#0 /tmp/tmp97p73urn.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp97p73urn.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n\t$result = \"\";\n\tfor ($i\
    \ = 0; $i <= $n; $i++) {\n\t\t$result .= $i . \" \";\n\t}\n\treturn $result;\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjxiih6ig.php:20\n\
    Stack trace:\n#0 /tmp/tmpjxiih6ig.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpjxiih6ig.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp45x32442.php:20\n\
    Stack trace:\n#0 /tmp/tmp45x32442.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp45x32442.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $result = '';\n  for ($i =\
    \ 0; $i <= $n; $i++) {\n    $result .= $i . ' ';\n  }\n  return $result;\n}\n\n\
    function candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjt_3cw9z.php:20\n\
    Stack trace:\n#0 /tmp/tmpjt_3cw9z.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpjt_3cw9z.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $str = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $str .= $i . ' ';\n    }\n    return trim($str);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjovizx1p.php:20\n\
    Stack trace:\n#0 /tmp/tmpjovizx1p.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpjovizx1p.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptq1ms7ig.php:20\n\
    Stack trace:\n#0 /tmp/tmptq1ms7ig.php(25): test()\n#1 {main}\n  thrown in /tmp/tmptq1ms7ig.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsqbyh42p.php:20\n\
    Stack trace:\n#0 /tmp/tmpsqbyh42p.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpsqbyh42p.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphmoklid8.php:20\n\
    Stack trace:\n#0 /tmp/tmphmoklid8.php(25): test()\n#1 {main}\n  thrown in /tmp/tmphmoklid8.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpweclq4j5.php:20\n\
    Stack trace:\n#0 /tmp/tmpweclq4j5.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpweclq4j5.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkf86g0zu.php:20\n\
    Stack trace:\n#0 /tmp/tmpkf86g0zu.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpkf86g0zu.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n\t$str = \"\";\n\tfor ($i =\
    \ 0; $i <= $n; $i++) {\n\t\t$str .= $i . \" \";\n\t}\n\treturn $str;\n}\n\nfunction\
    \ candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3o6ncdt3.php:20\n\
    Stack trace:\n#0 /tmp/tmp3o6ncdt3.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp3o6ncdt3.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n\t$result = '';\n\tfor ($i =\
    \ 0; $i <= $n; $i++) {\n\t\t$result .= $i . ' ';\n\t}\n\treturn trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfzpic5zt.php:20\n\
    Stack trace:\n#0 /tmp/tmpfzpic5zt.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpfzpic5zt.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpyk_unc80.php:20\n\
    Stack trace:\n#0 /tmp/tmpyk_unc80.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpyk_unc80.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmps5fove2z.php:20\n\
    Stack trace:\n#0 /tmp/tmps5fove2z.php(25): test()\n#1 {main}\n  thrown in /tmp/tmps5fove2z.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpceffnphe.php:20\n\
    Stack trace:\n#0 /tmp/tmpceffnphe.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpceffnphe.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= \"$i \";\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6cah5c0z.php:20\n\
    Stack trace:\n#0 /tmp/tmp6cah5c0z.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp6cah5c0z.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n\t$result = \"\";\n\tfor ($i\
    \ = 0; $i <= $n; $i++) {\n\t\t$result .= $i . \" \";\n\t}\n\treturn $result;\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp141k0xbb.php:20\n\
    Stack trace:\n#0 /tmp/tmp141k0xbb.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp141k0xbb.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ trim($result);\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1pzuxc5l.php:20\n\
    Stack trace:\n#0 /tmp/tmp1pzuxc5l.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp1pzuxc5l.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ trim($result);\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    if ($n == 0) {\n       \
    \ return '0';\n    }\n    return string_sequence($n - 1) . ' ' . $n;\n}\n\nfunction\
    \ candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $string = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $string .= $i . \" \";\n    }\n    return\
    \ $string;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxz1xo3wu.php:20\n\
    Stack trace:\n#0 /tmp/tmpxz1xo3wu.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpxz1xo3wu.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    if ($n == 0) {\n       \
    \ return '0';\n    } else {\n        return string_sequence($n - 1) . ' ' . $n;\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $result = \"\";\n  for ($i\
    \ = 0; $i <= $n; $i++) {\n    $result .= $i . \" \";\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp47yd8l8d.php:20\n\
    Stack trace:\n#0 /tmp/tmp47yd8l8d.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp47yd8l8d.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= \"$i \";\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfr3h1qzg.php:20\n\
    Stack trace:\n#0 /tmp/tmpfr3h1qzg.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpfr3h1qzg.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    if ($n == 0) {\n       \
    \ return \"0\";\n    } else {\n        return string_sequence($n - 1) . \" $n\"\
    ;\n    }\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpu0lcbmtp.php:20\n\
    Stack trace:\n#0 /tmp/tmpu0lcbmtp.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpu0lcbmtp.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvu5lbd6m.php:20\n\
    Stack trace:\n#0 /tmp/tmpvu5lbd6m.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpvu5lbd6m.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpm9j3vbiy.php:20\n\
    Stack trace:\n#0 /tmp/tmpm9j3vbiy.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpm9j3vbiy.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpchglzp79.php:20\n\
    Stack trace:\n#0 /tmp/tmpchglzp79.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpchglzp79.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0h39zqjc.php:20\n\
    Stack trace:\n#0 /tmp/tmp0h39zqjc.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp0h39zqjc.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $sequence = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $sequence .= $i . \" \";\n    }\n    return\
    \ $sequence;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpz6fucy9o.php:20\n\
    Stack trace:\n#0 /tmp/tmpz6fucy9o.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpz6fucy9o.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp35rmjpsp.php:20\n\
    Stack trace:\n#0 /tmp/tmp35rmjpsp.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp35rmjpsp.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= \"$i \";\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsuqia7sc.php:20\n\
    Stack trace:\n#0 /tmp/tmpsuqia7sc.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpsuqia7sc.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ trim($result);\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= \"$i \";\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_uei5mzt.php:20\n\
    Stack trace:\n#0 /tmp/tmp_uei5mzt.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_uei5mzt.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= \" $i\";\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpq4p2syqp.php:20\n\
    Stack trace:\n#0 /tmp/tmpq4p2syqp.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpq4p2syqp.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ trim($result);\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    if ($n == 0) {\n       \
    \ return '0';\n    } else {\n        return string_sequence($n - 1) . ' ' . $n;\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpc7_whs4d.php:20\n\
    Stack trace:\n#0 /tmp/tmpc7_whs4d.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpc7_whs4d.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    if ($n < 0) {\n        return\
    \ \"\";\n    } else if ($n == 0) {\n        return \"0\";\n    } else {\n    \
    \    return string_sequence($n - 1) . \" \" . $n;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    if ($n == 0) {\n       \
    \ return '0';\n    } else {\n        return string_sequence($n - 1) . ' ' . $n;\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpobfojjm0.php:20\n\
    Stack trace:\n#0 /tmp/tmpobfojjm0.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpobfojjm0.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ rtrim($result);\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbsid_e_j.php:20\n\
    Stack trace:\n#0 /tmp/tmpbsid_e_j.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpbsid_e_j.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    if ($n == 0) {\n       \
    \ return '0';\n    } else {\n        return string_sequence($n - 1) . ' ' . $n;\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp22gbbk9x.php:20\n\
    Stack trace:\n#0 /tmp/tmp22gbbk9x.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp22gbbk9x.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ trim($result);\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1pcxykmc.php:20\n\
    Stack trace:\n#0 /tmp/tmp1pcxykmc.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp1pcxykmc.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpuidtfo7v.php:20\n\
    Stack trace:\n#0 /tmp/tmpuidtfo7v.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpuidtfo7v.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ trim($result);\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmmaig_4s.php:20\n\
    Stack trace:\n#0 /tmp/tmpmmaig_4s.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpmmaig_4s.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgqga5jlf.php:20\n\
    Stack trace:\n#0 /tmp/tmpgqga5jlf.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpgqga5jlf.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n\t$result = '';\n\tfor ($i =\
    \ 0; $i <= $n; $i++) {\n\t\t$result .= $i . ' ';\n\t}\n\treturn trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ trim($result);\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsk4qy_pr.php:20\n\
    Stack trace:\n#0 /tmp/tmpsk4qy_pr.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpsk4qy_pr.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsxrdu5qs.php:20\n\
    Stack trace:\n#0 /tmp/tmpsxrdu5qs.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpsxrdu5qs.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $result = \"\";\n  for ($i\
    \ = 0; $i <= $n; $i++) {\n    $result .= $i . \" \";\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0d_nrxfh.php:20\n\
    Stack trace:\n#0 /tmp/tmp0d_nrxfh.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp0d_nrxfh.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpp530va4u.php:20\n\
    Stack trace:\n#0 /tmp/tmpp530va4u.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpp530va4u.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    if ($n == 0) {\n       \
    \ return '0';\n    } else {\n        return string_sequence($n - 1) . ' ' . $n;\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpckn007wz.php:20\n\
    Stack trace:\n#0 /tmp/tmpckn007wz.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpckn007wz.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    if ($n == 0) {\n       \
    \ return '0';\n    } else {\n        return string_sequence($n - 1) . ' ' . $n;\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n\t$result = \"\";\n\tfor ($i\
    \ = 0; $i <= $n; $i++) {\n\t\t$result .= $i . \" \";\n\t}\n\treturn trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4ev0b6tt.php:20\n\
    Stack trace:\n#0 /tmp/tmp4ev0b6tt.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp4ev0b6tt.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= \" $i\";\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5yux_ct9.php:20\n\
    Stack trace:\n#0 /tmp/tmp5yux_ct9.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp5yux_ct9.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpyd82qw62.php:20\n\
    Stack trace:\n#0 /tmp/tmpyd82qw62.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpyd82qw62.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ trim($result);\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ trim($result);\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= \" $i\";\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp46sou87k.php:20\n\
    Stack trace:\n#0 /tmp/tmp46sou87k.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp46sou87k.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpk7ira85c.php:20\n\
    Stack trace:\n#0 /tmp/tmpk7ira85c.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpk7ira85c.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpb_4ix_cn.php:20\n\
    Stack trace:\n#0 /tmp/tmpb_4ix_cn.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpb_4ix_cn.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $sequence = '';\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $sequence .= $i . ' ';\n    }\n    return\
    \ trim($sequence);\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5bpv4otc.php:20\n\
    Stack trace:\n#0 /tmp/tmp5bpv4otc.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp5bpv4otc.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $str = \"\";\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $str .= $i . \" \";\n    }\n    return $str;\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp14f2hvh1.php:20\n\
    Stack trace:\n#0 /tmp/tmp14f2hvh1.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp14f2hvh1.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $result = \"\";\n  for ($i\
    \ = 0; $i <= $n; $i++) {\n    $result .= $i . \" \";\n  }\n  return rtrim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= \" \" . $i;\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpp5yvj2sj.php:20\n\
    Stack trace:\n#0 /tmp/tmpp5yvj2sj.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpp5yvj2sj.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ trim($result);\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4hyas0he.php:20\n\
    Stack trace:\n#0 /tmp/tmp4hyas0he.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp4hyas0he.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpq7lcp9hm.php:20\n\
    Stack trace:\n#0 /tmp/tmpq7lcp9hm.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpq7lcp9hm.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpb54p6bnt.php:20\n\
    Stack trace:\n#0 /tmp/tmpb54p6bnt.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpb54p6bnt.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpu72_ok9s.php:20\n\
    Stack trace:\n#0 /tmp/tmpu72_ok9s.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpu72_ok9s.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ trim($result);\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5zcujnv4.php:20\n\
    Stack trace:\n#0 /tmp/tmp5zcujnv4.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp5zcujnv4.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return rtrim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= \" $i\";\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7xwfceat.php:20\n\
    Stack trace:\n#0 /tmp/tmp7xwfceat.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp7xwfceat.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpstwssa2s.php:20\n\
    Stack trace:\n#0 /tmp/tmpstwssa2s.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpstwssa2s.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_g98u4ut.php:20\n\
    Stack trace:\n#0 /tmp/tmp_g98u4ut.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_g98u4ut.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    if ($n == 0) {\n       \
    \ return '0';\n    } else {\n        return string_sequence($n - 1) . ' ' . $n;\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ trim($result);\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= \" $i\";\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6lhf6zzq.php:20\n\
    Stack trace:\n#0 /tmp/tmp6lhf6zzq.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp6lhf6zzq.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= \"$i \";\n    }\n    return trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= \"$i \";\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1r2za1_v.php:20\n\
    Stack trace:\n#0 /tmp/tmp1r2za1_v.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp1r2za1_v.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $result = '';\n  for ($i =\
    \ 0; $i <= $n; $i++) {\n    $result .= $i . ' ';\n  }\n  return trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp897pjkle.php:20\n\
    Stack trace:\n#0 /tmp/tmp897pjkle.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp897pjkle.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $str = \"\";\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $str .= $i . \" \";\n    }\n    return trim($str);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbckfskhp.php:20\n\
    Stack trace:\n#0 /tmp/tmpbckfskhp.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpbckfskhp.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ trim($result);\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppbckeslt.php:20\n\
    Stack trace:\n#0 /tmp/tmppbckeslt.php(25): test()\n#1 {main}\n  thrown in /tmp/tmppbckeslt.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpr5yfgoo5.php:20\n\
    Stack trace:\n#0 /tmp/tmpr5yfgoo5.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpr5yfgoo5.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n\t$result = \"\";\n\tfor ($i\
    \ = 0; $i <= $n; $i++) {\n\t\t$result .= $i . \" \";\n\t}\n\treturn trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ trim($result);\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ trim($result);\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $result = '';\n  for ($i =\
    \ 0; $i <= $n; $i++) {\n    $result .= $i;\n    if ($i < $n) {\n      $result\
    \ .= ' ';\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0)\
    \ !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3)\
    \ !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ trim($result);\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    if ($n == 0) {\n       \
    \ return '0';\n    } else {\n        return string_sequence($n - 1) . ' ' . $n;\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n\t$result = \"\";\n\tfor ($i\
    \ = 0; $i <= $n; $i++) {\n\t\t$result .= $i . \" \";\n\t}\n\treturn $result;\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxmg_novg.php:20\n\
    Stack trace:\n#0 /tmp/tmpxmg_novg.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpxmg_novg.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpv1cr5lmh.php:20\n\
    Stack trace:\n#0 /tmp/tmpv1cr5lmh.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpv1cr5lmh.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ trim($result);\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ trim($result);\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $result = '';\n  for ($i =\
    \ 0; $i <= $n; $i++) {\n    $result .= $i . ' ';\n  }\n  return trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpt58s1k0x.php:20\n\
    Stack trace:\n#0 /tmp/tmpt58s1k0x.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpt58s1k0x.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ trim($result);\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp01hp0047.php:20\n\
    Stack trace:\n#0 /tmp/tmp01hp0047.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp01hp0047.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5o8r56te.php:20\n\
    Stack trace:\n#0 /tmp/tmp5o8r56te.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp5o8r56te.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n\t$result = '';\n\tfor ($i =\
    \ 0; $i <= $n; $i++) {\n\t\t$result .= $i . ' ';\n\t}\n\treturn trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ trim($result);\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $result = \"\";\n  for ($i\
    \ = 0; $i <= $n; $i++) {\n    $result .= $i . \" \";\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpc_okz4wq.php:20\n\
    Stack trace:\n#0 /tmp/tmpc_okz4wq.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpc_okz4wq.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptag8p7bz.php:20\n\
    Stack trace:\n#0 /tmp/tmptag8p7bz.php(25): test()\n#1 {main}\n  thrown in /tmp/tmptag8p7bz.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $str = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $str .= $i . ' ';\n    }\n    return $str;\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp52o1_hpx.php:20\n\
    Stack trace:\n#0 /tmp/tmp52o1_hpx.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp52o1_hpx.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_f0xgc_g.php:20\n\
    Stack trace:\n#0 /tmp/tmp_f0xgc_g.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_f0xgc_g.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmps6_enl54.php:20\n\
    Stack trace:\n#0 /tmp/tmps6_enl54.php(25): test()\n#1 {main}\n  thrown in /tmp/tmps6_enl54.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    if ($n == 0) {\n       \
    \ return '0';\n    } else {\n        return string_sequence($n - 1) . ' ' . $n;\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    if ($n == 0) {\n       \
    \ return '0';\n    } else {\n        return string_sequence($n - 1) . ' ' . $n;\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ trim($result);\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n\t$result = '';\n\tfor ($i =\
    \ 0; $i <= $n; $i++) {\n\t\t$result .= $i . ' ';\n\t}\n\treturn trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7nxdcc8_.php:20\n\
    Stack trace:\n#0 /tmp/tmp7nxdcc8_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp7nxdcc8_.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp30c1x49i.php:20\n\
    Stack trace:\n#0 /tmp/tmp30c1x49i.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp30c1x49i.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= \" $i\";\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqgqf_qog.php:20\n\
    Stack trace:\n#0 /tmp/tmpqgqf_qog.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpqgqf_qog.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmph2s8uhvr.php:20\n\
    Stack trace:\n#0 /tmp/tmph2s8uhvr.php(25): test()\n#1 {main}\n  thrown in /tmp/tmph2s8uhvr.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ trim($result);\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdlythzqp.php:20\n\
    Stack trace:\n#0 /tmp/tmpdlythzqp.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdlythzqp.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_hctuf9f.php:20\n\
    Stack trace:\n#0 /tmp/tmp_hctuf9f.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_hctuf9f.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n\t$result = '';\n\tfor ($i =\
    \ 0; $i <= $n; $i++) {\n\t\t$result .= $i . ' ';\n\t}\n\treturn trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ trim($result);\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpddwbjlky.php:20\n\
    Stack trace:\n#0 /tmp/tmpddwbjlky.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpddwbjlky.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpeyo4ktzb.php:20\n\
    Stack trace:\n#0 /tmp/tmpeyo4ktzb.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpeyo4ktzb.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqdqp7sxo.php:20\n\
    Stack trace:\n#0 /tmp/tmpqdqp7sxo.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpqdqp7sxo.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $string = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $string .= $i . \" \";\n    }\n    return\
    \ $string;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4u_gexqq.php:20\n\
    Stack trace:\n#0 /tmp/tmp4u_gexqq.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp4u_gexqq.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= \"$i \";\n    }\n    return trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbfvfp01v.php:20\n\
    Stack trace:\n#0 /tmp/tmpbfvfp01v.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpbfvfp01v.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  if ($n == 0) {\n    return\
    \ '0';\n  } else {\n    return string_sequence($n - 1) . ' ' . $n;\n  }\n}\n\n\
    function candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpa8zu2p1e.php:20\n\
    Stack trace:\n#0 /tmp/tmpa8zu2p1e.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpa8zu2p1e.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return rtrim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  if ($n == 0) {\n    return\
    \ '0';\n  } else {\n    return string_sequence($n - 1) . ' ' . $n;\n  }\n}\n\n\
    function candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqrcb7pb_.php:20\n\
    Stack trace:\n#0 /tmp/tmpqrcb7pb_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpqrcb7pb_.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n\t$str = '';\n\tfor ($i = 0;\
    \ $i <= $n; $i++) {\n\t\t$str .= $i . ' ';\n\t}\n\treturn trim($str);\n}\n\nfunction\
    \ candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK

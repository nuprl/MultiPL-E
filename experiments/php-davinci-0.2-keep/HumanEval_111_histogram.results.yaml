name: HumanEval_111_histogram
language: php
results:
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n  $test = explode(' ', $test);\n  $count = array_count_values($test);\n\
    \  $max = max($count);\n  $result = array();\n  foreach ($count as $key => $value)\
    \ {\n    if ($value == $max) {\n      $result[$key] = $value;\n    }\n  }\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4jvilgty.php:35\n\
    Stack trace:\n#0 /tmp/tmp4jvilgty.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp4jvilgty.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $letter) {\n        if (array_key_exists($letter, $result))\
    \ {\n            $result[$letter]++;\n        } else {\n            $result[$letter]\
    \ = 1;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphca52fhi.php:30\n\
    Stack trace:\n#0 /tmp/tmphca52fhi.php(39): test()\n#1 {main}\n  thrown in /tmp/tmphca52fhi.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $count = array_count_values($test);\n\
    \    $max = max($count);\n    $result = array_filter($count, function($v) use\
    \ ($max) {\n        return $v == $max;\n    });\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !==\
    \ array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1,\
    \ \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"\
    b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t\
    \ g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpnmsepf6m.php:32\n\
    Stack trace:\n#0 /tmp/tmpnmsepf6m.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpnmsepf6m.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $value) {\n        if (array_key_exists($value, $result))\
    \ {\n            $result[$value]++;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbt_90916.php:30\n\
    Stack trace:\n#0 /tmp/tmpbt_90916.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpbt_90916.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $count = array_count_values($test);\n\
    \    $max = max($count);\n    $result = array_filter($count, function($v) use\
    \ ($max) {\n        return $v == $max;\n    });\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !==\
    \ array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1,\
    \ \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"\
    b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t\
    \ g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptp67hf04.php:32\n\
    Stack trace:\n#0 /tmp/tmptp67hf04.php(36): test()\n#1 {main}\n  thrown in /tmp/tmptp67hf04.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $count = array_count_values($test);\n\
    \    $max = max($count);\n    $result = array_filter($count, function($value)\
    \ use ($max) {\n        return $value == $max;\n    });\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1qmve6zl.php:32\n\
    Stack trace:\n#0 /tmp/tmp1qmve6zl.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp1qmve6zl.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n  $test = explode(' ', $test);\n  $result = [];\n\
    \  foreach ($test as $key => $value) {\n    if (array_key_exists($value, $result))\
    \ {\n      $result[$value] += 1;\n    } else {\n      $result[$value] = 1;\n \
    \   }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b\
    \ b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkd0kqowo.php:30\n\
    Stack trace:\n#0 /tmp/tmpkd0kqowo.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpkd0kqowo.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $letters = str_split($test);\n    $counts = array_count_values($letters);\n\
    \    $max = max($counts);\n    $result = array_filter($counts, function($value)\
    \ use ($max) {\n        return $value == $max;\n    });\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpa82fttjb.php:26\n\
    Stack trace:\n#0 /tmp/tmpa82fttjb.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpa82fttjb.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $result = [];\n    $test = explode(' ', $test);\n\
    \    foreach ($test as $value) {\n        if (array_key_exists($value, $result))\
    \ {\n            $result[$value]++;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp95hj4ytd.php:30\n\
    Stack trace:\n#0 /tmp/tmp95hj4ytd.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp95hj4ytd.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $value) {\n        if (array_key_exists($value, $result))\
    \ {\n            $result[$value]++;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    $max = max($result);\n    $result = array_filter($result,\
    \ function ($value) use ($max) {\n        return $value == $max;\n    });\n  \
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5pnin8_2.php:39\n\
    Stack trace:\n#0 /tmp/tmp5pnin8_2.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp5pnin8_2.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $letters = explode(' ', $test);\n    $count =\
    \ array_count_values($letters);\n    $max = max($count);\n    $result = array_filter($count,\
    \ function($value) use ($max) {\n        return $value == $max;\n    });\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp77rtt110.php:32\n\
    Stack trace:\n#0 /tmp/tmp77rtt110.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp77rtt110.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = str_split($test);\n    $result = [];\n\
    \    foreach ($test as $letter) {\n        if (isset($result[$letter])) {\n  \
    \          $result[$letter]++;\n        } else {\n            $result[$letter]\
    \ = 1;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpuca0lzwy.php:29\n\
    Stack trace:\n#0 /tmp/tmpuca0lzwy.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpuca0lzwy.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $result = [];\n    $test = explode(' ', $test);\n\
    \    foreach ($test as $letter) {\n        if (!isset($result[$letter])) {\n \
    \           $result[$letter] = 1;\n        } else {\n            $result[$letter]++;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpl7x9atea.php:30\n\
    Stack trace:\n#0 /tmp/tmpl7x9atea.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpl7x9atea.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n  $test = explode(' ', $test);\n  $test = array_count_values($test);\n\
    \  arsort($test);\n  $test = array_filter($test, function($value) {\n    return\
    \ $value == max($value);\n  });\n  return $test;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught TypeError: max(): Argument #1 ($value) must\
    \ be of type array, int given in /tmp/tmpf78nzy4c.php:16\nStack trace:\n#0 /tmp/tmpf78nzy4c.php(16):\
    \ max()\n#1 [internal function]: {closure}()\n#2 /tmp/tmpf78nzy4c.php(17): array_filter()\n\
    #3 /tmp/tmpf78nzy4c.php(22): histogram()\n#4 /tmp/tmpf78nzy4c.php(26): candidate()\n\
    #5 /tmp/tmpf78nzy4c.php(36): test()\n#6 {main}\n  thrown in /tmp/tmpf78nzy4c.php\
    \ on line 16\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $letters = explode(' ', $test);\n    $histogram\
    \ = [];\n    foreach ($letters as $letter) {\n        if (array_key_exists($letter,\
    \ $histogram)) {\n            $histogram[$letter]++;\n        } else {\n     \
    \       $histogram[$letter] = 1;\n        }\n    }\n    $max = max($histogram);\n\
    \    $max_letters = [];\n    foreach ($histogram as $key => $value) {\n      \
    \  if ($value == $max) {\n            $max_letters[$key] = $value;\n        }\n\
    \    }\n    return $max_letters;\n}\n\nfunction candidate(...$args) {\n    return\
    \ histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b\
    \ b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpx4xzrf2q.php:42\n\
    Stack trace:\n#0 /tmp/tmpx4xzrf2q.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpx4xzrf2q.php\
    \ on line 42\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $letter) {\n        if (array_key_exists($letter, $result))\
    \ {\n            $result[$letter]++;\n        } else {\n            $result[$letter]\
    \ = 1;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_qj5swmp.php:30\n\
    Stack trace:\n#0 /tmp/tmp_qj5swmp.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp_qj5swmp.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $letters = explode(' ', $test);\n    $counts\
    \ = array_count_values($letters);\n    $max = max($counts);\n    $result = array_filter($counts,\
    \ function($value) use ($max) {\n        return $value == $max;\n    });\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptpc5rdo2.php:32\n\
    Stack trace:\n#0 /tmp/tmptpc5rdo2.php(36): test()\n#1 {main}\n  thrown in /tmp/tmptpc5rdo2.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $test = array_count_values($test);\n\
    \    arsort($test);\n    $test = array_flip($test);\n    $test = array_slice($test,\
    \ 0, 1);\n    $test = array_flip($test);\n    $test = array_flip($test);\n   \
    \ return $test;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpska4_vew.php:27\n\
    Stack trace:\n#0 /tmp/tmpska4_vew.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpska4_vew.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $array = explode(' ', $test);\n    $counts =\
    \ array_count_values($array);\n    $max = max($counts);\n    $result = array_filter($counts,\
    \ function($v) use ($max) {\n        return $v == $max;\n    });\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpaxvduesi.php:32\n\
    Stack trace:\n#0 /tmp/tmpaxvduesi.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpaxvduesi.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $value) {\n        if (array_key_exists($value, $result))\
    \ {\n            $result[$value]++;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpp_hi4vco.php:30\n\
    Stack trace:\n#0 /tmp/tmpp_hi4vco.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpp_hi4vco.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $value) {\n        if (isset($result[$value])) {\n    \
    \        $result[$value]++;\n        } else {\n            $result[$value] = 1;\n\
    \        }\n    }\n    $max = max($result);\n    foreach ($result as $key => $value)\
    \ {\n        if ($value != $max) {\n            unset($result[$key]);\n      \
    \  }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b\
    \ b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmdnopd8r.php:41\n\
    Stack trace:\n#0 /tmp/tmpmdnopd8r.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpmdnopd8r.php\
    \ on line 41\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $value) {\n        if (isset($result[$value])) {\n    \
    \        $result[$value]++;\n        } else {\n            $result[$value] = 1;\n\
    \        }\n    }\n    $max = max($result);\n    $result = array_filter($result,\
    \ function ($value) use ($max) {\n        return $value == $max;\n    });\n  \
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpju5a280t.php:39\n\
    Stack trace:\n#0 /tmp/tmpju5a280t.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpju5a280t.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $key => $value) {\n        if (!array_key_exists($value,\
    \ $result)) {\n            $result[$value] = 1;\n        } else {\n          \
    \  $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp01p6gamp.php:30\n\
    Stack trace:\n#0 /tmp/tmp01p6gamp.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp01p6gamp.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $value) {\n        if (array_key_exists($value, $result))\
    \ {\n            $result[$value]++;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    $max = max($result);\n    foreach ($result as $key\
    \ => $value) {\n        if ($value != $max) {\n            unset($result[$key]);\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwuden5f6.php:41\n\
    Stack trace:\n#0 /tmp/tmpwuden5f6.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpwuden5f6.php\
    \ on line 41\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $key => $value) {\n        if (array_key_exists($value,\
    \ $result)) {\n            $result[$value]++;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjher4ple.php:30\n\
    Stack trace:\n#0 /tmp/tmpjher4ple.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpjher4ple.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n  $array = explode(' ', $test);\n  $result = [];\n\
    \  foreach ($array as $value) {\n    if (array_key_exists($value, $result)) {\n\
    \      $result[$value] += 1;\n    } else {\n      $result[$value] = 1;\n    }\n\
    \  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_3xpr5k9.php:30\n\
    Stack trace:\n#0 /tmp/tmp_3xpr5k9.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp_3xpr5k9.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $arr = explode(' ', $test);\n    $counts = array_count_values($arr);\n\
    \    $max = max($counts);\n    $result = array_filter($counts, function($v) use\
    \ ($max) {\n        return $v == $max;\n    });\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !==\
    \ array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1,\
    \ \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"\
    b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t\
    \ g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplzk90zm_.php:32\n\
    Stack trace:\n#0 /tmp/tmplzk90zm_.php(36): test()\n#1 {main}\n  thrown in /tmp/tmplzk90zm_.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $arr = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($arr as $value) {\n        if (isset($result[$value])) {\n     \
    \       $result[$value]++;\n        } else {\n            $result[$value] = 1;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpi44yu9sl.php:30\n\
    Stack trace:\n#0 /tmp/tmpi44yu9sl.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpi44yu9sl.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $result = [];\n    $letters = explode(' ', $test);\n\
    \    foreach ($letters as $letter) {\n        if (array_key_exists($letter, $result))\
    \ {\n            $result[$letter]++;\n        } else {\n            $result[$letter]\
    \ = 1;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7tfr5vvn.php:30\n\
    Stack trace:\n#0 /tmp/tmp7tfr5vvn.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp7tfr5vvn.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $letter) {\n        if (array_key_exists($letter, $result))\
    \ {\n            $result[$letter]++;\n        } else {\n            $result[$letter]\
    \ = 1;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1bs0fo4e.php:30\n\
    Stack trace:\n#0 /tmp/tmp1bs0fo4e.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp1bs0fo4e.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $histogram\
    \ = [];\n    foreach ($test as $letter) {\n        if (array_key_exists($letter,\
    \ $histogram)) {\n            $histogram[$letter]++;\n        } else {\n     \
    \       $histogram[$letter] = 1;\n        }\n    }\n    $max = max($histogram);\n\
    \    $result = [];\n    foreach ($histogram as $key => $value) {\n        if ($value\
    \ == $max) {\n            $result[$key] = $value;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpst_ne39g.php:42\n\
    Stack trace:\n#0 /tmp/tmpst_ne39g.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpst_ne39g.php\
    \ on line 42\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $test = array_count_values($test);\n\
    \    arsort($test);\n    $test = array_slice($test, 0, 1, true);\n    return $test;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpozv34h82.php:24\n\
    Stack trace:\n#0 /tmp/tmpozv34h82.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpozv34h82.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $value) {\n        if (array_key_exists($value, $result))\
    \ {\n            $result[$value]++;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4ppx3gh9.php:30\n\
    Stack trace:\n#0 /tmp/tmp4ppx3gh9.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp4ppx3gh9.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $item) {\n        if (!array_key_exists($item, $result))\
    \ {\n            $result[$item] = 1;\n        } else {\n            $result[$item]++;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0hpjdpx2.php:30\n\
    Stack trace:\n#0 /tmp/tmp0hpjdpx2.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp0hpjdpx2.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $key => $value) {\n        if (isset($result[$value]))\
    \ {\n            $result[$value]++;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    $max = max($result);\n    foreach ($result as $key\
    \ => $value) {\n        if ($value < $max) {\n            unset($result[$key]);\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbhinfdh7.php:41\n\
    Stack trace:\n#0 /tmp/tmpbhinfdh7.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpbhinfdh7.php\
    \ on line 41\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $letters = explode(' ', $test);\n    $count =\
    \ array_count_values($letters);\n    $max = max($count);\n    $histogram = array();\n\
    \    foreach ($count as $key => $value) {\n        if ($value == $max) {\n   \
    \         $histogram[$key] = $value;\n        }\n    }\n    return $histogram;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpf36mrigl.php:35\n\
    Stack trace:\n#0 /tmp/tmpf36mrigl.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpf36mrigl.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $arr = explode(' ', $test);\n    $count = array_count_values($arr);\n\
    \    $max = max($count);\n    $result = array_filter($count, function($value)\
    \ use ($max) {\n        return $value == $max;\n    });\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpam0p9kpj.php:32\n\
    Stack trace:\n#0 /tmp/tmpam0p9kpj.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpam0p9kpj.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n  $result = [];\n  $test = explode(' ', $test);\n\
    \  foreach ($test as $key => $value) {\n    if (array_key_exists($value, $result))\
    \ {\n      $result[$value]++;\n    } else {\n      $result[$value] = 1;\n    }\n\
    \  }\n  $max = max($result);\n  $result = array_filter($result, function($value)\
    \ use ($max) {\n    return $value == $max;\n  });\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !==\
    \ array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1,\
    \ \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"\
    b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t\
    \ g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1e9yvml1.php:39\n\
    Stack trace:\n#0 /tmp/tmp1e9yvml1.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp1e9yvml1.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $letter) {\n        if (array_key_exists($letter, $result))\
    \ {\n            $result[$letter]++;\n        } else {\n            $result[$letter]\
    \ = 1;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfcm6pjsg.php:30\n\
    Stack trace:\n#0 /tmp/tmpfcm6pjsg.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpfcm6pjsg.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $result = [];\n    $test = explode(' ', $test);\n\
    \    foreach ($test as $letter) {\n        if (isset($result[$letter])) {\n  \
    \          $result[$letter]++;\n        } else {\n            $result[$letter]\
    \ = 1;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpz_c_cnl0.php:30\n\
    Stack trace:\n#0 /tmp/tmpz_c_cnl0.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpz_c_cnl0.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $result = [];\n    $test = explode(' ', $test);\n\
    \    foreach ($test as $value) {\n        if (array_key_exists($value, $result))\
    \ {\n            $result[$value]++;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpa173m1u8.php:30\n\
    Stack trace:\n#0 /tmp/tmpa173m1u8.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpa173m1u8.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $value) {\n        if (array_key_exists($value, $result))\
    \ {\n            $result[$value]++;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzu1ni1va.php:30\n\
    Stack trace:\n#0 /tmp/tmpzu1ni1va.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpzu1ni1va.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $letter) {\n        if (!isset($result[$letter])) {\n \
    \           $result[$letter] = 0;\n        }\n        $result[$letter]++;\n  \
    \  }\n    arsort($result);\n    $max = reset($result);\n    $result = array_filter($result,\
    \ function ($value) use ($max) {\n        return $value == $max;\n    });\n  \
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp84tu4wrr.php:39\n\
    Stack trace:\n#0 /tmp/tmp84tu4wrr.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp84tu4wrr.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $count = array_count_values($test);\n\
    \    $max = max($count);\n    $result = array_filter($count, function($value)\
    \ use ($max) {\n        return $value == $max;\n    });\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_k939ri0.php:32\n\
    Stack trace:\n#0 /tmp/tmp_k939ri0.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp_k939ri0.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $result = [];\n    $letters = explode(' ', $test);\n\
    \    foreach ($letters as $letter) {\n        if (isset($result[$letter])) {\n\
    \            $result[$letter] += 1;\n        } else {\n            $result[$letter]\
    \ = 1;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9jz8lz48.php:30\n\
    Stack trace:\n#0 /tmp/tmp9jz8lz48.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp9jz8lz48.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $count = array_count_values($test);\n\
    \    $max = max($count);\n    $result = array_filter($count, function($value)\
    \ use ($max) {\n        return $value == $max;\n    });\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmyguju5b.php:32\n\
    Stack trace:\n#0 /tmp/tmpmyguju5b.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpmyguju5b.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $letters = explode(' ', $test);\n    $count =\
    \ array_count_values($letters);\n    $max = max($count);\n    $result = array_filter($count,\
    \ function($value) use ($max) {\n        return $value == $max;\n    });\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprosp7ti_.php:32\n\
    Stack trace:\n#0 /tmp/tmprosp7ti_.php(36): test()\n#1 {main}\n  thrown in /tmp/tmprosp7ti_.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n  $result = [];\n  $test = explode(' ', $test);\n\
    \  foreach ($test as $letter) {\n    if (!array_key_exists($letter, $result))\
    \ {\n      $result[$letter] = 1;\n    } else {\n      $result[$letter]++;\n  \
    \  }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b\
    \ b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_7r8_q81.php:30\n\
    Stack trace:\n#0 /tmp/tmp_7r8_q81.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp_7r8_q81.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $result = [];\n    $test = explode(' ', $test);\n\
    \    foreach ($test as $value) {\n        if (array_key_exists($value, $result))\
    \ {\n            $result[$value]++;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9j6n0bqe.php:30\n\
    Stack trace:\n#0 /tmp/tmp9j6n0bqe.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp9j6n0bqe.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $letters = explode(' ', $test);\n    $count =\
    \ array_count_values($letters);\n    $max = max($count);\n    $result = array_filter($count,\
    \ function($value) use ($max) {\n        return $value == $max;\n    });\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqgb3h8i0.php:32\n\
    Stack trace:\n#0 /tmp/tmpqgb3h8i0.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpqgb3h8i0.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $letters = explode(' ', $test);\n    $count =\
    \ array_count_values($letters);\n    $max = max($count);\n    $result = array_filter($count,\
    \ function($value) use ($max) {\n        return $value == $max;\n    });\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpt9cyaylz.php:32\n\
    Stack trace:\n#0 /tmp/tmpt9cyaylz.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpt9cyaylz.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $value) {\n        if (array_key_exists($value, $result))\
    \ {\n            $result[$value]++;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    $max = max($result);\n    $result = array_filter($result,\
    \ function ($value) use ($max) {\n        return $value == $max;\n    });\n  \
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwf0qx_ge.php:39\n\
    Stack trace:\n#0 /tmp/tmpwf0qx_ge.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpwf0qx_ge.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n  $test = explode(' ', $test);\n  $result = [];\n\
    \  foreach ($test as $key => $value) {\n    if (array_key_exists($value, $result))\
    \ {\n      $result[$value] += 1;\n    } else {\n      $result[$value] = 1;\n \
    \   }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b\
    \ b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjcq3pijv.php:30\n\
    Stack trace:\n#0 /tmp/tmpjcq3pijv.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpjcq3pijv.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $letters = explode(' ', $test);\n    $counts\
    \ = array_count_values($letters);\n    $max = max($counts);\n    $result = array_filter($counts,\
    \ function($value) use ($max) {\n        return $value == $max;\n    });\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3i4_voo7.php:32\n\
    Stack trace:\n#0 /tmp/tmp3i4_voo7.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp3i4_voo7.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n  $letters = explode(' ', $test);\n  $counts = array_count_values($letters);\n\
    \  $max = max($counts);\n  $result = array_filter($counts, function($v) use ($max)\
    \ {\n    return $v == $max;\n  });\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsupar7_q.php:32\n\
    Stack trace:\n#0 /tmp/tmpsupar7_q.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpsupar7_q.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $test = array_count_values($test);\n\
    \    arsort($test);\n    $max = max($test);\n    $result = [];\n    foreach ($test\
    \ as $key => $value) {\n        if ($value == $max) {\n            $result[$key]\
    \ = $value;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp414lnbxn.php:36\n\
    Stack trace:\n#0 /tmp/tmp414lnbxn.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp414lnbxn.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $letter) {\n        if (array_key_exists($letter, $result))\
    \ {\n            $result[$letter]++;\n        } else {\n            $result[$letter]\
    \ = 1;\n        }\n    }\n    $max = max($result);\n    $result = array_filter($result,\
    \ function ($value) use ($max) {\n        return $value == $max;\n    });\n  \
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpez5aae58.php:39\n\
    Stack trace:\n#0 /tmp/tmpez5aae58.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpez5aae58.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n  $letters = explode(' ', $test);\n  $count = array_count_values($letters);\n\
    \  $max = max($count);\n  $result = array_filter($count, function($value) use\
    \ ($max) {\n    return $value == $max;\n  });\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !==\
    \ array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1,\
    \ \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"\
    b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t\
    \ g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6g2a9xj4.php:32\n\
    Stack trace:\n#0 /tmp/tmp6g2a9xj4.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp6g2a9xj4.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $letters = explode(' ', $test);\n    $count =\
    \ array_count_values($letters);\n    $max = max($count);\n    $result = array_filter($count,\
    \ function($v) use ($max) {\n        return $v == $max;\n    });\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1dm4cdh1.php:32\n\
    Stack trace:\n#0 /tmp/tmp1dm4cdh1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp1dm4cdh1.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $count = array_count_values($test);\n\
    \    $max = max($count);\n    $result = array_filter($count, function($value)\
    \ use ($max) {\n        return $value == $max;\n    });\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpf22jxola.php:32\n\
    Stack trace:\n#0 /tmp/tmpf22jxola.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpf22jxola.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $letters = explode(' ', $test);\n    $counts\
    \ = array_count_values($letters);\n    $max = max($counts);\n    $result = array_filter($counts,\
    \ function($value) use ($max) {\n        return $value == $max;\n    });\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpidgktum2.php:32\n\
    Stack trace:\n#0 /tmp/tmpidgktum2.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpidgktum2.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $value) {\n        if (isset($result[$value])) {\n    \
    \        $result[$value]++;\n        } else {\n            $result[$value] = 1;\n\
    \        }\n    }\n    $max = max($result);\n    $result = array_filter($result,\
    \ function ($value) use ($max) {\n        return $value == $max;\n    });\n  \
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkf3pb6s5.php:39\n\
    Stack trace:\n#0 /tmp/tmpkf3pb6s5.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpkf3pb6s5.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $arr = explode(' ', $test);\n    $count = array_count_values($arr);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppc0ttiqf.php:35\n\
    Stack trace:\n#0 /tmp/tmppc0ttiqf.php(39): test()\n#1 {main}\n  thrown in /tmp/tmppc0ttiqf.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $letter) {\n        if (!isset($result[$letter])) {\n \
    \           $result[$letter] = 0;\n        }\n        $result[$letter]++;\n  \
    \  }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_ien63sc.php:29\n\
    Stack trace:\n#0 /tmp/tmp_ien63sc.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp_ien63sc.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $item) {\n        if (!isset($result[$item])) {\n     \
    \       $result[$item] = 1;\n        } else {\n            $result[$item] += 1;\n\
    \        }\n    }\n    $max = max($result);\n    foreach ($result as $key => $value)\
    \ {\n        if ($value !== $max) {\n            unset($result[$key]);\n     \
    \   }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b\
    \ b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvso1ws01.php:41\n\
    Stack trace:\n#0 /tmp/tmpvso1ws01.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpvso1ws01.php\
    \ on line 41\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $letter) {\n        if (array_key_exists($letter, $result))\
    \ {\n            $result[$letter]++;\n        } else {\n            $result[$letter]\
    \ = 1;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpj1t1v8rv.php:30\n\
    Stack trace:\n#0 /tmp/tmpj1t1v8rv.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpj1t1v8rv.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $histogram\
    \ = [];\n    foreach ($test as $letter) {\n        if (array_key_exists($letter,\
    \ $histogram)) {\n            $histogram[$letter]++;\n        } else {\n     \
    \       $histogram[$letter] = 1;\n        }\n    }\n    $max = max($histogram);\n\
    \    $result = [];\n    foreach ($histogram as $key => $value) {\n        if ($value\
    \ == $max) {\n            $result[$key] = $value;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkfiosk1r.php:42\n\
    Stack trace:\n#0 /tmp/tmpkfiosk1r.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpkfiosk1r.php\
    \ on line 42\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n  $letters = explode(' ', $test);\n  $counts = array_count_values($letters);\n\
    \  $max = max($counts);\n  $result = array_filter($counts, function($v) use ($max)\
    \ {\n    return $v == $max;\n  });\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpnv12u1vc.php:32\n\
    Stack trace:\n#0 /tmp/tmpnv12u1vc.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpnv12u1vc.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $test = array_count_values($test);\n\
    \    arsort($test);\n    $max = max($test);\n    $result = [];\n    foreach ($test\
    \ as $key => $value) {\n        if ($value == $max) {\n            $result[$key]\
    \ = $value;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpl5g9p6ax.php:36\n\
    Stack trace:\n#0 /tmp/tmpl5g9p6ax.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpl5g9p6ax.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $counts = array_count_values($test);\n\
    \    $max = max($counts);\n    $result = array_filter($counts, function($value)\
    \ use ($max) {\n        return $value == $max;\n    });\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1xeaiat8.php:32\n\
    Stack trace:\n#0 /tmp/tmp1xeaiat8.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp1xeaiat8.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $count = array_count_values($test);\n\
    \    $max = max($count);\n    $result = array_filter($count, function($value)\
    \ use ($max) {\n        return $value == $max;\n    });\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5i55o7od.php:32\n\
    Stack trace:\n#0 /tmp/tmp5i55o7od.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp5i55o7od.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = str_split($test);\n    $test = array_count_values($test);\n\
    \    arsort($test);\n    $max = max($test);\n    $result = [];\n    foreach ($test\
    \ as $key => $value) {\n        if ($value == $max) {\n            $result[$key]\
    \ = $value;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8eaid5xe.php:30\n\
    Stack trace:\n#0 /tmp/tmp8eaid5xe.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp8eaid5xe.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n  $words = explode(' ', $test);\n  $histogram = [];\n\
    \  foreach ($words as $word) {\n    if (array_key_exists($word, $histogram)) {\n\
    \      $histogram[$word] += 1;\n    } else {\n      $histogram[$word] = 1;\n \
    \   }\n  }\n  return $histogram;\n}\n\nfunction candidate(...$args) {\n    return\
    \ histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b\
    \ b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxulqzoik.php:30\n\
    Stack trace:\n#0 /tmp/tmpxulqzoik.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpxulqzoik.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $array = explode(' ', $test);\n    $result =\
    \ [];\n    foreach ($array as $letter) {\n        if (array_key_exists($letter,\
    \ $result)) {\n            $result[$letter] += 1;\n        } else {\n        \
    \    $result[$letter] = 1;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !==\
    \ array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1,\
    \ \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"\
    b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t\
    \ g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9ncfat11.php:30\n\
    Stack trace:\n#0 /tmp/tmp9ncfat11.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp9ncfat11.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n  $letters = explode(' ', $test);\n  $counts = array_count_values($letters);\n\
    \  $max = max($counts);\n  $result = array_filter($counts, function($value) use\
    \ ($max) {\n    return $value == $max;\n  });\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !==\
    \ array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1,\
    \ \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"\
    b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t\
    \ g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9raxk2o8.php:32\n\
    Stack trace:\n#0 /tmp/tmp9raxk2o8.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp9raxk2o8.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $arr = explode(' ', $test);\n    $count = array_count_values($arr);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5i0ukaso.php:35\n\
    Stack trace:\n#0 /tmp/tmp5i0ukaso.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp5i0ukaso.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n  $arr = explode(' ', $test);\n  $count = array_count_values($arr);\n\
    \  $max = max($count);\n  $result = array();\n  foreach ($count as $key => $value)\
    \ {\n    if ($value == $max) {\n      $result[$key] = $value;\n    }\n  }\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpj_45i1zt.php:35\n\
    Stack trace:\n#0 /tmp/tmpj_45i1zt.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpj_45i1zt.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $letter) {\n        if (isset($result[$letter])) {\n  \
    \          $result[$letter]++;\n        } else {\n            $result[$letter]\
    \ = 1;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9ral86jy.php:30\n\
    Stack trace:\n#0 /tmp/tmp9ral86jy.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp9ral86jy.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n  $test = explode(' ', $test);\n  $result = [];\n\
    \  foreach ($test as $value) {\n    if (array_key_exists($value, $result)) {\n\
    \      $result[$value] += 1;\n    } else {\n      $result[$value] = 1;\n    }\n\
    \  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpb5j1dsfg.php:30\n\
    Stack trace:\n#0 /tmp/tmpb5j1dsfg.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpb5j1dsfg.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n  $test = explode(' ', $test);\n  $histogram = [];\n\
    \  foreach ($test as $letter) {\n    if (isset($histogram[$letter])) {\n     \
    \ $histogram[$letter]++;\n    } else {\n      $histogram[$letter] = 1;\n    }\n\
    \  }\n  $max = max($histogram);\n  $max_letters = [];\n  foreach ($histogram as\
    \ $letter => $count) {\n    if ($count == $max) {\n      $max_letters[$letter]\
    \ = $count;\n    }\n  }\n  return $max_letters;\n}\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0elrv2uu.php:41\n\
    Stack trace:\n#0 /tmp/tmp0elrv2uu.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp0elrv2uu.php\
    \ on line 41\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $value) {\n        if (!array_key_exists($value, $result))\
    \ {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp05a84xra.php:30\n\
    Stack trace:\n#0 /tmp/tmp05a84xra.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp05a84xra.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $arr = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($arr as $value) {\n        if (array_key_exists($value, $result))\
    \ {\n            $result[$value]++;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    $max = max($result);\n    $keys = array_keys($result,\
    \ $max);\n    $result = [];\n    foreach ($keys as $key) {\n        $result[$key]\
    \ = $max;\n    }\n    return $result;\n}\necho '<pre>';\nprint_r(histogram('a\
    \ b c'));\nprint_r(histogram('a b b a'));\nprint_r(histogram('a b c a b'));\n\
    print_r(histogram('b b b b a'));\nprint_r(histogram(''));\necho '</pre>';\nfunction\
    \ candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !==\
    \ array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1,\
    \ \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"\
    b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t\
    \ g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [a] => 1\n    [b] => 1\n    [c] => 1\n)\nArray\n(\n\
    \    [a] => 2\n    [b] => 2\n)\nArray\n(\n    [a] => 2\n    [b] => 2\n)\nArray\n\
    (\n    [b] => 4\n)\nArray\n(\n    [] => 1\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpepkvytlo.php:47\n\
    Stack trace:\n#0 /tmp/tmpepkvytlo.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpepkvytlo.php\
    \ on line 47\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $value) {\n        if (isset($result[$value])) {\n    \
    \        $result[$value]++;\n        } else {\n            $result[$value] = 1;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzz6a05uc.php:30\n\
    Stack trace:\n#0 /tmp/tmpzz6a05uc.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpzz6a05uc.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $value) {\n        if (array_key_exists($value, $result))\
    \ {\n            $result[$value]++;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqhmnppn9.php:30\n\
    Stack trace:\n#0 /tmp/tmpqhmnppn9.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpqhmnppn9.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n  $test = explode(' ', $test);\n  $result = [];\n\
    \  foreach ($test as $letter) {\n    if (array_key_exists($letter, $result)) {\n\
    \      $result[$letter] += 1;\n    } else {\n      $result[$letter] = 1;\n   \
    \ }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4jbk_gut.php:30\n\
    Stack trace:\n#0 /tmp/tmp4jbk_gut.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp4jbk_gut.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n  $letters = explode(' ', $test);\n  $counts = array_count_values($letters);\n\
    \  $max = max($counts);\n  $result = array_filter($counts, function($v) use ($max)\
    \ {\n    return $v == $max;\n  });\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2cmqdobk.php:32\n\
    Stack trace:\n#0 /tmp/tmp2cmqdobk.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp2cmqdobk.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $arr = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($arr as $value) {\n        if (array_key_exists($value, $result))\
    \ {\n            $result[$value]++;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4ss_epii.php:30\n\
    Stack trace:\n#0 /tmp/tmp4ss_epii.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp4ss_epii.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $count = array_count_values($test);\n\
    \    $max = max($count);\n    $result = array_filter($count, function($value)\
    \ use ($max) {\n        return $value == $max;\n    });\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpru3ol4lm.php:32\n\
    Stack trace:\n#0 /tmp/tmpru3ol4lm.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpru3ol4lm.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $letters = explode(' ', $test);\n    $count =\
    \ array_count_values($letters);\n    $max = max($count);\n    $result = array_filter($count,\
    \ function($value) use ($max) {\n        return $value == $max;\n    });\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphkdhn5jq.php:32\n\
    Stack trace:\n#0 /tmp/tmphkdhn5jq.php(36): test()\n#1 {main}\n  thrown in /tmp/tmphkdhn5jq.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $arr = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($arr as $value) {\n        if (!array_key_exists($value, $result))\
    \ {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1f196tio.php:30\n\
    Stack trace:\n#0 /tmp/tmp1f196tio.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp1f196tio.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n  $test = explode(' ', $test);\n  $result = [];\n\
    \  foreach ($test as $letter) {\n    if (array_key_exists($letter, $result)) {\n\
    \      $result[$letter]++;\n    } else {\n      $result[$letter] = 1;\n    }\n\
    \  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwnjg1981.php:30\n\
    Stack trace:\n#0 /tmp/tmpwnjg1981.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpwnjg1981.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $letter) {\n        if (!isset($result[$letter])) {\n \
    \           $result[$letter] = 0;\n        }\n        $result[$letter]++;\n  \
    \  }\n    $max = max($result);\n    $result = array_filter($result, function ($value)\
    \ use ($max) {\n        return $value == $max;\n    });\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5wqxc8_b.php:38\n\
    Stack trace:\n#0 /tmp/tmp5wqxc8_b.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp5wqxc8_b.php\
    \ on line 38\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $value) {\n        if (array_key_exists($value, $result))\
    \ {\n            $result[$value]++;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4x9pacmy.php:30\n\
    Stack trace:\n#0 /tmp/tmp4x9pacmy.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp4x9pacmy.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $test = array_count_values($test);\n\
    \    $max = max($test);\n    $result = [];\n    foreach ($test as $key => $value)\
    \ {\n        if ($value == $max) {\n            $result[$key] = $value;\n    \
    \    }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b\
    \ b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqgh_xzp4.php:35\n\
    Stack trace:\n#0 /tmp/tmpqgh_xzp4.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpqgh_xzp4.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $value) {\n        if (array_key_exists($value, $result))\
    \ {\n            $result[$value]++;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp67yolf6z.php:30\n\
    Stack trace:\n#0 /tmp/tmp67yolf6z.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp67yolf6z.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $letters = explode(' ', $test);\n    $count =\
    \ array_count_values($letters);\n    $max = max($count);\n    $result = array_filter($count,\
    \ function($v) use ($max) {\n        return $v == $max;\n    });\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpx8zx6273.php:32\n\
    Stack trace:\n#0 /tmp/tmpx8zx6273.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpx8zx6273.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $result = [];\n    $letters = explode(' ', $test);\n\
    \    foreach ($letters as $letter) {\n        if (array_key_exists($letter, $result))\
    \ {\n            $result[$letter]++;\n        } else {\n            $result[$letter]\
    \ = 1;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdu9egkq2.php:30\n\
    Stack trace:\n#0 /tmp/tmpdu9egkq2.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpdu9egkq2.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $result = [];\n    $test = explode(' ', $test);\n\
    \    $max = 0;\n    foreach ($test as $letter) {\n        if (isset($result[$letter]))\
    \ {\n            $result[$letter]++;\n        } else {\n            $result[$letter]\
    \ = 1;\n        }\n        if ($result[$letter] > $max) {\n            $max =\
    \ $result[$letter];\n        }\n    }\n    foreach ($result as $key => $value)\
    \ {\n        if ($value < $max) {\n            unset($result[$key]);\n       \
    \ }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b\
    \ b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvli07upz.php:44\n\
    Stack trace:\n#0 /tmp/tmpvli07upz.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpvli07upz.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $value) {\n        if (isset($result[$value])) {\n    \
    \        $result[$value]++;\n        } else {\n            $result[$value] = 1;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9e4qjlvq.php:30\n\
    Stack trace:\n#0 /tmp/tmp9e4qjlvq.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp9e4qjlvq.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = str_split($test);\n    $test = array_count_values($test);\n\
    \    arsort($test);\n    $max = max($test);\n    $result = [];\n    foreach ($test\
    \ as $key => $value) {\n        if ($value == $max) {\n            $result[$key]\
    \ = $value;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpi66xn7la.php:30\n\
    Stack trace:\n#0 /tmp/tmpi66xn7la.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpi66xn7la.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n  $test = explode(' ', $test);\n  $histogram = [];\n\
    \  foreach ($test as $letter) {\n    if (isset($histogram[$letter])) {\n     \
    \ $histogram[$letter]++;\n    } else {\n      $histogram[$letter] = 1;\n    }\n\
    \  }\n  $max = max($histogram);\n  $result = [];\n  foreach ($histogram as $key\
    \ => $value) {\n    if ($value == $max) {\n      $result[$key] = $value;\n   \
    \ }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5k0p8x0z.php:42\n\
    Stack trace:\n#0 /tmp/tmp5k0p8x0z.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp5k0p8x0z.php\
    \ on line 42\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $letter) {\n        if (array_key_exists($letter, $result))\
    \ {\n            $result[$letter]++;\n        } else {\n            $result[$letter]\
    \ = 1;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4a3j4p3y.php:30\n\
    Stack trace:\n#0 /tmp/tmp4a3j4p3y.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp4a3j4p3y.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $histogram\
    \ = [];\n    foreach ($test as $letter) {\n        if (array_key_exists($letter,\
    \ $histogram)) {\n            $histogram[$letter] += 1;\n        } else {\n  \
    \          $histogram[$letter] = 1;\n        }\n    }\n    $max = max($histogram);\n\
    \    $result = [];\n    foreach ($histogram as $key => $value) {\n        if ($value\
    \ == $max) {\n            $result[$key] = $value;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpd5yb2mox.php:42\n\
    Stack trace:\n#0 /tmp/tmpd5yb2mox.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpd5yb2mox.php\
    \ on line 42\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $histogram\
    \ = [];\n    foreach ($test as $letter) {\n        if (isset($histogram[$letter]))\
    \ {\n            $histogram[$letter]++;\n        } else {\n            $histogram[$letter]\
    \ = 1;\n        }\n    }\n    $max = max($histogram);\n    $result = [];\n   \
    \ foreach ($histogram as $key => $value) {\n        if ($value == $max) {\n  \
    \          $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0ax40xop.php:42\n\
    Stack trace:\n#0 /tmp/tmp0ax40xop.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp0ax40xop.php\
    \ on line 42\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $letters = explode(' ', $test);\n    $result\
    \ = [];\n    foreach ($letters as $letter) {\n        if (!isset($result[$letter]))\
    \ {\n            $result[$letter] = 0;\n        }\n        $result[$letter]++;\n\
    \    }\n    arsort($result);\n    $max = reset($result);\n    $result = array_filter($result,\
    \ function ($value) use ($max) {\n        return $value == $max;\n    });\n  \
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp98ppy0ve.php:39\n\
    Stack trace:\n#0 /tmp/tmp98ppy0ve.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp98ppy0ve.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $test = array_count_values($test);\n\
    \    arsort($test);\n    $test = array_flip($test);\n    $test = array_slice($test,\
    \ 0, 1);\n    $test = array_flip($test);\n    $test = array_flip($test);\n   \
    \ return $test;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqt76towp.php:27\n\
    Stack trace:\n#0 /tmp/tmpqt76towp.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpqt76towp.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $letters = explode(' ', $test);\n    $counts\
    \ = array_count_values($letters);\n    $max = max($counts);\n    $result = array_filter($counts,\
    \ function($value) use ($max) {\n        return $value == $max;\n    });\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp38dawe3k.php:32\n\
    Stack trace:\n#0 /tmp/tmp38dawe3k.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp38dawe3k.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = str_split($test);\n    $result = [];\n\
    \    foreach ($test as $value) {\n        if (array_key_exists($value, $result))\
    \ {\n            $result[$value]++;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp63zc436e.php:29\n\
    Stack trace:\n#0 /tmp/tmp63zc436e.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp63zc436e.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $letters = explode(' ', $test);\n    $count =\
    \ array_count_values($letters);\n    $max = max($count);\n    $result = array_filter($count,\
    \ function($v) use ($max) {\n        return $v == $max;\n    });\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2ym_vd76.php:32\n\
    Stack trace:\n#0 /tmp/tmp2ym_vd76.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp2ym_vd76.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $arr = explode(' ', $test);\n    $arr = array_count_values($arr);\n\
    \    arsort($arr);\n    $max = max($arr);\n    $result = array_filter($arr, function($value)\
    \ use ($max) {\n        return $value == $max;\n    });\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcs_ib8fi.php:33\n\
    Stack trace:\n#0 /tmp/tmpcs_ib8fi.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpcs_ib8fi.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = str_split($test);\n    $test = array_count_values($test);\n\
    \    arsort($test);\n    $max = max($test);\n    $result = [];\n    foreach ($test\
    \ as $key => $value) {\n        if ($value == $max) {\n            $result[$key]\
    \ = $value;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpq98zc_uf.php:30\n\
    Stack trace:\n#0 /tmp/tmpq98zc_uf.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpq98zc_uf.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n  $arr = explode(' ', $test);\n  $count = array_count_values($arr);\n\
    \  $max = max($count);\n  $result = array();\n  foreach ($count as $key => $value)\
    \ {\n    if ($value == $max) {\n      $result[$key] = $value;\n    }\n  }\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpg7knoi3q.php:35\n\
    Stack trace:\n#0 /tmp/tmpg7knoi3q.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpg7knoi3q.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $result = [];\n    $test = explode(' ', $test);\n\
    \    foreach ($test as $key => $value) {\n        if (!isset($result[$value]))\
    \ {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9e7c6pcf.php:30\n\
    Stack trace:\n#0 /tmp/tmp9e7c6pcf.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp9e7c6pcf.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $value) {\n        if (isset($result[$value])) {\n    \
    \        $result[$value]++;\n        } else {\n            $result[$value] = 1;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpp3ap1ljh.php:30\n\
    Stack trace:\n#0 /tmp/tmpp3ap1ljh.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpp3ap1ljh.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n  $test = explode(' ', $test);\n  $result = [];\n\
    \  foreach ($test as $value) {\n    if (!array_key_exists($value, $result)) {\n\
    \      $result[$value] = 1;\n    } else {\n      $result[$value]++;\n    }\n \
    \ }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp751rm7qf.php:30\n\
    Stack trace:\n#0 /tmp/tmp751rm7qf.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp751rm7qf.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $letters = explode(' ', $test);\n    $histogram\
    \ = [];\n    foreach ($letters as $letter) {\n        if (array_key_exists($letter,\
    \ $histogram)) {\n            $histogram[$letter]++;\n        } else {\n     \
    \       $histogram[$letter] = 1;\n        }\n    }\n    $max = max($histogram);\n\
    \    $result = [];\n    foreach ($histogram as $key => $value) {\n        if ($value\
    \ == $max) {\n            $result[$key] = $value;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplhchsl4t.php:42\n\
    Stack trace:\n#0 /tmp/tmplhchsl4t.php(46): test()\n#1 {main}\n  thrown in /tmp/tmplhchsl4t.php\
    \ on line 42\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $letters = explode(' ', $test);\n    $count =\
    \ array_count_values($letters);\n    $max = max($count);\n    $result = array_filter($count,\
    \ function($value) use ($max) {\n        return $value == $max;\n    });\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_41emebq.php:32\n\
    Stack trace:\n#0 /tmp/tmp_41emebq.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp_41emebq.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n  $letters = explode(' ', $test);\n  $counts = array_count_values($letters);\n\
    \  $max = max($counts);\n  $result = array_filter($counts, function($value) use\
    \ ($max) {\n    return $value == $max;\n  });\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !==\
    \ array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1,\
    \ \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"\
    b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t\
    \ g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpoy2ppgr0.php:32\n\
    Stack trace:\n#0 /tmp/tmpoy2ppgr0.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpoy2ppgr0.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $letters = explode(' ', $test);\n    $count =\
    \ array_count_values($letters);\n    $max = max($count);\n    $result = array_filter($count,\
    \ function($value) use ($max) {\n        return $value == $max;\n    });\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdd13dcux.php:32\n\
    Stack trace:\n#0 /tmp/tmpdd13dcux.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdd13dcux.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $count = array_count_values($test);\n\
    \    $max = max($count);\n    $result = array_filter($count, function($value)\
    \ use ($max) {\n        return $value == $max;\n    });\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpunv7huef.php:32\n\
    Stack trace:\n#0 /tmp/tmpunv7huef.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpunv7huef.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n  $test = explode(' ', $test);\n  $count = array_count_values($test);\n\
    \  $max = max($count);\n  $result = array();\n  foreach ($count as $key => $value)\
    \ {\n    if ($value == $max) {\n      $result[$key] = $value;\n    }\n  }\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmvnloupv.php:35\n\
    Stack trace:\n#0 /tmp/tmpmvnloupv.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpmvnloupv.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n  $test = explode(' ', $test);\n  $count = array_count_values($test);\n\
    \  $max = array_search(max($count), $count);\n  $result = array_filter($count,\
    \ function($value) use ($max) {\n    return $value == $max;\n  });\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpp0oe_g4d.php:26\n\
    Stack trace:\n#0 /tmp/tmpp0oe_g4d.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpp0oe_g4d.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $letter) {\n        if (array_key_exists($letter, $result))\
    \ {\n            $result[$letter]++;\n        } else {\n            $result[$letter]\
    \ = 1;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpw2olvv7x.php:30\n\
    Stack trace:\n#0 /tmp/tmpw2olvv7x.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpw2olvv7x.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $letter) {\n        if (array_key_exists($letter, $result))\
    \ {\n            $result[$letter]++;\n        } else {\n            $result[$letter]\
    \ = 1;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1tfr4y1t.php:30\n\
    Stack trace:\n#0 /tmp/tmp1tfr4y1t.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp1tfr4y1t.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $letters = explode(' ', $test);\n    $result\
    \ = [];\n    foreach ($letters as $letter) {\n        if (!array_key_exists($letter,\
    \ $result)) {\n            $result[$letter] = 1;\n        } else {\n         \
    \   $result[$letter]++;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !==\
    \ array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1,\
    \ \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"\
    b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t\
    \ g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpeg_fkjff.php:30\n\
    Stack trace:\n#0 /tmp/tmpeg_fkjff.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpeg_fkjff.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $array = explode(' ', $test);\n    $counts =\
    \ array_count_values($array);\n    $max = max($counts);\n    $result = array_filter($counts,\
    \ function($v) use ($max) {\n        return $v == $max;\n    });\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpo2umvro8.php:32\n\
    Stack trace:\n#0 /tmp/tmpo2umvro8.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpo2umvro8.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n  $test = explode(' ', $test);\n  $result = [];\n\
    \  foreach ($test as $value) {\n    if (array_key_exists($value, $result)) {\n\
    \      $result[$value]++;\n    } else {\n      $result[$value] = 1;\n    }\n \
    \ }\n  $max = max($result);\n  $result = array_filter($result, function($value)\
    \ use ($max) {\n    return $value == $max;\n  });\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !==\
    \ array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1,\
    \ \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"\
    b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t\
    \ g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpos7anbkv.php:39\n\
    Stack trace:\n#0 /tmp/tmpos7anbkv.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpos7anbkv.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $test = array_count_values($test);\n\
    \    $max = max($test);\n    foreach ($test as $key => $value) {\n        if ($value\
    \ != $max) {\n            unset($test[$key]);\n        }\n    }\n    return $test;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvu_i6drx.php:34\n\
    Stack trace:\n#0 /tmp/tmpvu_i6drx.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpvu_i6drx.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $letter) {\n        if (isset($result[$letter])) {\n  \
    \          $result[$letter]++;\n        } else {\n            $result[$letter]\
    \ = 1;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpixn7q5pe.php:30\n\
    Stack trace:\n#0 /tmp/tmpixn7q5pe.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpixn7q5pe.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $value) {\n        if (array_key_exists($value, $result))\
    \ {\n            $result[$value]++;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    $max = max($result);\n    foreach ($result as $key\
    \ => $value) {\n        if ($value != $max) {\n            unset($result[$key]);\n\
    \        }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n  \
    \  return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpj7rusupb.php:40\n\
    Stack trace:\n#0 /tmp/tmpj7rusupb.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpj7rusupb.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $count = array_count_values($test);\n\
    \    arsort($count);\n    $max = max($count);\n    $result = array_filter($count,\
    \ function($value) use ($max) {\n        return $value == $max;\n    });\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfaqyvmj2.php:33\n\
    Stack trace:\n#0 /tmp/tmpfaqyvmj2.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpfaqyvmj2.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n  $test = explode(' ', $test);\n  $histogram = [];\n\
    \  foreach ($test as $letter) {\n    if (array_key_exists($letter, $histogram))\
    \ {\n      $histogram[$letter]++;\n    } else {\n      $histogram[$letter] = 1;\n\
    \    }\n  }\n  return $histogram;\n}\n\nfunction candidate(...$args) {\n    return\
    \ histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b\
    \ b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3_uz1t4o.php:30\n\
    Stack trace:\n#0 /tmp/tmp3_uz1t4o.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp3_uz1t4o.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $letter) {\n        if (array_key_exists($letter, $result))\
    \ {\n            $result[$letter] += 1;\n        } else {\n            $result[$letter]\
    \ = 1;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpj21neftt.php:30\n\
    Stack trace:\n#0 /tmp/tmpj21neftt.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpj21neftt.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $result = [];\n    $letters = explode(' ', $test);\n\
    \    foreach ($letters as $letter) {\n        if (!isset($result[$letter])) {\n\
    \            $result[$letter] = 0;\n        }\n        $result[$letter]++;\n \
    \   }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6w_matyj.php:29\n\
    Stack trace:\n#0 /tmp/tmp6w_matyj.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp6w_matyj.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $letters = explode(' ', $test);\n    $count =\
    \ array_count_values($letters);\n    arsort($count);\n    $max = max($count);\n\
    \    $result = array_filter($count, function($value) use ($max) {\n        return\
    \ $value == $max;\n    });\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpm8xrozy7.php:33\n\
    Stack trace:\n#0 /tmp/tmpm8xrozy7.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpm8xrozy7.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $value) {\n        if (array_key_exists($value, $result))\
    \ {\n            $result[$value]++;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4dc0il2g.php:30\n\
    Stack trace:\n#0 /tmp/tmp4dc0il2g.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp4dc0il2g.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $letter) {\n        if (array_key_exists($letter, $result))\
    \ {\n            $result[$letter]++;\n        } else {\n            $result[$letter]\
    \ = 1;\n        }\n    }\n    $max = max($result);\n    $result = array_filter($result,\
    \ function ($value) use ($max) {\n        return $value == $max;\n    });\n  \
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpc811r1ve.php:39\n\
    Stack trace:\n#0 /tmp/tmpc811r1ve.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpc811r1ve.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n  $test = explode(' ', $test);\n  $result = [];\n\
    \  foreach ($test as $value) {\n    if (array_key_exists($value, $result)) {\n\
    \      $result[$value]++;\n    } else {\n      $result[$value] = 1;\n    }\n \
    \ }\n  $max = max($result);\n  $result = array_filter($result, function($value)\
    \ use ($max) {\n    return $value == $max;\n  });\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !==\
    \ array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1,\
    \ \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"\
    b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t\
    \ g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3190h72l.php:39\n\
    Stack trace:\n#0 /tmp/tmp3190h72l.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp3190h72l.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $item) {\n        if (isset($result[$item])) {\n      \
    \      $result[$item]++;\n        } else {\n            $result[$item] = 1;\n\
    \        }\n    }\n    $max = max($result);\n    $result = array_filter($result,\
    \ function ($item) use ($max) {\n        return $item == $max;\n    });\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3moy6997.php:39\n\
    Stack trace:\n#0 /tmp/tmp3moy6997.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp3moy6997.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $value) {\n        if (isset($result[$value])) {\n    \
    \        $result[$value]++;\n        } else {\n            $result[$value] = 1;\n\
    \        }\n    }\n    $max = max($result);\n    $result = array_filter($result,\
    \ function ($value) use ($max) {\n        return $value == $max;\n    });\n  \
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpuzfnw4no.php:39\n\
    Stack trace:\n#0 /tmp/tmpuzfnw4no.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpuzfnw4no.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $result = [];\n    $test = explode(' ', $test);\n\
    \    foreach ($test as $letter) {\n        if (isset($result[$letter])) {\n  \
    \          $result[$letter]++;\n        } else {\n            $result[$letter]\
    \ = 1;\n        }\n    }\n    $max = max($result);\n    $result = array_filter($result,\
    \ function ($value) use ($max) {\n        return $value == $max;\n    });\n  \
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxh73_mz3.php:39\n\
    Stack trace:\n#0 /tmp/tmpxh73_mz3.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpxh73_mz3.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $array = explode(' ', $test);\n    $count = array_count_values($array);\n\
    \    $max = max($count);\n    $result = array_filter($count, function($value)\
    \ use ($max) {\n        return $value == $max;\n    });\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbxdvueoh.php:32\n\
    Stack trace:\n#0 /tmp/tmpbxdvueoh.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpbxdvueoh.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $value) {\n        if (array_key_exists($value, $result))\
    \ {\n            $result[$value] += 1;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmuv3pci5.php:30\n\
    Stack trace:\n#0 /tmp/tmpmuv3pci5.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpmuv3pci5.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n  $test = explode(' ', $test);\n  $result = [];\n\
    \  foreach ($test as $letter) {\n    if (isset($result[$letter])) {\n      $result[$letter]++;\n\
    \    } else {\n      $result[$letter] = 1;\n    }\n  }\n  $max = max($result);\n\
    \  $result = array_filter($result, function($value) use ($max) {\n    return $value\
    \ == $max;\n  });\n  return $result;\n}\n\nfunction candidate(...$args) {\n  \
    \  return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5qc9e5j4.php:39\n\
    Stack trace:\n#0 /tmp/tmp5qc9e5j4.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp5qc9e5j4.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $key => $value) {\n        if (!array_key_exists($value,\
    \ $result)) {\n            $result[$value] = 1;\n        } else {\n          \
    \  $result[$value]++;\n        }\n    }\n    $max = max($result);\n    $result\
    \ = array_filter($result, function ($value) use ($max) {\n        return $value\
    \ == $max;\n    });\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_9eng47a.php:39\n\
    Stack trace:\n#0 /tmp/tmp_9eng47a.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp_9eng47a.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $letters = explode(' ', $test);\n    $counts\
    \ = array_count_values($letters);\n    $max = max($counts);\n    $result = array_filter($counts,\
    \ function($value) use ($max) {\n        return $value == $max;\n    });\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgspbt2n2.php:32\n\
    Stack trace:\n#0 /tmp/tmpgspbt2n2.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpgspbt2n2.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n  $letters = explode(' ', $test);\n  $counts = array_count_values($letters);\n\
    \  $max = max($counts);\n  $result = array_filter($counts, function($v) use ($max)\
    \ {\n    return $v == $max;\n  });\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwj_j1jgv.php:32\n\
    Stack trace:\n#0 /tmp/tmpwj_j1jgv.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpwj_j1jgv.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $value) {\n        if (array_key_exists($value, $result))\
    \ {\n            $result[$value]++;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7vcc_yd7.php:30\n\
    Stack trace:\n#0 /tmp/tmp7vcc_yd7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp7vcc_yd7.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $test = array_count_values($test);\n\
    \    arsort($test);\n    $max = max($test);\n    foreach ($test as $key => $value)\
    \ {\n        if ($value < $max) {\n            unset($test[$key]);\n        }\n\
    \    }\n    return $test;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpu5on57y_.php:35\n\
    Stack trace:\n#0 /tmp/tmpu5on57y_.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpu5on57y_.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $arr = explode(' ', $test);\n    $count = array_count_values($arr);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpanyvguye.php:35\n\
    Stack trace:\n#0 /tmp/tmpanyvguye.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpanyvguye.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $letters = explode(' ', $test);\n    $counts\
    \ = array_count_values($letters);\n    $max = max($counts);\n    $result = array_filter($counts,\
    \ function($value) use ($max) {\n        return $value == $max;\n    });\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpttu62afh.php:32\n\
    Stack trace:\n#0 /tmp/tmpttu62afh.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpttu62afh.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $letters = explode(' ', $test);\n    $count =\
    \ array_count_values($letters);\n    $max = max($count);\n    $result = array_filter($count,\
    \ function($v) use ($max) {\n        return $v == $max;\n    });\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpadr3el_y.php:32\n\
    Stack trace:\n#0 /tmp/tmpadr3el_y.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpadr3el_y.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $letters = explode(' ', $test);\n    $letterCount\
    \ = array_count_values($letters);\n    $max = max($letterCount);\n    $result\
    \ = array_filter($letterCount, function($value) use ($max) {\n        return $value\
    \ == $max;\n    });\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzs4m916s.php:32\n\
    Stack trace:\n#0 /tmp/tmpzs4m916s.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpzs4m916s.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = str_split($test);\n    $result = [];\n\
    \    foreach ($test as $value) {\n        if (!isset($result[$value])) {\n   \
    \         $result[$value] = 1;\n        } else {\n            $result[$value]++;\n\
    \        }\n    }\n    $max = max($result);\n    $result = array_filter($result,\
    \ function ($item) use ($max) {\n        return $item == $max;\n    });\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5fh7ttie.php:33\n\
    Stack trace:\n#0 /tmp/tmp5fh7ttie.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp5fh7ttie.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $value) {\n        if (isset($result[$value])) {\n    \
    \        $result[$value]++;\n        } else {\n            $result[$value] = 1;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpoptsd7os.php:30\n\
    Stack trace:\n#0 /tmp/tmpoptsd7os.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpoptsd7os.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $value) {\n        if (isset($result[$value])) {\n    \
    \        $result[$value]++;\n        } else {\n            $result[$value] = 1;\n\
    \        }\n    }\n    $max = max($result);\n    $result = array_filter($result,\
    \ function ($value) use ($max) {\n        return $value == $max;\n    });\n  \
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpr2cppuqe.php:39\n\
    Stack trace:\n#0 /tmp/tmpr2cppuqe.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpr2cppuqe.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $item) {\n        if (array_key_exists($item, $result))\
    \ {\n            $result[$item]++;\n        } else {\n            $result[$item]\
    \ = 1;\n        }\n    }\n    $max = max($result);\n    $result = array_filter($result,\
    \ function ($item) use ($max) {\n        return $item == $max;\n    });\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjsxeburj.php:39\n\
    Stack trace:\n#0 /tmp/tmpjsxeburj.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpjsxeburj.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $letters = explode(' ', $test);\n    $count =\
    \ array_count_values($letters);\n    $max = max($count);\n    $result = array_filter($count,\
    \ function($v) use ($max) {\n        return $v == $max;\n    });\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwsjsr6gl.php:32\n\
    Stack trace:\n#0 /tmp/tmpwsjsr6gl.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpwsjsr6gl.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $letters = str_split($test);\n    $counts = array_count_values($letters);\n\
    \    $max = max($counts);\n    $result = array_filter($counts, function($value)\
    \ use ($max) {\n        return $value == $max;\n    });\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpepzcp0hr.php:26\n\
    Stack trace:\n#0 /tmp/tmpepzcp0hr.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpepzcp0hr.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n\t$test = explode(' ', $test);\n\t$count = array_count_values($test);\n\
    \t$max = max($count);\n\t$result = array();\n\tforeach ($count as $key => $value)\
    \ {\n\t\tif ($value == $max) {\n\t\t\t$result[$key] = $value;\n\t\t}\n\t}\n\t\
    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpq_kibnos.php:35\n\
    Stack trace:\n#0 /tmp/tmpq_kibnos.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpq_kibnos.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $arr = explode(' ', $test);\n    $count = array_count_values($arr);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpi6ka3qkj.php:35\n\
    Stack trace:\n#0 /tmp/tmpi6ka3qkj.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpi6ka3qkj.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n  $test = explode(' ', $test);\n  $result = [];\n\
    \  foreach ($test as $letter) {\n    if (array_key_exists($letter, $result)) {\n\
    \      $result[$letter] += 1;\n    } else {\n      $result[$letter] = 1;\n   \
    \ }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphfm1u8wf.php:30\n\
    Stack trace:\n#0 /tmp/tmphfm1u8wf.php(39): test()\n#1 {main}\n  thrown in /tmp/tmphfm1u8wf.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $array = explode(' ', $test);\n    $result =\
    \ [];\n    foreach ($array as $value) {\n        if (!array_key_exists($value,\
    \ $result)) {\n            $result[$value] = 1;\n        } else {\n          \
    \  $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxt438fn2.php:30\n\
    Stack trace:\n#0 /tmp/tmpxt438fn2.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpxt438fn2.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $test = array_count_values($test);\n\
    \    arsort($test);\n    $test = array_filter($test, function($value) {\n    \
    \    return $value == max($value);\n    });\n    return $test;\n}\n\nfunction\
    \ candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !==\
    \ array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1,\
    \ \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"\
    b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t\
    \ g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught TypeError: max(): Argument #1 ($value) must\
    \ be of type array, int given in /tmp/tmpdtxwj47h.php:16\nStack trace:\n#0 /tmp/tmpdtxwj47h.php(16):\
    \ max()\n#1 [internal function]: {closure}()\n#2 /tmp/tmpdtxwj47h.php(17): array_filter()\n\
    #3 /tmp/tmpdtxwj47h.php(22): histogram()\n#4 /tmp/tmpdtxwj47h.php(26): candidate()\n\
    #5 /tmp/tmpdtxwj47h.php(36): test()\n#6 {main}\n  thrown in /tmp/tmpdtxwj47h.php\
    \ on line 16\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $letters = explode(' ', $test);\n    $counts\
    \ = array_count_values($letters);\n    $max = max($counts);\n    $result = array_filter($counts,\
    \ function($value) use ($max) {\n        return $value == $max;\n    });\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcxo8qzza.php:32\n\
    Stack trace:\n#0 /tmp/tmpcxo8qzza.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpcxo8qzza.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $result = [];\n    $test = explode(' ', $test);\n\
    \    foreach ($test as $value) {\n        if (array_key_exists($value, $result))\
    \ {\n            $result[$value]++;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpopg2anye.php:30\n\
    Stack trace:\n#0 /tmp/tmpopg2anye.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpopg2anye.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $key => $value) {\n        if (isset($result[$value]))\
    \ {\n            $result[$value]++;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    $max = max($result);\n    $result = array_filter($result,\
    \ function ($value) use ($max) {\n        return $value == $max;\n    });\n  \
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpql0cw6i8.php:39\n\
    Stack trace:\n#0 /tmp/tmpql0cw6i8.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpql0cw6i8.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = str_split($test);\n    $result = [];\n\
    \    foreach ($test as $key => $value) {\n        if (array_key_exists($value,\
    \ $result)) {\n            $result[$value] += 1;\n        } else {\n         \
    \   $result[$value] = 1;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !==\
    \ array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1,\
    \ \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"\
    b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t\
    \ g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzh636kwi.php:29\n\
    Stack trace:\n#0 /tmp/tmpzh636kwi.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpzh636kwi.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $value) {\n        if (array_key_exists($value, $result))\
    \ {\n            $result[$value]++;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    $max = max($result);\n    foreach ($result as $key\
    \ => $value) {\n        if ($value < $max) {\n            unset($result[$key]);\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0koawuwh.php:41\n\
    Stack trace:\n#0 /tmp/tmp0koawuwh.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp0koawuwh.php\
    \ on line 41\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $letter) {\n        if (!isset($result[$letter])) {\n \
    \           $result[$letter] = 0;\n        }\n        $result[$letter]++;\n  \
    \  }\n    $max = max($result);\n    $result = array_filter($result, function ($value)\
    \ use ($max) {\n        return $value == $max;\n    });\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpu0r5yal5.php:38\n\
    Stack trace:\n#0 /tmp/tmpu0r5yal5.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpu0r5yal5.php\
    \ on line 38\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $letters = explode(' ', $test);\n    $count =\
    \ array_count_values($letters);\n    $max = max($count);\n    $result = array_filter($count,\
    \ function($value) use ($max) {\n        return $value == $max;\n    });\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpht3p59fp.php:32\n\
    Stack trace:\n#0 /tmp/tmpht3p59fp.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpht3p59fp.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $arr = explode(' ', $test);\n    $count = array_count_values($arr);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkcjwfkm6.php:35\n\
    Stack trace:\n#0 /tmp/tmpkcjwfkm6.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpkcjwfkm6.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $value) {\n        if (!array_key_exists($value, $result))\
    \ {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpefyvuh99.php:30\n\
    Stack trace:\n#0 /tmp/tmpefyvuh99.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpefyvuh99.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $count = array_count_values($test);\n\
    \    $max = max($count);\n    $result = array_filter($count, function($value)\
    \ use ($max) {\n        return $value == $max;\n    });\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8dsy59xj.php:32\n\
    Stack trace:\n#0 /tmp/tmp8dsy59xj.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp8dsy59xj.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $value) {\n        if (isset($result[$value])) {\n    \
    \        $result[$value] += 1;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    $max = max($result);\n    $result = array_filter($result,\
    \ function ($value) use ($max) {\n        return $value == $max;\n    });\n  \
    \  return $result;\n}\n\necho '<pre>';\nprint_r(histogram('a b c'));\nprint_r(histogram('a\
    \ b b a'));\nprint_r(histogram('a b c a b'));\nprint_r(histogram('b b b b a'));\n\
    print_r(histogram(''));\necho '</pre>';\nfunction candidate(...$args) {\n    return\
    \ histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b\
    \ b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [a] => 1\n    [b] => 1\n    [c] => 1\n)\nArray\n(\n\
    \    [a] => 2\n    [b] => 2\n)\nArray\n(\n    [a] => 2\n    [b] => 2\n)\nArray\n\
    (\n    [b] => 4\n)\nArray\n(\n    [] => 1\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp25wkqq91.php:46\n\
    Stack trace:\n#0 /tmp/tmp25wkqq91.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp25wkqq91.php\
    \ on line 46\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $value) {\n        if (isset($result[$value])) {\n    \
    \        $result[$value]++;\n        } else {\n            $result[$value] = 1;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_r9vipmb.php:30\n\
    Stack trace:\n#0 /tmp/tmp_r9vipmb.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp_r9vipmb.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $letters = explode(' ', $test);\n    $counts\
    \ = array_count_values($letters);\n    $max = max($counts);\n    $max_letters\
    \ = array_keys($counts, $max);\n    $result = array();\n    foreach ($max_letters\
    \ as $letter) {\n        $result[$letter] = $max;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpk17mui_n.php:34\n\
    Stack trace:\n#0 /tmp/tmpk17mui_n.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpk17mui_n.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $letter) {\n        if (!array_key_exists($letter, $result))\
    \ {\n            $result[$letter] = 1;\n        } else {\n            $result[$letter]\
    \ += 1;\n        }\n    }\n    $max = max($result);\n    $max_letters = [];\n\
    \    foreach ($result as $letter => $count) {\n        if ($count == $max) {\n\
    \            $max_letters[$letter] = $count;\n        }\n    }\n    return $max_letters;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpnathw08b.php:42\n\
    Stack trace:\n#0 /tmp/tmpnathw08b.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpnathw08b.php\
    \ on line 42\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n  $letters = explode(' ', $test);\n  $counts = array_count_values($letters);\n\
    \  $max = max($counts);\n  $result = array_filter($counts, function($value) use\
    \ ($max) {\n    return $value == $max;\n  });\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !==\
    \ array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1,\
    \ \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"\
    b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t\
    \ g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp70nb08jl.php:32\n\
    Stack trace:\n#0 /tmp/tmp70nb08jl.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp70nb08jl.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $value) {\n        if (array_key_exists($value, $result))\
    \ {\n            $result[$value]++;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    $max = max($result);\n    $result = array_filter($result,\
    \ function ($value) use ($max) {\n        return $value == $max;\n    });\n  \
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6n0l90b2.php:39\n\
    Stack trace:\n#0 /tmp/tmp6n0l90b2.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp6n0l90b2.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $array = explode(' ', $test);\n    $count = array_count_values($array);\n\
    \    $max = max($count);\n    $result = array_filter($count, function($v) use\
    \ ($max) {\n        return $v == $max;\n    });\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !==\
    \ array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1,\
    \ \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"\
    b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t\
    \ g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzma8m43j.php:32\n\
    Stack trace:\n#0 /tmp/tmpzma8m43j.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpzma8m43j.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $count = array_count_values($test);\n\
    \    $max = max($count);\n    $result = array_filter($count, function($value)\
    \ use ($max) {\n        return $value == $max;\n    });\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpscei_vl9.php:32\n\
    Stack trace:\n#0 /tmp/tmpscei_vl9.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpscei_vl9.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n  $test = explode(' ', $test);\n  $test = array_count_values($test);\n\
    \  $max = max($test);\n  $result = [];\n  foreach ($test as $key => $value) {\n\
    \    if ($value == $max) {\n      $result[$key] = $value;\n    }\n  }\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpagxgkx1t.php:35\n\
    Stack trace:\n#0 /tmp/tmpagxgkx1t.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpagxgkx1t.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $value) {\n        if (array_key_exists($value, $result))\
    \ {\n            $result[$value]++;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6oadtw6w.php:30\n\
    Stack trace:\n#0 /tmp/tmp6oadtw6w.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp6oadtw6w.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $histogram\
    \ = [];\n    foreach ($test as $letter) {\n        if (isset($histogram[$letter]))\
    \ {\n            $histogram[$letter]++;\n        } else {\n            $histogram[$letter]\
    \ = 1;\n        }\n    }\n    $max = max($histogram);\n    $result = [];\n   \
    \ foreach ($histogram as $key => $value) {\n        if ($value == $max) {\n  \
    \          $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmper71a6_d.php:42\n\
    Stack trace:\n#0 /tmp/tmper71a6_d.php(46): test()\n#1 {main}\n  thrown in /tmp/tmper71a6_d.php\
    \ on line 42\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $value) {\n        if (array_key_exists($value, $result))\
    \ {\n            $result[$value]++;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7hgs8shm.php:30\n\
    Stack trace:\n#0 /tmp/tmp7hgs8shm.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp7hgs8shm.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $value) {\n        if (array_key_exists($value, $result))\
    \ {\n            $result[$value] += 1;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6zf0s0x8.php:30\n\
    Stack trace:\n#0 /tmp/tmp6zf0s0x8.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp6zf0s0x8.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $result = [];\n    $test = explode(' ', $test);\n\
    \    foreach ($test as $value) {\n        if (array_key_exists($value, $result))\
    \ {\n            $result[$value] += 1;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp98tz20rz.php:30\n\
    Stack trace:\n#0 /tmp/tmp98tz20rz.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp98tz20rz.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $letters = explode(' ', $test);\n    $counts\
    \ = array_count_values($letters);\n    $max = max($counts);\n    $result = array_filter($counts,\
    \ function($value) use ($max) {\n        return $value == $max;\n    });\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmps0vhdsx2.php:32\n\
    Stack trace:\n#0 /tmp/tmps0vhdsx2.php(36): test()\n#1 {main}\n  thrown in /tmp/tmps0vhdsx2.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $count = array_count_values($test);\n\
    \    $max = max($count);\n    $result = array_filter($count, function($value)\
    \ use ($max) {\n        return $value == $max;\n    });\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkqkh6liz.php:32\n\
    Stack trace:\n#0 /tmp/tmpkqkh6liz.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpkqkh6liz.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $letters = explode(' ', $test);\n    $counts\
    \ = array_count_values($letters);\n    $max = max($counts);\n    $result = array_filter($counts,\
    \ function($v) use ($max) {\n        return $v == $max;\n    });\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpk_p1xs4n.php:32\n\
    Stack trace:\n#0 /tmp/tmpk_p1xs4n.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpk_p1xs4n.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $value) {\n        if (array_key_exists($value, $result))\
    \ {\n            $result[$value]++;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpaslnvmkm.php:30\n\
    Stack trace:\n#0 /tmp/tmpaslnvmkm.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpaslnvmkm.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n  $test = explode(' ', $test);\n  $count = array_count_values($test);\n\
    \  $max = max($count);\n  $result = array();\n  foreach ($count as $key => $value)\
    \ {\n    if ($value == $max) {\n      $result[$key] = $value;\n    }\n  }\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplf0ck4ow.php:35\n\
    Stack trace:\n#0 /tmp/tmplf0ck4ow.php(39): test()\n#1 {main}\n  thrown in /tmp/tmplf0ck4ow.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $letter) {\n        if (isset($result[$letter])) {\n  \
    \          $result[$letter]++;\n        } else {\n            $result[$letter]\
    \ = 1;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzm47z031.php:30\n\
    Stack trace:\n#0 /tmp/tmpzm47z031.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpzm47z031.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $key => $value) {\n        if (!array_key_exists($value,\
    \ $result)) {\n            $result[$value] = 1;\n        } else {\n          \
    \  $result[$value]++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5lw_knf5.php:30\n\
    Stack trace:\n#0 /tmp/tmp5lw_knf5.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp5lw_knf5.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $key => $value) {\n        if (array_key_exists($value,\
    \ $result)) {\n            $result[$value]++;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    $max = max($result);\n    $result = array_filter($result,\
    \ function ($value) use ($max) {\n        return $value == $max;\n    });\n  \
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpa9ou0m07.php:39\n\
    Stack trace:\n#0 /tmp/tmpa9ou0m07.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpa9ou0m07.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $letters = explode(' ', $test);\n    $counts\
    \ = array_count_values($letters);\n    $max = max($counts);\n    $result = array_filter($counts,\
    \ function($v) use ($max) {\n        return $v == $max;\n    });\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzxq1e5e9.php:32\n\
    Stack trace:\n#0 /tmp/tmpzxq1e5e9.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpzxq1e5e9.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $letter) {\n        if (array_key_exists($letter, $result))\
    \ {\n            $result[$letter]++;\n        } else {\n            $result[$letter]\
    \ = 1;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppzrespsx.php:30\n\
    Stack trace:\n#0 /tmp/tmppzrespsx.php(39): test()\n#1 {main}\n  thrown in /tmp/tmppzrespsx.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $test = explode(' ', $test);\n    $result = [];\n\
    \    foreach ($test as $value) {\n        if (isset($result[$value])) {\n    \
    \        $result[$value]++;\n        } else {\n            $result[$value] = 1;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpyiy1cj7b.php:30\n\
    Stack trace:\n#0 /tmp/tmpyiy1cj7b.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyiy1cj7b.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n\
    // histogram('a b b a') == {'a': 2, 'b': 2}\n// histogram('a b c a b') == {'a':\
    \ 2, 'b': 2}\n// histogram('b b b b a') == {'b': 4}\n// histogram('') == {}\n\
    function histogram($test) {\n    $result = [];\n    $test = explode(' ', $test);\n\
    \    foreach ($test as $value) {\n        if (!array_key_exists($value, $result))\
    \ {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgql9v140.php:30\n\
    Stack trace:\n#0 /tmp/tmpgql9v140.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpgql9v140.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception

{
  "name": "mbpp_558_digit_distance_nums",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_558_digit_distance_nums.py",
  "prompt_terminology": "verbatim",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "results": [
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2 acc)\n    (if (or (zero? n1) (zero? n2))\n        acc\n        (digit_distance_helper (quotient n1 10) (quotient n2 10) (+ acc (abs (- (remainder n1 10) (remainder n2 10)))))))\n  (digit_distance_helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2)\n    (if (zero? n1)\n        0\n        (+ (abs (- (remainder n1 10) (remainder n2 10)))\n           (digit_distance_helper (quotient n1 10) (quotient n2 10)))))\n  (digit_distance_helper n1 n2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2 acc)\n    (if (zero? n1)\n        acc\n        (let ([d1 (remainder n1 10)]\n              [d2 (remainder n2 10)])\n          (digit_distance_helper (quotient n1 10) (quotient n2 10) (+ acc (abs (- d1 d2)))))))\n  (digit_distance_helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2 acc)\n    (if (zero? n1)\n        acc\n        (digit_distance_helper (quotient n1 10) (quotient n2 10) (+ acc (abs (- (remainder n1 10) (remainder n2 10)))))))\n  (digit_distance_helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2 acc)\n    (if (zero? n1)\n        acc\n        (digit_distance_helper (quotient n1 10) (quotient n2 10) (+ acc (abs (- (remainder n1 10) (remainder n2 10)))))))\n  (digit_distance_helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit-distance-helper n1 n2)\n    (if (zero? n1)\n        0\n        (+ (abs (- (remainder n1 10) (remainder n2 10)))\n           (digit-distance-helper (quotient n1 10) (quotient n2 10)))))\n  (digit-distance-helper n1 n2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (cond\n    [(zero? n1) 0]\n    [(zero? n2) 0]\n    [else (+ (abs (- (modulo n1 10) (modulo n2 10)))\n             (digit_distance_nums (quotient n1 10) (quotient n2 10)))]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (let ([n1 (number->string n1)]\n        [n2 (number->string n2)])\n    (if (or (zero? (string-length n1))\n            (zero? (string-length n2)))\n        0\n        (+ (abs (- (string-&gt;number (string-take n1 1))\n                   (string-&gt;number (string-take n2 1))))\n           (digit_distance_nums (string-drop n1 1)\n                                (string-drop n2 1))))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510378,
      "stdout": "",
      "stderr": "/tmp/tmp2jmpkmhq.rkt:10:8: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 15\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2)\n    (if (zero? n1)\n        0\n        (+ (abs (- (remainder n1 10) (remainder n2 10)))\n           (digit_distance_helper (quotient n1 10) (quotient n2 10)))))\n  (digit_distance_helper n1 n2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_nums_helper n1 n2 sum)\n    (if (or (zero? n1) (zero? n2))\n        sum\n        (let* ([d1 (remainder n1 10)]\n               [d2 (remainder n2 10)]\n               [diff (abs (- d1 d2))])\n          (digit_distance_nums_helper (quotient n1 10) (quotient n2 10) (+ sum diff)))))\n  (digit_distance_nums_helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (let ((n1 (number->string n1))\n        (n2 (number->string n2)))\n    (if (or (string=? n1 \"\") (string=? n2 \"\"))\n        0\n        (+ (abs (- (string-&gt;number (string-ref n1 0))\n                   (string-&gt;number (string-ref n2 0))))\n           (digit_distance_nums (substring n1 1) (substring n2 1))))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510378,
      "stdout": "",
      "stderr": "/tmp/tmp9y4ub5hi.rkt:9:8: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 13\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2 acc)\n    (if (or (zero? n1) (zero? n2))\n        acc\n        (digit_distance_helper (quotient n1 10) (quotient n2 10) (+ acc (abs (- (remainder n1 10) (remainder n2 10)))))))\n  (digit_distance_helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_nums_iter n1 n2 acc)\n    (if (zero? n1)\n        acc\n        (digit_distance_nums_iter (quotient n1 10) (quotient n2 10) (+ acc (abs (- (remainder n1 10) (remainder n2 10)))))))\n  (digit_distance_nums_iter n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2 acc)\n    (cond\n      [(zero? n1) acc]\n      [(zero? n2) acc]\n      [else\n       (digit_distance_helper (quotient n1 10) (quotient n2 10) (+ acc (abs (- (remainder n1 10) (remainder n2 10)))))]))\n  (digit_distance_helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_nums-iter n1 n2 sum)\n    (if (zero? n1)\n        sum\n        (digit_distance_nums-iter (quotient n1 10) (quotient n2 10) (+ sum (abs (- (remainder n1 10) (remainder n2 10)))))))\n  (digit_distance_nums-iter n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (let ([n1 (number->string n1)]\n        [n2 (number->string n2)])\n    (cond [(or (empty? n1) (empty? n2)) 0]\n          [else (+ (abs (- (string->number (first n1))\n                           (string->number (first n2))))\n                   (digit_distance_nums (rest n1) (rest n2)))])))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmparhs0_4m.rkt:17:4\n\nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"1\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmparhs0_4m.rkt:18:4\n\nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"23\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmparhs0_4m.rkt:19:4\n\nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"123\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (helper n1 n2 acc)\n    (cond [(zero? n1) acc]\n          [(zero? n2) acc]\n          [(= (remainder n1 10) (remainder n2 10)) (helper (quotient n1 10) (quotient n2 10) acc)]\n          [else (helper (quotient n1 10) (quotient n2 10) (+ acc 1))]))\n  (helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpch4ckyyc.rkt:18:4\nactual:     2\nexpected:   6\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpch4ckyyc.rkt:19:4\nactual:     3\nexpected:   7\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_nums_iter n1 n2 sum)\n    (if (zero? n1)\n        sum\n        (digit_distance_nums_iter (quotient n1 10) (quotient n2 10) (+ sum (abs (- (remainder n1 10) (remainder n2 10)))))))\n  (digit_distance_nums_iter n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2)\n    (if (or (zero? n1) (zero? n2))\n        0\n        (+ (abs (- (modulo n1 10) (modulo n2 10)))\n           (digit_distance_helper (quotient n1 10) (quotient n2 10)))))\n  (digit_distance_helper n1 n2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (helper n1 n2)\n    (if (zero? n1)\n        0\n        (+ (abs (- (modulo n1 10) (modulo n2 10)))\n           (helper (quotient n1 10) (quotient n2 10)))))\n  (helper n1 n2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2 sum)\n    (cond\n      [(zero? n1) sum]\n      [(zero? n2) sum]\n      [else\n       (digit_distance_helper (quotient n1 10) (quotient n2 10) (+ sum (abs (- (remainder n1 10) (remainder n2 10)))))]))\n  (digit_distance_helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2)\n    (if (zero? n1)\n        0\n        (+ (abs (- (remainder n1 10) (remainder n2 10)))\n           (digit_distance_helper (quotient n1 10) (quotient n2 10)))))\n  (digit_distance_helper n1 n2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2)\n    (if (or (zero? n1) (zero? n2))\n        0\n        (+ (abs (- (modulo n1 10) (modulo n2 10)))\n           (digit_distance_helper (quotient n1 10) (quotient n2 10)))))\n  (digit_distance_helper n1 n2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2)\n    (if (zero? n1)\n        0\n        (+ (abs (- (modulo n1 10) (modulo n2 10)))\n           (digit_distance_helper (quotient n1 10) (quotient n2 10)))))\n  (digit_distance_helper n1 n2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2)\n    (if (zero? n1)\n        0\n        (+ (abs (- (modulo n1 10) (modulo n2 10)))\n           (digit_distance_helper (quotient n1 10) (quotient n2 10)))))\n  (digit_distance_helper n1 n2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (cond\n    [(zero? n1) n2]\n    [(zero? n2) n1]\n    [else\n     (let* ([d1 (remainder n1 10)]\n            [d2 (remainder n2 10)]\n            [d (abs (- d1 d2))])\n       (+ d (digit_distance_nums (quotient n1 10) (quotient n2 10))))]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (cond\n    [(zero? n1) (abs n2)]\n    [(zero? n2) (abs n1)]\n    [else (+ (abs (- (modulo n1 10) (modulo n2 10)))\n             (digit_distance_nums (quotient n1 10) (quotient n2 10)))]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (cond\n    [(zero? n1) n2]\n    [(zero? n2) n1]\n    [else\n     (+ (abs (- (modulo n1 10) (modulo n2 10)))\n        (digit_distance_nums (quotient n1 10) (quotient n2 10)))]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2 acc)\n    (if (zero? n1)\n        acc\n        (digit_distance_helper (quotient n1 10)\n                               (quotient n2 10)\n                               (+ acc (abs (- (remainder n1 10) (remainder n2 10)))))))\n  (digit_distance_helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2 acc)\n    (cond\n      [(zero? n1) acc]\n      [(zero? n2) acc]\n      [else (digit_distance_helper (quotient n1 10) (quotient n2 10) (+ acc (abs (- (remainder n1 10) (remainder n2 10)))))]))\n  (digit_distance_helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2)\n    (if (zero? n1)\n        0\n        (+ (abs (- (remainder n1 10) (remainder n2 10)))\n           (digit_distance_helper (quotient n1 10) (quotient n2 10)))))\n  (digit_distance_helper n1 n2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2 acc)\n    (if (or (zero? n1) (zero? n2))\n        acc\n        (digit_distance_helper (quotient n1 10) (quotient n2 10) (+ acc (abs (- (remainder n1 10) (remainder n2 10)))))))\n  (digit_distance_helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (let ([n1-digits (string->list (number->string n1))]\n        [n2-digits (string->list (number->string n2))])\n    (if (or (empty? n1-digits) (empty? n2-digits))\n        0\n        (+ (abs (- (string->number (list->string (car n1-digits)))\n                   (string->number (list->string (car n2-digits)))))\n           (digit_distance_nums (string->number (list->string (cdr n1-digits)))\n                                (string->number (list->string (cdr n2-digits))))))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp79vm4i4p.rkt:19:4\n\nlist->string: contract violation\n  expected: list?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp79vm4i4p.rkt:20:4\n\nlist->string: contract violation\n  expected: list?\n  given: #\\2\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp79vm4i4p.rkt:21:4\n\nlist->string: contract violation\n  expected: list?\n  given: #\\1\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (cond\n    [(= n1 n2) 0]\n    [(< n1 n2) (- n2 n1)]\n    [else (- n1 n2)]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8vh3d4mo.rkt:16:4\nactual:     33\nexpected:   6\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8vh3d4mo.rkt:17:4\nactual:     133\nexpected:   7\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2)\n    (if (zero? n1)\n        0\n        (+ (abs (- (remainder n1 10) (remainder n2 10)))\n           (digit_distance_helper (quotient n1 10) (quotient n2 10)))))\n  (digit_distance_helper n1 n2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (let ([d1 (string->list (number->string n1))]\n        [d2 (string->list (number->string n2))])\n    (if (or (null? d1) (null? d2))\n        0\n        (+ (abs (- (string->number (list->string (car d1)))\n                   (string->number (list->string (car d2)))))\n           (digit_distance_nums (string->number (list->string (cdr d1)))\n                                (string->number (list->string (cdr d2))))))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp71msw6pz.rkt:19:4\n\nlist->string: contract violation\n  expected: list?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp71msw6pz.rkt:20:4\n\nlist->string: contract violation\n  expected: list?\n  given: #\\2\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp71msw6pz.rkt:21:4\n\nlist->string: contract violation\n  expected: list?\n  given: #\\1\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2)\n    (if (or (zero? n1) (zero? n2))\n        0\n        (+ (abs (- (modulo n1 10) (modulo n2 10)))\n           (digit_distance_helper (quotient n1 10) (quotient n2 10)))))\n  (digit_distance_helper n1 n2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit-distance-helper n1 n2)\n    (if (zero? n1)\n        0\n        (+ (abs (- (remainder n1 10) (remainder n2 10)))\n           (digit-distance-helper (quotient n1 10) (quotient n2 10)))))\n  (digit-distance-helper n1 n2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (let ([n1 (string->number (number->string n1))]\n        [n2 (string->number (number->string n2))])\n    (if (or (zero? n1) (zero? n2))\n        0\n        (+ (abs (- (modulo n1 10) (modulo n2 10)))\n           (digit_distance_nums (quotient n1 10) (quotient n2 10))))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (let loop ([n1 n1] [n2 n2] [sum 0])\n    (if (and (zero? n1) (zero? n2))\n        sum\n        (let ([d1 (remainder n1 10)]\n              [d2 (remainder n2 10)])\n          (loop (quotient n1 10) (quotient n2 10) (+ sum (abs (- d1 d2))))))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2 acc)\n    (if (and (zero? n1) (zero? n2))\n        acc\n        (digit_distance_helper (quotient n1 10) (quotient n2 10) (+ acc (abs (- (remainder n1 10) (remainder n2 10)))))))\n  (digit_distance_helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (cond\n    [(zero? n1) (abs n2)]\n    [(zero? n2) (abs n1)]\n    [else (+ (abs (- (remainder n1 10) (remainder n2 10)))\n             (digit_distance_nums (quotient n1 10) (quotient n2 10)))]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_nums_iter n1 n2 acc)\n    (if (zero? n1)\n        acc\n        (digit_distance_nums_iter (quotient n1 10) (quotient n2 10) (+ acc (abs (- (remainder n1 10) (remainder n2 10)))))))\n  (digit_distance_nums_iter n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (sum-digits n)\n    (if (zero? n)\n        0\n        (+ (remainder n 10) (sum-digits (quotient n 10)))))\n  (abs (- (sum-digits n1) (sum-digits n2))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2)\n    (if (or (zero? n1) (zero? n2))\n        0\n        (+ (abs (- (remainder n1 10) (remainder n2 10)))\n           (digit_distance_helper (quotient n1 10) (quotient n2 10)))))\n  (digit_distance_helper n1 n2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (cond\n    [(zero? n1) n2]\n    [(zero? n2) n1]\n    [else\n     (abs (- (modulo n1 10) (modulo n2 10)))\n     + (digit_distance_nums (quotient n1 10) (quotient n2 10))]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppeuluwme.rkt:17:4\nactual:     0\nexpected:   1\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppeuluwme.rkt:18:4\nactual:     0\nexpected:   6\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppeuluwme.rkt:19:4\nactual:     0\nexpected:   7\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (let ([n1 (number->string n1)]\n        [n2 (number->string n2)])\n    (if (or (empty? n1) (empty? n2))\n        0\n        (+ (abs (- (string->number (first n1)) (string->number (first n2))))\n           (digit_distance_nums (rest n1) (rest n2))))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpfpmhvhkq.rkt:17:4\n\nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"1\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpfpmhvhkq.rkt:18:4\n\nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"23\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpfpmhvhkq.rkt:19:4\n\nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"123\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2 sum)\n    (if (or (zero? n1) (zero? n2))\n        sum\n        (digit_distance_helper (quotient n1 10) (quotient n2 10) (+ sum (abs (- (remainder n1 10) (remainder n2 10)))))))\n  (digit_distance_helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2 sum)\n    (cond\n      [(zero? n1) sum]\n      [(zero? n2) sum]\n      [else (digit_distance_helper (quotient n1 10) (quotient n2 10) (+ sum (abs (- (remainder n1 10) (remainder n2 10)))))]))\n  (digit_distance_helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_nums_helper n1 n2)\n    (if (zero? n1)\n        0\n        (+ (abs (- (modulo n1 10) (modulo n2 10)))\n           (digit_distance_nums_helper (quotient n1 10) (quotient n2 10)))))\n  (digit_distance_nums_helper (abs n1) (abs n2)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2 sum)\n    (if (and (zero? n1) (zero? n2))\n        sum\n        (let ([d1 (remainder n1 10)]\n              [d2 (remainder n2 10)])\n          (digit_distance_helper (quotient n1 10) (quotient n2 10) (+ sum (abs (- d1 d2)))))))\n  (digit_distance_helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (let ([n1 (number->string n1)])\n    (let ([n2 (number->string n2)])\n      (let ([n1-len (string-length n1)])\n        (let ([n2-len (string-length n2)])\n          (let ([n1-digits (string->list n1)])\n            (let ([n2-digits (string->list n2)])\n              (let ([n1-digits-reversed (reverse n1-digits)])\n                (let ([n2-digits-reversed (reverse n2-digits)])\n                  (let ([n1-digits-reversed-len (length n1-digits-reversed)])\n                    (let ([n2-digits-reversed-len (length n2-digits-reversed)])\n                      (let ([n1-digits-reversed-iter (in-naturals)])\n                        (let ([n2-digits-reversed-iter (in-naturals)])\n                          (let ([n1-digits-reversed-iter-next (in-naturals)])\n                            (let ([n2-digits-reversed-iter-next (in-naturals)])\n                              (let ([n1-digits-reversed-iter-next-next (in-naturals)])\n                                (let ([n2-digits-reversed-iter-next-next (in-naturals)])\n                                  (let ([n1-digits-reversed-iter-next-next-next (in-naturals)])\n                                    (let ([n2-digits-reversed-iter-next-next-next (in-naturals)])\n                                      (let ([n1-digits-reversed-iter-next-next-next-next (in-naturals)])\n                                        (let ([n2-digits-reversed-iter-next-next-next-next (in-naturals)])\n                                          (let ([n1-digits-reversed-iter-next\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "/tmp/tmp303o5eio.rkt:25:48: read-syntax: expected a `]` to close `[`\n  possible cause: indentation suggests a missing `]` before line 26\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (let loop ([n1 n1] [n2 n2] [sum 0])\n    (if (zero? n1)\n        sum\n        (loop (quotient n1 10) (quotient n2 10) (+ sum (abs (- (remainder n1 10) (remainder n2 10))))))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_nums_iter n1 n2 acc)\n    (if (zero? n1)\n        acc\n        (digit_distance_nums_iter (quotient n1 10) (quotient n2 10) (+ acc (abs (- (remainder n1 10) (remainder n2 10)))))))\n  (digit_distance_nums_iter n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_nums_iter n1 n2 sum)\n    (cond\n      [(zero? n1) sum]\n      [(zero? n2) sum]\n      [else (digit_distance_nums_iter (quotient n1 10) (quotient n2 10) (+ sum (abs (- (remainder n1 10) (remainder n2 10)))))]))\n  (digit_distance_nums_iter n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123514,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_nums_iter n1 n2 acc)\n    (if (zero? n1)\n        acc\n        (digit_distance_nums_iter (quotient n1 10)\n                                  (quotient n2 10)\n                                  (+ acc (abs (- (remainder n1 10)\n                                                 (remainder n2 10)))))))\n  (digit_distance_nums_iter n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123514,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2)\n    (if (zero? n1)\n        0\n        (let* ([d1 (remainder n1 10)]\n               [d2 (remainder n2 10)]\n               [diff (abs (- d1 d2))])\n          (+ diff (digit_distance_helper (quotient n1 10) (quotient n2 10))))))\n  (digit_distance_helper n1 n2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123514,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (let ([n1-digits (string->list (number->string n1))]\n        [n2-digits (string->list (number->string n2))])\n    (let loop ([n1-digits n1-digits]\n               [n2-digits n2-digits]\n               [acc 0])\n      (if (or (null? n1-digits) (null? n2-digits))\n          acc\n          (loop (cdr n1-digits)\n                (cdr n2-digits)\n                (+ acc (abs (- (string->number (list->string (car n1-digits)))\n                               (string->number (list->string (car n2-digits)))))))))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123514,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmptw24uhbc.rkt:22:4\n\nlist->string: contract violation\n  expected: list?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmptw24uhbc.rkt:23:4\n\nlist->string: contract violation\n  expected: list?\n  given: #\\2\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmptw24uhbc.rkt:24:4\n\nlist->string: contract violation\n  expected: list?\n  given: #\\1\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_nums_iter n1 n2 sum)\n    (if (zero? n1)\n        sum\n        (digit_distance_nums_iter (quotient n1 10) (quotient n2 10) (+ sum (abs (- (remainder n1 10) (remainder n2 10)))))))\n  (digit_distance_nums_iter n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (if (or (zero? n1) (zero? n2))\n      0\n      (+ (abs (- (modulo n1 10) (modulo n2 10)))\n         (digit_distance_nums (quotient n1 10) (quotient n2 10)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123514,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_nums_iter n1 n2 acc)\n    (cond\n      [(zero? n1) acc]\n      [(zero? n2) acc]\n      [else (digit_distance_nums_iter (quotient n1 10) (quotient n2 10) (+ acc (abs (- (remainder n1 10) (remainder n2 10)))))]))\n  (digit_distance_nums_iter n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123514,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2)\n    (if (and (zero? n1) (zero? n2))\n        0\n        (+ (abs (- (modulo n1 10) (modulo n2 10)))\n           (digit_distance_helper (quotient n1 10) (quotient n2 10)))))\n  (digit_distance_helper n1 n2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123514,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2 sum)\n    (cond\n      [(zero? n1) sum]\n      [(zero? n2) sum]\n      [else (digit_distance_helper (quotient n1 10) (quotient n2 10) (+ sum (abs (- (remainder n1 10) (remainder n2 10)))))]))\n  (digit_distance_helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (cond\n    [(= n1 n2) 0]\n    [(< n1 n2) (- n2 n1)]\n    [else (- n1 n2)]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8vh3d4mo.rkt:16:4\nactual:     33\nexpected:   6\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8vh3d4mo.rkt:17:4\nactual:     133\nexpected:   7\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2 acc)\n    (cond\n      [(zero? n1) acc]\n      [(zero? n2) acc]\n      [else (digit_distance_helper (quotient n1 10) (quotient n2 10) (+ acc (abs (- (remainder n1 10) (remainder n2 10)))))]))\n  (digit_distance_helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2 sum)\n    (cond\n      [(= n1 0) sum]\n      [(= n2 0) sum]\n      [else (digit_distance_helper (quotient n1 10) (quotient n2 10) (+ sum (abs (- (remainder n1 10) (remainder n2 10)))))]))\n  (digit_distance_helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123514,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (let loop ([n1 n1] [n2 n2] [sum 0])\n    (cond\n      [(zero? n1) sum]\n      [(zero? n2) sum]\n      [else (loop (quotient n1 10) (quotient n2 10) (+ sum (abs (- (remainder n1 10) (remainder n2 10)))))])))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123514,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_nums_iter n1 n2 sum)\n    (if (zero? n1)\n        sum\n        (digit_distance_nums_iter (quotient n1 10) (quotient n2 10) (+ sum (abs (- (remainder n1 10) (remainder n2 10)))))))\n  (digit_distance_nums_iter n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2 acc)\n    (if (zero? n1)\n        acc\n        (digit_distance_helper (quotient n1 10) (quotient n2 10) (+ acc (abs (- (remainder n1 10) (remainder n2 10)))))))\n  (digit_distance_helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (let ([d1 (number->string n1)]\n        [d2 (number->string n2)])\n    (if (or (empty? d1) (empty? d2))\n        0\n        (+ (abs (- (string-&gt;number (string-ref d1 0))\n                   (string-&gt;number (string-ref d2 0))))\n           (digit_distance_nums (string-&gt;number (substring d1 1))\n                                (string-&gt;number (substring d2 1)))))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "/tmp/tmpmp5jckje.rkt:12:32: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 14\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2)\n    (if (or (zero? n1) (zero? n2))\n        0\n        (+ (abs (- (modulo n1 10) (modulo n2 10)))\n           (digit_distance_helper (quotient n1 10) (quotient n2 10)))))\n  (digit_distance_helper n1 n2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (sum_of_digits n)\n    (if (zero? n)\n        0\n        (+ (remainder n 10) (sum_of_digits (quotient n 10)))))\n  (abs (- (sum_of_digits n1) (sum_of_digits n2))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123514,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (let loop ([n1 n1] [n2 n2] [sum 0])\n    (if (and (zero? n1) (zero? n2))\n        sum\n        (let ([d1 (remainder n1 10)]\n              [d2 (remainder n2 10)])\n          (loop (quotient n1 10) (quotient n2 10) (+ sum (abs (- d1 d2))))))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (cond\n    [(zero? n1) n2]\n    [(zero? n2) n1]\n    [else\n     (let ([d1 (modulo n1 10)]\n           [d2 (modulo n2 10)])\n       (+ (abs (- d1 d2))\n          (digit_distance_nums (quotient n1 10) (quotient n2 10))))]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123514,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2)\n    (if (zero? n1)\n        0\n        (+ (abs (- (remainder n1 10) (remainder n2 10)))\n           (digit_distance_helper (quotient n1 10) (quotient n2 10)))))\n  (digit_distance_helper n1 n2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2 acc)\n    (cond\n      [(zero? n1) acc]\n      [(zero? n2) acc]\n      [else (digit_distance_helper (quotient n1 10) (quotient n2 10) (+ acc (abs (- (modulo n1 10) (modulo n2 10)))))]))\n  (digit_distance_helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123514,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_nums_helper n1 n2 acc)\n    (cond\n      [(zero? n1) acc]\n      [(zero? n2) acc]\n      [else (digit_distance_nums_helper (quotient n1 10) (quotient n2 10) (+ acc (abs (- (remainder n1 10) (remainder n2 10)))))]))\n  (digit_distance_nums_helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123514,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (let ([n1 (number->string n1)]\n        [n2 (number->string n2)])\n    (if (or (null? n1) (null? n2))\n        0\n        (+ (abs (- (string->number (string-ref n1 0))\n                   (string->number (string-ref n2 0))))\n           (digit_distance_nums (substring n1 1) (substring n2 1))))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123514,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpg18ghe45.rkt:18:4\n\nstring->number: contract violation\n  expected: string?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpg18ghe45.rkt:19:4\n\nstring->number: contract violation\n  expected: string?\n  given: #\\2\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpg18ghe45.rkt:20:4\n\nstring->number: contract violation\n  expected: string?\n  given: #\\1\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (abs-diff x y)\n    (if (&lt; x y) (- y x) (- x y)))\n  (define (digit-distance-helper n1 n2 acc)\n    (if (zero? n1)\n        acc\n        (digit-distance-helper (quotient n1 10) (quotient n2 10)\n                               (+ acc (abs-diff (remainder n1 10) (remainder n2 10))))))\n  (digit-distance-helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "/tmp/tmpt2e5_1os.rkt:6:4: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 14\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_nums_iter n1 n2 sum)\n    (cond [(zero? n1) sum]\n          [(zero? n2) sum]\n          [else (digit_distance_nums_iter (quotient n1 10) (quotient n2 10) (+ sum (abs (- (remainder n1 10) (remainder n2 10)))))]))\n  (digit_distance_nums_iter n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123514,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (let ([n1 (number->string n1)]\n        [n2 (number->string n2)])\n    (if (or (null? n1) (null? n2))\n        0\n        (+ (abs (- (string-&gt;number (string-ref n1 0))\n                   (string-&gt;number (string-ref n2 0))))\n           (digit_distance_nums (string-drop n1 1)\n                                (string-drop n2 1))))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "/tmp/tmpuqvpzeow.rkt:9:8: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 14\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2)\n    (if (zero? n1)\n        0\n        (+ (abs (- (remainder n1 10) (remainder n2 10)))\n           (digit_distance_helper (quotient n1 10) (quotient n2 10)))))\n  (digit_distance_helper n1 n2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2 acc)\n    (cond\n      [(zero? n1) acc]\n      [(zero? n2) (digit_distance_helper (quotient n1 10) (quotient n2 10) (+ acc (abs (- (remainder n1 10) (remainder n2 10)))))]\n      [else (digit_distance_helper (quotient n1 10) (quotient n2 10) (+ acc (abs (- (remainder n1 10) (remainder n2 10))))]))\n  (digit_distance_helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "/tmp/tmpboakl7de.rkt:9:122: read-syntax: missing `)` to close preceding `(`, found instead `]`\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_nums_iter n1 n2 sum)\n    (cond\n      [(zero? n1) sum]\n      [(zero? n2) sum]\n      [else\n       (let ([d1 (remainder n1 10)]\n             [d2 (remainder n2 10)])\n         (digit_distance_nums_iter (quotient n1 10) (quotient n2 10) (+ sum (abs (- d1 d2)))))]))\n  (digit_distance_nums_iter n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123514,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_nums_iter n1 n2 acc)\n    (if (zero? n1)\n        acc\n        (digit_distance_nums_iter (quotient n1 10) (quotient n2 10) (+ acc (abs (- (remainder n1 10) (remainder n2 10)))))))\n  (digit_distance_nums_iter n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_nums_iter n1 n2 acc)\n    (if (zero? n1)\n        acc\n        (digit_distance_nums_iter (quotient n1 10) (quotient n2 10) (+ acc (abs (- (remainder n1 10) (remainder n2 10)))))))\n  (digit_distance_nums_iter n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2)\n    (if (zero? n1)\n        0\n        (+ (abs (- (modulo n1 10) (modulo n2 10)))\n           (digit_distance_helper (quotient n1 10) (quotient n2 10)))))\n  (digit_distance_helper n1 n2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2 acc)\n    (cond\n      [(zero? n1) acc]\n      [(zero? n2) acc]\n      [else (digit_distance_helper (quotient n1 10) (quotient n2 10) (+ acc (abs (- (remainder n1 10) (remainder n2 10)))))]))\n  (digit_distance_helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2)\n    (if (zero? n1)\n        0\n        (+ (abs (- (modulo n1 10) (modulo n2 10)))\n           (digit_distance_helper (quotient n1 10) (quotient n2 10)))))\n  (digit_distance_helper n1 n2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (let loop ([n1 n1] [n2 n2] [sum 0])\n    (if (or (zero? n1) (zero? n2))\n        sum\n        (let ([d1 (remainder n1 10)]\n              [d2 (remainder n2 10)])\n          (loop (quotient n1 10) (quotient n2 10) (+ sum (abs (- d1 d2))))))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123514,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2 acc)\n    (cond\n      [(zero? n1) acc]\n      [(zero? n2) acc]\n      [else (digit_distance_helper (quotient n1 10) (quotient n2 10) (+ acc (abs (- (remainder n1 10) (remainder n2 10)))))]))\n  (digit_distance_helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2)\n    (if (or (zero? n1) (zero? n2))\n        0\n        (+ (abs (- (remainder n1 10) (remainder n2 10)))\n           (digit_distance_helper (quotient n1 10) (quotient n2 10)))))\n  (digit_distance_helper n1 n2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2 acc)\n    (if (zero? n1)\n        acc\n        (let ([d1 (remainder n1 10)]\n              [d2 (remainder n2 10)])\n          (digit_distance_helper (quotient n1 10) (quotient n2 10) (+ acc (abs (- d1 d2)))))))\n  (digit_distance_helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit-distance n1 n2)\n    (if (and (not (zero? n1)) (not (zero? n2)))\n        (+ (abs (- (remainder n1 10) (remainder n2 10)))\n           (digit-distance (quotient n1 10) (quotient n2 10)))\n        0))\n  (digit-distance n1 n2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123514,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2)\n    (if (and (zero? n1) (zero? n2))\n        0\n        (+ (abs (- (remainder n1 10) (remainder n2 10)))\n           (digit_distance_helper (quotient n1 10) (quotient n2 10)))))\n  (digit_distance_helper n1 n2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123514,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2 acc)\n    (if (zero? n1)\n        acc\n        (digit_distance_helper (quotient n1 10) (quotient n2 10) (+ acc (abs (- (remainder n1 10) (remainder n2 10)))))))\n  (digit_distance_helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (let loop ([n1 n1] [n2 n2] [sum 0])\n    (cond [(zero? n1) sum]\n          [(zero? n2) sum]\n          [else (loop (quotient n1 10) (quotient n2 10) (+ sum (abs (- (remainder n1 10) (remainder n2 10)))))])))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123514,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2)\n    (if (zero? n1)\n        0\n        (+ (abs (- (modulo n1 10) (modulo n2 10)))\n           (digit_distance_helper (quotient n1 10) (quotient n2 10)))))\n  (digit_distance_helper n1 n2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2 acc)\n    (cond\n      [(zero? n1) acc]\n      [(zero? n2) acc]\n      [else (digit_distance_helper (quotient n1 10) (quotient n2 10) (+ acc (abs (- (remainder n1 10) (remainder n2 10)))))]))\n  (digit_distance_helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit-distance n1 n2)\n    (if (and (zero? n1) (zero? n2))\n        0\n        (let ([d1 (modulo n1 10)]\n              [d2 (modulo n2 10)])\n          (abs (- d1 d2)))))\n  (define (helper n1 n2 acc)\n    (if (and (zero? n1) (zero? n2))\n        acc\n        (helper (quotient n1 10) (quotient n2 10) (+ acc (digit-distance n1 n2)))))\n  (helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123514,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (let ([n1 (number->string n1)]\n        [n2 (number->string n2)])\n    (if (or (zero? (string-length n1))\n            (zero? (string-length n2)))\n        0\n        (+ (abs (- (string-&gt;number (string-take n1 1))\n                   (string-&gt;number (string-take n2 1))))\n           (digit_distance_nums (string-drop n1 1)\n                                (string-drop n2 1))))))\n</code>\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123514,
      "stdout": "",
      "stderr": "/tmp/tmp28gmvp84.rkt:10:8: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 14\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (let ([d1 (string->list (number->string n1))]\n        [d2 (string->list (number->string n2))])\n    (apply + (map (lambda (x y) (abs (- x y))) d1 d2))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123514,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpk_3gfvs2.rkt:14:4\n\n-: contract violation\n  expected: number?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpk_3gfvs2.rkt:15:4\n\n-: contract violation\n  expected: number?\n  given: #\\2\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpk_3gfvs2.rkt:16:4\n\n-: contract violation\n  expected: number?\n  given: #\\1\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2 acc)\n    (if (or (= n1 0) (= n2 0))\n        acc\n        (digit_distance_helper (quotient n1 10) (quotient n2 10) (+ acc (abs (- (remainder n1 10) (remainder n2 10)))))))\n  (digit_distance_helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123514,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (let ([n1 (number->string n1)])\n    (let ([n2 (number->string n2)])\n      (let ([n1 (string->list n1)])\n        (let ([n2 (string->list n2)])\n          (let ([n1 (map string->number n1)])\n            (let ([n2 (map string->number n2)])\n              (let ([n1 (map abs (- n1 n2))])\n                (apply + n1)))))))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123515,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpj9_ad5tw.rkt:19:4\n\nstring->number: contract violation\n  expected: string?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpj9_ad5tw.rkt:20:4\n\nstring->number: contract violation\n  expected: string?\n  given: #\\2\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpj9_ad5tw.rkt:21:4\n\nstring->number: contract violation\n  expected: string?\n  given: #\\1\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (let ([n1 (string->number (number->string n1))]\n        [n2 (string->number (number->string n2))])\n    (if (or (zero? n1) (zero? n2))\n        0\n        (+ (abs (- (modulo n1 10) (modulo n2 10)))\n           (digit_distance_nums (quotient n1 10) (quotient n2 10))))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_nums-iter n1 n2 acc)\n    (if (zero? n1)\n        acc\n        (digit_distance_nums-iter (quotient n1 10) (quotient n2 10) (+ acc (abs (- (remainder n1 10) (remainder n2 10)))))))\n  (digit_distance_nums-iter n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123515,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2 acc)\n    (cond\n      [(zero? n1) acc]\n      [(zero? n2) acc]\n      [else\n       (let ([d1 (remainder n1 10)]\n             [d2 (remainder n2 10)])\n         (digit_distance_helper (quotient n1 10) (quotient n2 10) (+ acc (abs (- d1 d2)))))]))\n  (digit_distance_helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123515,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2 acc)\n    (cond\n      [(zero? n1) acc]\n      [(zero? n2) acc]\n      [else (digit_distance_helper (quotient n1 10) (quotient n2 10) (+ acc (abs (- (modulo n1 10) (modulo n2 10)))))]))\n  (digit_distance_helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123514,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2)\n    (if (zero? n1)\n        0\n        (+ (abs (- (modulo n1 10) (modulo n2 10)))\n           (digit_distance_helper (quotient n1 10) (quotient n2 10)))))\n  (digit_distance_helper n1 n2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (let ([d1 (string->number (number->string n1))]\n        [d2 (string->number (number->string n2))])\n    (if (or (zero? d1) (zero? d2))\n        0\n        (+ (abs (- (modulo d1 10) (modulo d2 10)))\n           (digit_distance_nums (quotient d1 10) (quotient d2 10))))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123515,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (let loop ([n1 n1] [n2 n2] [sum 0])\n    (if (and (zero? n1) (zero? n2))\n        sum\n        (let ([d1 (remainder n1 10)]\n              [d2 (remainder n2 10)])\n          (loop (quotient n1 10) (quotient n2 10) (+ sum (abs (- d1 d2))))))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2 acc)\n    (cond\n      [(zero? n1) acc]\n      [(zero? n2) acc]\n      [else (digit_distance_helper (quotient n1 10) (quotient n2 10) (+ acc (abs (- (remainder n1 10) (remainder n2 10)))))]))\n  (digit_distance_helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (let loop ([n1 n1] [n2 n2] [sum 0])\n    (if (and (zero? n1) (zero? n2))\n        sum\n        (loop (quotient n1 10)\n              (quotient n2 10)\n              (+ sum (abs (- (remainder n1 10) (remainder n2 10))))))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123515,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_nums_iter n1 n2 sum)\n    (if (or (zero? n1) (zero? n2))\n        sum\n        (let* ([d1 (remainder n1 10)]\n               [d2 (remainder n2 10)]\n               [diff (abs (- d1 d2))])\n          (digit_distance_nums_iter (quotient n1 10) (quotient n2 10) (+ sum diff)))))\n  (digit_distance_nums_iter n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123515,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2 acc)\n    (if (zero? n1)\n        acc\n        (digit_distance_helper (quotient n1 10) (quotient n2 10) (+ acc (abs (- (remainder n1 10) (remainder n2 10)))))))\n  (digit_distance_helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_nums_iter n1 n2 sum)\n    (cond\n      [(zero? n1) sum]\n      [(zero? n2) sum]\n      [else (digit_distance_nums_iter (quotient n1 10) (quotient n2 10) (+ sum (abs (- (remainder n1 10) (remainder n2 10)))))]))\n  (digit_distance_nums_iter n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123514,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (let ([d1 (string->list (number->string n1))]\n        [d2 (string->list (number->string n2))])\n    (if (or (null? d1) (null? d2))\n        0\n        (+ (abs (- (string->number (list->string (car d1)))\n                   (string->number (list->string (car d2)))))\n           (digit_distance_nums (string->number (list->string (cdr d1)))\n                                (string->number (list->string (cdr d2))))))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp71msw6pz.rkt:19:4\n\nlist->string: contract violation\n  expected: list?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp71msw6pz.rkt:20:4\n\nlist->string: contract violation\n  expected: list?\n  given: #\\2\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp71msw6pz.rkt:21:4\n\nlist->string: contract violation\n  expected: list?\n  given: #\\1\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2)\n    (if (or (zero? n1) (zero? n2))\n        0\n        (+ (abs (- (remainder n1 10) (remainder n2 10)))\n           (digit_distance_helper (quotient n1 10) (quotient n2 10)))))\n  (digit_distance_helper n1 n2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2 sum)\n    (cond\n      [(zero? n1) sum]\n      [(zero? n2) sum]\n      [else (digit_distance_helper (quotient n1 10) (quotient n2 10) (+ sum (abs (- (remainder n1 10) (remainder n2 10)))))]))\n  (digit_distance_helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (let ([n1 (number->string n1)]\n        [n2 (number->string n2)])\n    (if (or (empty? n1) (empty? n2))\n        0\n        (+ (abs (- (string->number (substring n1 0 1))\n                   (string->number (substring n2 0 1))))\n           (digit_distance_nums (substring n1 1)\n                                (substring n2 1))))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123515,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp6fuuka03.rkt:19:4\n\nnumber->string: contract violation\n  expected: number?\n  given: \"\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp6fuuka03.rkt:20:4\n\nnumber->string: contract violation\n  expected: number?\n  given: \"3\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp6fuuka03.rkt:21:4\n\nnumber->string: contract violation\n  expected: number?\n  given: \"23\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2 acc)\n    (if (or (zero? n1) (zero? n2))\n        acc\n        (digit_distance_helper (quotient n1 10) (quotient n2 10) (+ acc (abs (- (remainder n1 10) (remainder n2 10)))))))\n  (digit_distance_helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2)\n    (if (zero? n1)\n        0\n        (+ (abs (- (modulo n1 10) (modulo n2 10)))\n           (digit_distance_helper (quotient n1 10) (quotient n2 10)))))\n  (digit_distance_helper n1 n2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (let ([n1-digits (string->list (number->string n1))]\n        [n2-digits (string->list (number->string n2))])\n    (if (or (null? n1-digits) (null? n2-digits))\n        0\n        (+ (abs (- (string->number (list->string n1-digits))\n                   (string->number (list->string n2-digits))))\n           (digit_distance_nums (string->number (list->string (cdr n1-digits)))\n                                (string->number (list->string (cdr n2-digits))))))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123515,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp98gjcv5t.rkt:19:4\n\nnumber->string: contract violation\n  expected: number?\n  given: #f\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp98gjcv5t.rkt:20:4\n\nnumber->string: contract violation\n  expected: number?\n  given: #f\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp98gjcv5t.rkt:21:4\n\nnumber->string: contract violation\n  expected: number?\n  given: #f\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2)\n    (if (and (zero? n1) (zero? n2))\n        0\n        (+ (abs (- (modulo n1 10) (modulo n2 10)))\n           (digit_distance_helper (quotient n1 10) (quotient n2 10)))))\n  (digit_distance_helper n1 n2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123514,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2 acc)\n    (cond\n      [(zero? n1) acc]\n      [(zero? n2) acc]\n      [else (digit_distance_helper (quotient n1 10) (quotient n2 10) (+ acc (abs (- (remainder n1 10) (remainder n2 10)))))]))\n  (digit_distance_helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_num n)\n    (if (zero? n)\n        0\n        (+ (abs (- (modulo n 10) (modulo (quotient n 10) 10)))\n           (digit_distance_num (quotient n 10)))))\n  (digit_distance_num n1)\n  (digit_distance_num n2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123515,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp5kmw23j0.rkt:18:4\nactual:     2\nexpected:   1\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp5kmw23j0.rkt:20:4\nactual:     6\nexpected:   7\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2 acc)\n    (cond [(= n1 0) acc]\n          [(= n2 0) acc]\n          [else (digit_distance_helper (quotient n1 10) (quotient n2 10) (+ acc (abs (- (remainder n1 10) (remainder n2 10)))))]))\n  (digit_distance_helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123515,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_nums-iter n1 n2 sum)\n    (cond [(zero? n1) sum]\n          [(zero? n2) sum]\n          [else (digit_distance_nums-iter (quotient n1 10) (quotient n2 10) (+ sum (abs (- (remainder n1 10) (remainder n2 10)))))]))\n  (digit_distance_nums-iter n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123515,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2 acc)\n    (if (zero? n1)\n        acc\n        (digit_distance_helper (quotient n1 10) (quotient n2 10) (+ acc (abs (- (modulo n1 10) (modulo n2 10)))))))\n  (digit_distance_helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123515,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2)\n    (if (or (zero? n1) (zero? n2))\n        0\n        (+ (abs (- (remainder n1 10) (remainder n2 10)))\n           (digit_distance_helper (quotient n1 10) (quotient n2 10)))))\n  (digit_distance_helper n1 n2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2)\n    (if (or (zero? n1) (zero? n2))\n        0\n        (+ (abs (- (remainder n1 10) (remainder n2 10)))\n           (digit_distance_helper (quotient n1 10) (quotient n2 10)))))\n  (digit_distance_helper n1 n2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2)\n    (if (zero? n1)\n        0\n        (+ (abs (- (remainder n1 10) (remainder n2 10)))\n           (digit_distance_helper (quotient n1 10) (quotient n2 10)))))\n  (digit_distance_helper n1 n2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2)\n    (if (or (= n1 0) (= n2 0))\n        0\n        (+ (abs (- (modulo n1 10) (modulo n2 10)))\n           (digit_distance_helper (quotient n1 10) (quotient n2 10)))))\n  (digit_distance_helper n1 n2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123515,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (let ([n1 (number->string n1)]\n        [n2 (number->string n2)])\n    (if (or (not (string=? (string-length n1) (string-length n2)))\n            (not (string-&gt;number n1))\n            (not (string-&gt;number n2)))\n        -1\n        (let ([n1 (string-&gt;number n1)]\n              [n2 (string-&gt;number n2)])\n          (let loop ([n1 n1]\n                     [n2 n2]\n                     [sum 0])\n            (if (zero? n1)\n                sum\n                (loop (quotient n1 10)\n                      (quotient n2 10)\n                      (+ sum (abs (- (remainder n1 10) (remainder n2 10)))))))))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123514,
      "stdout": "",
      "stderr": "/tmp/tmpcrubc5n8.rkt:20:79: read-syntax: missing `]` to close preceding `[`, found instead `)`\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (helper n1 n2 acc)\n    (if (zero? n1)\n        acc\n        (helper (quotient n1 10) (quotient n2 10) (+ acc (abs (- (remainder n1 10) (remainder n2 10)))))))\n  (helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123515,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit-distance n1 n2)\n    (if (zero? n1)\n        0\n        (if (zero? n2)\n            0\n            (+ (abs (- (remainder n1 10) (remainder n2 10)))\n               (digit-distance (quotient n1 10) (quotient n2 10))))))\n  (digit-distance n1 n2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123515,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2 acc)\n    (if (or (zero? n1) (zero? n2))\n        acc\n        (digit_distance_helper (quotient n1 10) (quotient n2 10) (+ acc (abs (- (remainder n1 10) (remainder n2 10)))))))\n  (digit_distance_helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (let ([d1 (string->list (number->string n1))]\n        [d2 (string->list (number->string n2))])\n    (cond\n      [(empty? d1) 0]\n      [(empty? d2) 0]\n      [else (+ (abs (- (string->number (list->string (list (car d1))))\n                       (string->number (list->string (list (car d2))))))\n                (digit_distance_nums (list->string (cdr d1))\n                                     (list->string (cdr d2))))])))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123515,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpr_m2yffx.rkt:20:4\n\nnumber->string: contract violation\n  expected: number?\n  given: \"\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpr_m2yffx.rkt:21:4\n\nnumber->string: contract violation\n  expected: number?\n  given: \"3\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpr_m2yffx.rkt:22:4\n\nnumber->string: contract violation\n  expected: number?\n  given: \"23\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (let ([n1-digits (number->string n1)]\n        [n2-digits (number->string n2)])\n    (cond [(empty? n1-digits) 0]\n          [(empty? n2-digits) 0]\n          [else (+ (abs (- (string-&gt;number (string-ref n1-digits 0))\n                          (string-&gt;number (string-ref n2-digits 0))))\n                   (digit_distance_nums (string-&gt;number (substring n1-digits 1))\n                                        (string-&gt;number (substring n2-digits 1))))])))\n</code>\nI'm not sure if this is the most efficient way to do it, but it works.\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123514,
      "stdout": "",
      "stderr": "/tmp/tmpcnnl_ivq.rkt:12:40: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 13\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit-distance-helper n1 n2 acc)\n    (cond [(= n1 0) acc]\n          [(= n2 0) acc]\n          [else (digit-distance-helper (quotient n1 10) (quotient n2 10) (+ acc (abs (- (remainder n1 10) (remainder n2 10)))))]))\n  (digit-distance-helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123515,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_nums_iter n1 n2 acc)\n    (cond\n      [(zero? n1) acc]\n      [(zero? n2) acc]\n      [else (digit_distance_nums_iter (quotient n1 10) (quotient n2 10) (+ acc (abs (- (remainder n1 10) (remainder n2 10)))))]))\n  (digit_distance_nums_iter n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123514,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit-distance n1 n2)\n    (if (and (not (zero? n1)) (not (zero? n2)))\n        (+ (abs (- (remainder n1 10) (remainder n2 10)))\n           (digit-distance (quotient n1 10) (quotient n2 10)))\n        0))\n  (digit-distance n1 n2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123514,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_nums_iter n1 n2 acc)\n    (if (zero? n1)\n        acc\n        (digit_distance_nums_iter (quotient n1 10) (quotient n2 10) (+ acc (abs (- (remainder n1 10) (remainder n2 10)))))))\n  (digit_distance_nums_iter n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_nums_helper n1 n2 sum)\n    (if (zero? n1)\n        sum\n        (digit_distance_nums_helper (quotient n1 10) (quotient n2 10) (+ sum (abs (- (remainder n1 10) (remainder n2 10)))))))\n  (digit_distance_nums_helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123515,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (if (zero? n1)\n      (abs (- n1 n2))\n      (+ (abs (- (modulo n1 10) (modulo n2 10)))\n         (digit_distance_nums (quotient n1 10) (quotient n2 10)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123515,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2)\n    (if (zero? n1)\n        0\n        (+ (abs (- (remainder n1 10) (remainder n2 10)))\n           (digit_distance_helper (quotient n1 10) (quotient n2 10)))))\n  (digit_distance_helper n1 n2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2 acc)\n    (if (zero? n1)\n        acc\n        (digit_distance_helper (quotient n1 10) (quotient n2 10) (+ acc (abs (- (remainder n1 10) (remainder n2 10)))))))\n  (digit_distance_helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (sum_digits n)\n    (if (zero? n)\n        0\n        (+ (remainder n 10) (sum_digits (quotient n 10)))))\n  (abs (- (sum_digits n1) (sum_digits n2))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123515,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (let ([d1 (string->list (number->string n1))]\n        [d2 (string->list (number->string n2))])\n    (if (or (null? d1) (null? d2))\n        0\n        (+ (abs (- (string->number (list->string (car d1)))\n                   (string->number (list->string (car d2)))))\n           (digit_distance_nums (string->number (list->string (cdr d1)))\n                                (string->number (list->string (cdr d2))))))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp71msw6pz.rkt:19:4\n\nlist->string: contract violation\n  expected: list?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp71msw6pz.rkt:20:4\n\nlist->string: contract violation\n  expected: list?\n  given: #\\2\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp71msw6pz.rkt:21:4\n\nlist->string: contract violation\n  expected: list?\n  given: #\\1\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2)\n    (if (and (zero? n1) (zero? n2))\n        0\n        (+ (abs (- (remainder n1 10) (remainder n2 10)))\n           (digit_distance_helper (quotient n1 10) (quotient n2 10)))))\n  (digit_distance_helper n1 n2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123514,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (let ([n1 (number->string n1)]\n        [n2 (number->string n2)])\n    (if (or (null? n1) (null? n2))\n        0\n        (+ (abs (- (string->number (string-ref n1 0))\n                   (string->number (string-ref n2 0))))\n           (digit_distance_nums (string-drop n1 1)\n                                (string-drop n2 1))))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123515,
      "stdout": "",
      "stderr": "/tmp/tmp5qx9cyur.rkt:11:33: string-drop: unbound identifier\n  in: string-drop\n  location...:\n   /tmp/tmp5qx9cyur.rkt:11:33\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (let ([n1 (number->string n1)]\n        [n2 (number->string n2)])\n    (if (or (not (string=? (string-length n1) (string-length n2)))\n            (not (andmap char-numeric? n1))\n            (not (andmap char-numeric? n2)))\n        (error \"Inputs must be the same length and contain only digits.\"))\n    (let ([n1 (string->number n1)]\n          [n2 (string->number n2)])\n      (for/sum ([i (in-range (string-length n1))])\n        (abs (- (modulo n1 (expt 10 i))\n                (modulo n2 (expt 10 i))))))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123515,
      "stdout": "",
      "stderr": "/tmp/tmpazw1d9hg.rkt:7:4: if: missing an \"else\" expression\n  in: (if (or (not (string=? (string-length n1) (string-length n2))) (not (andmap char-numeric? n1)) (not (andmap char-numeric? n2))) (error \"Inputs must be the same length and contain only digits.\"))\n  location...:\n   /tmp/tmpazw1d9hg.rkt:7:4\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (let ([n1-digits (number->string n1)]\n        [n2-digits (number->string n2)])\n    (if (or (empty? n1-digits) (empty? n2-digits))\n        0\n        (+ (abs (- (string-&gt;number (first n1-digits))\n                   (string-&gt;number (first n2-digits))))\n           (digit_distance_nums (string-&gt;number (rest n1-digits))\n                                (string-&gt;number (rest n2-digits)))))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123515,
      "stdout": "",
      "stderr": "/tmp/tmpy8a4uxra.rkt:12:32: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 14\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2 sum)\n    (cond [(= n1 0) sum]\n          [(= n2 0) sum]\n          [else (digit_distance_helper (quotient n1 10) (quotient n2 10) (+ sum (abs (- (remainder n1 10) (remainder n2 10)))))]))\n  (digit_distance_helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123515,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (let ([n1 (number->string n1)]\n        [n2 (number->string n2)])\n    (if (or (empty? n1) (empty? n2))\n        0\n        (+ (abs (- (string->number (substring n1 0 1))\n                   (string->number (substring n2 0 1))))\n           (digit_distance_nums (substring n1 1) (substring n2 1))))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123515,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpnj0s4zks.rkt:18:4\n\nnumber->string: contract violation\n  expected: number?\n  given: \"\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpnj0s4zks.rkt:19:4\n\nnumber->string: contract violation\n  expected: number?\n  given: \"3\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpnj0s4zks.rkt:20:4\n\nnumber->string: contract violation\n  expected: number?\n  given: \"23\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_nums-iter n1 n2 sum)\n    (cond\n      [(zero? n1) sum]\n      [(zero? n2) sum]\n      [else (digit_distance_nums-iter (quotient n1 10) (quotient n2 10) (+ sum (abs (- (remainder n1 10) (remainder n2 10)))))]))\n  (digit_distance_nums-iter n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123515,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2)\n    (if (zero? n1)\n        0\n        (+ (abs (- (modulo n1 10) (modulo n2 10)))\n           (digit_distance_helper (quotient n1 10) (quotient n2 10)))))\n  (digit_distance_helper n1 n2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2 acc)\n    (cond\n      [(zero? n1) acc]\n      [(zero? n2) acc]\n      [else (digit_distance_helper (quotient n1 10) (quotient n2 10) (+ acc (abs (- (remainder n1 10) (remainder n2 10)))))]))\n  (digit_distance_helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2 acc)\n    (cond ((zero? n1) acc)\n          ((zero? n2) acc)\n          (else (digit_distance_helper (quotient n1 10) (quotient n2 10) (+ acc (abs (- (remainder n1 10) (remainder n2 10))))))))\n  (digit_distance_helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123515,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2 acc)\n    (if (and (zero? n1) (zero? n2))\n        acc\n        (let ([d1 (modulo n1 10)]\n              [d2 (modulo n2 10)])\n          (digit_distance_helper (quotient n1 10) (quotient n2 10) (+ acc (abs (- d1 d2)))))))\n  (digit_distance_helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123516,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (cond\n    [(zero? n1) n2]\n    [(zero? n2) n1]\n    [else\n     (let ([d1 (remainder n1 10)]\n           [d2 (remainder n2 10)])\n       (add1 (digit_distance_nums (quotient n1 10) (quotient n2 10))))]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123516,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpcz9q93m7.rkt:19:4\nactual:     2\nexpected:   6\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpcz9q93m7.rkt:20:4\nactual:     3\nexpected:   7\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2 sum)\n    (cond\n      [(zero? n1) sum]\n      [(zero? n2) sum]\n      [else (digit_distance_helper (quotient n1 10) (quotient n2 10) (+ sum (abs (- (remainder n1 10) (remainder n2 10)))))]))\n  (digit_distance_helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2 sum)\n    (if (and (zero? n1) (zero? n2))\n        sum\n        (let* ([d1 (modulo n1 10)]\n               [d2 (modulo n2 10)]\n               [diff (abs (- d1 d2))])\n          (digit_distance_helper (quotient n1 10) (quotient n2 10) (+ sum diff)))))\n  (digit_distance_helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123516,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_nums_iter n1 n2 sum)\n    (cond\n      [(= n1 0) sum]\n      [(= n2 0) sum]\n      [else\n       (let ([d1 (remainder n1 10)]\n             [d2 (remainder n2 10)])\n         (digit_distance_nums_iter (quotient n1 10) (quotient n2 10) (+ sum (abs (- d1 d2)))))]))\n  (digit_distance_nums_iter n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123516,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2 sum)\n    (if (zero? n1)\n        sum\n        (digit_distance_helper (quotient n1 10)\n                               (quotient n2 10)\n                               (+ sum (abs (- (remainder n1 10) (remainder n2 10)))))))\n  (digit_distance_helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123516,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2 acc)\n    (cond\n      [(= n1 0) acc]\n      [(= n2 0) acc]\n      [else (digit_distance_helper (quotient n1 10) (quotient n2 10) (+ acc (abs (- (remainder n1 10) (remainder n2 10)))))]))\n  (digit_distance_helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123516,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (if (zero? n1)\n      (if (zero? n2)\n          0\n          (digit_distance_nums 0 (- n2 1)))\n      (if (zero? n2)\n          (digit_distance_nums (- n1 1) 0)\n          (+ (abs (- (modulo n1 10) (modulo n2 10)))\n             (digit_distance_nums (quotient n1 10) (quotient n2 10))))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123516,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2 acc)\n    (cond [(= n1 0) acc]\n          [(= n2 0) acc]\n          [else (digit_distance_helper (quotient n1 10) (quotient n2 10) (+ acc (abs (- (remainder n1 10) (remainder n2 10)))))]))\n  (digit_distance_helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123515,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_nums_helper n1 n2 acc)\n    (cond [(= n1 0) acc]\n          [(= n2 0) acc]\n          [else (digit_distance_nums_helper (quotient n1 10) (quotient n2 10) (+ acc (abs (- (remainder n1 10) (remainder n2 10)))))]))\n  (digit_distance_nums_helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123516,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (let loop ([n1 n1] [n2 n2] [sum 0])\n    (cond [(zero? n1) sum]\n          [(zero? n2) sum]\n          [else (loop (quotient n1 10) (quotient n2 10) (+ sum (abs (- (remainder n1 10) (remainder n2 10)))))])))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123514,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_nums_iter n1 n2 sum)\n    (cond\n      [(zero? n1) sum]\n      [(zero? n2) sum]\n      [else (digit_distance_nums_iter (quotient n1 10) (quotient n2 10) (+ sum (abs (- (remainder n1 10) (remainder n2 10)))))]))\n  (digit_distance_nums_iter n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123514,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2 acc)\n    (if (zero? n1)\n        acc\n        (let* ([d1 (remainder n1 10)]\n               [d2 (remainder n2 10)]\n               [diff (abs (- d1 d2))])\n          (digit_distance_helper (quotient n1 10) (quotient n2 10) (+ acc diff)))))\n  (digit_distance_helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123516,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (distance-helper n1 n2)\n    (if (zero? n1)\n        0\n        (+ (abs (- (remainder n1 10) (remainder n2 10)))\n           (distance-helper (quotient n1 10) (quotient n2 10)))))\n  (distance-helper n1 n2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123516,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2)\n    (if (zero? n1)\n        0\n        (+ (abs (- (remainder n1 10) (remainder n2 10)))\n           (digit_distance_helper (quotient n1 10) (quotient n2 10)))))\n  (digit_distance_helper n1 n2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2 acc)\n    (if (and (zero? n1) (zero? n2))\n        acc\n        (digit_distance_helper (quotient n1 10) (quotient n2 10) (+ acc (abs (- (remainder n1 10) (remainder n2 10)))))))\n  (digit_distance_helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (abs x)\n    (if (&lt; x 0) (- x) x))\n  (define (sum-digits n)\n    (if (&lt; n 10) n\n        (+ (remainder n 10) (sum-digits (quotient n 10)))))\n  (abs (- (sum-digits n1) (sum-digits n2))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123515,
      "stdout": "",
      "stderr": "/tmp/tmp6k0c2b80.rkt:6:8: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 7\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_nums_iter n1 n2 sum)\n    (if (zero? n1)\n        sum\n        (digit_distance_nums_iter (quotient n1 10) (quotient n2 10) (+ sum (abs (- (remainder n1 10) (remainder n2 10)))))))\n  (digit_distance_nums_iter n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2 acc)\n    (if (or (zero? n1) (zero? n2))\n        acc\n        (digit_distance_helper (quotient n1 10) (quotient n2 10) (+ acc (abs (- (remainder n1 10) (remainder n2 10)))))))\n  (digit_distance_helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2)\n    (if (zero? n1)\n        0\n        (+ (abs (- (modulo n1 10) (modulo n2 10)))\n           (digit_distance_helper (quotient n1 10) (quotient n2 10)))))\n  (digit_distance_helper n1 n2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2)\n    (if (or (zero? n1) (zero? n2))\n        0\n        (+ (abs (- (remainder n1 10) (remainder n2 10)))\n           (digit_distance_helper (quotient n1 10) (quotient n2 10)))))\n  (digit_distance_helper n1 n2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (sum-digits n)\n    (if (zero? n)\n        0\n        (+ (remainder n 10) (sum-digits (quotient n 10)))))\n  (abs (- (sum-digits n1) (sum-digits n2))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (let ([n1-digits (string->list (number->string n1))]\n        [n2-digits (string->list (number->string n2))])\n    (if (or (empty? n1-digits) (empty? n2-digits))\n        0\n        (+ (abs (- (string->number (list->string (car n1-digits)))\n                   (string->number (list->string (car n2-digits)))))\n           (digit_distance_nums (string->number (list->string (cdr n1-digits)))\n                                (string->number (list->string (cdr n2-digits))))))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp79vm4i4p.rkt:19:4\n\nlist->string: contract violation\n  expected: list?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp79vm4i4p.rkt:20:4\n\nlist->string: contract violation\n  expected: list?\n  given: #\\2\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp79vm4i4p.rkt:21:4\n\nlist->string: contract violation\n  expected: list?\n  given: #\\1\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (let loop ([n1 n1] [n2 n2] [sum 0])\n    (cond [(zero? n1) sum]\n          [(zero? n2) sum]\n          [else (loop (quotient n1 10) (quotient n2 10) (+ sum (abs (- (remainder n1 10) (remainder n2 10)))))])))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123514,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_nums_iter n1 n2 sum)\n    (if (zero? n1)\n        sum\n        (digit_distance_nums_iter (quotient n1 10) (quotient n2 10) (+ sum (abs (- (remainder n1 10) (remainder n2 10)))))))\n  (digit_distance_nums_iter n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_nums_iter n1 n2 acc)\n    (cond [(= n1 0) acc]\n          [(= n2 0) acc]\n          [else (digit_distance_nums_iter (quotient n1 10) (quotient n2 10) (+ acc (abs (- (remainder n1 10) (remainder n2 10)))))]))\n  (digit_distance_nums_iter n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123516,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_nums_helper n1 n2 acc)\n    (if (zero? n1)\n        acc\n        (digit_distance_nums_helper (quotient n1 10) (quotient n2 10) (+ acc (abs (- (remainder n1 10) (remainder n2 10)))))))\n  (digit_distance_nums_helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123516,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (let loop ([n1 (number->string n1)]\n             [n2 (number->string n2)]\n             [acc 0])\n    (cond [(empty? n1) acc]\n          [(empty? n2) acc]\n          [else (loop (rest n1)\n                      (rest n2)\n                      (+ acc (abs (- (string->number (string (first n1)))\n                                     (string->number (string (first n2)))))))])))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123516,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmphwqc_nq2.rkt:20:4\n\nrest: contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"1\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmphwqc_nq2.rkt:21:4\n\nrest: contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"23\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmphwqc_nq2.rkt:22:4\n\nrest: contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"123\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (let ([n1-digits (string->list (number->string n1))]\n        [n2-digits (string->list (number->string n2))])\n    (if (or (empty? n1-digits) (empty? n2-digits))\n        0\n        (+ (abs (- (string->number (list->string (car n1-digits)))\n                   (string->number (list->string (car n2-digits)))))\n           (digit_distance_nums (string->number (list->string (cdr n1-digits)))\n                                (string->number (list->string (cdr n2-digits))))))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp79vm4i4p.rkt:19:4\n\nlist->string: contract violation\n  expected: list?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp79vm4i4p.rkt:20:4\n\nlist->string: contract violation\n  expected: list?\n  given: #\\2\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp79vm4i4p.rkt:21:4\n\nlist->string: contract violation\n  expected: list?\n  given: #\\1\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2 acc)\n    (if (zero? n1)\n        acc\n        (digit_distance_helper (quotient n1 10) (quotient n2 10) (+ acc (abs (- (remainder n1 10) (remainder n2 10)))))))\n  (digit_distance_helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (cond\n    [(zero? n1) n2]\n    [(zero? n2) n1]\n    [else\n     (let* ([d1 (remainder n1 10)]\n            [d2 (remainder n2 10)]\n            [d (abs (- d1 d2))])\n       (+ d (digit_distance_nums (quotient n1 10) (quotient n2 10))))]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (cond\n    [(zero? n1) (abs (- n2))]\n    [(zero? n2) (abs (- n1))]\n    [else\n     (+ (abs (- (remainder n1 10) (remainder n2 10)))\n        (digit_distance_nums (quotient n1 10) (quotient n2 10)))]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123516,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2 acc)\n    (if (zero? n1)\n        acc\n        (let* ([d1 (remainder n1 10)]\n               [d2 (remainder n2 10)]\n               [d (abs (- d1 d2))])\n          (digit_distance_helper (quotient n1 10) (quotient n2 10) (+ acc d)))))\n  (digit_distance_helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123516,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_nums_iter n1 n2 sum)\n    (if (zero? n1)\n        sum\n        (digit_distance_nums_iter (quotient n1 10)\n                                  (quotient n2 10)\n                                  (+ sum (abs (- (remainder n1 10) (remainder n2 10)))))))\n  (digit_distance_nums_iter n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123516,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2 acc)\n    (cond [(zero? n1) acc]\n          [(zero? n2) acc]\n          [else (digit_distance_helper (quotient n1 10) (quotient n2 10) (+ acc (abs (- (remainder n1 10) (remainder n2 10)))))]))\n  (digit_distance_helper n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123516,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2)\n    (if (or (zero? n1) (zero? n2))\n        0\n        (+ (abs (- (remainder n1 10) (remainder n2 10)))\n           (digit_distance_helper (quotient n1 10) (quotient n2 10)))))\n  (digit_distance_helper n1 n2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2)\n    (if (and (zero? n1) (zero? n2))\n        0\n        (+ (abs (- (remainder n1 10) (remainder n2 10)))\n           (digit_distance_helper (quotient n1 10) (quotient n2 10)))))\n  (digit_distance_helper n1 n2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123514,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_nums_iter n1 n2 sum)\n    (if (zero? n1)\n        sum\n        (digit_distance_nums_iter (quotient n1 10)\n                                  (quotient n2 10)\n                                  (+ sum (abs (- (remainder n1 10) (remainder n2 10)))))))\n  (digit_distance_nums_iter n1 n2 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123516,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2)\n    (if (zero? n1)\n        0\n        (+ (abs (- (modulo n1 10) (modulo n2 10)))\n           (digit_distance_helper (quotient n1 10) (quotient n2 10)))))\n  (digit_distance_helper n1 n2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (let ([n1-digits (string->list (number->string n1))]\n        [n2-digits (string->list (number->string n2))])\n    (if (or (null? n1-digits) (null? n2-digits))\n        0\n        (+ (abs (- (string->number (list->string (list (car n1-digits))))\n                  (string->number (list->string (list (car n2-digits))))))\n           (digit_distance_nums (string->number (list->string (cdr n1-digits)))\n                                (string->number (list->string (cdr n2-digits))))))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123516,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp7ebp8ycm.rkt:19:4\n\nnumber->string: contract violation\n  expected: number?\n  given: #f\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp7ebp8ycm.rkt:20:4\n\nnumber->string: contract violation\n  expected: number?\n  given: #f\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp7ebp8ycm.rkt:21:4\n\nnumber->string: contract violation\n  expected: number?\n  given: #f\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the per-digit difference between two integers.\n(define (digit_distance_nums n1 n2)\n  (define (digit_distance_helper n1 n2)\n    (if (zero? n1)\n        0\n        (+ (abs (- (remainder n1 10) (remainder n2 10)))\n           (digit_distance_helper (quotient n1 10) (quotient n2 10)))))\n  (digit_distance_helper n1 n2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate digit_distance_nums))\n    (check-equal? (candidate 1 2) 1)\n    (check-equal? (candidate 23 56) 6)\n    (check-equal? (candidate 123 256) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
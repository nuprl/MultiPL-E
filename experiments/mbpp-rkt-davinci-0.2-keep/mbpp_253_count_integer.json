{
  "name": "mbpp_253_count_integer",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a python function that returns the number of integer elements in a given list.\n(define (count_integer list1)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_253_count_integer.py",
  "prompt_terminology": "verbatim",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate count_integer))\n    (check-equal? (candidate (list 1 2 \"abc\" 1.2)) 2)\n    (check-equal? (candidate (list 1 2 3)) 3)\n    (check-equal? (candidate (list 1 1.2 4 5.1)) 2)\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [else (if (integer? (first list1))\n              (+ 1 (count_integer (rest list1)))\n              (count_integer (rest list1)))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(null? list1) 0]\n    [(integer? (car list1)) (+ 1 (count_integer (cdr list1)))]\n    [else (count_integer (cdr list1))]))\n",
    "  (cond\n    [(null? list1) 0]\n    [(integer? (car list1)) (+ 1 (count_integer (cdr list1)))]\n    [else (count_integer (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(null? list1) 0]\n    [(integer? (car list1)) (+ 1 (count_integer (cdr list1)))]\n    [else (count_integer (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [else\n     (cond\n       [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n       [else (count_integer (rest list1))])]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [else\n     (cond\n       [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n       [else (count_integer (rest list1))])]))\n",
    "  (cond [(empty? list1) 0]\n        [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n        [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(null? list1) 0]\n    [(integer? (car list1)) (+ 1 (count_integer (cdr list1)))]\n    [else (count_integer (cdr list1))]))\n",
    "  (cond\n    [(null? list1) 0]\n    [(integer? (car list1)) (+ 1 (count_integer (cdr list1)))]\n    [else (count_integer (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [else (+ 1 (count_integer (rest list1)))]))\n",
    "  (cond [(empty? list1) 0]\n        [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n        [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(null? list1) 0]\n    [(integer? (car list1)) (+ 1 (count_integer (cdr list1)))]\n    [else (count_integer (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [else\n     (if (integer? (first list1))\n         (+ 1 (count_integer (rest list1)))\n         (count_integer (rest list1)))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(null? list1) 0]\n    [(integer? (car list1)) (+ 1 (count_integer (cdr list1)))]\n    [else (count_integer (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(null? list1) 0]\n    [(integer? (car list1)) (+ 1 (count_integer (cdr list1)))]\n    [else (count_integer (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(null? list1) 0]\n    [(integer? (car list1)) (+ 1 (count_integer (cdr list1)))]\n    [else (count_integer (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond [(empty? list1) 0]\n        [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n        [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond [(empty? list1) 0]\n        [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n        [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond [(empty? list1) 0]\n        [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n        [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond [(empty? list1) 0]\n        [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n        [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(null? list1) 0]\n    [(integer? (car list1)) (+ 1 (count_integer (cdr list1)))]\n    [else (count_integer (cdr list1))]))\n",
    "  (cond\n    [(null? list1) 0]\n    [(integer? (car list1)) (+ 1 (count_integer (cdr list1)))]\n    [else (count_integer (cdr list1))]))\n",
    "  (cond\n    [(null? list1) 0]\n    [(integer? (car list1)) (+ 1 (count_integer (cdr list1)))]\n    [else (count_integer (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [else (+ (if (integer? (first list1)) 1 0) (count_integer (rest list1)))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond [(empty? list1) 0]\n        [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n        [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond [(empty? list1) 0]\n        [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n        [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond ((null? list1) 0)\n        ((integer? (car list1)) (+ 1 (count_integer (cdr list1))))\n        (else (count_integer (cdr list1)))))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond ((null? list1) 0)\n        ((integer? (car list1)) (+ 1 (count_integer (cdr list1))))\n        (else (count_integer (cdr list1)))))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond [(empty? list1) 0]\n        [else (if (integer? (first list1))\n                  (+ 1 (count_integer (rest list1)))\n                  (count_integer (rest list1)))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (define (count_integer_iter list1 count)\n    (if (null? list1)\n        count\n        (if (integer? (car list1))\n            (count_integer_iter (cdr list1) (+ count 1))\n            (count_integer_iter (cdr list1) count))))\n  (count_integer_iter list1 0))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(null? list1) 0]\n    [(integer? (car list1)) (+ 1 (count_integer (cdr list1)))]\n    [else (count_integer (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (if (null? list1)\n      0\n      (if (integer? (car list1))\n          (+ 1 (count_integer (cdr list1)))\n          (count_integer (cdr list1)))))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [else (+ 1 (count_integer (rest list1)))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [else (if (integer? (first list1))\n              (+ 1 (count_integer (rest list1)))\n              (count_integer (rest list1)))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [else (if (integer? (first list1))\n             (+ 1 (count_integer (rest list1)))\n             (count_integer (rest list1)))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(null? list1) 0]\n    [(integer? (car list1)) (+ 1 (count_integer (cdr list1)))]\n    [else (count_integer (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(null? list1) 0]\n    [(integer? (car list1)) (+ 1 (count_integer (cdr list1)))]\n    [else (count_integer (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond [(empty? list1) 0]\n        [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n        [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond [(empty? list1) 0]\n        [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n        [else (count_integer (rest list1))]))\n",
    "  (if (null? list1)\n      0\n      (if (integer? (car list1))\n          (+ 1 (count_integer (cdr list1)))\n          (count_integer (cdr list1)))))\n",
    "  (cond\n    [(null? list1) 0]\n    [(integer? (car list1)) (+ 1 (count_integer (cdr list1)))]\n    [else (count_integer (cdr list1))]))\n",
    "  (if (null? list1)\n      0\n      (if (integer? (car list1))\n          (+ 1 (count_integer (cdr list1)))\n          (count_integer (cdr list1)))))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond [(empty? list1) 0]\n        [(integer? (car list1)) (+ 1 (count_integer (cdr list1)))]\n        [else (count_integer (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond [(empty? list1) 0]\n        [else (+ 1 (count_integer (rest list1)))]))\n",
    "  (cond [(empty? list1) 0]\n        [else (+ 1 (count_integer (rest list1)))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (define (count_integer_helper list1 count)\n    (if (null? list1)\n        count\n        (if (integer? (car list1))\n            (count_integer_helper (cdr list1) (+ count 1))\n            (count_integer_helper (cdr list1) count))))\n  (count_integer_helper list1 0))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond [(empty? list1) 0]\n        [else (+ 1 (count_integer (rest list1)))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [else\n     (cond\n       [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n       [else (count_integer (rest list1))])]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond [(empty? list1) 0]\n        [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n        [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(null? list1) 0]\n    [(integer? (car list1)) (+ 1 (count_integer (cdr list1)))]\n    [else (count_integer (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(null? list1) 0]\n    [(integer? (car list1)) (+ 1 (count_integer (cdr list1)))]\n    [else (count_integer (cdr list1))]))\n",
    "  (if (null? list1)\n      0\n      (if (integer? (car list1))\n          (+ 1 (count_integer (cdr list1)))\n          (count_integer (cdr list1)))))\n",
    "  (cond\n    [(empty? list1) 0]\n    [else\n     (cond\n       [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n       [else (count_integer (rest list1))])]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond [(empty? list1) 0]\n        [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n        [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (if (null? list1)\n      0\n      (+ (if (integer? (car list1)) 1 0)\n         (count_integer (cdr list1)))))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond ((null? list1) 0)\n        ((integer? (car list1)) (+ 1 (count_integer (cdr list1))))\n        (else (count_integer (cdr list1)))))\n",
    "  (cond [(empty? list1) 0]\n        [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n        [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(null? list1) 0]\n    [(integer? (car list1)) (+ 1 (count_integer (cdr list1)))]\n    [else (count_integer (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(null? list1) 0]\n    [(integer? (car list1)) (+ 1 (count_integer (cdr list1)))]\n    [else (count_integer (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n",
    "  (cond\n    [(null? list1) 0]\n    [(integer? (car list1)) (+ 1 (count_integer (cdr list1)))]\n    [else (count_integer (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(integer? (first list1)) (+ 1 (count_integer (rest list1)))]\n    [else (count_integer (rest list1))]))\n"
  ]
}
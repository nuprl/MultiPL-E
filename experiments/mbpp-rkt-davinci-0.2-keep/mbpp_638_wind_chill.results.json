{
  "name": "mbpp_638_wind_chill",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_638_wind_chill.py",
  "prompt_terminology": "verbatim",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "results": [
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + 0.6215*t - 11.37*(v**0.16) + 0.3965*t*(v**0.16))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "/tmp/tmpkjq7mvdf.rkt:5:18: 0.6215*t: unbound identifier\n  in: 0.6215*t\n  location...:\n   /tmp/tmpkjq7mvdf.rkt:5:18\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + 0.6215*t - 11.37*(v^0.16) + 0.3965*t*(v^0.16))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "/tmp/tmpa7fk50ul.rkt:5:18: 0.6215*t: unbound identifier\n  in: 0.6215*t\n  location...:\n   /tmp/tmpa7fk50ul.rkt:5:18\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + 0.6215*t - 11.37*(v^0.16) + 0.3965*t*(v^0.16))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "/tmp/tmpa7fk50ul.rkt:5:18: 0.6215*t: unbound identifier\n  in: 0.6215*t\n  location...:\n   /tmp/tmpa7fk50ul.rkt:5:18\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + 0.6215*t - 11.37*(v^0.16) + 0.3965*t*(v^0.16))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "/tmp/tmpa7fk50ul.rkt:5:18: 0.6215*t: unbound identifier\n  in: 0.6215*t\n  location...:\n   /tmp/tmpa7fk50ul.rkt:5:18\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + 0.6215*t - 11.37*(v^0.16) + 0.3965*t*(v^0.16))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "/tmp/tmpa7fk50ul.rkt:5:18: 0.6215*t: unbound identifier\n  in: 0.6215*t\n  location...:\n   /tmp/tmpa7fk50ul.rkt:5:18\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + 0.6215*t - 11.37*(v^0.16) + 0.3965*t*(v^0.16))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "/tmp/tmpa7fk50ul.rkt:5:18: 0.6215*t: unbound identifier\n  in: 0.6215*t\n  location...:\n   /tmp/tmpa7fk50ul.rkt:5:18\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + 0.6215*t - 11.37*(v^0.16) + 0.3965*t*(v^0.16))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "/tmp/tmpa7fk50ul.rkt:5:18: 0.6215*t: unbound identifier\n  in: 0.6215*t\n  location...:\n   /tmp/tmpa7fk50ul.rkt:5:18\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + 0.6215*t - 11.37*(v^0.16) + 0.3965*t*(v^0.16))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "/tmp/tmpa7fk50ul.rkt:5:18: 0.6215*t: unbound identifier\n  in: 0.6215*t\n  location...:\n   /tmp/tmpa7fk50ul.rkt:5:18\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + 0.6215*t - 11.37*(v^0.16) + 0.3965*t*(v^0.16))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "/tmp/tmpa7fk50ul.rkt:5:18: 0.6215*t: unbound identifier\n  in: 0.6215*t\n  location...:\n   /tmp/tmpa7fk50ul.rkt:5:18\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (33 - (0.478 + 0.237 * v + 0.0066 * t) * (v - 3.6 * sqrt (v)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1666124108,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpz_1h1d0m.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.478\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpz_1h1d0m.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.478\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpz_1h1d0m.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.478\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + 0.6215*t - 11.37*(v^0.16) + 0.3965*t*(v^0.16))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "/tmp/tmpa7fk50ul.rkt:5:18: 0.6215*t: unbound identifier\n  in: 0.6215*t\n  location...:\n   /tmp/tmpa7fk50ul.rkt:5:18\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + 0.6215*t - 11.37*(v^0.16) + 0.3965*t*(v^0.16))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "/tmp/tmpa7fk50ul.rkt:5:18: 0.6215*t: unbound identifier\n  in: 0.6215*t\n  location...:\n   /tmp/tmpa7fk50ul.rkt:5:18\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + 0.6215*t - 11.37*(v^0.16) + 0.3965*t*(v^0.16))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "/tmp/tmpa7fk50ul.rkt:5:18: 0.6215*t: unbound identifier\n  in: 0.6215*t\n  location...:\n   /tmp/tmpa7fk50ul.rkt:5:18\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + 0.6215*t - 11.37*(v^0.16) + 0.3965*t*(v^0.16))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "/tmp/tmpa7fk50ul.rkt:5:18: 0.6215*t: unbound identifier\n  in: 0.6215*t\n  location...:\n   /tmp/tmpa7fk50ul.rkt:5:18\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + 0.6215*t - 11.37*(v^0.16) + 0.3965*t*(v^0.16))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "/tmp/tmpa7fk50ul.rkt:5:18: 0.6215*t: unbound identifier\n  in: 0.6215*t\n  location...:\n   /tmp/tmpa7fk50ul.rkt:5:18\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + (0.6215 * t) - (11.37 * (expt v 0.16)) + (0.3965 * t * (expt v 0.16)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:12:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp62rfx2y6.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 0.6215\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n(define (wind_chill v t)\n  (round (13.12 + 0.6215*t - 11.37*(v^0.16) + 0.3965*t*(v^0.16))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate wind_chill))\n    (check-equal? (candidate 120 35) 40)\n    (check-equal? (candidate 40 20) 19)\n    (check-equal? (candidate 10 8) 6)\n))\n\n(test-humaneval)",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "/tmp/tmpa7fk50ul.rkt:5:18: 0.6215*t: unbound identifier\n  in: 0.6215*t\n  location...:\n   /tmp/tmpa7fk50ul.rkt:5:18\n",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
{
  "name": "mbpp_396_check_char",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a function to check whether the given string starts and ends with the same character or not.\n(define (check_char string)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_396_check_char.py",
  "prompt_terminology": "verbatim",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate check_char))\n    (check-equal? (candidate \"abba\") \"Valid\")\n    (check-equal? (candidate \"a\") \"Valid\")\n    (check-equal? (candidate \"abcd\") \"Invalid\")\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (if (equal? (string-ref string 0) (string-ref string (- (string-length string) 1)))\n      #t\n      #f))\n",
    "  (if (equal? (string-ref string 0) (string-ref string (- (string-length string) 1)))\n      #t\n      #f))\n",
    "  (if (equal? (string-ref string 0) (string-ref string (- (string-length string) 1)))\n      #t\n      #f))\n",
    "  (if (equal? (string-ref string 0) (string-ref string (- (string-length string) 1)))\n      #t\n      #f))\n",
    "  (if (equal? (string-ref string 0) (string-ref string (- (string-length string) 1)))\n      #t\n      #f))\n",
    "  (if (equal? (string-ref string 0) (string-ref string (- (string-length string) 1)))\n      #t\n      #f))\n",
    "  (if (equal? (string-ref string 0) (string-ref string (- (string-length string) 1)))\n      #t\n      #f))\n",
    "  (if (equal? (string-ref string 0) (string-ref string (- (string-length string) 1)))\n      #t\n      #f))\n",
    "  (if (equal? (string-ref string 0) (string-ref string (- (string-length string) 1)))\n      #t\n      #f))\n",
    "  (if (equal? (string-ref string 0) (string-ref string (- (string-length string) 1)))\n      #t\n      #f))\n",
    "  (if (equal? (string-ref string 0) (string-ref string (- (string-length string) 1)))\n      \"True\"\n      \"False\"))\n",
    "  (if (equal? (string-ref string 0) (string-ref string (- (string-length string) 1)))\n      #t\n      #f))\n",
    "  (if (equal? (string-ref string 0) (string-ref string (- (string-length string) 1)))\n      #t\n      #f))\n",
    "  (if (equal? (string-ref string 0) (string-ref string (- (string-length string) 1)))\n      #t\n      #f))\n",
    "  (if (equal? (string-ref string 0) (string-ref string (- (string-length string) 1)))\n      #t\n      #f))\n",
    "  (cond\n    [(string=? (string-ref string 0) (string-ref string (- (string-length string) 1))) #t]\n    [else #f]))\n",
    "  (if (equal? (string-ref string 0) (string-ref string (- (string-length string) 1)))\n      #t\n      #f))\n",
    "  (if (equal? (string-ref string 0) (string-ref string (- (string-length string) 1)))\n      #t\n      #f))\n",
    "  (if (equal? (string-ref string 0) (string-ref string (- (string-length string) 1)))\n      true\n      false))\n",
    "  (if (equal? (string-ref string 0) (string-ref string (- (string-length string) 1)))\n      #t\n      #f))\n"
  ]
}
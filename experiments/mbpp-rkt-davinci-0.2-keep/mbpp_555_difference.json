{
  "name": "mbpp_555_difference",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a python function to find the difference between the sum of cubes of the first n natural numbers and the sum of the first n natural numbers.\n(define (difference n)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_555_difference.py",
  "prompt_terminology": "verbatim",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate difference))\n    (check-equal? (candidate 3) 30)\n    (check-equal? (candidate 5) 210)\n    (check-equal? (candidate 2) 6)\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (let ((sum-of-cubes (sum-of-cubes n))\n        (sum-of-numbers (sum-of-numbers n)))\n    (- sum-of-cubes sum-of-numbers)))\n",
    "  (let ([sum-of-cubes (for/sum ([i (in-range 1 (+ n 1))]) (* i i i))])\n    (- sum-of-cubes (* n n))))\n",
    "  (- (sum-of-cubes n) (sum-of-n n)))\n",
    "  (let ((sum-of-cubes 0)\n        (sum-of-numbers 0))\n    (for ([i (in-range 1 (+ n 1))])\n      (set! sum-of-cubes (+ sum-of-cubes (expt i 3)))\n      (set! sum-of-numbers (+ sum-of-numbers i)))\n    (- sum-of-cubes sum-of-numbers)))\n",
    "  (- (sum-of-cubes n) (sum-of-n n)))\n",
    "  (- (* n n n (+ n 1) (+ n 1))\n     (* (+ n 1) (+ n 1) (+ n 1) n n)))\n",
    "  (define (sum-of-cubes n)\n    (if (= n 1)\n        1\n        (+ (expt n 3) (sum-of-cubes (- n 1)))))\n  (define (sum-of-n n)\n    (if (= n 1)\n        1\n        (+ n (sum-of-n (- n 1)))))\n  (- (sum-of-cubes n) (sum-of-n n)))\n",
    "  (- (sum-of-cubes n) (sum-of-n n)))\n",
    "  (- (sum-of-cubes n) (sum-of-n n)))\n",
    "  (define (sum-of-cubes n)\n    (if (= n 1)\n        1\n        (+ (expt n 3) (sum-of-cubes (- n 1)))))\n  (- (sum-of-cubes n) (* n n)))\n",
    "  (let ([sum-of-cubes (sum-of-cubes n)]\n        [sum-of-numbers (sum-of-numbers n)])\n    (- sum-of-cubes sum-of-numbers)))\n",
    "  (- (sum-of-cubes n) (sum-of-n n)))\n",
    "  (let ((sum-of-cubes 0)\n        (sum-of-numbers 0))\n    (for ([i (in-range 1 (+ n 1))])\n      (set! sum-of-cubes (+ sum-of-cubes (expt i 3)))\n      (set! sum-of-numbers (+ sum-of-numbers i)))\n    (- sum-of-cubes sum-of-numbers)))\n",
    "  (let ((sum-of-cubes 0)\n        (sum 0))\n    (for ([i (in-range 1 (+ n 1))])\n      (set! sum-of-cubes (+ sum-of-cubes (expt i 3)))\n      (set! sum (+ sum i)))\n    (- sum-of-cubes sum)))\n",
    "  (- (sum-of-cubes n) (sum-of-n n)))\n",
    "  (let ((sum-of-cubes 0)\n        (sum 0))\n    (for ([i (in-range 1 (+ n 1))])\n      (set! sum-of-cubes (+ sum-of-cubes (expt i 3)))\n      (set! sum (+ sum i)))\n    (- sum-of-cubes sum)))\n",
    "  (let ([sum-of-cubes (for/sum ([i (in-range 1 (+ 1 n))])\n                        (expt i 3))])\n    (- sum-of-cubes (* n (+ n 1) (/ (+ n 2) 2)))))\n",
    "  (let ((sum-of-cubes 0)\n        (sum-of-numbers 0))\n    (for ([i (in-range 1 (+ n 1))])\n      (set! sum-of-cubes (+ sum-of-cubes (expt i 3)))\n      (set! sum-of-numbers (+ sum-of-numbers i)))\n    (- sum-of-cubes sum-of-numbers)))\n",
    "  (- (sum-of-cubes n) (sum-of-n n)))\n",
    "  (- (sum-of-cubes n) (sum-of-n n)))\n"
  ]
}
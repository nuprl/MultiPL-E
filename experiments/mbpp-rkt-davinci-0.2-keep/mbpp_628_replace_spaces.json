{
  "name": "mbpp_628_replace_spaces",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a function to replace all spaces in the given string with '%20'.\n(define (replace_spaces string)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_628_replace_spaces.py",
  "prompt_terminology": "verbatim",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate replace_spaces))\n    (check-equal? (candidate \"My Name is Dawood\") \"My%20Name%20is%20Dawood\")\n    (check-equal? (candidate \"I am a Programmer\") \"I%20am%20a%20Programmer\")\n    (check-equal? (candidate \"I love Coding\") \"I%20love%20Coding\")\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (regexp-replace* #rx\" \" string \"20%\"))\n",
    "  (regexp-replace* #px\" \" string \"\\\\%20\"))\n",
    "  (string-join (map (lambda (c) (if (char=? c #\\space) \"%20\" (string c)))\n                    (string->list string))\n               \"\"))\n",
    "  (string-join (map (lambda (char)\n                      (if (char=? char #\\space)\n                          \"%20\"\n                          (string char)))\n                    (string->list string))\n               \"\"))\n",
    "  (regexp-replace* #rx\" \" string \"\\\\%20\"))\n",
    "  (string-join (map (lambda (c)\n                      (if (char=? c #\\space)\n                          \"%20\"\n                          (string c)))\n                    (string->list string))\n               \"\"))\n",
    "  (regexp-replace* #rx\" \" string \"20%\"))\n",
    "  (string-join (map (lambda (c) (if (char=? c #\\space) \"%20\" (string c)))\n                    (string->list string))\n               \"\"))\n",
    "  (regexp-replace* #rx\" \" string \"%%20\"))\n",
    "  (string-join (map (lambda (c) (if (char=? c #\\space) \"%20\" (string c)))\n                    (string->list string))\n               \"\"))\n",
    "  (regexp-replace* #rx\" \" string \"\\\\%20\"))\n",
    "  (string-join (map (lambda (c)\n                      (if (char=? c #\\space)\n                          \"%20\"\n                          (string c)))\n                    (string->list string))\n               \"\"))\n",
    "  (regexp-replace* #rx\" \" string \"20%\"))\n",
    "  (string-join (map (lambda (x) (if (char=? x #\\space) \"%20\" (string x))) (string->list string)) \"\"))\n",
    "  (string-join (map (lambda (char)\n                      (if (char=? char #\\space)\n                          \"%20\"\n                          (string char)))\n                    (string->list string))\n               \"\"))\n",
    "  (string-join (map (lambda (c)\n                      (if (char=? c #\\space)\n                          \"%20\"\n                          (string c)))\n                    (string->list string))\n               \"\"))\n",
    "  (string-join (map (lambda (c) (if (char=? c #\\space) \"%20\" (string c)))\n                    (string->list string))\n               \"\"))\n",
    "  (string-join (map (lambda (x)\n                      (if (char=? x #\\space)\n                          \"%20\"\n                          (string x)))\n                    (string->list string))\n               \"\"))\n",
    "  (string-join (map (lambda (c)\n                      (if (char=? c #\\space)\n                          \"%20\"\n                          (string c)))\n                    (string->list string))\n               \"\"))\n",
    "  (string-join (map (lambda (c)\n                      (if (char=? c #\\space)\n                          \"%20\"\n                          (string c)))\n                    (string->list string))\n               \"\"))\n"
  ]
}
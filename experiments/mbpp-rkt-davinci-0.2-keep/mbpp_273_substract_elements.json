{
  "name": "mbpp_273_substract_elements",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a function that takes in two tuples and subtracts the elements of the first tuple by the elements of the second tuple with the same index.\n(define (substract_elements test_tup1 test_tup2)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_273_substract_elements.py",
  "prompt_terminology": "verbatim",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate substract_elements))\n    (check-equal? (candidate (list 10 4 5) (list 2 5 18)) (list 8 -1 -13))\n    (check-equal? (candidate (list 11 2 3) (list 24 45 16)) (list -13 -43 -13))\n    (check-equal? (candidate (list 7 18 9) (list 10 11 12)) (list -3 7 -3))\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond [(empty? test_tup1) empty]\n        [else (cons (- (first test_tup1) (first test_tup2))\n                    (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (if (and (pair? test_tup1) (pair? test_tup2))\n      (cons (- (car test_tup1) (car test_tup2))\n            (substract_elements (cdr test_tup1) (cdr test_tup2)))\n      '()))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (- (car test_tup1) (car test_tup2))\n            (substract_elements (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (if (or (null? test_tup1) (null? test_tup2))\n      '()\n      (cons (- (car test_tup1) (car test_tup2))\n            (substract_elements (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (list (- (car test_tup1) (car test_tup2))\n        (- (cadr test_tup1) (cadr test_tup2))\n        (- (caddr test_tup1) (caddr test_tup2))))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (if (and (tuple? test_tup1) (tuple? test_tup2))\n      (if (and (= (tuple-length test_tup1) (tuple-length test_tup2))\n               (not (empty? test_tup1)))\n          (cons (- (tuple-ref test_tup1 0) (tuple-ref test_tup2 0))\n                (substract_elements (tuple-rest test_tup1) (tuple-rest test_tup2)))\n          (if (and (= (tuple-length test_tup1) (tuple-length test_tup2))\n                   (empty? test_tup1))\n              '()\n              '()))\n      '()))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (make-vector (vector-length test_tup1)\n               (lambda (i) (- (vector-ref test_tup1 i) (vector-ref test_tup2 i)))))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(and (tuple? test_tup1) (tuple? test_tup2))\n     (cond\n       [(empty? test_tup1) empty]\n       [else\n        (cons (- (first test_tup1) (first test_tup2))\n              (substract_elements (rest test_tup1) (rest test_tup2)))]\n       )]\n    [else\n     (error \"Not a tuple\")]\n    )\n  )\n",
    "  (make-vector (vector-length test_tup1)\n               (lambda (i) (- (vector-ref test_tup1 i) (vector-ref test_tup2 i)))))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (list (- (car test_tup1) (car test_tup2))\n        (- (cadr test_tup1) (cadr test_tup2))\n        (- (caddr test_tup1) (caddr test_tup2))))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (if (and (pair? test_tup1) (pair? test_tup2))\n      (cons (- (car test_tup1) (car test_tup2))\n            (substract_elements (cdr test_tup1) (cdr test_tup2)))\n      '()))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (if (empty? test_tup1)\n      empty\n      (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (if (or (null? test_tup1) (null? test_tup2))\n      '()\n      (cons (- (car test_tup1) (car test_tup2)) (substract_elements (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond [(empty? test_tup1) empty]\n        [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else\n     (cons (- (first test_tup1) (first test_tup2))\n           (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond [(empty? test_tup1) empty]\n        [(empty? test_tup2) empty]\n        [else (cons (- (first test_tup1) (first test_tup2))\n                    (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (list (- (car test_tup1) (car test_tup2))\n        (- (cadr test_tup1) (cadr test_tup2))\n        (- (caddr test_tup1) (caddr test_tup2))))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else\n     (cons (- (first test_tup1) (first test_tup2))\n           (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                 (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (if (and (pair? test_tup1) (pair? test_tup2))\n      (cons (- (car test_tup1) (car test_tup2))\n            (substract_elements (cdr test_tup1) (cdr test_tup2)))\n      '()))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else\n     (cons (- (first test_tup1) (first test_tup2))\n           (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (make-vector (vector-length test_tup1)\n               (lambda (i)\n                 (- (vector-ref test_tup1 i)\n                    (vector-ref test_tup2 i)))))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else\n     (cons (- (first test_tup1) (first test_tup2))\n           (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else\n     (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond [(empty? test_tup1) empty]\n        [else (cons (- (first test_tup1) (first test_tup2))\n                    (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n</code>\nI am getting the following error:\n<code>substract_elements: contract violation\n  expected: (listof number?)\n  given: '(1 2 3)\n  in: the 1st argument of\n      (- (first test_tup1) (first test_tup2))\n  contract from: &lt;pkgs&gt;/racket/list.rkt\n  blaming: &lt;pkgs&gt;/racket/private/misc.rkt\n  at: &lt;pkgs&gt;/racket/list.rkt:638:2\n  context...:\n   /home/ubuntu/workspace/racket/tuple_subtraction.rkt:12:0: subtract_elements\n   /home/ubuntu/workspace/racket/tuple_subtraction.rkt:12:0: subtract_elements\n   /home/ubuntu/workspace/racket/tuple_subtraction.rkt:12:0: subtract_elements\n   /home/ubuntu/workspace/racket/tuple_subtraction.rkt:12:0: subtract_elements\n   /home/ubuntu/workspace/racket/tuple_subtraction.rkt:12:0: subtract_elements\n   /home/ubuntu/workspace/racket/tuple_subtraction.rkt:12:0: subtract_elements\n   /home/ubuntu/workspace/racket/tuple_subtraction.rkt:12:0: subtract_elements\n   /home/ubuntu/workspace/racket/tuple_subtraction.rkt:12:0: subtract_elements\n   /home/ubuntu/workspace/racket/tuple_subtraction.rkt:12:0: subtract_elements\n   /home/ubuntu/workspace/r",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (- (car test_tup1) (car test_tup2))\n            (substract_elements (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(and (tuple? test_tup1) (tuple? test_tup2))\n     (cond\n       [(= (tuple-length test_tup1) (tuple-length test_tup2))\n        (tuple (- (tuple-ref test_tup1 0) (tuple-ref test_tup2 0))\n                (- (tuple-ref test_tup1 1) (tuple-ref test_tup2 1))\n                (- (tuple-ref test_tup1 2) (tuple-ref test_tup2 2)))]\n       [else (error \"Tuples are not of the same length\")])]\n    [else (error \"Inputs are not tuples\")]))\n</code>\nI'm not sure if this is the best way to do it, but it works.\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n</code>\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else\n     (cons (- (first test_tup1) (first test_tup2))\n           (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (if (and (pair? test_tup1) (pair? test_tup2))\n      (cons (- (car test_tup1) (car test_tup2)) (substract_elements (cdr test_tup1) (cdr test_tup2)))\n      '()))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (car test_tup1) (car test_tup2)) (substract_elements (cdr test_tup1) (cdr test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (list (- (first test_tup1) (first test_tup2)) (- (second test_tup1) (second test_tup2)) (- (third test_tup1) (third test_tup2))))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (map (lambda (x y) (- x y)) test_tup1 test_tup2))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else\n     (cons (- (first test_tup1) (first test_tup2))\n           (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (list (- (car test_tup1) (car test_tup2))\n        (- (cadr test_tup1) (cadr test_tup2))\n        (- (caddr test_tup1) (caddr test_tup2))))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2))\n                (substract_elements (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (- (first test_tup1) (first test_tup2)) (substract_elements (rest test_tup1) (rest test_tup2)))]))\n"
  ]
}
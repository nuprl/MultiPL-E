{
  "name": "mbpp_170_sum_range_list",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a function to find the sum of numbers in a list within a range specified by two indices.\n(define (sum_range_list list1 m n)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_170_sum_range_list.py",
  "prompt_terminology": "verbatim",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_range_list))\n    (check-equal? (candidate (list 2 1 5 6 8 3 4 9 10 11 8 12) 8 10) 29)\n    (check-equal? (candidate (list 2 1 5 6 8 3 4 9 10 11 8 12) 5 7) 16)\n    (check-equal? (candidate (list 2 1 5 6 8 3 4 9 10 11 8 12) 7 10) 38)\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (if (= m n)\n      (list-ref list1 m)\n      (+ (list-ref list1 m) (sum_range_list list1 (+ m 1) n))))\n",
    "  (if (or (= m n) (= m (length list1)))\n      (list-ref list1 m)\n      (+ (list-ref list1 m) (sum_range_list list1 (+ m 1) n))))\n",
    "  (if (= m n)\n      (list-ref list1 m)\n      (+ (list-ref list1 m) (sum_range_list list1 (+ m 1) n))))\n",
    "  (if (or (= m n)\n          (&lt; m 0)\n          (&gt; n (length list1)))\n      0\n      (+ (list-ref list1 m)\n         (sum_range_list list1 (+ m 1) n))))\n",
    "  (if (and (integer? m) (integer? n))\n      (if (and (>= m 0) (>= n 0) (< m (length list1)) (< n (length list1)))\n          (if (< m n)\n              (apply + (sublist list1 m n))\n              (apply + (sublist list1 n m)))\n          (error \"Index out of range\"))\n      (error \"Index must be integer\")))\n",
    "  (cond ((= m n) (list-ref list1 m))\n        (else (+ (list-ref list1 m) (sum_range_list list1 (+ m 1) n)))))\n",
    "  (if (or (= m n) (= m (length list1)))\n      (list-ref list1 m)\n      (+ (list-ref list1 m) (sum_range_list list1 (+ m 1) n))))\n",
    "  (if (= m n)\n      (list-ref list1 m)\n      (+ (list-ref list1 m) (sum_range_list list1 (+ m 1) n))))\n",
    "  (if (or (= m n) (= m (+ n 1)))\n      (list-ref list1 m)\n      (+ (list-ref list1 m) (sum_range_list list1 (+ m 1) n))))\n",
    "  (cond\n    [(empty? list1) 0]\n    [else\n     (cond\n       [(= m 0)\n        (+ (first list1) (sum_range_list (rest list1) (- m 1) (- n 1)))]\n       [(= n 0)\n        (sum_range_list (rest list1) (- m 1) (- n 1))]\n       [else\n        (sum_range_list (rest list1) (- m 1) (- n 1))])]))\n",
    "  (if (or (= m n) (= m (length list1)))\n      (list-ref list1 m)\n      (+ (list-ref list1 m) (sum_range_list list1 (+ m 1) n))))\n",
    "  (if (= m n)\n      (list-ref list1 m)\n      (+ (list-ref list1 m) (sum_range_list list1 (+ m 1) n))))\n",
    "  (if (or (= m n) (&lt; m 0) (&gt; n (length list1)))\n      0\n      (+ (list-ref list1 m) (sum_range_list list1 (+ m 1) n))))\n",
    "  (if (null? list1)\n      0\n      (if (and (>= m (length list1)) (>= n (length list1)))\n          0\n          (if (and (>= m 0) (>= n 0) (>= m n))\n              (apply + (sublist list1 m n))\n              0))))\n",
    "  (if (and (integer? m) (integer? n))\n      (if (and (<= 0 m) (<= m n) (<= n (length list1)))\n          (if (= m n)\n              (list-ref list1 m)\n              (+ (list-ref list1 m) (sum_range_list list1 (+ m 1) n)))\n          (error \"Invalid range\"))\n      (error \"Invalid index\")))\n",
    "  (if (and (integer? m) (integer? n))\n      (if (and (&gt;= m 0) (&gt;= n 0) (&lt; m (length list1)) (&lt; n (length list1)))\n          (if (&lt; m n)\n              (if (null? list1)\n                  0\n                  (+ (list-ref list1 m) (sum_range_list list1 (+ m 1) n)))\n              (if (null? list1)\n                  0\n                  (+ (list-ref list1 n) (sum_range_list list1 m (- n 1)))))\n          (error \"Invalid range\"))\n      (error \"Invalid index\")))\n",
    "  (if (= m n)\n      (list-ref list1 m)\n      (+ (list-ref list1 m) (sum_range_list list1 (+ m 1) n))))\n",
    "  (if (and (integer? m) (integer? n) (integer? (length list1)) (and (>= m 0) (<= m (length list1))) (and (>= n 0) (<= n (length list1))))\n      (if (= m n)\n          (list-ref list1 m)\n          (+ (list-ref list1 m) (sum_range_list list1 (+ m 1) n)))\n      (error \"Invalid input\")))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(= m 0) (if (= n 0)\n                 (first list1)\n                 (+ (first list1) (sum_range_list (rest list1) 0 (- n 1))))]\n    [else (sum_range_list (rest list1) (- m 1) (- n 1))]))\n",
    "  (if (and (integer? m) (integer? n) (integer? (list-ref list1 m)) (integer? (list-ref list1 n)))\n      (if (= m n)\n          (list-ref list1 m)\n          (+ (list-ref list1 m) (sum_range_list list1 (+ m 1) n)))\n      (error \"Invalid input\")))\n"
  ]
}
{
  "name": "mbpp_737_check_str",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a function to check whether the given string is starting with a vowel or not using regex.\n(define (check_str string)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_737_check_str.py",
  "prompt_terminology": "verbatim",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate check_str))\n    (check-equal? (candidate \"annie\") #t)\n    (check-equal? (candidate \"dawood\") #f)\n    (check-equal? (candidate \"Else\") #t)\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (if (regexp-match #rx\"^[aeiouAEIOU]\" string)\n      \"yes\"\n      \"no\"))\n",
    "  (if (regexp-match #rx\"^[aeiou]\" string)\n      \"String starts with vowel\"\n      \"String does not start with vowel\"))\n",
    "  (if (regexp-match #rx\"^[aeiou]\" string)\n      \"Yes\"\n      \"No\"))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (if (regexp-match #rx\"^[aeiou]\" string)\n      \"Yes\"\n      \"No\"))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (if (regexp-match #rx\"^[aeiouAEIOU]\" string)\n      (printf \"The string ~a starts with a vowel.\\n\" string)\n      (printf \"The string ~a doesn't start with a vowel.\\n\" string)))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (if (regexp-match #rx\"^[aeiou]\" string)\n      \"Starting with a vowel\"\n      \"Not starting with a vowel\"))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (if (regexp-match #rx\"^[aeiou]\" string)\n      \"yes\"\n      \"no\"))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (if (regexp-match #rx\"^[aeiouAEIOU]\" string)\n      \"yes\"\n      \"no\"))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (if (regexp-match #rx\"^[aeiouAEIOU]\" string)\n      (printf \"The string ~a starts with a vowel.\\n\" string)\n      (printf \"The string ~a does not start with a vowel.\\n\" string)))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (if (regexp-match #rx\"^[aeiou]\" string)\n      \"Yes\"\n      \"No\"))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (if (regexp-match #rx\"^[aeiou]\" string)\n      \"Starting with a vowel\"\n      \"Not starting with a vowel\"))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (if (regexp-match #rx\"^[aeiou]\" string)\n      \"String starts with a vowel\"\n      \"String does not start with a vowel\"))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (if (regexp-match #rx\"^[aeiou]\" string)\n      \"Yes\"\n      \"No\"))\n",
    "  (if (regexp-match #rx\"^[aeiouAEIOU]\" string)\n      \"yes\"\n      \"no\"))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (if (regexp-match #rx\"^[aeiou]\" string)\n      \"Starting with a vowel\"\n      \"Not starting with a vowel\"))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n",
    "  (if (regexp-match? #rx\"^[aeiou]\" string)\n      (printf \"Yes\")\n      (printf \"No\")))\n",
    "  (regexp-match? #rx\"^[aeiouAEIOU]\" string))\n",
    "  (regexp-match? #rx\"^[aeiou]\" string))\n"
  ]
}
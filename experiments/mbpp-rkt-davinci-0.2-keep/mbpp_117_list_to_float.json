{
  "name": "mbpp_117_list_to_float",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a function to convert all possible convertible elements in a list of lists to floats.\n(define (list_to_float test_list)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_117_list_to_float.py",
  "prompt_terminology": "verbatim",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate list_to_float))\n    (check-equal? (candidate (list (list \"3\" \"4\") (list \"1\" \"26.45\") (list \"7.32\" \"8\") (list \"4\" \"8\"))) (list (list 3.0 4.0) (list 1.0 26.45) (list 7.32 8.0) (list 4.0 8.0)))\n    (check-equal? (candidate (list (list \"4\" \"4\") (list \"2\" \"27\") (list \"4.12\" \"9\") (list \"7\" \"11\"))) (list (list 4.0 4.0) (list 2.0 27.0) (list 4.12 9.0) (list 7.0 11.0)))\n    (check-equal? (candidate (list (list \"6\" \"78\") (list \"5\" \"26.45\") (list \"1.33\" \"4\") (list \"82\" \"13\"))) (list (list 6.0 78.0) (list 5.0 26.45) (list 1.33 4.0) (list 82.0 13.0)))\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (map (lambda (x)\n         (if (list? x)\n             (list_to_float x)\n             (if (number? x)\n                 (float x)\n                 x)))\n       test_list))\n",
    "  (map (lambda (x)\n         (if (list? x)\n             (list_to_float x)\n             (if (number? x)\n                 (float x)\n                 x)))\n       test_list))\n",
    "  (map (lambda (x)\n         (if (list? x)\n             (list_to_float x)\n             (if (number? x)\n                 (float x)\n                 x)))\n       test_list))\n",
    "  (map (lambda (x)\n         (if (list? x)\n             (list_to_float x)\n             (if (number? x)\n                 (float x)\n                 x)))\n       test_list))\n",
    "  (map (lambda (x)\n         (if (list? x)\n             (list_to_float x)\n             (if (number? x)\n                 (float x)\n                 x)))\n       test_list))\n",
    "  (map (lambda (x)\n         (if (list? x)\n             (list_to_float x)\n             (if (number? x)\n                 (float x)\n                 x)))\n       test_list))\n",
    "  (map (lambda (x)\n         (if (list? x)\n             (list_to_float x)\n             (if (number? x)\n                 (float x)\n                 x)))\n       test_list))\n",
    "  (map (lambda (x)\n         (if (list? x)\n             (list_to_float x)\n             (if (number? x)\n                 (float x)\n                 x)))\n       test_list))\n",
    "  (cond\n    [(empty? test_list) empty]\n    [(list? (first test_list)) (cons (list_to_float (first test_list)) (list_to_float (rest test_list)))]\n    [else (cons (string->number (first test_list)) (list_to_float (rest test_list)))]))\n",
    "  (map (lambda (x)\n         (if (list? x)\n             (list_to_float x)\n             (if (number? x)\n                 (float x)\n                 x)))\n       test_list))\n",
    "  (cond\n    [(empty? test_list) empty]\n    [else (cons (list_to_float (first test_list)) (list_to_float (rest test_list)))]))\n",
    "  (map (lambda (x)\n         (if (list? x)\n             (list_to_float x)\n             (if (number? x)\n                 (float x)\n                 x)))\n       test_list))\n",
    "  (map (lambda (x)\n         (if (number? x)\n             (float x)\n             x))\n       test_list))\n",
    "  (map (lambda (x)\n         (if (number? x)\n             (float x)\n             x))\n       test_list))\n",
    "  (map (lambda (x)\n         (if (number? x)\n             (float x)\n             x))\n       test_list))\n",
    "  (map (lambda (x) (map (lambda (y) (if (number? y) (float y) y)) x)) test_list))\n",
    "  (map (lambda (x)\n         (if (number? x)\n             (float x)\n             x))\n       test_list))\n",
    "  (map (lambda (x)\n         (if (list? x)\n             (list_to_float x)\n             (if (number? x)\n                 (float x)\n                 x)))\n       test_list))\n",
    "  (map (lambda (x)\n         (if (list? x)\n             (list_to_float x)\n             (if (number? x)\n                 (float x)\n                 x)))\n       test_list))\n",
    "  (map (lambda (x)\n         (if (list? x)\n             (list_to_float x)\n             (if (number? x)\n                 (float x)\n                 x)))\n       test_list))\n"
  ]
}
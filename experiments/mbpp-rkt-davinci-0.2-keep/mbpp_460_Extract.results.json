{
  "name": "mbpp_460_Extract",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_460_Extract.py",
  "prompt_terminology": "verbatim",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "results": [
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n</code>\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "/tmp/tmpun6xihwt.rkt:6:0: </code>: unbound identifier\n  in: </code>\n  location...:\n   /tmp/tmpun6xihwt.rkt:6:0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (cond\n    [(empty? lst) empty]\n    [else (cons (first (first lst)) (Extract (rest lst)))]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map car lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map car lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map car lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map car lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map car lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map car lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map car lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map car lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map car lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map car lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map car lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map car lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map car lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map car lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map car lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map car lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map car lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map car lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map car lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map car lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map car lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n</code>\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "/tmp/tmpun6xihwt.rkt:6:0: </code>: unbound identifier\n  in: </code>\n  location...:\n   /tmp/tmpun6xihwt.rkt:6:0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map car lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map car lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to get the first element of each sublist.\n(define (Extract lst)\n  (map first lst))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate Extract))\n    (check-equal? (candidate (list (list 1 2) (list 3 4 5) (list 6 7 8 9))) (list 1 3 6))\n    (check-equal? (candidate (list (list 1 2 3) (list 4 5))) (list 1 4))\n    (check-equal? (candidate (list (list 9 8 1) (list 1 2))) (list 9 1))\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
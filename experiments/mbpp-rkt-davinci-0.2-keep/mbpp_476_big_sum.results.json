{
  "name": "mbpp_476_big_sum",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_476_big_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "results": [
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (+ max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let* ([max (apply max nums)]\n         [min (apply min nums)])\n    (+ max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (define (big_sum-helper nums max min)\n    (if (null? nums)\n        (+ max min)\n        (if (&gt; (car nums) max)\n            (big_sum-helper (cdr nums) (car nums) min)\n            (if (&lt; (car nums) min)\n                (big_sum-helper (cdr nums) max (car nums))\n                (big_sum-helper (cdr nums) max min)))))\n  (big_sum-helper nums (car nums) (car nums)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "/tmp/tmp3tfwi0i1.rkt:5:2: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 15\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ((min (apply min nums))\n        (max (apply max nums)))\n    (+ min max)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (apply + (list (apply max nums) (apply min nums))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (+ max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (+ max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let* ([smallest (apply min nums)]\n         [largest (apply max nums)])\n    (+ smallest largest)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ((big (apply max nums))\n        (small (apply min nums)))\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let* ([big (apply max nums)]\n         [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (+ max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (+ max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let* ([max (apply max nums)]\n         [min (apply min nums)])\n    (+ max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (apply + (list (apply max nums) (apply min nums))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (+ max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let* ([max (apply max nums)]\n         [min (apply min nums)])\n    (+ max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ((big (apply max nums))\n        (small (apply min nums)))\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (apply + (list (apply max nums) (apply min nums))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (define (big_sum_iter nums max min sum)\n    (cond\n      [(empty? nums) (+ sum max min)]\n      [(< (first nums) min) (big_sum_iter (rest nums) max (first nums) sum)]\n      [(> (first nums) max) (big_sum_iter (rest nums) (first nums) min sum)]\n      [else (big_sum_iter (rest nums) max min sum)]))\n  (big_sum_iter nums (first nums) (first nums) 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (+ max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (+ max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let* ([big (apply max nums)]\n         [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let* ([sorted (sort nums <)]\n         [first (car sorted)]\n         [last (car (reverse sorted))])\n    (+ first last)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let* ([big (apply max nums)]\n         [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (+ max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (+ max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let* ([max (apply max nums)]\n         [min (apply min nums)])\n    (+ max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (+ max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let* ([big (apply max nums)]\n         [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (+ max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (+ max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (+ max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (+ max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (apply + (list (apply max nums) (apply min nums))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([min (apply min nums)]\n        [max (apply max nums)])\n    (+ min max)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (apply + (list (apply max nums) (apply min nums))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (apply + (list (apply max nums) (apply min nums))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (+ max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (+ max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let* ([max (apply max nums)]\n         [min (apply min nums)])\n    (+ max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (+ max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let* ([max (apply max nums)]\n         [min (apply min nums)])\n    (+ max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (+ max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (+ max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (+ max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (+ max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([smallest (apply min nums)]\n        [largest (apply max nums)])\n    (+ smallest largest)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (+ max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let* ([min (apply min nums)]\n         [max (apply max nums)])\n    (+ min max)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (define (sum_helper nums largest smallest)\n    (cond\n      [(empty? nums) (+ largest smallest)]\n      [(< (first nums) smallest) (sum_helper (rest nums) largest (first nums))]\n      [(> (first nums) largest) (sum_helper (rest nums) (first nums) smallest)]\n      [else (sum_helper (rest nums) largest smallest)]))\n  (sum_helper nums (first nums) (first nums)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (+ max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (apply + (list (apply max nums) (apply min nums))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (+ max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let* ([max (apply max nums)]\n         [min (apply min nums)])\n    (+ max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (+ max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let* ([min (apply min nums)]\n         [max (apply max nums)])\n    (+ min max)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (define (big_sum_helper nums biggest smallest)\n    (if (null? nums)\n        (+ biggest smallest)\n        (if (&gt; (car nums) biggest)\n            (big_sum_helper (cdr nums) (car nums) smallest)\n            (if (&lt; (car nums) smallest)\n                (big_sum_helper (cdr nums) biggest (car nums))\n                (big_sum_helper (cdr nums) biggest smallest)))))\n  (big_sum_helper nums (car nums) (car nums)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "/tmp/tmpd7fwafue.rkt:5:2: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 15\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (apply + (list (apply min nums) (apply max nums))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (+ max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (apply + (list (apply max nums) (apply min nums))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (+ max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([biggest (apply max nums)]\n        [smallest (apply min nums)])\n    (+ biggest smallest)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (+ max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (+ max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (+ max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (+ max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a python function to find the sum of the largest and smallest value in a given array.\n(define (big_sum nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (+ big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_sum))\n    (check-equal? (candidate (list 1 2 3)) 4)\n    (check-equal? (candidate (list -1 2 3 4)) 3)\n    (check-equal? (candidate (list 2 3 6)) 8)\n))\n\n(test-humaneval)",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
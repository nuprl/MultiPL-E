{
  "name": "mbpp_389_find_lucas",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a function to find the n'th lucas number.\n(define (find_lucas n)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_389_find_lucas.py",
  "prompt_terminology": "verbatim",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate find_lucas))\n    (check-equal? (candidate 9) 76)\n    (check-equal? (candidate 4) 7)\n    (check-equal? (candidate 3) 4)\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond ((= n 0) 2)\n        ((= n 1) 1)\n        (else (+ (find_lucas (- n 1))\n                 (find_lucas (- n 2))))))\n",
    "  (cond\n    ((= n 0) 2)\n    ((= n 1) 1)\n    (else (+ (find_lucas (- n 1)) (find_lucas (- n 2))))))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond ((= n 0) 2)\n        ((= n 1) 1)\n        (else (+ (find_lucas (- n 1))\n                 (find_lucas (- n 2))))))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 1) 2]\n    [(= n 2) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond ((= n 0) 2)\n        ((= n 1) 1)\n        (else (+ (find_lucas (- n 1))\n                 (find_lucas (- n 2))))))\n",
    "  (cond ((= n 0) 2)\n        ((= n 1) 1)\n        (else (+ (find_lucas (- n 1)) (find_lucas (- n 2))))))\n",
    "  (cond ((= n 0) 2)\n        ((= n 1) 1)\n        (else (+ (find_lucas (- n 1)) (find_lucas (- n 2))))))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond ((= n 0) 2)\n        ((= n 1) 1)\n        (else (+ (find_lucas (- n 1))\n                 (find_lucas (- n 2))))))\n",
    "  (cond\n    [(= n 1) 2]\n    [(= n 2) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond ((= n 0) 2)\n        ((= n 1) 1)\n        (else (+ (find_lucas (- n 1))\n                 (find_lucas (- n 2))))))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond ((= n 0) 2)\n        ((= n 1) 1)\n        (else (+ (find_lucas (- n 1)) (find_lucas (- n 2))))))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond [(= n 0) 2]\n        [(= n 1) 1]\n        [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond [(= n 0) 2]\n        [(= n 1) 1]\n        [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond ((= n 0) 2)\n        ((= n 1) 1)\n        (else (+ (find_lucas (- n 1)) (find_lucas (- n 2))))))\n",
    "  (cond\n    [(= n 1) 2]\n    [(= n 2) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond ((= n 0) 2)\n        ((= n 1) 1)\n        (else (+ (find_lucas (- n 1)) (find_lucas (- n 2))))))\n",
    "  (cond ((= n 0) 2)\n        ((= n 1) 1)\n        (else (+ (find_lucas (- n 1))\n                 (find_lucas (- n 2))))))\n",
    "  (cond\n    [(= n 1) 2]\n    [(= n 2) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (if (= n 0)\n      2\n      (if (= n 1)\n          1\n          (+ (find_lucas (- n 1)) (find_lucas (- n 2))))))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 1) 2]\n    [(= n 2) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (if (= n 0)\n      2\n      (if (= n 1)\n          1\n          (+ (find_lucas (- n 1)) (find_lucas (- n 2))))))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond ((= n 0) 2)\n        ((= n 1) 1)\n        (else (+ (find_lucas (- n 1)) (find_lucas (- n 2))))))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (if (= n 0)\n      2\n      (if (= n 1)\n          1\n          (+ (find_lucas (- n 1)) (find_lucas (- n 2))))))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond ((= n 0) 2)\n        ((= n 1) 1)\n        (else (+ (find_lucas (- n 1)) (find_lucas (- n 2))))))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 1) 2]\n    [(= n 2) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond ((= n 0) 2)\n        ((= n 1) 1)\n        (else (+ (find_lucas (- n 1)) (find_lucas (- n 2))))))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (if (= n 0)\n      2\n      (if (= n 1)\n          1\n          (+ (find_lucas (- n 1)) (find_lucas (- n 2))))))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond ((= n 0) 2)\n        ((= n 1) 1)\n        (else (+ (find_lucas (- n 1)) (find_lucas (- n 2))))))\n",
    "  (if (= n 0)\n      2\n      (if (= n 1)\n          1\n          (+ (find_lucas (- n 1)) (find_lucas (- n 2))))))\n",
    "  (cond ((= n 0) 2)\n        ((= n 1) 1)\n        (else (+ (find_lucas (- n 1)) (find_lucas (- n 2))))))\n",
    "  (cond ((= n 0) 2)\n        ((= n 1) 1)\n        (else (+ (find_lucas (- n 1)) (find_lucas (- n 2))))))\n",
    "  (if (= n 1)\n      2\n      (if (= n 2)\n          1\n          (+ (find_lucas (- n 1)) (find_lucas (- n 2))))))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond ((= n 0) 2)\n        ((= n 1) 1)\n        (else (+ (find_lucas (- n 1)) (find_lucas (- n 2))))))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (if (= n 0)\n      2\n      (if (= n 1)\n          1\n          (+ (find_lucas (- n 1)) (find_lucas (- n 2))))))\n",
    "  (cond [(= n 0) 2]\n        [(= n 1) 1]\n        [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond [(= n 0) 2]\n        [(= n 1) 1]\n        [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1))\n             (find_lucas (- n 2)))]))\n",
    "  (cond ((= n 0) 2)\n        ((= n 1) 1)\n        (else (+ (find_lucas (- n 1)) (find_lucas (- n 2))))))\n",
    "  (cond ((= n 0) 2)\n        ((= n 1) 1)\n        (else (+ (find_lucas (- n 1)) (find_lucas (- n 2))))))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (if (= n 0)\n      2\n      (if (= n 1)\n          1\n          (+ (find_lucas (- n 1))\n             (find_lucas (- n 2))))))\n",
    "  (if (= n 1)\n      2\n      (if (= n 2)\n          1\n          (+ (find_lucas (- n 1)) (find_lucas (- n 2))))))\n",
    "  (cond ((= n 0) 2)\n        ((= n 1) 1)\n        (else (+ (find_lucas (- n 1)) (find_lucas (- n 2))))))\n",
    "  (cond [(= n 0) 2]\n        [(= n 1) 1]\n        [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond ((= n 0) 2)\n        ((= n 1) 1)\n        (else (+ (find_lucas (- n 1)) (find_lucas (- n 2))))))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    ((= n 0) 2)\n    ((= n 1) 1)\n    (else (+ (find_lucas (- n 1)) (find_lucas (- n 2))))))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (if (= n 0)\n      2\n      (if (= n 1)\n          1\n          (+ (find_lucas (- n 1)) (find_lucas (- n 2))))))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (if (= n 0)\n      2\n      (if (= n 1)\n          1\n          (+ (find_lucas (- n 1))\n             (find_lucas (- n 2))))))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (if (= n 0)\n      2\n      (if (= n 1)\n          1\n          (+ (find_lucas (- n 1)) (find_lucas (- n 2))))))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond ((= n 0) 2)\n        ((= n 1) 1)\n        (else (+ (find_lucas (- n 1))\n                 (find_lucas (- n 2))))))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 1) 2]\n    [(= n 2) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond ((= n 0) 2)\n        ((= n 1) 1)\n        (else (+ (find_lucas (- n 1)) (find_lucas (- n 2))))))\n",
    "  (cond ((= n 0) 2)\n        ((= n 1) 1)\n        (else (+ (find_lucas (- n 1)) (find_lucas (- n 2))))))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond ((= n 0) 2)\n        ((= n 1) 1)\n        (else (+ (find_lucas (- n 1)) (find_lucas (- n 2))))))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond ((= n 0) 2)\n        ((= n 1) 1)\n        (else (+ (find_lucas (- n 1)) (find_lucas (- n 2))))))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (if (= n 1)\n      2\n      (if (= n 2)\n          1\n          (+ (find_lucas (- n 1)) (find_lucas (- n 2))))))\n",
    "  (cond\n    ((= n 0) 2)\n    ((= n 1) 1)\n    (else (+ (find_lucas (- n 1)) (find_lucas (- n 2))))))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 1) 2]\n    [(= n 2) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 1) 2]\n    [(= n 2) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond ((= n 0) 2)\n        ((= n 1) 1)\n        (else (+ (find_lucas (- n 1)) (find_lucas (- n 2))))))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond [(= n 0) 2]\n        [(= n 1) 1]\n        [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (if (= n 0)\n      2\n      (if (= n 1)\n          1\n          (+ (find_lucas (- n 1)) (find_lucas (- n 2))))))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond ((= n 0) 2)\n        ((= n 1) 1)\n        (else (+ (find_lucas (- n 1)) (find_lucas (- n 2))))))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (define (lucas-iter a b count)\n    (if (= count n)\n        a\n        (lucas-iter b (+ a b) (+ count 1))))\n  (lucas-iter 2 1 1))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    ((= n 0) 2)\n    ((= n 1) 1)\n    (else (+ (find_lucas (- n 1)) (find_lucas (- n 2))))))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 1) 2]\n    [(= n 2) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond ((= n 0) 2)\n        ((= n 1) 1)\n        (else (+ (find_lucas (- n 1)) (find_lucas (- n 2))))))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond ((= n 0) 2)\n        ((= n 1) 1)\n        (else (+ (find_lucas (- n 1)) (find_lucas (- n 2))))))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    ((= n 0) 2)\n    ((= n 1) 1)\n    (else (+ (find_lucas (- n 1)) (find_lucas (- n 2))))))\n",
    "  (cond ((= n 0) 2)\n        ((= n 1) 1)\n        (else (+ (find_lucas (- n 1)) (find_lucas (- n 2))))))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 1) 2]\n    [(= n 2) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 0) 2]\n    [(= n 1) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n",
    "  (cond\n    [(= n 1) 2]\n    [(= n 2) 1]\n    [else (+ (find_lucas (- n 1)) (find_lucas (- n 2)))]))\n"
  ]
}
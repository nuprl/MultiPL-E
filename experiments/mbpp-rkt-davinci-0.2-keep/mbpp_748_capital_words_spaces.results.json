{
  "name": "mbpp_748_capital_words_spaces",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_748_capital_words_spaces.py",
  "prompt_terminology": "verbatim",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "results": [
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z][a-z]+\" str1 (lambda (x) (string-append \" \" x))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxb05un4.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxb05un4.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxb05un4.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z][a-z]+\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpt69led5q.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpt69led5q.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpt69led5q.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (define (capital_words_spaces_iter str1 str2)\n    (if (empty? str1)\n        str2\n        (if (char-upper-case? (string-ref str1 0))\n            (capital_words_spaces_iter (substring str1 1 (string-length str1)) (string-append str2 \" \" (string (string-ref str1 0))))\n            (capital_words_spaces_iter (substring str1 1 (string-length str1)) (string-append str2 (string (string-ref str1 0)))))))\n  (capital_words_spaces_iter str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpr870_abo.rkt:18:4\n\nstring-ref: index is out of range for empty string\n  index: 0\n  string: \"\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpr870_abo.rkt:19:4\n\nstring-ref: index is out of range for empty string\n  index: 0\n  string: \"\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpr870_abo.rkt:20:4\n\nstring-ref: index is out of range for empty string\n  index: 0\n  string: \"\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z][a-z]+\" str1 (lambda (match) (string-append \" \" match))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9s0_qv55.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9s0_qv55.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9s0_qv55.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z][a-z]*)\" str1 #:replace \" \\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpcvbz4p_p.rkt:12:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z][a-z]*)\"\n   \"Python\"\n   #:replace \" \\u0001\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpcvbz4p_p.rkt:13:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z][a-z]*)\"\n   \"PythonProgrammingExamples\"\n   #:replace \" \\u0001\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpcvbz4p_p.rkt:14:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z][a-z]*)\"\n   \"GetReadyToBeCodingFreak\"\n   #:replace \" \\u0001\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z][a-z]+\" str1 (lambda (x) (string-append \" \" x))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxb05un4.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxb05un4.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxb05un4.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (string-join (map (lambda (x) (if (char-upcase? (string-ref x 0)) (string-append x \" \") x)) (string-split str1 #\\space)) \" \"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "/tmp/tmpzmtqbc_w.rkt:5:37: char-upcase?: unbound identifier\n  in: char-upcase?\n  location...:\n   /tmp/tmpzmtqbc_w.rkt:5:37\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"\\\\b[A-Z][a-z]+\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp85bj2u5g.rkt:13:4\nactual:     \"PythonProgrammingExamples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp85bj2u5g.rkt:14:4\nactual:     \"GetReadyToBeCodingFreak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z][a-z]*)\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_pa2wbi5.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_pa2wbi5.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_pa2wbi5.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (let loop ([str str1] [result '()])\n    (cond [(empty? str) (list->string (reverse result))]\n          [(char-upcase? (first str))\n           (loop (rest str) (cons #\\space (cons (first str) result)))]\n          [else (loop (rest str) (cons (first str) result))])))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123057,
      "stdout": "",
      "stderr": "/tmp/tmp0csucdpm.rkt:7:12: char-upcase?: unbound identifier\n  in: char-upcase?\n  location...:\n   /tmp/tmp0csucdpm.rkt:7:12\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 #:replace \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpycg_l1dg.rkt:12:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z])\"\n   \"Python\"\n   #:replace \" \\\\1\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpycg_l1dg.rkt:13:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z])\"\n   \"PythonProgrammingExamples\"\n   #:replace \" \\\\1\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpycg_l1dg.rkt:14:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z])\"\n   \"GetReadyToBeCodingFreak\"\n   #:replace \" \\\\1\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 #:replace \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpycg_l1dg.rkt:12:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z])\"\n   \"Python\"\n   #:replace \" \\\\1\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpycg_l1dg.rkt:13:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z])\"\n   \"PythonProgrammingExamples\"\n   #:replace \" \\\\1\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpycg_l1dg.rkt:14:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z])\"\n   \"GetReadyToBeCodingFreak\"\n   #:replace \" \\\\1\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z][a-z]+)\" str1 #:replace \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpygvh533t.rkt:12:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z][a-z]+)\"\n   \"Python\"\n   #:replace \" \\\\1\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpygvh533t.rkt:13:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z][a-z]+)\"\n   \"PythonProgrammingExamples\"\n   #:replace \" \\\\1\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpygvh533t.rkt:14:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z][a-z]+)\"\n   \"GetReadyToBeCodingFreak\"\n   #:replace \" \\\\1\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z][a-z]+\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpt69led5q.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpt69led5q.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpt69led5q.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"\\\\b[A-Z][a-z]+\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp85bj2u5g.rkt:13:4\nactual:     \"PythonProgrammingExamples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp85bj2u5g.rkt:14:4\nactual:     \"GetReadyToBeCodingFreak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n</code>\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123057,
      "stdout": "",
      "stderr": "/tmp/tmpqeksqw3a.rkt:6:0: </code>: unbound identifier\n  in: </code>\n  location...:\n   /tmp/tmpqeksqw3a.rkt:6:0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"\\\\([A-Z]\\\\)\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp4stt2iv4.rkt:13:4\nactual:     \"PythonProgrammingExamples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp4stt2iv4.rkt:14:4\nactual:     \"GetReadyToBeCodingFreak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z][a-z]+\" str1 (lambda (x) (string-append \" \" x))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxb05un4.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxb05un4.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxb05un4.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z][a-z]*)\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_pa2wbi5.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_pa2wbi5.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_pa2wbi5.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (define (capital_words_spaces_iter str1 i)\n    (if (= i (string-length str1))\n        str1\n        (if (and (char-upper-case? (string-ref str1 i))\n                 (not (char-upper-case? (string-ref str1 (- i 1)))))\n            (string-append (substring str1 0 i) \" \" (capital_words_spaces_iter (substring str1 i) (+ i 1)))\n            (capital_words_spaces_iter str1 (+ i 1)))))\n  (capital_words_spaces_iter str1 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123057,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpudzdgioa.rkt:19:4\n\nstring-ref: contract violation\n  expected: exact-nonnegative-integer?\n  given: -1\n  argument position: 2nd\n  first argument...:\n   \"Python\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpudzdgioa.rkt:20:4\n\nstring-ref: contract violation\n  expected: exact-nonnegative-integer?\n  given: -1\n  argument position: 2nd\n  first argument...:\n   \"PythonProgrammingExamples\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpudzdgioa.rkt:21:4\n\nstring-ref: contract violation\n  expected: exact-nonnegative-integer?\n  given: -1\n  argument position: 2nd\n  first argument...:\n   \"GetReadyToBeCodingFreak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (define (capital? c)\n    (char-upcase c))\n  (define (capital_words_spaces_iter str1 str2)\n    (cond ((string=? str1 \"\") str2)\n          ((capital? (string-ref str1 0))\n           (capital_words_spaces_iter (substring str1 1) (string-append str2 \" \" (string (string-ref str1 0)))))\n          (else (capital_words_spaces_iter (substring str1 1) (string-append str2 (string (string-ref str1 0)))))))\n  (capital_words_spaces_iter str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123057,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpqxv33fhj.rkt:19:4\nactual:     \" P y t h o n\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpqxv33fhj.rkt:20:4\nactual:     \" P y t h o n P r o g r a m m i n g E x a m p l e s\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpqxv33fhj.rkt:21:4\nactual:     \" G e t R e a d y T o B e C o d i n g F r e a k\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (let ([str2 (string-append str1 \" \")])\n    (for/fold ([str3 \"\"]\n               [i 0])\n        ([j (in-range (string-length str2))])\n      (cond\n        [(char-upper-case? (string-ref str2 j))\n         (string-append str3 (string-append (substring str2 i j) \" \"))]\n        [else str3]))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123057,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp_hpgq18q.rkt:19:4\n\nresult arity mismatch;\n expected number of values not received\n  expected: 2\n  received: 1\n  in: local-binding form\n  arguments...:\n   \" \"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp_hpgq18q.rkt:20:4\n\nresult arity mismatch;\n expected number of values not received\n  expected: 2\n  received: 1\n  in: local-binding form\n  arguments...:\n   \" \"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp_hpgq18q.rkt:21:4\n\nresult arity mismatch;\n expected number of values not received\n  expected: 2\n  received: 1\n  in: local-binding form\n  arguments...:\n   \" \"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (let ([str2 (string-append str1 \" \")])\n    (string-join\n     (for/list ([i (in-range (string-length str2))])\n       (if (and (char-upper-case? (string-ref str2 i))\n                (not (char-upper-case? (string-ref str2 (+ i 1)))))\n           (string-append (string-ref str2 i) \" \")\n           (string-ref str2 i)))\n     \"\")))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123057,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpabvjspnf.rkt:19:4\n\nstring-append: contract violation\n  expected: string?\n  given: #\\P\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpabvjspnf.rkt:20:4\n\nstring-append: contract violation\n  expected: string?\n  given: #\\P\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpabvjspnf.rkt:21:4\n\nstring-append: contract violation\n  expected: string?\n  given: #\\G\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (string-join\n   (map\n    (lambda (x)\n      (if (char-upper-case? (string-ref x 0))\n          (string-append x \" \")\n          x))\n    (string-split str1 #\\space))\n   \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123057,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpjft5tnei.rkt:19:4\n\nstring-split: contract violation\n  expected: (or/c string? regexp?)\n  given: #\\space\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpjft5tnei.rkt:20:4\n\nstring-split: contract violation\n  expected: (or/c string? regexp?)\n  given: #\\space\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpjft5tnei.rkt:21:4\n\nstring-split: contract violation\n  expected: (or/c string? regexp?)\n  given: #\\space\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"\\\\([A-Z]\\\\)\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp4stt2iv4.rkt:13:4\nactual:     \"PythonProgrammingExamples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp4stt2iv4.rkt:14:4\nactual:     \"GetReadyToBeCodingFreak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 #:replace \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpycg_l1dg.rkt:12:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z])\"\n   \"Python\"\n   #:replace \" \\\\1\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpycg_l1dg.rkt:13:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z])\"\n   \"PythonProgrammingExamples\"\n   #:replace \" \\\\1\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpycg_l1dg.rkt:14:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z])\"\n   \"GetReadyToBeCodingFreak\"\n   #:replace \" \\\\1\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z][a-z]*)\" str1 #:replace \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpb_ima67d.rkt:12:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z][a-z]*)\"\n   \"Python\"\n   #:replace \" \\\\1\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpb_ima67d.rkt:13:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z][a-z]*)\"\n   \"PythonProgrammingExamples\"\n   #:replace \" \\\\1\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpb_ima67d.rkt:14:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z][a-z]*)\"\n   \"GetReadyToBeCodingFreak\"\n   #:replace \" \\\\1\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (string-join (map (lambda (x) (if (char-upper-case? (string-ref x 0)) (string-append x \" \") x)) (string-split str1)) \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9rxzcz7p.rkt:12:4\nactual:     \"Python \"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9rxzcz7p.rkt:13:4\nactual:     \"PythonProgrammingExamples \"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9rxzcz7p.rkt:14:4\nactual:     \"GetReadyToBeCodingFreak \"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (define (capital_words_spaces_helper str1 str2)\n    (cond ((string=? str1 \"\") str2)\n          ((char-upper-case? (string-ref str1 0))\n           (capital_words_spaces_helper (substring str1 1)\n                                        (string-append str2 \" \" (string (string-ref str1 0)))))\n          (else (capital_words_spaces_helper (substring str1 1)\n                                             (string-append str2 (string (string-ref str1 0)))))))\n  (capital_words_spaces_helper str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123057,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp1359p3ky.rkt:19:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp1359p3ky.rkt:20:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp1359p3ky.rkt:21:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z][a-z]+\" str1 (lambda (x) (string-append \" \" x))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxb05un4.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxb05un4.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxb05un4.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"\\\\([A-Z]\\\\)\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp4stt2iv4.rkt:13:4\nactual:     \"PythonProgrammingExamples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp4stt2iv4.rkt:14:4\nactual:     \"GetReadyToBeCodingFreak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z][a-z]+\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpt69led5q.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpt69led5q.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpt69led5q.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 #:replace \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpycg_l1dg.rkt:12:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z])\"\n   \"Python\"\n   #:replace \" \\\\1\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpycg_l1dg.rkt:13:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z])\"\n   \"PythonProgrammingExamples\"\n   #:replace \" \\\\1\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpycg_l1dg.rkt:14:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z])\"\n   \"GetReadyToBeCodingFreak\"\n   #:replace \" \\\\1\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 #:replace \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpycg_l1dg.rkt:12:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z])\"\n   \"Python\"\n   #:replace \" \\\\1\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpycg_l1dg.rkt:13:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z])\"\n   \"PythonProgrammingExamples\"\n   #:replace \" \\\\1\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpycg_l1dg.rkt:14:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z])\"\n   \"GetReadyToBeCodingFreak\"\n   #:replace \" \\\\1\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (define (helper str1 result)\n    (cond\n      [(empty? str1) result]\n      [(char-upper-case? (first str1)) (helper (rest str1) (append result (list (first str1) #\\space)))]\n      [else (helper (rest str1) (append result (list (first str1))))]))\n  (helper str1 '()))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123057,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpftj24bhf.rkt:17:4\n\nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"Python\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpftj24bhf.rkt:18:4\n\nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"PythonProgrammingExamples\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpftj24bhf.rkt:19:4\n\nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"GetReadyToBeCodingFreak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"\\\\([A-Z]\\\\)\" str1 #:replace \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123057,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp7jmlvsfw.rkt:12:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"\\\\([A-Z]\\\\)\"\n   \"Python\"\n   #:replace \" \\\\1\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp7jmlvsfw.rkt:13:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"\\\\([A-Z]\\\\)\"\n   \"PythonProgrammingExamples\"\n   #:replace \" \\\\1\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp7jmlvsfw.rkt:14:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"\\\\([A-Z]\\\\)\"\n   \"GetReadyToBeCodingFreak\"\n   #:replace \" \\\\1\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (define (capital_words_spaces_helper str1 str2)\n    (if (empty? str1)\n        str2\n        (if (char-upper-case? (string-ref str1 0))\n            (capital_words_spaces_helper (substring str1 1) (string-append str2 \" \" (string (string-ref str1 0))))\n            (capital_words_spaces_helper (substring str1 1) (string-append str2 (string (string-ref str1 0)))))))\n  (capital_words_spaces_helper str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123057,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmprxgyl983.rkt:18:4\n\nstring-ref: index is out of range for empty string\n  index: 0\n  string: \"\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmprxgyl983.rkt:19:4\n\nstring-ref: index is out of range for empty string\n  index: 0\n  string: \"\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmprxgyl983.rkt:20:4\n\nstring-ref: index is out of range for empty string\n  index: 0\n  string: \"\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z][a-z]+\" str1 (lambda (x) (string-append \" \" x))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxb05un4.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxb05un4.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxb05un4.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 #:replace \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpycg_l1dg.rkt:12:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z])\"\n   \"Python\"\n   #:replace \" \\\\1\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpycg_l1dg.rkt:13:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z])\"\n   \"PythonProgrammingExamples\"\n   #:replace \" \\\\1\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpycg_l1dg.rkt:14:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z])\"\n   \"GetReadyToBeCodingFreak\"\n   #:replace \" \\\\1\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"\\\\b[A-Z][a-z]*\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmptuhc764v.rkt:13:4\nactual:     \"PythonProgrammingExamples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmptuhc764v.rkt:14:4\nactual:     \"GetReadyToBeCodingFreak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"\\\\b[A-Z][a-z]+\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp85bj2u5g.rkt:13:4\nactual:     \"PythonProgrammingExamples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp85bj2u5g.rkt:14:4\nactual:     \"GetReadyToBeCodingFreak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (define (helper str1)\n    (cond\n      [(empty? str1) empty]\n      [(char-upcase? (first str1)) (cons (first str1) (cons #\\space (helper (rest str1))))]\n      [else (cons (first str1) (helper (rest str1)))]))\n  (helper str1))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123057,
      "stdout": "",
      "stderr": "/tmp/tmpj2v_r2yw.rkt:8:8: char-upcase?: unbound identifier\n  in: char-upcase?\n  location...:\n   /tmp/tmpj2v_r2yw.rkt:8:8\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #px\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123057,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpl4alodj3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpl4alodj3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpl4alodj3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (define (capital_words_spaces_helper str1 str2)\n    (if (empty? str1)\n        str2\n        (if (char-upcase? (first str1))\n            (capital_words_spaces_helper (rest str1) (string-append str2 \" \" (first str1)))\n            (capital_words_spaces_helper (rest str1) (string-append str2 (first str1))))))\n  (capital_words_spaces_helper str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123057,
      "stdout": "",
      "stderr": "/tmp/tmpuvwe7l4w.rkt:8:13: char-upcase?: unbound identifier\n  in: char-upcase?\n  location...:\n   /tmp/tmpuvwe7l4w.rkt:8:13\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z][a-z]*)\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_pa2wbi5.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_pa2wbi5.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_pa2wbi5.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z][a-z]*)\" str1 #:replace \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpb_ima67d.rkt:12:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z][a-z]*)\"\n   \"Python\"\n   #:replace \" \\\\1\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpb_ima67d.rkt:13:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z][a-z]*)\"\n   \"PythonProgrammingExamples\"\n   #:replace \" \\\\1\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpb_ima67d.rkt:14:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z][a-z]*)\"\n   \"GetReadyToBeCodingFreak\"\n   #:replace \" \\\\1\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"\\\\b[A-Z][a-z]+\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp85bj2u5g.rkt:13:4\nactual:     \"PythonProgrammingExamples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp85bj2u5g.rkt:14:4\nactual:     \"GetReadyToBeCodingFreak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"\\\\b[A-Z]\\\\w*\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123057,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8yt8tytt.rkt:13:4\nactual:     \"PythonProgrammingExamples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8yt8tytt.rkt:14:4\nactual:     \"GetReadyToBeCodingFreak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z][a-z]+\" str1 (lambda (x) (string-append \" \" x))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxb05un4.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxb05un4.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxb05un4.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z][a-z]+\" str1 (lambda (s) (string-append \" \" s))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpys74ofs3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpys74ofs3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpys74ofs3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (let loop ([str str1] [result '()])\n    (cond [(empty? str) (string-join (reverse result) \"\")]\n          [(char-upcase? (first str)) (loop (rest str) (cons (first str) (cons #\\space result)))]\n          [else (loop (rest str) (cons (first str) result))])))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123057,
      "stdout": "",
      "stderr": "/tmp/tmp22h966vv.rkt:7:12: char-upcase?: unbound identifier\n  in: char-upcase?\n  location...:\n   /tmp/tmp22h966vv.rkt:7:12\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 #:replace \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpycg_l1dg.rkt:12:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z])\"\n   \"Python\"\n   #:replace \" \\\\1\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpycg_l1dg.rkt:13:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z])\"\n   \"PythonProgrammingExamples\"\n   #:replace \" \\\\1\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpycg_l1dg.rkt:14:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z])\"\n   \"GetReadyToBeCodingFreak\"\n   #:replace \" \\\\1\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 #:replace \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpycg_l1dg.rkt:12:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z])\"\n   \"Python\"\n   #:replace \" \\\\1\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpycg_l1dg.rkt:13:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z])\"\n   \"PythonProgrammingExamples\"\n   #:replace \" \\\\1\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpycg_l1dg.rkt:14:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z])\"\n   \"GetReadyToBeCodingFreak\"\n   #:replace \" \\\\1\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"\\\\b[A-Z][a-z]*\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmptuhc764v.rkt:13:4\nactual:     \"PythonProgrammingExamples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmptuhc764v.rkt:14:4\nactual:     \"GetReadyToBeCodingFreak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z][a-z]*\" str1 (lambda (x) (string-append \" \" x))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123057,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmprpd69ic1.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmprpd69ic1.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmprpd69ic1.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (string-join\n   (map\n    (lambda (x)\n      (if (char-upper-case? (string-ref x 0))\n          (string-append x \" \")\n          x))\n    (string-split str1 #\\space))\n   #\\space))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123058,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp82ih27pe.rkt:19:4\n\nstring-split: contract violation\n  expected: (or/c string? regexp?)\n  given: #\\space\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp82ih27pe.rkt:20:4\n\nstring-split: contract violation\n  expected: (or/c string? regexp?)\n  given: #\\space\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp82ih27pe.rkt:21:4\n\nstring-split: contract violation\n  expected: (or/c string? regexp?)\n  given: #\\space\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z][a-z]*\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpmq4xrkvb.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpmq4xrkvb.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpmq4xrkvb.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z][a-z]+\" str1 (lambda (x) (string-append \" \" x))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxb05un4.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxb05un4.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxb05un4.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z][a-z]+\" str1 (lambda (x) (string-append \" \" x))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxb05un4.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxb05un4.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxb05un4.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    }
  ]
}
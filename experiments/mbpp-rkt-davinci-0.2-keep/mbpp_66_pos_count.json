{
  "name": "mbpp_66_pos_count",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a python function to count the number of positive numbers in a list.\n(define (pos_count list)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_66_pos_count.py",
  "prompt_terminology": "verbatim",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate pos_count))\n    (check-equal? (candidate (list 1 -2 3 -4)) 2)\n    (check-equal? (candidate (list 3 4 5 -1)) 3)\n    (check-equal? (candidate (list 1 2 3 4)) 4)\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(positive? (first list)) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(positive? (first list)) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond\n    [(null? list) 0]\n    [(> (car list) 0) (+ 1 (pos_count (cdr list)))]\n    [else (pos_count (cdr list))]))\n",
    "  (if (null? list)\n      0\n      (+ (if (positive? (car list)) 1 0)\n         (pos_count (cdr list)))))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (if (null? list)\n      0\n      (+ (if (> (car list) 0) 1 0)\n         (pos_count (cdr list)))))\n",
    "  (cond\n    [(empty? list) 0]\n    [(positive? (first list)) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond ((null? list) 0)\n        ((> (car list) 0) (+ 1 (pos_count (cdr list))))\n        (else (pos_count (cdr list)))))\n",
    "  (cond\n    [(null? list) 0]\n    [(> (car list) 0) (+ 1 (pos_count (cdr list)))]\n    [else (pos_count (cdr list))]))\n",
    "  (cond [(empty? list) 0]\n        [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(positive? (first list)) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond\n    [(null? list) 0]\n    [(> (car list) 0) (+ 1 (pos_count (cdr list)))]\n    [else (pos_count (cdr list))]))\n",
    "  (cond [(empty? list) 0]\n        [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(positive? (first list)) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(positive? (first list)) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond\n    [(null? list) 0]\n    [(> (car list) 0) (+ 1 (pos_count (cdr list)))]\n    [else (pos_count (cdr list))]))\n",
    "  (cond\n    [(null? list) 0]\n    [(> (car list) 0) (+ 1 (pos_count (cdr list)))]\n    [else (pos_count (cdr list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (define (pos_count-iter list count)\n    (if (null? list)\n        count\n        (if (&gt; (car list) 0)\n            (pos_count-iter (cdr list) (+ count 1))\n            (pos_count-iter (cdr list) count))))\n  (pos_count-iter list 0))\n",
    "  (cond [(empty? list) 0]\n        [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(positive? (first list)) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond\n    [(null? list) 0]\n    [(> (car list) 0) (+ 1 (pos_count (cdr list)))]\n    [else (pos_count (cdr list))]))\n",
    "  (cond [(empty? list) 0]\n        [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond\n    [(null? list) 0]\n    [(> (car list) 0) (+ 1 (pos_count (cdr list)))]\n    [else (pos_count (cdr list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(positive? (first list)) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(positive? (first list)) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(positive? (first list)) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(positive? (first list)) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [else (+ (if (positive? (first list)) 1 0)\n                 (pos_count (rest list)))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(positive? (first list)) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond\n    [(null? list) 0]\n    [(> (car list) 0) (+ 1 (pos_count (cdr list)))]\n    [else (pos_count (cdr list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(positive? (first list)) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(positive? (first list)) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond\n    [(null? list) 0]\n    [(> (car list) 0) (+ 1 (pos_count (cdr list)))]\n    [else (pos_count (cdr list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(&gt; (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(positive? (first list)) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(positive? (first list)) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(positive? (first list)) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (if (null? list)\n      0\n      (+ (if (&gt; (car list) 0) 1 0)\n         (pos_count (cdr list)))))\n",
    "  (cond [(empty? list) 0]\n        [(positive? (first list)) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond\n    [(null? list) 0]\n    [(> (car list) 0) (+ 1 (pos_count (cdr list)))]\n    [else (pos_count (cdr list))]))\n",
    "  (cond\n    [(null? list) 0]\n    [(> (car list) 0) (+ 1 (pos_count (cdr list)))]\n    [else (pos_count (cdr list))]))\n",
    "  (cond [(empty? list) 0]\n        [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond\n    [(null? list) 0]\n    [(> (car list) 0) (+ 1 (pos_count (cdr list)))]\n    [else (pos_count (cdr list))]))\n",
    "  (cond [(empty? list) 0]\n        [else (if (> (first list) 0)\n                 (+ 1 (pos_count (rest list)))\n                 (pos_count (rest list)))]))\n",
    "  (cond [(empty? list) 0]\n        [(positive? (first list)) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond\n    [(null? list) 0]\n    [(> (car list) 0) (+ 1 (pos_count (cdr list)))]\n    [else (pos_count (cdr list))]))\n",
    "  (cond [(empty? list) 0]\n        [(positive? (first list)) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond\n    [(null? list) 0]\n    [(> (car list) 0) (+ 1 (pos_count (cdr list)))]\n    [else (pos_count (cdr list))]))\n",
    "  (cond [(empty? list) 0]\n        [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond\n    [(null? list) 0]\n    [(> (car list) 0) (+ 1 (pos_count (cdr list)))]\n    [else (pos_count (cdr list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(positive? (first list)) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [else (+ (if (positive? (first list)) 1 0) (pos_count (rest list)))]))\n",
    "  (cond [(empty? list) 0]\n        [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(positive? (first list)) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(positive? (first list)) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(positive? (first list)) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(positive? (first list)) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(positive? (first list)) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(positive? (first list)) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond ((null? list) 0)\n        ((> (car list) 0) (+ 1 (pos_count (cdr list))))\n        (else (pos_count (cdr list)))))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(positive? (first list)) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond [(empty? list) 0]\n        [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n        [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond\n    [(null? list) 0]\n    [(> (car list) 0) (+ 1 (pos_count (cdr list)))]\n    [else (pos_count (cdr list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(positive? (first list)) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (if (null? list)\n      0\n      (+ (if (positive? (car list)) 1 0)\n         (pos_count (cdr list)))))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n",
    "  (cond\n    [(empty? list) 0]\n    [(> (first list) 0) (+ 1 (pos_count (rest list)))]\n    [else (pos_count (rest list))]))\n"
  ]
}
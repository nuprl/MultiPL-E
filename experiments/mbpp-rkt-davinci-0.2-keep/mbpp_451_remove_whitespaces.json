{
  "name": "mbpp_451_remove_whitespaces",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a function to remove all whitespaces from the given string.\n(define (remove_whitespaces text1)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_451_remove_whitespaces.py",
  "prompt_terminology": "verbatim",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_whitespaces))\n    (check-equal? (candidate \" Google    Flutter \") \"GoogleFlutter\")\n    (check-equal? (candidate \" Google    Dart \") \"GoogleDart\")\n    (check-equal? (candidate \" iOS    Swift \") \"iOSSwift\")\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (regexp-replace* #rx\"[ \\t\\n\\r\\f\\v]\" text1 \"\"))\n",
    "  (string-join (regexp-split #rx\"\\s+\" text1) \"\"))\n",
    "  (regexp-replace* #rx\"\\s+\" text1 \"\"))\n",
    "  (regexp-replace* #rx\"\\s\" text1 \"\"))\n",
    "  (string-join (regexp-split #rx\"\\s+\" text1) \"\"))\n",
    "  (regexp-replace* #rx\"\\s\" text1 \"\"))\n",
    "  (regexp-replace* #rx\"\\s+\" text1 \"\"))\n",
    "  (regexp-replace* #rx\"\\s\" text1 \"\"))\n",
    "  (regexp-replace* #rx\"\\s+\" text1 \"\"))\n",
    "  (string-join (string-split text1 #rx\"[ \\t\\n\\r\\f\\v]+\") \"\"))\n",
    "  (regexp-replace* #rx\"\\s+\" text1 \"\"))\n",
    "  (regexp-replace* #rx\"\\s\" text1 \"\"))\n",
    "  (string-join (regexp-split #rx\"[ \\t\\n\\r]+\" text1) \"\"))\n",
    "  (regexp-replace* #rx\"\\s\" text1 \"\"))\n",
    "  (regexp-replace* #rx\"\\s+\" text1 \"\"))\n",
    "  (regexp-replace* #rx\"\\s+\" text1 \"\"))\n",
    "  (regexp-replace* #rx\"\\s\" text1 \"\"))\n",
    "  (regexp-replace* #rx\"\\s\" text1 \"\"))\n",
    "  (regexp-replace* #rx\"\\s+\" text1 \"\"))\n",
    "  (string-join (regexp-split #rx\"\\s+\" text1) \"\"))\n"
  ]
}
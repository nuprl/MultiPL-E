{
  "name": "mbpp_436_neg_nos",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a python function to return the negative numbers in a list.\n(define (neg_nos list1)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_436_neg_nos.py",
  "prompt_terminology": "verbatim",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate neg_nos))\n    (check-equal? (candidate (list -1 4 5 -6)) (list -1 -6))\n    (check-equal? (candidate (list -1 -2 3 4)) (list -1 -2))\n    (check-equal? (candidate (list -7 -6 8 9)) (list -7 -6))\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (&lt; x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (\u03bb (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (&lt; x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (&lt; x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter negative? list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (&lt; x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter negative? list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (&lt; x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (negative? x)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter negative? list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter negative? list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (&lt; x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (&lt; x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (negative? x)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter negative? list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter negative? list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (&lt; x 0)) list1))\n",
    "  (filter (lambda (x) (&lt; x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter negative? list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (&lt; x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (&lt; x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (&lt; x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (negative? x)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (&lt; x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (&lt; x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (&lt; x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (negative? x)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter negative? list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (&lt; x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n",
    "  (filter (lambda (x) (< x 0)) list1))\n"
  ]
}
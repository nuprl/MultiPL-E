{
  "name": "mbpp_573_unique_product",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a python function to calculate the product of the unique numbers in a given list.\n(define (unique_product list_data)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_573_unique_product.py",
  "prompt_terminology": "verbatim",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate unique_product))\n    (check-equal? (candidate (list 10 20 30 40 20 50 60 40)) 720000000)\n    (check-equal? (candidate (list 1 2 3 1)) 6)\n    (check-equal? (candidate (list 7 8 9 0 1 1)) 0)\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (cond\n    [(empty? list_data) 1]\n    [(member (first list_data) (rest list_data)) (unique_product (rest list_data))]\n    [else (* (first list_data) (unique_product (rest list_data)))]))\n",
    "  (define (unique_product_iter list_data product)\n    (if (null? list_data)\n        product\n        (if (member (car list_data) (cdr list_data))\n            (unique_product_iter (cdr list_data) product)\n            (unique_product_iter (cdr list_data) (* product (car list_data))))))\n  (unique_product_iter list_data 1))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (if (null? list_data)\n      1\n      (if (member (car list_data) (cdr list_data))\n          (unique_product (cdr list_data))\n          (* (car list_data) (unique_product (cdr list_data))))))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (if (null? list_data)\n      1\n      (if (member (car list_data) (cdr list_data))\n          (unique_product (cdr list_data))\n          (* (car list_data) (unique_product (cdr list_data))))))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (if (null? list_data)\n      1\n      (if (member (car list_data) (cdr list_data))\n          (unique_product (cdr list_data))\n          (* (car list_data) (unique_product (cdr list_data))))))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (if (null? list_data)\n      1\n      (if (member (car list_data) (cdr list_data))\n          (unique_product (cdr list_data))\n          (* (car list_data) (unique_product (cdr list_data))))))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (cond\n    [(empty? list_data) 1]\n    [(member (first list_data) (rest list_data)) (unique_product (rest list_data))]\n    [else (* (first list_data) (unique_product (rest list_data)))]))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (cond\n    [(empty? list_data) 1]\n    [(member (first list_data) (rest list_data)) (unique_product (rest list_data))]\n    [else (* (first list_data) (unique_product (rest list_data)))]))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (if (null? list_data)\n      1\n      (* (car list_data) (unique_product (cdr list_data)))))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (cond [(null? list_data) 1]\n        [(member (car list_data) (cdr list_data)) (unique_product (cdr list_data))]\n        [else (* (car list_data) (unique_product (cdr list_data)))]))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (if (null? list_data)\n      1\n      (* (car list_data) (unique_product (cdr list_data)))))\n",
    "  (cond\n    [(empty? list_data) 1]\n    [(member (first list_data) (rest list_data)) (unique_product (rest list_data))]\n    [else (* (first list_data) (unique_product (rest list_data)))]))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (if (null? list_data)\n      1\n      (if (member (car list_data) (cdr list_data))\n          (unique_product (cdr list_data))\n          (* (car list_data) (unique_product (cdr list_data))))))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (if (null? list_data)\n      1\n      (if (member (car list_data) (cdr list_data))\n          (unique_product (cdr list_data))\n          (* (car list_data) (unique_product (cdr list_data))))))\n",
    "  (cond\n    [(empty? list_data) 1]\n    [(member (first list_data) (rest list_data)) (unique_product (rest list_data))]\n    [else (* (first list_data) (unique_product (rest list_data)))]))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (let loop ([list_data list_data]\n             [acc 1])\n    (if (null? list_data)\n        acc\n        (if (member (car list_data) (cdr list_data))\n            (loop (cdr list_data) acc)\n            (loop (cdr list_data) (* acc (car list_data)))))))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (if (null? list_data)\n      1\n      (if (member (car list_data) (cdr list_data))\n          (unique_product (cdr list_data))\n          (* (car list_data) (unique_product (cdr list_data))))))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (if (null? list_data)\n      1\n      (if (member (car list_data) (cdr list_data))\n          (unique_product (cdr list_data))\n          (* (car list_data) (unique_product (cdr list_data))))))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (cond\n    [(empty? list_data) 1]\n    [(member (first list_data) (rest list_data)) (unique_product (rest list_data))]\n    [else (* (first list_data) (unique_product (rest list_data)))]))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (if (null? list_data)\n      1\n      (if (member (car list_data) (cdr list_data))\n          (unique_product (cdr list_data))\n          (* (car list_data) (unique_product (cdr list_data))))))\n",
    "  (cond\n    [(empty? list_data) 1]\n    [(member (first list_data) (rest list_data)) (unique_product (rest list_data))]\n    [else (* (first list_data) (unique_product (rest list_data)))]))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (cond\n    [(empty? list_data) 1]\n    [(member (first list_data) (rest list_data)) (unique_product (rest list_data))]\n    [else (* (first list_data) (unique_product (rest list_data)))]))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (cond [(empty? list_data) 1]\n        [else (if (member (first list_data) (rest list_data))\n                 (unique_product (rest list_data))\n                 (* (first list_data) (unique_product (rest list_data))))]))\n",
    "  (if (null? list_data)\n      1\n      (if (member (car list_data) (cdr list_data))\n          (unique_product (cdr list_data))\n          (* (car list_data) (unique_product (cdr list_data))))))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (cond\n    [(empty? list_data) 1]\n    [(member (first list_data) (rest list_data)) (unique_product (rest list_data))]\n    [else (* (first list_data) (unique_product (rest list_data)))]))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (cond\n    [(empty? list_data) 1]\n    [(member (first list_data) (rest list_data)) (unique_product (rest list_data))]\n    [else (* (first list_data) (unique_product (rest list_data)))]))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (if (null? list_data)\n      1\n      (* (car list_data)\n         (unique_product (remove (car list_data) list_data)))))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (if (null? list_data)\n      1\n      (if (member (car list_data) (cdr list_data))\n          (unique_product (cdr list_data))\n          (* (car list_data) (unique_product (cdr list_data))))))\n",
    "  (define (unique_product_helper list_data result)\n    (cond\n      [(empty? list_data) result]\n      [(member (first list_data) (rest list_data)) (unique_product_helper (rest list_data) result)]\n      [else (unique_product_helper (rest list_data) (* result (first list_data)))]))\n  (unique_product_helper list_data 1))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (if (null? list_data)\n      1\n      (if (member (car list_data) (cdr list_data))\n          (unique_product (cdr list_data))\n          (* (car list_data) (unique_product (cdr list_data))))))\n",
    "  (define (unique_product_helper list_data result)\n    (cond\n      [(empty? list_data) result]\n      [(member (first list_data) (rest list_data)) (unique_product_helper (rest list_data) result)]\n      [else (unique_product_helper (rest list_data) (* result (first list_data)))]))\n  (unique_product_helper list_data 1))\n",
    "  (cond\n    [(empty? list_data) 1]\n    [(member (first list_data) (rest list_data)) (unique_product (rest list_data))]\n    [else (* (first list_data) (unique_product (rest list_data)))]))\n",
    "  (cond\n    [(empty? list_data) 1]\n    [(member (first list_data) (rest list_data)) (unique_product (rest list_data))]\n    [else (* (first list_data) (unique_product (rest list_data)))]))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (if (null? list_data)\n      1\n      (if (member (car list_data) (cdr list_data))\n          (unique_product (cdr list_data))\n          (* (car list_data) (unique_product (cdr list_data))))))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (if (null? list_data)\n      1\n      (if (member (car list_data) (cdr list_data))\n          (unique_product (cdr list_data))\n          (* (car list_data) (unique_product (cdr list_data))))))\n",
    "  (if (null? list_data)\n      1\n      (* (car list_data) (unique_product (cdr list_data)))))\n",
    "  (apply * (set list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (define (unique_product_helper list_data result)\n    (cond\n      [(empty? list_data) result]\n      [(member (first list_data) (rest list_data)) (unique_product_helper (rest list_data) result)]\n      [else (unique_product_helper (rest list_data) (* result (first list_data)))]))\n  (unique_product_helper list_data 1))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (cond\n    [(empty? list_data) 1]\n    [else\n     (if (member (first list_data) (rest list_data))\n         (unique_product (rest list_data))\n         (* (first list_data) (unique_product (rest list_data))))]))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (cond [(empty? list_data) 1]\n        [else (if (member (first list_data) (rest list_data))\n                  (unique_product (rest list_data))\n                  (* (first list_data) (unique_product (rest list_data))))]))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (if (null? list_data)\n      1\n      (let ([unique_list (remove-duplicates list_data)])\n        (apply * unique_list))))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (if (null? list_data)\n      1\n      (if (member (car list_data) (cdr list_data))\n          (unique_product (cdr list_data))\n          (* (car list_data) (unique_product (cdr list_data))))))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (if (null? list_data)\n      1\n      (if (member (car list_data) (cdr list_data))\n          (unique_product (cdr list_data))\n          (* (car list_data) (unique_product (cdr list_data))))))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (if (null? list_data)\n      1\n      (if (member (car list_data) (cdr list_data))\n          (unique_product (cdr list_data))\n          (* (car list_data) (unique_product (cdr list_data))))))\n",
    "  (if (null? list_data)\n      1\n      (if (member (car list_data) (cdr list_data))\n          (unique_product (cdr list_data))\n          (* (car list_data) (unique_product (cdr list_data))))))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (if (null? list_data)\n      1\n      (* (car list_data) (unique_product (remove (car list_data) (cdr list_data))))))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (if (null? list_data)\n      1\n      (if (member (car list_data) (cdr list_data))\n          (unique_product (cdr list_data))\n          (* (car list_data) (unique_product (cdr list_data))))))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (if (null? list_data)\n      1\n      (let ([unique_list (remove-duplicates list_data)])\n        (apply * unique_list))))\n",
    "  (if (null? list_data)\n      1\n      (if (member (car list_data) (cdr list_data))\n          (unique_product (cdr list_data))\n          (* (car list_data) (unique_product (cdr list_data))))))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (define (unique_product_helper list_data result)\n    (cond\n      [(null? list_data) result]\n      [(member (car list_data) (cdr list_data)) (unique_product_helper (cdr list_data) result)]\n      [else (unique_product_helper (cdr list_data) (* (car list_data) result))]))\n  (unique_product_helper list_data 1))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (if (null? list_data)\n      1\n      (if (member (car list_data) (cdr list_data))\n          (unique_product (cdr list_data))\n          (* (car list_data) (unique_product (cdr list_data))))))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (if (null? list_data)\n      1\n      (if (member (car list_data) (cdr list_data))\n          (unique_product (cdr list_data))\n          (* (car list_data) (unique_product (cdr list_data))))))\n",
    "  (define (unique_product_iter list_data result)\n    (cond\n      [(empty? list_data) result]\n      [(member (first list_data) (rest list_data)) (unique_product_iter (rest list_data) result)]\n      [else (unique_product_iter (rest list_data) (* result (first list_data)))]))\n  (unique_product_iter list_data 1))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (let loop ([list_data list_data] [product 1])\n    (if (null? list_data)\n        product\n        (if (member (car list_data) (cdr list_data))\n            (loop (cdr list_data) product)\n            (loop (cdr list_data) (* product (car list_data)))))))\n",
    "  (if (null? list_data)\n      1\n      (if (member (car list_data) (cdr list_data))\n          (unique_product (cdr list_data))\n          (* (car list_data) (unique_product (cdr list_data))))))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (cond\n    [(empty? list_data) 1]\n    [(member (first list_data) (rest list_data)) (unique_product (rest list_data))]\n    [else (* (first list_data) (unique_product (rest list_data)))]))\n",
    "  (if (null? list_data)\n      1\n      (if (member (car list_data) (cdr list_data))\n          (unique_product (cdr list_data))\n          (* (car list_data) (unique_product (cdr list_data))))))\n",
    "  (if (null? list_data)\n      1\n      (let ([first (car list_data)]\n            [rest (cdr list_data)])\n        (if (member first rest)\n            (unique_product rest)\n            (* first (unique_product rest))))))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (cond\n    [(empty? list_data) 1]\n    [(member (first list_data) (rest list_data)) (unique_product (rest list_data))]\n    [else (* (first list_data) (unique_product (rest list_data)))]))\n",
    "  (cond\n    [(empty? list_data) 1]\n    [(member (first list_data) (rest list_data)) (unique_product (rest list_data))]\n    [else (* (first list_data) (unique_product (rest list_data)))]))\n",
    "  (define (unique_product_helper list_data acc)\n    (cond\n      [(empty? list_data) acc]\n      [(member (first list_data) (rest list_data)) (unique_product_helper (rest list_data) acc)]\n      [else (unique_product_helper (rest list_data) (* acc (first list_data)))]))\n  (unique_product_helper list_data 1))\n",
    "  (if (null? list_data)\n      1\n      (if (member (car list_data) (cdr list_data))\n          (unique_product (cdr list_data))\n          (* (car list_data) (unique_product (cdr list_data))))))\n",
    "  (if (null? list_data)\n      1\n      (if (member (car list_data) (cdr list_data))\n          (unique_product (cdr list_data))\n          (* (car list_data) (unique_product (cdr list_data))))))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (if (null? list_data)\n      1\n      (* (car list_data) (unique_product (cdr list_data)))))\n",
    "  (if (null? list_data)\n      1\n      (if (member (car list_data) (cdr list_data))\n          (unique_product (cdr list_data))\n          (* (car list_data) (unique_product (cdr list_data))))))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (if (null? list_data)\n      1\n      (* (car list_data) (unique_product (remove (car list_data) (cdr list_data))))))\n",
    "  (apply * (set list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (if (null? list_data)\n      1\n      (if (member (car list_data) (cdr list_data))\n          (unique_product (cdr list_data))\n          (* (car list_data) (unique_product (cdr list_data))))))\n",
    "  (if (null? list_data)\n      1\n      (if (member (car list_data) (cdr list_data))\n          (unique_product (cdr list_data))\n          (* (car list_data) (unique_product (cdr list_data))))))\n",
    "  (if (null? list_data)\n      1\n      (if (member (car list_data) (cdr list_data))\n          (unique_product (cdr list_data))\n          (* (car list_data) (unique_product (cdr list_data))))))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (if (null? list_data)\n      1\n      (if (member (car list_data) (cdr list_data))\n          (unique_product (cdr list_data))\n          (* (car list_data) (unique_product (cdr list_data))))))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (if (null? list_data)\n      1\n      (let ([first_element (car list_data)]\n            [rest_of_list (cdr list_data)])\n        (if (member first_element rest_of_list)\n            (unique_product rest_of_list)\n            (* first_element (unique_product rest_of_list))))))\n",
    "  (apply * (remove-duplicates list_data)))\n",
    "  (cond\n    [(empty? list_data) 1]\n    [(member (first list_data) (rest list_data)) (unique_product (rest list_data))]\n    [else (* (first list_data) (unique_product (rest list_data)))]))\n",
    "  (cond\n    [(empty? list_data) 1]\n    [(member (first list_data) (rest list_data)) (unique_product (rest list_data))]\n    [else (* (first list_data) (unique_product (rest list_data)))]))\n"
  ]
}
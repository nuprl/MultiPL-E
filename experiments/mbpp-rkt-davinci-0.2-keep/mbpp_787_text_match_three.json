{
  "name": "mbpp_787_text_match_three",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a function that matches a string that has an a followed by three 'b'.\n(define (text_match_three text)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_787_text_match_three.py",
  "prompt_terminology": "verbatim",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate text_match_three))\n    (check-equal? (candidate \"ac\") #f)\n    (check-equal? (candidate \"dc\") #f)\n    (check-equal? (candidate \"abbbba\") #t)\n    (check-equal? (candidate \"caacabbbba\") #t)\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (regexp-match? #rx\"ab{3}\" text))\n",
    "  (regexp-match? #rx\"ab{3}\" text))\n",
    "  (regexp-match? #rx\"ab{3}\" text))\n",
    "  (regexp-match? #rx\"a(bbb)\" text))\n",
    "  (regexp-match? #rx\"a(bbb)\" text))\n",
    "  (regexp-match? #rx\"ab{3}\" text))\n",
    "  (regexp-match? #rx\"a(bbb)\" text))\n",
    "  (regexp-match? #rx\"a[b]{3}\" text))\n",
    "  (regexp-match? #rx\"a(bbb)\" text))\n",
    "  (regexp-match? #rx\"a(bbb)\" text))\n",
    "  (regexp-match? #rx\"a(bbb)\" text))\n",
    "  (regexp-match? #rx\"ab{3}\" text))\n",
    "  (regexp-match? #rx\"a(bbb)\" text))\n",
    "  (regexp-match? #rx\"ab{3}\" text))\n",
    "  (regexp-match? #rx\"a[b]{3}\" text))\n",
    "  (regexp-match? #rx\"ab{3}\" text))\n",
    "  (regexp-match? #rx\"a(bbb)\" text))\n",
    "  (regexp-match? #rx\"ab{3}\" text))\n",
    "  (regexp-match? #rx\"ab{3}\" text))\n",
    "  (regexp-match? #rx\"a(bbb)\" text))\n"
  ]
}
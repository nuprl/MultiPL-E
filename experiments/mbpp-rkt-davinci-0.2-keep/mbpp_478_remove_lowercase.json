{
  "name": "mbpp_478_remove_lowercase",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_478_remove_lowercase.py",
  "prompt_terminology": "verbatim",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n",
    "  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n",
    "  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n",
    "  (string-join (filter (lambda (x) (not (char-lower-case? (string-ref x 0)))) (string-split str1 #\\space)) \" \"))\n",
    "  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n",
    "  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n",
    "  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n",
    "  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n",
    "  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n",
    "  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n",
    "  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n",
    "  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n",
    "  (string-append\n   (regexp-replace* #rx\"[a-z]+\" str1 \"\")\n   (regexp-replace* #rx\"[A-Z]+\" str1 \"\")))\n",
    "  (string-append (regexp-replace* #rx\"[a-z]+\" str1 \"\") \"\"))\n",
    "  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n",
    "  (string-append (regexp-replace* #rx\"[a-z]+\" str1 \"\")\n                 (regexp-replace* #rx\"[A-Z]+\" str1 \"\")))\n",
    "  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n",
    "  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n",
    "  (string-append\n   (filter (lambda (x) (not (char-lower-case? x))) str1)))\n",
    "  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n"
  ]
}
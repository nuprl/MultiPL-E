{
  "name": "mbpp_760_unique_Element",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a python function to check whether a list of numbers contains only one distinct element or not.\n(define (unique_Element arr)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_760_unique_Element.py",
  "prompt_terminology": "verbatim",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate unique_Element))\n    (check-equal? (candidate (list 1 1 1)) #t)\n    (check-equal? (candidate (list 1 2 1 2)) #f)\n    (check-equal? (candidate (list 1 2 3 4 5)) #f)\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (if (equal? (length arr) 1)\n      #t\n      (if (equal? (length arr) 0)\n          #f\n          (if (equal? (first arr) (first (rest arr)))\n              #f\n              (unique_Element (rest arr))))))\n",
    "  (cond\n    [(empty? arr) #f]\n    [(empty? (cdr arr)) #t]\n    [(equal? (car arr) (cadr arr)) (unique_Element (cdr arr))]\n    [else #f]))\n",
    "  (if (equal? (length arr) 1)\n      #t\n      (if (equal? (length arr) 0)\n          #f\n          (if (equal? (length (remove (list-ref arr 0) arr)) 0)\n              #t\n              #f))))\n",
    "  (cond\n    [(empty? arr) #f]\n    [(empty? (cdr arr)) #t]\n    [(equal? (car arr) (cadr arr)) (unique_Element (cdr arr))]\n    [else #f]))\n",
    "  (if (null? (cdr arr))\n      #t\n      (if (equal? (car arr) (cadr arr))\n          (unique_Element (cdr arr))\n          #f)))\n",
    "  (cond\n    [(empty? arr) #f]\n    [(empty? (cdr arr)) #t]\n    [(equal? (car arr) (cadr arr)) (unique_Element (cdr arr))]\n    [else #f]))\n",
    "  (define (unique_Element_helper arr)\n    (cond\n      [(empty? arr) #t]\n      [(member (first arr) (rest arr)) #f]\n      [else (unique_Element_helper (rest arr))]))\n  (unique_Element_helper arr))\n",
    "  (cond [(empty? arr) #t]\n        [(empty? (cdr arr)) #t]\n        [(equal? (car arr) (cadr arr)) (unique_Element (cdr arr))]\n        [else #f]))\n",
    "  (if (null? (cdr arr))\n      #t\n      (if (equal? (car arr) (cadr arr))\n          (unique_Element (cdr arr))\n          #f)))\n",
    "  (if (null? (cdr arr))\n      #t\n      (if (equal? (car arr) (cadr arr))\n          (unique_Element (cdr arr))\n          #f)))\n",
    "  (cond\n    [(empty? arr) #f]\n    [(= (length arr) 1) #t]\n    [(= (length (remove-duplicates arr)) 1) #t]\n    [else #f]))\n",
    "  (cond\n    [(empty? arr) #f]\n    [(empty? (rest arr)) #t]\n    [else (and (equal? (first arr) (second arr)) (unique_Element (rest arr)))]))\n",
    "  (if (null? (cdr arr))\n      #t\n      (if (equal? (car arr) (cadr arr))\n          #f\n          (unique_Element (cdr arr)))))\n",
    "  (cond\n    [(empty? arr) #f]\n    [(= (length arr) 1) #t]\n    [else (and (not (member (first arr) (rest arr))) (unique_Element (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) #f]\n    [(empty? (rest arr)) #t]\n    [else (and (equal? (first arr) (second arr)) (unique_Element (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) #f]\n    [(empty? (rest arr)) #t]\n    [else (and (equal? (first arr) (second arr)) (unique_Element (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) #t]\n    [(empty? (cdr arr)) #t]\n    [(equal? (car arr) (cadr arr)) (unique_Element (cdr arr))]\n    [else #f]))\n</code>\n",
    "  (cond\n    [(empty? arr) #f]\n    [(empty? (cdr arr)) #t]\n    [(equal? (car arr) (cadr arr)) (unique_Element (cdr arr))]\n    [else #f]))\n",
    "  (cond\n    [(empty? arr) #f]\n    [(empty? (cdr arr)) #t]\n    [(equal? (car arr) (cadr arr)) (unique_Element (cdr arr))]\n    [else #f]))\n",
    "  (cond\n    [(empty? arr) #f]\n    [(empty? (cdr arr)) #t]\n    [(equal? (car arr) (cadr arr)) (unique_Element (cdr arr))]\n    [else #f]))\n"
  ]
}
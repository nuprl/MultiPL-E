{
  "name": "mbpp_393_max_length_list",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a function to find the list with maximum length.\n(define (max_length_list input_list)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_393_max_length_list.py",
  "prompt_terminology": "verbatim",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_length_list))\n    (check-equal? (candidate (list (list 0) (list 1 3) (list 5 7) (list 9 11) (list 13 15 17))) (list 3 (list 13 15 17)))\n    (check-equal? (candidate (list (list 1 2 3 4 5) (list 1 2 3 4) (list 1 2 3) (list 1 2) (list 1))) (list 5 (list 1 2 3 4 5)))\n    (check-equal? (candidate (list (list 3 4 5) (list 6 7 8 9) (list 10 11 12))) (list 4 (list 6 7 8 9)))\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let* ([first (car input_list)]\n            [second (car (cdr input_list))]\n            [rest (cdr (cdr input_list))])\n       (if (&gt; (length first) (length second))\n           (max_length_list (cons first rest))\n           (max_length_list (cons second rest))))]))\n",
    "  (cond\n    [(null? input_list) empty]\n    [(null? (cdr input_list)) (car input_list)]\n    [else (if (> (length (car input_list))\n                 (length (max_length_list (cdr input_list))))\n             (car input_list)\n             (max_length_list (cdr input_list)))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let ([max_length_list (max_length_list (cdr input_list))])\n       (if (&gt; (length (car input_list)) (length max_length_list))\n           (car input_list)\n           max_length_list))]))\n",
    "  (if (null? input_list)\n      '()\n      (if (null? (cdr input_list))\n          (car input_list)\n          (if (&gt; (length (car input_list)) (length (cadr input_list)))\n              (max_length_list (cons (car input_list) (cddr input_list)))\n              (max_length_list (cons (cadr input_list) (cddr input_list)))))))\n",
    "  (cond\n    [(empty? input_list) empty]\n    [(= (length (first input_list)) (length (max_length_list (rest input_list))))\n     (first input_list)]\n    [else (max_length_list (rest input_list))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (if (&gt; (length (car input_list)) (length (cadr input_list)))\n         (max_length_list (cons (car input_list) (cddr input_list)))\n         (max_length_list (cons (cadr input_list) (cddr input_list))))]))\n",
    "  (cond\n    [(empty? input_list) empty]\n    [(empty? (rest input_list)) (first input_list)]\n    [else (if (> (length (first input_list)) (length (max_length_list (rest input_list))))\n              (first input_list)\n              (max_length_list (rest input_list)))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let ([max_list (max_length_list (cdr input_list))])\n       (if (&gt; (length (car input_list)) (length max_list))\n           (car input_list)\n           max_list))]))\n",
    "  (cond\n    [(empty? input_list) empty]\n    [(empty? (rest input_list)) (first input_list)]\n    [else\n     (if (> (length (first input_list)) (length (max_length_list (rest input_list))))\n         (first input_list)\n         (max_length_list (rest input_list)))]))\n",
    "  (if (null? input_list)\n      '()\n      (if (null? (cdr input_list))\n          (car input_list)\n          (if (> (length (car input_list)) (length (cadr input_list)))\n              (max_length_list (cons (car input_list) (cddr input_list)))\n              (max_length_list (cons (cadr input_list) (cddr input_list)))))))\n",
    "  (apply max (map length input_list)))\n",
    "  (cond\n    [(empty? input_list) empty]\n    [(empty? (rest input_list)) (first input_list)]\n    [else\n     (let ([max_length_list (max_length_list (rest input_list))])\n       (if (&gt; (length (first input_list)) (length max_length_list))\n           (first input_list)\n           max_length_list))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else (if (> (length (car input_list)) (length (cadr input_list)))\n             (max_length_list (cons (car input_list) (cddr input_list)))\n             (max_length_list (cdr input_list)))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let ([max_list (max_length_list (cdr input_list))])\n       (if (&gt; (length (car input_list)) (length max_list))\n           (car input_list)\n           max_list))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let ([max_length_list (max_length_list (cdr input_list))])\n       (if (&gt; (length (car input_list)) (length max_length_list))\n           (car input_list)\n           max_length_list))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let ([max_length_list (max_length_list (cdr input_list))])\n       (if (&gt; (length (car input_list)) (length max_length_list))\n           (car input_list)\n           max_length_list))]))\n",
    "  (apply max (map length input_list)))\n",
    "  (cond\n    [(empty? input_list) empty]\n    [else\n     (let ([max_length (length (first input_list))])\n       (for/fold ([max_length_list empty])\n                 ([list (in-list input_list)])\n         (if (> (length list) max_length)\n             (list list)\n             max_length_list)))]))\n",
    "  (apply max (map length input_list)))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let* ([max_list (max_length_list (cdr input_list))]\n            [max_list_length (length max_list)])\n       (if (&gt; (length (car input_list)) max_list_length)\n           (car input_list)\n           max_list))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else (if (> (length (car input_list)) (length (max_length_list (cdr input_list))))\n              (car input_list)\n              (max_length_list (cdr input_list)))]))\n",
    "  (cond\n    [(empty? input_list) empty]\n    [else\n     (define max_length_list (max_length_list (rest input_list)))\n     (if (&gt; (length (first input_list)) (length max_length_list))\n         (first input_list)\n         max_length_list)]))\n",
    "  (cond\n    [(empty? input_list) empty]\n    [else\n     (let ([max_list (max_length_list (rest input_list))])\n       (if (&gt; (length (first input_list)) (length max_list))\n           (first input_list)\n           max_list))]))\n</code>\n",
    "  (apply max (map length input_list)))\n",
    "  (cond\n    [(empty? input_list) empty]\n    [else\n     (let ([max_list (max_length_list (rest input_list))])\n       (if (&gt; (length (first input_list)) (length max_list))\n           (first input_list)\n           max_list))]))\n</code>\n",
    "  (apply max (map length input_list)))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let* ([first_list (car input_list)]\n            [second_list (car (cdr input_list))]\n            [first_list_length (length first_list)]\n            [second_list_length (length second_list)])\n       (if (> first_list_length second_list_length)\n           first_list\n           second_list))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else (if (> (length (car input_list)) (length (cadr input_list)))\n              (max_length_list (cons (car input_list) (cddr input_list)))\n              (max_length_list (cdr input_list)))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let ([max_length_list (max_length_list (cdr input_list))])\n       (if (&gt; (length (car input_list)) (length max_length_list))\n           (car input_list)\n           max_length_list))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let ([max_length_list (max_length_list (cdr input_list))])\n       (if (&gt; (length (car input_list)) (length max_length_list))\n           (car input_list)\n           max_length_list))]))\n",
    "  (cond\n    [(empty? input_list) empty]\n    [else\n     (let ([max_list (max_length_list (rest input_list))])\n       (if (&gt; (length (first input_list)) (length max_list))\n           (first input_list)\n           max_list))]))\n",
    "  (cond\n    [(empty? input_list) empty]\n    [else\n     (let ([max_list (max_length_list (rest input_list))])\n       (if (&gt; (length (first input_list)) (length max_list))\n           (first input_list)\n           max_list))]))\n</code>\n",
    "  (apply max (map length input_list)))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else (if (&gt; (length (car input_list)) (length (max_length_list (cdr input_list))))\n              (car input_list)\n              (max_length_list (cdr input_list)))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let* ([max_length_list (max_length_list (cdr input_list))]\n            [max_length (length max_length_list)])\n       (if (> (length (car input_list)) max_length)\n           (car input_list)\n           max_length_list))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [else\n     (let ([max_list (max_length_list (cdr input_list))])\n       (if (> (length (car input_list)) (length max_list))\n           (car input_list)\n           max_list))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else (if (> (length (car input_list)) (length (max_length_list (cdr input_list))))\n              (car input_list)\n              (max_length_list (cdr input_list)))]))\n",
    "  (cond\n    [(empty? input_list) empty]\n    [(empty? (rest input_list)) (first input_list)]\n    [else (if (> (length (first input_list)) (length (max_length_list (rest input_list))))\n              (first input_list)\n              (max_length_list (rest input_list)))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let* ([max_length_rest (max_length_list (cdr input_list))]\n            [max_length_rest_length (length max_length_rest)])\n       (if (&gt; (length (car input_list)) max_length_rest_length)\n           (car input_list)\n           max_length_rest))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let* ([first_list (car input_list)]\n            [second_list (cadr input_list)]\n            [first_list_length (length first_list)]\n            [second_list_length (length second_list)])\n       (if (> first_list_length second_list_length)\n           first_list\n           second_list))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else (if (> (length (car input_list)) (length (cadr input_list)))\n              (max_length_list (cons (car input_list) (cddr input_list)))\n              (max_length_list (cdr input_list)))]))\n",
    "  (apply max (map length input_list)))\n",
    "  (cond\n    [(empty? input_list) empty]\n    [(empty? (rest input_list)) (first input_list)]\n    [else\n     (if (> (length (first input_list)) (length (max_length_list (rest input_list))))\n         (first input_list)\n         (max_length_list (rest input_list)))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let* ([max_list (max_length_list (cdr input_list))]\n            [max_length (length max_list)])\n       (if (&gt; (length (car input_list)) max_length)\n           (car input_list)\n           max_list))]))\n",
    "  (apply max (map length input_list)))\n",
    "  (cond\n    [(null? input_list) empty]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (if (> (length (car input_list)) (length (cadr input_list)))\n         (max_length_list (cons (car input_list) (cddr input_list)))\n         (max_length_list (cdr input_list)))]))\n",
    "  (if (null? input_list)\n      '()\n      (if (null? (cdr input_list))\n          (car input_list)\n          (if (> (length (car input_list)) (length (cadr input_list)))\n              (max_length_list (cons (car input_list) (cddr input_list)))\n              (max_length_list (cdr input_list))))))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let ([first_list (car input_list)]\n           [second_list (cadr input_list)])\n       (if (> (length first_list) (length second_list))\n           first_list\n           second_list))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let* ([first_list (car input_list)]\n            [second_list (car (cdr input_list))]\n            [first_length (length first_list)]\n            [second_length (length second_list)])\n       (if (> first_length second_length)\n           first_list\n           second_list))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let* ([max_list (max_length_list (cdr input_list))]\n            [max_length (length max_list)])\n       (if (&gt; (length (car input_list)) max_length)\n           (car input_list)\n           max_list))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let ([max_length_list (max_length_list (cdr input_list))])\n       (if (&gt; (length (car input_list)) (length max_length_list))\n           (car input_list)\n           max_length_list))]))\n</code>\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let* ([max_list (max_length_list (cdr input_list))]\n            [max_list_length (length max_list)])\n       (if (&gt; (length (car input_list)) max_list_length)\n           (car input_list)\n           max_list))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else (if (> (length (car input_list)) (length (max_length_list (cdr input_list))))\n              (car input_list)\n              (max_length_list (cdr input_list)))]))\n",
    "  (cond\n    [(empty? input_list) empty]\n    [(empty? (rest input_list)) (first input_list)]\n    [else\n     (let ([max_length_list (max_length_list (rest input_list))])\n       (if (&gt; (length (first input_list)) (length max_length_list))\n           (first input_list)\n           max_length_list))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let ([max_length_list (max_length_list (cdr input_list))])\n       (if (&gt; (length (car input_list)) (length max_length_list))\n           (car input_list)\n           max_length_list))]))\n",
    "  (cond\n    [(empty? input_list) empty]\n    [(empty? (rest input_list)) (first input_list)]\n    [else (if (> (length (first input_list)) (length (max_length_list (rest input_list))))\n              (first input_list)\n              (max_length_list (rest input_list)))]))\n",
    "  (cond\n    [(empty? input_list) empty]\n    [(empty? (rest input_list)) (first input_list)]\n    [else\n     (if (> (length (first input_list)) (length (max_length_list (rest input_list))))\n         (first input_list)\n         (max_length_list (rest input_list)))]))\n",
    "  (apply max (map length input_list)))\n",
    "  (apply max (map length input_list)))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let ([max_length_list (max_length_list (cdr input_list))])\n       (if (&gt; (length (car input_list)) (length max_length_list))\n           (car input_list)\n           max_length_list))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (if (> (length (car input_list)) (length (cadr input_list)))\n         (max_length_list (cons (car input_list) (cddr input_list)))\n         (max_length_list (cdr input_list)))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else (if (> (length (car input_list)) (length (max_length_list (cdr input_list))))\n              (car input_list)\n              (max_length_list (cdr input_list)))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let ([max_length_list (max_length_list (cdr input_list))])\n       (if (&gt; (length (car input_list)) (length max_length_list))\n           (car input_list)\n           max_length_list))]))\n",
    "  (cond\n    [(empty? input_list) empty]\n    [else\n     (let ([max_list (max_length_list (rest input_list))])\n       (if (&gt; (length (first input_list)) (length max_list))\n           (first input_list)\n           max_list))]))\n</code>\n",
    "  (apply max (map length input_list)))\n",
    "  (cond\n    [(empty? input_list) empty]\n    [(= (length (first input_list))\n        (length (max_length_list (rest input_list))))\n     (first input_list)]\n    [else (max_length_list (rest input_list))]))\n",
    "  (cond [(empty? input_list) empty]\n        [else (max_length_list_helper input_list empty)]))\n",
    "  (cond\n    [(empty? input_list) empty]\n    [else\n     (let ([max_list (max_length_list (rest input_list))])\n       (if (&gt; (length (first input_list)) (length max_list))\n           (first input_list)\n           max_list))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let* ([first_list (car input_list)]\n            [rest_list (cdr input_list)]\n            [rest_max_list (max_length_list rest_list)])\n       (if (> (length first_list) (length rest_max_list))\n           first_list\n           rest_max_list))]))\n",
    "  (apply max (map length input_list)))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let* ([first (car input_list)]\n            [rest (cdr input_list)]\n            [first_length (length first)]\n            [rest_length (length (max_length_list rest))])\n       (if (> first_length rest_length)\n           first\n           (max_length_list rest)))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let* ([first (car input_list)]\n            [rest (cdr input_list)]\n            [rest_max (max_length_list rest)])\n       (if (> (length first) (length rest_max))\n           first\n           rest_max))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let ([max_list (max_length_list (cdr input_list))])\n       (if (&gt; (length (car input_list)) (length max_list))\n           (car input_list)\n           max_list))]))\n",
    "  (apply max (map length input_list)))\n",
    "  (cond\n    [(empty? input_list) empty]\n    [(empty? (rest input_list)) (first input_list)]\n    [else\n     (if (> (length (first input_list))\n            (length (max_length_list (rest input_list))))\n         (first input_list)\n         (max_length_list (rest input_list)))]))\n",
    "  (apply max (map length input_list)))\n",
    "  (apply max (map length input_list)))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (if (> (length (car input_list)) (length (cadr input_list)))\n         (max_length_list (cons (car input_list) (cddr input_list)))\n         (max_length_list (cdr input_list)))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let* ([first_list (car input_list)]\n            [second_list (cadr input_list)]\n            [first_length (length first_list)]\n            [second_length (length second_list)])\n       (if (> first_length second_length)\n           first_list\n           second_list))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (if (> (length (car input_list))\n            (length (max_length_list (cdr input_list))))\n         (car input_list)\n         (max_length_list (cdr input_list)))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else (if (> (length (car input_list)) (length (max_length_list (cdr input_list))))\n              (car input_list)\n              (max_length_list (cdr input_list)))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let ([max_length_list (max_length_list (cdr input_list))])\n       (if (&gt; (length (car input_list)) (length max_length_list))\n           (car input_list)\n           max_length_list))]))\n",
    "  (apply max (map length input_list)))\n",
    "  (cond\n    [(empty? input_list) empty]\n    [(empty? (rest input_list)) (first input_list)]\n    [else\n     (if (> (length (first input_list)) (length (max_length_list (rest input_list))))\n         (first input_list)\n         (max_length_list (rest input_list)))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let ([max_length_list (max_length_list (cdr input_list))])\n       (if (&gt; (length (car input_list)) (length max_length_list))\n           (car input_list)\n           max_length_list))]))\n",
    "  (cond\n    [(empty? input_list) empty]\n    [(> (length (first input_list)) (length (max_length_list (rest input_list))))\n     (first input_list)]\n    [else (max_length_list (rest input_list))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let* ([max_list (max_length_list (cdr input_list))]\n            [max_list_length (length max_list)])\n       (if (&gt; (length (car input_list)) max_list_length)\n           (car input_list)\n           max_list))]))\n",
    "  (apply max (map length input_list)))\n",
    "  (cond\n    [(empty? input_list) empty]\n    [else\n     (let* ([current_max (max_length_list (rest input_list))]\n            [current_max_length (length current_max)])\n       (if (> (length (first input_list)) current_max_length)\n           (first input_list)\n           current_max))]))\n",
    "  (cond\n    [(empty? input_list) empty]\n    [else\n     (let ([max_list (max_length_list (rest input_list))])\n       (if (&gt; (length (first input_list)) (length max_list))\n           (first input_list)\n           max_list))]))\n",
    "  (apply max (map length input_list)))\n",
    "  (apply max (map length input_list)))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else (if (> (length (car input_list)) (length (cadr input_list)))\n              (max_length_list (cons (car input_list) (cddr input_list)))\n              (max_length_list (cdr input_list)))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let ([max_length_list (max_length_list (cdr input_list))])\n       (if (&gt; (length (car input_list)) (length max_length_list))\n           (car input_list)\n           max_length_list))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let ([first_list (car input_list)]\n           [second_list (cadr input_list)])\n       (if (> (length first_list) (length second_list))\n           first_list\n           second_list))]))\n",
    "  (if (null? input_list)\n      '()\n      (if (null? (cdr input_list))\n          (car input_list)\n          (if (&gt; (length (car input_list)) (length (cadr input_list)))\n              (max_length_list (cons (car input_list) (cddr input_list)))\n              (max_length_list (cons (cadr input_list) (cddr input_list)))))))\n</code>\nI am not sure if this is the best way to do it. I am looking for a better way to do it.\n\n\nA:\n\nThe problem with your code is that it's not tail-recursive. You can easily fix that by using an accumulator:\n<code>(define (max-length-list lst)\n  (let loop ((lst lst)\n             (max-lst '()))\n    (cond ((null? lst) max-lst)\n          ((&gt; (length (car lst)) (length max-lst))\n           (loop (cdr lst) (car lst)))\n          (else (loop (cdr lst) max-lst)))))\n</code>\n",
    "  (cond\n    [(empty? input_list) empty]\n    [else\n     (let ([max_list (max_length_list (rest input_list))])\n       (if (&gt; (length (first input_list)) (length max_list))\n           (first input_list)\n           max_list))]))\n</code>\nI'm getting the following error:\n<code>application: not a procedure;\n expected a procedure that can be applied to arguments\n  given: '()\n  arguments...:\n   '()\n</code>\nI'm not sure what I'm doing wrong.\n\n\nA:\n\nYou're getting the error because you're calling <code>length</code> on an empty list. You need to check for that case:\n<code>(define (max_length_list input-list)\n  (cond\n    [(empty? input-list) empty]\n    [else\n     (let ([max-list (max-length-list (rest input-list))])\n       (if (or (empty? max-list)\n               (&gt; (length (first input-list)) (length max-list)))\n           (first input-list)\n           max-list))]))\n</code>\n",
    "  (cond\n    [(empty? input_list) empty]\n    [(empty? (rest input_list)) (first input_list)]\n    [else\n     (if (> (length (first input_list))\n            (length (max_length_list (rest input_list))))\n         (first input_list)\n         (max_length_list (rest input_list)))]))\n",
    "  (apply max (map length input_list)))\n",
    "  (cond\n    [(empty? input_list) empty]\n    [(empty? (rest input_list)) (first input_list)]\n    [else\n     (if (> (length (first input_list)) (length (max_length_list (rest input_list))))\n         (first input_list)\n         (max_length_list (rest input_list)))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let* ([first (car input_list)]\n            [second (car (cdr input_list))]\n            [rest (cdr (cdr input_list))])\n       (if (&gt; (length first) (length second))\n           (max_length_list (cons first rest))\n           (max_length_list (cons second rest))))]))\n</code>\n",
    "  (cond\n    [(empty? input_list) empty]\n    [(empty? (rest input_list)) (first input_list)]\n    [else\n     (if (> (length (first input_list))\n            (length (max_length_list (rest input_list))))\n         (first input_list)\n         (max_length_list (rest input_list)))]))\n",
    "  (cond\n    [(null? input_list) #f]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let* ([current_max (max_length_list (cdr input_list))]\n            [current_max_length (length current_max)])\n       (if (&gt; (length (car input_list)) current_max_length)\n           (car input_list)\n           current_max))]))\n",
    "  (apply max (map length input_list)))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else (if (> (length (car input_list)) (length (cadr input_list)))\n              (max_length_list (cons (car input_list) (cddr input_list)))\n              (max_length_list (cdr input_list)))]))\n",
    "  (cond\n    [(empty? input_list) empty]\n    [(empty? (rest input_list)) (first input_list)]\n    [else\n     (if (&gt; (length (first input_list)) (length (max_length_list (rest input_list))))\n         (first input_list)\n         (max_length_list (rest input_list)))]))\n",
    "  (apply max (map length input_list)))\n",
    "  (apply max (map length input_list)))\n",
    "  (cond\n    [(empty? input_list) empty]\n    [else\n     (let* ([max_list (max_length_list (rest input_list))]\n            [max_length (length max_list)])\n       (if (&gt; (length (first input_list)) max_length)\n           (first input_list)\n           max_list))]))\n",
    "  (apply max (map length input_list)))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else (if (> (length (car input_list)) (length (cadr input_list)))\n             (max_length_list (cons (car input_list) (cddr input_list)))\n             (max_length_list (cdr input_list)))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (if (> (length (car input_list)) (length (cadr input_list)))\n         (max_length_list (cons (car input_list) (cddr input_list)))\n         (max_length_list (cdr input_list)))]))\n",
    "  (if (null? input_list)\n      '()\n      (if (null? (cdr input_list))\n          (car input_list)\n          (if (> (length (car input_list)) (length (cadr input_list)))\n              (max_length_list (cons (car input_list) (cddr input_list)))\n              (max_length_list (cons (cadr input_list) (cddr input_list)))))))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else (if (> (length (car input_list)) (length (max_length_list (cdr input_list))))\n              (car input_list)\n              (max_length_list (cdr input_list)))]))\n",
    "  (if (null? input_list)\n      '()\n      (let ([max_list (max_length_list (cdr input_list))])\n        (if (null? max_list)\n            (car input_list)\n            (if (&gt; (length (car input_list)) (length max_list))\n                (car input_list)\n                max_list)))))\n",
    "  (apply max (map length input_list)))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let* ([max_length_rest (max_length_list (cdr input_list))]\n            [max_length_rest_length (length max_length_rest)])\n       (if (> (length (car input_list)) max_length_rest_length)\n           (car input_list)\n           max_length_rest))]))\n",
    "  (cond\n    [(empty? input_list) empty]\n    [else\n     (let ([max_list (max_length_list (rest input_list))])\n       (if (&gt; (length (first input_list)) (length max_list))\n           (first input_list)\n           max_list))]))\n",
    "  (cond\n    [(empty? input_list) empty]\n    [(empty? (rest input_list)) (first input_list)]\n    [else\n     (if (> (length (first input_list)) (length (max_length_list (rest input_list))))\n         (first input_list)\n         (max_length_list (rest input_list)))]))\n",
    "  (cond\n    [(empty? input_list) empty]\n    [(empty? (rest input_list)) (first input_list)]\n    [else (if (> (length (first input_list)) (length (max_length_list (rest input_list))))\n             (first input_list)\n             (max_length_list (rest input_list)))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let ([first_list (car input_list)]\n           [second_list (car (cdr input_list))])\n       (if (&gt; (length first_list) (length second_list))\n           first_list\n           second_list))]))\n",
    "  (cond\n    [(empty? input_list) empty]\n    [(empty? (rest input_list)) (first input_list)]\n    [else\n     (if (> (length (first input_list))\n            (length (max_length_list (rest input_list))))\n         (first input_list)\n         (max_length_list (rest input_list)))]))\n",
    "  (if (null? input_list)\n      '()\n      (if (null? (cdr input_list))\n          (car input_list)\n          (if (> (length (car input_list)) (length (cadr input_list)))\n              (max_length_list (cons (car input_list) (cddr input_list)))\n              (max_length_list (cons (cadr input_list) (cddr input_list)))))))\n",
    "  (cond ((null? input_list) '())\n        ((null? (cdr input_list)) (car input_list))\n        (else (if (> (length (car input_list))\n                     (length (max_length_list (cdr input_list))))\n                  (car input_list)\n                  (max_length_list (cdr input_list))))))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let* ([first_list (car input_list)]\n            [second_list (car (cdr input_list))]\n            [first_length (length first_list)]\n            [second_length (length second_list)])\n       (if (> first_length second_length)\n           first_list\n           second_list))]))\n",
    "  (cond\n    [(empty? input_list) empty]\n    [(empty? (rest input_list)) (first input_list)]\n    [else\n     (let ([first_list (first input_list)]\n           [rest_list (rest input_list)])\n       (if (> (length first_list) (length (max_length_list rest_list)))\n           first_list\n           (max_length_list rest_list)))]))\n",
    "  (cond\n    [(empty? input_list) empty]\n    [(empty? (rest input_list)) (first input_list)]\n    [else\n     (let ([max_list (max_length_list (rest input_list))])\n       (if (&gt; (length (first input_list)) (length max_list))\n           (first input_list)\n           max_list))]))\n",
    "  (apply max (map length input_list)))\n",
    "  (apply max (map length input_list)))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let ([max_length_list (max_length_list (cdr input_list))])\n       (if (&gt; (length (car input_list)) (length max_length_list))\n           (car input_list)\n           max_length_list))]))\n",
    "  (cond\n    [(empty? input_list) empty]\n    [(empty? (rest input_list)) (first input_list)]\n    [else\n     (if (> (length (first input_list))\n            (length (max_length_list (rest input_list))))\n         (first input_list)\n         (max_length_list (rest input_list)))]))\n",
    "  (apply max (map length input_list)))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (if (> (length (car input_list)) (length (car (cdr input_list))))\n         (max_length_list (cons (car input_list) (cdr (cdr input_list))))\n         (max_length_list (cdr input_list)))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let* ([max_length_list (max_length_list (cdr input_list))]\n            [max_length (length max_length_list)])\n       (if (> (length (car input_list)) max_length)\n           (car input_list)\n           max_length_list))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (if (> (length (car input_list)) (length (cadr input_list)))\n         (max_length_list (cons (car input_list) (cddr input_list)))\n         (max_length_list (cdr input_list)))]))\n",
    "  (cond\n    [(empty? input_list) empty]\n    [(empty? (rest input_list)) (first input_list)]\n    [else\n     (let ([max_length_list (max_length_list (rest input_list))])\n       (if (> (length (first input_list)) (length max_length_list))\n           (first input_list)\n           max_length_list))]))\n",
    "  (cond\n    [(empty? input_list) empty]\n    [else\n     (let ([max_list (max_length_list (rest input_list))])\n       (if (&gt; (length (first input_list)) (length max_list))\n           (first input_list)\n           max_list))]))\n",
    "  (cond\n    [(empty? input_list) empty]\n    [else\n     (let ([max_length_list (max_length_list (rest input_list))])\n       (if (&gt; (length (first input_list)) (length max_length_list))\n           (first input_list)\n           max_length_list))]))\n</code>\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (if (> (length (car input_list)) (length (cadr input_list)))\n         (max_length_list (cons (car input_list) (cddr input_list)))\n         (max_length_list (cdr input_list)))]))\n",
    "  (cond\n    [(empty? input_list) empty]\n    [(empty? (rest input_list)) (first input_list)]\n    [else (max_length_list (rest input_list))]))\n",
    "  (apply max (map length input_list)))\n",
    "  (if (null? input_list)\n      '()\n      (let ([max_list (max_length_list (cdr input_list))])\n        (if (null? max_list)\n            (car input_list)\n            (if (&gt; (length (car input_list)) (length max_list))\n                (car input_list)\n                max_list)))))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (if (> (length (car input_list)) (length (cadr input_list)))\n         (max_length_list (cons (car input_list) (cddr input_list)))\n         (max_length_list (cdr input_list)))]))\n",
    "  (apply max (map length input_list)))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (if (> (length (car input_list))\n            (length (max_length_list (cdr input_list))))\n         (car input_list)\n         (max_length_list (cdr input_list)))]))\n",
    "  (cond\n    [(empty? input_list) empty]\n    [(empty? (rest input_list)) (first input_list)]\n    [else (if (> (length (first input_list))\n                 (length (max_length_list (rest input_list))))\n             (first input_list)\n             (max_length_list (rest input_list)))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let ([max_length_list (max_length_list (cdr input_list))])\n       (if (&gt; (length (car input_list)) (length max_length_list))\n           (car input_list)\n           max_length_list))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else (if (> (length (car input_list)) (length (max_length_list (cdr input_list))))\n              (car input_list)\n              (max_length_list (cdr input_list)))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let ([first_list (car input_list)]\n           [second_list (car (cdr input_list))])\n       (if (> (length first_list) (length second_list))\n           first_list\n           second_list))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let* ([first_list (car input_list)]\n            [second_list (car (cdr input_list))]\n            [first_length (length first_list)]\n            [second_length (length second_list)])\n       (if (> first_length second_length)\n           first_list\n           second_list))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (if (> (length (car input_list)) (length (cadr input_list)))\n         (max_length_list (cons (car input_list) (cddr input_list)))\n         (max_length_list (cdr input_list)))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else (if (> (length (car input_list)) (length (max_length_list (cdr input_list))))\n              (car input_list)\n              (max_length_list (cdr input_list)))]))\n",
    "  (if (null? input_list)\n      '()\n      (if (null? (cdr input_list))\n          (car input_list)\n          (if (&gt; (length (car input_list)) (length (cadr input_list)))\n              (max_length_list (cons (car input_list) (cddr input_list)))\n              (max_length_list (cons (cadr input_list) (cddr input_list)))))))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let ([max_length_list (max_length_list (cdr input_list))])\n       (if (&gt; (length (car input_list)) (length max_length_list))\n           (car input_list)\n           max_length_list))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else (if (> (length (car input_list)) (length (cadr input_list)))\n             (max_length_list (cons (car input_list) (cddr input_list)))\n             (max_length_list (cdr input_list)))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else (if (> (length (car input_list)) (length (max_length_list (cdr input_list))))\n              (car input_list)\n              (max_length_list (cdr input_list)))]))\n",
    "  (cond\n    [(empty? input_list) empty]\n    [(empty? (rest input_list)) (first input_list)]\n    [else (if (> (length (first input_list)) (length (max_length_list (rest input_list))))\n              (first input_list)\n              (max_length_list (rest input_list)))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let* ([first (car input_list)]\n            [second (car (cdr input_list))]\n            [rest (cdr (cdr input_list))])\n       (if (> (length first) (length second))\n           (max_length_list (cons first rest))\n           (max_length_list (cons second rest))))]))\n",
    "  (cond\n    [(empty? input_list) empty]\n    [else\n     (let* ([max_list (max_length_list (rest input_list))]\n            [max_length (length max_list)]\n            [current_length (length (first input_list))])\n       (if (> current_length max_length)\n           (first input_list)\n           max_list))]))\n",
    "  (apply max (map length input_list)))\n",
    "  (cond\n    [(null? input_list) '()]\n    [else\n     (let ([max_list (max_length_list (cdr input_list))])\n       (if (&gt; (length (car input_list)) (length max_list))\n           (car input_list)\n           max_list))]))\n</code>\n",
    "  (cond\n    [(null? input_list) empty]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let* ([current_max (max_length_list (cdr input_list))]\n            [current_max_length (length current_max)])\n       (if (&gt; (length (car input_list)) current_max_length)\n           (car input_list)\n           current_max))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else (if (&gt; (length (car input_list)) (length (max_length_list (cdr input_list))))\n             (car input_list)\n             (max_length_list (cdr input_list)))]))\n</code>\n",
    "  (apply max (map length input_list)))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else (if (> (length (car input_list)) (length (cadr input_list)))\n             (max_length_list (cons (car input_list) (cddr input_list)))\n             (max_length_list (cdr input_list)))]))\n",
    "  (apply max (map length input_list)))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (if (> (length (car input_list)) (length (cadr input_list)))\n         (max_length_list (cons (car input_list) (cddr input_list)))\n         (max_length_list (cons (cadr input_list) (cddr input_list))))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let ([first_list (car input_list)]\n           [second_list (car (cdr input_list))])\n       (if (> (length first_list) (length second_list))\n           first_list\n           second_list))]))\n",
    "  (cond\n    [(null? input_list) (error \"Empty list\")]\n    [(null? (cdr input_list)) (car input_list)]\n    [else (if (> (length (car input_list)) (length (max_length_list (cdr input_list))))\n             (car input_list)\n             (max_length_list (cdr input_list)))]))\n",
    "  (if (null? input_list)\n      '()\n      (if (null? (cdr input_list))\n          (car input_list)\n          (if (> (length (car input_list)) (length (cadr input_list)))\n              (max_length_list (cons (car input_list) (cddr input_list)))\n              (max_length_list (cons (cadr input_list) (cddr input_list)))))))\n",
    "  (apply max (map length input_list)))\n",
    "  (apply max (map length input_list)))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let* ([first (car input_list)]\n            [second (cadr input_list)]\n            [first_length (length first)]\n            [second_length (length second)])\n       (if (&gt; first_length second_length)\n           first\n           second))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let* ([first_list (car input_list)]\n            [second_list (cadr input_list)]\n            [first_list_length (length first_list)]\n            [second_list_length (length second_list)])\n       (if (> first_list_length second_list_length)\n           first_list\n           second_list))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (if (> (length (car input_list)) (length (car (cdr input_list))))\n         (max_length_list (cons (car input_list) (cdr (cdr input_list))))\n         (max_length_list (cdr input_list)))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let ([max_length_list (max_length_list (cdr input_list))])\n       (if (&gt; (length (car input_list)) (length max_length_list))\n           (car input_list)\n           max_length_list))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (if (> (length (car input_list)) (length (cadr input_list)))\n         (max_length_list (cons (car input_list) (cddr input_list)))\n         (max_length_list (cdr input_list)))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let ([max_length_list (max_length_list (cdr input_list))])\n       (if (> (length (car input_list)) (length max_length_list))\n           (car input_list)\n           max_length_list))]))\n",
    "  (cond\n    [(empty? input_list) empty]\n    [(empty? (rest input_list)) (first input_list)]\n    [else\n     (let ([first_list (first input_list)]\n           [rest_list (max_length_list (rest input_list))])\n       (if (> (length first_list) (length rest_list))\n           first_list\n           rest_list))]))\n",
    "  (apply max (map length input_list)))\n",
    "  (cond\n    [(empty? input_list) empty]\n    [(empty? (rest input_list)) (first input_list)]\n    [else (if (> (length (first input_list)) (length (max_length_list (rest input_list))))\n              (first input_list)\n              (max_length_list (rest input_list)))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else (if (> (length (car input_list)) (length (cadr input_list)))\n              (max_length_list (cons (car input_list) (cddr input_list)))\n              (max_length_list (cdr input_list)))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let* ([first_list (car input_list)]\n            [second_list (car (cdr input_list))]\n            [first_list_length (length first_list)]\n            [second_list_length (length second_list)])\n       (if (> first_list_length second_list_length)\n           (max_length_list (cons first_list (cdr (cdr input_list))))\n           (max_length_list (cons second_list (cdr (cdr input_list))))))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [(> (length (car input_list)) (length (car (cdr input_list))))\n     (max_length_list (cons (car input_list) (cdr (cdr input_list))))]\n    [else (max_length_list (cdr input_list))]))\n",
    "  (apply max (map length input_list)))\n",
    "  (cond\n    [(empty? input_list) empty]\n    [else\n     (let ([max_length (length (first input_list))])\n       (for/fold ([max_length_list (list (first input_list))])\n                 ([current_list (in-list (rest input_list))])\n         (if (> (length current_list) max_length)\n             (begin\n               (set! max_length (length current_list))\n               (list current_list))\n             max_length_list)))]))\n",
    "  (apply max (map length input_list)))\n",
    "  (cond\n    [(empty? input_list) empty]\n    [(empty? (rest input_list)) (first input_list)]\n    [else\n     (if (> (length (first input_list))\n            (length (max_length_list (rest input_list))))\n         (first input_list)\n         (max_length_list (rest input_list)))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else (if (> (length (car input_list)) (length (cadr input_list)))\n              (max_length_list (cons (car input_list) (cddr input_list)))\n              (max_length_list (cdr input_list)))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let ([max_length_list (max_length_list (cdr input_list))])\n       (if (&gt; (length (car input_list)) (length max_length_list))\n           (car input_list)\n           max_length_list))]))\n",
    "  (cond\n    [(empty? input_list) empty]\n    [else\n     (let ([max_list (max_length_list (rest input_list))])\n       (if (&gt; (length (first input_list)) (length max_list))\n           (first input_list)\n           max_list))]))\n</code>\nThe problem is that when I try to run this function, I get the following error:\n<code>&gt; (max_length_list '((1 2 3) (1 2 3 4) (1 2 3 4 5)))\n. . max_length_list: expects argument of type &lt;list&gt;; given ()\n</code>\nI don't understand why this is happening. I thought that the <code>else</code> clause would only be executed if the list was not empty.\n\n\nA:\n\nThe problem is that you're using <code>length</code> on the empty list. You need to check for that case:\n<code>(define (max_length_list input_list)\n  (cond\n    [(empty? input_list) empty]\n    [else\n     (let ([max_list (max_length_list (rest input_list))])\n       (if (or (empty? max_list)\n               (&gt; (length (first input_list)) (length max_list)))\n           (first input_list)\n           max_list))]))\n</code>\n",
    "  (apply max (map length input_list)))\n",
    "  (cond\n    [(empty? input_list) empty]\n    [else\n     (let ([max_list (max_length_list (rest input_list))])\n       (if (&gt; (length (first input_list)) (length max_list))\n           (first input_list)\n           max_list))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let* ([first_list (car input_list)]\n            [second_list (cadr input_list)]\n            [first_length (length first_list)]\n            [second_length (length second_list)])\n       (if (&gt; first_length second_length)\n           first_list\n           second_list))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [(> (length (car input_list)) (length (car (cdr input_list))))\n     (max_length_list (cons (car input_list) (cdr (cdr input_list))))]\n    [else (max_length_list (cdr input_list))]))\n",
    "  (cond\n    [(empty? input_list) empty]\n    [(empty? (rest input_list)) (first input_list)]\n    [else (if (> (length (first input_list)) (length (max_length_list (rest input_list))))\n             (first input_list)\n             (max_length_list (rest input_list)))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let* ([first (car input_list)]\n            [second (car (cdr input_list))]\n            [rest (cdr (cdr input_list))])\n       (if (> (length first) (length second))\n           (max_length_list (cons first rest))\n           (max_length_list (cons second rest))))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else (if (> (length (car input_list)) (length (cadr input_list)))\n              (max_length_list (cons (car input_list) (cddr input_list)))\n              (max_length_list (cdr input_list)))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let ([first (car input_list)]\n           [second (car (cdr input_list))])\n       (if (> (length first) (length second))\n           first\n           second))]))\n",
    "  (cond\n    [(empty? input_list) empty]\n    [(empty? (rest input_list)) (first input_list)]\n    [else\n     (if (> (length (first input_list)) (length (max_length_list (rest input_list))))\n         (first input_list)\n         (max_length_list (rest input_list)))]))\n"
  ]
}
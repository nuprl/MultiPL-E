{
  "name": "mbpp_730_consecutive_duplicates",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a function to remove consecutive duplicates of a given list.\n(define (consecutive_duplicates nums)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_730_consecutive_duplicates.py",
  "prompt_terminology": "verbatim",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate consecutive_duplicates))\n    (check-equal? (candidate (list 0 0 1 2 3 4 4 5 6 6 6 7 8 9 4 4)) (list 0 1 2 3 4 5 6 7 8 9 4))\n    (check-equal? (candidate (list 10 10 15 19 18 18 17 26 26 17 18 10)) (list 10 15 19 18 17 26 17 18 10))\n    (check-equal? (candidate (list \"a\" \"a\" \"b\" \"c\" \"d\" \"d\")) (list \"a\" \"b\" \"c\" \"d\"))\n    (check-equal? (candidate (list \"a\" \"a\" \"b\" \"c\" \"d\" \"d\" \"a\" \"a\")) (list \"a\" \"b\" \"c\" \"d\" \"a\"))\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (cond [(empty? nums) empty]\n        [(empty? (rest nums)) nums]\n        [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n        [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond [(empty? nums) empty]\n        [(empty? (rest nums)) nums]\n        [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n        [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [else\n     (cond\n       [(= (first nums) (second nums))\n        (consecutive_duplicates (rest nums))]\n       [else\n        (cons (first nums)\n              (consecutive_duplicates (rest nums)))])]))\n",
    "  (cond\n    [(null? nums) '()]\n    [(null? (cdr nums)) nums]\n    [(equal? (car nums) (cadr nums)) (consecutive_duplicates (cdr nums))]\n    [else (cons (car nums) (consecutive_duplicates (cdr nums)))]))\n",
    "  (cond [(empty? nums) empty]\n        [(empty? (rest nums)) nums]\n        [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n        [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [else\n     (if (equal? (first nums) (second nums))\n         (consecutive_duplicates (rest nums))\n         (cons (first nums) (consecutive_duplicates (rest nums))))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond [(empty? nums) empty]\n        [(empty? (rest nums)) nums]\n        [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n        [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond\n    [(null? nums) '()]\n    [(null? (cdr nums)) nums]\n    [(equal? (car nums) (cadr nums)) (consecutive_duplicates (cdr nums))]\n    [else (cons (car nums) (consecutive_duplicates (cdr nums)))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [else\n     (cond\n       [(equal? (first nums) (second nums))\n        (consecutive_duplicates (rest nums))]\n       [else\n        (cons (first nums) (consecutive_duplicates (rest nums)))])]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [else\n     (cond\n       [(= (first nums) (second nums))\n        (consecutive_duplicates (rest nums))]\n       [else\n        (cons (first nums)\n              (consecutive_duplicates (rest nums)))])]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [else\n     (if (= (first nums) (second nums))\n         (consecutive_duplicates (rest nums))\n         (cons (first nums) (consecutive_duplicates (rest nums))))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [else\n     (cond\n       [(= (first nums) (second nums))\n        (consecutive_duplicates (rest nums))]\n       [else\n        (cons (first nums) (consecutive_duplicates (rest nums)))])]))\n",
    "  (cond [(empty? nums) empty]\n        [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n        [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(equal? (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond [(empty? nums) empty]\n        [(empty? (rest nums)) nums]\n        [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n        [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [else\n     (cond\n       [(= (first nums) (second nums))\n        (consecutive_duplicates (rest nums))]\n       [else\n        (cons (first nums) (consecutive_duplicates (rest nums)))])]))\n",
    "  (if (null? nums)\n      '()\n      (if (null? (cdr nums))\n          nums\n          (if (= (car nums) (cadr nums))\n              (consecutive_duplicates (cdr nums))\n              (cons (car nums) (consecutive_duplicates (cdr nums)))))))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [else\n     (cons (first nums)\n           (cond\n             [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n             [else (consecutive_duplicates (rest nums))]))]))\n",
    "  (cond [(empty? nums) empty]\n        [(empty? (rest nums)) nums]\n        [(= (first nums) (first (rest nums))) (consecutive_duplicates (rest nums))]\n        [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond [(empty? nums) empty]\n        [(empty? (rest nums)) nums]\n        [else\n         (cons (first nums)\n               (consecutive_duplicates (cond [(equal? (first nums) (second nums))\n                                              (rest (rest nums))]\n                                             [else\n                                              (rest nums)]))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond [(empty? nums) empty]\n        [(empty? (rest nums)) nums]\n        [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n        [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond [(empty? nums) empty]\n        [(empty? (rest nums)) nums]\n        [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n        [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (if (null? nums)\n      '()\n      (if (null? (cdr nums))\n          nums\n          (if (equal? (car nums) (cadr nums))\n              (consecutive_duplicates (cdr nums))\n              (cons (car nums) (consecutive_duplicates (cdr nums)))))))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (if (null? nums)\n      '()\n      (if (null? (cdr nums))\n          (list (car nums))\n          (if (equal? (car nums) (cadr nums))\n              (consecutive_duplicates (cdr nums))\n              (cons (car nums) (consecutive_duplicates (cdr nums)))))))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (if (null? nums)\n      '()\n      (if (null? (cdr nums))\n          (list (car nums))\n          (if (equal? (car nums) (cadr nums))\n              (consecutive_duplicates (cdr nums))\n              (cons (car nums) (consecutive_duplicates (cdr nums)))))))\n",
    "  (if (null? nums)\n      '()\n      (if (null? (cdr nums))\n          nums\n          (if (= (car nums) (cadr nums))\n              (consecutive_duplicates (cdr nums))\n              (cons (car nums) (consecutive_duplicates (cdr nums)))))))\n",
    "  (if (null? nums)\n      '()\n      (cons (car nums)\n            (if (equal? (car nums) (cadr nums))\n                (consecutive_duplicates (cdr nums))\n                (consecutive_duplicates (cdr nums))))))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond [(empty? nums) empty]\n        [(empty? (rest nums)) nums]\n        [else (cons (first nums)\n                    (consecutive_duplicates (cond [(equal? (first nums) (second nums)) (rest nums)]\n                                                  [else (rest nums)])))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [else\n     (if (= (first nums) (second nums))\n         (consecutive_duplicates (rest nums))\n         (cons (first nums) (consecutive_duplicates (rest nums))))]))\n",
    "  (cond [(empty? nums) empty]\n        [(empty? (rest nums)) nums]\n        [else (cons (first nums)\n                    (consecutive_duplicates (remove (first nums) (rest nums))))]))\n",
    "  (if (null? nums)\n      '()\n      (if (null? (cdr nums))\n          nums\n          (if (= (car nums) (cadr nums))\n              (consecutive_duplicates (cdr nums))\n              (cons (car nums) (consecutive_duplicates (cdr nums)))))))\n",
    "  (cond\n    [(empty? nums) empty]\n    [else\n     (cons (first nums)\n           (cond\n             [(= (first nums) (second nums))\n              (consecutive_duplicates (rest (rest nums)))]\n             [else\n              (consecutive_duplicates (rest nums))]))]))\n",
    "  (cond [(empty? nums) empty]\n        [(empty? (rest nums)) nums]\n        [else\n         (cons (first nums)\n               (cond [(equal? (first nums) (second nums))\n                      (consecutive_duplicates (rest nums))]\n                     [else\n                      (consecutive_duplicates (rest nums))]))]))\n",
    "  (if (null? nums)\n      '()\n      (if (null? (cdr nums))\n          nums\n          (if (= (car nums) (cadr nums))\n              (consecutive_duplicates (cdr nums))\n              (cons (car nums) (consecutive_duplicates (cdr nums)))))))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (if (null? nums)\n      '()\n      (if (null? (cdr nums))\n          nums\n          (if (= (car nums) (cadr nums))\n              (consecutive_duplicates (cdr nums))\n              (cons (car nums) (consecutive_duplicates (cdr nums)))))))\n",
    "  (cond\n    [(null? nums) '()]\n    [(null? (cdr nums)) nums]\n    [(= (car nums) (cadr nums)) (consecutive_duplicates (cdr nums))]\n    [else (cons (car nums) (consecutive_duplicates (cdr nums)))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums))\n     (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond\n    [(null? nums) '()]\n    [(null? (cdr nums)) nums]\n    [(equal? (car nums) (cadr nums)) (consecutive_duplicates (cdr nums))]\n    [else (cons (car nums) (consecutive_duplicates (cdr nums)))]))\n",
    "  (if (null? nums)\n      '()\n      (cons (car nums)\n            (if (equal? (car nums) (cadr nums))\n                (consecutive_duplicates (cdr nums))\n                (consecutive_duplicates (cdr nums))))))\n",
    "  (cond [(empty? nums) empty]\n        [(empty? (rest nums)) nums]\n        [(equal? (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n        [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (if (null? nums)\n      '()\n      (if (null? (cdr nums))\n          nums\n          (if (= (car nums) (cadr nums))\n              (consecutive_duplicates (cdr nums))\n              (cons (car nums) (consecutive_duplicates (cdr nums)))))))\n",
    "  (cond [(empty? nums) empty]\n        [(empty? (rest nums)) nums]\n        [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n        [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond [(empty? nums) empty]\n        [(empty? (rest nums)) nums]\n        [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n        [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond [(empty? nums) empty]\n        [else (cons (first nums)\n                    (if (equal? (first nums) (second nums))\n                        (consecutive_duplicates (rest (rest nums)))\n                        (consecutive_duplicates (rest nums))))]))\n",
    "  (cond [(empty? nums) empty]\n        [(empty? (rest nums)) nums]\n        [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n        [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [else (cons (first nums)\n                (consecutive_duplicates (remove (first nums) (rest nums))))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (if (null? nums)\n      '()\n      (if (null? (cdr nums))\n          nums\n          (if (= (car nums) (cadr nums))\n              (consecutive_duplicates (cdr nums))\n              (cons (car nums) (consecutive_duplicates (cdr nums)))))))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [else\n     (cons (first nums)\n           (cond\n             [(equal? (first nums) (second nums))\n              (consecutive_duplicates (rest nums))]\n             [else\n              (consecutive_duplicates (rest nums))]))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [else (cons (first nums)\n                (consecutive_duplicates (remove (first nums) (rest nums))))]))\n",
    "  (cond [(empty? nums) empty]\n        [(empty? (rest nums)) nums]\n        [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n        [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond [(empty? nums) empty]\n        [(empty? (rest nums)) nums]\n        [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n        [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (if (null? nums)\n      '()\n      (cons (car nums)\n            (if (equal? (car nums) (cadr nums))\n                (consecutive_duplicates (cdr nums))\n                (consecutive_duplicates (cdr nums))))))\n",
    "  (cond\n    [(empty? nums) empty]\n    [else (cons (first nums)\n                (consecutive_duplicates (remove (first nums) (rest nums))))]))\n",
    "  (if (null? nums)\n      '()\n      (if (null? (cdr nums))\n          nums\n          (if (= (car nums) (cadr nums))\n              (consecutive_duplicates (cdr nums))\n              (cons (car nums) (consecutive_duplicates (cdr nums)))))))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (if (null? nums)\n      '()\n      (if (null? (cdr nums))\n          nums\n          (if (= (car nums) (cadr nums))\n              (consecutive_duplicates (cdr nums))\n              (cons (car nums) (consecutive_duplicates (cdr nums)))))))\n",
    "  (cond [(empty? nums) empty]\n        [(empty? (rest nums)) nums]\n        [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n        [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond [(empty? nums) empty]\n        [(empty? (rest nums)) nums]\n        [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n        [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond [(empty? nums) empty]\n        [(empty? (rest nums)) nums]\n        [else (cons (first nums) (consecutive_duplicates (remove (first nums) (rest nums))))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [else\n     (cons (first nums)\n           (cond\n             [(equal? (first nums) (second nums))\n              (consecutive_duplicates (rest (rest nums)))]\n             [else\n              (consecutive_duplicates (rest nums))]))]))\n",
    "  (cond [(empty? nums) empty]\n        [(empty? (rest nums)) nums]\n        [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n        [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [else\n     (cons (first nums)\n           (cond\n             [(equal? (first nums) (second nums))\n              (consecutive_duplicates (rest nums))]\n             [else\n              (consecutive_duplicates (rest nums))]))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond [(empty? nums) empty]\n        [(empty? (rest nums)) nums]\n        [else (cons (first nums)\n                    (consecutive_duplicates (remove (first nums) (rest nums))))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [else\n     (cons (first nums)\n           (consecutive_duplicates (cond\n                                     [(equal? (first nums) (second nums)) (rest nums)]\n                                     [else (rest nums)])))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(equal? (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (if (null? nums)\n      '()\n      (if (null? (cdr nums))\n          nums\n          (if (= (car nums) (cadr nums))\n              (consecutive_duplicates (cdr nums))\n              (cons (car nums) (consecutive_duplicates (cdr nums)))))))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [else\n     (cons (first nums)\n           (cond\n             [(equal? (first nums) (second nums))\n              (consecutive_duplicates (rest nums))]\n             [else\n              (consecutive_duplicates (rest nums))]))]))\n",
    "  (if (null? nums)\n      '()\n      (if (null? (cdr nums))\n          (list (car nums))\n          (if (equal? (car nums) (cadr nums))\n              (consecutive_duplicates (cdr nums))\n              (cons (car nums) (consecutive_duplicates (cdr nums)))))))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (if (null? nums)\n      '()\n      (if (null? (cdr nums))\n          nums\n          (if (= (car nums) (cadr nums))\n              (consecutive_duplicates (cdr nums))\n              (cons (car nums) (consecutive_duplicates (cdr nums)))))))\n",
    "  (if (null? nums)\n      '()\n      (if (null? (cdr nums))\n          nums\n          (if (= (car nums) (cadr nums))\n              (cons (car nums) (consecutive_duplicates (cddr nums)))\n              (cons (car nums) (consecutive_duplicates (cdr nums)))))))\n",
    "  (cond [(empty? nums) empty]\n        [(empty? (rest nums)) nums]\n        [else (cons (first nums)\n                    (consecutive_duplicates (remove (first nums) (rest nums))))]))\n",
    "  (if (null? nums)\n      nums\n      (if (null? (cdr nums))\n          nums\n          (if (= (car nums) (cadr nums))\n              (consecutive_duplicates (cdr nums))\n              (cons (car nums) (consecutive_duplicates (cdr nums)))))))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (if (null? nums)\n      '()\n      (if (null? (cdr nums))\n          nums\n          (if (= (car nums) (cadr nums))\n              (consecutive_duplicates (cdr nums))\n              (cons (car nums) (consecutive_duplicates (cdr nums)))))))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (if (null? nums)\n      '()\n      (let ([first (car nums)]\n            [rest (cdr nums)])\n        (if (null? rest)\n            (list first)\n            (if (= first (car rest))\n                (consecutive_duplicates rest)\n                (cons first (consecutive_duplicates rest)))))))\n",
    "  (cond\n    [(null? nums) '()]\n    [(null? (cdr nums)) nums]\n    [(equal? (car nums) (cadr nums)) (consecutive_duplicates (cdr nums))]\n    [else (cons (car nums) (consecutive_duplicates (cdr nums)))]))\n",
    "  (cond [(empty? nums) empty]\n        [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n        [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (if (null? nums)\n      '()\n      (if (null? (cdr nums))\n          nums\n          (if (= (car nums) (cadr nums))\n              (consecutive_duplicates (cdr nums))\n              (cons (car nums) (consecutive_duplicates (cdr nums)))))))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (if (null? nums)\n      '()\n      (if (null? (cdr nums))\n          nums\n          (if (= (car nums) (cadr nums))\n              (consecutive_duplicates (cdr nums))\n              (cons (car nums) (consecutive_duplicates (cdr nums)))))))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond [(empty? nums) empty]\n        [else (cons (first nums)\n                    (consecutive_duplicates (remove (first nums) (rest nums))))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond\n    [(null? nums) '()]\n    [(null? (cdr nums)) nums]\n    [(equal? (car nums) (cadr nums)) (consecutive_duplicates (cdr nums))]\n    [else (cons (car nums) (consecutive_duplicates (cdr nums)))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [else\n     (cons (first nums)\n           (cond\n             [(equal? (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n             [else (consecutive_duplicates (rest nums))]))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(equal? (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (if (null? nums)\n      '()\n      (if (null? (cdr nums))\n          (list (car nums))\n          (if (= (car nums) (cadr nums))\n              (consecutive_duplicates (cdr nums))\n              (cons (car nums) (consecutive_duplicates (cdr nums)))))))\n",
    "  (cond [(empty? nums) empty]\n        [(empty? (rest nums)) nums]\n        [(= (first nums) (first (rest nums)))\n         (consecutive_duplicates (rest nums))]\n        [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (define (consecutive_duplicates_iter nums result)\n    (cond\n      [(empty? nums) result]\n      [(empty? result) (consecutive_duplicates_iter (rest nums) (list (first nums)))]\n      [(equal? (first result) (first nums)) (consecutive_duplicates_iter (rest nums) result)]\n      [else (consecutive_duplicates_iter (rest nums) (append result (list (first nums))))]))\n  (consecutive_duplicates_iter nums '()))\n",
    "  (cond [(empty? nums) empty]\n        [(empty? (rest nums)) nums]\n        [(equal? (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n        [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond [(empty? nums) empty]\n        [(empty? (rest nums)) nums]\n        [else (cons (first nums)\n                    (consecutive_duplicates (remove (first nums) (rest nums))))]))\n",
    "  (cond [(empty? nums) empty]\n        [(empty? (rest nums)) nums]\n        [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n        [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (if (null? nums)\n      '()\n      (if (null? (cdr nums))\n          nums\n          (if (= (car nums) (cadr nums))\n              (consecutive_duplicates (cdr nums))\n              (cons (car nums) (consecutive_duplicates (cdr nums)))))))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums))\n     (consecutive_duplicates (rest nums))]\n    [else\n     (cons (first nums)\n           (consecutive_duplicates (rest nums)))]))\n",
    "  (cond [(empty? nums) empty]\n        [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n        [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [else\n     (cond\n       [(= (first nums) (second nums))\n        (consecutive_duplicates (rest nums))]\n       [else\n        (cons (first nums) (consecutive_duplicates (rest nums)))])]))\n",
    "  (let loop ([nums nums]\n             [acc '()])\n    (cond [(empty? nums) (reverse acc)]\n          [(equal? (first nums) (second nums)) (loop (rest nums) acc)]\n          [else (loop (rest nums) (cons (first nums) acc))])))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (let loop ([nums nums]\n             [acc '()])\n    (if (null? nums)\n        (reverse acc)\n        (if (equal? (car nums) (cadr nums))\n            (loop (cdr nums) acc)\n            (loop (cdr nums) (cons (car nums) acc))))))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond [(empty? nums) empty]\n        [(empty? (rest nums)) nums]\n        [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n        [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond [(empty? nums) empty]\n        [(empty? (rest nums)) nums]\n        [else (cons (first nums)\n                    (consecutive_duplicates (remove (first nums) (rest nums))))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond [(empty? nums) empty]\n        [(empty? (rest nums)) nums]\n        [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n        [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond\n    [(null? nums) '()]\n    [(null? (cdr nums)) nums]\n    [(equal? (car nums) (cadr nums)) (consecutive_duplicates (cdr nums))]\n    [else (cons (car nums) (consecutive_duplicates (cdr nums)))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond\n    [(null? nums) '()]\n    [(null? (cdr nums)) nums]\n    [(= (car nums) (cadr nums)) (consecutive_duplicates (cdr nums))]\n    [else (cons (car nums) (consecutive_duplicates (cdr nums)))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond\n    [(null? nums) '()]\n    [(null? (cdr nums)) nums]\n    [(equal? (car nums) (cadr nums)) (consecutive_duplicates (cdr nums))]\n    [else (cons (car nums) (consecutive_duplicates (cdr nums)))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [else\n     (cons (first nums)\n           (cond\n             [(= (first nums) (second nums))\n              (consecutive_duplicates (rest nums))]\n             [else\n              (consecutive_duplicates (rest nums))]))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums))\n     (consecutive_duplicates (rest nums))]\n    [else\n     (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [else\n     (cons (first nums)\n           (cond\n             [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n             [else (consecutive_duplicates (rest nums))]))]))\n",
    "  (cond [(empty? nums) empty]\n        [(empty? (rest nums)) nums]\n        [(= (first nums) (first (rest nums)))\n         (consecutive_duplicates (rest nums))]\n        [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [else\n     (cond\n       [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n       [else (cons (first nums) (consecutive_duplicates (rest nums)))]\n       )]\n    ))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond [(empty? nums) empty]\n        [(empty? (rest nums)) nums]\n        [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n        [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (if (null? nums)\n      '()\n      (if (null? (cdr nums))\n          nums\n          (if (equal? (car nums) (cadr nums))\n              (consecutive_duplicates (cdr nums))\n              (cons (car nums) (consecutive_duplicates (cdr nums)))))))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums))\n     (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (if (null? nums)\n      '()\n      (if (null? (cdr nums))\n          nums\n          (if (= (car nums) (cadr nums))\n              (consecutive_duplicates (cdr nums))\n              (cons (car nums) (consecutive_duplicates (cdr nums)))))))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums))\n     (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums))\n     (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond [(empty? nums) empty]\n        [(empty? (rest nums)) nums]\n        [else (cons (first nums)\n                    (consecutive_duplicates (remove (first nums) (rest nums))))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [else\n     (cond\n       [(= (first nums) (second nums))\n        (consecutive_duplicates (rest nums))]\n       [else\n        (cons (first nums)\n              (consecutive_duplicates (rest nums)))])]))\n",
    "  (if (null? nums)\n      '()\n      (if (null? (cdr nums))\n          (list (car nums))\n          (if (= (car nums) (cadr nums))\n              (consecutive_duplicates (cdr nums))\n              (cons (car nums) (consecutive_duplicates (cdr nums)))))))\n",
    "  (let loop ([nums nums] [result '()])\n    (cond [(empty? nums) (reverse result)]\n          [(= (first nums) (second nums)) (loop (rest nums) result)]\n          [else (loop (rest nums) (cons (first nums) result))])))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (if (null? nums)\n      '()\n      (if (null? (cdr nums))\n          nums\n          (if (= (car nums) (cadr nums))\n              (consecutive_duplicates (cdr nums))\n              (cons (car nums) (consecutive_duplicates (cdr nums)))))))\n",
    "  (cond [(empty? nums) empty]\n        [(empty? (rest nums)) nums]\n        [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n        [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [else\n     (cons (first nums)\n           (consecutive_duplicates (cond\n                                     [(= (first nums) (second nums)) (rest (rest nums))]\n                                     [else (rest nums)])))]))\n",
    "  (cond [(empty? nums) empty]\n        [(empty? (rest nums)) nums]\n        [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n        [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond [(empty? nums) empty]\n        [(empty? (rest nums)) nums]\n        [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n        [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond\n    [(null? nums) '()]\n    [(null? (cdr nums)) nums]\n    [else\n     (if (= (car nums) (cadr nums))\n         (consecutive_duplicates (cdr nums))\n         (cons (car nums) (consecutive_duplicates (cdr nums))))]))\n",
    "  (if (null? nums)\n      '()\n      (if (null? (cdr nums))\n          nums\n          (if (= (car nums) (cadr nums))\n              (consecutive_duplicates (cdr nums))\n              (cons (car nums) (consecutive_duplicates (cdr nums)))))))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [else\n     (cond\n       [(= (first nums) (second nums))\n        (consecutive_duplicates (rest nums))]\n       [else\n        (cons (first nums) (consecutive_duplicates (rest nums)))])]))\n",
    "  (if (null? nums)\n      '()\n      (if (null? (cdr nums))\n          (list (car nums))\n          (if (= (car nums) (cadr nums))\n              (consecutive_duplicates (cdr nums))\n              (cons (car nums) (consecutive_duplicates (cdr nums)))))))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums))\n     (cons (first nums) (consecutive_duplicates (rest (rest nums))))]\n    [else\n     (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [else\n     (if (= (first nums) (second nums))\n         (consecutive_duplicates (rest nums))\n         (cons (first nums) (consecutive_duplicates (rest nums))))]))\n",
    "  (cond\n    [(empty? nums) '()]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [else (cons (first nums)\n                (consecutive_duplicates (remove (first nums) (rest nums))))]))\n",
    "  (if (null? nums)\n      '()\n      (if (null? (cdr nums))\n          nums\n          (if (equal? (car nums) (cadr nums))\n              (consecutive_duplicates (cdr nums))\n              (cons (car nums) (consecutive_duplicates (cdr nums)))))))\n",
    "  (cond [(empty? nums) empty]\n        [(empty? (rest nums)) nums]\n        [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n        [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond [(empty? nums) empty]\n        [(empty? (rest nums)) nums]\n        [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n        [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [else (cons (first nums)\n                (consecutive_duplicates (remove (first nums) (rest nums))))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums))\n     (consecutive_duplicates (rest nums))]\n    [else (cons (first nums)\n                (consecutive_duplicates (rest nums)))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond\n    [(null? nums) '()]\n    [(null? (cdr nums)) nums]\n    [(equal? (car nums) (cadr nums)) (consecutive_duplicates (cdr nums))]\n    [else (cons (car nums) (consecutive_duplicates (cdr nums)))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums))\n     (consecutive_duplicates (rest nums))]\n    [else\n     (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (if (null? nums)\n      '()\n      (if (null? (cdr nums))\n          nums\n          (if (= (car nums) (cadr nums))\n              (consecutive_duplicates (cdr nums))\n              (cons (car nums) (consecutive_duplicates (cdr nums)))))))\n",
    "  (cond [(empty? nums) empty]\n        [(empty? (rest nums)) nums]\n        [(= (first nums) (first (rest nums))) (consecutive_duplicates (rest nums))]\n        [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond [(empty? nums) empty]\n        [(empty? (rest nums)) nums]\n        [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n        [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums))\n     (consecutive_duplicates (rest nums))]\n    [else\n     (cons (first nums)\n           (consecutive_duplicates (rest nums)))]))\n",
    "  (if (null? nums)\n      '()\n      (cons (car nums)\n            (if (equal? (car nums) (cadr nums))\n                (consecutive_duplicates (cdr nums))\n                (consecutive_duplicates (cdr nums))))))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond [(empty? nums) empty]\n        [(= (first nums) (second nums))\n         (consecutive_duplicates (rest (rest nums)))]\n        [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond [(empty? nums) empty]\n        [(empty? (rest nums)) nums]\n        [else\n         (cons (first nums)\n               (consecutive_duplicates (cond [(equal? (first nums) (second nums))\n                                              (rest nums)]\n                                             [else\n                                              (rest nums)])))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [else\n     (cond\n       [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n       [else (cons (first nums) (consecutive_duplicates (rest nums)))]\n       )]\n    ))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond\n    [(null? nums) '()]\n    [(null? (cdr nums)) nums]\n    [(equal? (car nums) (cadr nums)) (consecutive_duplicates (cdr nums))]\n    [else (cons (car nums) (consecutive_duplicates (cdr nums)))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond\n    [(empty? nums) empty]\n    [(empty? (rest nums)) nums]\n    [(= (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n    [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n",
    "  (cond [(empty? nums) empty]\n        [(empty? (rest nums)) nums]\n        [(equal? (first nums) (second nums)) (consecutive_duplicates (rest nums))]\n        [else (cons (first nums) (consecutive_duplicates (rest nums)))]))\n"
  ]
}
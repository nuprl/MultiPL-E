{
  "name": "mbpp_14_find_Volume",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a python function to find the volume of a triangular prism.\n(define (find_Volume l b h)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_14_find_Volume.py",
  "prompt_terminology": "verbatim",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate find_Volume))\n    (check-equal? (candidate 10 8 6) 240)\n    (check-equal? (candidate 3 2 2) 6)\n    (check-equal? (candidate 1 2 1) 1)\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))\n",
    "  (* l b h))",
    "  (* l b h))\n",
    "  (* l b h))\n"
  ]
}
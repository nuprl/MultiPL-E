{
  "name": "mbpp_127_multiply_int",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a function to multiply two integers.\n(define (multiply_int x y)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_127_multiply_int.py",
  "prompt_terminology": "verbatim",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate multiply_int))\n    (check-equal? (candidate 10 20) 200)\n    (check-equal? (candidate 5 10) 50)\n    (check-equal? (candidate 4 8) 32)\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (if (= y 0)\n      0\n      (+ x (multiply_int x (- y 1)))))\n",
    "  (if (= y 0)\n      0\n      (+ x (multiply_int x (- y 1)))))\n",
    "  (if (= y 0)\n      0\n      (+ x (multiply_int x (- y 1)))))\n",
    "  (if (= y 0)\n      0\n      (+ x (multiply_int x (- y 1)))))\n",
    "  (if (= y 0)\n      0\n      (+ x (multiply_int x (- y 1)))))\n",
    "  (if (= y 0)\n      0\n      (+ x (multiply_int x (- y 1)))))\n",
    "  (if (= y 0)\n      0\n      (+ x (multiply_int x (- y 1)))))\n",
    "  (if (= y 0)\n      0\n      (+ x (multiply_int x (- y 1)))))\n",
    "  (if (= y 0)\n      0\n      (+ x (multiply_int x (- y 1)))))\n",
    "  (if (= y 0)\n      0\n      (+ x (multiply_int x (- y 1)))))\n",
    "  (if (= y 0)\n      0\n      (+ x (multiply_int x (- y 1)))))\n",
    "  (if (= y 0)\n      0\n      (+ x (multiply_int x (- y 1)))))\n",
    "  (if (= y 0)\n      0\n      (+ x (multiply_int x (- y 1)))))\n",
    "  (if (= y 0)\n      0\n      (+ x (multiply_int x (- y 1)))))\n",
    "  (if (= y 0)\n      0\n      (+ x (multiply_int x (- y 1)))))\n",
    "  (if (= y 0)\n      0\n      (+ x (multiply_int x (- y 1)))))\n",
    "  (if (= y 0)\n      0\n      (+ x (multiply_int x (- y 1)))))\n",
    "  (if (= y 0)\n      0\n      (+ x (multiply_int x (- y 1)))))\n",
    "  (if (= y 0)\n      0\n      (+ x (multiply_int x (- y 1)))))\n",
    "  (if (= y 0)\n      0\n      (+ x (multiply_int x (- y 1)))))\n"
  ]
}
{
  "name": "mbpp_569_sort_sublists",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a function to sort each sublist of strings in a given list of lists.\n(define (sort_sublists list1)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_569_sort_sublists.py",
  "prompt_terminology": "verbatim",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sort_sublists))\n    (check-equal? (candidate (list (list \"green\" \"orange\") (list \"black\" \"white\") (list \"white\" \"black\" \"orange\"))) (list (list \"green\" \"orange\") (list \"black\" \"white\") (list \"black\" \"orange\" \"white\")))\n    (check-equal? (candidate (list (list \"green\" \"orange\") (list \"black\") (list \"green\" \"orange\") (list \"white\"))) (list (list \"green\" \"orange\") (list \"black\") (list \"green\" \"orange\") (list \"white\")))\n    (check-equal? (candidate (list (list \"a\" \"b\") (list \"d\" \"c\") (list \"g\" \"h\") (list \"f\" \"e\"))) (list (list \"a\" \"b\") (list \"c\" \"d\") (list \"g\" \"h\") (list \"e\" \"f\")))\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (map (lambda (x) (sort x string<?)) list1))\n",
    "  (map (lambda (x) (sort x string<?)) list1))\n",
    "  (map (lambda (x) (sort x string<?)) list1))\n",
    "  (map (lambda (x) (sort x string<?)) list1))\n",
    "  (map (lambda (sublist) (sort sublist string<?)) list1))\n",
    "  (map (lambda (lst) (sort lst string<?)) list1))\n",
    "  (map (lambda (x) (sort x string<?)) list1))\n",
    "  (map (lambda (x) (sort x string<?)) list1))\n",
    "  (map (lambda (x) (sort x string<?)) list1))\n",
    "  (map (lambda (sublist) (sort sublist string<?)) list1))\n",
    "  (map (lambda (sublist) (sort sublist string<?)) list1))\n",
    "  (map (lambda (x) (sort x string<?)) list1))\n",
    "  (map (lambda (x) (sort x string<?)) list1))\n",
    "  (map (lambda (x) (sort x string<?)) list1))\n",
    "  (map (lambda (x) (sort x string<?)) list1))\n",
    "  (map (lambda (x) (sort x string<?)) list1))\n",
    "  (map (lambda (x) (sort x string<?)) list1))\n",
    "  (map (lambda (x) (sort x string<?)) list1))\n",
    "  (map (lambda (x) (sort x string<?)) list1))\n",
    "  (map (lambda (x) (sort x string<?)) list1))\n"
  ]
}
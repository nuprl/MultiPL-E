{
  "name": "mbpp_465_drop_empty",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a function to drop empty items from a given dictionary.\n(define (drop_empty dict1)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_465_drop_empty.py",
  "prompt_terminology": "verbatim",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate drop_empty))\n    (check-equal? (candidate #hash((\"c1\" .  \"Red\") (\"c2\" .  \"Green\") (\"c3\" .  #f))) #hash((\"c1\" .  \"Red\") (\"c2\" .  \"Green\")))\n    (check-equal? (candidate #hash((\"c1\" .  \"Red\") (\"c2\" .  #f) (\"c3\" .  #f))) #hash((\"c1\" .  \"Red\")))\n    (check-equal? (candidate #hash((\"c1\" .  #f) (\"c2\" .  \"Green\") (\"c3\" .  #f))) #hash((\"c2\" .  \"Green\")))\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (filter (lambda (k v) (not (equal? v \"\"))) dict1))\n",
    "  (filter (lambda (k v) (not (empty? v))) dict1))\n",
    "  (filter (lambda (k v) (not (equal? v \"\"))) dict1))\n",
    "  (filter (lambda (k v) (not (equal? v \"\"))) dict1))\n",
    "  (filter (lambda (k v) (not (equal? v \"\"))) dict1))\n",
    "  (filter (lambda (k v) (not (equal? v \"\"))) dict1))\n",
    "  (filter (lambda (k v)\n            (not (equal? v '())))\n          dict1))\n",
    "  (filter (lambda (k v) (not (empty? v))) dict1))\n",
    "  (filter (lambda (k v) (not (empty? v))) dict1))\n",
    "  (filter (lambda (k v) (not (equal? v '()))) dict1))\n",
    "  (filter (lambda (x) (not (empty? (cdr x)))) dict1))\n",
    "  (filter (lambda (x) (not (equal? (cdr x) \"\"))) dict1))\n",
    "  (filter (lambda (k v) (not (empty? v))) dict1))\n",
    "  (filter (lambda (k v) (not (empty? v))) dict1))\n",
    "  (filter (lambda (k v) (not (empty? v))) dict1))\n",
    "  (filter (lambda (k v) (not (equal? v \"\"))) dict1))\n",
    "  (filter (lambda (x) (not (equal? (cdr x) \"\"))) dict1))\n",
    "  (filter (lambda (k v) (not (empty? v))) dict1))\n",
    "  (filter (lambda (k v) (not (equal? v \"\"))) dict1))\n",
    "  (filter (lambda (k v) (not (equal? v \"\"))) dict1))\n"
  ]
}
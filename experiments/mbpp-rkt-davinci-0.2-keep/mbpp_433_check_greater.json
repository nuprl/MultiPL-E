{
  "name": "mbpp_433_check_greater",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a function to check whether the entered number is greater than the elements of the given array.\n(define (check_greater arr number)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_433_check_greater.py",
  "prompt_terminology": "verbatim",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate check_greater))\n    (check-equal? (candidate (list 1 2 3 4 5) 4) #f)\n    (check-equal? (candidate (list 2 3 4 5 6) 8) #t)\n    (check-equal? (candidate (list 9 7 4 8 6 1) 11) #t)\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (if (empty? arr)\n      #t\n      (if (> (first arr) number)\n          #f\n          (check_greater (rest arr) number))))\n",
    "  (cond\n    [(null? arr) #f]\n    [(> number (car arr)) #t]\n    [else (check_greater (cdr arr) number)]))\n",
    "  (cond\n    [(empty? arr) #t]\n    [(> number (first arr)) (check_greater (rest arr) number)]\n    [else #f]))\n",
    "  (cond\n    [(empty? arr) #f]\n    [(> number (first arr)) (check_greater (rest arr) number)]\n    [else #t]))\n",
    "  (if (empty? arr)\n      #t\n      (if (> (first arr) number)\n          #f\n          (check_greater (rest arr) number))))\n",
    "  (if (null? arr)\n      #t\n      (if (> number (car arr))\n          (check_greater (cdr arr) number)\n          #f)))\n",
    "  (if (null? arr)\n      #t\n      (if (&gt; (car arr) number)\n          #f\n          (check_greater (cdr arr) number))))\n</code>\n",
    "  (if (null? arr)\n      #t\n      (if (&gt; (car arr) number)\n          #f\n          (check_greater (cdr arr) number))))\n",
    "  (cond\n    [(empty? arr) #f]\n    [(> (first arr) number) #t]\n    [else (check_greater (rest arr) number)]))\n",
    "  (cond\n    [(empty? arr) #f]\n    [(> (first arr) number) #t]\n    [else (check_greater (rest arr) number)]))\n",
    "  (if (null? arr)\n      #t\n      (if (&gt; (car arr) number)\n          #f\n          (check_greater (cdr arr) number))))\n",
    "  (cond\n    [(empty? arr) #f]\n    [(> (first arr) number) #t]\n    [else (check_greater (rest arr) number)]))\n",
    "  (if (null? arr)\n      #t\n      (if (&gt; number (car arr))\n          (check_greater (cdr arr) number)\n          #f)))\n",
    "  (cond\n    [(empty? arr) #f]\n    [(> number (first arr)) (check_greater (rest arr) number)]\n    [else #f]))\n",
    "  (if (null? arr)\n      #t\n      (if (&gt; (car arr) number)\n          #f\n          (check_greater (cdr arr) number))))\n",
    "  (if (null? arr)\n      #t\n      (if (> (car arr) number)\n          #f\n          (check_greater (cdr arr) number))))\n",
    "  (cond\n    [(empty? arr) #f]\n    [(> (first arr) number) #t]\n    [else (check_greater (rest arr) number)]))\n",
    "  (if (null? arr)\n      #t\n      (if (&gt; number (car arr))\n          (check_greater (cdr arr) number)\n          #f)))\n",
    "  (if (null? arr)\n      #t\n      (if (&gt; number (car arr))\n          (check_greater (cdr arr) number)\n          #f)))\n",
    "  (if (null? arr)\n      #t\n      (if (&gt; (car arr) number)\n          #f\n          (check_greater (cdr arr) number))))\n"
  ]
}
{
  "name": "mbpp_797_sum_in_range",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a python function to find the sum of all odd natural numbers within the range l and r.\n(define (sum_in_range l r)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_797_sum_in_range.py",
  "prompt_terminology": "verbatim",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_in_range))\n    (check-equal? (candidate 2 5) 8)\n    (check-equal? (candidate 5 7) 12)\n    (check-equal? (candidate 7 13) 40)\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (if (&lt; l r)\n      (+ l (sum_in_range (+ l 1) r))\n      l))\n",
    "  (if (&gt; l r)\n      0\n      (if (odd? l)\n          (+ l (sum_in_range (+ l 1) r))\n          (sum_in_range (+ l 1) r))))\n",
    "  (define (sum_in_range_iter l r sum)\n    (if (&lt; l r)\n        (sum_in_range_iter (+ l 1) r (+ sum (if (odd? l) l 0)))\n        sum))\n  (sum_in_range_iter l r 0))\n",
    "  (if (= l r)\n      (if (odd? l) l 0)\n      (if (odd? l) (+ l (sum_in_range (+ l 1) r)) (sum_in_range (+ l 1) r))))\n",
    "  (if (&lt; l r)\n      (+ (if (odd? l) l 0) (sum_in_range (+ l 1) r))\n      (if (odd? l) l 0)))\n",
    "  (if (= l r)\n      (if (odd? l) l 0)\n      (+ (if (odd? l) l 0) (sum_in_range (+ l 1) r))))\n",
    "  (if (= l r)\n      0\n      (if (odd? l)\n          (+ l (sum_in_range (+ l 1) r))\n          (sum_in_range (+ l 1) r))))\n",
    "  (if (&lt; l r)\n      (+ l (sum_in_range (+ l 1) r))\n      l))\n",
    "  (cond\n    [(= l r) (if (odd? l) l 0)]\n    [(> l r) 0]\n    [else (+ (if (odd? l) l 0) (sum_in_range (+ l 1) r))]))\n",
    "  (if (&gt; l r)\n      0\n      (if (odd? l)\n          (+ l (sum_in_range (+ l 1) r))\n          (sum_in_range (+ l 1) r))))\n",
    "  (if (odd? l)\n      (+ l (sum_in_range (+ l 2) r))\n      (if (odd? r)\n          (+ r (sum_in_range l (- r 2)))\n          0)))\n",
    "  (if (= l r)\n      (if (odd? l)\n          l\n          0)\n      (if (odd? l)\n          (+ l (sum_in_range (+ l 1) r))\n          (sum_in_range (+ l 1) r))))\n",
    "  (cond [(= l r) l]\n        [(odd? l) (+ l (sum_in_range (+ l 1) r))]\n        [else (sum_in_range (+ l 1) r)]))\n",
    "  (if (odd? l)\n      (+ l (sum_in_range (+ l 2) r))\n      (if (odd? r)\n          (+ r (sum_in_range l (- r 2)))\n          0)))\n",
    "  (if (= l r)\n      (if (odd? l) l 0)\n      (+ (if (odd? l) l 0) (sum_in_range (+ l 1) r))))\n",
    "  (cond\n    [(< l r) (+ l (sum_in_range (+ l 1) r))]\n    [(= l r) l]\n    [else 0]))\n",
    "  (if (= l r)\n      (if (odd? l)\n          l\n          0)\n      (if (odd? l)\n          (+ l (sum_in_range (+ l 1) r))\n          (sum_in_range (+ l 1) r))))\n",
    "  (if (&gt; l r)\n      0\n      (+ (if (odd? l) l 0)\n         (sum_in_range (+ l 1) r))))\n",
    "  (cond\n    [(> l r) 0]\n    [(odd? l) (+ l (sum_in_range (+ l 1) r))]\n    [else (sum_in_range (+ l 1) r)]))\n",
    "  (if (> l r)\n      0\n      (+ (if (odd? l) l 0)\n         (sum_in_range (+ l 1) r))))\n"
  ]
}
{
  "name": "mbpp_3_is_not_prime",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a python function to identify non-prime numbers.\n(define (is_not_prime n)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_3_is_not_prime.py",
  "prompt_terminology": "verbatim",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate is_not_prime))\n    (check-equal? (candidate 2) #f)\n    (check-equal? (candidate 10) #t)\n    (check-equal? (candidate 35) #t)\n    (check-equal? (candidate 37) #f)\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (cond\n    [(= n 1) #t]\n    [(= n 2) #f]\n    [(even? n) #t]\n    [else\n     (for/or ([i (in-range 3 (quotient n 2))])\n       (= (remainder n i) 0))]))\n",
    "  (define (is_prime? n)\n    (define (iter i)\n      (cond ((= i 1) #t)\n            ((= (modulo n i) 0) #f)\n            (else (iter (- i 1)))))\n    (iter (- n 1)))\n  (not (is_prime? n)))\n",
    "  (define (is_prime n)\n    (define (iter i)\n      (cond\n        [(= i n) #t]\n        [(= (modulo n i) 0) #f]\n        [else (iter (+ i 1))]))\n    (iter 2))\n  (not (is_prime n)))\n",
    "  (cond\n    [(= n 1) #t]\n    [(= n 2) #f]\n    [(= n 3) #f]\n    [(= n 5) #f]\n    [(= n 7) #f]\n    [(= n 11) #f]\n    [(= n 13) #f]\n    [(= n 17) #f]\n    [(= n 19) #f]\n    [(= n 23) #f]\n    [(= n 29) #f]\n    [(= n 31) #f]\n    [(= n 37) #f]\n    [(= n 41) #f]\n    [(= n 43) #f]\n    [(= n 47) #f]\n    [(= n 53) #f]\n    [(= n 59) #f]\n    [(= n 61) #f]\n    [(= n 67) #f]\n    [(= n 71) #f]\n    [(= n 73) #f]\n    [(= n 79) #f]\n    [(= n 83) #f]\n    [(= n 89) #f]\n    [(= n 97) #f]\n    [else #t]))\n",
    "  (cond\n    [(= n 1) #t]\n    [(= n 2) #f]\n    [(= n 3) #f]\n    [(= n 4) #t]\n    [(= n 5) #f]\n    [(= n 6) #t]\n    [(= n 7) #f]\n    [(= n 8) #t]\n    [(= n 9) #t]\n    [(= n 10) #t]\n    [(= n 11) #f]\n    [(= n 12) #t]\n    [(= n 13) #f]\n    [(= n 14) #t]\n    [(= n 15) #t]\n    [(= n 16) #t]\n    [(= n 17) #f]\n    [(= n 18) #t]\n    [(= n 19) #f]\n    [(= n 20) #t]\n    [(= n 21) #t]\n    [(= n 22) #t]\n    [(= n 23) #f]\n    [(= n 24) #t]\n    [(= n 25) #t]\n    [(= n 26) #t]\n    [(= n 27) #t]\n    [(= n 28) #t]\n    [(= n 29) #f]\n    [(= n 30) #t]\n    [(= n 31) #f]\n    [(= n 32) #t]\n    [(= n 33) #t]\n    [(= n 34) #t]\n    [(= n 35) #t]\n    [(= n 36) #t]\n    [(= n 37) #f]\n    [(= n 38) #t]\n    [(= n 39) #t]\n    [(= n 40) #t]\n    [(= n 41) #f]\n    [(= n 42) #t]\n    [(= n 43) #f]\n    [(= n 44) #t]\n    [(= n 45) #t]\n    [(= n 46) #t]\n    [(= n 47) #f]\n    [(= n 48) #t]\n    [(= n 49) #t]\n    [(= n 50) #t]\n    [(= n 51) #",
    "  (cond\n    [(= n 1) #t]\n    [(= n 2) #f]\n    [(even? n) #t]\n    [else\n     (for/or ([i (in-range 3 (quotient n 2) 1)])\n       (= (remainder n i) 0))]))\n",
    "  (define (is_prime n)\n    (define (iter k)\n      (if (= k 1)\n          #t\n          (if (= (remainder n k) 0)\n              #f\n              (iter (- k 1)))))\n    (iter (- n 1)))\n  (if (= n 1)\n      #t\n      (if (= n 2)\n          #f\n          (if (is_prime n)\n              #f\n              #t))))\n",
    "  (cond\n    [(= n 1) #t]\n    [(= n 2) #f]\n    [(= n 3) #f]\n    [(= n 4) #t]\n    [(= n 5) #f]\n    [(= n 6) #t]\n    [(= n 7) #f]\n    [(= n 8) #t]\n    [(= n 9) #t]\n    [(= n 10) #t]\n    [(= n 11) #f]\n    [(= n 12) #t]\n    [(= n 13) #f]\n    [(= n 14) #t]\n    [(= n 15) #t]\n    [(= n 16) #t]\n    [(= n 17) #f]\n    [(= n 18) #t]\n    [(= n 19) #f]\n    [(= n 20) #t]\n    [(= n 21) #t]\n    [(= n 22) #t]\n    [(= n 23) #f]\n    [(= n 24) #t]\n    [(= n 25) #t]\n    [(= n 26) #t]\n    [(= n 27) #t]\n    [(= n 28) #t]\n    [(= n 29) #f]\n    [(= n 30) #t]\n    [(= n 31) #f]\n    [(= n 32) #t]\n    [(= n 33) #t]\n    [(= n 34) #t]\n    [(= n 35) #t]\n    [(= n 36) #t]\n    [(= n 37) #f]\n    [(= n 38) #t]\n    [(= n 39) #t]\n    [(= n 40) #t]\n    [(= n 41) #f]\n    [(= n 42) #t]\n    [(= n 43) #f]\n    [(= n 44) #t]\n    [(= n 45) #t]\n    [(= n 46) #t]\n    [(= n 47) #f]\n    [(= n 48) #t]\n    [(= n 49) #t]\n    [(= n 50) #t]\n    [(= n 51) #",
    "  (cond\n    [(= n 1) #t]\n    [(= n 2) #f]\n    [(= n 3) #f]\n    [(= n 4) #t]\n    [(= n 5) #f]\n    [(= n 6) #t]\n    [(= n 7) #f]\n    [(= n 8) #t]\n    [(= n 9) #t]\n    [(= n 10) #t]\n    [(= n 11) #f]\n    [(= n 12) #t]\n    [(= n 13) #f]\n    [(= n 14) #t]\n    [(= n 15) #t]\n    [(= n 16) #t]\n    [(= n 17) #f]\n    [(= n 18) #t]\n    [(= n 19) #f]\n    [(= n 20) #t]\n    [(= n 21) #t]\n    [(= n 22) #t]\n    [(= n 23) #f]\n    [(= n 24) #t]\n    [(= n 25) #t]\n    [(= n 26) #t]\n    [(= n 27) #t]\n    [(= n 28) #t]\n    [(= n 29) #f]\n    [(= n 30) #t]\n    [(= n 31) #f]\n    [(= n 32) #t]\n    [(= n 33) #t]\n    [(= n 34) #t]\n    [(= n 35) #t]\n    [(= n 36) #t]\n    [(= n 37) #f]\n    [(= n 38) #t]\n    [(= n 39) #t]\n    [(= n 40) #t]\n    [(= n 41) #f]\n    [(= n 42) #t]\n    [(= n 43) #f]\n    [(= n 44) #t]\n    [(= n 45) #t]\n    [(= n 46) #t]\n    [(= n 47) #f]\n    [(= n 48) #t]\n    [(= n 49) #t]\n    [(= n 50) #t]\n    [(= n 51) #",
    "  (define (is_prime n)\n    (define (iter i)\n      (cond ((= i n) #t)\n            ((= (modulo n i) 0) #f)\n            (else (iter (+ i 1)))))\n    (iter 2))\n  (not (is_prime n)))\n",
    "  (define (is_prime n)\n    (define (iter i)\n      (cond ((= i 1) #t)\n            ((= (modulo n i) 0) #f)\n            (else (iter (- i 1)))))\n    (iter (- n 1)))\n  (not (is_prime n)))\n",
    "  (cond\n    [(= n 1) #t]\n    [(= n 2) #f]\n    [(= n 3) #f]\n    [(= n 4) #t]\n    [(= n 5) #f]\n    [(= n 6) #t]\n    [(= n 7) #f]\n    [(= n 8) #t]\n    [(= n 9) #t]\n    [(= n 10) #t]\n    [(= n 11) #f]\n    [(= n 12) #t]\n    [(= n 13) #f]\n    [(= n 14) #t]\n    [(= n 15) #t]\n    [(= n 16) #t]\n    [(= n 17) #f]\n    [(= n 18) #t]\n    [(= n 19) #f]\n    [(= n 20) #t]\n    [(= n 21) #t]\n    [(= n 22) #t]\n    [(= n 23) #f]\n    [(= n 24) #t]\n    [(= n 25) #t]\n    [(= n 26) #t]\n    [(= n 27) #t]\n    [(= n 28) #t]\n    [(= n 29) #f]\n    [(= n 30) #t]\n    [(= n 31) #f]\n    [(= n 32) #t]\n    [(= n 33) #t]\n    [(= n 34) #t]\n    [(= n 35) #t]\n    [(= n 36) #t]\n    [(= n 37) #f]\n    [(= n 38) #t]\n    [(= n 39) #t]\n    [(= n 40) #t]\n    [(= n 41) #f]\n    [(= n 42) #t]\n    [(= n 43) #f]\n    [(= n 44) #t]\n    [(= n 45) #t]\n    [(= n 46) #t]\n    [(= n 47) #f]\n    [(= n 48) #t]\n    [(= n 49) #t]\n    [(= n 50) #t]\n    [(= n 51) #",
    "  (cond\n    [(= n 1) #t]\n    [(= n 2) #f]\n    [(even? n) #t]\n    [else\n     (let loop ([i 3])\n       (cond\n         [(= i n) #f]\n         [(= (remainder n i) 0) #t]\n         [else (loop (+ i 2))]))]))\n",
    "  (define (is_prime? n)\n    (define (iter i)\n      (cond ((= i n) #t)\n            ((= (remainder n i) 0) #f)\n            (else (iter (+ i 1)))))\n    (iter 2))\n  (not (is_prime? n)))\n",
    "  (define (is_prime n)\n    (define (iter i)\n      (cond ((= i n) #t)\n            ((= (remainder n i) 0) #f)\n            (else (iter (+ i 1)))))\n    (iter 2))\n  (not (is_prime n)))\n",
    "  (cond\n    ((= n 1) #t)\n    ((= n 2) #f)\n    (else\n     (let loop ((i 2))\n       (cond\n         ((&gt; i (sqrt n)) #f)\n         ((= (modulo n i) 0) #t)\n         (else (loop (+ i 1))))))))\n",
    "  (cond\n    [(= n 1) #t]\n    [(= n 2) #f]\n    [(even? n) #t]\n    [else\n     (for/or ([i (in-range 3 (+ 1 (sqrt n)) 2)])\n       (zero? (modulo n i)))]))\n",
    "  (define (is_prime n)\n    (define (iter i)\n      (if (= i n)\n          #t\n          (if (= (modulo n i) 0)\n              #f\n              (iter (+ i 1)))))\n    (iter 2))\n  (not (is_prime n)))\n",
    "  (cond\n    [(= n 1) #t]\n    [(= n 2) #f]\n    [(= n 3) #f]\n    [(= n 4) #t]\n    [(= n 5) #f]\n    [(= n 6) #t]\n    [(= n 7) #f]\n    [(= n 8) #t]\n    [(= n 9) #t]\n    [(= n 10) #t]\n    [(= n 11) #f]\n    [(= n 12) #t]\n    [(= n 13) #f]\n    [(= n 14) #t]\n    [(= n 15) #t]\n    [(= n 16) #t]\n    [(= n 17) #f]\n    [(= n 18) #t]\n    [(= n 19) #f]\n    [(= n 20) #t]\n    [(= n 21) #t]\n    [(= n 22) #t]\n    [(= n 23) #f]\n    [(= n 24) #t]\n    [(= n 25) #t]\n    [(= n 26) #t]\n    [(= n 27) #t]\n    [(= n 28) #t]\n    [(= n 29) #f]\n    [(= n 30) #t]\n    [(= n 31) #f]\n    [(= n 32) #t]\n    [(= n 33) #t]\n    [(= n 34) #t]\n    [(= n 35) #t]\n    [(= n 36) #t]\n    [(= n 37) #f]\n    [(= n 38) #t]\n    [(= n 39) #t]\n    [(= n 40) #t]\n    [(= n 41) #f]\n    [(= n 42) #t]\n    [(= n 43) #f]\n    [(= n 44) #t]\n    [(= n 45) #t]\n    [(= n 46) #t]\n    [(= n 47) #f]\n    [(= n 48) #t]\n    [(= n 49) #t]\n    [(= n 50) #t]\n    [(= n 51) #",
    "  (cond ((= n 1) #t)\n        ((= n 2) #f)\n        ((even? n) #t)\n        (else (let loop ((i 3))\n                (cond ((&gt; (* i i) n) #f)\n                      ((= (remainder n i) 0) #t)\n                      (else (loop (+ i 2))))))))\n"
  ]
}
{
  "name": "mbpp_434_text_match_one",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a function that matches a string that has an a followed by one or more b's.\n(define (text_match_one text)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_434_text_match_one.py",
  "prompt_terminology": "verbatim",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate text_match_one))\n    (check-equal? (candidate \"ac\") #f)\n    (check-equal? (candidate \"dc\") #f)\n    (check-equal? (candidate \"abba\") #t)\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (regexp-match? #rx\"a+b+\" text))\n",
    "  (regexp-match #rx\"a+b+\" text))\n",
    "  (regexp-match? #rx\"a+b+\" text))\n",
    "  (regexp-match #rx\"a+b+\" text))\n",
    "  (regexp-match? #rx\"a+b+\" text))\n",
    "  (regexp-match? #rx\"a+b+\" text))\n",
    "  (regexp-match? #rx\"a+b+\" text))\n",
    "  (regexp-match? #rx\"a+b+\" text))\n",
    "  (regexp-match? #rx\"a+b\" text))\n",
    "  (regexp-match? #rx\"a+b+\" text))\n",
    "  (regexp-match? #rx\"a+b+\" text))\n",
    "  (regexp-match? #rx\"a+b\" text))\n",
    "  (regexp-match #rx\"a+b+\" text))\n",
    "  (regexp-match? #rx\"a+b+\" text))\n",
    "  (regexp-match? #rx\"a+b+\" text))\n",
    "  (regexp-match? #rx\"a+b+\" text))\n",
    "  (regexp-match? #rx\"a+b+\" text))\n",
    "  (regexp-match? #rx\"a+b+\" text))\n",
    "  (regexp-match? #rx\"a+b+\" text))\n",
    "  (regexp-match? #rx\"a+b+\" text))\n"
  ]
}
{
  "name": "mbpp_80_tetrahedral_number",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a function to find the nth tetrahedral number.\n(define (tetrahedral_number n)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_80_tetrahedral_number.py",
  "prompt_terminology": "verbatim",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate tetrahedral_number))\n    (check-equal? (candidate 5) 35)\n    (check-equal? (candidate 6) 56)\n    (check-equal? (candidate 7) 84)\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (define (helper n acc)\n    (if (= n 0)\n        acc\n        (helper (- n 1) (+ acc n))))\n  (helper n 0))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (define (tetrahedral_number-iter n sum)\n    (if (= n 0)\n        sum\n        (tetrahedral_number-iter (- n 1) (+ sum n))))\n  (tetrahedral_number-iter n 0))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (define (helper n sum)\n    (if (= n 0)\n        sum\n        (helper (- n 1) (+ n sum))))\n  (helper n 0))\n",
    "  (define (tetrahedral_number-iter n sum)\n    (if (= n 0)\n        sum\n        (tetrahedral_number-iter (- n 1) (+ sum n))))\n  (tetrahedral_number-iter n 0))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (define (tetrahedral_number-iter n sum)\n    (if (= n 0)\n        sum\n        (tetrahedral_number-iter (- n 1) (+ sum n))))\n  (tetrahedral_number-iter n 0))\n",
    "  (define (tetrahedral_number-iter n acc)\n    (if (= n 0)\n        acc\n        (tetrahedral_number-iter (- n 1) (+ acc n))))\n  (tetrahedral_number-iter n 0))\n",
    "  (if (= n 0)\n      0\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (define (helper n sum)\n    (if (= n 0)\n        sum\n        (helper (- n 1) (+ sum n))))\n  (helper n 0))\n",
    "  (define (tetrahedral_number-iter n sum)\n    (if (= n 0)\n        sum\n        (tetrahedral_number-iter (- n 1) (+ sum n))))\n  (tetrahedral_number-iter n 0))\n",
    "  (define (tetrahedral_number-iter n sum)\n    (if (= n 0)\n        sum\n        (tetrahedral_number-iter (- n 1) (+ sum n))))\n  (tetrahedral_number-iter n 0))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (define (tetrahedral-helper n sum)\n    (if (= n 0)\n        sum\n        (tetrahedral-helper (- n 1) (+ sum n))))\n  (tetrahedral-helper n 0))\n",
    "  (define (tetrahedral_number-iter n sum)\n    (if (= n 0)\n        sum\n        (tetrahedral_number-iter (- n 1) (+ sum n))))\n  (tetrahedral_number-iter n 0))\n",
    "  (define (helper n acc)\n    (if (= n 0)\n        acc\n        (helper (- n 1) (+ acc n))))\n  (helper n 0))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (define (tetrahedral-helper n sum)\n    (if (= n 0)\n        sum\n        (tetrahedral-helper (- n 1) (+ sum n))))\n  (tetrahedral-helper n 0))\n",
    "  (define (helper n acc)\n    (if (= n 0)\n        acc\n        (helper (- n 1) (+ acc n))))\n  (helper n 0))\n",
    "  (if (= n 0)\n      0\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (define (helper n sum)\n    (if (= n 0)\n        sum\n        (helper (- n 1) (+ sum n))))\n  (helper n 0))\n",
    "  (define (tetrahedral-iter n sum)\n    (if (= n 0)\n        sum\n        (tetrahedral-iter (- n 1) (+ sum n))))\n  (tetrahedral-iter n 0))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (define (helper n acc)\n    (if (= n 0)\n        acc\n        (helper (- n 1) (+ acc n))))\n  (helper n 0))\n",
    "  (define (tetrahedral_number-iter n sum)\n    (if (= n 0)\n        sum\n        (tetrahedral_number-iter (- n 1) (+ sum n))))\n  (tetrahedral_number-iter n 0))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (if (= n 1)\n      1\n      (+ (* n n n) (tetrahedral_number (- n 1)))))\n",
    "  (define (tetrahedral_number-iter n acc)\n    (if (= n 0)\n        acc\n        (tetrahedral_number-iter (- n 1) (+ acc n))))\n  (tetrahedral_number-iter n 0))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (define (helper n acc)\n    (if (= n 0)\n        acc\n        (helper (- n 1) (+ acc n))))\n  (helper n 0))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (define (helper n sum)\n    (if (= n 0)\n        sum\n        (helper (- n 1) (+ sum n))))\n  (helper n 0))\n",
    "  (define (tetrahedral_number_iter n sum)\n    (if (= n 0)\n        sum\n        (tetrahedral_number_iter (- n 1) (+ n sum))))\n  (tetrahedral_number_iter n 0))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (define (tetrahedral_number-iter n sum)\n    (if (= n 0)\n        sum\n        (tetrahedral_number-iter (- n 1) (+ sum n))))\n  (tetrahedral_number-iter n 0))\n",
    "  (define (helper n acc)\n    (if (= n 0)\n        acc\n        (helper (- n 1) (+ acc n))))\n  (helper n 0))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (define (tetrahedral_number-iter n sum)\n    (if (= n 0)\n        sum\n        (tetrahedral_number-iter (- n 1) (+ sum n))))\n  (tetrahedral_number-iter n 0))\n",
    "  (define (helper n acc)\n    (if (= n 1)\n        acc\n        (helper (- n 1) (+ acc n))))\n  (helper n 0))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (define (helper n acc)\n    (if (= n 0)\n        acc\n        (helper (- n 1) (+ acc n))))\n  (helper n 0))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (define (helper n sum)\n    (if (= n 0)\n        sum\n        (helper (- n 1) (+ sum n))))\n  (helper n 0))\n",
    "  (define (helper n acc)\n    (if (= n 0)\n        acc\n        (helper (- n 1) (+ acc n))))\n  (helper n 0))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (define (tetrahedral-helper n sum)\n    (if (= n 0)\n        sum\n        (tetrahedral-helper (- n 1) (+ sum n))))\n  (tetrahedral-helper n 0))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (define (tetrahedral-iter n sum)\n    (if (= n 0)\n        sum\n        (tetrahedral-iter (- n 1) (+ sum n))))\n  (tetrahedral-iter n 0))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (define (helper n acc)\n    (if (= n 0)\n        acc\n        (helper (- n 1) (+ acc n))))\n  (helper n 0))\n",
    "  (define (tetrahedral_number-iter n sum)\n    (if (= n 0)\n        sum\n        (tetrahedral_number-iter (- n 1) (+ sum n))))\n  (tetrahedral_number-iter n 0))\n",
    "  (define (tetrahedral_number-iter n sum)\n    (if (= n 0)\n        sum\n        (tetrahedral_number-iter (- n 1) (+ sum n))))\n  (tetrahedral_number-iter n 0))\n",
    "  (define (tetrahedral_number-iter n sum)\n    (if (= n 0)\n        sum\n        (tetrahedral_number-iter (- n 1) (+ sum n))))\n  (tetrahedral_number-iter n 0))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (define (tetrahedral_number_iter n sum)\n    (if (= n 0)\n        sum\n        (tetrahedral_number_iter (- n 1) (+ sum n))))\n  (tetrahedral_number_iter n 0))\n",
    "  (define (helper n acc)\n    (if (= n 0)\n        acc\n        (helper (- n 1) (+ acc n))))\n  (helper n 0))\n",
    "  (if (= n 1)\n      1\n      (+ (tetrahedral_number (- n 1)) n)))\n",
    "  (define (helper n acc)\n    (if (= n 0)\n        acc\n        (helper (- n 1) (+ acc n))))\n  (helper n 0))\n",
    "  (define (helper n acc)\n    (if (= n 0)\n        acc\n        (helper (- n 1) (+ acc n))))\n  (helper n 0))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (if (= n 0)\n      0\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (define (tetrahedral_number_iter n sum)\n    (if (= n 0)\n        sum\n        (tetrahedral_number_iter (- n 1) (+ sum n))))\n  (tetrahedral_number_iter n 0))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (define (tetrahedral_number-iter n acc)\n    (if (= n 0)\n        acc\n        (tetrahedral_number-iter (- n 1) (+ acc n))))\n  (tetrahedral_number-iter n 0))\n",
    "  (define (helper n acc)\n    (if (= n 0)\n        acc\n        (helper (- n 1) (+ acc n))))\n  (helper n 0))\n",
    "  (define (helper n sum)\n    (if (= n 0)\n        sum\n        (helper (- n 1) (+ sum n))))\n  (helper n 0))\n",
    "  (if (= n 0)\n      0\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (define (helper n acc)\n    (if (= n 0)\n        acc\n        (helper (- n 1) (+ acc n))))\n  (helper n 0))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (define (tetrahedral-helper n acc)\n    (if (= n 0)\n        acc\n        (tetrahedral-helper (- n 1) (+ acc n))))\n  (tetrahedral-helper n 0))\n",
    "  (define (tetrahedral_number-iter n sum)\n    (if (= n 0)\n        sum\n        (tetrahedral_number-iter (- n 1) (+ sum n))))\n  (tetrahedral_number-iter n 0))\n",
    "  (if (= n 0)\n      0\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (if (= n 0)\n      0\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (define (tetrahedral_number-iter n acc)\n    (if (= n 0)\n        acc\n        (tetrahedral_number-iter (- n 1) (+ n acc))))\n  (tetrahedral_number-iter n 0))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (define (tetrahedral_number-iter n sum)\n    (if (= n 0)\n        sum\n        (tetrahedral_number-iter (- n 1) (+ sum n))))\n  (tetrahedral_number-iter n 0))\n",
    "  (if (= n 0)\n      0\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (define (tetrahedral_number-iter n sum)\n    (if (= n 0)\n        sum\n        (tetrahedral_number-iter (- n 1) (+ sum n))))\n  (tetrahedral_number-iter n 0))\n",
    "  (define (tetrahedral_number_iter n acc)\n    (if (= n 0)\n        acc\n        (tetrahedral_number_iter (- n 1) (+ acc n))))\n  (tetrahedral_number_iter n 0))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (define (tetrahedral_number-iter n sum)\n    (if (= n 0)\n        sum\n        (tetrahedral_number-iter (- n 1) (+ sum n))))\n  (tetrahedral_number-iter n 0))\n",
    "  (define (helper n acc)\n    (if (= n 0)\n        acc\n        (helper (- n 1) (+ n acc))))\n  (helper n 0))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (define (helper n acc)\n    (if (= n 0)\n        acc\n        (helper (- n 1) (+ acc n))))\n  (helper n 0))\n",
    "  (define (tetrahedral_number-iter n sum)\n    (if (= n 0)\n        sum\n        (tetrahedral_number-iter (- n 1) (+ sum n))))\n  (tetrahedral_number-iter n 0))\n",
    "  (define (helper n acc)\n    (if (= n 0)\n        acc\n        (helper (- n 1) (+ acc n))))\n  (helper n 0))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (define (helper n acc)\n    (if (= n 0)\n        acc\n        (helper (- n 1) (+ acc n))))\n  (helper n 0))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (define (tetrahedral_number_iter n sum)\n    (if (= n 0)\n        sum\n        (tetrahedral_number_iter (- n 1) (+ sum n))))\n  (tetrahedral_number_iter n 0))\n",
    "  (define (tetrahedral-helper n sum)\n    (if (= n 0)\n        sum\n        (tetrahedral-helper (- n 1) (+ sum n))))\n  (tetrahedral-helper n 0))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (define (helper n acc)\n    (if (= n 0)\n        acc\n        (helper (- n 1) (+ acc n))))\n  (helper n 0))\n",
    "  (define (tetrahedral_number-iter n sum)\n    (if (= n 0)\n        sum\n        (tetrahedral_number-iter (- n 1) (+ sum n))))\n  (tetrahedral_number-iter n 0))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (define (helper n acc)\n    (if (= n 0)\n        acc\n        (helper (- n 1) (+ acc n))))\n  (helper n 0))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (define (tetrahedral_number-iter n sum)\n    (if (= n 0)\n        sum\n        (tetrahedral_number-iter (- n 1) (+ sum n))))\n  (tetrahedral_number-iter n 0))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (define (tetrahedral_number-iter n sum)\n    (if (= n 0)\n        sum\n        (tetrahedral_number-iter (- n 1) (+ sum n))))\n  (tetrahedral_number-iter n 0))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (define (tetrahedral_number-iter n sum)\n    (if (= n 0)\n        sum\n        (tetrahedral_number-iter (- n 1) (+ sum n))))\n  (tetrahedral_number-iter n 0))\n",
    "  (define (tetrahedral_number-iter n sum)\n    (if (= n 0)\n        sum\n        (tetrahedral_number-iter (- n 1) (+ sum n))))\n  (tetrahedral_number-iter n 0))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (define (helper n acc)\n    (if (= n 0)\n        acc\n        (helper (- n 1) (+ acc n))))\n  (helper n 0))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (define (tetrahedral_number-iter n acc)\n    (if (= n 0)\n        acc\n        (tetrahedral_number-iter (- n 1) (+ acc n))))\n  (tetrahedral_number-iter n 0))\n",
    "  (define (tetrahedral-helper n sum)\n    (if (= n 0)\n        sum\n        (tetrahedral-helper (- n 1) (+ sum n))))\n  (tetrahedral-helper n 0))\n",
    "  (define (tetrahedral-helper n acc)\n    (cond ((= n 0) acc)\n          (else (tetrahedral-helper (- n 1) (+ acc n)))))\n  (tetrahedral-helper n 0))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (define (helper n acc)\n    (if (= n 0)\n        acc\n        (helper (- n 1) (+ acc n))))\n  (helper n 0))\n",
    "  (define (tetrahedral_number_iter n acc)\n    (if (= n 1)\n        acc\n        (tetrahedral_number_iter (- n 1) (+ acc n))))\n  (tetrahedral_number_iter n 0))\n",
    "  (define (tetrahedral_number_iter n sum)\n    (if (= n 0)\n        sum\n        (tetrahedral_number_iter (- n 1) (+ sum n))))\n  (tetrahedral_number_iter n 0))\n",
    "  (cond\n    [(= n 1) 1]\n    [else (+ n (tetrahedral_number (- n 1)))]))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (if (= n 0)\n      0\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (define (helper n sum)\n    (if (= n 0)\n        sum\n        (helper (- n 1) (+ sum n))))\n  (helper n 0))\n",
    "  (cond\n    [(= n 1) 1]\n    [else (+ n (tetrahedral_number (- n 1)))]))\n",
    "  (define (tetrahedral_number-iter n sum)\n    (if (= n 0)\n        sum\n        (tetrahedral_number-iter (- n 1) (+ sum n))))\n  (tetrahedral_number-iter n 0))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (define (tetrahedral_number_iter n acc)\n    (if (= n 0)\n        acc\n        (tetrahedral_number_iter (- n 1) (+ acc n))))\n  (tetrahedral_number_iter n 0))\n",
    "  (define (helper n acc)\n    (if (= n 0)\n        acc\n        (helper (- n 1) (+ acc n))))\n  (helper n 0))\n",
    "  (if (= n 0)\n      0\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (define (helper n sum)\n    (if (= n 0)\n        sum\n        (helper (- n 1) (+ sum n))))\n  (helper n 0))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (define (tetrahedral_number-iter i acc)\n    (if (= i n)\n        acc\n        (tetrahedral_number-iter (+ i 1) (+ acc i))))\n  (tetrahedral_number-iter 1 0))\n",
    "  (define (helper n acc)\n    (if (= n 0)\n        acc\n        (helper (- n 1) (+ acc n))))\n  (helper n 0))\n",
    "  (define (helper n sum)\n    (if (= n 0)\n        sum\n        (helper (- n 1) (+ sum n))))\n  (helper n 0))\n",
    "  (define (helper n sum)\n    (if (= n 0)\n        sum\n        (helper (- n 1) (+ sum n))))\n  (helper n 0))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (if (= n 0)\n      0\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (define (helper n acc)\n    (if (= n 0)\n        acc\n        (helper (- n 1) (+ acc n))))\n  (helper n 0))\n",
    "  (if (= n 0)\n      0\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (define (tetrahedral_number-iter n acc)\n    (if (= n 0)\n        acc\n        (tetrahedral_number-iter (- n 1) (+ acc n))))\n  (tetrahedral_number-iter n 0))\n",
    "  (cond\n    [(= n 1) 1]\n    [else (+ n (tetrahedral_number (- n 1)))]))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (define (tetrahedral_number-iter n acc)\n    (if (= n 0)\n        acc\n        (tetrahedral_number-iter (- n 1) (+ acc n))))\n  (tetrahedral_number-iter n 0))\n",
    "  (define (helper n acc)\n    (if (= n 0)\n        acc\n        (helper (- n 1) (+ acc n))))\n  (helper n 0))\n",
    "  (cond\n    [(= n 0) 0]\n    [else (+ n (tetrahedral_number (- n 1)))]))\n",
    "  (if (= n 0)\n      0\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (define (tetrahedral_number-iter n sum)\n    (if (= n 0)\n        sum\n        (tetrahedral_number-iter (- n 1) (+ sum n))))\n  (tetrahedral_number-iter n 0))\n",
    "  (define (helper n acc)\n    (if (= n 1)\n        acc\n        (helper (- n 1) (+ acc n))))\n  (helper n 0))\n",
    "  (cond\n    [(= n 0) 0]\n    [else (+ n (tetrahedral_number (- n 1)))]))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (define (helper n sum)\n    (if (= n 0)\n        sum\n        (helper (- n 1) (+ sum n))))\n  (helper n 0))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (define (tetrahedral_number_iter n acc)\n    (if (= n 0)\n        acc\n        (tetrahedral_number_iter (- n 1) (+ acc n))))\n  (tetrahedral_number_iter n 0))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (define (tetrahedral_number-iter n acc)\n    (if (= n 0)\n        acc\n        (tetrahedral_number-iter (- n 1) (+ acc n))))\n  (tetrahedral_number-iter n 0))\n",
    "  (if (= n 0)\n      0\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (if (= n 0)\n      0\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (if (= n 0)\n      0\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (define (tetrahedral_number-iter n acc)\n    (if (= n 0)\n        acc\n        (tetrahedral_number-iter (- n 1) (+ acc n))))\n  (tetrahedral_number-iter n 0))\n",
    "  (define (tetrahedral_number-iter n acc)\n    (if (= n 0)\n        acc\n        (tetrahedral_number-iter (- n 1) (+ n acc))))\n  (tetrahedral_number-iter n 0))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (define (tetrahedral_number_iter n sum)\n    (if (= n 0)\n        sum\n        (tetrahedral_number_iter (- n 1) (+ sum n))))\n  (tetrahedral_number_iter n 0))\n",
    "  (if (= n 0)\n      0\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (define (tetrahedral_number-iter n sum)\n    (if (= n 0)\n        sum\n        (tetrahedral_number-iter (- n 1) (+ sum n))))\n  (tetrahedral_number-iter n 0))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (define (tetrahedral-iter n acc)\n    (if (= n 0)\n        acc\n        (tetrahedral-iter (- n 1) (+ acc n))))\n  (tetrahedral-iter n 0))\n",
    "  (define (helper n sum)\n    (if (= n 0)\n        sum\n        (helper (- n 1) (+ sum n))))\n  (helper n 0))\n",
    "  (define (helper n acc)\n    (if (= n 1)\n        acc\n        (helper (- n 1) (+ acc n))))\n  (helper n 0))\n",
    "  (define (tetrahedral_number-iter n sum)\n    (if (= n 0)\n        sum\n        (tetrahedral_number-iter (- n 1) (+ sum n))))\n  (tetrahedral_number-iter n 0))\n",
    "  (if (zero? n)\n      0\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (define (tetrahedral_number_iter n acc)\n    (if (= n 0)\n        acc\n        (tetrahedral_number_iter (- n 1) (+ acc n))))\n  (tetrahedral_number_iter n 0))\n",
    "  (define (helper n acc)\n    (if (= n 0)\n        acc\n        (helper (- n 1) (+ acc n))))\n  (helper n 0))\n",
    "  (define (helper n sum)\n    (if (= n 0)\n        sum\n        (helper (- n 1) (+ sum n))))\n  (helper n 0))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (define (helper n sum)\n    (if (= n 0)\n        sum\n        (helper (- n 1) (+ sum n))))\n  (helper n 0))\n",
    "  (define (tetrahedral_number-iter n acc)\n    (if (= n 0)\n        acc\n        (tetrahedral_number-iter (- n 1) (+ acc n))))\n  (tetrahedral_number-iter n 0))\n",
    "  (if (= n 0)\n      0\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (if (= n 1)\n      1\n      (+ n (tetrahedral_number (- n 1)))))\n",
    "  (define (helper n acc)\n    (if (= n 0)\n        acc\n        (helper (- n 1) (+ acc n))))\n  (helper n 0))\n",
    "  (define (helper n acc)\n    (if (= n 0)\n        acc\n        (helper (- n 1) (+ acc n))))\n  (helper n 0))\n",
    "  (define (tetrahedral_number_iter n sum)\n    (if (= n 0)\n        sum\n        (tetrahedral_number_iter (- n 1) (+ sum n))))\n  (tetrahedral_number_iter n 0))\n",
    "  (define (helper n acc)\n    (if (= n 0)\n        acc\n        (helper (- n 1) (+ acc n))))\n  (helper n 0))\n"
  ]
}
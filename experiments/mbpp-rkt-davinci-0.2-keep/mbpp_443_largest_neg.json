{
  "name": "mbpp_443_largest_neg",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a python function to find the largest negative number from the given list.\n(define (largest_neg list1)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_443_largest_neg.py",
  "prompt_terminology": "verbatim",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate largest_neg))\n    (check-equal? (candidate (list 1 2 3 -4 -6)) -6)\n    (check-equal? (candidate (list 1 2 3 -8 -9)) -9)\n    (check-equal? (candidate (list 1 2 3 4 -1)) -1)\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (cond\n    [(null? list1) '()]\n    [(and (number? (car list1)) (negative? (car list1))) (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(negative? (first list1))\n     (max (first list1) (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) 0]\n    [(and (negative? (car list1)) (positive? (cadr list1))) (largest_neg (cdr list1))]\n    [(and (negative? (car list1)) (negative? (cadr list1))) (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (filter (lambda (x) (and (negative? x) (not (zero? x)))) list1))\n",
    "  (cond\n    [(null? list1) 0]\n    [(< (car list1) 0) (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(and (negative? (first list1)) (or (empty? (rest list1)) (positive? (first (rest list1))))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) 0]\n    [(and (number? (car list1))\n          (&lt; (car list1) 0))\n     (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (negative? (first list1))\n          (or (negative? (largest_neg (rest list1)))\n              (zero? (largest_neg (rest list1)))))\n     (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) (error \"List is empty\")]\n    [(< (first list1) 0) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(and (number? (first list1)) (negative? (first list1)))\n     (if (empty? (rest list1)) (first list1)\n         (if (< (first list1) (largest_neg (rest list1)))\n             (first list1) (largest_neg (rest list1))))]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(negative? (first list1)) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (negative? (first list1))\n          (or (positive? (second list1))\n              (null? (second list1))))\n     (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(and (negative? (first list1)) (empty? (rest list1))) (first list1)]\n    [(and (negative? (first list1)) (not (empty? (rest list1))))\n     (if (> (first list1) (largest_neg (rest list1)))\n         (first list1)\n         (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(and (negative? (first list1)) (positive? (second list1))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(negative? (car list1)) (cons (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(null? list1) #f]\n    [(and (number? (car list1)) (< (car list1) 0))\n     (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) (error \"Empty list\")]\n    [(< (first list1) 0) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (negative? (first list1))\n          (or (empty? (rest list1))\n              (negative? (first (rest list1)))))\n     (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(and (negative? (first list1)) (empty? (rest list1))) (first list1)]\n    [(and (negative? (first list1)) (negative? (first (rest list1))))\n     (if (< (first list1) (first (rest list1)))\n         (first list1)\n         (first (rest list1)))]\n    [(and (negative? (first list1)) (positive? (first (rest list1)))) (first list1)]\n    [(and (positive? (first list1)) (negative? (first (rest list1)))) (first (rest list1))]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) \"No negative numbers\"]\n    [(< (first list1) 0) (max (first list1) (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (negative? (first list1)) (positive? (largest_neg (rest list1)))) (first list1)]\n    [(and (negative? (first list1)) (negative? (largest_neg (rest list1)))) (largest_neg (rest list1))]\n    [(and (positive? (first list1)) (positive? (largest_neg (rest list1)))) (largest_neg (rest list1))]\n    [(and (positive? (first list1)) (negative? (largest_neg (rest list1)))) (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) #f]\n    [(and (number? (car list1)) (< (car list1) 0)) (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) (error \"empty list\")]\n    [(< (first list1) 0) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) \"no negative numbers\"]\n    [(< (car list1) 0) (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(null? list1) #f]\n    [(and (negative? (car list1)) (not (null? (cdr list1))))\n     (cond\n       [(negative? (cadr list1)) (largest_neg (cdr list1))]\n       [else (car list1)])]\n    [(negative? (car list1)) (car list1)]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(and (negative? (first list1))\n          (empty? (rest list1))) (first list1)]\n    [(and (negative? (first list1))\n          (not (empty? (rest list1))))\n     (max (first list1) (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(< (first list1) 0) (max (first list1) (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(and (negative? (first list1)) (not (negative? (second list1)))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(and (number? (car list1))\n          (negative? (car list1)))\n     (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(negative? (first list1)) (cons (first list1) (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(and (number? (car list1)) (< (car list1) 0)) (cons (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond ((null? list1) '())\n        ((< (car list1) 0) (cons (car list1) (largest_neg (cdr list1))))\n        (else (largest_neg (cdr list1)))))\n",
    "  (cond\n    [(empty? list1) (error \"Empty list\")]\n    [(negative? (first list1)) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) 0]\n    [(< (car list1) 0) (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(and (number? (car list1)) (negative? (car list1)))\n     (if (empty? (cdr list1))\n         (car list1)\n         (max (car list1) (largest_neg (cdr list1))))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) (error \"No negative numbers in list\")]\n    [(and (negative? (first list1)) (empty? (rest list1))) (first list1)]\n    [(and (negative? (first list1)) (negative? (largest_neg (rest list1)))) (first list1)]\n    [(and (negative? (first list1)) (positive? (largest_neg (rest list1)))) (largest_neg (rest list1))]\n    [(and (positive? (first list1)) (negative? (largest_neg (rest list1)))) (largest_neg (rest list1))]\n    [(and (positive? (first list1)) (positive? (largest_neg (rest list1)))) (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(< (car list1) 0) (cons (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(and (negative? (first list1)) (positive? (second list1))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(and (negative? (first list1)) (not (negative? (second list1)))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(and (number? (car list1)) (< (car list1) 0)) (list (car list1))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(and (negative? (first list1))\n          (or (empty? (rest list1))\n              (positive? (first (rest list1)))))\n     (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(and (negative? (first list1))\n          (or (empty? (rest list1))\n              (positive? (first (rest list1)))))\n     (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(negative? (first list1)) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) (error 'largest_neg \"empty list\")]\n    [(negative? (first list1)) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(and (negative? (first list1)) (not (negative? (second list1)))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) (error \"empty list\")]\n    [(negative? (first list1)) (largest_neg (rest list1))]\n    [else (first list1)]))\n</code>\n",
    "  (cond\n    [(empty? list1) #f]\n    [(and (negative? (first list1)) (not (negative? (second list1)))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(and (number? (car list1)) (negative? (car list1))) (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) #f]\n    [(and (negative? (first list1)) (not (negative? (second list1)))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(and (negative? (first list1)) (not (negative? (second list1)))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (filter (lambda (x) (and (negative? x) (not (zero? x)))) list1))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(and (negative? (first list1)) (not (empty? (rest list1))))\n     (if (&gt; (first list1) (largest_neg (rest list1)))\n         (first list1)\n         (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(and (negative? (first list1)) (not (empty? (rest list1))))\n     (if (> (first list1) (largest_neg (rest list1)))\n         (first list1)\n         (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(negative? (first list1)) (cons (first list1) (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) #f]\n    [(and (number? (car list1)) (< (car list1) 0)) (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (if (null? list1)\n      0\n      (if (and (number? (car list1))\n               (&lt; (car list1) 0))\n          (max (car list1) (largest_neg (cdr list1)))\n          (largest_neg (cdr list1)))))\n",
    "  (cond\n    [(empty? list1) \"No negative numbers in list\"]\n    [(and (negative? (first list1)) (not (negative? (second list1)))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(and (negative? (car list1)) (not (null? (cdr list1))))\n     (if (> (car list1) (largest_neg (cdr list1)))\n         (car list1)\n         (largest_neg (cdr list1)))]\n    [(and (negative? (car list1)) (null? (cdr list1))) (car list1)]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(and (number? (car list1)) (negative? (car list1))) (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(and (negative? (first list1)) (not (negative? (second list1)))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(< (first list1) 0) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(< (first list1) 0) (max (first list1) (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(and (negative? (first list1)) (not (negative? (second list1)))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(< (car list1) 0) (cons (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) (error \"Empty list\")]\n    [(negative? (first list1)) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) #f]\n    [else (cond\n            [(< (first list1) 0) (cond\n                                  [(> (first list1) (largest_neg (rest list1))) (first list1)]\n                                  [else (largest_neg (rest list1))])]\n            [else (largest_neg (rest list1))])]))\n",
    "  (cond\n    [(null? list1) #f]\n    [(< (car list1) 0) (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(null? list1) 0]\n    [(and (number? (car list1)) (< (car list1) 0))\n     (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(and (negative? (first list1)) (positive? (first (rest list1)))) (largest_neg (rest list1))]\n    [(and (negative? (first list1)) (negative? (first (rest list1)))) (largest_neg (cons (first list1) (rest (rest list1))))]\n    [(and (positive? (first list1)) (negative? (first (rest list1)))) (largest_neg (cons (first (rest list1)) (rest (rest list1))))]\n    [(and (positive? (first list1)) (positive? (first (rest list1)))) (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(and (negative? (first list1))\n          (or (empty? (rest list1))\n              (negative? (first (rest list1)))))\n     (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(negative? (first list1)) (cons (first list1) (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(negative? (first list1)) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) #f]\n    [(and (number? (car list1)) (< (car list1) 0)) (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (negative? (first list1)) (positive? (largest_neg (rest list1)))) (first list1)]\n    [(and (positive? (first list1)) (negative? (largest_neg (rest list1)))) (largest_neg (rest list1))]\n    [(and (positive? (first list1)) (positive? (largest_neg (rest list1)))) 0]\n    [(and (negative? (first list1)) (negative? (largest_neg (rest list1)))) (max (first list1) (largest_neg (rest list1)))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(< (first list1) 0) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(< (first list1) 0) (cons (first list1) (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(and (negative? (first list1))\n          (or (empty? (rest list1))\n              (positive? (first (rest list1)))))\n     (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) #f]\n    [(and (number? (car list1)) (< (car list1) 0)) (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) #f]\n    [(and (negative? (first list1)) (not (negative? (second list1)))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) (error \"List is empty\")]\n    [(negative? (first list1)) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) (error \"list is empty\")]\n    [(< (first list1) 0) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(and (negative? (first list1)) (empty? (rest list1))) (first list1)]\n    [(and (negative? (first list1)) (not (empty? (rest list1)))) (max (first list1) (largest_neg (rest list1)))]\n    [(and (not (negative? (first list1))) (not (empty? (rest list1)))) (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) #f]\n    [(and (number? (car list1)) (< (car list1) 0)) (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [else\n     (cond\n       [(< (car list1) 0) (cons (car list1) (largest_neg (cdr list1)))]\n       [else (largest_neg (cdr list1))])]))\n",
    "  (cond\n    [(empty? list1) #f]\n    [(and (negative? (first list1)) (largest_neg (rest list1))) (first list1)]\n    [(largest_neg (rest list1)) (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(< (car list1) 0) (cons (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(and (number? (car list1))\n          (negative? (car list1)))\n     (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(null? list1) #f]\n    [(and (number? (car list1)) (< (car list1) 0))\n     (if (null? (cdr list1))\n         (car list1)\n         (if (< (car list1) (largest_neg (cdr list1)))\n             (car list1)\n             (largest_neg (cdr list1))))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(< (first list1) 0) (max (first list1) (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (negative? (first list1)) (positive? (second list1)))\n     (largest_neg (rest list1))]\n    [(and (negative? (first list1)) (negative? (second list1)))\n     (if (> (first list1) (second list1))\n         (first list1)\n         (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(negative? (first list1)) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(< (first list1) 0) (max (first list1) (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(and (negative? (first list1)) (not (negative? (second list1)))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) #f]\n    [(< (car list1) 0) (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(< (first list1) 0) (cons (first list1) (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(and (negative? (first list1)) (not (negative? (second list1)))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) (error \"No negative numbers in list\")]\n    [(and (negative? (first list1)) (empty? (rest list1))) (first list1)]\n    [(and (negative? (first list1)) (not (empty? (rest list1))))\n     (max (first list1) (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) 0]\n    [(< (car list1) 0) (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(< (first list1) 0) (max (first list1) (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(and (negative? (first list1)) (not (negative? (second list1)))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(< (car list1) 0) (cons (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(null? list1) #f]\n    [(< (car list1) 0)\n     (cond\n       [(null? (cdr list1)) (car list1)]\n       [else (max (car list1) (largest_neg (cdr list1)))])]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(null? list1) #f]\n    [(< (car list1) 0) (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(< (first list1) 0) (max (first list1) (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) #f]\n    [(and (number? (car list1)) (negative? (car list1))) (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) #f]\n    [(and (negative? (first list1))\n          (not (negative? (second list1)))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(and (number? (car list1)) (negative? (car list1))) (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(< (first list1) 0) (max (first list1) (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) false]\n    [(negative? (first list1)) (largest_neg (rest list1))]\n    [else (first list1)]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(< (first list1) 0) (cons (first list1) (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(< (car list1) 0) (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) #f]\n    [(and (negative? (first list1)) (largest_neg (rest list1)))\n     (if (&gt; (first list1) (largest_neg (rest list1)))\n         (first list1)\n         (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n",
    "  (let loop ((list1 list1) (max_neg -1))\n    (cond ((null? list1) max_neg)\n          ((and (negative? (car list1))\n                (&gt; (car list1) max_neg))\n           (loop (cdr list1) (car list1)))\n          (else (loop (cdr list1) max_neg)))))\n",
    "  (cond\n    [(empty? list1) (error \"No negative numbers in list\")]\n    [(and (negative? (first list1)) (not (negative? (second list1)))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) (error \"No negative numbers in list\")]\n    [(and (negative? (first list1)) (empty? (rest list1))) (first list1)]\n    [(negative? (first list1)) (max (first list1) (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) 0]\n    [(< (car list1) 0) (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(and (negative? (first list1)) (empty? (rest list1))) (first list1)]\n    [(and (negative? (first list1)) (not (empty? (rest list1)))) (max (first list1) (largest_neg (rest list1)))]\n    [(and (not (negative? (first list1))) (empty? (rest list1))) '()]\n    [(and (not (negative? (first list1))) (not (empty? (rest list1)))) (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(negative? (first list1)) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(negative? (first list1)) (cons (first list1) (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(and (number? (car list1)) (< (car list1) 0))\n     (if (null? (cdr list1))\n         (car list1)\n         (max (car list1) (largest_neg (cdr list1))))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) (error \"Empty list\")]\n    [(< (first list1) 0) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(< (car list1) 0) (cons (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(< (car list1) 0) (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(negative? (first list1)) (max (first list1) (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(and (number? (first list1)) (negative? (first list1)))\n     (max (first list1) (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond ((null? list1) '())\n        ((< (car list1) 0) (cons (car list1) (largest_neg (cdr list1))))\n        (else (largest_neg (cdr list1)))))\n",
    "  (cond ((null? list1) #f)\n        ((and (number? (car list1)) (< (car list1) 0)) (max (car list1) (largest_neg (cdr list1))))\n        (else (largest_neg (cdr list1)))))\n",
    "  (cond\n    [(null? list1) '()]\n    [(and (number? (car list1)) (negative? (car list1)))\n     (if (null? (cdr list1))\n         (car list1)\n         (max (car list1) (largest_neg (cdr list1))))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(and (negative? (first list1)) (not (empty? (rest list1))))\n     (if (negative? (first (rest list1)))\n         (largest_neg (rest list1))\n         (first list1))]\n    [else (first list1)]))\n",
    "  (cond\n    [(null? list1) #f]\n    [(and (number? (car list1)) (negative? (car list1)))\n     (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(and (negative? (first list1)) (empty? (rest list1))) (first list1)]\n    [(and (negative? (first list1)) (not (empty? (rest list1))))\n     (max (first list1) (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (negative? (first list1))\n          (or (empty? (rest list1))\n              (positive? (first (rest list1)))))\n     (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(and (negative? (first list1)) (not (negative? (second list1)))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(< (car list1) 0) (cons (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (negative? (first list1)) (positive? (second list1))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(and (number? (car list1)) (< (car list1) 0)) (cons (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(< (first list1) 0) (max (first list1) (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n",
    "  (let loop ([list1 list1] [max -1])\n    (if (null? list1)\n        max\n        (if (and (negative? (car list1))\n                 (&gt; (car list1) max))\n            (loop (cdr list1) (car list1))\n            (loop (cdr list1) max)))))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (negative? (first list1)) (positive? (second list1))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(< (car list1) 0) (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(and (number? (car list1)) (negative? (car list1))) (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (negative? (first list1)) (positive? (second list1))) (largest_neg (rest list1))]\n    [(and (positive? (first list1)) (negative? (second list1))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (negative? (first list1))\n          (or (positive? (second list1))\n              (and (negative? (second list1))\n                   (> (first list1) (second list1)))))\n     (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) #f]\n    [(and (negative? (first list1))\n          (or (not (negative? (second list1)))\n              (largest_neg (rest list1))))\n     (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) #f]\n    [(and (negative? (first list1)) (positive? (second list1))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(and (negative? (car list1)) (null? (cdr list1))) (car list1)]\n    [(and (negative? (car list1)) (not (null? (cdr list1)))) (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(< (first list1) 0) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (negative? (first list1)) (positive? (second list1))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) #f]\n    [(and (negative? (first list1)) (not (negative? (second list1)))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(and (negative? (first list1)) (not (empty? (rest list1))))\n     (if (&gt; (first list1) (largest_neg (rest list1)))\n         (first list1)\n         (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) #f]\n    [(and (number? (car list1))\n          (negative? (car list1)))\n     (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(null? list1) #f]\n    [(< (car list1) 0) (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (filter (lambda (x) (and (negative? x) (not (zero? x)))) list1))\n",
    "  (cond\n    [(null? list1) (error \"No negative numbers in list\")]\n    [(and (negative? (car list1)) (null? (cdr list1))) (car list1)]\n    [(and (negative? (car list1)) (negative? (cadr list1)))\n     (if (> (car list1) (cadr list1))\n         (car list1)\n         (cadr list1))]\n    [(negative? (car list1)) (largest_neg (cdr list1))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (let loop ((list1 list1)\n             (largest 0))\n    (cond ((null? list1) largest)\n          ((< (car list1) 0) (loop (cdr list1) (car list1)))\n          (else (loop (cdr list1) largest)))))\n",
    "  (cond\n    [(empty? list1) (error \"empty list\")]\n    [(negative? (first list1)) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(and (negative? (first list1))\n          (not (empty? (rest list1))))\n     (if (> (first list1) (largest_neg (rest list1)))\n         (first list1)\n         (largest_neg (rest list1)))]\n    [(and (negative? (first list1))\n          (empty? (rest list1)))\n     (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) 0]\n    [(and (number? (car list1)) (< (car list1) 0))\n     (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(< (first list1) 0) (cons (first list1) (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) #f]\n    [(and (negative? (car list1)) (null? (cdr list1))) (car list1)]\n    [(and (negative? (car list1)) (not (null? (cdr list1))))\n     (max (car list1) (largest_neg (cdr list1)))]\n    [(and (not (negative? (car list1))) (null? (cdr list1))) #f]\n    [(and (not (negative? (car list1))) (not (null? (cdr list1))))\n     (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(negative? (first list1)) (cons (first list1) (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) #f]\n    [(and (negative? (first list1)) (not (negative? (second list1)))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (if (null? list1)\n      '()\n      (if (and (number? (car list1)) (< (car list1) 0))\n          (if (null? (cdr list1))\n              (car list1)\n              (if (< (car list1) (largest_neg (cdr list1)))\n                  (car list1)\n                  (largest_neg (cdr list1))))\n          (largest_neg (cdr list1)))))\n",
    "  (cond\n    [(empty? list1) \"No negative numbers in list\"]\n    [(and (negative? (first list1)) (not (negative? (first (rest list1))))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(and (negative? (first list1)) (not (negative? (second list1)))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    ((null? list1) '())\n    ((< (car list1) 0) (cons (car list1) (largest_neg (cdr list1))))\n    (else (largest_neg (cdr list1)))\n  )\n)\n",
    "  (cond\n    [(empty? list1) '()]\n    [(and (negative? (first list1))\n          (or (empty? (rest list1))\n              (positive? (first (rest list1)))))\n     (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) #f]\n    [(and (number? (car list1))\n          (negative? (car list1)))\n     (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (negative? (first list1))\n          (or (positive? (second list1))\n              (zero? (second list1))))\n     (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(< (car list1) 0) (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(< (car list1) 0) (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(and (negative? (car list1)) (not (negative? (cadr list1)))) (car list1)]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(negative? (first list1)) (cons (first list1) (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n",
    "  (filter (lambda (x) (and (negative? x) (not (zero? x)))) list1))\n",
    "  (cond\n    [(null? list1) #f]\n    [(and (number? (car list1))\n          (negative? (car list1)))\n     (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(and (number? (car list1)) (negative? (car list1))) (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(< (first list1) 0) (cons (first list1) (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n",
    "  (let loop ([list1 list1] [max 0])\n    (if (null? list1)\n        max\n        (let ([n (car list1)])\n          (if (and (number? n) (< n 0) (> n max))\n              (loop (cdr list1) n)\n              (loop (cdr list1) max))))))\n",
    "  (cond\n    [(null? list1) 0]\n    [(and (number? (car list1))\n          (negative? (car list1)))\n     (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) (error \"Empty list\")]\n    [(negative? (first list1)) (largest_neg (rest list1))]\n    [else (first list1)]))\n",
    "  (cond\n    [(null? list1) 0]\n    [(and (number? (car list1))\n          (negative? (car list1)))\n     (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(null? list1) \"no negative numbers\"]\n    [(and (negative? (car list1)) (null? (cdr list1))) (car list1)]\n    [(and (negative? (car list1)) (negative? (cadr list1)))\n     (if (> (car list1) (cadr list1))\n         (car list1)\n         (cadr list1))]\n    [(negative? (car list1)) (largest_neg (cdr list1))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (negative? (first list1)) (positive? (second list1))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) (error \"Empty list\")]\n    [(< (first list1) 0) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(and (negative? (first list1)) (or (empty? (rest list1)) (positive? (first (rest list1))))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(negative? (first list1)) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (if (null? list1)\n      '()\n      (if (and (number? (car list1)) (< (car list1) 0))\n          (if (null? (cdr list1))\n              (car list1)\n              (if (< (car list1) (largest_neg (cdr list1)))\n                  (car list1)\n                  (largest_neg (cdr list1))))\n          (largest_neg (cdr list1)))))\n",
    "  (filter (lambda (x) (and (negative? x) (not (zero? x)))) list1))\n",
    "  (cond\n    [(null? list1) #f]\n    [(< (car list1) 0) (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (negative? (first list1)) (positive? (second list1))) (largest_neg (rest list1))]\n    [(and (negative? (first list1)) (negative? (second list1))) (largest_neg (cons (first list1) (rest (rest list1))))]\n    [(and (positive? (first list1)) (negative? (second list1))) (largest_neg (cons (second list1) (rest (rest list1))))]\n    [(and (positive? (first list1)) (positive? (second list1))) (largest_neg (rest list1))]))\n",
    "  (cond [(empty? list1) #f]\n        [(and (negative? (first list1)) (largest_neg (rest list1)))\n         (first list1)]\n        [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (negative? (first list1))\n          (or (positive? (second list1))\n              (negative? (second list1))))\n     (largest_neg (rest list1))]\n    [(and (negative? (first list1))\n          (positive? (second list1)))\n     (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(< (first list1) 0) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) 0]\n    [(and (number? (car list1))\n          (&lt; (car list1) 0))\n     (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n</code>\n",
    "  (cond\n    [(null? list1) '()]\n    [(and (number? (car list1))\n          (negative? (car list1)))\n     (if (null? (cdr list1))\n         (car list1)\n         (max (car list1) (largest_neg (cdr list1))))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (filter (lambda (x) (and (number? x) (< x 0))) list1))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (negative? (first list1))\n          (or (positive? (second list1))\n              (negative? (second list1))\n              (zero? (second list1))))\n     (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (negative? (first list1))\n          (or (positive? (second list1))\n              (empty? (rest list1))))\n     (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) #f]\n    [(and (number? (car list1)) (< (car list1) 0))\n     (if (null? (cdr list1))\n         (car list1)\n         (max (car list1) (largest_neg (cdr list1))))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(< (car list1) 0) (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n"
  ]
}
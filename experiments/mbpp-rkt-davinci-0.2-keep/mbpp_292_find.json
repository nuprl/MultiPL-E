{
  "name": "mbpp_292_find",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a python function to find quotient of two numbers (rounded down to the nearest integer).\n(define (find n m)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_292_find.py",
  "prompt_terminology": "verbatim",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate find))\n    (check-equal? (candidate 10 3) 3)\n    (check-equal? (candidate 4 2) 2)\n    (check-equal? (candidate 20 5) 4)\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (floor (/ n m)))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (floor (/ n m)))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (floor (/ n m)))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (if (&lt; n m)\n      0\n      (+ 1 (find (- n m) m))))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (floor (/ n m)))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (floor (/ n m)))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (floor (/ n m)))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (floor (/ n m)))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (floor (/ n m)))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (floor (/ n m)))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (if (zero? m)\n      0\n      (if (&lt; n m)\n          0\n          (+ 1 (find (- n m) m)))))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (if (= m 0)\n      0\n      (if (&lt; n m)\n          0\n          (+ 1 (find (- n m) m)))))\n</code>\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (floor (/ n m)))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n",
    "  (quotient n m))\n"
  ]
}
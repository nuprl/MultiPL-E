name: HumanEval_64_vowels_count
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function vowels_count\
  \ which takes a string representing\n// a word as input and returns the number of\
  \ vowels in the string.\n// Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here,\
  \ 'y' is also a\n// vowel, but only when it is at the end of the given word.\n//\
  \ Example:\nlong vowels_count(std::string s) {\n"
tests: "}\nint main() {\n    auto candidate = vowels_count;\n    assert(candidate((\"\
  abcde\")) == (2));\n    assert(candidate((\"Alone\")) == (3));\n    assert(candidate((\"\
  key\")) == (2));\n    assert(candidate((\"bye\")) == (1));\n    assert(candidate((\"\
  keY\")) == (2));\n    assert(candidate((\"bYe\")) == (1));\n    assert(candidate((\"\
  ACEDY\")) == (3));\n}\n"
completions: ["    long vowels = 0;\n    for (auto c : s) {\n        if (c == 'a'\
    \ || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            vowels++;\n\
    \        }\n    }\n    return vowels;", "    long vowels = 0;\n    for (auto &c\
    \ : s) {\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\
    \ {\n            vowels++;\n        }\n    }\n    return vowels;", "    long vowels\
    \ = 0;\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == 'a' || s[i]\
    \ == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n            vowels++;\n\
    \        }\n    }\n    return vowels;", "    long vowels = 0;\n    for (auto c\
    \ : s) {\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\
    \ {\n            vowels++;\n        }\n    }\n    return vowels;", "    long vowels\
    \ = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == 'a' ||\
    \ s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n            vowels++;\n\
    \        }\n    }\n    return vowels;", "    long vowels = 0;\n    for(int i =\
    \ 0; i < s.length(); i++) {\n        if(s[i] == 'a' || s[i] == 'e' || s[i] ==\
    \ 'i' || s[i] == 'o' || s[i] == 'u') {\n            vowels++;\n        }\n   \
    \ }\n    return vowels;", "    long vowels = 0;\n    for (auto c : s) {\n    \
    \    if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n       \
    \     vowels++;\n        }\n    }\n    return vowels;", "    long vowels = 0;\n\
    \    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == 'a' || s[i] ==\
    \ 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n            vowels++;\n\
    \        }\n    }\n    return vowels;", "    long count = 0;\n    for (auto c\
    \ : s) {\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\
    \ {\n            count++;\n        }\n    }\n    return count;", "    long vowels\
    \ = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == 'a' ||\
    \ s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n            vowels++;\n\
    \        }\n    }\n    return vowels;", "    int vowels[] = { 'a', 'e', 'i', 'o',\
    \ 'u' };\n    int n = s.size();\n    long ans = 0;\n    for (int i = 0; i < n;\
    \ i++) {\n        if (vowels[i] == s[n - 1]) {\n            ans++;\n        }\n\
    \    }\n    return ans;", "    long vowels = 0;\n    for(int i = 0; i < s.length();\
    \ i++) {\n        if(s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o'\
    \ || s[i] == 'u') {\n            vowels++;\n        }\n    }\n    return vowels;",
  "    long vowels = 0;\n    long size = s.size();\n    for(int i = 0; i < size; i++)\
    \ {\n        if(s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i]\
    \ == 'u') {\n            vowels++;\n        }\n    }\n    return vowels;", " \
    \   int vowels[] = { 'a', 'e', 'i', 'o', 'u', 'y' };\n    int count = 0;\n   \
    \ for (int i = 0; i < s.length(); i++) {\n        if (vowels[i] == s[i]) {\n \
    \           count++;\n        }\n    }\n    return count;", "    long count =\
    \ 0;\n    for (auto c : s) {\n        if (c == 'a' || c == 'e' || c == 'i' ||\
    \ c == 'o' || c == 'u') {\n            count++;\n        }\n    }\n    return\
    \ count;", "    int vowels[] = { 'a', 'e', 'i', 'o', 'u' };\n    int count = 0;\n\
    \    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == 'y') {\n    \
    \        i++;\n        }\n        for (int j = 0; j < 5; j++) {\n            if\
    \ (s[i] == vowels[j]) {\n                count++;\n            }\n        }\n\
    \    }\n    return count;", "    int vowel_count = 0;\n    for (int i = 0; i <\
    \ s.length(); i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' ||\
    \ s[i] == 'o' || s[i] == 'u') {\n            vowel_count++;\n        }\n    }\n\
    \    return vowel_count;", "    long vowels = 0;\n    for (int i = 0; i < s.length();\
    \ i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o'\
    \ || s[i] == 'u') {\n            vowels++;\n        }\n    }\n    return vowels;",
  "    long vowels = 0;\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i]\
    \ == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n    \
    \        vowels++;\n        }\n    }\n    return vowels;", "    long count = 0;\n\
    \    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == 'a' || s[i] ==\
    \ 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u')\n            count++;\n  \
    \  }\n    return count;", "    long vowels = 0;\n    for (auto &c : s) {\n   \
    \     if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n      \
    \      vowels++;\n        }\n    }\n    return vowels;", "    int vowels[] = {\
    \ 'a', 'e', 'i', 'o', 'u' };\n    int n = s.size();\n    long ans = 0;\n    for\
    \ (int i = 0; i < n; i++) {\n        if (s[i] == 'y') {\n            ans += 1;\n\
    \        }\n        for (int j = 0; j < 5; j++) {\n            if (s[i] == vowels[j])\
    \ {\n                ans += 1;\n            }\n        }\n    }\n    return ans;",
  "    long vowels = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n    \
    \        vowels++;\n        }\n    }\n    return vowels;", "    long vowels =\
    \ 0;\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == 'a' || s[i]\
    \ == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n            vowels++;\n\
    \        }\n    }\n    return vowels;", "    long vowels = 0;\n    long len =\
    \ s.length();\n    long i = 0;\n    while (i < len) {\n        if (s[i] == 'a'\
    \ || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n           \
    \ vowels++;\n        }\n        i++;\n    }\n    return vowels;", "    long vowels\
    \ = 0;\n    for(auto &c: s) {\n        if(c == 'a' || c == 'e' || c == 'i' ||\
    \ c == 'o' || c == 'u') {\n            vowels++;\n        }\n    }\n    return\
    \ vowels;", "    long count = 0;\n    for (auto c : s) {\n        if (c == 'a'\
    \ || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            count++;\n \
    \       }\n    }\n    return count;", "    long vowels = 0;\n    for (auto c :\
    \ s) {\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\
    \ {\n            vowels++;\n        }\n    }\n    return vowels;", "    long vowels\
    \ = 0;\n    for (auto c : s) {\n        if (c == 'a' || c == 'e' || c == 'i' ||\
    \ c == 'o' || c == 'u') {\n            vowels++;\n        }\n    }\n    return\
    \ vowels;", "    long vowels = 0;\n    for (char c : s) {\n        if (c == 'a'\
    \ || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            vowels++;\n\
    \        }\n    }\n    return vowels;", "    int vowels[] = { 'a', 'e', 'i', 'o',\
    \ 'u' };\n    int count = 0;\n    for (int i = 0; i < s.length(); i++) {\n   \
    \     if (s[i] == 'y') {\n            count++;\n        }\n        for (int j\
    \ = 0; j < 5; j++) {\n            if (s[i] == vowels[j]) {\n                count++;\n\
    \            }\n        }\n    }\n    return count;", "    long vowels = 0;\n\
    \    long len = s.length();\n    for(long i = 0; i < len; i++) {\n        if(s[i]\
    \ == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n    \
    \        vowels++;\n        }\n    }\n    return vowels;", "    int vowels[] =\
    \ { 'a', 'e', 'i', 'o', 'u' };\n    int n = s.size();\n    int count = 0;\n  \
    \  for (int i = 0; i < n; i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i]\
    \ == 'i' || s[i] == 'o' || s[i] == 'u') {\n            count++;\n        }\n \
    \   }\n    return count;", "    long vowels = 0;\n    for(int i = 0; i < s.length();\
    \ i++) {\n        if(s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o'\
    \ || s[i] == 'u') {\n            vowels++;\n        }\n    }\n    return vowels;",
  '    // code here', "    long vowels = 0;\n    for(int i = 0; i < s.length(); i++)\
    \ {\n        if(s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i]\
    \ == 'u') {\n            vowels++;\n        }\n    }\n    return vowels;", " \
    \   long vowels = 0;\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i]\
    \ == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n    \
    \        vowels++;\n        }\n    }\n    return vowels;", "    long vowels =\
    \ 0;\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == 'a' || s[i]\
    \ == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n            vowels++;\n\
    \        }\n    }\n    return vowels;", "    int vowels[] = { 'a', 'e', 'i', 'o',\
    \ 'u' };\n    int n = s.size();\n    int count = 0;\n    for (int i = 0; i < n;\
    \ i++) {\n        if (s[i] == 'y') {\n            count++;\n        }\n      \
    \  for (int j = 0; j < 5; j++) {\n            if (s[i] == vowels[j]) {\n     \
    \           count++;\n            }\n        }\n    }\n    return count;", " \
    \   long vowels = 0;\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i]\
    \ == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n    \
    \        vowels++;\n        }\n    }\n    return vowels;", "    long vowels =\
    \ 0;\n    long n = s.length();\n    for(int i = 0; i < n; i++) {\n        if(s[i]\
    \ == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n    \
    \        vowels++;\n        }\n    }\n    return vowels;", "    long vowels =\
    \ 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == 'a' || s[i]\
    \ == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u' || s[i] == 'y') {\n    \
    \        vowels++;\n        }\n    }\n    return vowels;", "    long vowels =\
    \ 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == 'a' || s[i]\
    \ == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n            vowels++;\n\
    \        }\n    }\n    return vowels;", "    int vowels[] = { 'a', 'e', 'i', 'o',\
    \ 'u' };\n    int n = s.size();\n    long ans = 0;\n    for (int i = 0; i < n;\
    \ i++) {\n        if (s[i] == 'y') {\n            ans += 1;\n        }\n     \
    \   for (int j = 0; j < 5; j++) {\n            if (s[i] == vowels[j]) {\n    \
    \            ans += 1;\n            }\n        }\n    }\n    return ans;", " \
    \   long vowels = 0;\n    for (auto c : s) {\n        if (c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u') {\n            vowels++;\n        }\n \
    \   }\n    return vowels;", "    long vowels = 0;\n    for (int i = 0; i < s.length();\
    \ i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o'\
    \ || s[i] == 'u') {\n            vowels++;\n        }\n    }\n    return vowels;",
  "    int vowels[] = { 'a', 'e', 'i', 'o', 'u' };\n    int count = 0;\n    for (int\
    \ i = 0; i < s.length(); i++) {\n        if (s[i] == 'y') {\n            i++;\n\
    \        }\n        for (int j = 0; j < 5; j++) {\n            if (s[i] == vowels[j])\
    \ {\n                count++;\n            }\n        }\n    }\n    return count;",
  "    long count = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n    \
    \        count++;\n        }\n    }\n    return count;", "    long vowels = 0;\n\
    \    long len = s.length();\n    for (int i = 0; i < len; i++) {\n        if (s[i]\
    \ == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n    \
    \        vowels++;\n        }\n    }\n    return vowels;", "    long count = 0;\n\
    \    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == 'a' || s[i] ==\
    \ 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n            count++;\n\
    \        }\n    }\n    return count;", "    long count = 0;\n    for (int i =\
    \ 0; i < s.length(); i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] ==\
    \ 'i' || s[i] == 'o' || s[i] == 'u') {\n            count++;\n        }\n    }\n\
    \    return count;", "    long vowels = 0;\n    for (int i = 0; i < s.length();\
    \ i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o'\
    \ || s[i] == 'u') {\n            vowels++;\n        }\n    }\n    return vowels;",
  "    long count = 0;\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i]\
    \ == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u')\n      \
    \      count++;\n    }\n    return count;", "    int vowels[] = { 'a', 'e', 'i',\
    \ 'o', 'u' };\n    int n = s.size();\n    int count = 0;\n    for (int i = 0;\
    \ i < n; i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i]\
    \ == 'o' || s[i] == 'u') {\n            count++;\n        }\n    }\n    return\
    \ count;", "    long count = 0;\n    for(int i = 0; i < s.length(); i++) {\n \
    \       if(s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] ==\
    \ 'u') {\n            count++;\n        }\n    }\n    return count;", "    int\
    \ vowels[] = { 'a', 'e', 'i', 'o', 'u' };\n    int n = s.size();\n    long count\
    \ = 0;\n    for (int i = 0; i < n; i++) {\n        if (s[i] == 'y') {\n      \
    \      count += 1;\n        }\n    }\n    for (int i = 0; i < n; i++) {\n    \
    \    if (vowels.find(s[i]) != -1) {\n            count += 1;\n        }\n    }\n\
    \    return count;", "    int vowels[] = { 'a', 'e', 'i', 'o', 'u' };\n    int\
    \ count = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (vowels[i]\
    \ == s[s.length() - 1]) {\n            count++;\n        }\n    }\n    return\
    \ count;", "    long vowels = 0;\n    for (auto c : s) {\n        if (c == 'a'\
    \ || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            vowels++;\n\
    \        }\n    }\n    return vowels;", "    long vowels = 0;\n    long n = s.length();\n\
    \    for (int i = 0; i < n; i++) {\n        char c = s[i];\n        if (c == 'a'\
    \ || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            vowels++;\n\
    \        }\n    }\n    return vowels;", "    long vowels = 0;\n    for (auto &c\
    \ : s) {\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\
    \ {\n            vowels++;\n        }\n    }\n    return vowels;", "    long count\
    \ = 0;\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == 'a' || s[i]\
    \ == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n            count++;\n\
    \        }\n    }\n    return count;", "    long vowels = 0;\n    for (auto c\
    \ : s) {\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\
    \ {\n            vowels++;\n        }\n    }\n    return vowels;", "    long vowels\
    \ = 0;\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == 'a' || s[i]\
    \ == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n            vowels++;\n\
    \        }\n    }\n    return vowels;", "    long vowels = 0;\n    for (int i\
    \ = 0; i < s.length(); i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i]\
    \ == 'i' || s[i] == 'o' || s[i] == 'u') {\n            vowels++;\n        }\n\
    \    }\n    return vowels;", "    long vowels = 0;\n    for (auto c : s) {\n \
    \       if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n    \
    \        vowels++;\n        }\n    }\n    return vowels;", "    long vowels =\
    \ 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == 'a' || s[i]\
    \ == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n            vowels++;\n\
    \        }\n    }\n    return vowels;", "    long vowels = 0;\n    for(int i =\
    \ 0; i < s.length(); i++) {\n        if(s[i] == 'a' || s[i] == 'e' || s[i] ==\
    \ 'i' || s[i] == 'o' || s[i] == 'u') {\n            vowels++;\n        }\n   \
    \ }\n    return vowels;", "    long vowels = 0;\n    for (auto c : s) {\n    \
    \    if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n       \
    \     vowels++;\n        }\n    }\n    return vowels;", "    long vowels = 0;\n\
    \    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == 'a' || s[i] ==\
    \ 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n            vowels++;\n\
    \        }\n    }\n    return vowels;", "    long count = 0;\n    for (int i =\
    \ 0; i < s.length(); i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] ==\
    \ 'i' || s[i] == 'o' || s[i] == 'u') {\n            count++;\n        }\n    }\n\
    \    return count;", "    long vowels = 0;\n    for (int i = 0; i < s.length();\
    \ i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o'\
    \ || s[i] == 'u') {\n            vowels++;\n        }\n    }\n    return vowels;",
  "    long count = 0;\n    for (auto c : s) {\n        if (c == 'a' || c == 'e' ||\
    \ c == 'i' || c == 'o' || c == 'u') {\n            count++;\n        }\n    }\n\
    \    return count;", "    int vowels[] = { 'a', 'e', 'i', 'o', 'u' };\n    int\
    \ count = 0;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == 'y'\
    \ && i != s.size() - 1) {\n            count++;\n        }\n        for (int j\
    \ = 0; j < 5; j++) {\n            if (s[i] == vowels[j]) {\n                count++;\n\
    \            }\n        }\n    }\n    return count;", "    long vowels = 0;\n\
    \    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == 'a' || s[i] ==\
    \ 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n            vowels++;\n\
    \        }\n    }\n    return vowels;", "    long count = 0;\n    for(int i =\
    \ 0; i < s.length(); i++) {\n        if(s[i] == 'a' || s[i] == 'e' || s[i] ==\
    \ 'i' || s[i] == 'o' || s[i] == 'u') {\n            count++;\n        }\n    }\n\
    \    return count;", "    int vowels[] = { 'a', 'e', 'i', 'o', 'u' };\n    int\
    \ n = s.size();\n    int count = 0;\n    for (int i = 0; i < n; i++) {\n     \
    \   if (vowels[i] == s[n - 1]) {\n            count++;\n        }\n    }\n   \
    \ return count;", "    long vowels = 0;\n    long len = s.length();\n    for(int\
    \ i = 0; i < len; i++){\n        if(s[i] == 'a' || s[i] == 'e' || s[i] == 'i'\
    \ || s[i] == 'o' || s[i] == 'u'){\n            vowels++;\n        }\n    }\n \
    \   return vowels;", "    long vowels = 0;\n    long len = s.length();\n    for(int\
    \ i = 0; i < len; i++)\n    {\n        if(s[i] == 'a' || s[i] == 'e' || s[i] ==\
    \ 'i' || s[i] == 'o' || s[i] == 'u')\n        {\n            vowels++;\n     \
    \   }\n    }\n    return vowels;", "    long count = 0;\n    for (auto c : s)\
    \ {\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n\
    \            count++;\n        }\n    }\n    return count;", "    long vowels\
    \ = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == 'a' ||\
    \ s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n            vowels++;\n\
    \        }\n    }\n    return vowels;", "    long vowels = 0;\n    for (auto c\
    \ : s) {\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\
    \ {\n            vowels++;\n        }\n    }\n    return vowels;", "    long vowels\
    \ = 0;\n    for (auto c : s) {\n        if (c == 'a' || c == 'e' || c == 'i' ||\
    \ c == 'o' || c == 'u') {\n            vowels++;\n        }\n    }\n    return\
    \ vowels;", "    long vowels = 0;\n    for (int i = 0; i < s.length(); i++) {\n\
    \        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i]\
    \ == 'u') {\n            vowels++;\n        }\n    }\n    return vowels;", " \
    \   long vowels = 0;\n    for (auto c : s) {\n        if (c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u') {\n            vowels++;\n        }\n \
    \   }\n    return vowels;", "    int vowels[] = { 'a', 'e', 'i', 'o', 'u' };\n\
    \    int n = s.size();\n    int count = 0;\n    for (int i = 0; i < n; i++) {\n\
    \        if (s[i] == 'y') {\n            count += 1;\n        }\n        for (int\
    \ j = 0; j < 5; j++) {\n            if (s[i] == vowels[j]) {\n               \
    \ count += 1;\n            }\n        }\n    }\n    return count;", '    // code
    here', "    long count = 0;\n    for (int i = 0; i < s.length(); i++) {\n    \
    \    if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u')\
    \ {\n            count++;\n        }\n    }\n    return count;", "    long count\
    \ = 0;\n    for (auto c : s) {\n        if (c == 'a' || c == 'e' || c == 'i' ||\
    \ c == 'o' || c == 'u') {\n            count++;\n        }\n    }\n    return\
    \ count;", "    int vowels[] = { 'a', 'e', 'i', 'o', 'u' };\n    int count = 0;\n\
    \    for (int i = 0; i < s.length(); i++) {\n        if (vowels[i] == s.at(i))\
    \ {\n            count++;\n        }\n    }\n    return count;", "    int vowels[]\
    \ = { 'a', 'e', 'i', 'o', 'u' };\n    int n = s.size();\n    int count = 0;\n\
    \    for (int i = 0; i < n; i++) {\n        if (s[i] == 'y') {\n            count\
    \ += 1;\n        }\n        for (int j = 0; j < 5; j++) {\n            if (s[i]\
    \ == vowels[j]) {\n                count += 1;\n            }\n        }\n   \
    \ }\n    return count;", "    long count = 0;\n    for (int i = 0; i < s.length();\
    \ i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o'\
    \ || s[i] == 'u') {\n            count++;\n        }\n    }\n    return count;",
  "    long vowels = 0;\n    for(long i = 0; i < s.length(); i++) {\n        if(s[i]\
    \ == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u')\n      \
    \      vowels++;\n    }\n    return vowels;", "    long vowels = 0;\n    for (int\
    \ i = 0; i < s.length(); i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i]\
    \ == 'i' || s[i] == 'o' || s[i] == 'u') {\n            vowels++;\n        }\n\
    \    }\n    return vowels;", "    long vowels = 0;\n    for(int i = 0; i < s.length();\
    \ i++) {\n        if(s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o'\
    \ || s[i] == 'u') {\n            vowels++;\n        }\n    }\n    return vowels;",
  "    long count = 0;\n    for (auto c : s) {\n        if (c == 'a' || c == 'e' ||\
    \ c == 'i' || c == 'o' || c == 'u') {\n            count++;\n        }\n    }\n\
    \    return count;", "    long vowels = 0;\n    for (int i = 0; i < s.length();\
    \ i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o'\
    \ || s[i] == 'u') {\n            vowels++;\n        }\n    }\n    return vowels;",
  "    long vowels = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u')\n      \
    \      vowels++;\n    }\n    return vowels;", "    long vowels = 0;\n    for (auto\
    \ c : s) {\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\
    \ {\n            vowels++;\n        }\n    }\n    return vowels;", "    long vowels\
    \ = 0;\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == 'a' || s[i]\
    \ == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n            vowels++;\n\
    \        }\n    }\n    return vowels;", "    long count = 0;\n    for (int i =\
    \ 0; i < s.length(); i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] ==\
    \ 'i' || s[i] == 'o' || s[i] == 'u') {\n            count++;\n        }\n    }\n\
    \    return count;", "    long count = 0;\n    for (auto c : s) {\n        if\
    \ (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            count++;\n\
    \        }\n    }\n    return count;", "    int vowels[] = { 'a', 'e', 'i', 'o',\
    \ 'u' };\n    int vowels_count = 0;\n    for (int i = 0; i < s.length(); i++)\
    \ {\n        if (vowels[i] == s.at(i)) {\n            vowels_count++;\n      \
    \  }\n    }\n    return vowels_count;", "    long count = 0;\n    for (int i =\
    \ 0; i < s.length(); i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] ==\
    \ 'i' || s[i] == 'o' || s[i] == 'u') {\n            count++;\n        }\n    }\n\
    \    return count;", "    long vowels = 0;\n    long n = s.length();\n    for\
    \ (int i = 0; i < n; i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] ==\
    \ 'i' || s[i] == 'o' || s[i] == 'u')\n            vowels++;\n    }\n    return\
    \ vowels;", "    long vowels = 0;\n    for (char c : s) {\n        if (c == 'a'\
    \ || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            vowels++;\n\
    \        }\n    }\n    return vowels;", "    long vowels = 0;\n    for(int i =\
    \ 0; i < s.length(); i++) {\n        if(s[i] == 'a' || s[i] == 'e' || s[i] ==\
    \ 'i' || s[i] == 'o' || s[i] == 'u') {\n            vowels++;\n        }\n   \
    \ }\n    return vowels;", "    long vowels = 0;\n    for (auto c : s) {\n    \
    \    if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n       \
    \     vowels++;\n        }\n    }\n    return vowels;", "    long vowels = 0;\n\
    \    long len = s.length();\n    for(int i = 0; i < len; i++){\n        if(s[i]\
    \ == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u'){\n     \
    \       vowels++;\n        }\n    }\n    return vowels;", "    long vowels = 0;\n\
    \    for (char c : s) {\n        if (c == 'a' || c == 'e' || c == 'i' || c ==\
    \ 'o' || c == 'u') {\n            vowels++;\n        }\n    }\n    return vowels;",
  "    long vowels = 0;\n    long len = s.length();\n    for (int i = 0; i < len;\
    \ i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o'\
    \ || s[i] == 'u') {\n            vowels++;\n        }\n    }\n    return vowels;",
  "    long vowels = 0;\n    for(auto &c: s) {\n        if(c == 'a' || c == 'e' ||\
    \ c == 'i' || c == 'o' || c == 'u') {\n            vowels++;\n        }\n    }\n\
    \    return vowels;", "    long vowels = 0;\n    long n = s.length();\n    for(int\
    \ i = 0; i < n; i++) {\n        if(s[i] == 'a' || s[i] == 'e' || s[i] == 'i' ||\
    \ s[i] == 'o' || s[i] == 'u') {\n            vowels++;\n        }\n    }\n   \
    \ return vowels;", "    long count = 0;\n    for (auto &c : s) {\n        if (c\
    \ == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            count++;\n\
    \        }\n    }\n    return count;", "    long count = 0;\n    for (char c :\
    \ s) {\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\
    \ {\n            count++;\n        }\n    }\n    return count;", "    long vowels\
    \ = 0;\n    for (char c : s) {\n        if (c == 'a' || c == 'e' || c == 'i' ||\
    \ c == 'o' || c == 'u') {\n            vowels++;\n        }\n    }\n    return\
    \ vowels;", "    long vowels = 0;\n    for (auto &c : s) {\n        if (c == 'a'\
    \ || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            vowels++;\n\
    \        }\n    }\n    return vowels;", "    long vowels = 0;\n    for (auto c\
    \ : s) {\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\
    \ {\n            vowels++;\n        }\n    }\n    return vowels;", '    // code
    here', "    long vowels = 0;\n    for (int i = 0; i < s.length(); i++) {\n   \
    \     if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] ==\
    \ 'u') {\n            vowels++;\n        }\n    }\n    return vowels;", "    long\
    \ vowels = 0;\n    for (auto c : s) {\n        if (c == 'a' || c == 'e' || c ==\
    \ 'i' || c == 'o' || c == 'u') {\n            vowels++;\n        }\n    }\n  \
    \  return vowels;", "    long vowels = 0;\n    long size = s.size();\n    for(int\
    \ i = 0; i < size; i++) {\n        if(s[i] == 'a' || s[i] == 'e' || s[i] == 'i'\
    \ || s[i] == 'o' || s[i] == 'u') {\n            vowels++;\n        }\n    }\n\
    \    return vowels;", "    long vowels = 0;\n    for(int i = 0; i < s.length();\
    \ i++) {\n        if(s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o'\
    \ || s[i] == 'u') {\n            vowels++;\n        }\n    }\n    return vowels;",
  "    long vowels = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n    \
    \        vowels++;\n        }\n    }\n    return vowels;", "    long count = 0;\n\
    \    for (auto c : s) {\n        if (c == 'a' || c == 'e' || c == 'i' || c ==\
    \ 'o' || c == 'u') {\n            count++;\n        }\n    }\n    return count;",
  "    long vowels = 0;\n    for (auto c : s) {\n        if (c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u') {\n            vowels++;\n        }\n \
    \   }\n    return vowels;", "    long vowels = 0;\n    for (auto c : s) {\n  \
    \      if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n     \
    \       vowels++;\n        }\n    }\n    return vowels;", "    long vowels = 0;\n\
    \    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == 'a' || s[i] ==\
    \ 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n            vowels++;\n\
    \        }\n    }\n    return vowels;", "    long vowels = 0;\n    long len =\
    \ s.length();\n    for(long i = 0; i < len; i++) {\n        if(s[i] == 'a' ||\
    \ s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n            vowels++;\n\
    \        }\n    }\n    return vowels;", "    long vowels = 0;\n    for(int i =\
    \ 0; i < s.length(); i++) {\n        if(s[i] == 'a' || s[i] == 'e' || s[i] ==\
    \ 'i' || s[i] == 'o' || s[i] == 'u')\n            vowels++;\n    }\n    return\
    \ vowels;", "    long vowels = 0;\n    for (auto c : s) {\n        if (c == 'a'\
    \ || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            vowels++;\n\
    \        }\n    }\n    return vowels;", "    long vowels = 0;\n    long n = s.length();\n\
    \    for (int i = 0; i < n; i++) {\n        if (s[i] == 'a' || s[i] == 'e' ||\
    \ s[i] == 'i' || s[i] == 'o' || s[i] == 'u' || s[i] == 'y') {\n            vowels++;\n\
    \        }\n    }\n    return vowels;", "    long vowels = 0;\n    for(long i\
    \ = 0; i < s.length(); i++) {\n        if(s[i] == 'a' || s[i] == 'e' || s[i] ==\
    \ 'i' || s[i] == 'o' || s[i] == 'u') {\n            vowels++;\n        }\n   \
    \ }\n    return vowels;", "    long vowels = 0;\n    long size = s.size();\n \
    \   for(int i = 0; i < size; i++) {\n        if(s[i] == 'a' || s[i] == 'e' ||\
    \ s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n            vowels++;\n      \
    \  }\n    }\n    return vowels;", "    long vowels = 0;\n    long len = s.length();\n\
    \    for(int i = 0; i < len; i++){\n        if(s[i] == 'a' || s[i] == 'e' || s[i]\
    \ == 'i' || s[i] == 'o' || s[i] == 'u'){\n            vowels++;\n        }\n \
    \   }\n    return vowels;", "    long vowels = 0;\n    long len = s.length();\n\
    \    for(long i = 0; i < len; i++) {\n        if(s[i] == 'a' || s[i] == 'e' ||\
    \ s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n            vowels++;\n      \
    \  }\n    }\n    return vowels;", "    long vowels = 0;\n    long len = s.length();\n\
    \    for (int i = 0; i < len; i++) {\n        if (s[i] == 'a' || s[i] == 'e' ||\
    \ s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n            vowels++;\n      \
    \  }\n    }\n    return vowels;", "    long vowels = 0;\n    for(auto &c : s)\
    \ {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n\
    \            vowels++;\n        }\n    }\n    return vowels;", "    long vowels\
    \ = 0;\n    long len = s.length();\n    for(long i = 0; i < len; ++i) {\n    \
    \    if(s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u')\
    \ {\n            ++vowels;\n        }\n    }\n    return vowels;", "    long vowels\
    \ = 0;\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == 'a' || s[i]\
    \ == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n            vowels++;\n\
    \        }\n    }\n    return vowels;", '    // code here', "    long vowels =\
    \ 0;\n    for (auto c : s) {\n        if (c == 'a' || c == 'e' || c == 'i' ||\
    \ c == 'o' || c == 'u') {\n            vowels++;\n        }\n    }\n    return\
    \ vowels;", "    long vowels = 0;\n    for (auto c : s) {\n        if (c == 'a'\
    \ || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            vowels++;\n\
    \        }\n    }\n    return vowels;", "    long count = 0;\n    for(char c :\
    \ s) {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n\
    \            count++;\n        }\n    }\n    return count;", "    long vowels\
    \ = 0;\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == 'a' || s[i]\
    \ == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n            vowels++;\n\
    \        }\n    }\n    return vowels;", "    long vowels = 0;\n    long size =\
    \ s.size();\n    long i = 0;\n    while (i < size) {\n        if (s[i] == 'a'\
    \ || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n           \
    \ vowels++;\n        }\n        i++;\n    }\n    return vowels;", "    long count\
    \ = 0;\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == 'a' || s[i]\
    \ == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n            count++;\n\
    \        }\n    }\n    return count;", "    long vowels = 0;\n    long len = s.length();\n\
    \    for(int i = 0; i < len; i++){\n        if(s[i] == 'a' || s[i] == 'e' || s[i]\
    \ == 'i' || s[i] == 'o' || s[i] == 'u'){\n            vowels++;\n        }\n \
    \   }\n    return vowels;", "    long vowels = 0;\n    for (auto c : s) {\n  \
    \      if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n     \
    \       vowels++;\n        }\n    }\n    return vowels;", "    long count = 0;\n\
    \    for (auto c : s) {\n        if (c == 'a' || c == 'e' || c == 'i' || c ==\
    \ 'o' || c == 'u') {\n            count++;\n        }\n    }\n    return count;",
  "    long vowels = 0;\n    long len = s.length();\n    for (int i = 0; i < len;\
    \ i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o'\
    \ || s[i] == 'u') {\n            vowels++;\n        }\n    }\n    return vowels;",
  "    long vowels = 0;\n    long len = s.length();\n    for (int i = 0; i < len;\
    \ i++) {\n        char c = s[i];\n        if (c == 'a' || c == 'e' || c == 'i'\
    \ || c == 'o' || c == 'u') {\n            vowels++;\n        }\n    }\n    return\
    \ vowels;", "    int vowels[] = { 'a', 'e', 'i', 'o', 'u' };\n    int count =\
    \ 0;\n    for (int i = 0; i < s.size(); i++) {\n        if (vowels[s[i] - 'a']\
    \ == 1) {\n            count++;\n        }\n    }\n    return count;", "    long\
    \ vowels = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] ==\
    \ 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n       \
    \     vowels++;\n        }\n    }\n    return vowels;", "    long vowels = 0;\n\
    \    long len = s.length();\n    for(int i = 0; i < len; i++) {\n        if(s[i]\
    \ == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n    \
    \        vowels++;\n        }\n    }\n    return vowels;", "    long vowels =\
    \ 0;\n    for (auto c : s) {\n        if (c == 'a' || c == 'e' || c == 'i' ||\
    \ c == 'o' || c == 'u') {\n            vowels++;\n        }\n    }\n    return\
    \ vowels;", "    long count = 0;\n    for (auto &c : s) {\n        if (c == 'a'\
    \ || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            count++;\n \
    \       }\n    }\n    return count;", "    long vowels = 0;\n    long len = s.length();\n\
    \    for(long i = 0; i < len; i++)\n    {\n        if(s[i] == 'a' || s[i] == 'e'\
    \ || s[i] == 'i' || s[i] == 'o' || s[i] == 'u')\n        {\n            vowels++;\n\
    \        }\n    }\n    return vowels;", "    long vowels = 0;\n    for (int i\
    \ = 0; i < s.length(); i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i]\
    \ == 'i' || s[i] == 'o' || s[i] == 'u') {\n            vowels++;\n        }\n\
    \    }\n    return vowels;", "    long count = 0;\n    for(int i = 0; i < s.length();\
    \ i++) {\n        if(s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o'\
    \ || s[i] == 'u')\n            count++;\n    }\n    return count;", "    long\
    \ vowels = 0;\n    long len = s.length();\n    for (int i = 0; i < len; i++) {\n\
    \        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i]\
    \ == 'u') {\n            vowels++;\n        }\n    }\n    return vowels;", " \
    \   long vowels = 0;\n    for (auto c : s) {\n        if (c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u') {\n            vowels++;\n        }\n \
    \   }\n    return vowels;", "    long vowels = 0;\n    for (auto &c : s) {\n \
    \       if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n    \
    \        vowels++;\n        }\n    }\n    return vowels;", "    long vowels =\
    \ 0;\n    for (auto c : s) {\n        if (c == 'a' || c == 'e' || c == 'i' ||\
    \ c == 'o' || c == 'u') {\n            vowels++;\n        }\n    }\n    return\
    \ vowels;", "    long vowels = 0;\n    long len = s.length();\n    for (int i\
    \ = 0; i < len; i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i'\
    \ || s[i] == 'o' || s[i] == 'u') {\n            vowels++;\n        }\n    }\n\
    \    return vowels;", "    long count = 0;\n    for (int i = 0; i < s.length();\
    \ i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o'\
    \ || s[i] == 'u') {\n            count++;\n        }\n    }\n    return count;",
  "    long vowels = 0;\n    long len = s.length();\n    for(int i = 0; i < len; i++)\n\
    \    {\n        if(s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' ||\
    \ s[i] == 'u')\n        {\n            vowels++;\n        }\n    }\n    return\
    \ vowels;", "    long vowels = 0;\n    for (auto c : s) {\n        if (c == 'a'\
    \ || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            vowels++;\n\
    \        }\n    }\n    return vowels;", "    long vowels = 0;\n    for(int i =\
    \ 0; i < s.length(); i++) {\n        if(s[i] == 'a' || s[i] == 'e' || s[i] ==\
    \ 'i' || s[i] == 'o' || s[i] == 'u') {\n            vowels++;\n        }\n   \
    \ }\n    return vowels;", "    long vowels = 0;\n    for(int i = 0; i < s.length();\
    \ i++) {\n        if(s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o'\
    \ || s[i] == 'u') {\n            vowels++;\n        }\n    }\n    return vowels;",
  "    int vowels[] = { 'a', 'e', 'i', 'o', 'u' };\n    int count = 0;\n    for (int\
    \ i = 0; i < s.length(); i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i]\
    \ == 'i' || s[i] == 'o' || s[i] == 'u') {\n            count++;\n        }\n \
    \   }\n    return count;", "    long count = 0;\n    for (auto c : s) {\n    \
    \    if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n       \
    \     count++;\n        }\n    }\n    return count;", "    int vowels[] = { 'a',\
    \ 'e', 'i', 'o', 'u' };\n    int n = s.size();\n    int count = 0;\n    for (int\
    \ i = 0; i < n; i++) {\n        if (s[i] == 'y') {\n            count++;\n   \
    \     }\n        for (int j = 0; j < 5; j++) {\n            if (s[i] == vowels[j])\
    \ {\n                count++;\n            }\n        }\n    }\n    return count;",
  "    long vowels = 0;\n    long len = s.length();\n    long i;\n    for (i = 0;\
    \ i < len; i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i]\
    \ == 'o' || s[i] == 'u') {\n            vowels++;\n        }\n    }\n    return\
    \ vowels;", "    long vowels = 0;\n    for (char c : s) {\n        if (c == 'a'\
    \ || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            vowels++;\n\
    \        }\n    }\n    return vowels;", "    long vowels = 0;\n    for (int i\
    \ = 0; i < s.length(); i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i]\
    \ == 'i' || s[i] == 'o' || s[i] == 'u')\n            vowels++;\n    }\n    return\
    \ vowels;", "    long vowels = 0;\n    for (int i = 0; i < s.length(); i++) {\n\
    \        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i]\
    \ == 'u' || s[i] == 'y') {\n            vowels++;\n        }\n    }\n    return\
    \ vowels;", "    long vowels = 0;\n    long len = s.length();\n    for(int i =\
    \ 0; i < len; i++){\n        if(s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i]\
    \ == 'o' || s[i] == 'u'){\n            vowels++;\n        }\n    }\n    return\
    \ vowels;", "    long vowels = 0;\n    for (auto c : s) {\n        if (c == 'a'\
    \ || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            vowels++;\n\
    \        }\n    }\n    return vowels;", "    long count = 0;\n    for (auto c\
    \ : s) {\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\
    \ {\n            count++;\n        }\n    }\n    return count;", "    long vowels\
    \ = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == 'a' ||\
    \ s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n            vowels++;\n\
    \        }\n    }\n    return vowels;", "    int vowels[] = { 'a', 'e', 'i', 'o',\
    \ 'u' };\n    int n = s.size();\n    int count = 0;\n    for (int i = 0; i < n;\
    \ i++) {\n        if (vowels[i] == s[n - i - 1]) {\n            count++;\n   \
    \     }\n    }\n    return count;", "    long vowels = 0;\n    for(int i = 0;\
    \ i < s.length(); i++) {\n        if(s[i] == 'a' || s[i] == 'e' || s[i] == 'i'\
    \ || s[i] == 'o' || s[i] == 'u') {\n            vowels++;\n        }\n    }\n\
    \    return vowels;", "    long vowels = 0;\n    for (int i = 0; i < s.length();\
    \ i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o'\
    \ || s[i] == 'u') {\n            vowels++;\n        }\n    }\n    return vowels;",
  "    int vowels[] = { 'a', 'e', 'i', 'o', 'u' };\n    int vowels_count = 0;\n  \
    \  for (int i = 0; i < s.length(); i++) {\n        if (vowels[i] == s[s.length()\
    \ - 1]) {\n            vowels_count++;\n        }\n    }\n    return vowels_count;",
  "    long vowels = 0;\n    for (auto c : s) {\n        if (c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u') {\n            vowels++;\n        }\n \
    \   }\n    return vowels;", "    long count = 0;\n    for (auto c : s) {\n   \
    \     if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n      \
    \      count++;\n        }\n    }\n    return count;", "    long vowels = 0;\n\
    \    long len = s.length();\n    for(int i = 0; i < len; i++){\n        if(s[i]\
    \ == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u'){\n     \
    \       vowels++;\n        }\n    }\n    return vowels;", "    long vowels = 0;\n\
    \    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == 'a' || s[i] ==\
    \ 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n            vowels++;\n\
    \        }\n    }\n    return vowels;", "    long vowels = 0;\n    for (auto c\
    \ : s) {\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\
    \ {\n            vowels++;\n        }\n    }\n    return vowels;", "    long vowels\
    \ = 0;\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == 'a' || s[i]\
    \ == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n            vowels++;\n\
    \        }\n    }\n    return vowels;", "    long count = 0;\n    for(int i =\
    \ 0; i < s.length(); i++) {\n        if(s[i] == 'a' || s[i] == 'e' || s[i] ==\
    \ 'i' || s[i] == 'o' || s[i] == 'u')\n            count++;\n    }\n    return\
    \ count;", "    long vowels = 0;\n    for (int i = 0; i < s.length(); i++) {\n\
    \        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i]\
    \ == 'u') {\n            vowels++;\n        }\n    }\n    return vowels;", " \
    \   long count = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n    \
    \        count++;\n        }\n    }\n    return count;", "    long vowels = 0;\n\
    \    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == 'a' || s[i] ==\
    \ 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n            vowels++;\n\
    \        }\n    }\n    return vowels;", "    long vowels = 0;\n    for (auto &c\
    \ : s) {\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\
    \ {\n            vowels++;\n        }\n    }\n    return vowels;", "    long vowels\
    \ = 0;\n    for (auto &c : s) {\n        if (c == 'a' || c == 'e' || c == 'i'\
    \ || c == 'o' || c == 'u') {\n            vowels++;\n        }\n    }\n    return\
    \ vowels;", "    long count = 0;\n    for (auto &c : s) {\n        if (c == 'a'\
    \ || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            count++;\n \
    \       }\n    }\n    return count;", "    long vowels = 0;\n    for (auto &c\
    \ : s) {\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\
    \ {\n            vowels++;\n        }\n    }\n    return vowels;", "    long vowels\
    \ = 0;\n    for (auto c : s) {\n        if (c == 'a' || c == 'e' || c == 'i' ||\
    \ c == 'o' || c == 'u') {\n            vowels++;\n        }\n    }\n    return\
    \ vowels;", "    long count = 0;\n    for(int i = 0; i < s.length(); i++) {\n\
    \        if(s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] ==\
    \ 'u') {\n            count++;\n        }\n    }\n    return count;"]
stop_tokens:
- "\n}"

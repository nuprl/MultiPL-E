language: cpp
name: HumanEval_58_common
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    for(long i =\
    \ 0; i < l1.size(); i++) {\n        for(long j = 0; j < l2.size(); j++) {\n  \
    \          if(l1[i] == l2[j]) {\n                common++;\n            }\n  \
    \      }\n    }\n    for(long i = 0; i < l1.size(); i++) {\n        if(l1[i] ==\
    \ common) {\n            result.push_back(l1[i]);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp4d3q9l5y: /tmp/tmp4d3q9l5y.cpp:23: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElements = 0;\n    long\
    \ commonCount = 0;\n    for (long i = 0; i < l1.size(); i++) {\n        for (long\
    \ j = 0; j < l2.size(); j++) {\n            if (l1[i] == l2[j]) {\n          \
    \      commonElements++;\n                commonCount++;\n            }\n    \
    \    }\n    }\n    if (commonCount == 0) {\n        return result;\n    }\n  \
    \  for (long i = 0; i < l1.size(); i++) {\n        if (commonElements == commonCount)\
    \ {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmphs2vvoz3: /tmp/tmphs2vvoz3.cpp:28: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> res;\n    long common = 0;\n    for (long i = 0;\
    \ i < l1.size(); i++) {\n        for (long j = 0; j < l2.size(); j++) {\n    \
    \        if (l1[i] == l2[j]) {\n                common++;\n            }\n   \
    \     }\n    }\n    res.push_back(common);\n    return res;\n}\nint main() {\n\
    \    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp1k5yg22p: /tmp/tmp1k5yg22p.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    long i = 0;\n\
    \    long j = 0;\n    while (i<l1.size() && j<l2.size()) {\n        if (l1[i]\
    \ == l2[j]) {\n            common++;\n            i++;\n            j++;\n   \
    \     } else if (l1[i] < l2[j]) {\n            i++;\n        } else {\n      \
    \      j++;\n        }\n    }\n    while (i < l1.size()) {\n        result.push_back(l1[i]);\n\
    \        i++;\n    }\n    while (j < l2.size()) {\n        result.push_back(l2[j]);\n\
    \        j++;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = common;\n    assert(candidate((std::vector<long>({(long)1, (long)4, (long)3,\
    \ (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5, (long)7,\
    \ (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmphp_wym90: /tmp/tmphp_wym90.cpp:32: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    for (long i\
    \ = 0; i < l1.size(); i++) {\n        for (long j = 0; j < l2.size(); j++) {\n\
    \            if (l1[i] == l2[j]) {\n                common++;\n            }\n\
    \        }\n    }\n    for (long i = 0; i < l1.size(); i++) {\n        if (l1[i]\
    \ == common) {\n            result.push_back(l1[i]);\n        }\n    }\n    for\
    \ (long i = 0; i < l2.size(); i++) {\n        if (l2[i] == common) {\n       \
    \     result.push_back(l2[i]);\n        }\n    }\n    std::sort(result.begin(),\
    \ result.end());\n    return result;\n}\nint main() {\n    auto candidate = common;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)4, (long)3, (long)34,\
    \ (long)653, (long)2, (long)5})), (std::vector<long>({(long)5, (long)7, (long)1,\
    \ (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1, (long)5,\
    \ (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp51ivvz3y: /tmp/tmp51ivvz3y.cpp:29: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    for(long i =\
    \ 0; i < l1.size(); i++) {\n        for(long j = 0; j < l2.size(); j++) {\n  \
    \          if(l1[i] == l2[j]) {\n                common++;\n            }\n  \
    \      }\n    }\n    result.push_back(common);\n    return result;\n}\nint main()\
    \ {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp2v4a9kgx: /tmp/tmp2v4a9kgx.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    for (long i\
    \ = 0; i < l1.size(); i++) {\n        for (long j = 0; j < l2.size(); j++) {\n\
    \            if (l1[i] == l2[j]) {\n                common++;\n            }\n\
    \        }\n    }\n    result.push_back(common);\n    return result;\n}\nint main()\
    \ {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp319q5san: /tmp/tmp319q5san.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElements = 0, commonElementsCount\
    \ = 0;\n    for (long i = 0; i < l1.size(); i++) {\n        for (long j = 0; j\
    \ < l2.size(); j++) {\n            if (l1[i] == l2[j]) {\n                commonElementsCount++;\n\
    \            }\n        }\n        if (commonElementsCount == l2.size()) {\n \
    \           result.push_back(l1[i]);\n            commonElementsCount = 0;\n \
    \       }\n    }\n    return result;\n}\nint main() {\n    auto candidate = common;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)4, (long)3, (long)34,\
    \ (long)653, (long)2, (long)5})), (std::vector<long>({(long)5, (long)7, (long)1,\
    \ (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1, (long)5,\
    \ (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpe93542ux: /tmp/tmpe93542ux.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    for (long i\
    \ = 0; i < l1.size(); i++) {\n        if (l1.at(i) == l2.at(i)) {\n          \
    \  common++;\n        } else {\n            result.push_back(common);\n      \
    \      common = l1.at(i);\n        }\n    }\n    result.push_back(common);\n \
    \   return result;\n}\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmps8vx0q_i: /tmp/tmps8vx0q_i.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    for(long i =\
    \ 0; i < l1.size(); i++) {\n        for(long j = 0; j < l2.size(); j++) {\n  \
    \          if(l1[i] == l2[j]) {\n                common++;\n                break;\n\
    \            }\n        }\n    }\n    result.push_back(common);\n    return result;\n\
    }\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpop73t0gf: /tmp/tmpop73t0gf.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElement = 0;\n    for (long\
    \ i = 0; i < l1.size(); i++) {\n        for (long j = 0; j < l2.size(); j++) {\n\
    \            if (l1[i] == l2[j]) {\n                commonElement = l1[i];\n \
    \               break;\n            }\n        }\n        result.push_back(commonElement);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = common;\n  \
    \  assert(candidate((std::vector<long>({(long)1, (long)4, (long)3, (long)34, (long)653,\
    \ (long)2, (long)5})), (std::vector<long>({(long)5, (long)7, (long)1, (long)5,\
    \ (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1, (long)5, (long)653})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)2, (long)8})),\
    \ (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2, (long)3})));\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2, (long)8})),\
    \ (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmph5e_d2o0: /tmp/tmph5e_d2o0.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    long i = 0;\n\
    \    long j = 0;\n    long k = 0;\n    while (i<l1.size() && j<l2.size()) {\n\
    \        if (l1[i]==l2[j]) {\n            common++;\n            i++;\n      \
    \      j++;\n        } else if (l1[i]<l2[j]) {\n            i++;\n        } else\
    \ {\n            j++;\n        }\n    }\n    while (i < l1.size()) {\n       \
    \ result.push_back(l1[i]);\n        i++;\n    }\n    while (j < l2.size()) {\n\
    \        result.push_back(l2[j]);\n        j++;\n    }\n    std::sort(result.begin(),\
    \ result.end());\n    return result;\n}\nint main() {\n    auto candidate = common;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)4, (long)3, (long)34,\
    \ (long)653, (long)2, (long)5})), (std::vector<long>({(long)5, (long)7, (long)1,\
    \ (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1, (long)5,\
    \ (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp6451wsao: /tmp/tmp6451wsao.cpp:34: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    result.push_back(l1[0]);\n    result.push_back(l2[0]);\n\
    \    long mid = l1[0]+l2[0]/2;\n    for(long i = 1; i < l1.size(); i++) {\n  \
    \      if(l1[i] < mid) {\n            result.push_back(l1[i]);\n        }\n  \
    \      else if(l2[i] < mid) {\n            result.push_back(l2[i]);\n        }\n\
    \        else {\n            result.push_back(l1[i]);\n            result.push_back(l2[i]);\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = common;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)4, (long)3, (long)34,\
    \ (long)653, (long)2, (long)5})), (std::vector<long>({(long)5, (long)7, (long)1,\
    \ (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1, (long)5,\
    \ (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmptdcvjfc6: /tmp/tmptdcvjfc6.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElements = 0;\n    for\
    \ (long i = 0; i < l1.size(); i++) {\n        for (long j = 0; j < l2.size();\
    \ j++) {\n            if (l1[i] == l2[j]) {\n                commonElements++;\n\
    \            }\n        }\n    }\n    for (long i = 0; i < l1.size(); i++) {\n\
    \        if (commonElements == 0) {\n            result.push_back(l1[i]);\n  \
    \      }\n    }\n    for (long i = 0; i < l2.size(); i++) {\n        if (commonElements\
    \ == 0) {\n            result.push_back(l2[i]);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpdn2kxkim: /tmp/tmpdn2kxkim.cpp:28: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> common;\n    long common_count = 0;\n    long common_sum\
    \ = 0;\n    for (long i = 0; i < l1.size(); i++) {\n        for (long j = 0; j\
    \ < l2.size(); j++) {\n            if (l1[i] == l2[j]) {\n                common_sum\
    \ += l1[i];\n                common_count++;\n            }\n        }\n    }\n\
    \    common.reserve(common_count);\n    for (long i = 0; i < l1.size(); i++) {\n\
    \        if (common_sum == l1[i]) {\n            common.push_back(l1[i]);\n  \
    \      }\n    }\n    return common;\n}\nint main() {\n    auto candidate = common;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)4, (long)3, (long)34,\
    \ (long)653, (long)2, (long)5})), (std::vector<long>({(long)5, (long)7, (long)1,\
    \ (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1, (long)5,\
    \ (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpr7dind0q: /tmp/tmpr7dind0q.cpp:26: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    for (long i\
    \ = 0; i < l1.size(); i++) {\n        for (long j = 0; j < l2.size(); j++) {\n\
    \            if (l1[i] == l2[j]) {\n                common++;\n              \
    \  break;\n            }\n        }\n    }\n    for (long i = 0; i < l1.size();\
    \ i++) {\n        if (l1[i] == common) {\n            result.push_back(l1[i]);\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = common;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)4, (long)3, (long)34,\
    \ (long)653, (long)2, (long)5})), (std::vector<long>({(long)5, (long)7, (long)1,\
    \ (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1, (long)5,\
    \ (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpilu_q9on: /tmp/tmpilu_q9on.cpp:24: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    for (long i\
    \ = 0; i < l1.size(); i++) {\n        for (long j = 0; j < l2.size(); j++) {\n\
    \            if (l1[i] == l2[j]) {\n                common++;\n            }\n\
    \        }\n    }\n    for (long i = 0; i < l1.size(); i++) {\n        if (common\
    \ == l2.size()) {\n            result.push_back(l1[i]);\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpzgwd54jr: /tmp/tmpzgwd54jr.cpp:23: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElements = 0;\n    for\
    \ (long i = 0; i < l1.size(); i++) {\n        for (long j = 0; j < l2.size();\
    \ j++) {\n            if (l1[i] == l2[j]) {\n                commonElements++;\n\
    \            }\n        }\n    }\n    for (long i = 0; i < l1.size(); i++) {\n\
    \        if (commonElements == 0) {\n            result.push_back(l1[i]);\n  \
    \      }\n    }\n    for (long i = 0; i < l2.size(); i++) {\n        if (commonElements\
    \ == 0) {\n            result.push_back(l2[i]);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpdn2kxkim: /tmp/tmpdn2kxkim.cpp:28: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long temp;\n    long i = 0;\n    long\
    \ j = 0;\n    long k = 0;\n    long count = 0;\n    while (i<l1.size() && j<l2.size())\
    \ {\n        if (l1[i]==l2[j]) {\n            count++;\n            i++;\n   \
    \         j++;\n        }\n        else if (l1[i]<l2[j]) {\n            temp =\
    \ l1[i];\n            l1[i] = l2[j];\n            l2[j] = temp;\n            i++;\n\
    \        }\n        else {\n            temp = l2[j];\n            l2[j] = l1[i];\n\
    \            l1[i] = temp;\n            j++;\n        }\n    }\n    while (i <\
    \ l1.size()) {\n        result.push_back(l1[i]);\n        i++;\n    }\n    while\
    \ (j < l2.size()) {\n        result.push_back(l2[j]);\n        j++;\n    }\n \
    \   return result;\n}\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpvlzf8eoc: /tmp/tmpvlzf8eoc.cpp:42: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    for (long i\
    \ = 0; i < l1.size(); i++) {\n        for (long j = 0; j < l2.size(); j++) {\n\
    \            if (l1[i] == l2[j]) {\n                common++;\n            }\n\
    \        }\n    }\n    for (long i = 0; i < l1.size(); i++) {\n        if (common\
    \ > 0) {\n            if (l1[i] == common) {\n                result.push_back(l1[i]);\n\
    \            }\n        }\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = common;\n    assert(candidate((std::vector<long>({(long)1, (long)4,\
    \ (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpqpvy1gm1: /tmp/tmpqpvy1gm1.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    long i = 0;\n\
    \    long j = 0;\n    long k = 0;\n    while (i<l1.size() && j<l2.size()) {\n\
    \        if (l1[i]==l2[j]) {\n            common++;\n            i++;\n      \
    \      j++;\n        } else if (l1[i]<l2[j]) {\n            i++;\n        } else\
    \ {\n            j++;\n        }\n    }\n    while (i < l1.size()) {\n       \
    \ result.push_back(l1[i]);\n        i++;\n    }\n    while (j < l2.size()) {\n\
    \        result.push_back(l2[j]);\n        j++;\n    }\n    result.push_back(common);\n\
    \    return result;\n}\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp4m31opte: /tmp/tmp4m31opte.cpp:34: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    long i = 0;\n\
    \    long j = 0;\n    while (i<l1.size() && j<l2.size()) {\n        if (l1[i]==l2[j])\
    \ {\n            common++;\n            i++;\n            j++;\n        } else\
    \ if (l1[i]<l2[j]) {\n            i++;\n        } else {\n            j++;\n \
    \       }\n    }\n    result.push_back(common);\n    while (i < l1.size()) {\n\
    \        result.push_back(l1[i]);\n        i++;\n    }\n    while (j < l2.size())\
    \ {\n        result.push_back(l2[j]);\n        j++;\n    }\n    std::sort(result.begin(),\
    \ result.end());\n    return result;\n}\nint main() {\n    auto candidate = common;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)4, (long)3, (long)34,\
    \ (long)653, (long)2, (long)5})), (std::vector<long>({(long)5, (long)7, (long)1,\
    \ (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1, (long)5,\
    \ (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpox3jz8tw: /tmp/tmpox3jz8tw.cpp:34: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElements = 0;\n    long\
    \ minElement = l1[0], maxElement = l1[0];\n    for (long i : l1) {\n        if\
    \ (i < minElement) {\n            minElement = i;\n        }\n        if (i >\
    \ maxElement) {\n            maxElement = i;\n        }\n    }\n    for (long\
    \ i : l2) {\n        if (i < minElement) {\n            minElement = i;\n    \
    \    }\n        if (i > maxElement) {\n            maxElement = i;\n        }\n\
    \    }\n    for (long i : l1) {\n        for (long j : l2) {\n            if (i\
    \ == j) {\n                commonElements++;\n            }\n        }\n    }\n\
    \    for (long i : l2) {\n        for (long j : l1) {\n            if (i == j)\
    \ {\n                commonElements++;\n            }\n        }\n    }\n    for\
    \ (long i : l1) {\n        for (long j : l2) {\n            if (i == j) {\n  \
    \              commonElements++;\n            }\n        }\n    }\n    for (long\
    \ i : l2) {\n        for (long j : l1) {\n            if (i == j) {\n        \
    \        commonElements++;\n            }\n        }\n    }\n    for (long i :\
    \ l1) {\n        for (long j : l2) {\n            if (i == j) {\n            \
    \    commonElements++;\n            }\n        }\n    }\n    for (long i : l2)\
    \ {\n        for (long j : l1) {\n            if (i == j) {\n                commonElements++;\n\
    \            }\n        }\n    }\n    for (long i : l1) {\n        for (long j\
    \ : l2) {\n            if (i == j) {\n                commonElements++;\n    \
    \        }\n        }\n    }\n    for (long i : l2) {\n        for (long j : l1)\
    \ {\n            if (i == j) {\n                commonElements++;\n          \
    \  }\n        }\n    }\n    for (long i : l1) {\n        for (long j : l2) {\n\
    \            if (i == j) {\n                commonElements++;\n            }\n\
    \        }\n    }\n    for (long i : l2) {\n        for (long j : l1) {\n    \
    \        if (i == j) {\n                commonElements++;\n            }\n   \
    \     }\n    }\n    for (long i : l1) {\n        for (long j : l2) {\n       \
    \     if (i == j) {\n                commonElements++;\n            }\n      \
    \  }\n    }\n    for (long i : l2) {\n        for (long j : l1) {\n          \
    \  if (i == j) {\n                commonElements++;\n            }\n        }\n\
    \    }\n    for (long i : l1) {\n        for (long j : l2) {\n            if (i\
    \ == j) {\n                commonElements++;\n            }\n        }\n    }\n\
    \    for (long i : l2) {\n        for (long j : l1) {\n            if (i == j)\
    \ {\n                commonElements++;\n            }\n}\nint main() {\n    auto\
    \ candidate = common;\n    assert(candidate((std::vector<long>({(long)1, (long)4,\
    \ (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpoae5f7x0.cpp: In function \u2018std::vector<long int> common(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpoae5f7x0.cpp:121:12: error: a function-definition\
    \ is not allowed here before \u2018{\u2019 token\n  121 | int main() {\n     \
    \ |            ^\n/tmp/tmpoae5f7x0.cpp:127:1: error: expected \u2018}\u2019 at\
    \ end of input\n  127 | }\n      | ^\n/tmp/tmpoae5f7x0.cpp:115:23: note: to match\
    \ this \u2018{\u2019\n  115 |     for (long i : l2) {\n      |               \
    \        ^\n/tmp/tmpoae5f7x0.cpp:127:1: error: expected \u2018}\u2019 at end of\
    \ input\n  127 | }\n      | ^\n/tmp/tmpoae5f7x0.cpp:4:70: note: to match this\
    \ \u2018{\u2019\n    4 | std::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n      |                                                             \
    \         ^\n/tmp/tmpoae5f7x0.cpp:127:1: warning: no return statement in function\
    \ returning non-void [-Wreturn-type]\n  127 | }\n      | ^\n"
  stdout: ''
  timestamp: 1659747660
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElements = 0, commonElementsCount\
    \ = 0;\n    long minElement = l1[0], maxElement = l2[0];\n    for (long i = 1;\
    \ i < l1.size(); i++) {\n        if (l1[i] < minElement) {\n            minElement\
    \ = l1[i];\n        } else if (l1[i] > maxElement) {\n            maxElement =\
    \ l1[i];\n        }\n    }\n    for (long i = 1; i < l2.size(); i++) {\n     \
    \   if (l2[i] < minElement) {\n            minElement = l2[i];\n        } else\
    \ if (l2[i] > maxElement) {\n            maxElement = l2[i];\n        }\n    }\n\
    \    for (long i = 1; i < l1.size(); i++) {\n        for (long j = 1; j < l2.size();\
    \ j++) {\n            if (l1[i] == l2[j]) {\n                commonElementsCount++;\n\
    \            }\n        }\n    }\n    for (long i = 1; i < l2.size(); i++) {\n\
    \        for (long j = 1; j < l1.size(); j++) {\n            if (l2[i] == l1[j])\
    \ {\n                commonElementsCount++;\n            }\n        }\n    }\n\
    \    commonElements = commonElementsCount * l1.size() + l2.size() - commonElementsCount;\n\
    \    for (long i = 1; i < l1.size(); i++) {\n        if (l1[i] != minElement)\
    \ {\n            result.push_back(l1[i]);\n        }\n    }\n    for (long i =\
    \ 1; i < l2.size(); i++) {\n        if (l2[i] != maxElement) {\n            result.push_back(l2[i]);\n\
    \        }\n    }\n    for (long i = 1; i < result.size(); i++) {\n        if\
    \ (result[i] != commonElements) {\n            result.push_back(result[i]);\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = common;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)4, (long)3, (long)34,\
    \ (long)653, (long)2, (long)5})), (std::vector<long>({(long)5, (long)7, (long)1,\
    \ (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1, (long)5,\
    \ (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659747666
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    for (long i\
    \ = 0; i < l1.size(); i++) {\n        for (long j = 0; j < l2.size(); j++) {\n\
    \            if (l1[i] == l2[j]) {\n                common++;\n            }\n\
    \        }\n    }\n    for (long i = 0; i < l1.size(); i++) {\n        if (l1[i]\
    \ == common) {\n            result.push_back(l1[i]);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpm5r45fdt: /tmp/tmpm5r45fdt.cpp:23: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747662
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> res;\n    long n = l1.size();\n    long m = l2.size();\n\
    \    long i = 0;\n    long j = 0;\n    long k = 0;\n    while (i < n && j < m)\
    \ {\n        if (l1[i] == l2[j]) {\n            res.push_back(l1[i]);\n      \
    \      i++;\n            j++;\n        } else if (l1[i] < l2[j]) {\n         \
    \   i++;\n        } else {\n            j++;\n        }\n    }\n    while (i <\
    \ n) {\n        res.push_back(l1[i]);\n        i++;\n    }\n    while (j < m)\
    \ {\n        res.push_back(l2[j]);\n        j++;\n    }\n    return res;\n}\n\
    int main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpa3lhcwov: /tmp/tmpa3lhcwov.cpp:34: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747662
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    long i = 0;\n\
    \    long j = 0;\n    long k = 0;\n    while (i<l1.size() && j<l2.size()) {\n\
    \        if (l1[i]==l2[j]) {\n            common++;\n            i++;\n      \
    \      j++;\n        } else if (l1[i]<l2[j]) {\n            i++;\n        } else\
    \ {\n            j++;\n        }\n    }\n    while (i < l1.size()) {\n       \
    \ result.push_back(l1[i]);\n        i++;\n    }\n    while (j < l2.size()) {\n\
    \        result.push_back(l2[j]);\n        j++;\n    }\n    std::sort(result.begin(),\
    \ result.end());\n    return result;\n}\nint main() {\n    auto candidate = common;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)4, (long)3, (long)34,\
    \ (long)653, (long)2, (long)5})), (std::vector<long>({(long)5, (long)7, (long)1,\
    \ (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1, (long)5,\
    \ (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp6451wsao: /tmp/tmp6451wsao.cpp:34: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> common;\n    long common_count = 0;\n    long common_element\
    \ = 0;\n    for (long i = 0; i < l1.size(); i++) {\n        for (long j = 0; j\
    \ < l2.size(); j++) {\n            if (l1[i] == l2[j]) {\n                common_count++;\n\
    \                common_element = l1[i];\n            }\n        }\n    }\n  \
    \  common.reserve(common_count);\n    for (long i = 0; i < l1.size(); i++) {\n\
    \        if (l1[i] == common_element) {\n            common.push_back(l1[i]);\n\
    \        }\n    }\n    return common;\n}\nint main() {\n    auto candidate = common;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)4, (long)3, (long)34,\
    \ (long)653, (long)2, (long)5})), (std::vector<long>({(long)5, (long)7, (long)1,\
    \ (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1, (long)5,\
    \ (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp71ncuhbu: /tmp/tmp71ncuhbu.cpp:26: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747662
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElements = 0;\n    long\
    \ minElement = l1[0], maxElement = l2[0];\n    for (long i = 1; i < l1.size();\
    \ i++) {\n        if (l1[i] < minElement) {\n            minElement = l1[i];\n\
    \        } else if (l1[i] > maxElement) {\n            maxElement = l1[i];\n \
    \       }\n    }\n    for (long i = 1; i < l2.size(); i++) {\n        if (l2[i]\
    \ < minElement) {\n            minElement = l2[i];\n        } else if (l2[i] >\
    \ maxElement) {\n            maxElement = l2[i];\n        }\n    }\n    for (long\
    \ i = 1; i < l1.size(); i++) {\n        for (long j = 1; j < l2.size(); j++) {\n\
    \            if (l1[i] == l2[j]) {\n                commonElements++;\n      \
    \      }\n        }\n    }\n    result.push_back(commonElements);\n    result.push_back(minElement);\n\
    \    result.push_back(maxElement);\n    return result;\n}\nint main() {\n    auto\
    \ candidate = common;\n    assert(candidate((std::vector<long>({(long)1, (long)4,\
    \ (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpvwkoqu1a: /tmp/tmpvwkoqu1a.cpp:36: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747662
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElements = 0;\n    long\
    \ minElement = l1[0];\n    long maxElement = l1[0];\n    for(long i : l1) {\n\
    \        if(i == minElement) {\n            minElement = i;\n        }\n     \
    \   if(i == maxElement) {\n            maxElement = i;\n        }\n    }\n   \
    \ for(long i : l2) {\n        if(i == minElement) {\n            minElement =\
    \ i;\n        }\n        if(i == maxElement) {\n            maxElement = i;\n\
    \        }\n    }\n    for(long i : l1) {\n        if(l2.find(i) != l2.end())\
    \ {\n            commonElements++;\n        }\n    }\n    for(long i : l2) {\n\
    \        if(l1.find(i) != l1.end()) {\n            commonElements++;\n       \
    \ }\n    }\n    for(long i : l1) {\n        if(l2.find(i) != l2.end()) {\n   \
    \         commonElements++;\n        }\n    }\n    for(long i : l2) {\n      \
    \  if(l1.find(i) != l1.end()) {\n            commonElements++;\n        }\n  \
    \  }\n    for(long i : l1) {\n        if(l2.find(i) != l2.end()) {\n         \
    \   commonElements++;\n        }\n    }\n    for(long i : l2) {\n        if(l1.find(i)\
    \ != l1.end()) {\n            commonElements++;\n        }\n    }\n    for(long\
    \ i : l1) {\n        if(l2.find(i) != l2.end()) {\n            commonElements++;\n\
    \        }\n    }\n    for(long i : l2) {\n        if(l1.find(i) != l1.end())\
    \ {\n            commonElements++;\n        }\n    }\n    for(long i : l1) {\n\
    \        if(l2.find(i) != l2.end()) {\n            commonElements++;\n       \
    \ }\n    }\n    for(long i : l2) {\n        if(l1.find(i) != l1.end()) {\n   \
    \         commonElements++;\n        }\n    }\n    for(long i : l1) {\n      \
    \  if(l2.find(i) != l2.end()) {\n            commonElements++;\n        }\n  \
    \  }\n    for(long i : l2) {\n        if(l1.find(i) != l1.end()) {\n         \
    \   commonElements++;\n        }\n    }\n    for(long i : l1) {\n        if(l2.find(i)\
    \ != l2.end()) {\n            commonElements++;\n        }\n    }\n    for(long\
    \ i : l2) {\n        if(l1.find(i) != l1.end()) {\n            commonElements++;\n\
    \        }\n    }\n\n}\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4m03j1w7.cpp: In function \u2018std::vector<long int> common(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmp4m03j1w7.cpp:26:15: error: \u2018\
    class std::vector<long int>\u2019 has no member named \u2018find\u2019\n   26\
    \ |         if(l2.find(i) != l2.end()) {\n      |               ^~~~\n/tmp/tmp4m03j1w7.cpp:31:15:\
    \ error: \u2018class std::vector<long int>\u2019 has no member named \u2018find\u2019\
    \n   31 |         if(l1.find(i) != l1.end()) {\n      |               ^~~~\n/tmp/tmp4m03j1w7.cpp:36:15:\
    \ error: \u2018class std::vector<long int>\u2019 has no member named \u2018find\u2019\
    \n   36 |         if(l2.find(i) != l2.end()) {\n      |               ^~~~\n/tmp/tmp4m03j1w7.cpp:41:15:\
    \ error: \u2018class std::vector<long int>\u2019 has no member named \u2018find\u2019\
    \n   41 |         if(l1.find(i) != l1.end()) {\n      |               ^~~~\n/tmp/tmp4m03j1w7.cpp:46:15:\
    \ error: \u2018class std::vector<long int>\u2019 has no member named \u2018find\u2019\
    \n   46 |         if(l2.find(i) != l2.end()) {\n      |               ^~~~\n/tmp/tmp4m03j1w7.cpp:51:15:\
    \ error: \u2018class std::vector<long int>\u2019 has no member named \u2018find\u2019\
    \n   51 |         if(l1.find(i) != l1.end()) {\n      |               ^~~~\n/tmp/tmp4m03j1w7.cpp:56:15:\
    \ error: \u2018class std::vector<long int>\u2019 has no member named \u2018find\u2019\
    \n   56 |         if(l2.find(i) != l2.end()) {\n      |               ^~~~\n/tmp/tmp4m03j1w7.cpp:61:15:\
    \ error: \u2018class std::vector<long int>\u2019 has no member named \u2018find\u2019\
    \n   61 |         if(l1.find(i) != l1.end()) {\n      |               ^~~~\n/tmp/tmp4m03j1w7.cpp:66:15:\
    \ error: \u2018class std::vector<long int>\u2019 has no member named \u2018find\u2019\
    \n   66 |         if(l2.find(i) != l2.end()) {\n      |               ^~~~\n/tmp/tmp4m03j1w7.cpp:71:15:\
    \ error: \u2018class std::vector<long int>\u2019 has no member named \u2018find\u2019\
    \n   71 |         if(l1.find(i) != l1.end()) {\n      |               ^~~~\n/tmp/tmp4m03j1w7.cpp:76:15:\
    \ error: \u2018class std::vector<long int>\u2019 has no member named \u2018find\u2019\
    \n   76 |         if(l2.find(i) != l2.end()) {\n      |               ^~~~\n/tmp/tmp4m03j1w7.cpp:81:15:\
    \ error: \u2018class std::vector<long int>\u2019 has no member named \u2018find\u2019\
    \n   81 |         if(l1.find(i) != l1.end("
  stdout: ''
  timestamp: 1659747662
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    long i = 0;\n\
    \    long j = 0;\n    long k = 0;\n    while (i + j < l1.size() && j + k < l2.size())\
    \ {\n        if (l1[i] == l2[j]) {\n            common += l1[i];\n           \
    \ i++;\n            j++;\n        } else if (l1[i] < l2[j]) {\n            i++;\n\
    \        } else {\n            j++;\n        }\n    }\n    while (i < l1.size())\
    \ {\n        common += l1[i];\n        i++;\n    }\n    while (j < l2.size())\
    \ {\n        common += l2[j];\n        j++;\n    }\n    result.push_back(common);\n\
    \    return result;\n}\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp0z52nuk9: /tmp/tmp0z52nuk9.cpp:34: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747662
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> res;\n    res.reserve(l1.size() + l2.size());\n\
    \    long common = 0;\n    for (long i : l1) {\n        if (l2.find(i) != l2.end())\
    \ {\n            common++;\n            res.push_back(i);\n        }\n    }\n\
    \    for (long i : l2) {\n        if (l1.find(i) != l1.end()) {\n            common++;\n\
    \            res.push_back(i);\n        }\n    }\n    return res;\n}\nint main()\
    \ {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0fyjesga.cpp: In function \u2018std::vector<long int> common(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmp0fyjesga.cpp:9:16: error: \u2018\
    class std::vector<long int>\u2019 has no member named \u2018find\u2019\n    9\
    \ |         if (l2.find(i) != l2.end()) {\n      |                ^~~~\n/tmp/tmp0fyjesga.cpp:15:16:\
    \ error: \u2018class std::vector<long int>\u2019 has no member named \u2018find\u2019\
    \n   15 |         if (l1.find(i) != l1.end()) {\n      |                ^~~~\n"
  stdout: ''
  timestamp: 1659747662
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    for(long i =\
    \ 0; i < l1.size(); i++) {\n        for(long j = 0; j < l2.size(); j++) {\n  \
    \          if(l1[i] == l2[j]) {\n                common++;\n            }\n  \
    \      }\n    }\n    result.push_back(common);\n    return result;\n}\nint main()\
    \ {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp2v4a9kgx: /tmp/tmp2v4a9kgx.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    result.push_back(l1[0]);\n    result.push_back(l2[0]);\n\
    \    long i = 1;\n    long j = 1;\n    while (i < l1.size() && j < l2.size())\
    \ {\n        if (l1[i] == l2[j]) {\n            result.push_back(l1[i]);\n   \
    \         i++;\n            j++;\n        } else if (l1[i] < l2[j]) {\n      \
    \      result.push_back(l1[i]);\n            i++;\n        } else {\n        \
    \    result.push_back(l2[j]);\n            j++;\n        }\n    }\n    while (i\
    \ < l1.size()) {\n        result.push_back(l1[i]);\n        i++;\n    }\n    while\
    \ (j < l2.size()) {\n        result.push_back(l2[j]);\n        j++;\n    }\n \
    \   return result;\n}\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpdjbsurcn: /tmp/tmpdjbsurcn.cpp:35: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747662
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    long i = 0;\n\
    \    long j = 0;\n    long k = 0;\n    while (i<l1.size() && j<l2.size()) {\n\
    \        if (l1[i]==l2[j]) {\n            common++;\n            i++;\n      \
    \      j++;\n        } else if (l1[i]<l2[j]) {\n            i++;\n        } else\
    \ {\n            j++;\n        }\n    }\n    result.push_back(common);\n    while\
    \ (i<l1.size()) {\n        result.push_back(l1[i]);\n        i++;\n    }\n   \
    \ while (j<l2.size()) {\n        result.push_back(l2[j]);\n        j++;\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmph6bd7dam: /tmp/tmph6bd7dam.cpp:34: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747662
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> res;\n    long n1 = l1.size();\n    long n2 = l2.size();\n\
    \    long min1 = n1 < n2 ? n1 : n2;\n    long min2 = n1 < n2 ? n2 : n1;\n    long\
    \ mid = (min1 + min2) / 2;\n    long mid1 = mid / 2;\n    long mid2 = mid - mid1;\n\
    \    long mid3 = mid - mid2;\n    long mid4 = mid - mid3;\n    long mid5 = mid\
    \ - mid4;\n    long mid6 = mid - mid5;\n    long mid7 = mid - mid6;\n    long\
    \ mid8 = mid - mid7;\n    long mid9 = mid - mid8;\n    long mid10 = mid - mid9;\n\
    \    long mid11 = mid - mid10;\n    long mid12 = mid - mid11;\n    long mid13\
    \ = mid - mid12;\n    long mid14 = mid - mid13;\n    long mid15 = mid - mid14;\n\
    \    long mid16 = mid - mid15;\n    long mid17 = mid - mid16;\n    long mid18\
    \ = mid - mid17;\n    long mid19 = mid - mid18;\n    long mid20 = mid - mid19;\n\
    \    long mid21 = mid - mid20;\n    long mid22 = mid - mid21;\n    long mid23\
    \ = mid - mid22;\n    long mid24 = mid - mid23;\n    long mid25 = mid - mid24;\n\
    \    long mid26 = mid - mid25;\n    long mid27 = mid - mid26;\n    long mid28\
    \ = mid - mid27;\n    long mid29 = mid - mid28;\n    long mid30 = mid - mid29;\n\
    \    long mid31 = mid - mid30;\n    long mid32 = mid - mid31;\n    long mid33\
    \ = mid - mid32;\n    long mid34 = mid - mid33;\n    long mid35 = mid - mid34;\n\
    \    long mid36 = mid - mid35;\n    long mid37 = mid - mid36;\n    long mid38\
    \ = mid - mid37;\n    long mid39 = mid - mid38;\n    long mid40 = mid - mid39;\n\
    \    long mid41 = mid - mid40;\n    long mid42 = mid - mid41;\n    long mid4\n\
    }\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzzg8bamn.cpp: In function \u2018std::vector<long int> common(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpzzg8bamn.cpp:54:1: error: expected\
    \ initializer before \u2018}\u2019 token\n   54 | }\n      | ^\n/tmp/tmpzzg8bamn.cpp:54:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1659747662
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    result.push_back(l1[0]);\n    result.push_back(l2[0]);\n\
    \    for(long i = 1; i < min(l1.size(), l2.size()); i++) {\n        if(l1[i] ==\
    \ l2[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpd1pe6l4x.cpp: In function \u2018std::vector<long int> common(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpd1pe6l4x.cpp:8:25: error: \u2018\
    min\u2019 was not declared in this scope; did you mean \u2018std::min\u2019?\n\
    \    8 |     for(long i = 1; i < min(l1.size(), l2.size()); i++) {\n      |  \
    \                       ^~~\n      |                         std::min\nIn file\
    \ included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:62,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpd1pe6l4x.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algo.h:3450:5:\
    \ note: \u2018std::min\u2019 declared here\n 3450 |     min(initializer_list<_Tp>\
    \ __l, _Compare __comp)\n      |     ^~~\n"
  stdout: ''
  timestamp: 1659747662
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    long i = 0;\n\
    \    long j = 0;\n    long k = 0;\n    long len1 = l1.size();\n    long len2 =\
    \ l2.size();\n    while (i < len1 && j < len2) {\n        if (l1[i] == l2[j])\
    \ {\n            common++;\n            i++;\n            j++;\n        } else\
    \ if (l1[i] < l2[j]) {\n            i++;\n        } else {\n            j++;\n\
    \        }\n    }\n    while (i < len1) {\n        result.push_back(l1[i]);\n\
    \        i++;\n    }\n    while (j < len2) {\n        result.push_back(l2[j]);\n\
    \        j++;\n    }\n    while (i < len1 && j < len2) {\n        if (l1[i] ==\
    \ l2[j]) {\n            common++;\n            i++;\n            j++;\n      \
    \  } else if (l1[i] < l2[j]) {\n            i++;\n        } else {\n         \
    \   j++;\n        }\n    }\n    while (i < len1) {\n        result.push_back(l1[i]);\n\
    \        i++;\n    }\n    while (j < len2) {\n        result.push_back(l2[j]);\n\
    \        j++;\n    }\n    result.push_back(common);\n    return result;\n}\nint\
    \ main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpccm9samo: /tmp/tmpccm9samo.cpp:55: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747662
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    for (long i\
    \ = 0; i < l1.size(); i++) {\n        for (long j = 0; j < l2.size(); j++) {\n\
    \            if (l1[i] == l2[j]) {\n                common++;\n            }\n\
    \        }\n    }\n    for (long i = 0; i < l1.size(); i++) {\n        if (l1[i]\
    \ == common) {\n            result.push_back(l1[i]);\n        }\n    }\n    for\
    \ (long i = 0; i < l2.size(); i++) {\n        if (l2[i] == common) {\n       \
    \     result.push_back(l2[i]);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp2l7w4ujg: /tmp/tmp2l7w4ujg.cpp:28: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747662
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    long i = 0;\n\
    \    long j = 0;\n    long k = 0;\n    while (i + j < l1.size() && j + k < l2.size())\
    \ {\n        if (l1[i] == l2[j]) {\n            common += 1;\n            i +=\
    \ 1;\n            j += 1;\n        } else if (l1[i] < l2[j]) {\n            i\
    \ += 1;\n        } else {\n            j += 1;\n        }\n    }\n    while (i\
    \ < l1.size()) {\n        result.push_back(l1[i]);\n        common += 1;\n   \
    \     i += 1;\n    }\n    while (j < l2.size()) {\n        result.push_back(l2[j]);\n\
    \        common += 1;\n        j += 1;\n    }\n    while (i < l1.size() && j <\
    \ l2.size()) {\n        if (l1[i] == l2[j]) {\n            common += 1;\n    \
    \        i += 1;\n            j += 1;\n        } else if (l1[i] < l2[j]) {\n \
    \           i += 1;\n        } else {\n            j += 1;\n        }\n    }\n\
    \    while (i < l1.size()) {\n        result.push_back(l1[i]);\n        common\
    \ += 1;\n        i += 1;\n    }\n    while (j < l2.size()) {\n        result.push_back(l2[j]);\n\
    \        common += 1;\n        j += 1;\n    }\n    while (i < l1.size() && j <\
    \ l2.size()) {\n        if (l1[i] == l2[j]) {\n            common += 1;\n    \
    \        i += 1;\n            j += 1;\n        } else if (l1[i] < l2[j]) {\n \
    \           i += 1;\n        } else {\n            j += 1;\n        }\n    }\n\
    \    while (i < l1.size()) {\n        result.push_back(l1[i]);\n        common\
    \ += 1;\n        i += 1;\n    }\n    while (j < l2.size()) {\n        result.push_back(l2[j]);\n\
    \        common += 1;\n        j += 1;\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp5abk52mq: /tmp/tmp5abk52mq.cpp:77: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747662
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    for(long i =\
    \ 0; i < l1.size(); i++) {\n        for(long j = 0; j < l2.size(); j++) {\n  \
    \          if(l1[i] == l2[j]) {\n                common++;\n            }\n  \
    \      }\n    }\n    result.push_back(common);\n    return result;\n}\nint main()\
    \ {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp2v4a9kgx: /tmp/tmp2v4a9kgx.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElements = 0;\n    long\
    \ minElement = l1[0], maxElement = l2[0];\n    for(long i = 1; i < l1.size();\
    \ i++) {\n        if(l1[i] < minElement) {\n            minElement = l1[i];\n\
    \        }\n        if(l2[i] > maxElement) {\n            maxElement = l2[i];\n\
    \        }\n    }\n    for(long i = 0; i < l1.size(); i++) {\n        if(l1[i]\
    \ == maxElement && l2[i] == minElement) {\n            result.push_back(l1[i]);\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = common;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)4, (long)3, (long)34,\
    \ (long)653, (long)2, (long)5})), (std::vector<long>({(long)5, (long)7, (long)1,\
    \ (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1, (long)5,\
    \ (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpqg3skqyp: /tmp/tmpqg3skqyp.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747662
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    long min1 =\
    \ std::numeric_limits<long>::max();\n    long min2 = std::numeric_limits<long>::max();\n\
    \    for (long i = 0; i < l1.size(); i++) {\n        if (l1[i] < min1) {\n   \
    \         min1 = l1[i];\n        }\n    }\n    for (long i = 0; i < l2.size();\
    \ i++) {\n        if (l2[i] < min2) {\n            min2 = l2[i];\n        }\n\
    \    }\n    for (long i = 0; i < l1.size(); i++) {\n        for (long j = 0; j\
    \ < l2.size(); j++) {\n            if (l1[i] == l2[j]) {\n                common++;\n\
    \            }\n        }\n    }\n    for (long i = 0; i < l2.size(); i++) {\n\
    \        for (long j = 0; j < l1.size(); j++) {\n            if (l2[i] == l1[j])\
    \ {\n                common++;\n            }\n        }\n    }\n    for (long\
    \ i = 0; i < l1.size(); i++) {\n        if (l1[i] != min1) {\n            result.push_back(l1[i]);\n\
    \        }\n    }\n    for (long i = 0; i < l2.size(); i++) {\n        if (l2[i]\
    \ != min2) {\n            result.push_back(l2[i]);\n        }\n    }\n    std::sort(result.begin(),\
    \ result.end());\n    return result;\n}\nint main() {\n    auto candidate = common;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)4, (long)3, (long)34,\
    \ (long)653, (long)2, (long)5})), (std::vector<long>({(long)5, (long)7, (long)1,\
    \ (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1, (long)5,\
    \ (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp6_5ecvay: /tmp/tmp6_5ecvay.cpp:48: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747662
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElements = 0;\n    long\
    \ i = 0;\n    long j = 0;\n    while (i<l1.size() && j<l2.size()) {\n        if\
    \ (l1[i] == l2[j]) {\n            commonElements++;\n            i++;\n      \
    \      j++;\n        } else if (l1[i] < l2[j]) {\n            i++;\n        }\
    \ else {\n            j++;\n        }\n    }\n    while (i < l1.size()) {\n  \
    \      result.push_back(l1[i]);\n        i++;\n    }\n    while (j < l2.size())\
    \ {\n        result.push_back(l2[j]);\n        j++;\n    }\n    return std::move(std::sort(result.begin(),\
    \ result.end()));\n}\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpeofru0hr.cpp: In function \u2018std::vector<long int> common(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpeofru0hr.cpp:28:61: error: invalid\
    \ use of void expression\n   28 |     return std::move(std::sort(result.begin(),\
    \ result.end()));\n      |                                                   \
    \          ^\n"
  stdout: ''
  timestamp: 1659747662
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    long i = 0;\n\
    \    long j = 0;\n    long k = 0;\n    while (i<l1.size() && j<l2.size()) {\n\
    \        if (l1[i]==l2[j]) {\n            common++;\n            i++;\n      \
    \      j++;\n        } else if (l1[i]<l2[j]) {\n            i++;\n        } else\
    \ {\n            j++;\n        }\n    }\n    while (i < l1.size()) {\n       \
    \ result.push_back(l1[i]);\n        i++;\n    }\n    while (j < l2.size()) {\n\
    \        result.push_back(l2[j]);\n        j++;\n    }\n    result.push_back(common);\n\
    \    return result;\n}\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp4m31opte: /tmp/tmp4m31opte.cpp:34: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> common;\n    long common_count = 0;\n    for (long\
    \ i = 0; i < l1.size(); i++) {\n        for (long j = 0; j < l2.size(); j++) {\n\
    \            if (l1[i] == l2[j]) {\n                common_count++;\n        \
    \    }\n        }\n    }\n    common.reserve(common_count);\n    for (long i =\
    \ 0; i < l1.size(); i++) {\n        for (long j = 0; j < l2.size(); j++) {\n \
    \           if (l1[i] == l2[j]) {\n                common.push_back(l1[i]);\n\
    \            }\n        }\n    }\n    return common;\n}\nint main() {\n    auto\
    \ candidate = common;\n    assert(candidate((std::vector<long>({(long)1, (long)4,\
    \ (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmps6_13tsn: /tmp/tmps6_13tsn.cpp:26: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747662
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    long i = 0;\n\
    \    long j = 0;\n    long k = 0;\n    long l = 0;\n    while (i<l1.size() &&\
    \ j<l2.size()) {\n        if (l1[i] == l2[j]) {\n            common++;\n     \
    \       i++;\n            j++;\n        } else if (l1[i] < l2[j]) {\n        \
    \    i++;\n        } else {\n            j++;\n        }\n    }\n    while (i\
    \ < l1.size()) {\n        result.push_back(l1[i]);\n        i++;\n    }\n    while\
    \ (j < l2.size()) {\n        result.push_back(l2[j]);\n        j++;\n    }\n \
    \   while (i < l1.size() && j < l2.size()) {\n        if (l1[i] == l2[j]) {\n\
    \            common++;\n            i++;\n            j++;\n        } else if\
    \ (l1[i] < l2[j]) {\n            i++;\n        } else {\n            j++;\n  \
    \      }\n    }\n    while (i < l1.size()) {\n        result.push_back(l1[i]);\n\
    \        i++;\n    }\n    while (j < l2.size()) {\n        result.push_back(l2[j]);\n\
    \        j++;\n    }\n    result.push_back(common);\n    return result;\n}\nint\
    \ main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmplt_c06b4: /tmp/tmplt_c06b4.cpp:54: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747662
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElements = 0;\n    for\
    \ (long i = 0; i < l1.size(); i++) {\n        for (long j = 0; j < l2.size();\
    \ j++) {\n            if (l1[i] == l2[j]) {\n                commonElements++;\n\
    \            }\n        }\n    }\n    result.push_back(commonElements);\n    return\
    \ result;\n}\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp76r0n9es: /tmp/tmp76r0n9es.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747662
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    for(long i =\
    \ 0; i < l1.size(); i++) {\n        for(long j = 0; j < l2.size(); j++) {\n  \
    \          if(l1[i] == l2[j]) {\n                common++;\n            }\n  \
    \      }\n    }\n    for(long i = 0; i < l1.size(); i++) {\n        if(common\
    \ != 0) {\n            if(l1[i] != common) {\n                result.push_back(l1[i]);\n\
    \            }\n        } else {\n            result.push_back(l1[i]);\n     \
    \   }\n    }\n    return result;\n}\nint main() {\n    auto candidate = common;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)4, (long)3, (long)34,\
    \ (long)653, (long)2, (long)5})), (std::vector<long>({(long)5, (long)7, (long)1,\
    \ (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1, (long)5,\
    \ (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpqywt1x0j: /tmp/tmpqywt1x0j.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747662
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    for (long i\
    \ = 0; i < l1.size(); i++) {\n        for (long j = 0; j < l2.size(); j++) {\n\
    \            if (l1[i] == l2[j]) {\n                common++;\n            }\n\
    \        }\n    }\n    for (long i = 0; i < l1.size(); i++) {\n        if (common\
    \ == l2.size()) {\n            result.push_back(l1[i]);\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpzgwd54jr: /tmp/tmpzgwd54jr.cpp:23: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    for (long i\
    \ = 0; i < l1.size(); i++) {\n        for (long j = 0; j < l2.size(); j++) {\n\
    \            if (l1[i] == l2[j]) {\n                common++;\n            }\n\
    \        }\n    }\n    for (long i = 0; i < l1.size(); i++) {\n        if (common\
    \ > 0) {\n            if (l1[i] == common) {\n                result.push_back(l1[i]);\n\
    \            }\n        }\n    }\n    for (long i = 0; i < l2.size(); i++) {\n\
    \        if (common > 0) {\n            if (l2[i] == common) {\n             \
    \   result.push_back(l2[i]);\n            }\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpwf2t9oci: /tmp/tmpwf2t9oci.cpp:32: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747662
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    for (long i\
    \ = 0; i < l1.size(); i++) {\n        for (long j = 0; j < l2.size(); j++) {\n\
    \            if (l1[i] == l2[j]) {\n                common++;\n            }\n\
    \        }\n    }\n    for (long i = 0; i < l1.size(); i++) {\n        if (common\
    \ != 0) {\n            if (l1[i] != common) {\n                result.push_back(l1[i]);\n\
    \            }\n        }\n    }\n    for (long i = 0; i < l2.size(); i++) {\n\
    \        if (common != 0) {\n            if (l2[i] != common) {\n            \
    \    result.push_back(l2[i]);\n            }\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpby0i2_xe: /tmp/tmpby0i2_xe.cpp:32: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747663
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    long i = 0;\n\
    \    long j = 0;\n    long k = 0;\n    while (i<l1.size() && j<l2.size()) {\n\
    \        if (l1[i]==l2[j]) {\n            common++;\n            i++;\n      \
    \      j++;\n        }\n        else if (l1[i]<l2[j]) {\n            i++;\n  \
    \      }\n        else {\n            j++;\n        }\n    }\n    while (i < l1.size())\
    \ {\n        result.push_back(l1[i]);\n        i++;\n    }\n    while (j < l2.size())\
    \ {\n        result.push_back(l2[j]);\n        j++;\n    }\n    std::sort(result.begin(),\
    \ result.end());\n    return result;\n}\nint main() {\n    auto candidate = common;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)4, (long)3, (long)34,\
    \ (long)653, (long)2, (long)5})), (std::vector<long>({(long)5, (long)7, (long)1,\
    \ (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1, (long)5,\
    \ (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp8w98xmlj: /tmp/tmp8w98xmlj.cpp:36: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747663
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    long i = 0;\n\
    \    long j = 0;\n    long k = 0;\n    while (i<l1.size() && j<l2.size()) {\n\
    \        if (l1[i]==l2[j]) {\n            common++;\n            i++;\n      \
    \      j++;\n        }\n        else if (l1[i]<l2[j]) {\n            i++;\n  \
    \      }\n        else {\n            j++;\n        }\n    }\n    result.push_back(common);\n\
    \    while (i<l1.size()) {\n        result.push_back(l1[i]);\n        i++;\n \
    \   }\n    while (j<l2.size()) {\n        result.push_back(l2[j]);\n        j++;\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = common;\n  \
    \  assert(candidate((std::vector<long>({(long)1, (long)4, (long)3, (long)34, (long)653,\
    \ (long)2, (long)5})), (std::vector<long>({(long)5, (long)7, (long)1, (long)5,\
    \ (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1, (long)5, (long)653})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)2, (long)8})),\
    \ (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2, (long)3})));\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2, (long)8})),\
    \ (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp6desbbav: /tmp/tmp6desbbav.cpp:36: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747663
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElements = 0, commonElementsCount\
    \ = 0;\n    for (long i = 0; i < l1.size(); i++) {\n        for (long j = 0; j\
    \ < l2.size(); j++) {\n            if (l1[i] == l2[j]) {\n                commonElementsCount++;\n\
    \            }\n        }\n        if (commonElementsCount == l2.size()) {\n \
    \           result.push_back(l1[i]);\n            commonElementsCount = 0;\n \
    \       }\n    }\n    return result;\n}\nint main() {\n    auto candidate = common;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)4, (long)3, (long)34,\
    \ (long)653, (long)2, (long)5})), (std::vector<long>({(long)5, (long)7, (long)1,\
    \ (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1, (long)5,\
    \ (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpe93542ux: /tmp/tmpe93542ux.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> res;\n    long common = 0;\n    for(long i = 0;\
    \ i < l1.size(); i++) {\n        for(long j = 0; j < l2.size(); j++) {\n     \
    \       if(l1[i] == l2[j]) {\n                common++;\n            }\n     \
    \   }\n    }\n    res.push_back(common);\n    return res;\n}\nint main() {\n \
    \   auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp4stzx6ns: /tmp/tmp4stzx6ns.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747663
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> res;\n    std::set_intersection(l1.begin(), l1.end(),\
    \ l2.begin(), l2.end(), std::back_inserter(res));\n    return res;\n}\nint main()\
    \ {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpi87f2225: /tmp/tmpi87f2225.cpp:11: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747663
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElements = 0;\n    long\
    \ commonCount = 0;\n    long minElement = l1[0];\n    long maxElement = l1[0];\n\
    \    long minCount = 1;\n    long maxCount = 1;\n    for (long i = 0; i < l1.size();\
    \ i++) {\n        if (l1[i] < minElement) {\n            minElement = l1[i];\n\
    \            minCount = 1;\n        } else if (l1[i] > maxElement) {\n       \
    \     maxElement = l1[i];\n            maxCount = 1;\n        } else {\n     \
    \       minCount++;\n            maxCount++;\n        }\n    }\n    for (long\
    \ i = 0; i < l2.size(); i++) {\n        if (l2[i] < minElement) {\n          \
    \  minElement = l2[i];\n            minCount = 1;\n        } else if (l2[i] >\
    \ maxElement) {\n            maxElement = l2[i];\n            maxCount = 1;\n\
    \        } else {\n            minCount++;\n            maxCount++;\n        }\n\
    \    }\n    for (long i = 0; i < l1.size(); i++) {\n        for (long j = 0; j\
    \ < l2.size(); j++) {\n            if (l1[i] == l2[j]) {\n                commonElements++;\n\
    \                commonCount++;\n            }\n        }\n    }\n    if (commonElements\
    \ == 0) {\n        return result;\n    }\n    for (long i = 0; i < l1.size();\
    \ i++) {\n        if (commonCount > maxCount) {\n            result.push_back(l1[i]);\n\
    \            commonCount--;\n        } else if (commonCount < minCount) {\n  \
    \          result.push_back(l1[i]);\n            commonCount++;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = common;\n   \
    \ assert(candidate((std::vector<long>({(long)1, (long)4, (long)3, (long)34, (long)653,\
    \ (long)2, (long)5})), (std::vector<long>({(long)5, (long)7, (long)1, (long)5,\
    \ (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1, (long)5, (long)653})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)2, (long)8})),\
    \ (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2, (long)3})));\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2, (long)8})),\
    \ (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpui3ltf0f: /tmp/tmpui3ltf0f.cpp:60: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747663
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    for (long i\
    \ = 0; i < l1.size(); i++) {\n        for (long j = 0; j < l2.size(); j++) {\n\
    \            if (l1[i] == l2[j]) {\n                common++;\n            }\n\
    \        }\n    }\n    for (long i = 0; i < l1.size(); i++) {\n        if (l1[i]\
    \ == common) {\n            result.push_back(l1[i]);\n        }\n    }\n    for\
    \ (long i = 0; i < l2.size(); i++) {\n        if (l2[i] == common) {\n       \
    \     result.push_back(l2[i]);\n        }\n    }\n    std::sort(result.begin(),\
    \ result.end());\n    return result;\n}\nint main() {\n    auto candidate = common;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)4, (long)3, (long)34,\
    \ (long)653, (long)2, (long)5})), (std::vector<long>({(long)5, (long)7, (long)1,\
    \ (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1, (long)5,\
    \ (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp51ivvz3y: /tmp/tmp51ivvz3y.cpp:29: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    result.push_back(l1[0]);\n    result.push_back(l2[0]);\n\
    \    long mid = l1[0] + l2[0] / 2;\n    for (size_t i = 1; i < l1.size(); i++)\
    \ {\n        if (l1[i] < mid) {\n            result.push_back(l1[i]);\n      \
    \  } else {\n            result.push_back(l2[i]);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpr5mjfuk6: /tmp/tmpr5mjfuk6.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747663
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> common;\n    long common_count = 0;\n    for (long\
    \ i = 0; i < l1.size(); i++) {\n        for (long j = 0; j < l2.size(); j++) {\n\
    \            if (l1[i] == l2[j]) {\n                common_count++;\n        \
    \    }\n        }\n    }\n    for (long i = 0; i < l1.size(); i++) {\n       \
    \ if (common_count == 0) {\n            common.push_back(l1[i]);\n        }\n\
    \    }\n    return common;\n}\nint main() {\n    auto candidate = common;\n  \
    \  assert(candidate((std::vector<long>({(long)1, (long)4, (long)3, (long)34, (long)653,\
    \ (long)2, (long)5})), (std::vector<long>({(long)5, (long)7, (long)1, (long)5,\
    \ (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1, (long)5, (long)653})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)2, (long)8})),\
    \ (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2, (long)3})));\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2, (long)8})),\
    \ (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp8fio93sk: /tmp/tmp8fio93sk.cpp:23: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747663
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    for (long i\
    \ = 0; i < l1.size(); i++) {\n        for (long j = 0; j < l2.size(); j++) {\n\
    \            if (l1[i] == l2[j]) {\n                common++;\n            }\n\
    \        }\n    }\n    for (long i = 0; i < l1.size(); i++) {\n        if (l1.size()\
    \ > 1) {\n            result.push_back(l1[i]);\n        }\n    }\n    for (long\
    \ i = 0; i < l2.size(); i++) {\n        if (l2.size() > 1) {\n            result.push_back(l2[i]);\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = common;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)4, (long)3, (long)34,\
    \ (long)653, (long)2, (long)5})), (std::vector<long>({(long)5, (long)7, (long)1,\
    \ (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1, (long)5,\
    \ (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp7eijvmcd: /tmp/tmp7eijvmcd.cpp:28: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747663
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElements = 0;\n    long\
    \ i = 0;\n    long j = 0;\n    long k = 0;\n    while (i<l1.size() && j<l2.size())\
    \ {\n        if (l1[i] == l2[j]) {\n            commonElements++;\n          \
    \  i++;\n            j++;\n        } else if (l1[i] < l2[j]) {\n            i++;\n\
    \        } else {\n            j++;\n        }\n    }\n    while (i < l1.size())\
    \ {\n        result.push_back(l1[i]);\n        i++;\n    }\n    while (j < l2.size())\
    \ {\n        result.push_back(l2[j]);\n        j++;\n    }\n    result.push_back(commonElements);\n\
    \    return result;\n}\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp8jw_1saw: /tmp/tmp8jw_1saw.cpp:34: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747663
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElements = 0;\n    for(long\
    \ i = 0; i < l1.size(); i++) {\n        for(long j = 0; j < l2.size(); j++) {\n\
    \            if(l1[i] == l2[j]) {\n                commonElements++;\n       \
    \     }\n        }\n    }\n    for(long i = 0; i < l1.size(); i++) {\n       \
    \ if(commonElements == 0) {\n            result.push_back(l1[i]);\n        }\n\
    \    }\n    for(long i = 0; i < l2.size(); i++) {\n        if(commonElements ==\
    \ 0) {\n            result.push_back(l2[i]);\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpubafor87: /tmp/tmpubafor87.cpp:28: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747663
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    long i = 0;\n\
    \    long j = 0;\n    long k = 0;\n    while (i<l1.size() && j<l2.size()) {\n\
    \        if (l1[i]==l2[j]) {\n            common++;\n            i++;\n      \
    \      j++;\n        } else if (l1[i]<l2[j]) {\n            i++;\n        } else\
    \ {\n            j++;\n        }\n    }\n    while (i < l1.size()) {\n       \
    \ result.push_back(l1[i]);\n        i++;\n    }\n    while (j < l2.size()) {\n\
    \        result.push_back(l2[j]);\n        j++;\n    }\n    result.push_back(common);\n\
    \    return result;\n}\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp4m31opte: /tmp/tmp4m31opte.cpp:34: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> res;\n    long common = 0;\n    for (long i = 0;\
    \ i < l1.size(); i++) {\n        for (long j = 0; j < l2.size(); j++) {\n    \
    \        if (l1[i] == l2[j]) {\n                common++;\n            }\n   \
    \     }\n    }\n    res.push_back(common);\n    return res;\n}\nint main() {\n\
    \    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp1k5yg22p: /tmp/tmp1k5yg22p.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElements = 0;\n    long\
    \ minElement = l1[0], maxElement = l1[0];\n    for(long i : l1) {\n        if(minElement\
    \ > i) {\n            minElement = i;\n        }\n        if(maxElement < i) {\n\
    \            maxElement = i;\n        }\n    }\n    for(long i : l2) {\n     \
    \   if(minElement > i) {\n            minElement = i;\n        }\n        if(maxElement\
    \ < i) {\n            maxElement = i;\n        }\n    }\n    for(long i = minElement;\
    \ i <= maxElement; i++) {\n        if(std::find(l1.begin(), l1.end(), i) != l1.end())\
    \ {\n            result.push_back(i);\n            commonElements++;\n       \
    \ }\n    }\n    for(long i = minElement; i <= maxElement; i++) {\n        if(std::find(l2.begin(),\
    \ l2.end(), i) != l2.end()) {\n            result.push_back(i);\n            commonElements++;\n\
    \        }\n    }\n    for(long i = minElement; i <= maxElement; i++) {\n    \
    \    if(std::find(result.begin(), result.end(), i) != result.end()) {\n      \
    \      result.push_back(i);\n            commonElements++;\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpq93nktkb: /tmp/tmpq93nktkb.cpp:46: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747663
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElements = 0;\n    for(long\
    \ i = 0; i < l1.size(); i++) {\n        for(long j = 0; j < l2.size(); j++) {\n\
    \            if(l1[i] == l2[j]) {\n                commonElements++;\n       \
    \     }\n        }\n    }\n    result.push_back(commonElements);\n    return result;\n\
    }\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpy7fp1b4z: /tmp/tmpy7fp1b4z.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747663
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    for (long i\
    \ = 0; i < l1.size(); i++) {\n        if (l1.at(i) == l2.at(i)) {\n          \
    \  common++;\n        } else {\n            result.push_back(common);\n      \
    \      common = l1.at(i);\n        }\n    }\n    result.push_back(common);\n \
    \   return result;\n}\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmps8vx0q_i: /tmp/tmps8vx0q_i.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    long i = 0;\n\
    \    long j = 0;\n    long k = 0;\n    while (i<l1.size() && j<l2.size()) {\n\
    \        if (l1[i] == l2[j]) {\n            common++;\n            i++;\n    \
    \        j++;\n        } else if (l1[i] > l2[j]) {\n            i++;\n       \
    \ } else {\n            j++;\n        }\n    }\n    while (i < l1.size()) {\n\
    \        result.push_back(l1[i]);\n        i++;\n    }\n    while (j < l2.size())\
    \ {\n        result.push_back(l2[j]);\n        j++;\n    }\n    while (i < l1.size()\
    \ && j < l2.size()) {\n        if (l1[i] == l2[j]) {\n            common++;\n\
    \            i++;\n            j++;\n        } else if (l1[i] > l2[j]) {\n   \
    \         i++;\n        } else {\n            j++;\n        }\n    }\n    while\
    \ (i < l1.size()) {\n        result.push_back(l1[i]);\n        i++;\n    }\n \
    \   while (j < l2.size()) {\n        result.push_back(l2[j]);\n        j++;\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = common;\n  \
    \  assert(candidate((std::vector<long>({(long)1, (long)4, (long)3, (long)34, (long)653,\
    \ (long)2, (long)5})), (std::vector<long>({(long)5, (long)7, (long)1, (long)5,\
    \ (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1, (long)5, (long)653})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)2, (long)8})),\
    \ (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2, (long)3})));\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2, (long)8})),\
    \ (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpprv8xj2g: /tmp/tmpprv8xj2g.cpp:52: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747663
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElements = 0;\n    long\
    \ maxElements = std::max(l1.size(), l2.size());\n    for(long i = 0; i < maxElements;\
    \ i++) {\n        if(l1[i] == l2[i]) {\n            commonElements++;\n      \
    \  } else {\n            result.push_back(commonElements);\n            commonElements\
    \ = 0;\n        }\n    }\n    if(commonElements > 0) {\n        result.push_back(commonElements);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = common;\n  \
    \  assert(candidate((std::vector<long>({(long)1, (long)4, (long)3, (long)34, (long)653,\
    \ (long)2, (long)5})), (std::vector<long>({(long)5, (long)7, (long)1, (long)5,\
    \ (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1, (long)5, (long)653})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)2, (long)8})),\
    \ (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2, (long)3})));\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2, (long)8})),\
    \ (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpb84wph8g: /tmp/tmpb84wph8g.cpp:23: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747663
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long temp;\n    long i = 0;\n    long\
    \ j = 0;\n    long k = 0;\n    long count = 0;\n    while ((i < l1.size()) &&\
    \ (j < l2.size())) {\n        if (l1[i] == l2[j]) {\n            count++;\n  \
    \          i++;\n            j++;\n        } else if (l1[i] < l2[j]) {\n     \
    \       temp = l1[i];\n            l1[i] = l2[j];\n            l2[j] = temp;\n\
    \            i++;\n        } else {\n            temp = l2[j];\n            l2[j]\
    \ = l1[i];\n            l1[i] = temp;\n            j++;\n        }\n    }\n  \
    \  while (i < l1.size()) {\n        result.push_back(l1[i]);\n        i++;\n \
    \   }\n    while (j < l2.size()) {\n        result.push_back(l2[j]);\n       \
    \ j++;\n    }\n    while (i < l1.size()) {\n        result.push_back(l1[i]);\n\
    \        i++;\n    }\n    while (j < l2.size()) {\n        result.push_back(l2[j]);\n\
    \        j++;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = common;\n    assert(candidate((std::vector<long>({(long)1, (long)4, (long)3,\
    \ (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5, (long)7,\
    \ (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpuallzn09: /tmp/tmpuallzn09.cpp:48: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747663
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElements = 0;\n    long\
    \ minElement = l1[0], maxElement = l1[0];\n    for (long i : l1) {\n        if\
    \ (i < minElement) minElement = i;\n        if (i > maxElement) maxElement = i;\n\
    \    }\n    for (long i : l2) {\n        if (i < minElement) minElement = i;\n\
    \        if (i > maxElement) maxElement = i;\n    }\n    for (long i = minElement;\
    \ i <= maxElement; i++) {\n        if (l1.find(i) != l1.end() && l2.find(i) !=\
    \ l2.end()) {\n            commonElements++;\n        }\n    }\n    result.push_back(commonElements);\n\
    \    return result;\n}\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp3d1zcwu.cpp: In function \u2018std::vector<long int> common(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpp3d1zcwu.cpp:17:16: error: \u2018\
    class std::vector<long int>\u2019 has no member named \u2018find\u2019\n   17\
    \ |         if (l1.find(i) != l1.end() && l2.find(i) != l2.end()) {\n      | \
    \               ^~~~\n/tmp/tmpp3d1zcwu.cpp:17:42: error: \u2018class std::vector<long\
    \ int>\u2019 has no member named \u2018find\u2019\n   17 |         if (l1.find(i)\
    \ != l1.end() && l2.find(i) != l2.end()) {\n      |                          \
    \                ^~~~\n"
  stdout: ''
  timestamp: 1659747663
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> common;\n    long common_count = 0;\n    for (long\
    \ i = 0; i < l1.size(); i++) {\n        for (long j = 0; j < l2.size(); j++) {\n\
    \            if (l1[i] == l2[j]) {\n                common_count++;\n        \
    \    }\n        }\n    }\n    common.reserve(common_count);\n    for (long i =\
    \ 0; i < l1.size(); i++) {\n        for (long j = 0; j < l2.size(); j++) {\n \
    \           if (l1[i] == l2[j]) {\n                common.push_back(l1[i]);\n\
    \            }\n        }\n    }\n    return common;\n}\nint main() {\n    auto\
    \ candidate = common;\n    assert(candidate((std::vector<long>({(long)1, (long)4,\
    \ (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmps6_13tsn: /tmp/tmps6_13tsn.cpp:26: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747662
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long temp;\n    long i = 0;\n    long\
    \ j = 0;\n    long k = 0;\n    while (i<l1.size() && j<l2.size()) {\n        if\
    \ (l1[i]==l2[j]) {\n            result.push_back(l1[i]);\n            i++;\n \
    \           j++;\n        } else if (l1[i]<l2[j]) {\n            i++;\n      \
    \  } else {\n            j++;\n        }\n    }\n    while (i < l1.size()) {\n\
    \        result.push_back(l1[i]);\n        i++;\n    }\n    while (j < l2.size())\
    \ {\n        result.push_back(l2[j]);\n        j++;\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpzbqpt627: /tmp/tmpzbqpt627.cpp:33: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747663
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    for (long i\
    \ = 0; i < l1.size(); i++) {\n        for (long j = 0; j < l2.size(); j++) {\n\
    \            if (l1[i] == l2[j]) {\n                common++;\n            }\n\
    \        }\n    }\n    for (long i = 0; i < l1.size(); i++) {\n        if (l1[i]\
    \ == common) {\n            result.push_back(l1[i]);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpm5r45fdt: /tmp/tmpm5r45fdt.cpp:23: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747662
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElements = 0;\n    long\
    \ minElement = l1[0], maxElement = l1[0];\n    for (long i : l1) {\n        if\
    \ (i < minElement) minElement = i;\n        if (i > maxElement) maxElement = i;\n\
    \    }\n    for (long i : l2) {\n        if (i < minElement) minElement = i;\n\
    \        if (i > maxElement) maxElement = i;\n    }\n    for (long i = minElement;\
    \ i <= maxElement; i++) {\n        if (l1.find(i) != l1.end()) {\n           \
    \ result.push_back(i);\n            commonElements++;\n        }\n        if (l2.find(i)\
    \ != l2.end()) {\n            result.push_back(i);\n            commonElements++;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = common;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)4, (long)3, (long)34,\
    \ (long)653, (long)2, (long)5})), (std::vector<long>({(long)5, (long)7, (long)1,\
    \ (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1, (long)5,\
    \ (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpq9srozec.cpp: In function \u2018std::vector<long int> common(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpq9srozec.cpp:17:16: error: \u2018\
    class std::vector<long int>\u2019 has no member named \u2018find\u2019\n   17\
    \ |         if (l1.find(i) != l1.end()) {\n      |                ^~~~\n/tmp/tmpq9srozec.cpp:21:16:\
    \ error: \u2018class std::vector<long int>\u2019 has no member named \u2018find\u2019\
    \n   21 |         if (l2.find(i) != l2.end()) {\n      |                ^~~~\n"
  stdout: ''
  timestamp: 1659747663
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    result.push_back(l1[0]);\n    result.push_back(l2[0]);\n\
    \    long mid = l1[0] + l2[0];\n    for (long i = 1; i < l1.size(); i++) {\n \
    \       if (l1[i] < mid) {\n            result.push_back(l1[i]);\n        } else\
    \ {\n            result.push_back(l2[i]);\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpjax4lef2: /tmp/tmpjax4lef2.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747663
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElements = 0, commonElementsCount\
    \ = 0;\n    for (long i = 0; i < l1.size(); i++) {\n        for (long j = 0; j\
    \ < l2.size(); j++) {\n            if (l1[i] == l2[j]) {\n                commonElementsCount++;\n\
    \            }\n        }\n        if (commonElementsCount > commonElements) {\n\
    \            commonElements = commonElementsCount;\n            result.clear();\n\
    \            result.push_back(l1[i]);\n        }\n        commonElementsCount\
    \ = 0;\n    }\n    return result;\n}\nint main() {\n    auto candidate = common;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)4, (long)3, (long)34,\
    \ (long)653, (long)2, (long)5})), (std::vector<long>({(long)5, (long)7, (long)1,\
    \ (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1, (long)5,\
    \ (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp_0kgauw8: /tmp/tmp_0kgauw8.cpp:24: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747663
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    for(long i =\
    \ 0; i < l1.size(); i++) {\n        for(long j = 0; j < l2.size(); j++) {\n  \
    \          if(l1[i] == l2[j]) {\n                common++;\n            }\n  \
    \      }\n    }\n    result.push_back(common);\n    return result;\n}\nint main()\
    \ {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp2v4a9kgx: /tmp/tmp2v4a9kgx.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    for(long i =\
    \ 0; i < l1.size(); i++) {\n        for(long j = 0; j < l2.size(); j++) {\n  \
    \          if(l1[i] == l2[j]) {\n                common++;\n            }\n  \
    \      }\n    }\n    result.push_back(common);\n    return result;\n}\nint main()\
    \ {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp2v4a9kgx: /tmp/tmp2v4a9kgx.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> res;\n    long common = 0;\n    for (long i : l1)\
    \ {\n        for (long j : l2) {\n            if (i == j) {\n                common++;\n\
    \            }\n        }\n    }\n    for (long i : l2) {\n        for (long j\
    \ : l1) {\n            if (i == j) {\n                common++;\n            }\n\
    \        }\n    }\n    res.push_back(common);\n    return res;\n}\nint main()\
    \ {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpww0umwfr: /tmp/tmpww0umwfr.cpp:26: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747663
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    for (long i\
    \ = 0; i < l1.size(); i++) {\n        for (long j = 0; j < l2.size(); j++) {\n\
    \            if (l1[i] == l2[j]) {\n                common++;\n            }\n\
    \        }\n    }\n    for (long i = 0; i < l1.size(); i++) {\n        if (l1.size()\
    \ == common) {\n            result.push_back(l1[i]);\n        }\n    }\n    for\
    \ (long i = 0; i < l2.size(); i++) {\n        if (l2.size() == common) {\n   \
    \         result.push_back(l2[i]);\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmphhchrol_: /tmp/tmphhchrol_.cpp:28: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747664
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> res;\n    std::sort(l1.begin(), l1.end());\n  \
    \  std::sort(l2.begin(), l2.end());\n    long i = 0;\n    long j = 0;\n    while\
    \ (i < l1.size() && j < l2.size()) {\n        if (l1[i] == l2[j]) {\n        \
    \    res.push_back(l1[i]);\n            i++;\n            j++;\n        } else\
    \ if (l1[i] < l2[j]) {\n            i++;\n        } else {\n            j++;\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = common;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)4, (long)3, (long)34,\
    \ (long)653, (long)2, (long)5})), (std::vector<long>({(long)5, (long)7, (long)1,\
    \ (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1, (long)5,\
    \ (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747664
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElements = 0;\n    long\
    \ commonCount = 0;\n    for (long i = 0; i < l1.size(); i++) {\n        for (long\
    \ j = 0; j < l2.size(); j++) {\n            if (l1[i] == l2[j]) {\n          \
    \      commonElements++;\n                commonCount++;\n            }\n    \
    \    }\n    }\n    for (long i = 0; i < l1.size(); i++) {\n        if (commonCount\
    \ > 0) {\n            if (commonElements == commonCount) {\n                result.push_back(l1[i]);\n\
    \            }\n        }\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = common;\n    assert(candidate((std::vector<long>({(long)1, (long)4,\
    \ (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp5ya4mmat: /tmp/tmp5ya4mmat.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747664
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    long i = 0;\n\
    \    long j = 0;\n    long k = 0;\n    while (i<l1.size() && j<l2.size()) {\n\
    \        if (l1[i]==l2[j]) {\n            common++;\n            i++;\n      \
    \      j++;\n        } else if (l1[i]<l2[j]) {\n            i++;\n        } else\
    \ {\n            j++;\n        }\n    }\n    while (i < l1.size()) {\n       \
    \ result.push_back(l1[i]);\n        i++;\n    }\n    while (j < l2.size()) {\n\
    \        result.push_back(l2[j]);\n        j++;\n    }\n    std::sort(result.begin(),\
    \ result.end());\n    return result;\n}\nint main() {\n    auto candidate = common;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)4, (long)3, (long)34,\
    \ (long)653, (long)2, (long)5})), (std::vector<long>({(long)5, (long)7, (long)1,\
    \ (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1, (long)5,\
    \ (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp6451wsao: /tmp/tmp6451wsao.cpp:34: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElements = 0;\n    for(long\
    \ i = 0; i < l1.size(); i++) {\n        for(long j = 0; j < l2.size(); j++) {\n\
    \            if(l1[i] == l2[j]) {\n                commonElements++;\n       \
    \     }\n        }\n    }\n    result.push_back(commonElements);\n    return result;\n\
    }\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpy7fp1b4z: /tmp/tmpy7fp1b4z.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747663
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElements = 0;\n    for\
    \ (long i = 0; i < l1.size(); i++) {\n        for (long j = 0; j < l2.size();\
    \ j++) {\n            if (l1[i] == l2[j]) {\n                commonElements++;\n\
    \            }\n        }\n    }\n    for (long i = 0; i < l1.size(); i++) {\n\
    \        if (commonElements == 0) {\n            result.push_back(l1[i]);\n  \
    \      }\n    }\n    for (long i = 0; i < l2.size(); i++) {\n        if (commonElements\
    \ == 0) {\n            result.push_back(l2[i]);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpdn2kxkim: /tmp/tmpdn2kxkim.cpp:28: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    for(long i =\
    \ 0; i < l1.size(); i++) {\n        for(long j = 0; j < l2.size(); j++) {\n  \
    \          if(l1[i] == l2[j]) {\n                common++;\n            }\n  \
    \      }\n    }\n    for(long i = 0; i < l1.size(); i++) {\n        if(l1[i] ==\
    \ common) {\n            result.push_back(l1[i]);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp4d3q9l5y: /tmp/tmp4d3q9l5y.cpp:23: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElements = 0;\n    for(long\
    \ i = 0; i < l1.size(); i++) {\n        for(long j = 0; j < l2.size(); j++) {\n\
    \            if(l1[i] == l2[j]) {\n                commonElements++;\n       \
    \     }\n        }\n    }\n    result.push_back(commonElements);\n    return result;\n\
    }\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpy7fp1b4z: /tmp/tmpy7fp1b4z.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747663
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElements = 0;\n    for(long\
    \ i = 0; i < l1.size(); i++) {\n        for(long j = 0; j < l2.size(); j++) {\n\
    \            if(l1[i] == l2[j]) {\n                commonElements++;\n       \
    \     }\n        }\n    }\n    result.push_back(commonElements);\n    return result;\n\
    }\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpy7fp1b4z: /tmp/tmpy7fp1b4z.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747663
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElements = 0;\n    long\
    \ minElements = std::min(l1.size(), l2.size());\n    for (long i = 0; i < minElements;\
    \ i++) {\n        if (l1[i] == l2[i]) {\n            commonElements++;\n     \
    \   } else {\n            result.push_back(l1[i]);\n        }\n    }\n    if (commonElements\
    \ == 0) {\n        return result;\n    }\n    for (long i = 0; i < minElements;\
    \ i++) {\n        if (l1[i] != l2[i]) {\n            result.push_back(l1[i]);\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = common;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)4, (long)3, (long)34,\
    \ (long)653, (long)2, (long)5})), (std::vector<long>({(long)5, (long)7, (long)1,\
    \ (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1, (long)5,\
    \ (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpnq83olwb: /tmp/tmpnq83olwb.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747664
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> common;\n    long common_count = 0;\n    long common_element;\n\
    \    for (long i = 0; i < l1.size(); i++) {\n        for (long j = 0; j < l2.size();\
    \ j++) {\n            if (l1[i] == l2[j]) {\n                common_element++;\n\
    \            }\n        }\n        if (common_element == common_count) {\n   \
    \         common.push_back(l1[i]);\n            common_count++;\n        }\n \
    \       common_element = 0;\n    }\n    return common;\n}\nint main() {\n    auto\
    \ candidate = common;\n    assert(candidate((std::vector<long>({(long)1, (long)4,\
    \ (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp3c0ss7g6: /tmp/tmp3c0ss7g6.cpp:24: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747664
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    for (long i\
    \ = 0; i < l1.size(); i++) {\n        for (long j = 0; j < l2.size(); j++) {\n\
    \            if (l1[i] == l2[j]) {\n                common++;\n              \
    \  break;\n            }\n        }\n    }\n    for (long i = 0; i < l1.size();\
    \ i++) {\n        if (l1[i] == common) {\n            result.push_back(l1[i]);\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = common;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)4, (long)3, (long)34,\
    \ (long)653, (long)2, (long)5})), (std::vector<long>({(long)5, (long)7, (long)1,\
    \ (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1, (long)5,\
    \ (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpilu_q9on: /tmp/tmpilu_q9on.cpp:24: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    for (long i\
    \ = 0; i < l1.size(); i++) {\n        for (long j = 0; j < l2.size(); j++) {\n\
    \            if (l1[i] == l2[j]) {\n                common++;\n            }\n\
    \        }\n    }\n    for (long i = 0; i < l1.size(); i++) {\n        if (common\
    \ == l2.size()) {\n            result.push_back(l1[i]);\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpzgwd54jr: /tmp/tmpzgwd54jr.cpp:23: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElements = 0;\n    for\
    \ (long i = 0; i < l1.size(); i++) {\n        for (long j = 0; j < l2.size();\
    \ j++) {\n            if (l1[i] == l2[j]) {\n                commonElements++;\n\
    \            }\n        }\n    }\n    for (long i = 0; i < l1.size(); i++) {\n\
    \        if (commonElements == 0) {\n            result.push_back(l1[i]);\n  \
    \      }\n    }\n    for (long i = 0; i < l2.size(); i++) {\n        if (commonElements\
    \ == 0) {\n            result.push_back(l2[i]);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpdn2kxkim: /tmp/tmpdn2kxkim.cpp:28: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElements = 0;\n    long\
    \ commonCount = 0;\n    long commonIndex = 0;\n    long index = 0;\n    long count\
    \ = 0;\n    long temp = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n\
    \    long l = 0;\n    long m = 0;\n    long n = 0;\n    long o = 0;\n    long\
    \ p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n\
    \    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long\
    \ y = 0;\n    long z = 0;\n    long A = 0;\n    long B = 0;\n    long C = 0;\n\
    \    long D = 0;\n    long E = 0;\n    long F = 0;\n    long G = 0;\n    long\
    \ H = 0;\n    long I = 0;\n    long J = 0;\n    long K = 0;\n    long L = 0;\n\
    \    long M = 0;\n    long N = 0;\n    long O = 0;\n    long P = 0;\n    long\
    \ Q = 0;\n    long R = 0;\n    long S = 0;\n    long T = 0;\n    long U = 0;\n\
    \    long V = 0;\n    long W = 0;\n    long X = 0;\n    long Y = 0;\n    long\
    \ Z = 0;\n    long AA = 0;\n    long AB = 0;\n    long AC = 0;\n    long AD =\
    \ 0;\n    long AE = 0;\n    long AF = 0;\n    long AG = 0;\n    long AH = 0;\n\
    \    long AI = 0;\n    long AJ = 0;\n    long AK = 0;\n    long AL = 0;\n    long\
    \ AM = 0;\n    long AN = 0;\n    long AO = 0;\n    long AP = 0;\n    long AQ =\
    \ 0;\n    long AR = 0;\n    long AS = 0;\n    long AT = 0;\n    long AU = 0;\n\
    \    long AV = 0;\n    long AW = 0;\n    long AX = 0;\n    long AY = 0;\n    long\
    \ AZ = 0;\n    long BA = 0;\n    long BB = 0;\n    long BC = 0;\n    long BD =\
    \ 0;\n    long BE = 0;\n    long BF = 0;\n    long BG = 0;\n    long BH = 0;\n\
    \    long BI = 0;\n    long BJ = 0;\n    long BK = 0;\n    long BL = 0;\n    long\
    \ BM = 0;\n    long BN = 0;\n    long BO = 0;\n    long BP = 0;\n    long BQ =\
    \ 0;\n    long BR = 0;\n    long BS = 0;\n    long BT = 0;\n    long BU = 0;\n\
    \    long BV = 0;\n    long BW = 0;\n    long BX = 0;\n}\nint main() {\n    auto\
    \ candidate = common;\n    assert(candidate((std::vector<long>({(long)1, (long)4,\
    \ (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpi2b63uzu: /tmp/tmpi2b63uzu.cpp:109: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747664
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElement = 0;\n    for (long\
    \ i : l1) {\n        if (std::find(l2.begin(), l2.end(), i) != l2.end()) {\n \
    \           result.push_back(i);\n        }\n    }\n    for (long i : l2) {\n\
    \        if (std::find(l1.begin(), l1.end(), i) != l1.end()) {\n            result.push_back(i);\n\
    \        }\n    }\n    for (long i : result) {\n        if (i == commonElement)\
    \ {\n            continue;\n        }\n        commonElement = i;\n    }\n   \
    \ return result;\n}\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp2x776_30: /tmp/tmp2x776_30.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747664
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    for (long i\
    \ = 0; i < l1.size(); i++) {\n        for (long j = 0; j < l2.size(); j++) {\n\
    \            if (l1[i] == l2[j]) {\n                common++;\n            }\n\
    \        }\n    }\n    for (long i = 0; i < l1.size(); i++) {\n        if (common\
    \ > 0) {\n            if (l1[i] == common) {\n                result.push_back(l1[i]);\n\
    \            }\n        }\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = common;\n    assert(candidate((std::vector<long>({(long)1, (long)4,\
    \ (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpqpvy1gm1: /tmp/tmpqpvy1gm1.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElements = 0;\n    long\
    \ minElement = l1[0], maxElement = l1[0];\n    for(long i : l1) {\n        if(minElement\
    \ > i) minElement = i;\n        if(maxElement < i) maxElement = i;\n    }\n  \
    \  for(long i : l2) {\n        if(minElement > i) minElement = i;\n        if(maxElement\
    \ < i) maxElement = i;\n    }\n    for(long i = minElement; i <= maxElement; i++)\
    \ {\n        for(long j : l2) {\n            if(j == i) continue;\n          \
    \  if(commonElements == 0) commonElements = 1;\n            else if(commonElements\
    \ == 1) commonElements = 2;\n            else if(commonElements == 2) commonElements\
    \ = 3;\n            else if(commonElements == 3) commonElements = 4;\n       \
    \     else if(commonElements == 4) commonElements = 5;\n            else if(commonElements\
    \ == 5) commonElements = 6;\n            else if(commonElements == 6) commonElements\
    \ = 7;\n            else if(commonElements == 7) commonElements = 8;\n       \
    \     else if(commonElements == 8) commonElements = 9;\n            else if(commonElements\
    \ == 9) commonElements = 10;\n            else if(commonElements == 10) commonElements\
    \ = 11;\n            else if(commonElements == 11) commonElements = 12;\n    \
    \        else if(commonElements == 12) commonElements = 13;\n            else\
    \ if(commonElements == 13) commonElements = 14;\n            else if(commonElements\
    \ == 14) commonElements = 15;\n            else if(commonElements == 15) commonElements\
    \ = 16;\n            else if(commonElements == 16) commonElements = 17;\n    \
    \        else if(commonElements == 17) commonElements = 18;\n            else\
    \ if(commonElements == 18) commonElements = 19;\n            else if(commonElements\
    \ == 19) commonElements = 20;\n            else if(commonElements == 20) commonElements\
    \ = 21;\n            else if(commonElements == 21) commonElements = 22;\n    \
    \        else if(commonElements == 22) commonElements = 23;\n            else\
    \ if(commonElements == 23) commonElements = 24;\n            else if(commonElements\
    \ == 24) commonElements = 25;\n            else if(commonElements == 25) commonElements\
    \ = 26;\n            else if(commonElements == 26) commonElements = 27;\n    \
    \        else if(commonElements == 27) commonElements = 28;\n            else\
    \ if(commonElements == 28) commonElements = 29;\n            else if(commonElements\
    \ == 29) commonElements = 30;\n            else if(commonElements == 30) commonElements\
    \ = 31;\n            else if(commonElements == 31) commonElements = 32;\n    \
    \        else if(commonElements == 32) commonElements = 33;\n            else\
    \ if(\n}\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpebjuxn61.cpp: In function \u2018std::vector<long int> common(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpebjuxn61.cpp:53:1: error: expected\
    \ primary-expression before \u2018}\u2019 token\n   53 | }\n      | ^\n/tmp/tmpebjuxn61.cpp:52:21:\
    \ error: expected \u2018)\u2019 before \u2018}\u2019 token\n   52 |          \
    \   else if(\n      |                    ~^\n      |                     )\n \
    \  53 | }\n      | ~                    \n/tmp/tmpebjuxn61.cpp:53:1: error: expected\
    \ primary-expression before \u2018}\u2019 token\n   53 | }\n      | ^\n/tmp/tmpebjuxn61.cpp:54:12:\
    \ error: a function-definition is not allowed here before \u2018{\u2019 token\n\
    \   54 | int main() {\n      |            ^\n/tmp/tmpebjuxn61.cpp:60:1: error:\
    \ expected \u2018}\u2019 at end of input\n   60 | }\n      | ^\n/tmp/tmpebjuxn61.cpp:16:52:\
    \ note: to match this \u2018{\u2019\n   16 |     for(long i = minElement; i <=\
    \ maxElement; i++) {\n      |                                                \
    \    ^\n/tmp/tmpebjuxn61.cpp:60:1: error: expected \u2018}\u2019 at end of input\n\
    \   60 | }\n      | ^\n/tmp/tmpebjuxn61.cpp:4:70: note: to match this \u2018{\u2019\
    \n    4 | std::vector<long> common(std::vector<long> l1, std::vector<long> l2)\
    \ {\n      |                                                                 \
    \     ^\n/tmp/tmpebjuxn61.cpp:60:1: warning: no return statement in function returning\
    \ non-void [-Wreturn-type]\n   60 | }\n      | ^\n"
  stdout: ''
  timestamp: 1659747664
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElements = 0;\n    long\
    \ minElement = l1[0], maxElement = l2[0];\n    for (long i = 1; i < l1.size();\
    \ i++) {\n        if (l1[i] < minElement) {\n            minElement = l1[i];\n\
    \        }\n        if (l2[i] > maxElement) {\n            maxElement = l2[i];\n\
    \        }\n    }\n    for (long i = 0; i < l1.size(); i++) {\n        if (l1[i]\
    \ == maxElement && l2[i] == minElement) {\n            result.push_back(l1[i]);\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = common;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)4, (long)3, (long)34,\
    \ (long)653, (long)2, (long)5})), (std::vector<long>({(long)5, (long)7, (long)1,\
    \ (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1, (long)5,\
    \ (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpoeiubijw: /tmp/tmpoeiubijw.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747664
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElements = 0;\n    for\
    \ (long i = 0; i < l1.size(); i++) {\n        for (long j = 0; j < l2.size();\
    \ j++) {\n            if (l1[i] == l2[j]) {\n                commonElements++;\n\
    \            }\n        }\n    }\n    for (long i = 0; i < l1.size(); i++) {\n\
    \        if (commonElements == 0) {\n            result.push_back(l1[i]);\n  \
    \      }\n    }\n    for (long i = 0; i < l2.size(); i++) {\n        if (commonElements\
    \ == 0) {\n            result.push_back(l2[i]);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpdn2kxkim: /tmp/tmpdn2kxkim.cpp:28: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> common;\n    long common_count = 0;\n    for (long\
    \ i = 0; i < l1.size(); i++) {\n        for (long j = 0; j < l2.size(); j++) {\n\
    \            if (l1[i] == l2[j]) {\n                common_count++;\n        \
    \        break;\n            }\n        }\n    }\n    for (long i = 0; i < l1.size();\
    \ i++) {\n        if (common_count == l2.size()) {\n            common.push_back(l1[i]);\n\
    \        }\n    }\n    return common;\n}\nint main() {\n    auto candidate = common;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)4, (long)3, (long)34,\
    \ (long)653, (long)2, (long)5})), (std::vector<long>({(long)5, (long)7, (long)1,\
    \ (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1, (long)5,\
    \ (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpeeshgze2: /tmp/tmpeeshgze2.cpp:24: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747664
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElement = 0;\n    long\
    \ minElement = l1[0], maxElement = l2[0];\n    for(long i = 1; i < l1.size();\
    \ i++) {\n        if(l1[i] < minElement) {\n            minElement = l1[i];\n\
    \        }\n        if(l2[i] > maxElement) {\n            maxElement = l2[i];\n\
    \        }\n    }\n    for(long i = 1; i < l2.size(); i++) {\n        if(l2[i]\
    \ < minElement) {\n            minElement = l2[i];\n        }\n        if(l2[i]\
    \ > maxElement) {\n            maxElement = l2[i];\n        }\n    }\n    for(long\
    \ i = 1; i < l1.size(); i++) {\n        if(l1[i] == minElement) {\n          \
    \  commonElement = l1[i];\n        }\n    }\n    for(long i = 1; i < l2.size();\
    \ i++) {\n        if(l2[i] == maxElement) {\n            commonElement = l2[i];\n\
    \        }\n    }\n    result.push_back(commonElement);\n    for(long i = 1; i\
    \ < l1.size(); i++) {\n        if(l1[i] != commonElement) {\n            result.push_back(l1[i]);\n\
    \        }\n    }\n    for(long i = 1; i < l2.size(); i++) {\n        if(l2[i]\
    \ != commonElement) {\n            result.push_back(l2[i]);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp_zxqypek: /tmp/tmp_zxqypek.cpp:49: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747664
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    for (long i\
    \ = 0; i < l1.size(); i++) {\n        for (long j = 0; j < l2.size(); j++) {\n\
    \            if (l1[i] == l2[j]) {\n                common++;\n            }\n\
    \        }\n    }\n    for (long i = 0; i < l1.size(); i++) {\n        if (common\
    \ > 0) {\n            if (l1[i] != common) {\n                result.push_back(l1[i]);\n\
    \            }\n        } else {\n            result.push_back(l1[i]);\n     \
    \   }\n    }\n    return result;\n}\nint main() {\n    auto candidate = common;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)4, (long)3, (long)34,\
    \ (long)653, (long)2, (long)5})), (std::vector<long>({(long)5, (long)7, (long)1,\
    \ (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1, (long)5,\
    \ (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp4gye2sqn: /tmp/tmp4gye2sqn.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747664
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    long min1 =\
    \ l1[0], min2 = l2[0];\n    for (long i = 1; i < min(l1.size(), l2.size()); i++)\
    \ {\n        if (l1[i] < min1) {\n            min1 = l1[i];\n        } else if\
    \ (l2[i] < min2) {\n            min2 = l2[i];\n        }\n    }\n    for (long\
    \ i = 0; i < min(l1.size(), l2.size()); i++) {\n        if (l1[i] == min1 && l2[i]\
    \ == min2) {\n            common++;\n        } else if (l1[i] != min1 && l2[i]\
    \ != min2) {\n            result.push_back(l1[i]);\n            result.push_back(l2[i]);\n\
    \        }\n    }\n    for (long i = 0; i < min(l1.size(), l2.size()); i++) {\n\
    \        if (l1[i] != min1 && l2[i] != min2) {\n            result.push_back(l1[i]);\n\
    \            result.push_back(l2[i]);\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5kg4un95.cpp: In function \u2018std::vector<long int> common(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmp5kg4un95.cpp:8:26: error: \u2018\
    min\u2019 was not declared in this scope; did you mean \u2018std::min\u2019?\n\
    \    8 |     for (long i = 1; i < min(l1.size(), l2.size()); i++) {\n      | \
    \                         ^~~\n      |                          std::min\nIn file\
    \ included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:62,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp5kg4un95.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algo.h:3450:5:\
    \ note: \u2018std::min\u2019 declared here\n 3450 |     min(initializer_list<_Tp>\
    \ __l, _Compare __comp)\n      |     ^~~\n/tmp/tmp5kg4un95.cpp:15:26: error: \u2018\
    min\u2019 was not declared in this scope; did you mean \u2018std::min\u2019?\n\
    \   15 |     for (long i = 0; i < min(l1.size(), l2.size()); i++) {\n      | \
    \                         ^~~\n      |                          std::min\nIn file\
    \ included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:62,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp5kg4un95.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algo.h:3450:5:\
    \ note: \u2018std::min\u2019 declared here\n 3450 |     min(initializer_list<_Tp>\
    \ __l, _Compare __comp)\n      |     ^~~\n/tmp/tmp5kg4un95.cpp:23:26: error: \u2018\
    min\u2019 was not declared in this scope; did you mean \u2018std::min\u2019?\n\
    \   23 |     for (long i = 0; i < min(l1.size(), l2.size()); i++) {\n      | \
    \                         ^~~\n      |                          std::min\nIn file\
    \ included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:62,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp5kg4un95.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algo.h:3450:5:\
    \ note: \u2018std::min\u2019 declared"
  stdout: ''
  timestamp: 1659747664
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElements = 0;\n    long\
    \ minElement = l1[0], maxElement = l2[0];\n    for (long i = 1; i < l1.size();\
    \ i++) {\n        if (l1[i] < minElement) {\n            minElement = l1[i];\n\
    \        }\n        if (l2[i] > maxElement) {\n            maxElement = l2[i];\n\
    \        }\n    }\n    for (long i = 0; i < l2.size(); i++) {\n        if (l2[i]\
    \ < minElement) {\n            minElement = l2[i];\n        }\n        if (l2[i]\
    \ > maxElement) {\n            maxElement = l2[i];\n        }\n    }\n    for\
    \ (long i = 0; i < l1.size(); i++) {\n        for (long j = 0; j < l2.size();\
    \ j++) {\n            if (l1[i] == l2[j]) {\n                commonElements++;\n\
    \            }\n        }\n    }\n    for (long i = 0; i < l1.size(); i++) {\n\
    \        if (l1[i] < minElement) {\n            result.push_back(l1[i]);\n   \
    \     }\n        if (l1[i] > maxElement) {\n            result.push_back(l1[i]);\n\
    \        }\n    }\n    for (long i = 0; i < l2.size(); i++) {\n        if (l2[i]\
    \ < minElement) {\n            result.push_back(l2[i]);\n        }\n        if\
    \ (l2[i] > maxElement) {\n            result.push_back(l2[i]);\n        }\n  \
    \  }\n    for (long i = 0; i < result.size(); i++) {\n        if (result[i] !=\
    \ 0) {\n            result.push_back(result[i]);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp6jlfulj5: /tmp/tmp6jlfulj5.cpp:56: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747664
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> res;\n    long n = l1.size();\n    long m = l2.size();\n\
    \    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long\
    \ m1 = 0;\n    long m2 = 0;\n    long l1 = 0;\n    long l2 = 0;\n    while (i\
    \ < n && j < m) {\n        if (l1[i] == l2[j]) {\n            res.push_back(l1[i]);\n\
    \            i++;\n            j++;\n        } else if (l1[i] < l2[j]) {\n   \
    \         i++;\n        } else {\n            j++;\n        }\n    }\n    while\
    \ (i < n) {\n        res.push_back(l1[i]);\n        i++;\n    }\n    while (j\
    \ < m) {\n        res.push_back(l2[j]);\n        j++;\n    }\n    return res;\n\
    }\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn_97mjze.cpp: In function \u2018std::vector<long int> common(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpn_97mjze.cpp:14:10: error: declaration\
    \ of \u2018long int l1\u2019 shadows a parameter\n   14 |     long l1 = 0;\n \
    \     |          ^~\n/tmp/tmpn_97mjze.cpp:15:10: error: declaration of \u2018\
    long int l2\u2019 shadows a parameter\n   15 |     long l2 = 0;\n      |     \
    \     ^~\n/tmp/tmpn_97mjze.cpp:17:17: error: invalid types \u2018long int[long\
    \ int]\u2019 for array subscript\n   17 |         if (l1[i] == l2[j]) {\n    \
    \  |                 ^\n/tmp/tmpn_97mjze.cpp:17:26: error: invalid types \u2018\
    long int[long int]\u2019 for array subscript\n   17 |         if (l1[i] == l2[j])\
    \ {\n      |                          ^\n/tmp/tmpn_97mjze.cpp:18:31: error: invalid\
    \ types \u2018long int[long int]\u2019 for array subscript\n   18 |          \
    \   res.push_back(l1[i]);\n      |                               ^\n/tmp/tmpn_97mjze.cpp:21:24:\
    \ error: invalid types \u2018long int[long int]\u2019 for array subscript\n  \
    \ 21 |         } else if (l1[i] < l2[j]) {\n      |                        ^\n\
    /tmp/tmpn_97mjze.cpp:21:32: error: invalid types \u2018long int[long int]\u2019\
    \ for array subscript\n   21 |         } else if (l1[i] < l2[j]) {\n      |  \
    \                              ^\n/tmp/tmpn_97mjze.cpp:28:27: error: invalid types\
    \ \u2018long int[long int]\u2019 for array subscript\n   28 |         res.push_back(l1[i]);\n\
    \      |                           ^\n/tmp/tmpn_97mjze.cpp:32:27: error: invalid\
    \ types \u2018long int[long int]\u2019 for array subscript\n   32 |         res.push_back(l2[j]);\n\
    \      |                           ^\n"
  stdout: ''
  timestamp: 1659747664
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElements = 0, commonCount\
    \ = 0;\n    for (long i = 0; i < l1.size(); i++) {\n        for (long j = 0; j\
    \ < l2.size(); j++) {\n            if (l1[i] == l2[j]) {\n                commonElements++;\n\
    \                commonCount++;\n            }\n        }\n    }\n    for (long\
    \ i = 0; i < l1.size(); i++) {\n        if (commonElements == commonCount) {\n\
    \            result.push_back(l1[i]);\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpte_1nes5: /tmp/tmpte_1nes5.cpp:24: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747664
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElements = 0;\n    long\
    \ i = 0;\n    long j = 0;\n    long k = 0;\n    long n1 = l1.size();\n    long\
    \ n2 = l2.size();\n    while (i<n1 && j<n2) {\n        if (l1[i] == l2[j]) {\n\
    \            commonElements++;\n            i++;\n            j++;\n        }\n\
    \        else if (l1[i] < l2[j]) {\n            i++;\n        }\n        else\
    \ {\n            j++;\n        }\n    }\n    if (i == n1) {\n        while (j\
    \ < n2) {\n            result.push_back(l2[j]);\n            j++;\n        }\n\
    \    }\n    else if (j == n2) {\n        while (i<n1) {\n            result.push_back(l1[i]);\n\
    \            i++;\n        }\n    }\n    else {\n        while (i < n1 && j <\
    \ n2) {\n            if (l1[i] == l2[j]) {\n                commonElements++;\n\
    \                i++;\n                j++;\n            }\n            else if\
    \ (l1[i] < l2[j]) {\n                result.push_back(l1[i]);\n              \
    \  i++;\n            }\n            else {\n                result.push_back(l2[j]);\n\
    \                j++;\n            }\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp_9alkfdm: /tmp/tmp_9alkfdm.cpp:58: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747664
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    long min = 0;\n\
    \    long max = 0;\n    for (long i = 0; i < l1.size(); i++) {\n        if (l1.at(i)\
    \ < l2.at(i)) {\n            min = l1.at(i);\n        } else {\n            max\
    \ = l2.at(i);\n        }\n    }\n    for (long i = 0; i < l1.size(); i++) {\n\
    \        if (l1.at(i) == min) {\n            common++;\n        }\n    }\n   \
    \ for (long i = 0; i < l2.size(); i++) {\n        if (l2.at(i) == max) {\n   \
    \         common++;\n        }\n    }\n    for (long i = 0; i < l1.size(); i++)\
    \ {\n        if (l1.at(i) == max) {\n            result.push_back(l1.at(i));\n\
    \        }\n    }\n    for (long i = 0; i < l2.size(); i++) {\n        if (l2.at(i)\
    \ == min) {\n            result.push_back(l2.at(i));\n        }\n    }\n    for\
    \ (long i = 0; i < result.size(); i++) {\n        if (result.at(i) == common)\
    \ {\n            result.at(i) = common;\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp42bb5627: /tmp/tmp42bb5627.cpp:45: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747664
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    result.push_back(l1[0]);\n    result.push_back(l2[0]);\n\
    \    long mid = l1[0]+l2[0]/2;\n    for(long i=1;i<l1.size();i++) {\n        if(l1[i]==mid)\
    \ {\n            result.push_back(l1[i]);\n        }\n    }\n    for(long i=1;i<l2.size();i++)\
    \ {\n        if(l2[i]==mid) {\n            result.push_back(l2[i]);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = common;\n  \
    \  assert(candidate((std::vector<long>({(long)1, (long)4, (long)3, (long)34, (long)653,\
    \ (long)2, (long)5})), (std::vector<long>({(long)5, (long)7, (long)1, (long)5,\
    \ (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1, (long)5, (long)653})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)2, (long)8})),\
    \ (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2, (long)3})));\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2, (long)8})),\
    \ (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpa_es0x_3: /tmp/tmpa_es0x_3.cpp:23: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747664
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    for (long i\
    \ = 0; i < l1.size(); i++) {\n        for (long j = 0; j < l2.size(); j++) {\n\
    \            if (l1[i] == l2[j]) {\n                common++;\n            }\n\
    \        }\n    }\n    for (long i = 0; i < l1.size(); i++) {\n        if (l1[i]\
    \ == common) {\n            result.push_back(l1[i]);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpm5r45fdt: /tmp/tmpm5r45fdt.cpp:23: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747662
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    for (long i\
    \ = 0; i < l1.size(); i++) {\n        for (long j = 0; j < l2.size(); j++) {\n\
    \            if (l1[i] == l2[j]) {\n                common++;\n            }\n\
    \        }\n    }\n    for (long i = 0; i < l1.size(); i++) {\n        if (common\
    \ > 0) {\n            result.push_back(l1[i]);\n            common -= 1;\n   \
    \     }\n    }\n    for (long i = 0; i < l2.size(); i++) {\n        if (common\
    \ > 0) {\n            result.push_back(l2[i]);\n            common -= 1;\n   \
    \     }\n    }\n    std::sort(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpzs6i7r0y: /tmp/tmpzs6i7r0y.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747664
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElements = 0;\n    for\
    \ (long i = 0; i < l1.size(); i++) {\n        for (long j = 0; j < l2.size();\
    \ j++) {\n            if (l1[i] == l2[j]) {\n                commonElements++;\n\
    \            }\n        }\n    }\n    for (long i = 0; i < l1.size(); i++) {\n\
    \        if (commonElements == 0) {\n            result.push_back(l1[i]);\n  \
    \      }\n    }\n    for (long i = 0; i < l2.size(); i++) {\n        if (commonElements\
    \ == 0) {\n            result.push_back(l2[i]);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpdn2kxkim: /tmp/tmpdn2kxkim.cpp:28: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> res;\n    long i=0,j=0;\n    while(i<l1.size()\
    \ && j<l2.size()) {\n        if(l1[i]==l2[j]) {\n            res.push_back(l1[i]);\n\
    \            i++;\n            j++;\n        }\n        else if(l1[i]<l2[j]) {\n\
    \            i++;\n        }\n        else {\n            j++;\n        }\n  \
    \  }\n    return res;\n}\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp58jw71hs: /tmp/tmp58jw71hs.cpp:24: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747664
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    long i = 0;\n\
    \    long j = 0;\n    long k = 0;\n    while (i<l1.size() && j<l2.size()) {\n\
    \        if (l1[i] == l2[j]) {\n            common++;\n            i++;\n    \
    \        j++;\n        } else if (l1[i] > l2[j]) {\n            i++;\n       \
    \ } else {\n            j++;\n        }\n    }\n    while (i < l1.size()) {\n\
    \        result.push_back(l1[i]);\n        i++;\n    }\n    while (j < l2.size())\
    \ {\n        result.push_back(l2[j]);\n        j++;\n    }\n    std::sort(result.begin(),\
    \ result.end());\n    return result;\n}\nint main() {\n    auto candidate = common;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)4, (long)3, (long)34,\
    \ (long)653, (long)2, (long)5})), (std::vector<long>({(long)5, (long)7, (long)1,\
    \ (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1, (long)5,\
    \ (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpdxt0ic30: /tmp/tmpdxt0ic30.cpp:34: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747664
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElements = 0;\n    for(long\
    \ i = 0; i < l1.size(); i++) {\n        for(long j = 0; j < l2.size(); j++) {\n\
    \            if(l1[i] == l2[j]) {\n                commonElements++;\n       \
    \     }\n        }\n    }\n    result.push_back(commonElements);\n    return result;\n\
    }\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpy7fp1b4z: /tmp/tmpy7fp1b4z.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747663
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> res;\n    long common = 0;\n    for (long i = 0;\
    \ i < l1.size(); i++) {\n        for (long j = 0; j < l2.size(); j++) {\n    \
    \        if (l1[i] == l2[j]) {\n                common++;\n            }\n   \
    \     }\n    }\n    res.push_back(common);\n    return res;\n}\nint main() {\n\
    \    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp1k5yg22p: /tmp/tmp1k5yg22p.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    long i = 0;\n\
    \    long j = 0;\n    long k = 0;\n    while (i + j < l1.size() && j + k < l2.size())\
    \ {\n        if (l1[i] == l2[j]) {\n            common++;\n            i++;\n\
    \            j++;\n        } else if (l1[j] == l2[k]) {\n            common++;\n\
    \            j++;\n            k++;\n        } else {\n            i++;\n    \
    \        k++;\n        }\n    }\n    while (i < l1.size()) {\n        result.push_back(l1[i]);\n\
    \        i++;\n    }\n    while (j < l2.size()) {\n        result.push_back(l2[j]);\n\
    \        j++;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = common;\n    assert(candidate((std::vector<long>({(long)1, (long)4, (long)3,\
    \ (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5, (long)7,\
    \ (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp5_1j98ab: /tmp/tmp5_1j98ab.cpp:36: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747665
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    for(long i =\
    \ 0; i < l1.size(); i++) {\n        for(long j = 0; j < l2.size(); j++) {\n  \
    \          if(l1[i] == l2[j]) {\n                common++;\n            }\n  \
    \      }\n    }\n    result.push_back(common);\n    return result;\n}\nint main()\
    \ {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp2v4a9kgx: /tmp/tmp2v4a9kgx.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    long i = 0;\n\
    \    long j = 0;\n    while (i<l1.size() && j<l2.size()) {\n        if (l1[i]\
    \ == l2[j]) {\n            common++;\n            i++;\n            j++;\n   \
    \     } else if (l1[i] < l2[j]) {\n            i++;\n        } else {\n      \
    \      j++;\n        }\n    }\n    while (i < l1.size()) {\n        result.push_back(l1[i]);\n\
    \        i++;\n    }\n    while (j < l2.size()) {\n        result.push_back(l2[j]);\n\
    \        j++;\n    }\n    std::sort(result.begin(), result.end());\n    return\
    \ result;\n}\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp86dpete_: /tmp/tmp86dpete_.cpp:33: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747665
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    for(long i =\
    \ 0; i < l1.size(); i++) {\n        for(long j = 0; j < l2.size(); j++) {\n  \
    \          if(l1[i] == l2[j]) {\n                common++;\n            }\n  \
    \      }\n    }\n    result.push_back(common);\n    return result;\n}\nint main()\
    \ {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp2v4a9kgx: /tmp/tmp2v4a9kgx.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    long i = 0;\n\
    \    long j = 0;\n    while (i<l1.size() && j<l2.size()) {\n        if (l1[i]==l2[j])\
    \ {\n            common++;\n            i++;\n            j++;\n        } else\
    \ if (l1[i]<l2[j]) {\n            i++;\n        } else {\n            j++;\n \
    \       }\n    }\n    while (i < l1.size()) {\n        result.push_back(l1[i]);\n\
    \        i++;\n    }\n    while (j < l2.size()) {\n        result.push_back(l2[j]);\n\
    \        j++;\n    }\n    std::sort(result.begin(), result.end());\n    return\
    \ result;\n}\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpfud233r9: /tmp/tmpfud233r9.cpp:33: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747665
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    for(long i =\
    \ 0; i < l1.size(); i++) {\n        for(long j = 0; j < l2.size(); j++) {\n  \
    \          if(l1[i] == l2[j]) {\n                common++;\n            }\n  \
    \      }\n    }\n    for(long i = 0; i < l1.size(); i++) {\n        if(l1[i] !=\
    \ common) {\n            result.push_back(l1[i]);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpaeo35ari: /tmp/tmpaeo35ari.cpp:23: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747665
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    result.push_back(l1[0]);\n    result.push_back(l2[0]);\n\
    \    long mid = l1[0] + l2[0] / 2;\n    for (long i = 1; i < l1.size(); i++) {\n\
    \        if (l1[i] < mid) {\n            result.push_back(l1[i]);\n        } else\
    \ {\n            result.push_back(l2[i]);\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpglhafip1: /tmp/tmpglhafip1.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747665
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> common;\n    long commonCount = 0;\n    long minVal\
    \ = l1[0], maxVal = l2[0];\n    for(long i = 1; i < l1.size(); i++) {\n      \
    \  if(l1[i] < minVal) minVal = l1[i];\n        if(l2[i] > maxVal) maxVal = l2[i];\n\
    \    }\n    for(long i = 1; i < l2.size(); i++) {\n        if(l2[i] < minVal)\
    \ minVal = l2[i];\n        if(l2[i] > maxVal) maxVal = l2[i];\n    }\n    for(long\
    \ i = 1; i < l1.size(); i++) {\n        for(long j = 1; j < l2.size(); j++) {\n\
    \            if(l1[i] == l2[j]) {\n                commonCount++;\n          \
    \  }\n        }\n    }\n    for(long i = 1; i < l2.size(); i++) {\n        for(long\
    \ j = 1; j < l1.size(); j++) {\n            if(l2[i] == l1[j]) {\n           \
    \     commonCount++;\n            }\n        }\n    }\n    for(long i = 1; i <\
    \ l1.size(); i++) {\n        for(long j = 1; j < l2.size(); j++) {\n         \
    \   if(l1[i] < l2[j]) {\n                commonCount--;\n            }\n     \
    \   }\n    }\n    for(long i = 1; i < l2.size(); i++) {\n        for(long j =\
    \ 1; j < l1.size(); j++) {\n            if(l2[i] > l1[j]) {\n                commonCount--;\n\
    \            }\n        }\n    }\n    for(long i = 1; i < l1.size(); i++) {\n\
    \        for(long j = 1; j < l2.size(); j++) {\n            if(l1[i] > l2[j])\
    \ {\n                commonCount--;\n            }\n        }\n    }\n    for(long\
    \ i = 1; i < l1.size(); i++) {\n        for(long j = 1; j < l2.size(); j++) {\n\
    \            if(l1[i] == l2[j]) {\n                commonCount--;\n          \
    \  }\n        }\n    }\n    for(long i = 1; i < l2.size(); i++) {\n        for(long\
    \ j = 1; j < l1.size(); j++) {\n            if(l2[i] == l1[j]) {\n           \
    \     commonCount--;\n            }\n        }\n    }\n    for(long i = 1; i <\
    \ l1.size(); i++) {\n        for(long j = 1; j < l2.size(); j++) {\n         \
    \   if(l1[i] < l2[j]) {\n                commonCount++;\n            }\n     \
    \   }\n    }\n    for(long i = 1; i < l2.size(); i++) {\n        for(long j =\
    \ 1; j < l1.size(); j++) {\n            if(l2[i] > l1[j]) {\n                commonCount++;\n\
    \            }\n        }\n    }\n    for(long i = 1; i < l1.size(); i++) {\n\
    \        for(long j = 1; j < l2.size(); j++) {\n            if(l1[i] > l2[j])\
    \ {\n                commonCount++;\n            }\n        }\n    }\n    for(\n\
    }\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9jf_7jm7.cpp: In function \u2018std::vector<long int> common(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmp9jf_7jm7.cpp:87:1: error: expected\
    \ primary-expression before \u2018}\u2019 token\n   87 | }\n      | ^\n/tmp/tmp9jf_7jm7.cpp:87:1:\
    \ error: expected primary-expression before \u2018}\u2019 token\n/tmp/tmp9jf_7jm7.cpp:86:9:\
    \ error: expected \u2018;\u2019 before \u2018}\u2019 token\n   86 |     for(\n\
    \      |         ^\n      |         ;\n   87 | }\n      | ~        \n/tmp/tmp9jf_7jm7.cpp:87:1:\
    \ error: expected primary-expression before \u2018}\u2019 token\n   87 | }\n \
    \     | ^\n/tmp/tmp9jf_7jm7.cpp:86:9: error: expected \u2018)\u2019 before \u2018\
    }\u2019 token\n   86 |     for(\n      |        ~^\n      |         )\n   87 |\
    \ }\n      | ~        \n/tmp/tmp9jf_7jm7.cpp:87:1: error: expected primary-expression\
    \ before \u2018}\u2019 token\n   87 | }\n      | ^\n/tmp/tmp9jf_7jm7.cpp:87:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1659747665
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> common;\n    long common_count = 0;\n    for (long\
    \ i = 0; i < l1.size(); i++) {\n        for (long j = 0; j < l2.size(); j++) {\n\
    \            if (l1[i] == l2[j]) {\n                common_count++;\n        \
    \    }\n        }\n    }\n    common.reserve(common_count);\n    for (long i =\
    \ 0; i < l1.size(); i++) {\n        for (long j = 0; j < l2.size(); j++) {\n \
    \           if (l1[i] == l2[j]) {\n                common.push_back(l1[i]);\n\
    \            }\n        }\n    }\n    return common;\n}\nint main() {\n    auto\
    \ candidate = common;\n    assert(candidate((std::vector<long>({(long)1, (long)4,\
    \ (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmps6_13tsn: /tmp/tmps6_13tsn.cpp:26: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747662
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElements = 0;\n    long\
    \ minElement = l1[0], maxElement = l1[0];\n    for (long i : l1) {\n        if\
    \ (i < minElement) minElement = i;\n        if (i > maxElement) maxElement = i;\n\
    \    }\n    for (long i : l2) {\n        if (i < minElement) minElement = i;\n\
    \        if (i > maxElement) maxElement = i;\n    }\n    for (long i = minElement;\
    \ i <= maxElement; i++) {\n        if (l1.find(i) != l1.end() && l2.find(i) !=\
    \ l2.end()) {\n            commonElements++;\n        }\n    }\n    result.push_back(commonElements);\n\
    \    return result;\n}\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp3d1zcwu.cpp: In function \u2018std::vector<long int> common(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpp3d1zcwu.cpp:17:16: error: \u2018\
    class std::vector<long int>\u2019 has no member named \u2018find\u2019\n   17\
    \ |         if (l1.find(i) != l1.end() && l2.find(i) != l2.end()) {\n      | \
    \               ^~~~\n/tmp/tmpp3d1zcwu.cpp:17:42: error: \u2018class std::vector<long\
    \ int>\u2019 has no member named \u2018find\u2019\n   17 |         if (l1.find(i)\
    \ != l1.end() && l2.find(i) != l2.end()) {\n      |                          \
    \                ^~~~\n"
  stdout: ''
  timestamp: 1659747663
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> res;\n    long n = l1.size();\n    long m = l2.size();\n\
    \    long i = 0;\n    long j = 0;\n    long k = 0;\n    while (i<n && j<m) {\n\
    \        if (l1[i]==l2[j]) {\n            res.push_back(l1[i]);\n            i++;\n\
    \            j++;\n        }\n        else if (l1[i]<l2[j]) {\n            i++;\n\
    \        }\n        else {\n            j++;\n        }\n    }\n    return res;\n\
    }\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpi1mhc5ly: /tmp/tmpi1mhc5ly.cpp:28: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747665
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    for (long i\
    \ = 0; i < l1.size(); i++) {\n        for (long j = 0; j < l2.size(); j++) {\n\
    \            if (l1[i] == l2[j]) {\n                common++;\n            }\n\
    \        }\n    }\n    for (long i = 0; i < l1.size(); i++) {\n        if (common\
    \ > 0) {\n            if (l1[i] != common) {\n                result.push_back(l1[i]);\n\
    \                common = 0;\n            }\n        } else {\n            result.push_back(l1[i]);\n\
    \        }\n    }\n    for (long i = 0; i < l2.size(); i++) {\n        if (common\
    \ > 0) {\n            if (l2[i] != common) {\n                result.push_back(l2[i]);\n\
    \                common = 0;\n            }\n        } else {\n            result.push_back(l2[i]);\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = common;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)4, (long)3, (long)34,\
    \ (long)653, (long)2, (long)5})), (std::vector<long>({(long)5, (long)7, (long)1,\
    \ (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1, (long)5,\
    \ (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpzusjh26e: /tmp/tmpzusjh26e.cpp:38: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747665
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElements = 0;\n    long\
    \ minElement = l1[0];\n    long maxElement = l1[0];\n    for(long i : l1) {\n\
    \        if(i < minElement) {\n            minElement = i;\n        }\n      \
    \  if(i > maxElement) {\n            maxElement = i;\n        }\n    }\n    for(long\
    \ i : l2) {\n        if(i < minElement) {\n            minElement = i;\n     \
    \   }\n        if(i > maxElement) {\n            maxElement = i;\n        }\n\
    \    }\n    for(long i : l1) {\n        if(i < minElement) {\n            minElement\
    \ = i;\n        }\n        if(i > maxElement) {\n            maxElement = i;\n\
    \        }\n    }\n    for(long i : l2) {\n        if(i < minElement) {\n    \
    \        minElement = i;\n        }\n        if(i > maxElement) {\n          \
    \  maxElement = i;\n        }\n    }\n    for(long i : l1) {\n        if(i < minElement)\
    \ {\n            minElement = i;\n        }\n        if(i > maxElement) {\n  \
    \          maxElement = i;\n        }\n    }\n    for(long i : l2) {\n       \
    \ if(i < minElement) {\n            minElement = i;\n        }\n        if(i >\
    \ maxElement) {\n            maxElement = i;\n        }\n    }\n    for(long i\
    \ : l1) {\n        if(i < minElement) {\n            minElement = i;\n       \
    \ }\n        if(i > maxElement) {\n            maxElement = i;\n        }\n  \
    \  }\n    for(long i : l2) {\n        if(i < minElement) {\n            minElement\
    \ = i;\n        }\n        if(i > maxElement) {\n            maxElement = i;\n\
    \        }\n    }\n    for(long i : l1) {\n        if(i < minElement) {\n    \
    \        minElement = i;\n        }\n        if(i > maxElement) {\n          \
    \  maxElement = i;\n        }\n    }\n    for(long i : l2) {\n        if(i < minElement)\
    \ {\n            minElement = i;\n        }\n        if(i > maxElement) {\n  \
    \          maxElement = i;\n        }\n    }\n    for(long i : l1) {\n       \
    \ if(i < minElement) {\n            minElement = i;\n        }\n        if(i >\
    \ maxElement) {\n            maxElement = i;\n        }\n    }\n    for(long i\
    \ : l2) {\n        if(i < minElement) {\n            minElement = i;\n       \
    \ }\n        if(i > maxElement) {\n            maxElement = i;\n        }\n  \
    \  }\n    for(long i : l1) {\n        if(i < minElement) {\n            minElement\
    \ = i;\n        }\n        if(i > maxElement) {\n            maxElement = i;\n\
    \        }\n    }\n    for(long \n}\nint main() {\n    auto candidate = common;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)4, (long)3, (long)34,\
    \ (long)653, (long)2, (long)5})), (std::vector<long>({(long)5, (long)7, (long)1,\
    \ (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1, (long)5,\
    \ (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp10q4q659.cpp: In function \u2018std::vector<long int> common(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmp10q4q659.cpp:114:1: error: expected\
    \ unqualified-id before \u2018}\u2019 token\n  114 | }\n      | ^\n/tmp/tmp10q4q659.cpp:113:13:\
    \ error: expected \u2018;\u2019 before \u2018}\u2019 token\n  113 |     for(long\n\
    \      |             ^\n      |             ;\n  114 | }\n      | ~          \
    \  \n/tmp/tmp10q4q659.cpp:114:1: error: expected primary-expression before \u2018\
    }\u2019 token\n  114 | }\n      | ^\n/tmp/tmp10q4q659.cpp:113:13: error: expected\
    \ \u2018;\u2019 before \u2018}\u2019 token\n  113 |     for(long\n      |    \
    \         ^\n      |             ;\n  114 | }\n      | ~            \n/tmp/tmp10q4q659.cpp:114:1:\
    \ error: expected primary-expression before \u2018}\u2019 token\n  114 | }\n \
    \     | ^\n/tmp/tmp10q4q659.cpp:113:13: error: expected \u2018)\u2019 before \u2018\
    }\u2019 token\n  113 |     for(long\n      |        ~    ^\n      |          \
    \   )\n  114 | }\n      | ~            \n/tmp/tmp10q4q659.cpp:114:1: error: expected\
    \ primary-expression before \u2018}\u2019 token\n  114 | }\n      | ^\n/tmp/tmp10q4q659.cpp:114:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1659747665
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    for(long i =\
    \ 0; i < l1.size(); i++) {\n        for(long j = 0; j < l2.size(); j++) {\n  \
    \          if(l1[i] == l2[j]) {\n                common++;\n            }\n  \
    \      }\n    }\n    result.push_back(common);\n    return result;\n}\nint main()\
    \ {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp2v4a9kgx: /tmp/tmp2v4a9kgx.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElements = 0;\n    for(long\
    \ i = 0; i < l1.size(); i++) {\n        for(long j = 0; j < l2.size(); j++) {\n\
    \            if(l1[i] == l2[j]) {\n                commonElements++;\n       \
    \     }\n        }\n    }\n    result.push_back(commonElements);\n    return result;\n\
    }\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpy7fp1b4z: /tmp/tmpy7fp1b4z.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747663
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElements = 0;\n    for\
    \ (long i = 0; i < l1.size(); i++) {\n        for (long j = 0; j < l2.size();\
    \ j++) {\n            if (l1[i] == l2[j]) {\n                commonElements++;\n\
    \            }\n        }\n    }\n    for (long i = 0; i < l1.size(); i++) {\n\
    \        if (commonElements == 0) {\n            result.push_back(l1[i]);\n  \
    \      }\n    }\n    for (long i = 0; i < l2.size(); i++) {\n        if (commonElements\
    \ == 0) {\n            result.push_back(l2[i]);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpdn2kxkim: /tmp/tmpdn2kxkim.cpp:28: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    long i = 0;\n\
    \    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long\
    \ n = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n\
    \    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long\
    \ w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long aa = 0;\n\
    \    long ab = 0;\n    long ac = 0;\n    long ad = 0;\n    long ae = 0;\n    long\
    \ af = 0;\n    long ag = 0;\n    long ah = 0;\n    long ai = 0;\n    long aj =\
    \ 0;\n    long ak = 0;\n    long al = 0;\n    long am = 0;\n    long an = 0;\n\
    \    long ao = 0;\n    long ap = 0;\n    long aq = 0;\n    long ar = 0;\n    long\
    \ as = 0;\n    long at = 0;\n    long au = 0;\n    long av = 0;\n    long aw =\
    \ 0;\n    long ax = 0;\n    long ay = 0;\n    long az = 0;\n    long ba = 0;\n\
    \    long bb = 0;\n    long bc = 0;\n    long bd = 0;\n    long be = 0;\n    long\
    \ bf = 0;\n    long bg = 0;\n    long bh = 0;\n    long bi = 0;\n    long bj =\
    \ 0;\n    long bk = 0;\n    long bl = 0;\n    long bm = 0;\n    long bn = 0;\n\
    \    long bo = 0;\n    long bp = 0;\n    long bq = 0;\n    long br = 0;\n    long\
    \ bs = 0;\n    long bt = 0;\n    long bu = 0;\n    long bv = 0;\n    long bw =\
    \ 0;\n    long bx = 0;\n    long by = 0;\n    long bz = 0;\n    long ca = 0;\n\
    \    long cb = 0;\n    long cc = 0;\n    long cd = 0;\n    long ce = 0;\n    long\
    \ cf = 0;\n    long cg = 0;\n    long ch = 0;\n    long ci = 0;\n    long cj =\
    \ 0;\n    long ck = 0;\n    long cl = 0;\n    long cm = 0;\n    long cn = 0;\n\
    \    long co = 0;\n    long cp = 0;\n    long cq = 0;\n    long cr = 0;\n    long\
    \ cs = 0;\n    long ct = 0;\n    long cu = 0;\n    long cv = 0;\n    long cw =\
    \ 0;\n    long cx = 0;\n    long cy = 0;\n    long cz = 0;\n    long da = 0;\n\
    \    long db = 0;\n    long dc = 0;\n    long dd = 0;\n\n}\nint main() {\n   \
    \ auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpw3ig_03p: /tmp/tmpw3ig_03p.cpp:111: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747665
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElement = 0;\n    long\
    \ minElement = l1[0], maxElement = l1[0];\n    for(long i : l1) {\n        if(minElement\
    \ > i) {\n            minElement = i;\n        }\n        if(maxElement < i) {\n\
    \            maxElement = i;\n        }\n    }\n    for(long i : l2) {\n     \
    \   if(minElement > i) {\n            minElement = i;\n        }\n        if(maxElement\
    \ < i) {\n            maxElement = i;\n        }\n    }\n    for(long i = minElement;\
    \ i <= maxElement; i++) {\n        if(std::find(l1.begin(), l1.end(), i) != l1.end())\
    \ {\n            commonElement = i;\n            break;\n        }\n    }\n  \
    \  for(long i = minElement; i <= maxElement; i++) {\n        if(std::find(l2.begin(),\
    \ l2.end(), i) != l2.end()) {\n            commonElement = i;\n            break;\n\
    \        }\n    }\n    result.push_back(commonElement);\n    return result;\n\
    }\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp5vb00wte: /tmp/tmp5vb00wte.cpp:41: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747665
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> res;\n    long common = 0;\n    long i = 0;\n \
    \   long j = 0;\n    long k = 0;\n    while (i<l1.size() && j<l2.size()) {\n \
    \       if (l1[i] == l2[j]) {\n            common++;\n            i++;\n     \
    \       j++;\n        } else if (l1[i] > l2[j]) {\n            i++;\n        }\
    \ else {\n            j++;\n        }\n    }\n    while (i < l1.size()) {\n  \
    \      res.push_back(l1[i]);\n        i++;\n    }\n    while (j < l2.size()) {\n\
    \        res.push_back(l2[j]);\n        j++;\n    }\n    return res;\n}\nint main()\
    \ {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpx4lxsx9g: /tmp/tmpx4lxsx9g.cpp:33: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747665
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    long min1 =\
    \ 0, max1 = 0, min2 = 0, max2 = 0;\n    long mid = 0;\n    for (long i = 0; i\
    \ < l1.size(); i++) {\n        min1 = max1 = l1[i];\n        mid = i;\n      \
    \  for (long j = i + 1; j < l1.size(); j++) {\n            if (l1[j] < min1) {\n\
    \                min1 = l1[j];\n                mid = j;\n            }\n    \
    \        if (l1[j] > max1) {\n                max1 = l1[j];\n            }\n \
    \       }\n        for (long j = i + 1; j < l2.size(); j++) {\n            if\
    \ (l2[j] < min2) {\n                min2 = l2[j];\n                mid = j;\n\
    \            }\n            if (l2[j] > max2) {\n                max2 = l2[j];\n\
    \            }\n        }\n        if (min1 == max1 && min2 == max2) {\n     \
    \       result.push_back(min1);\n            result.push_back(min2);\n       \
    \     common++;\n        }\n    }\n    if (common > 0) {\n        result.push_back(common);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = common;\n  \
    \  assert(candidate((std::vector<long>({(long)1, (long)4, (long)3, (long)34, (long)653,\
    \ (long)2, (long)5})), (std::vector<long>({(long)5, (long)7, (long)1, (long)5,\
    \ (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1, (long)5, (long)653})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)2, (long)8})),\
    \ (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2, (long)3})));\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2, (long)8})),\
    \ (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpdp_m8d1v: /tmp/tmpdp_m8d1v.cpp:43: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747665
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long temp;\n    for(long i = 0; i\
    \ < l1.size(); i++) {\n        for(long j = 0; j < l2.size(); j++) {\n       \
    \     if(l1[i] == l2[j]) {\n                result.push_back(l1[i]);\n       \
    \         break;\n            }\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpoezz8qi_: /tmp/tmpoezz8qi_.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747665
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    long i = 0;\n\
    \    long j = 0;\n    while (i<l1.size() && j<l2.size()) {\n        if (l1[i]\
    \ == l2[j]) {\n            common++;\n            i++;\n            j++;\n   \
    \     } else if (l1[i] < l2[j]) {\n            i++;\n        } else {\n      \
    \      j++;\n        }\n    }\n    result.push_back(common);\n    while (i < l1.size())\
    \ {\n        result.push_back(l1[i]);\n        i++;\n    }\n    while (j < l2.size())\
    \ {\n        result.push_back(l2[j]);\n        j++;\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp31a4pef8: /tmp/tmp31a4pef8.cpp:33: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747665
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long temp;\n    long size = l1.size();\n\
    \    long size2 = l2.size();\n    long i = 0;\n    long j = 0;\n    while (i <\
    \ size && j < size2) {\n        if (l1[i] == l2[j]) {\n            result.push_back(l1[i]);\n\
    \            i++;\n            j++;\n        } else if (l1[i] < l2[j]) {\n   \
    \         i++;\n        } else {\n            j++;\n        }\n    }\n    while\
    \ (i < size) {\n        result.push_back(l1[i]);\n        i++;\n    }\n    while\
    \ (j < size2) {\n        result.push_back(l2[j]);\n        j++;\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpy23odvkb: /tmp/tmpy23odvkb.cpp:34: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747665
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElements = 0;\n    for\
    \ (long i = 0; i < l1.size(); i++) {\n        for (long j = 0; j < l2.size();\
    \ j++) {\n            if (l1[i] == l2[j]) {\n                commonElements++;\n\
    \            }\n        }\n    }\n    for (long i = 0; i < l1.size(); i++) {\n\
    \        if (commonElements == 0) {\n            result.push_back(l1[i]);\n  \
    \      }\n    }\n    for (long i = 0; i < l2.size(); i++) {\n        if (commonElements\
    \ == 0) {\n            result.push_back(l2[i]);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpdn2kxkim: /tmp/tmpdn2kxkim.cpp:28: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElements = 0;\n    long\
    \ minElement = l1[0], maxElement = l1[0];\n    for (long i : l1) {\n        if\
    \ (i < minElement) minElement = i;\n        if (i > maxElement) maxElement = i;\n\
    \    }\n    for (long i : l2) {\n        if (i < minElement) minElement = i;\n\
    \        if (i > maxElement) maxElement = i;\n    }\n    if (minElement == maxElement)\
    \ {\n        for (long i : l1) {\n            if (i == minElement) {\n       \
    \         commonElements++;\n            }\n        }\n        for (long i : l2)\
    \ {\n            if (i == minElement) {\n                commonElements++;\n \
    \           }\n        }\n    }\n    else {\n        for (long i : l1) {\n   \
    \         if (i == minElement) {\n                commonElements++;\n        \
    \    }\n        }\n        for (long i : l2) {\n            if (i == maxElement)\
    \ {\n                commonElements++;\n            }\n        }\n    }\n    for\
    \ (long i : l1) {\n        if (i == minElement) {\n            commonElements++;\n\
    \        }\n    }\n    for (long i : l2) {\n        if (i == maxElement) {\n \
    \           commonElements++;\n        }\n    }\n    for (long i : l1) {\n   \
    \     if (i == maxElement) {\n            commonElements++;\n        }\n    }\n\
    \    for (long i : l2) {\n        if (i == minElement) {\n            commonElements++;\n\
    \        }\n    }\n    for (long i : l1) {\n        if (i == minElement) {\n \
    \           commonElements++;\n        }\n    }\n    for (long i : l2) {\n   \
    \     if (i == maxElement) {\n            commonElements++;\n        }\n    }\n\
    \    for (long i : l1) {\n        if (i == maxElement) {\n            commonElements++;\n\
    \        }\n    }\n    for (long i : l2) {\n        if (i == minElement) {\n \
    \           commonElements++;\n        }\n    }\n    for (long i : l1) {\n   \
    \     if (i == minElement) {\n            commonElements++;\n        }\n    }\n\
    \    for (long i : l2) {\n        if (i == maxElement) {\n            commonElements++;\n\
    \        }\n    }\n    for (long i : l1) {\n        if (i == maxElement) {\n \
    \           commonElements++;\n        }\n    }\n    for (long i : l2) {\n   \
    \     if (i == minElement) {\n            commonElements++;\n        }\n    }\n\
    \    for (long i : l1) {\n        if (i == minElement) {\n            commonElements++;\n\
    \        }\n    }\n    for (long i : l2) {\n        if (i == maxElement) {\n \
    \           commonElements++;\n        }\n    }\n    for (\n}\nint main() {\n\
    \    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf8m0a1w1.cpp: In function \u2018std::vector<long int> common(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpf8m0a1w1.cpp:111:1: error: expected\
    \ primary-expression before \u2018}\u2019 token\n  111 | }\n      | ^\n/tmp/tmpf8m0a1w1.cpp:111:1:\
    \ error: expected primary-expression before \u2018}\u2019 token\n/tmp/tmpf8m0a1w1.cpp:110:10:\
    \ error: expected \u2018;\u2019 before \u2018}\u2019 token\n  110 |     for (\n\
    \      |          ^\n      |          ;\n  111 | }\n      | ~         \n/tmp/tmpf8m0a1w1.cpp:111:1:\
    \ error: expected primary-expression before \u2018}\u2019 token\n  111 | }\n \
    \     | ^\n/tmp/tmpf8m0a1w1.cpp:110:10: error: expected \u2018)\u2019 before \u2018\
    }\u2019 token\n  110 |     for (\n      |         ~^\n      |          )\n  111\
    \ | }\n      | ~         \n/tmp/tmpf8m0a1w1.cpp:111:1: error: expected primary-expression\
    \ before \u2018}\u2019 token\n  111 | }\n      | ^\n/tmp/tmpf8m0a1w1.cpp:111:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1659747665
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> res;\n    std::set_intersection(l1.begin(), l1.end(),\
    \ l2.begin(), l2.end(), std::back_inserter(res));\n    return res;\n}\nint main()\
    \ {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpi87f2225: /tmp/tmpi87f2225.cpp:11: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747663
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElements = 0;\n    for\
    \ (long i = 0; i < l1.size(); i++) {\n        for (long j = 0; j < l2.size();\
    \ j++) {\n            if (l1[i] == l2[j]) {\n                commonElements++;\n\
    \            }\n        }\n    }\n    for (long i = 0; i < l1.size(); i++) {\n\
    \        if (commonElements == 0) {\n            result.push_back(l1[i]);\n  \
    \      }\n    }\n    for (long i = 0; i < l2.size(); i++) {\n        if (commonElements\
    \ == 0) {\n            result.push_back(l2[i]);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpdn2kxkim: /tmp/tmpdn2kxkim.cpp:28: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElements = 0, commonElementsCount\
    \ = 0;\n    for (long i = 0; i < l1.size(); i++) {\n        for (long j = 0; j\
    \ < l2.size(); j++) {\n            if (l1[i] == l2[j]) {\n                commonElementsCount++;\n\
    \            }\n        }\n        if (commonElementsCount == l1.size()) {\n \
    \           result.push_back(l1[i]);\n            commonElementsCount = 0;\n \
    \       }\n    }\n    return result;\n}\nint main() {\n    auto candidate = common;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)4, (long)3, (long)34,\
    \ (long)653, (long)2, (long)5})), (std::vector<long>({(long)5, (long)7, (long)1,\
    \ (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1, (long)5,\
    \ (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpzs30onfe: /tmp/tmpzs30onfe.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747665
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> res;\n    long common = 0;\n    for(long i = 0;\
    \ i < l1.size(); i++) {\n        for(long j = 0; j < l2.size(); j++) {\n     \
    \       if(l1[i] == l2[j]) {\n                common++;\n            }\n     \
    \   }\n    }\n    res.push_back(common);\n    return res;\n}\nint main() {\n \
    \   auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp4stzx6ns: /tmp/tmp4stzx6ns.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747663
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    for (long i\
    \ = 0; i < l1.size(); i++) {\n        for (long j = 0; j < l2.size(); j++) {\n\
    \            if (l1[i] == l2[j]) {\n                common++;\n            }\n\
    \        }\n    }\n    for (long i = 0; i < l1.size(); i++) {\n        if (l1.size()\
    \ - common > result.size()) {\n            result.push_back(l1[i]);\n        }\n\
    \    }\n    for (long i = 0; i < l2.size(); i++) {\n        if (l2.size() - common\
    \ > result.size()) {\n            result.push_back(l2[i]);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpsrnhqp2w: /tmp/tmpsrnhqp2w.cpp:28: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747665
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    for (long i\
    \ = 0; i < l1.size(); i++) {\n        for (long j = 0; j < l2.size(); j++) {\n\
    \            if (l1[i] == l2[j]) {\n                common++;\n            }\n\
    \        }\n    }\n    for (long i = 0; i < l1.size(); i++) {\n        if (common\
    \ != 0) {\n            if (l1[i] != common) {\n                result.push_back(l1[i]);\n\
    \            }\n        } else {\n            result.push_back(l1[i]);\n     \
    \   }\n    }\n    return result;\n}\nint main() {\n    auto candidate = common;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)4, (long)3, (long)34,\
    \ (long)653, (long)2, (long)5})), (std::vector<long>({(long)5, (long)7, (long)1,\
    \ (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1, (long)5,\
    \ (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp1h8u7xle: /tmp/tmp1h8u7xle.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747665
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> res;\n    res.reserve(l1.size() + l2.size());\n\
    \    long common = 0;\n    for (auto i : l1) {\n        if (std::find(l2.begin(),\
    \ l2.end(), i) != l2.end()) {\n            common++;\n            res.push_back(i);\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = common;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)4, (long)3, (long)34,\
    \ (long)653, (long)2, (long)5})), (std::vector<long>({(long)5, (long)7, (long)1,\
    \ (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1, (long)5,\
    \ (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpon0_86r6: /tmp/tmpon0_86r6.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747666
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    long i = 0;\n\
    \    long j = 0;\n    long k = 0;\n    while (i<l1.size() && j<l2.size()) {\n\
    \        if (l1[i]==l2[j]) {\n            common++;\n            i++;\n      \
    \      j++;\n        } else if (l1[i]<l2[j]) {\n            i++;\n        } else\
    \ {\n            j++;\n        }\n    }\n    while (i < l1.size()) {\n       \
    \ result.push_back(l1[i]);\n        i++;\n    }\n    while (j < l2.size()) {\n\
    \        result.push_back(l2[j]);\n        j++;\n    }\n    result.push_back(common);\n\
    \    return result;\n}\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp4m31opte: /tmp/tmp4m31opte.cpp:34: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    for (long i\
    \ = 0; i < l1.size(); i++) {\n        for (long j = 0; j < l2.size(); j++) {\n\
    \            if (l1[i] == l2[j]) {\n                common++;\n            }\n\
    \        }\n    }\n    for (long i = 0; i < l1.size(); i++) {\n        if (l1[i]\
    \ == common) {\n            result.push_back(l1[i]);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpm5r45fdt: /tmp/tmpm5r45fdt.cpp:23: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747662
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> common;\n    long commonCount = 0;\n    for (long\
    \ i = 0; i < l1.size(); i++) {\n        for (long j = 0; j < l2.size(); j++) {\n\
    \            if (l1[i] == l2[j]) {\n                commonCount++;\n         \
    \   }\n        }\n    }\n    common.reserve(commonCount);\n    for (long i = 0;\
    \ i < l1.size(); i++) {\n        for (long j = 0; j < l2.size(); j++) {\n    \
    \        if (l1[i] == l2[j]) {\n                common.push_back(l1[i]);\n   \
    \             break;\n            }\n        }\n    }\n    return common;\n}\n\
    int main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpb6nhzx62: /tmp/tmpb6nhzx62.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747666
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElements = 0;\n    long\
    \ commonCount = 0;\n    for (long i = 0; i < l1.size(); i++) {\n        for (long\
    \ j = 0; j < l2.size(); j++) {\n            if (l1[i] == l2[j]) {\n          \
    \      commonElements++;\n                commonCount++;\n            }\n    \
    \    }\n    }\n    for (long i = 0; i < l1.size(); i++) {\n        if (commonCount\
    \ > 0) {\n            if (commonElements == commonCount) {\n                result.push_back(l1[i]);\n\
    \            }\n        }\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = common;\n    assert(candidate((std::vector<long>({(long)1, (long)4,\
    \ (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp5ya4mmat: /tmp/tmp5ya4mmat.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747664
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    for (long i\
    \ = 0; i < l1.size(); i++) {\n        for (long j = 0; j < l2.size(); j++) {\n\
    \            if (l1[i] == l2[j]) {\n                common++;\n            }\n\
    \        }\n    }\n    for (long i = 0; i < l1.size(); i++) {\n        if (l1.size()\
    \ > common) {\n            result.push_back(l1[i]);\n        }\n    }\n    for\
    \ (long i = 0; i < l2.size(); i++) {\n        if (l2.size() > common) {\n    \
    \        result.push_back(l2[i]);\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpfz8ewrv_: /tmp/tmpfz8ewrv_.cpp:28: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747667
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    result.push_back(l1[0]);\n    result.push_back(l2[0]);\n\
    \    for(long i = 1; i < min(l1.size(), l2.size()); i++) {\n        if(l1[i] ==\
    \ l2[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpd1pe6l4x.cpp: In function \u2018std::vector<long int> common(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpd1pe6l4x.cpp:8:25: error: \u2018\
    min\u2019 was not declared in this scope; did you mean \u2018std::min\u2019?\n\
    \    8 |     for(long i = 1; i < min(l1.size(), l2.size()); i++) {\n      |  \
    \                       ^~~\n      |                         std::min\nIn file\
    \ included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:62,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpd1pe6l4x.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algo.h:3450:5:\
    \ note: \u2018std::min\u2019 declared here\n 3450 |     min(initializer_list<_Tp>\
    \ __l, _Compare __comp)\n      |     ^~~\n"
  stdout: ''
  timestamp: 1659747662
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    for (long i\
    \ = 0; i < l1.size(); i++) {\n        for (long j = 0; j < l2.size(); j++) {\n\
    \            if (l1[i] == l2[j]) {\n                common++;\n            }\n\
    \        }\n    }\n    for (long i = 0; i < l1.size(); i++) {\n        if (common\
    \ > 0) {\n            if (l1[i] != common) {\n                result.push_back(l1[i]);\n\
    \                common--;\n            }\n        } else {\n            result.push_back(l1[i]);\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = common;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)4, (long)3, (long)34,\
    \ (long)653, (long)2, (long)5})), (std::vector<long>({(long)5, (long)7, (long)1,\
    \ (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1, (long)5,\
    \ (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpru88r29b: /tmp/tmpru88r29b.cpp:28: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747667
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElements = 0;\n    for(long\
    \ i = 0; i < l1.size(); i++) {\n        for(long j = 0; j < l2.size(); j++) {\n\
    \            if(l1[i] == l2[j]) {\n                commonElements++;\n       \
    \     }\n        }\n    }\n    for(long i = 0; i < l1.size(); i++) {\n       \
    \ if(commonElements > 0) {\n            if(l1[i] != commonElements) {\n      \
    \          result.push_back(l1[i]);\n            }\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpcxn8a_9u: /tmp/tmpcxn8a_9u.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747666
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    for(long i =\
    \ 0; i < l1.size(); i++) {\n        for(long j = 0; j < l2.size(); j++) {\n  \
    \          if(l1[i] == l2[j]) {\n                common++;\n            }\n  \
    \      }\n    }\n    result.push_back(common);\n    return result;\n}\nint main()\
    \ {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp2v4a9kgx: /tmp/tmp2v4a9kgx.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    result.push_back(l1[0]);\n    result.push_back(l2[0]);\n\
    \    long mid = l1[0]+l2[0]/2;\n    for(long i=1;i<l1.size();i++) {\n        if(l1[i]==mid)\
    \ {\n            result.push_back(l1[i]);\n        }\n    }\n    for(long i=1;i<l2.size();i++)\
    \ {\n        if(l2[i]==mid) {\n            result.push_back(l2[i]);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = common;\n  \
    \  assert(candidate((std::vector<long>({(long)1, (long)4, (long)3, (long)34, (long)653,\
    \ (long)2, (long)5})), (std::vector<long>({(long)5, (long)7, (long)1, (long)5,\
    \ (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1, (long)5, (long)653})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)2, (long)8})),\
    \ (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2, (long)3})));\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2, (long)8})),\
    \ (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpa_es0x_3: /tmp/tmpa_es0x_3.cpp:23: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747664
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    for (long i\
    \ = 0; i < l1.size(); i++) {\n        for (long j = 0; j < l2.size(); j++) {\n\
    \            if (l1[i] == l2[j]) {\n                common++;\n            }\n\
    \        }\n    }\n    for (long i = 0; i < l1.size(); i++) {\n        if (common\
    \ > 0) {\n            if (l1[i] == common) {\n                result.push_back(l1[i]);\n\
    \            }\n        }\n    }\n    for (long i = 0; i < l2.size(); i++) {\n\
    \        if (common > 0) {\n            if (l2[i] == common) {\n             \
    \   result.push_back(l2[i]);\n            }\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpwf2t9oci: /tmp/tmpwf2t9oci.cpp:32: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747662
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElements = 0;\n    for(long\
    \ i = 0; i < l1.size(); i++) {\n        for(long j = 0; j < l2.size(); j++) {\n\
    \            if(l1[i] == l2[j]) {\n                commonElements++;\n       \
    \     }\n        }\n    }\n    for(long i = 0; i < l1.size(); i++) {\n       \
    \ if(commonElements > 0) {\n            if(l1[i] != commonElements) {\n      \
    \          result.push_back(l1[i]);\n                commonElements = 0;\n   \
    \         }\n        } else {\n            result.push_back(l1[i]);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = common;\n  \
    \  assert(candidate((std::vector<long>({(long)1, (long)4, (long)3, (long)34, (long)653,\
    \ (long)2, (long)5})), (std::vector<long>({(long)5, (long)7, (long)1, (long)5,\
    \ (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1, (long)5, (long)653})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)2, (long)8})),\
    \ (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2, (long)3})));\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2, (long)8})),\
    \ (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpum71mo0k: /tmp/tmpum71mo0k.cpp:28: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747666
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    long i = 0;\n\
    \    long j = 0;\n    while (i<l1.size() && j<l2.size()) {\n        if (l1[i]\
    \ == l2[j]) {\n            common++;\n            i++;\n            j++;\n   \
    \     } else if (l1[i] > l2[j]) {\n            i++;\n        } else {\n      \
    \      j++;\n        }\n    }\n    while (i < l1.size()) {\n        result.push_back(l1[i]);\n\
    \        i++;\n    }\n    while (j < l2.size()) {\n        result.push_back(l2[j]);\n\
    \        j++;\n    }\n    std::sort(result.begin(), result.end());\n    return\
    \ result;\n}\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpc4brh12a: /tmp/tmpc4brh12a.cpp:33: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747667
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    long min1 =\
    \ 0, min2 = 0;\n    for (long i = 0; i < l1.size(); i++) {\n        if (min1 <\
    \ l1[i]) {\n            min1 = l1[i];\n        }\n        if (min2 < l2[i]) {\n\
    \            min2 = l2[i];\n        }\n    }\n    for (long i = 0; i < l2.size();\
    \ i++) {\n        if (min1 < l2[i]) {\n            min1 = l2[i];\n        }\n\
    \        if (min2 < l1[i]) {\n            min2 = l1[i];\n        }\n    }\n  \
    \  for (long i = 0; i < l1.size(); i++) {\n        if (min1 == l1[i]) {\n    \
    \        result.push_back(l1[i]);\n        }\n    }\n    for (long i = 0; i <\
    \ l2.size(); i++) {\n        if (min2 == l2[i]) {\n            result.push_back(l2[i]);\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = common;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)4, (long)3, (long)34,\
    \ (long)653, (long)2, (long)5})), (std::vector<long>({(long)5, (long)7, (long)1,\
    \ (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1, (long)5,\
    \ (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpdngxfezv: /tmp/tmpdngxfezv.cpp:38: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747667
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElements = 0;\n    for(long\
    \ i = 0; i < l1.size(); i++) {\n        for(long j = 0; j < l2.size(); j++) {\n\
    \            if(l1[i] == l2[j]) {\n                commonElements++;\n       \
    \     }\n        }\n    }\n    result.push_back(commonElements);\n    return result;\n\
    }\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpy7fp1b4z: /tmp/tmpy7fp1b4z.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747663
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    for(long i =\
    \ 0; i < l1.size(); i++) {\n        for(long j = 0; j < l2.size(); j++) {\n  \
    \          if(l1[i] == l2[j]) {\n                common++;\n                break;\n\
    \            }\n        }\n    }\n    result.push_back(common);\n    return result;\n\
    }\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpop73t0gf: /tmp/tmpop73t0gf.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    for(long i =\
    \ 0; i < l1.size(); i++) {\n        for(long j = 0; j < l2.size(); j++) {\n  \
    \          if(l1[i] == l2[j]) {\n                common++;\n            }\n  \
    \      }\n    }\n    result.push_back(common);\n    return result;\n}\nint main()\
    \ {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp2v4a9kgx: /tmp/tmp2v4a9kgx.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long temp;\n    for(long i = 0; i\
    \ < l1.size(); i++) {\n        for(long j = 0; j < l2.size(); j++) {\n       \
    \     if(l1[i] == l2[j]) {\n                temp = l1[i];\n                l1[i]\
    \ = l2[j];\n                l2[j] = temp;\n            }\n        }\n    }\n \
    \   for(long i = 0; i < l1.size(); i++) {\n        if(!result.count(l1[i])) {\n\
    \            result.push_back(l1[i]);\n        }\n    }\n    for(long i = 0; i\
    \ < l2.size(); i++) {\n        if(!result.count(l2[i])) {\n            result.push_back(l2[i]);\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = common;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)4, (long)3, (long)34,\
    \ (long)653, (long)2, (long)5})), (std::vector<long>({(long)5, (long)7, (long)1,\
    \ (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1, (long)5,\
    \ (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2uf1_7lx.cpp: In function \u2018std::vector<long int> common(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmp2uf1_7lx.cpp:17:20: error: \u2018\
    class std::vector<long int>\u2019 has no member named \u2018count\u2019\n   17\
    \ |         if(!result.count(l1[i])) {\n      |                    ^~~~~\n/tmp/tmp2uf1_7lx.cpp:22:20:\
    \ error: \u2018class std::vector<long int>\u2019 has no member named \u2018count\u2019\
    \n   22 |         if(!result.count(l2[i])) {\n      |                    ^~~~~\n"
  stdout: ''
  timestamp: 1659747666
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    for (long i\
    \ = 0; i < l1.size(); i++) {\n        for (long j = 0; j < l2.size(); j++) {\n\
    \            if (l1[i] == l2[j]) {\n                common++;\n              \
    \  break;\n            }\n        }\n    }\n    for (long i = 0; i < l1.size();\
    \ i++) {\n        if (l1[i] == common) {\n            result.push_back(l1[i]);\n\
    \        }\n    }\n    for (long i = 0; i < l2.size(); i++) {\n        if (l2[i]\
    \ == common) {\n            result.push_back(l2[i]);\n        }\n    }\n    std::sort(result.begin(),\
    \ result.end());\n    return result;\n}\nint main() {\n    auto candidate = common;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)4, (long)3, (long)34,\
    \ (long)653, (long)2, (long)5})), (std::vector<long>({(long)5, (long)7, (long)1,\
    \ (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1, (long)5,\
    \ (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpms95viez: /tmp/tmpms95viez.cpp:30: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747666
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    result.push_back(l1[0]);\n    result.push_back(l2[0]);\n\
    \    long common = l1[0];\n    long min1 = l1[0];\n    long min2 = l2[0];\n  \
    \  long max1 = l1[0];\n    long max2 = l2[0];\n    long mid1 = l1[0];\n    long\
    \ mid2 = l2[0];\n    long mid = l1[0];\n    for (size_t i = 1; i < l1.size();\
    \ i++) {\n        if (l1[i] == common) {\n            min1 = l1[i];\n        \
    \    min2 = l2[i];\n            max1 = l1[i];\n            max2 = l2[i];\n   \
    \         mid1 = l1[i];\n            mid2 = l2[i];\n            mid = l1[i];\n\
    \        } else if (l1[i] < common) {\n            min1 = l1[i];\n           \
    \ min2 = l2[i];\n            max1 = l1[i];\n            max2 = l2[i];\n      \
    \      mid1 = l1[i];\n            mid2 = l2[i];\n            mid = l1[i];\n  \
    \      } else {\n            min1 = l1[i];\n            min2 = l2[i];\n      \
    \      max1 = l1[i];\n            max2 = l2[i];\n            mid1 = l1[i];\n \
    \           mid2 = l2[i];\n            mid = l1[i];\n        }\n    }\n    result.push_back(min1);\n\
    \    result.push_back(min2);\n    result.push_back(max1);\n    result.push_back(max2);\n\
    \    result.push_back(mid);\n    result.push_back(mid1);\n    result.push_back(mid2);\n\
    \    return result;\n}\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpobq9d71e: /tmp/tmpobq9d71e.cpp:54: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747666
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    for(long i =\
    \ 0; i < l1.size(); i++) {\n        for(long j = 0; j < l2.size(); j++) {\n  \
    \          if(l1[i] == l2[j]) {\n                common++;\n            }\n  \
    \      }\n    }\n    result.push_back(common);\n    return result;\n}\nint main()\
    \ {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp2v4a9kgx: /tmp/tmp2v4a9kgx.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    long size1 =\
    \ l1.size();\n    long size2 = l2.size();\n    long i = 0;\n    long j = 0;\n\
    \    while (i < size1 && j < size2) {\n        if (l1[i] == l2[j]) {\n       \
    \     common++;\n            i++;\n            j++;\n        } else if (l1[i]\
    \ > l2[j]) {\n            result.push_back(l1[i]);\n            i++;\n       \
    \ } else {\n            result.push_back(l2[j]);\n            j++;\n        }\n\
    \    }\n    while (i < size1) {\n        result.push_back(l1[i]);\n        i++;\n\
    \    }\n    while (j < size2) {\n        result.push_back(l2[j]);\n        j++;\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = common;\n  \
    \  assert(candidate((std::vector<long>({(long)1, (long)4, (long)3, (long)34, (long)653,\
    \ (long)2, (long)5})), (std::vector<long>({(long)5, (long)7, (long)1, (long)5,\
    \ (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1, (long)5, (long)653})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)2, (long)8})),\
    \ (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2, (long)3})));\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2, (long)8})),\
    \ (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp1npxugri: /tmp/tmp1npxugri.cpp:36: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747667
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    for (long i\
    \ = 0; i < l1.size(); i++) {\n        for (long j = 0; j < l2.size(); j++) {\n\
    \            if (l1[i] == l2[j]) {\n                common++;\n            }\n\
    \        }\n    }\n    for (long i = 0; i < l1.size(); i++) {\n        if (common\
    \ > 0) {\n            result.push_back(l1[i]);\n            common -= 1;\n   \
    \     }\n    }\n    for (long i = 0; i < l2.size(); i++) {\n        if (common\
    \ > 0) {\n            result.push_back(l2[i]);\n            common -= 1;\n   \
    \     }\n    }\n    std::sort(result.begin(), result.end());\n    return result;\n\
    }\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpzs6i7r0y: /tmp/tmpzs6i7r0y.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747664
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElements = 0;\n    for(long\
    \ i = 0; i < l1.size(); i++) {\n        for(long j = 0; j < l2.size(); j++) {\n\
    \            if(l1[i] == l2[j]) {\n                commonElements++;\n       \
    \     }\n        }\n    }\n    for(long i = 0; i < l1.size(); i++) {\n       \
    \ if(commonElements == 0) {\n            result.push_back(l1[i]);\n        }\n\
    \    }\n    for(long i = 0; i < l2.size(); i++) {\n        if(commonElements ==\
    \ 0) {\n            result.push_back(l2[i]);\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpubafor87: /tmp/tmpubafor87.cpp:28: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747663
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    long i = 0;\n\
    \    long j = 0;\n    long k = 0;\n    while (i<l1.size() && j<l2.size()) {\n\
    \        if (l1[i] == l2[j]) {\n            common++;\n            i++;\n    \
    \        j++;\n        } else if (l1[i] < l2[j]) {\n            i++;\n       \
    \ } else {\n            j++;\n        }\n    }\n    while (i < l1.size()) {\n\
    \        result.push_back(l1[i]);\n        i++;\n    }\n    while (j < l2.size())\
    \ {\n        result.push_back(l2[j]);\n        j++;\n    }\n    std::sort(result.begin(),\
    \ result.end());\n    return result;\n}\nint main() {\n    auto candidate = common;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)4, (long)3, (long)34,\
    \ (long)653, (long)2, (long)5})), (std::vector<long>({(long)5, (long)7, (long)1,\
    \ (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1, (long)5,\
    \ (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp31nezwfr: /tmp/tmp31nezwfr.cpp:34: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747667
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    result.push_back(l1[0]);\n    result.push_back(l2[0]);\n\
    \    long mid = l1[0]+l2[0]/2;\n    for(long i=1;i<l1.size();i++) {\n        if(l1[i]==mid)\
    \ {\n            result.push_back(l1[i]);\n        }\n    }\n    for(long i=1;i<l2.size();i++)\
    \ {\n        if(l2[i]==mid) {\n            result.push_back(l2[i]);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = common;\n  \
    \  assert(candidate((std::vector<long>({(long)1, (long)4, (long)3, (long)34, (long)653,\
    \ (long)2, (long)5})), (std::vector<long>({(long)5, (long)7, (long)1, (long)5,\
    \ (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1, (long)5, (long)653})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)2, (long)8})),\
    \ (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2, (long)3})));\n\
    \    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2, (long)8})),\
    \ (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpa_es0x_3: /tmp/tmpa_es0x_3.cpp:23: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747664
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    for (long i\
    \ = 0; i < l1.size(); i++) {\n        for (long j = 0; j < l2.size(); j++) {\n\
    \            if (l1[i] == l2[j]) {\n                common++;\n              \
    \  break;\n            }\n        }\n    }\n    for (long i = 0; i < l1.size();\
    \ i++) {\n        if (l1[i] == common) {\n            result.push_back(l1[i]);\n\
    \        }\n    }\n    for (long i = 0; i < l2.size(); i++) {\n        if (l2[i]\
    \ == common) {\n            result.push_back(l2[i]);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpuu2z64yb: /tmp/tmpuu2z64yb.cpp:29: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747667
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> res;\n    long common = 0;\n    long min1 = INT_MAX;\n\
    \    long min2 = INT_MAX;\n    long max1 = INT_MIN;\n    long max2 = INT_MIN;\n\
    \    for(long i = 0; i < l1.size(); i++) {\n        if(l1[i] < min1) {\n     \
    \       min1 = l1[i];\n        }\n        if(l1[i] > max1) {\n            max1\
    \ = l1[i];\n        }\n        if(l2[i] < min2) {\n            min2 = l2[i];\n\
    \        }\n        if(l2[i] > max2) {\n            max2 = l2[i];\n        }\n\
    \    }\n    for(long i = 0; i < l2.size(); i++) {\n        if(l2[i] < min1) {\n\
    \            min2 = l2[i];\n        }\n        if(l2[i] > max1) {\n          \
    \  max2 = l2[i];\n        }\n    }\n    for(long i = 0; i < l1.size(); i++) {\n\
    \        if(l1[i] < min2) {\n            min1 = l1[i];\n        }\n        if(l1[i]\
    \ > max2) {\n            max1 = l1[i];\n        }\n    }\n    for(long i = 0;\
    \ i < l2.size(); i++) {\n        if(l2[i] < min2) {\n            min2 = l2[i];\n\
    \        }\n        if(l2[i] > max2) {\n            max2 = l2[i];\n        }\n\
    \    }\n    for(long i = 0; i < l1.size(); i++) {\n        if(l1[i] < min2) {\n\
    \            min1 = l1[i];\n        }\n        if(l1[i] > max2) {\n          \
    \  max1 = l1[i];\n        }\n    }\n    for(long i = 0; i < l2.size(); i++) {\n\
    \        if(l2[i] < min2) {\n            min2 = l2[i];\n        }\n        if(l2[i]\
    \ > max2) {\n            max2 = l2[i];\n        }\n    }\n    for(long i = 0;\
    \ i < l1.size(); i++) {\n        if(l1[i] < min2) {\n            min1 = l1[i];\n\
    \        }\n        if(l1[i] > max2) {\n            max1 = l1[i];\n        }\n\
    \    }\n    for(long i = 0; i < l2.size(); i++) {\n        if(l2[i] < min2) {\n\
    \            min2 = l2[i];\n        }\n        if(l2[i] > max2) {\n          \
    \  max2 = l2[i];\n        }\n    }\n    for(long i = 0; i < l1.size(); i++) {\n\
    \        if(l1[i] < min2) {\n            min1 = l1[i];\n        }\n        if(l1[i]\
    \ > max2) {\n            max1 = l1[i];\n        }\n    }\n    for(long i = 0;\
    \ i < l2.size(); i++) {\n        if(l2[i] < min2) {\n            min2 = l2[i];\n\
    \        }\n        if(l2[i] > max2) {\n            max2 = l2[i];\n        }\n\
    \    }\n    for(long i = 0; i < l1.size(); i++) {\n        if(l1[i] < min2) {\n\
    \            min1 = l1[i];\n        }\n        if(l1[i] > max2) {\n          \
    \  max1 = l1[i];\n        }\n    }\n\n}\nint main() {\n    auto candidate = common;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)4, (long)3, (long)34,\
    \ (long)653, (long)2, (long)5})), (std::vector<long>({(long)5, (long)7, (long)1,\
    \ (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1, (long)5,\
    \ (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp3m5sbadf: /tmp/tmp3m5sbadf.cpp:109: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747667
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    result.push_back(l1[0]);\n    for(long\
    \ i=1;i<l1.size();i++) {\n        for(long j=1;j<l2.size();j++) {\n          \
    \  if(l1[i]==l2[j]) {\n                result.push_back(l1[i]);\n            \
    \    break;\n            }\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp7q8bu067: /tmp/tmp7q8bu067.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747667
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    result.push_back(l1[0]);\n    result.push_back(l2[0]);\n\
    \    for(long i=1;i<l1.size();i++) {\n        for(long j=1;j<l2.size();j++) {\n\
    \            if(l1[i]==l2[j]) {\n                result.push_back(l1[i]);\n  \
    \              result.push_back(l2[j]);\n                break;\n            }\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = common;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)4, (long)3, (long)34,\
    \ (long)653, (long)2, (long)5})), (std::vector<long>({(long)5, (long)7, (long)1,\
    \ (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1, (long)5,\
    \ (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpe7e6_4n7: /tmp/tmpe7e6_4n7.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747666
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    long min1 =\
    \ 0, min2 = 0;\n    long max1 = 0, max2 = 0;\n    for (long i = 0; i < l1.size();\
    \ i++) {\n        if (l1.at(i) < min1) {\n            min1 = l1.at(i);\n     \
    \   }\n        if (l1.at(i) > max1) {\n            max1 = l1.at(i);\n        }\n\
    \    }\n    for (long i = 0; i < l2.size(); i++) {\n        if (l2.at(i) < min2)\
    \ {\n            min2 = l2.at(i);\n        }\n        if (l2.at(i) > max2) {\n\
    \            max2 = l2.at(i);\n        }\n    }\n    if (max1 < min2) {\n    \
    \    std::swap(min1, max1);\n        std::swap(min2, max2);\n    }\n    if (max1\
    \ > max2) {\n        std::swap(max1, max2);\n    }\n    if (max1 == min2) {\n\
    \        for (long i = 0; i < l1.size(); i++) {\n            if (l1.at(i) == common)\
    \ {\n                result.push_back(l1.at(i));\n            }\n        }\n \
    \   }\n    else {\n        for (long i = 0; i < l1.size(); i++) {\n          \
    \  if (l1.at(i) == common) {\n                result.push_back(l1.at(i));\n  \
    \          }\n        }\n        for (long i = 0; i < l2.size(); i++) {\n    \
    \        if (l2.at(i) == common) {\n                result.push_back(l2.at(i));\n\
    \            }\n        }\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = common;\n    assert(candidate((std::vector<long>({(long)1, (long)4,\
    \ (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpadc0xll4: /tmp/tmpadc0xll4.cpp:55: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747667
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    long i = 0;\n\
    \    long j = 0;\n    long k = 0;\n    while (i<l1.size() && j<l2.size()) {\n\
    \        if (l1[i]==l2[j]) {\n            common++;\n            i++;\n      \
    \      j++;\n        } else if (l1[i]<l2[j]) {\n            i++;\n        } else\
    \ {\n            j++;\n        }\n    }\n    while (i < l1.size()) {\n       \
    \ result.push_back(l1[i]);\n        i++;\n    }\n    while (j < l2.size()) {\n\
    \        result.push_back(l2[j]);\n        j++;\n    }\n    result.push_back(common);\n\
    \    return result;\n}\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp4m31opte: /tmp/tmp4m31opte.cpp:34: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> res;\n    long common = 0;\n    for(long i = 0;\
    \ i < l1.size(); i++) {\n        for(long j = 0; j < l2.size(); j++) {\n     \
    \       if(l1[i] == l2[j]) {\n                common++;\n            }\n     \
    \   }\n    }\n    res.push_back(common);\n    return res;\n}\nint main() {\n \
    \   auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp4stzx6ns: /tmp/tmp4stzx6ns.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747663
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    for (long i\
    \ = 0; i < l1.size(); i++) {\n        for (long j = 0; j < l2.size(); j++) {\n\
    \            if (l1[i] == l2[j]) {\n                common++;\n            }\n\
    \        }\n    }\n    for (long i = 0; i < l1.size(); i++) {\n        if (l1[i]\
    \ == common) {\n            result.push_back(l1[i]);\n        }\n    }\n    for\
    \ (long i = 0; i < l2.size(); i++) {\n        if (l2[i] == common) {\n       \
    \     result.push_back(l2[i]);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp2l7w4ujg: /tmp/tmp2l7w4ujg.cpp:28: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747662
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> res;\n    std::set_intersection(l1.begin(), l1.end(),\
    \ l2.begin(), l2.end(), std::back_inserter(res));\n    return res;\n}\nint main()\
    \ {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpi87f2225: /tmp/tmpi87f2225.cpp:11: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747663
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    for (long i\
    \ = 0; i < l1.size(); i++) {\n        for (long j = 0; j < l2.size(); j++) {\n\
    \            if (l1[i] == l2[j]) {\n                common++;\n            }\n\
    \        }\n    }\n    for (long i = 0; i < l1.size(); i++) {\n        if (common\
    \ > 0) {\n            if (l1[i] != common) {\n                result.push_back(l1[i]);\n\
    \                common = 0;\n            }\n        }\n    }\n    for (long i\
    \ = 0; i < l2.size(); i++) {\n        if (common > 0) {\n            if (l2[i]\
    \ != common) {\n                result.push_back(l2[i]);\n                common\
    \ = 0;\n            }\n        }\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpn6fzi5cf: /tmp/tmpn6fzi5cf.cpp:34: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747667
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElements = 0;\n    for(long\
    \ i = 0; i < l1.size(); i++) {\n        for(long j = 0; j < l2.size(); j++) {\n\
    \            if(l1[i] == l2[j]) {\n                commonElements++;\n       \
    \     }\n        }\n    }\n    result.push_back(commonElements);\n    return result;\n\
    }\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpy7fp1b4z: /tmp/tmpy7fp1b4z.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747663
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElements = 0;\n    long\
    \ i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n\
    \    long n = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long\
    \ s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n\
    \    long x = 0;\n    long y = 0;\n    long z = 0;\n    long aa = 0;\n    long\
    \ bb = 0;\n    long cc = 0;\n    long dd = 0;\n    long ee = 0;\n    long ff =\
    \ 0;\n    long gg = 0;\n    long hh = 0;\n    long ii = 0;\n    long jj = 0;\n\
    \    long kk = 0;\n    long ll = 0;\n    long mm = 0;\n    long nn = 0;\n    long\
    \ oo = 0;\n    long pp = 0;\n    long qq = 0;\n    long rr = 0;\n    long ss =\
    \ 0;\n    long tt = 0;\n    long uu = 0;\n    long vv = 0;\n    long ww = 0;\n\
    \    long xx = 0;\n    long yy = 0;\n    long zz = 0;\n    long aaa = 0;\n   \
    \ long bbb = 0;\n    long ccc = 0;\n    long ddd = 0;\n    long eee = 0;\n   \
    \ long fff = 0;\n    long ggg = 0;\n    long hhh = 0;\n    long iii = 0;\n   \
    \ long jjj = 0;\n    long kkk = 0;\n    long lll = 0;\n    long mmm = 0;\n   \
    \ long nnn = 0;\n    long ooo = 0;\n    long ppp = 0;\n    long qqq = 0;\n   \
    \ long rrr = 0;\n    long sss = 0;\n    long ttt = 0;\n    long uuu = 0;\n   \
    \ long vvv = 0;\n    long www = 0;\n    long xxx = 0;\n    long yyy = 0;\n   \
    \ long zzz = 0;\n    long aaaa = 0;\n    long bbbb = 0;\n    long cccc = 0;\n\
    \    long dddd = 0;\n    long eeee = 0;\n    long ffff = 0;\n    long gggg = 0;\n\
    \    long hhhh = 0;\n    long iiii = 0;\n    long jjjj = 0;\n    long kkkk = 0;\n\
    \    long llll = 0;\n    long mmmm = 0;\n    long nnnn = 0;\n    long oooo = 0;\n\
    \    long pppp = 0;\n    long qqqq = 0;\n    long rrrr = 0;\n    long ssss = 0;\n\
    \    long tttt = 0;\n    long uuuu = 0;\n    long vvvv = 0;\n    long wwww = 0;\n\
    \    long xxxx = 0;\n    long \n}\nint main() {\n    auto candidate = common;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)4, (long)3, (long)34,\
    \ (long)653, (long)2, (long)5})), (std::vector<long>({(long)5, (long)7, (long)1,\
    \ (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1, (long)5,\
    \ (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpx4ivvvjs.cpp: In function \u2018std::vector<long int> common(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpx4ivvvjs.cpp:101:1: error: expected\
    \ unqualified-id before \u2018}\u2019 token\n  101 | }\n      | ^\n/tmp/tmpx4ivvvjs.cpp:101:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1659747666
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    for (long i\
    \ = 0; i < l1.size(); i++) {\n        for (long j = 0; j < l2.size(); j++) {\n\
    \            if (l1[i] == l2[j]) {\n                common++;\n              \
    \  break;\n            }\n        }\n    }\n    for (long i = 0; i < l1.size();\
    \ i++) {\n        if (common > 0) {\n            if (l1[i] != common) {\n    \
    \            result.push_back(l1[i]);\n            }\n        } else {\n     \
    \       result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmph2hr89yx: /tmp/tmph2hr89yx.cpp:28: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747667
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> res;\n    long temp;\n    for (long i = 0; i <\
    \ l1.size(); i++) {\n        for (long j = 0; j < l2.size(); j++) {\n        \
    \    if (l1[i] == l2[j]) {\n                res.push_back(l1[i]);\n          \
    \      break;\n            }\n        }\n    }\n    return res;\n}\nint main()\
    \ {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmps4cdwp8u: /tmp/tmps4cdwp8u.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747667
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    long i = 0;\n\
    \    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long\
    \ n = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n\
    \    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n    long\
    \ x = 0;\n    long y = 0;\n    long z = 0;\n    long aa = 0;\n    long bb = 0;\n\
    \    long cc = 0;\n    long dd = 0;\n    long ee = 0;\n    long ff = 0;\n    long\
    \ gg = 0;\n    long hh = 0;\n    long ii = 0;\n    long jj = 0;\n    long kk =\
    \ 0;\n    long ll = 0;\n    long mm = 0;\n    long nn = 0;\n    long oo = 0;\n\
    \    long pp = 0;\n    long qq = 0;\n    long rr = 0;\n    long ss = 0;\n    long\
    \ tt = 0;\n    long uu = 0;\n    long vv = 0;\n    long ww = 0;\n    long xx =\
    \ 0;\n    long yy = 0;\n    long zz = 0;\n    long aaa = 0;\n    long bbb = 0;\n\
    \    long ccc = 0;\n    long ddd = 0;\n    long eee = 0;\n    long fff = 0;\n\
    \    long ggg = 0;\n    long hhh = 0;\n    long iii = 0;\n    long jjj = 0;\n\
    \    long kkk = 0;\n    long lll = 0;\n    long mmm = 0;\n    long nnn = 0;\n\
    \    long ooo = 0;\n    long ppp = 0;\n    long qqq = 0;\n    long rrr = 0;\n\
    \    long sss = 0;\n    long ttt = 0;\n    long uuu = 0;\n    long vvv = 0;\n\
    \    long www = 0;\n    long xxx = 0;\n    long yyy = 0;\n    long zzz = 0;\n\
    \    long aaaa = 0;\n    long bbbb = 0;\n    long cccc = 0;\n    long dddd = 0;\n\
    \    long eeee = 0;\n    long ffff = 0;\n    long gggg = 0;\n    long hhhh = 0;\n\
    \    long iiii = 0;\n    long jjjj = 0;\n    long kkkk = 0;\n    long llll = 0;\n\
    \    long mmmm = 0;\n    long nnnn = 0;\n    long oooo = 0;\n    long pppp = 0;\n\
    \    long qqqq = 0;\n    long rrrr = 0;\n    long ssss = 0;\n    long tttt = 0;\n\
    \    long uuuu = 0;\n    long vvvv = 0;\n    long wwww = 0;\n    long xxxx = 0;\n\
    \    long yyyy\n}\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpw1_ecxog.cpp: In function \u2018std::vector<long int> common(std::vector<long\
    \ int>, std::vector<long int>)\u2019:\n/tmp/tmpw1_ecxog.cpp:101:1: error: expected\
    \ initializer before \u2018}\u2019 token\n  101 | }\n      | ^\n/tmp/tmpw1_ecxog.cpp:101:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1659747667
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    for(long i =\
    \ 0; i < l1.size(); i++) {\n        for(long j = 0; j < l2.size(); j++) {\n  \
    \          if(l1[i] == l2[j]) {\n                common++;\n            }\n  \
    \      }\n    }\n    result.push_back(common);\n    return result;\n}\nint main()\
    \ {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp2v4a9kgx: /tmp/tmp2v4a9kgx.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElements = 0;\n    long\
    \ i = 0;\n    long j = 0;\n    long k = 0;\n    while (i<l1.size() && j<l2.size())\
    \ {\n        if (l1[i]==l2[j]) {\n            commonElements++;\n            i++;\n\
    \            j++;\n        } else if (l1[i]<l2[j]) {\n            i++;\n     \
    \   } else {\n            j++;\n        }\n    }\n    while (i < l1.size()) {\n\
    \        result.push_back(l1[i]);\n        i++;\n    }\n    while (j < l2.size())\
    \ {\n        result.push_back(l2[j]);\n        j++;\n    }\n    result.push_back(commonElements);\n\
    \    return result;\n}\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpa5um_hyh: /tmp/tmpa5um_hyh.cpp:34: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747667
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> res;\n    res.reserve(l1.size() + l2.size());\n\
    \    for (auto i : l1) {\n        auto it = std::find(l2.begin(), l2.end(), i);\n\
    \        if (it != l2.end()) {\n            res.push_back(i);\n            l2.erase(it);\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = common;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)4, (long)3, (long)34,\
    \ (long)653, (long)2, (long)5})), (std::vector<long>({(long)5, (long)7, (long)1,\
    \ (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1, (long)5,\
    \ (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp98uf_r77: /tmp/tmp98uf_r77.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747667
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElements = 0, commonElementsCount\
    \ = 0;\n    for (long i = 0; i < l1.size(); i++) {\n        for (long j = 0; j\
    \ < l2.size(); j++) {\n            if (l1[i] == l2[j]) {\n                commonElementsCount++;\n\
    \            }\n        }\n        if (commonElementsCount == l2.size()) {\n \
    \           result.push_back(l1[i]);\n            commonElementsCount = 0;\n \
    \       }\n    }\n    return result;\n}\nint main() {\n    auto candidate = common;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)4, (long)3, (long)34,\
    \ (long)653, (long)2, (long)5})), (std::vector<long>({(long)5, (long)7, (long)1,\
    \ (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1, (long)5,\
    \ (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpe93542ux: /tmp/tmpe93542ux.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747661
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long commonElements = 0;\n    long\
    \ maxElements = std::max(l1.size(), l2.size());\n    for (long i = 0; i < maxElements;\
    \ i++) {\n        if (l1[i] == l2[i]) {\n            commonElements++;\n     \
    \   }\n    }\n    if (commonElements == 0) {\n        return result;\n    }\n\
    \    for (long i = 0; i < maxElements; i++) {\n        if (l1[i] != l2[i]) {\n\
    \            result.push_back(l1[i]);\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpkfq66hwa: /tmp/tmpkfq66hwa.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747667
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    result.push_back(l1[0]);\n    result.push_back(l2[0]);\n\
    \    long mid = l1[0] + l2[0] / 2;\n    for (long i = 1, j = 1; i < l1.size()\
    \ && j < l2.size(); i++, j++) {\n        if (l1[i] < mid) {\n            result.push_back(l1[i]);\n\
    \            mid = l1[i] + l2[i] / 2;\n        } else if (l2[j] < mid) {\n   \
    \         result.push_back(l2[j]);\n            mid = l1[i] + l2[j] / 2;\n   \
    \     } else {\n            result.push_back(l1[i]);\n            result.push_back(l2[j]);\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = common;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)4, (long)3, (long)34,\
    \ (long)653, (long)2, (long)5})), (std::vector<long>({(long)5, (long)7, (long)1,\
    \ (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1, (long)5,\
    \ (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp20emm05j: /tmp/tmp20emm05j.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747668
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> result;\n    long common = 0;\n    for (long i\
    \ = 0; i < l1.size(); i++) {\n        if (l1.at(i) == l2.at(i)) {\n          \
    \  common++;\n        } else {\n            if (common > 0) {\n              \
    \  result.push_back(common);\n                common = 0;\n            }\n   \
    \         result.push_back(l1.at(i));\n        }\n    }\n    if (common > 0) {\n\
    \        result.push_back(common);\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpha44io24: /tmp/tmpha44io24.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,
    (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,
    (long)5, (long)653}))'' failed.

    '
  stdout: ''
  timestamp: 1659747668
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique common\
    \ elements for two lists.\nstd::vector<long> common(std::vector<long> l1, std::vector<long>\
    \ l2) {\n    std::vector<long> res;\n    std::sort(l1.begin(), l1.end());\n  \
    \  std::sort(l2.begin(), l2.end());\n    long i = 0, j = 0;\n    while (i < l1.size()\
    \ && j < l2.size()) {\n        if (l1[i] == l2[j]) {\n            res.push_back(l1[i]);\n\
    \            i++;\n            j++;\n        } else if (l1[i] < l2[j]) {\n   \
    \         i++;\n        } else {\n            j++;\n        }\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = common;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)4, (long)3, (long)34, (long)653, (long)2, (long)5})), (std::vector<long>({(long)5,\
    \ (long)7, (long)1, (long)5, (long)9, (long)653, (long)121}))) == (std::vector<long>({(long)1,\
    \ (long)5, (long)653})));\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>({(long)3, (long)2}))) == (std::vector<long>({(long)2,\
    \ (long)3})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)8})), (std::vector<long>({(long)3, (long)2, (long)4}))) == (std::vector<long>({(long)2,\
    \ (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3,\
    \ (long)2, (long)8})), (std::vector<long>())) == (std::vector<long>()));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747668

name: HumanEval_152_compare
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember that\
  \ feeling when the result of some long-awaited\n// event is finally known. The feelings\
  \ and thoughts you have at that moment are\n// definitely worth noting down and\
  \ comparing.\n// Your task is to determine if a person correctly guessed the results\
  \ of a number of matches.\n// You are given two arrays of scores and guesses of\
  \ equal length, where each index shows a match. \n// Return an array of the same\
  \ length denoting how far off each guess was. If they have guessed correctly,\n\
  // the value is 0, and if not, the value is the absolute difference between the\
  \ guess and the score.\n// example:\nstd::vector<long> compare(std::vector<long>\
  \ game, std::vector<long> guess) {\n"
tests: "}\nint main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({(long)1,\
  \ (long)2, (long)3, (long)4, (long)5, (long)1})), (std::vector<long>({(long)1, (long)2,\
  \ (long)3, (long)4, (long)2, (long)-2}))) == (std::vector<long>({(long)0, (long)0,\
  \ (long)0, (long)0, (long)3, (long)3})));\n    assert(candidate((std::vector<long>({(long)0,\
  \ (long)0, (long)0, (long)0, (long)0, (long)0})), (std::vector<long>({(long)0, (long)0,\
  \ (long)0, (long)0, (long)0, (long)0}))) == (std::vector<long>({(long)0, (long)0,\
  \ (long)0, (long)0, (long)0, (long)0})));\n    assert(candidate((std::vector<long>({(long)1,\
  \ (long)2, (long)3})), (std::vector<long>({(long)-1, (long)-2, (long)-3}))) == (std::vector<long>({(long)2,\
  \ (long)4, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
  \ (long)3, (long)5})), (std::vector<long>({(long)-1, (long)2, (long)3, (long)4})))\
  \ == (std::vector<long>({(long)2, (long)0, (long)0, (long)1})));\n}\n"
completions: ["    // Your code here\n    std::vector<long> result(guess.size());\n\
    \    long sum = 0;\n    long diff = 0;\n    long minDiff = std::numeric_limits<long>::max();\n\
    \    long minDiffIndex = 0;\n    long maxDiff = std::numeric_limits<long>::min();\n\
    \    long maxDiffIndex = 0;\n    long minSum = std::numeric_limits<long>::max();\n\
    \    long minSumIndex = 0;\n    long maxSum = std::numeric_limits<long>::min();\n\
    \    long maxSumIndex = 0;\n    long minGame = std::numeric_limits<long>::max();\n\
    \    long minGameIndex = 0;\n    long maxGame = std::numeric_limits<long>::min();\n\
    \    long maxGameIndex = 0;\n    long minGuess = std::numeric_limits<long>::max();\n\
    \    long minGuessIndex = 0;\n    long maxGuess = std::numeric_limits<long>::min();\n\
    \    long maxGuessIndex = 0;\n    long minGameSum = std::numeric_limits<long>::max();\n\
    \    long minGameSumIndex = 0;\n    long maxGameSum = std::numeric_limits<long>::min();\n\
    \    long maxGameSumIndex = 0;\n    long minGuessSum = std::numeric_limits<long>::max();\n\
    \    long minGuessSumIndex = 0;\n    long maxGuessSum = std::numeric_limits<long>::min();\n\
    \    long maxGuessSumIndex = 0;\n    long minGameDiff = std::numeric_limits<long>::max();\n\
    \    long minGameDiffIndex = 0;\n    long maxGameDiff = std::numeric_limits<long>::min();\n\
    \    long maxGameDiffIndex = 0;\n    long minGuessDiff = std::numeric_limits<long>::max();\n\
    \    long minGuessDiffIndex = 0;\n    long maxGuessDiff = std::numeric_limits<long>::min();\n\
    \    long maxGuessDiffIndex = 0;\n    long minGameMin = std::numeric_limits<long>::max();\n\
    \    long minGameMinIndex = 0;\n    long maxGameMin = std::numeric_limits<long>::min();\n\
    \    long maxGameMinIndex = 0;\n    long minGuessMin = std::numeric_limits<long>::max();\n\
    \    long minGuessMinIndex = 0;\n    long maxGuessMin = std::numeric_limits<long>::min();\n\
    \    long maxGuessMinIndex = 0;\n    long minGameMax = std::numeric_limits<long>::max();\n\
    \    long minGameMaxIndex = 0;\n    long maxGame", "    std::vector<long> result(guess.size());\n\
    \    for (size_t i = 0; i < guess.size(); ++i) {\n        result[i] = abs(game[i]\
    \ - guess[i]);\n    }\n    return result;", "    // Your code here\n    std::vector<long>\
    \ result(guess.size());\n    long sum = 0;\n    for(long i = 0; i < guess.size();\
    \ i++) {\n        sum += abs(game[i] - guess[i]);\n        result[i] = sum;\n\
    \    }\n    return result;", "    std::vector<long> result(guess.size());\n  \
    \  long diff = 0;\n    for (size_t i = 0; i < guess.size(); i++) {\n        diff\
    \ = abs(game[i] - guess[i]);\n        result[i] = diff;\n    }\n    return result;",
  "    std::vector<long> result(guess.size());\n    long sum = 0;\n    long min =\
    \ std::numeric_limits<long>::max();\n    long max = std::numeric_limits<long>::min();\n\
    \    for(size_t i = 0; i < guess.size(); i++) {\n        sum += game[i];\n   \
    \     if(game[i] > max) {\n            max = game[i];\n        }\n        if(game[i]\
    \ < min) {\n            min = game[i];\n        }\n    }\n    for(size_t i = 0;\
    \ i < guess.size(); i++) {\n        result[i] = std::abs(guess[i] - sum);\n  \
    \  }\n    return result;", "    std::vector<long> result(guess.size());\n    long\
    \ sum = 0;\n    for (long i = 0; i < guess.size(); i++) {\n        sum += abs(game[i]\
    \ - guess[i]);\n        result[i] = sum;\n    }\n    return result;", "    std::vector<long>\
    \ result(guess.size());\n    long diff = 0;\n    for (size_t i = 0; i < guess.size();\
    \ i++) {\n        diff = std::abs(game[i] - guess[i]);\n        result[i] = diff;\n\
    \    }\n    return result;", "    std::vector<long> result(guess.size());\n  \
    \  for (size_t i = 0; i < guess.size(); i++) {\n        result[i] = abs(game[i]\
    \ - guess[i]);\n    }\n    return result;", "    std::vector<long> result(guess.size());\n\
    \    long diff = 0;\n    for(size_t i = 0; i < guess.size(); i++) {\n        diff\
    \ = abs(game[i] - guess[i]);\n        result[i] = diff;\n    }\n    return result;",
  "    std::vector<long> result(guess.size());\n    long long sum = 0;\n    long long\
    \ max = 0;\n    for (size_t i = 0; i < guess.size(); i++) {\n        sum += game[i];\n\
    \        if (sum > max) {\n            max = sum;\n        }\n    }\n    for (size_t\
    \ i = 0; i < guess.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n\
    \    }\n    for (size_t i = 0; i < guess.size(); i++) {\n        if (result[i]\
    \ != 0) {\n            result[i] = result[i] / max;\n        }\n    }\n    return\
    \ result;", "    // Your code here\n    std::vector<long> result(guess.size());\n\
    \    long sum = 0;\n    for (long i = 0; i < guess.size(); i++) {\n        sum\
    \ += abs(game[i] - guess[i]);\n        result[i] = sum;\n    }\n    return result;",
  "    // Your code goes here\n    std::vector<long> result(guess.size());\n    long\
    \ sum = 0;\n    for(int i = 0; i < guess.size(); i++) {\n        sum += abs(game[i]\
    \ - guess[i]);\n        result[i] = sum;\n    }\n    return result;", "    //\
    \ Your code here\n    std::vector<long> result(guess.size());\n    long sum =\
    \ 0;\n    for(int i = 0; i < guess.size(); i++) {\n        sum += abs(game[i]\
    \ - guess[i]);\n        result[i] = sum;\n    }\n    return result;", "    std::vector<long>\
    \ result(guess.size());\n    long score = 0;\n    for (long i = 0; i < guess.size();\
    \ i++) {\n        score += game[i] - guess[i];\n        result[i] = abs(score);\n\
    \    }\n    return result;", "    std::vector<long> result(guess.size());\n  \
    \  long score = 0;\n    long guess = 0;\n    for (size_t i = 0; i < guess.size();\
    \ i++) {\n        guess = guess[i];\n        score = game[i];\n        if (guess\
    \ == score) {\n            result[i] = 0;\n        } else {\n            result[i]\
    \ = abs(guess - score);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result(guess.size());\n    long long sum = 0;\n    long long diff = 0;\n   \
    \ for(long i = 0; i < guess.size(); i++) {\n        sum += abs(game[i] - guess[i]);\n\
    \        diff = abs(game[i] - guess[i]);\n        result[i] = sum;\n    }\n  \
    \  return result;", "    // Your code here\n    std::vector<long> result(guess.size());\n\
    \    long sum = 0;\n    for (long i = 0; i < guess.size(); i++) {\n        sum\
    \ += abs(game[i] - guess[i]);\n        result[i] = sum;\n    }\n    return result;",
  "    // Your code here\n    std::vector<long> result(guess.size());\n    long sum\
    \ = 0;\n    long diff = 0;\n    for(int i = 0; i < guess.size(); i++) {\n    \
    \    sum += game[i];\n        diff = abs(guess[i] - sum);\n        result[i] =\
    \ diff;\n    }\n    return result;", "    std::vector<long> result(guess.size());\n\
    \    long diff = 0;\n    for (size_t i = 0; i < guess.size(); i++) {\n       \
    \ diff = abs(game[i] - guess[i]);\n        result[i] = diff;\n    }\n    return\
    \ result;", "    std::vector<long> result(guess.size());\n    long diff = 0;\n\
    \    for(int i = 0; i < guess.size(); i++) {\n        diff = abs(game[i] - guess[i]);\n\
    \        result[i] = diff;\n    }\n    return result;", "    std::vector<long>\
    \ result(guess.size());\n    for (long i = 0; i < guess.size(); i++) {\n     \
    \   result[i] = abs(game[i] - guess[i]);\n    }\n    return result;", "    std::vector<long>\
    \ result(guess.size());\n    assert(game.size() == guess.size());\n    long diff\
    \ = 0;\n    for (size_t i = 0; i < guess.size(); i++) {\n        diff = abs(game[i]\
    \ - guess[i]);\n        result[i] = diff;\n    }\n    return result;", "    std::vector<long>\
    \ result(guess.size());\n    long score = 0;\n    for (size_t i = 0; i < guess.size();\
    \ i++) {\n        score += game[i] - guess[i];\n        result[i] = abs(score);\n\
    \    }\n    return result;", "    std::vector<long> result(guess.size());\n  \
    \  long diff = 0;\n    for (size_t i = 0; i < guess.size(); ++i) {\n        diff\
    \ = std::abs(guess - game[i]);\n        result[i] = diff;\n    }\n    return result;",
  "    std::vector<long> result(guess.size());\n    long score = 0;\n    long diff\
    \ = 0;\n    for(size_t i = 0; i < guess.size(); ++i) {\n        diff = abs(game[i]\
    \ - guess[i]);\n        if(diff == 0) {\n            result[i] = 0;\n        }\
    \ else {\n            result[i] = diff;\n        }\n        score += game[i];\n\
    \    }\n    return result;", "    std::vector<long> result(guess.size());\n  \
    \  for (size_t i = 0; i < guess.size(); i++) {\n        result[i] = abs(game[i]\
    \ - guess[i]);\n    }\n    return result;", "    // Your code goes here\n    std::vector<long>\
    \ result(guess.size());\n    long score = 0;\n    long diff = 0;\n    for(int\
    \ i = 0; i < guess.size(); i++){\n        diff = abs(game[i] - guess[i]);\n  \
    \      if(diff == 0){\n            result[i] = 0;\n        }\n        else{\n\
    \            result[i] = diff;\n        }\n    }\n    return result;", "    //\
    \ Your code here\n    std::vector<long> result(guess.size());\n    long sum =\
    \ 0;\n    long diff = 0;\n    for(int i = 0; i < guess.size(); i++) {\n      \
    \  sum += game[i];\n        diff = abs(game[i] - guess[i]);\n        result[i]\
    \ = sum - diff;\n    }\n    return result;", "    std::vector<long> result(guess.size());\n\
    \    for (size_t i = 0; i < guess.size(); i++) {\n        result[i] = abs(game[i]\
    \ - guess[i]);\n    }\n    return result;", "    std::vector<long> result(guess.size());\n\
    \    long diff = 0;\n    for (size_t i = 0; i < guess.size(); i++) {\n       \
    \ diff = abs(game[i] - guess[i]);\n        result[i] = diff;\n    }\n    return\
    \ result;", "    std::vector<long> result(guess.size());\n    for (size_t i =\
    \ 0; i < guess.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n\
    \    }\n    return result;", "    std::vector<long> result(guess.size());\n  \
    \  long sum = 0;\n    long max = 0;\n    for (size_t i = 0; i < guess.size();\
    \ i++) {\n        sum += game[i];\n        if (game[i] > max) {\n            max\
    \ = game[i];\n        }\n    }\n    for (size_t i = 0; i < guess.size(); i++)\
    \ {\n        result[i] = abs(guess[i] - sum);\n    }\n    return result;", " \
    \   // Your code here\n    std::vector<long> result(guess.size());\n    long sum\
    \ = 0;\n    for (size_t i = 0; i < guess.size(); i++) {\n        sum += abs(game[i]\
    \ - guess[i]);\n        result[i] = sum;\n    }\n    return result;", "    std::vector<long>\
    \ result(guess.size());\n    long diff = 0;\n    for (size_t i = 0; i < guess.size();\
    \ i++) {\n        diff = abs(game[i] - guess[i]);\n        result[i] = diff;\n\
    \    }\n    return result;", "    // Your code here\n    std::vector<long> result(guess.size());\n\
    \    long sum = 0;\n    long min = 0;\n    long max = 0;\n    long minDiff = std::numeric_limits<long>::max();\n\
    \    long maxDiff = std::numeric_limits<long>::min();\n    for(long i = 0; i <\
    \ guess.size(); i++) {\n        sum += game[i];\n        if(sum < min)\n     \
    \       min = sum;\n        if(sum > max)\n            max = sum;\n        sum\
    \ -= guess[i];\n        if(sum < minDiff)\n            minDiff = sum;\n      \
    \  if(sum > maxDiff)\n            maxDiff = sum;\n    }\n    for(long i = 0; i\
    \ < guess.size(); i++) {\n        long diff = guess[i] - game[i];\n        if(diff\
    \ < 0)\n            diff *= -1;\n        if(diff < minDiff)\n            minDiff\
    \ = diff;\n        if(diff > maxDiff)\n            maxDiff = diff;\n        result[i]\
    \ = diff;\n    }\n    for(long i = 0; i < guess.size(); i++) {\n        result[i]\
    \ = std::abs(result[i]);\n    }\n    return result;", "    // Your code here\n\
    \    std::vector<long> result(guess.size());\n    long sum = 0;\n    for(size_t\
    \ i = 0; i < guess.size(); i++) {\n        sum += abs(game[i] - guess[i]);\n \
    \       result[i] = sum;\n    }\n    return result;", "    std::vector<long> result(guess.size());\n\
    \    long score;\n    long diff;\n    long sum = 0;\n    long count = 0;\n   \
    \ long max = 0;\n    long min = 0;\n    long mid = 0;\n    long mid2 = 0;\n  \
    \  long mid3 = 0;\n    long mid4 = 0;\n    long mid5 = 0;\n    long mid6 = 0;\n\
    \    long mid7 = 0;\n    long mid8 = 0;\n    long mid9 = 0;\n    long mid10 =\
    \ 0;\n    long mid11 = 0;\n    long mid12 = 0;\n    long mid13 = 0;\n    long\
    \ mid14 = 0;\n    long mid15 = 0;\n    long mid16 = 0;\n    long mid17 = 0;\n\
    \    long mid18 = 0;\n    long mid19 = 0;\n    long mid20 = 0;\n    long mid21\
    \ = 0;\n    long mid22 = 0;\n    long mid23 = 0;\n    long mid24 = 0;\n    long\
    \ mid25 = 0;\n    long mid26 = 0;\n    long mid27 = 0;\n    long mid28 = 0;\n\
    \    long mid29 = 0;\n    long mid30 = 0;\n    long mid31 = 0;\n    long mid32\
    \ = 0;\n    long mid33 = 0;\n    long mid34 = 0;\n    long mid35 = 0;\n    long\
    \ mid36 = 0;\n    long mid37 = 0;\n    long mid38 = 0;\n    long mid39 = 0;\n\
    \    long mid40 = 0;\n    long mid41 = 0;\n    long mid42 = 0;\n    long mid43\
    \ = 0;\n    long mid44 = 0;\n    long mid45 = 0;\n    long mid46 = 0;\n    long\
    \ mid47 = 0;\n    long mid48 = 0;\n    long mid49 = 0;\n    long mid50 = 0;\n\
    \    long mid51 = 0;\n    long mid52 = 0;\n    long mid53 = 0;\n    long mid54\
    \ = 0;\n    long mid55 = 0;\n    long mid56 = 0;\n    long mid57 = 0;\n    long\
    \ mid58 = 0;\n    long mid59 = 0;\n    long mid60 = 0;\n    long mid61 = 0;\n\
    \    long mid62 = 0;\n    long mid63 = 0;\n    long mid64 = 0;\n    long mid65\
    \ = 0;\n    long mid66 = 0;\n    long mid67 = 0;\n    long mid68 = 0;\n    long\
    \ mid69 = 0;\n    long mid70 = 0;\n    long mid71 = 0;\n    long mid72 = 0;\n\
    \    long mid73 = 0;\n    long mid74 = 0;\n    long mid75 = 0;\n    long mid76\
    \ = 0;\n    long mid77 = 0;\n    long mid78 = 0;\n    long mid79 = 0;\n    long\
    \ mid80", "    std::vector<long> result(guess.size());\n    for (size_t i = 0;\
    \ i < guess.size(); i++) {\n        result[i] = abs(guess[i] - game[i]);\n   \
    \ }\n    return result;", "    std::vector<long> result(guess.size());\n    assert(game.size()\
    \ == guess.size());\n    for (size_t i = 0; i < game.size(); ++i) {\n        result[i]\
    \ = abs(game[i] - guess[i]);\n    }\n    return result;", "    // Your code goes\
    \ here\n    std::vector<long> result(guess.size());\n    long sum = 0;\n    for(int\
    \ i = 0; i < guess.size(); i++){\n        sum += abs(game[i] - guess[i]);\n  \
    \      result[i] = sum;\n    }\n    return result;", "    // Your code goes here\n\
    \    std::vector<long> result(guess.size());\n    long sum = 0;\n    for(int i\
    \ = 0; i < guess.size(); i++) {\n        sum += abs(game[i] - guess[i]);\n   \
    \     result[i] = sum;\n    }\n    return result;", "    std::vector<long> result(guess.size());\n\
    \    long score;\n    long diff;\n    long diff2;\n    long diff3;\n    long diff4;\n\
    \    long diff5;\n    long diff6;\n    long diff7;\n    long diff8;\n    long\
    \ diff9;\n    long diff10;\n    long diff11;\n    long diff12;\n    long diff13;\n\
    \    long diff14;\n    long diff15;\n    long diff16;\n    long diff17;\n    long\
    \ diff18;\n    long diff19;\n    long diff20;\n    long diff21;\n    long diff22;\n\
    \    long diff23;\n    long diff24;\n    long diff25;\n    long diff26;\n    long\
    \ diff27;\n    long diff28;\n    long diff29;\n    long diff30;\n    long diff31;\n\
    \    long diff32;\n    long diff33;\n    long diff34;\n    long diff35;\n    long\
    \ diff36;\n    long diff37;\n    long diff38;\n    long diff39;\n    long diff40;\n\
    \    long diff41;\n    long diff42;\n    long diff43;\n    long diff44;\n    long\
    \ diff45;\n    long diff46;\n    long diff47;\n    long diff48;\n    long diff49;\n\
    \    long diff50;\n    long diff51;\n    long diff52;\n    long diff53;\n    long\
    \ diff54;\n    long diff55;\n    long diff56;\n    long diff57;\n    long diff58;\n\
    \    long diff59;\n    long diff60;\n    long diff61;\n    long diff62;\n    long\
    \ diff63;\n    long diff64;\n    long diff65;\n    long diff66;\n    long diff67;\n\
    \    long diff68;\n    long diff69;\n    long diff70;\n    long diff71;\n    long\
    \ diff72;\n    long diff73;\n    long diff74;\n    long diff75;\n    long diff76;\n\
    \    long diff77;\n    long diff78;\n    long diff79;\n    long diff80;\n    long\
    \ diff81;\n    long diff82;\n    long diff83;\n    long diff84;\n    long diff85;\n\
    \    long diff86;\n    ", "    std::vector<long> result(guess.size());\n    long\
    \ diff = 0;\n    for (size_t i = 0; i < guess.size(); ++i) {\n        diff = abs(game[i]\
    \ - guess[i]);\n        result[i] = diff;\n    }\n    return result;", "    std::vector<long>\
    \ result(guess.size());\n    long diff = 0;\n    for (size_t i = 0; i < guess.size();\
    \ i++) {\n        diff = abs(game[i] - guess[i]);\n        result[i] = diff;\n\
    \    }\n    return result;", "    // your code goes here\n    std::vector<long>\
    \ result(guess.size());\n    long sum = 0;\n    long max = 0;\n    long min =\
    \ 0;\n    long diff = 0;\n    long count = 0;\n    for(long i = 0; i < guess.size();\
    \ i++) {\n        sum += game[i];\n        if(sum > max) {\n            max =\
    \ sum;\n        }\n        if(sum < min) {\n            min = sum;\n        }\n\
    \        diff = game[i] - guess[i];\n        if(diff > max) {\n            max\
    \ = diff;\n        }\n        if(diff < min) {\n            min = diff;\n    \
    \    }\n        if(diff == 0) {\n            result[i] = 0;\n            count++;\n\
    \        }\n        else {\n            result[i] = abs(diff);\n        }\n  \
    \  }\n    if(count == 0) {\n        return result;\n    }\n    else {\n      \
    \  return result;\n    }", "    std::vector<long> result(guess.size());\n    long\
    \ sum = 0;\n    for (size_t i = 0; i < guess.size(); i++) {\n        sum += abs(game[i]\
    \ - guess[i]);\n        result[i] = sum;\n    }\n    return result;", "    std::vector<long>\
    \ result(guess.size());\n    for (size_t i = 0; i < guess.size(); ++i) {\n   \
    \     result[i] = abs(game[i] - guess[i]);\n    }\n    return result;", "    std::vector<long>\
    \ result(guess.size());\n    long score = 0;\n    for (size_t i = 0; i < guess.size();\
    \ i++) {\n        score += abs(game[i] - guess[i]);\n        result[i] = score;\n\
    \    }\n    return result;", "    std::vector<long> result(guess.size());\n  \
    \  for (long i = 0; i < guess.size(); i++) {\n        result[i] = abs(game[i]\
    \ - guess[i]);\n    }\n    return result;", "    // Your code goes here\n    std::vector<long>\
    \ result(guess.size());\n    long score = 0;\n    long diff = 0;\n    for(int\
    \ i = 0; i < guess.size(); i++) {\n        if(game[i] == guess[i]) {\n       \
    \     result[i] = 0;\n        } else {\n            diff = abs(game[i] - guess[i]);\n\
    \            result[i] = diff;\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result(guess.size());\n    long sum = 0;\n    for (size_t i = 0; i < guess.size();\
    \ i++) {\n        sum += abs(game[i] - guess[i]);\n        result[i] = sum;\n\
    \    }\n    return result;", "    std::vector<long> result(guess.size());\n  \
    \  long sum = 0;\n    for(long i = 0; i < guess.size(); i++) {\n        sum +=\
    \ abs(game[i] - guess[i]);\n        result[i] = sum;\n    }\n    return result;",
  "    std::vector<long> result(guess.size());\n    long diff = 0;\n    for(size_t\
    \ i = 0; i < guess.size(); ++i) {\n        diff = abs(game[i] - guess[i]);\n \
    \       result[i] = diff;\n    }\n    return result;", "    // your code here\n\
    \    std::vector<long> result(guess.size());\n    long sum = 0;\n    long diff\
    \ = 0;\n    long min = 0;\n    long max = 0;\n    long sum2 = 0;\n    long diff2\
    \ = 0;\n    long min2 = 0;\n    long max2 = 0;\n    long sum3 = 0;\n    long diff3\
    \ = 0;\n    long min3 = 0;\n    long max3 = 0;\n    long sum4 = 0;\n    long diff4\
    \ = 0;\n    long min4 = 0;\n    long max4 = 0;\n    long sum5 = 0;\n    long diff5\
    \ = 0;\n    long min5 = 0;\n    long max5 = 0;\n    long sum6 = 0;\n    long diff6\
    \ = 0;\n    long min6 = 0;\n    long max6 = 0;\n    long sum7 = 0;\n    long diff7\
    \ = 0;\n    long min7 = 0;\n    long max7 = 0;\n    long sum8 = 0;\n    long diff8\
    \ = 0;\n    long min8 = 0;\n    long max8 = 0;\n    long sum9 = 0;\n    long diff9\
    \ = 0;\n    long min9 = 0;\n    long max9 = 0;\n    long sum10 = 0;\n    long\
    \ diff10 = 0;\n    long min10 = 0;\n    long max10 = 0;\n    long sum11 = 0;\n\
    \    long diff11 = 0;\n    long min11 = 0;\n    long max11 = 0;\n    long sum12\
    \ = 0;\n    long diff12 = 0;\n    long min12 = 0;\n    long max12 = 0;\n    long\
    \ sum13 = 0;\n    long diff13 = 0;\n    long min13 = 0;\n    long max13 = 0;\n\
    \    long sum14 = 0;\n    long diff14 = 0;\n    long min14 = 0;\n    long max14\
    \ = 0;\n    long sum15 = 0;\n    long diff15 = 0;\n    long min15 = 0;\n    long\
    \ max15 = 0;\n    long sum16 = 0;\n    long diff16 = 0;\n    long min16 = 0;\n\
    \    long max16 = 0;\n    long sum17 = 0;\n    long diff17 = 0;\n    long min17\
    \ = 0;\n    long max17 = 0;\n    long sum18 = 0;\n    long diff18 = 0;\n    long\
    \ min18 = 0;\n    long max18 = 0;\n    long sum19 = 0;\n    long diff19 = 0;\n\
    \    long min19 = 0;\n    long max19 = 0;\n    long sum20 = 0;\n    long diff20\
    \ = 0;\n    long min20 = 0;\n    long max20 = 0;\n    long sum21 = 0;\n    long\
    \ diff21 = 0;\n    long min21 = 0;\n    long max21 = 0;\n    long sum22 = 0;\n\
    \    long diff22 = 0;\n    long ", "    std::vector<long> result(guess.size());\n\
    \    for (size_t i = 0; i < guess.size(); i++) {\n        result[i] = abs(game[i]\
    \ - guess[i]);\n    }\n    return result;", "    // Your code here\n    std::vector<long>\
    \ result(guess.size());\n    long sum = 0;\n    long diff = 0;\n    long minDiff\
    \ = std::numeric_limits<long>::max();\n    long maxDiff = 0;\n    long minSum\
    \ = std::numeric_limits<long>::max();\n    long maxSum = 0;\n    long minSumOfGuesses\
    \ = std::numeric_limits<long>::max();\n    long maxSumOfGuesses = 0;\n    long\
    \ minSumOfScores = std::numeric_limits<long>::max();\n    long maxSumOfScores\
    \ = 0;\n    long minSumOfGuessesOfScores = std::numeric_limits<long>::max();\n\
    \    long maxSumOfGuessesOfScores = 0;\n    long minSumOfGuessesOfGuesses = std::numeric_limits<long>::max();\n\
    \    long maxSumOfGuessesOfGuesses = 0;\n    long minSumOfGuessesOfGuessesOfScores\
    \ = std::numeric_limits<long>::max();\n    long maxSumOfGuessesOfGuessesOfScores\
    \ = 0;\n    long minSumOfGuessesOfGuessesOfGuesses = std::numeric_limits<long>::max();\n\
    \    long maxSumOfGuessesOfGuessesOfGuesses = 0;\n    long minSumOfGuessesOfGuessesOfGuessesOfScores\
    \ = std::numeric_limits<long>::max();\n    long maxSumOfGuessesOfGuessesOfGuessesOfScores\
    \ = 0;\n    long minSumOfGuessesOfGuessesOfGuessesOfGuesses = std::numeric_limits<long>::max();\n\
    \    long maxSumOfGuessesOfGuessesOfGuessesOfGuesses = 0;\n    long minSumOfGuessesOfGuessesOfGuessesOfGuessesOfScores\
    \ = std::numeric_limits<long>::max();\n    long maxSumOfGuessesOfGuessesOfGuessesOfGuessesOfScores\
    \ = 0;\n    long minSumOfGuessesOfGuessesOfGuessesOfGuessesOfGuesses = std::numeric_limits<long>::max();\n\
    \    long maxSumOfGuessesOfGuessesOfGuessesOfGuessesOfGuesses = 0;\n    long minSumOfGuessesOfGuessesOfGuessesOfGuessesOfGuessesOfScores\
    \ = ", "    std::vector<long> result(guess.size());\n    long diff = 0;\n    for\
    \ (size_t i = 0; i < guess.size(); ++i) {\n        diff = abs(game[i] - guess[i]);\n\
    \        result[i] = diff;\n    }\n    return result;", "    std::vector<long>\
    \ result(guess.size());\n    long diff = 0;\n    for (size_t i = 0; i < guess.size();\
    \ i++) {\n        diff = std::abs(game[i] - guess[i]);\n        result[i] = diff;\n\
    \    }\n    return result;", "    std::vector<long> result(guess.size());\n  \
    \  long sum = 0;\n    for (size_t i = 0; i < guess.size(); ++i) {\n        sum\
    \ += abs(game[i] - guess[i]);\n        result[i] = sum;\n    }\n    return result;",
  "    std::vector<long> result(guess.size());\n    long diff = 0;\n    for(size_t\
    \ i = 0; i < guess.size(); ++i) {\n        diff = std::abs(game[i] - guess[i]);\n\
    \        result[i] = diff;\n    }\n    return result;", "    // Your code here\n\
    \    std::vector<long> result(guess.size());\n    long score = 0;\n    for (size_t\
    \ i = 0; i < guess.size(); i++) {\n        score += game[i];\n        result[i]\
    \ = abs(guess[i] - score);\n    }\n    return result;", "    std::vector<long>\
    \ result(guess.size());\n    long score = 0;\n    long diff = 0;\n    long sum\
    \ = 0;\n    long count = 0;\n    long max = 0;\n    long min = 0;\n    long mid\
    \ = 0;\n    long sum2 = 0;\n    long min2 = 0;\n    long max2 = 0;\n    long mid2\
    \ = 0;\n    long sum3 = 0;\n    long min3 = 0;\n    long max3 = 0;\n    long mid3\
    \ = 0;\n    long sum4 = 0;\n    long min4 = 0;\n    long max4 = 0;\n    long mid4\
    \ = 0;\n    long sum5 = 0;\n    long min5 = 0;\n    long max5 = 0;\n    long mid5\
    \ = 0;\n    long sum6 = 0;\n    long min6 = 0;\n    long max6 = 0;\n    long mid6\
    \ = 0;\n    long sum7 = 0;\n    long min7 = 0;\n    long max7 = 0;\n    long mid7\
    \ = 0;\n    long sum8 = 0;\n    long min8 = 0;\n    long max8 = 0;\n    long mid8\
    \ = 0;\n    long sum9 = 0;\n    long min9 = 0;\n    long max9 = 0;\n    long mid9\
    \ = 0;\n    long sum10 = 0;\n    long min10 = 0;\n    long max10 = 0;\n    long\
    \ mid10 = 0;\n    long sum11 = 0;\n    long min11 = 0;\n    long max11 = 0;\n\
    \    long mid11 = 0;\n    long sum12 = 0;\n    long min12 = 0;\n    long max12\
    \ = 0;\n    long mid12 = 0;\n    long sum13 = 0;\n    long min13 = 0;\n    long\
    \ max13 = 0;\n    long mid13 = 0;\n    long sum14 = 0;\n    long min14 = 0;\n\
    \    long max14 = 0;\n    long mid14 = 0;\n    long sum15 = 0;\n    long min15\
    \ = 0;\n    long max15 = 0;\n    long mid15 = 0;\n    long sum16 = 0;\n    long\
    \ min16 = 0;\n    long max16 = 0;\n    long mid16 = 0;\n    long sum17 = 0;\n\
    \    long min17 = 0;\n    long max17 = 0;\n    long mid17 = 0;\n    long sum18\
    \ = 0;\n    long min18 = 0;\n    long max18 = 0;\n    long mid18 = 0;\n    long\
    \ sum19 = 0;\n    long min19 = 0;\n    long max19 = 0;\n    long mid19 = 0;\n\
    \    long sum20 = 0;\n    long min20 = 0;\n    long max20 = 0;\n    long mid20\
    \ = 0;\n    long sum21 = 0;\n    long min21 = 0;\n    long max21 = 0;\n    long\
    \ mid21 = 0;\n    long sum22", "    std::vector<long> result(guess.size());\n\
    \    for (size_t i = 0; i < guess.size(); i++) {\n        result[i] = abs(game[i]\
    \ - guess[i]);\n    }\n    return result;", "    // Your code here\n    std::vector<long>\
    \ result(guess.size());\n    long sum = 0;\n    long max = 0;\n    long min =\
    \ 0;\n    long diff = 0;\n    long count = 0;\n    long sum2 = 0;\n    long max2\
    \ = 0;\n    long min2 = 0;\n    long diff2 = 0;\n    long count2 = 0;\n    long\
    \ sum3 = 0;\n    long max3 = 0;\n    long min3 = 0;\n    long diff3 = 0;\n   \
    \ long count3 = 0;\n    long sum4 = 0;\n    long max4 = 0;\n    long min4 = 0;\n\
    \    long diff4 = 0;\n    long count4 = 0;\n    long sum5 = 0;\n    long max5\
    \ = 0;\n    long min5 = 0;\n    long diff5 = 0;\n    long count5 = 0;\n    long\
    \ sum6 = 0;\n    long max6 = 0;\n    long min6 = 0;\n    long diff6 = 0;\n   \
    \ long count6 = 0;\n    long sum7 = 0;\n    long max7 = 0;\n    long min7 = 0;\n\
    \    long diff7 = 0;\n    long count7 = 0;\n    long sum8 = 0;\n    long max8\
    \ = 0;\n    long min8 = 0;\n    long diff8 = 0;\n    long count8 = 0;\n    long\
    \ sum9 = 0;\n    long max9 = 0;\n    long min9 = 0;\n    long diff9 = 0;\n   \
    \ long count9 = 0;\n    long sum10 = 0;\n    long max10 = 0;\n    long min10 =\
    \ 0;\n    long diff10 = 0;\n    long count10 = 0;\n    long sum11 = 0;\n    long\
    \ max11 = 0;\n    long min11 = 0;\n    long diff11 = 0;\n    long count11 = 0;\n\
    \    long sum12 = 0;\n    long max12 = 0;\n    long min12 = 0;\n    long diff12\
    \ = 0;\n    long count12 = 0;\n    long sum13 = 0;\n    long max13 = 0;\n    long\
    \ min13 = 0;\n    long diff13 = 0;\n    long count13 = 0;\n    long sum14 = 0;\n\
    \    long max14 = 0;\n    long min14 = 0;\n    long diff14 = 0;\n    long count14\
    \ = 0;\n    long sum15 = 0;\n    long max15 = 0;\n    long min15 = 0;\n    long\
    \ diff15 = 0;\n    long count15 = 0;\n    long sum16 = 0;\n    long max16 = 0;\n\
    \    long min16 = 0;\n    long diff16 = 0;\n    long count16 = 0;\n    long sum17\
    \ = 0;\n    long max17 = 0;\n    long min17 = 0;\n    long diff17 = 0;\n    long\
    \ count17 = 0;\n    long sum18 = 0;\n    long max18 = 0;\n    ", "    std::vector<long>\
    \ result(guess.size());\n    long diff = 0;\n    for(size_t i = 0; i < guess.size();\
    \ i++) {\n        diff = abs(game[i] - guess[i]);\n        result[i] = diff;\n\
    \    }\n    return result;", "    std::vector<long> result(guess.size());\n  \
    \  for (size_t i = 0; i < guess.size(); ++i) {\n        result[i] = abs(game[i]\
    \ - guess[i]);\n    }\n    return result;", "    std::vector<long> result(guess.size());\n\
    \    long sum = 0;\n    for (size_t i = 0; i < guess.size(); i++) {\n        sum\
    \ += abs(game[i] - guess[i]);\n        result[i] = sum;\n    }\n    return result;",
  "    std::vector<long> result(guess.size());\n    long sum = 0;\n    for (size_t\
    \ i = 0; i < guess.size(); i++) {\n        sum += abs(game[i] - guess[i]);\n \
    \       result[i] = sum;\n    }\n    return result;", "    // Your code goes here\n\
    \    std::vector<long> result(guess.size());\n    long sum = 0;\n    for (size_t\
    \ i = 0; i < guess.size(); i++) {\n        sum += abs(game[i] - guess[i]);\n \
    \       result[i] = sum;\n    }\n    return result;", "    std::vector<long> result(guess.size());\n\
    \    long sum = 0;\n    for (size_t i = 0; i < guess.size(); i++) {\n        sum\
    \ += abs(game[i] - guess[i]);\n        result[i] = sum;\n    }\n    return result;",
  "    // Your code here\n    std::vector<long> result(guess.size());\n    long sum\
    \ = 0;\n    long diff = 0;\n    for (size_t i = 0; i < guess.size(); i++) {\n\
    \        sum += game[i];\n        diff = abs(guess[i] - sum);\n        result[i]\
    \ = diff;\n    }\n    return result;", "    // Your code goes here\n    std::vector<long>\
    \ result(guess.size());\n    long sum = 0;\n    long diff = 0;\n    long sum2\
    \ = 0;\n    long diff2 = 0;\n    for(int i = 0; i < guess.size(); i++) {\n   \
    \     sum += game[i];\n        sum2 += guess[i];\n        diff += abs(game[i]\
    \ - guess[i]);\n        diff2 += abs(game[i] - guess[i]);\n    }\n    for(int\
    \ i = 0; i < guess.size(); i++) {\n        result[i] = abs(guess[i] - sum);\n\
    \        result[i] = result[i] < abs(guess[i] - sum2) ? abs(guess[i] - sum2) :\
    \ result[i];\n        result[i] = result[i] < abs(guess[i] - diff) ? abs(guess[i]\
    \ - diff) : result[i];\n        result[i] = result[i] < abs(guess[i] - diff2)\
    \ ? abs(guess[i] - diff2) : result[i];\n    }\n    return result;", "    std::vector<long>\
    \ result(guess.size());\n    long diff = 0;\n    for(size_t i = 0; i < guess.size();\
    \ ++i) {\n        diff = abs(game[i] - guess[i]);\n        result[i] = diff;\n\
    \    }\n    return result;", "    std::vector<long> result(guess.size());\n  \
    \  long diff = 0;\n    for(size_t i = 0; i < guess.size(); ++i) {\n        diff\
    \ = std::abs(guess - game[i]);\n        result[i] = diff;\n    }\n    return result;",
  "    std::vector<long> result(guess.size());\n    for (size_t i = 0; i < guess.size();\
    \ ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
  "    // Your code here\n    std::vector<long> result(guess.size());\n    long sum\
    \ = 0;\n    long diff = 0;\n    for(int i = 0; i < guess.size(); i++) {\n    \
    \    sum += game[i];\n        diff = abs(game[i] - guess[i]);\n        result[i]\
    \ = sum - diff;\n    }\n    return result;", "    // Your code here\n    std::vector<long>\
    \ result(guess.size());\n    long sum = 0;\n    long diff = 0;\n    long i = 0;\n\
    \    long j = 0;\n    long k = 0;\n    long sum1 = 0;\n    long diff1 = 0;\n \
    \   long sum2 = 0;\n    long diff2 = 0;\n    long sum3 = 0;\n    long diff3 =\
    \ 0;\n    long sum4 = 0;\n    long diff4 = 0;\n    long sum5 = 0;\n    long diff5\
    \ = 0;\n    long sum6 = 0;\n    long diff6 = 0;\n    long sum7 = 0;\n    long\
    \ diff7 = 0;\n    long sum8 = 0;\n    long diff8 = 0;\n    long sum9 = 0;\n  \
    \  long diff9 = 0;\n    long sum10 = 0;\n    long diff10 = 0;\n    long sum11\
    \ = 0;\n    long diff11 = 0;\n    long sum12 = 0;\n    long diff12 = 0;\n    long\
    \ sum13 = 0;\n    long diff13 = 0;\n    long sum14 = 0;\n    long diff14 = 0;\n\
    \    long sum15 = 0;\n    long diff15 = 0;\n    long sum16 = 0;\n    long diff16\
    \ = 0;\n    long sum17 = 0;\n    long diff17 = 0;\n    long sum18 = 0;\n    long\
    \ diff18 = 0;\n    long sum19 = 0;\n    long diff19 = 0;\n    long sum20 = 0;\n\
    \    long diff20 = 0;\n    long sum21 = 0;\n    long diff21 = 0;\n    long sum22\
    \ = 0;\n    long diff22 = 0;\n    long sum23 = 0;\n    long diff23 = 0;\n    long\
    \ sum24 = 0;\n    long diff24 = 0;\n    long sum25 = 0;\n    long diff25 = 0;\n\
    \    long sum26 = 0;\n    long diff26 = 0;\n    long sum27 = 0;\n    long diff27\
    \ = 0;\n    long sum28 = 0;\n    long diff28 = 0;\n    long sum29 = 0;\n    long\
    \ diff29 = 0;\n    long sum30 = 0;\n    long diff30 = 0;\n    long sum31 = 0;\n\
    \    long diff31 = 0;\n    long sum32 = 0;\n    long diff32 = 0;\n    long sum33\
    \ = 0;\n    long diff33 = 0;\n    long sum34 = 0;\n    long diff34 = 0;\n    long\
    \ sum35 = 0;\n    long diff35 = 0;\n    long sum36 = 0;\n    long diff36 = 0;\n\
    \    long sum37 = 0;\n    long diff37 = 0;\n    long sum38 = 0;\n    long diff38\
    \ = 0;\n    long sum39 = 0;\n    long diff39 = 0;\n    long sum40 = 0;\n    long\
    \ diff40 = 0;\n    long sum", "    std::vector<long> result(guess.size());\n \
    \   long diff = 0;\n    for(size_t i = 0; i < guess.size(); i++) {\n        diff\
    \ = abs(game[i] - guess[i]);\n        result[i] = diff;\n    }\n    return result;",
  "    std::vector<long> result(guess.size());\n    long sum = 0;\n    for(size_t\
    \ i = 0; i < guess.size(); ++i) {\n        sum += abs(game[i] - guess[i]);\n \
    \       result[i] = sum;\n    }\n    return result;", "    std::vector<long> result(guess.size());\n\
    \    long sum = 0;\n    for (size_t i = 0; i < guess.size(); ++i) {\n        sum\
    \ += abs(game[i] - guess[i]);\n        result[i] = sum;\n    }\n    return result;",
  "    // Your code goes here\n    std::vector<long> result(guess.size());\n    long\
    \ sum = 0;\n    long diff = 0;\n    long sum2 = 0;\n    long diff2 = 0;\n    for(int\
    \ i = 0; i < guess.size(); i++) {\n        sum += game[i];\n        sum2 += guess[i];\n\
    \        diff += abs(game[i] - guess[i]);\n        diff2 += abs(game[i] - sum);\n\
    \    }\n    for(int i = 0; i < guess.size(); i++) {\n        result[i] = abs(guess[i]\
    \ - sum);\n    }\n    for(int i = 0; i < guess.size(); i++) {\n        result[i]\
    \ = abs(guess[i] - sum2);\n    }\n    for(int i = 0; i < guess.size(); i++) {\n\
    \        result[i] = abs(guess[i] - diff);\n    }\n    for(int i = 0; i < guess.size();\
    \ i++) {\n        result[i] = abs(guess[i] - diff2);\n    }\n    return result;",
  "    std::vector<long> result(guess.size());\n    long diff = 0;\n    for (size_t\
    \ i = 0; i < guess.size(); ++i) {\n        diff = std::abs(game[i] - guess[i]);\n\
    \        result[i] = diff;\n    }\n    return result;", "    // Your code goes\
    \ here\n    std::vector<long> result(guess.size());\n    long sum = 0;\n    long\
    \ min = 0;\n    long max = 0;\n    long diff = 0;\n    long sum2 = 0;\n    long\
    \ min2 = 0;\n    long max2 = 0;\n    long diff2 = 0;\n    long sum3 = 0;\n   \
    \ long min3 = 0;\n    long max3 = 0;\n    long diff3 = 0;\n    long sum4 = 0;\n\
    \    long min4 = 0;\n    long max4 = 0;\n    long diff4 = 0;\n    long sum5 =\
    \ 0;\n    long min5 = 0;\n    long max5 = 0;\n    long diff5 = 0;\n    long sum6\
    \ = 0;\n    long min6 = 0;\n    long max6 = 0;\n    long diff6 = 0;\n    long\
    \ sum7 = 0;\n    long min7 = 0;\n    long max7 = 0;\n    long diff7 = 0;\n   \
    \ long sum8 = 0;\n    long min8 = 0;\n    long max8 = 0;\n    long diff8 = 0;\n\
    \    long sum9 = 0;\n    long min9 = 0;\n    long max9 = 0;\n    long diff9 =\
    \ 0;\n    long sum10 = 0;\n    long min10 = 0;\n    long max10 = 0;\n    long\
    \ diff10 = 0;\n    long sum11 = 0;\n    long min11 = 0;\n    long max11 = 0;\n\
    \    long diff11 = 0;\n    long sum12 = 0;\n    long min12 = 0;\n    long max12\
    \ = 0;\n    long diff12 = 0;\n    long sum13 = 0;\n    long min13 = 0;\n    long\
    \ max13 = 0;\n    long diff13 = 0;\n    long sum14 = 0;\n    long min14 = 0;\n\
    \    long max14 = 0;\n    long diff14 = 0;\n    long sum15 = 0;\n    long min15\
    \ = 0;\n    long max15 = 0;\n    long diff15 = 0;\n    long sum16 = 0;\n    long\
    \ min16 = 0;\n    long max16 = 0;\n    long diff16 = 0;\n    long sum17 = 0;\n\
    \    long min17 = 0;\n    long max17 = 0;\n    long diff17 = 0;\n    long sum18\
    \ = 0;\n    long min18 = 0;\n    long max18 = 0;\n    long diff18 = 0;\n    long\
    \ sum19 = 0;\n    long min19 = 0;\n    long max19 = 0;\n    long diff19 = 0;\n\
    \    long sum20 = 0;\n    long min20 = 0;\n    long max20 = 0;\n    long diff20\
    \ = 0;\n    long sum21 = 0;\n    long min21 = 0;\n    long max21 = 0;\n    long\
    \ diff21 = 0;\n    long sum22 = 0;\n    long min22 = 0;\n", "    std::vector<long>\
    \ result(guess.size());\n    long diff = 0;\n    for (size_t i = 0; i < guess.size();\
    \ ++i) {\n        diff = std::abs(game[i] - guess[i]);\n        result[i] = diff;\n\
    \    }\n    return result;", "    // Your code goes here\n    std::vector<long>\
    \ result(guess.size());\n    long sum = 0;\n    long max = 0;\n    long min =\
    \ 0;\n    long diff = 0;\n    long sum2 = 0;\n    long max2 = 0;\n    long min2\
    \ = 0;\n    long diff2 = 0;\n    long sum3 = 0;\n    long max3 = 0;\n    long\
    \ min3 = 0;\n    long diff3 = 0;\n    long sum4 = 0;\n    long max4 = 0;\n   \
    \ long min4 = 0;\n    long diff4 = 0;\n    long sum5 = 0;\n    long max5 = 0;\n\
    \    long min5 = 0;\n    long diff5 = 0;\n    long sum6 = 0;\n    long max6 =\
    \ 0;\n    long min6 = 0;\n    long diff6 = 0;\n    long sum7 = 0;\n    long max7\
    \ = 0;\n    long min7 = 0;\n    long diff7 = 0;\n    long sum8 = 0;\n    long\
    \ max8 = 0;\n    long min8 = 0;\n    long diff8 = 0;\n    long sum9 = 0;\n   \
    \ long max9 = 0;\n    long min9 = 0;\n    long diff9 = 0;\n    long sum10 = 0;\n\
    \    long max10 = 0;\n    long min10 = 0;\n    long diff10 = 0;\n    long sum11\
    \ = 0;\n    long max11 = 0;\n    long min11 = 0;\n    long diff11 = 0;\n    long\
    \ sum12 = 0;\n    long max12 = 0;\n    long min12 = 0;\n    long diff12 = 0;\n\
    \    long sum13 = 0;\n    long max13 = 0;\n    long min13 = 0;\n    long diff13\
    \ = 0;\n    long sum14 = 0;\n    long max14 = 0;\n    long min14 = 0;\n    long\
    \ diff14 = 0;\n    long sum15 = 0;\n    long max15 = 0;\n    long min15 = 0;\n\
    \    long diff15 = 0;\n    long sum16 = 0;\n    long max16 = 0;\n    long min16\
    \ = 0;\n    long diff16 = 0;\n    long sum17 = 0;\n    long max17 = 0;\n    long\
    \ min17 = 0;\n    long diff17 = 0;\n    long sum18 = 0;\n    long max18 = 0;\n\
    \    long min18 = 0;\n    long diff18 = 0;\n    long sum19 = 0;\n    long max19\
    \ = 0;\n    long min19 = 0;\n    long diff19 = 0;\n    long sum20 = 0;\n    long\
    \ max20 = 0;\n    long min20 = 0;\n    long diff20 = 0;\n    long sum21 = 0;\n\
    \    long max21 = 0;\n    long min21 = 0;\n    long diff21 = 0;\n    long sum22\
    \ = 0;\n    long max22 = 0;\n", "    std::vector<long> result(guess.size());\n\
    \    long score;\n    long diff;\n    long sum = 0;\n    long count = 0;\n   \
    \ for (size_t i = 0; i < guess.size(); i++) {\n        score = game[i];\n    \
    \    diff = abs(guess - score);\n        sum += diff;\n        count++;\n    \
    \    result[i] = diff;\n    }\n    if (count == 0) {\n        return result;\n\
    \    }\n    long average = sum / count;\n    for (size_t i = 0; i < guess.size();\
    \ i++) {\n        result[i] = result[i] / average;\n    }\n    return result;",
  "    // Your code goes here\n    std::vector<long> result(guess.size());\n    long\
    \ sum = 0;\n    for(int i = 0; i < guess.size(); i++) {\n        sum += abs(game[i]\
    \ - guess[i]);\n        result[i] = sum;\n    }\n    return result;", "    std::vector<long>\
    \ result(guess.size());\n    long long diff = 0;\n    for (size_t i = 0; i < guess.size();\
    \ i++) {\n        diff = abs(game[i] - guess[i]);\n        result[i] = diff;\n\
    \    }\n    return result;", "    std::vector<long> result(guess.size());\n  \
    \  long score = 0;\n    long diff = 0;\n    for (size_t i = 0; i < guess.size();\
    \ i++) {\n        diff = abs(guess[i] - game[i]);\n        if (diff == 0) {\n\
    \            result[i] = 0;\n        } else {\n            result[i] = diff;\n\
    \        }\n    }\n    return result;", "    std::vector<long> result(guess.size());\n\
    \    long score = 0;\n    long diff = 0;\n    long sum = 0;\n    for (long i =\
    \ 0; i < guess.size(); i++) {\n        diff = abs(game[i] - guess[i]);\n     \
    \   sum += diff;\n        result[i] = sum;\n    }\n    return result;", "    std::vector<long>\
    \ result(guess.size());\n    for (size_t i = 0; i < guess.size(); ++i) {\n   \
    \     result[i] = abs(game[i] - guess[i]);\n    }\n    return result;", "    std::vector<long>\
    \ result(guess.size());\n    long sum = 0;\n    for(long i = 0; i < guess.size();\
    \ ++i) {\n        sum += abs(game[i] - guess[i]);\n        result[i] = sum;\n\
    \    }\n    return result;", "    std::vector<long> result(guess.size());\n  \
    \  long sum = 0;\n    for (size_t i = 0; i < guess.size(); i++) {\n        sum\
    \ += abs(game[i] - guess[i]);\n        result[i] = sum;\n    }\n    return result;",
  "    // Your code here\n    std::vector<long> result(guess.size());\n    long sum\
    \ = 0;\n    long diff = 0;\n    for(int i = 0; i < guess.size(); i++){\n     \
    \   sum += abs(game[i] - guess[i]);\n        diff = abs(game[i] - guess[i]);\n\
    \        if(game[i] == guess[i]){\n            result[i] = 0;\n        }else{\n\
    \            result[i] = diff;\n        }\n    }\n    return result;", "    //\
    \ Your code goes here\n    std::vector<long> result(guess.size());\n    long sum\
    \ = 0;\n    for(int i = 0; i < guess.size(); i++) {\n        sum += abs(game[i]\
    \ - guess[i]);\n        result[i] = sum;\n    }\n    return result;", "    std::vector<long>\
    \ result(guess.size());\n    long diff = 0;\n    for (size_t i = 0; i < guess.size();\
    \ i++) {\n        diff = abs(game[i] - guess[i]);\n        result[i] = diff;\n\
    \    }\n    return result;", "    std::vector<long> result(guess.size());\n  \
    \  long score;\n    for (size_t i = 0; i < guess.size(); i++) {\n        score\
    \ = game[i];\n        result[i] = abs(guess - score);\n    }\n    return result;",
  "    std::vector<long> result(guess.size());\n    long score = 0;\n    for (size_t\
    \ i = 0; i < guess.size(); i++) {\n        score += abs(game[i] - guess[i]);\n\
    \        result[i] = score;\n    }\n    return result;", "    std::vector<long>\
    \ result(guess.size());\n    long diff = 0;\n    for (size_t i = 0; i < guess.size();\
    \ i++) {\n        diff = abs(game[i] - guess[i]);\n        result[i] = diff;\n\
    \    }\n    return result;", "    // Your code here\n    std::vector<long> result(guess.size());\n\
    \    long diff = 0;\n    for(int i = 0; i < guess.size(); i++) {\n        diff\
    \ = abs(game[i] - guess[i]);\n        result[i] = diff;\n    }\n    return result;",
  "    // Your code here\n    std::vector<long> result(guess.size());\n    long diff\
    \ = 0;\n    for(size_t i = 0; i < guess.size(); i++) {\n        if(game[i] ==\
    \ guess[i]) {\n            result[i] = 0;\n        } else {\n            diff\
    \ = abs(game[i] - guess[i]);\n            result[i] = diff;\n        }\n    }\n\
    \    return result;", "    std::vector<long> result(guess.size());\n    for (size_t\
    \ i = 0; i < guess.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n\
    \    }\n    return result;", "    // your code goes here\n    std::vector<long>\
    \ result(guess.size());\n    long sum = 0;\n    for (long i = 0; i < guess.size();\
    \ i++) {\n        sum += abs(game[i] - guess[i]);\n        result[i] = sum;\n\
    \    }\n    return result;", "    std::vector<long> result(guess.size());\n  \
    \  long score = 0;\n    long guess = 0;\n    long diff = 0;\n    long i = 0;\n\
    \    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long\
    \ n = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n\
    \    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long\
    \ w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long A = 0;\n\
    \    long B = 0;\n    long C = 0;\n    long D = 0;\n    long E = 0;\n    long\
    \ F = 0;\n    long G = 0;\n    long H = 0;\n    long I = 0;\n    long J = 0;\n\
    \    long K = 0;\n    long L = 0;\n    long M = 0;\n    long N = 0;\n    long\
    \ O = 0;\n    long P = 0;\n    long Q = 0;\n    long R = 0;\n    long S = 0;\n\
    \    long T = 0;\n    long U = 0;\n    long V = 0;\n    long W = 0;\n    long\
    \ X = 0;\n    long Y = 0;\n    long Z = 0;\n    long a = 0;\n    long b = 0;\n\
    \    long c = 0;\n    long d = 0;\n    long e = 0;\n    long f = 0;\n    long\
    \ g = 0;\n    long h = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n\
    \    long l = 0;\n    long m = 0;\n    long n = 0;\n    long o = 0;\n    long\
    \ p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n\
    \    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long\
    \ y = 0;\n    long z = 0;\n    long A = 0;\n    long B = 0;\n    long C = 0;\n\
    \    long D = 0;\n    long E = 0;\n    long F = 0;\n    long G = 0;\n    long\
    \ H = 0;\n    long I = 0;\n    long J = 0;\n    long K = 0;\n    long L = 0;\n\
    \    long M = 0;\n    long N = 0;\n    long O = 0;\n    long P = 0;\n    long\
    \ Q = 0;\n    long R = 0;\n    long S = 0;\n    long T = 0;\n    long U = 0;\n\
    \    long V = 0;\n    long W = 0;\n    long X = 0;\n    long Y = 0;\n    long\
    \ Z = 0;\n    long a = 0;\n    long b = 0;\n    long c", "    std::vector<long>\
    \ result(guess.size());\n    for (size_t i = 0; i < guess.size(); i++) {\n   \
    \     result[i] = abs(game[i] - guess[i]);\n    }\n    return result;", "    //\
    \ Your code here\n    std::vector<long> result(guess.size());\n    long score\
    \ = 0;\n    long diff = 0;\n    long sum = 0;\n    for(int i = 0; i < guess.size();\
    \ i++) {\n        sum += game[i];\n        diff = abs(guess[i] - sum);\n     \
    \   result[i] = diff;\n    }\n    return result;", "    std::vector<long> result(guess.size());\n\
    \    long total = 0;\n    for (size_t i = 0; i < guess.size(); i++) {\n      \
    \  total += abs(game[i] - guess[i]);\n        result[i] = total;\n    }\n    return\
    \ result;", "    // your code here\n    std::vector<long> result(guess.size());\n\
    \    long sum = 0;\n    for (size_t i = 0; i < guess.size(); i++) {\n        sum\
    \ += abs(game[i] - guess[i]);\n        result[i] = sum;\n    }\n    return result;",
  "    std::vector<long> result(guess.size());\n    long score;\n    long diff;\n\
    \    long diff2;\n    long diff3;\n    long diff4;\n    long diff5;\n    long\
    \ diff6;\n    long diff7;\n    long diff8;\n    long diff9;\n    long diff10;\n\
    \    long diff11;\n    long diff12;\n    long diff13;\n    long diff14;\n    long\
    \ diff15;\n    long diff16;\n    long diff17;\n    long diff18;\n    long diff19;\n\
    \    long diff20;\n    long diff21;\n    long diff22;\n    long diff23;\n    long\
    \ diff24;\n    long diff25;\n    long diff26;\n    long diff27;\n    long diff28;\n\
    \    long diff29;\n    long diff30;\n    long diff31;\n    long diff32;\n    long\
    \ diff33;\n    long diff34;\n    long diff35;\n    long diff36;\n    long diff37;\n\
    \    long diff38;\n    long diff39;\n    long diff40;\n    long diff41;\n    long\
    \ diff42;\n    long diff43;\n    long diff44;\n    long diff45;\n    long diff46;\n\
    \    long diff47;\n    long diff48;\n    long diff49;\n    long diff50;\n    long\
    \ diff51;\n    long diff52;\n    long diff53;\n    long diff54;\n    long diff55;\n\
    \    long diff56;\n    long diff57;\n    long diff58;\n    long diff59;\n    long\
    \ diff60;\n    long diff61;\n    long diff62;\n    long diff63;\n    long diff64;\n\
    \    long diff65;\n    long diff66;\n    long diff67;\n    long diff68;\n    long\
    \ diff69;\n    long diff70;\n    long diff71;\n    long diff72;\n    long diff73;\n\
    \    long diff74;\n    long diff75;\n    long diff76;\n    long diff77;\n    long\
    \ diff78;\n    long diff79;\n    long diff80;\n    long diff81;\n    long diff82;\n\
    \    long diff83;\n    long diff84;\n    long diff85;\n    long diff86;\n    ",
  "    std::vector<long> result(guess.size());\n    long diff = 0;\n    for (size_t\
    \ i = 0; i < guess.size(); ++i) {\n        diff = std::abs(game[i] - guess[i]);\n\
    \        result[i] = diff;\n    }\n    return result;", "    std::vector<long>\
    \ result(guess.size());\n    long score = 0;\n    long diff = 0;\n    for(long\
    \ i = 0; i < guess.size(); i++) {\n        diff = abs(game[i] - guess[i]);\n \
    \       result[i] = diff;\n        score += diff;\n    }\n    if(score == 0)\n\
    \        return result;\n    for(long i = 0; i < guess.size(); i++)\n        result[i]\
    \ = abs(game[i] - guess[i]);\n    return result;", "    // Your code here\n  \
    \  std::vector<long> result(guess.size());\n    long sum = 0;\n    for (size_t\
    \ i = 0; i < guess.size(); i++) {\n        sum += abs(game[i] - guess[i]);\n \
    \       result[i] = sum;\n    }\n    return result;", "    std::vector<long> result(guess.size());\n\
    \    long diff = 0;\n    for (size_t i = 0; i < guess.size(); i++) {\n       \
    \ diff = abs(game[i] - guess[i]);\n        result[i] = diff;\n    }\n    return\
    \ result;", "    std::vector<long> result(guess.size());\n    long score = 0;\n\
    \    long diff = 0;\n    for (size_t i = 0; i < guess.size(); i++) {\n       \
    \ if (game[i] == guess[i]) {\n            result[i] = 0;\n        } else {\n \
    \           diff = abs(game[i] - guess[i]);\n            result[i] = diff;\n \
    \       }\n    }\n    return result;", "    // Write your code here\n    std::vector<long>\
    \ result(guess.size());\n    long score = 0;\n    long diff = 0;\n    for(int\
    \ i = 0; i < guess.size(); i++) {\n        if(game[i] == guess[i]) {\n       \
    \     result[i] = 0;\n            score = 0;\n        } else {\n            diff\
    \ = abs(game[i] - guess[i]);\n            result[i] = diff;\n            score\
    \ = abs(game[i] - guess[i]);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result(guess.size());\n    long score = 0;\n    for (size_t i = 0; i < guess.size();\
    \ i++) {\n        if (game[i] == guess[i]) {\n            result[i] = 0;\n   \
    \     } else {\n            result[i] = abs(game[i] - guess[i]);\n        }\n\
    \    }\n    return result;", "    std::vector<long> result(guess.size());\n  \
    \  long score;\n    long diff;\n    for(int i = 0; i < guess.size(); i++) {\n\
    \        score = game[i];\n        diff = abs(guess - score);\n        result[i]\
    \ = diff;\n    }\n    return result;", "    std::vector<long> result(guess.size());\n\
    \    for (size_t i = 0; i < guess.size(); ++i) {\n        result[i] = abs(game[i]\
    \ - guess[i]);\n    }\n    return result;", "    std::vector<long> result(guess.size());\n\
    \    long score;\n    long diff;\n    for (int i = 0; i < guess.size(); i++) {\n\
    \        score = game[i];\n        diff = abs(guess - score);\n        result[i]\
    \ = diff;\n    }\n    return result;", "    // Your code here\n    std::vector<long>\
    \ result(guess.size());\n    long sum = 0;\n    long diff = 0;\n    for (int i\
    \ = 0; i < guess.size(); i++) {\n        sum += game[i];\n        diff = abs(game[i]\
    \ - guess[i]);\n        result[i] = sum - diff;\n    }\n    return result;", " \
    \   // Your code goes here\n    std::vector<long> result(guess.size());\n    long\
    \ sum = 0;\n    long diff = 0;\n    for (int i = 0; i < guess.size(); i++) {\n\
    \        sum += game[i];\n        diff = abs(game[i] - guess[i]);\n        result[i]\
    \ = sum - diff;\n    }\n    return result;", "    // Your code here\n    std::vector<long>\
    \ result(guess.size());\n    long score;\n    long diff;\n    for(int i = 0; i\
    \ < guess.size(); i++){\n        score = game[i];\n        diff = abs(guess -\
    \ score);\n        result[i] = diff;\n    }\n    return result;", "    std::vector<long>\
    \ result(guess.size());\n    long diff = 0;\n    for (size_t i = 0; i < guess.size();\
    \ i++) {\n        diff = abs(game[i] - guess[i]);\n        result[i] = diff;\n\
    \    }\n    return result;", "    std::vector<long> result(guess.size());\n  \
    \  long sum = 0;\n    for (size_t i = 0; i < guess.size(); ++i) {\n        sum\
    \ += abs(game[i] - guess[i]);\n        result[i] = sum;\n    }\n    return result;",
  "    std::vector<long> result(guess.size());\n    long max_diff = std::numeric_limits<long>::max();\n\
    \    long min_diff = std::numeric_limits<long>::min();\n    for (size_t i = 0;\
    \ i < guess.size(); i++) {\n        max_diff = std::max(max_diff, game[i] - guess[i]);\n\
    \        min_diff = std::min(min_diff, guess[i] - game[i]);\n        result[i]\
    \ = std::abs(guess[i] - game[i]);\n    }\n    if (max_diff == min_diff) {\n  \
    \      return result;\n    }\n    else {\n        return std::vector<long>(guess.size(),\
    \ max_diff);\n    }", "    // your code here\n    std::vector<long> result(guess.size());\n\
    \    long sum = 0;\n    long min = std::numeric_limits<long>::max();\n    long\
    \ max = 0;\n    for (size_t i = 0; i < guess.size(); i++) {\n        sum += game[i];\n\
    \        if (game[i] < min) min = game[i];\n        if (game[i] > max) max = game[i];\n\
    \    }\n    for (size_t i = 0; i < guess.size(); i++) {\n        result[i] = std::abs(guess[i]\
    \ - sum);\n    }\n    return result;", "    // Your code here\n    std::vector<long>\
    \ result(guess.size());\n    long sum = 0;\n    long diff = 0;\n    long minDiff\
    \ = std::numeric_limits<long>::max();\n    long minDiffIndex = 0;\n    long maxDiff\
    \ = 0;\n    long maxDiffIndex = 0;\n    long minDiffScore = std::numeric_limits<long>::max();\n\
    \    long minDiffScoreIndex = 0;\n    long maxDiffScore = std::numeric_limits<long>::max();\n\
    \    long maxDiffScoreIndex = 0;\n    long minDiffGuess = std::numeric_limits<long>::max();\n\
    \    long minDiffGuessIndex = 0;\n    long maxDiffGuess = std::numeric_limits<long>::max();\n\
    \    long maxDiffGuessIndex = 0;\n    long minDiffGame = std::numeric_limits<long>::max();\n\
    \    long minDiffGameIndex = 0;\n    long maxDiffGame = std::numeric_limits<long>::max();\n\
    \    long maxDiffGameIndex = 0;\n    long minDiffGuessScore = std::numeric_limits<long>::max();\n\
    \    long minDiffGuessScoreIndex = 0;\n    long maxDiffGuessScore = std::numeric_limits<long>::max();\n\
    \    long maxDiffGuessScoreIndex = 0;\n    long minDiffGameScore = std::numeric_limits<long>::max();\n\
    \    long minDiffGameScoreIndex = 0;\n    long maxDiffGameScore = std::numeric_limits<long>::max();\n\
    \    long maxDiffGameScoreIndex = 0;\n    long minDiffGameGuess = std::numeric_limits<long>::max();\n\
    \    long minDiffGameGuessIndex = 0;\n    long maxDiffGameGuess = std::numeric_limits<long>::max();\n\
    \    long maxDiffGameGuessIndex = 0;\n    long minDiffGameGame = std::numeric_limits<long>::max();\n\
    \    long minDiffGameGameIndex = 0;\n    long maxDiffGameGame = std::numeric_limits<long>::max();\n\
    \    long maxDiffGameGameIndex = 0;\n    long minDiffGuessGuess = std::numeric_limits<long>::max();\n\
    \    long minDiffGuessGuessIndex = 0;\n    long maxDiffGuessGuess = std::numeric_limits<long>::max();\n\
    \    long maxDiffGuessGuessIndex = 0;\n    long minDiffGameGuess = std::numeric_limits<long>::max();\n\
    \    long minDiffGameGuessIndex = 0;\n    long maxDiffGameGuess = std::numeric_limits<long>::max();\n\
    \    ", "    std::vector<long> result(guess.size());\n    long total = 0;\n  \
    \  for (size_t i = 0; i < guess.size(); i++) {\n        total += abs(game[i] -\
    \ guess[i]);\n        result[i] = total;\n    }\n    return result;", "    //\
    \ Your code goes here\n    std::vector<long> result(guess.size());\n    long sum\
    \ = 0;\n    for (size_t i = 0; i < guess.size(); i++) {\n        sum += abs(game[i]\
    \ - guess[i]);\n        result[i] = sum;\n    }\n    return result;", "    std::vector<long>\
    \ result(guess.size());\n    for (long i = 0; i < guess.size(); i++) {\n     \
    \   result[i] = abs(game[i] - guess[i]);\n    }\n    return result;", "    std::vector<long>\
    \ result(guess.size());\n    long diff = 0;\n    for (size_t i = 0; i < guess.size();\
    \ ++i) {\n        diff = std::abs(game[i] - guess[i]);\n        result[i] = diff;\n\
    \    }\n    return result;", "    std::vector<long> result(guess.size());\n  \
    \  for (size_t i = 0; i < guess.size(); i++) {\n        result[i] = abs(game[i]\
    \ - guess[i]);\n    }\n    return result;", "    // Your code here\n    std::vector<long>\
    \ result(guess.size());\n    long sum = 0;\n    for (size_t i = 0; i < guess.size();\
    \ i++) {\n        sum += abs(game[i] - guess[i]);\n        result[i] = sum;\n\
    \    }\n    return result;", "    std::vector<long> result(guess.size());\n  \
    \  long sum = 0;\n    for (size_t i = 0; i < guess.size(); ++i) {\n        sum\
    \ += abs(game[i] - guess[i]);\n        result[i] = sum;\n    }\n    return result;",
  "    std::vector<long> result(guess.size());\n    long long score = 0;\n    for\
    \ (size_t i = 0; i < guess.size(); i++) {\n        score += game[i] - guess[i];\n\
    \        result[i] = abs(score);\n    }\n    return result;", "    // Your code\
    \ goes here\n    std::vector<long> result(guess.size());\n    long sum = 0;\n\
    \    long diff = 0;\n    for (int i = 0; i < guess.size(); i++) {\n        sum\
    \ += game[i];\n        diff = abs(game[i] - guess[i]);\n        result[i] = diff;\n\
    \    }\n    if (sum == 0)\n        return result;\n    for (int i = 0; i < guess.size();\
    \ i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
  "    std::vector<long> result(guess.size());\n    long diff = 0;\n    long sum =\
    \ 0;\n    long sum2 = 0;\n    long sum3 = 0;\n    long sum4 = 0;\n    long sum5\
    \ = 0;\n    long sum6 = 0;\n    long sum7 = 0;\n    long sum8 = 0;\n    long sum9\
    \ = 0;\n    long sum10 = 0;\n    long sum11 = 0;\n    long sum12 = 0;\n    long\
    \ sum13 = 0;\n    long sum14 = 0;\n    long sum15 = 0;\n    long sum16 = 0;\n\
    \    long sum17 = 0;\n    long sum18 = 0;\n    long sum19 = 0;\n    long sum20\
    \ = 0;\n    long sum21 = 0;\n    long sum22 = 0;\n    long sum23 = 0;\n    long\
    \ sum24 = 0;\n    long sum25 = 0;\n    long sum26 = 0;\n    long sum27 = 0;\n\
    \    long sum28 = 0;\n    long sum29 = 0;\n    long sum30 = 0;\n    long sum31\
    \ = 0;\n    long sum32 = 0;\n    long sum33 = 0;\n    long sum34 = 0;\n    long\
    \ sum35 = 0;\n    long sum36 = 0;\n    long sum37 = 0;\n    long sum38 = 0;\n\
    \    long sum39 = 0;\n    long sum40 = 0;\n    long sum41 = 0;\n    long sum42\
    \ = 0;\n    long sum43 = 0;\n    long sum44 = 0;\n    long sum45 = 0;\n    long\
    \ sum46 = 0;\n    long sum47 = 0;\n    long sum48 = 0;\n    long sum49 = 0;\n\
    \    long sum50 = 0;\n    long sum51 = 0;\n    long sum52 = 0;\n    long sum53\
    \ = 0;\n    long sum54 = 0;\n    long sum55 = 0;\n    long sum56 = 0;\n    long\
    \ sum57 = 0;\n    long sum58 = 0;\n    long sum59 = 0;\n    long sum60 = 0;\n\
    \    long sum61 = 0;\n    long sum62 = 0;\n    long sum63 = 0;\n    long sum64\
    \ = 0;\n    long sum65 = 0;\n    long sum66 = 0;\n    long sum67 = 0;\n    long\
    \ sum68 = 0;\n    long sum69 = 0;\n    long sum70 = 0;\n    long sum71 = 0;\n\
    \    long sum72 = 0;\n    long sum73 = 0;\n    long sum74 = 0;\n    long sum75\
    \ = 0;\n    long sum76 = 0;\n    long sum77 = 0;\n    long sum78 = 0;\n    long\
    \ sum79 = 0;\n    long sum80 = 0;\n    long sum81 = 0;\n    long sum82 = 0;\n\
    \    long sum83 = 0;\n    long sum84", "    // Your code here\n    std::vector<long>\
    \ result(guess.size());\n    long score = 0;\n    for(int i = 0; i < guess.size();\
    \ i++) {\n        if(game[i] == guess[i]) {\n            result[i] = 0;\n    \
    \    } else {\n            result[i] = abs(game[i] - guess[i]);\n        }\n \
    \   }\n    return result;", "    // Write your code here\n    std::vector<long>\
    \ result(guess.size());\n    long sum = 0;\n    long diff = 0;\n    for(int i\
    \ = 0; i < guess.size(); i++) {\n        sum += abs(game[i] - guess[i]);\n   \
    \     diff = abs(game[i] - guess[i]);\n        result[i] = sum;\n    }\n    return\
    \ result;", "    std::vector<long> result(guess.size());\n    for (size_t i =\
    \ 0; i < guess.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n\
    \    }\n    return result;", "    // Your code here\n    std::vector<long> result(guess.size());\n\
    \    long sum = 0;\n    long diff = 0;\n    for(size_t i = 0; i < guess.size();\
    \ i++) {\n        sum += game[i];\n        diff = abs(game[i] - guess[i]);\n \
    \       result[i] = sum - diff;\n    }\n    return result;", "    std::vector<long>\
    \ result(guess.size());\n    long score = 0;\n    for (size_t i = 0; i < guess.size();\
    \ i++) {\n        score += game[i] - guess[i];\n        result[i] = abs(score\
    \ - game[i]);\n    }\n    return result;", "    std::vector<long> result(guess.size());\n\
    \    long diff = 0;\n    for (size_t i = 0; i < guess.size(); ++i) {\n       \
    \ diff = abs(game[i] - guess[i]);\n        result[i] = diff;\n    }\n    return\
    \ result;", "    std::vector<long> result(guess.size());\n    long max_diff =\
    \ 0;\n    long min_diff = std::numeric_limits<long>::max();\n    for (size_t i\
    \ = 0; i < guess.size(); ++i) {\n        long diff = abs(game[i] - guess[i]);\n\
    \        if (diff > max_diff) {\n            max_diff = diff;\n        }\n   \
    \     if (diff < min_diff) {\n            min_diff = diff;\n        }\n      \
    \  result[i] = diff;\n    }\n    if (max_diff == 0) {\n        return result;\n\
    \    }\n    for (size_t i = 0; i < guess.size(); ++i) {\n        result[i] = result[i]\
    \ - max_diff;\n    }\n    return result;", "    // Your code here\n    std::vector<long>\
    \ result(guess.size());\n    long sum = 0;\n    for (size_t i = 0; i < guess.size();\
    \ i++) {\n        sum += abs(game[i] - guess[i]);\n        result[i] = sum;\n\
    \    }\n    return result;", "    std::vector<long> result(guess.size());\n  \
    \  long sum = 0;\n    long min = std::numeric_limits<long>::max();\n    long max\
    \ = std::numeric_limits<long>::min();\n    for (size_t i = 0; i < guess.size();\
    \ i++) {\n        sum += game[i];\n        if (game[i] > max) {\n            max\
    \ = game[i];\n        }\n        if (game[i] < min) {\n            min = game[i];\n\
    \        }\n    }\n    for (size_t i = 0; i < guess.size(); i++) {\n        result[i]\
    \ = std::abs(guess[i] - sum);\n    }\n    return result;", "    // Your code here\n\
    \    std::vector<long> result(guess.size());\n    long sum = 0;\n    for(long\
    \ i = 0; i < guess.size(); i++) {\n        sum += abs(game[i] - guess[i]);\n \
    \       result[i] = sum;\n    }\n    return result;", "    std::vector<long> result(guess.size());\n\
    \    for (size_t i = 0; i < guess.size(); ++i) {\n        result[i] = abs(game[i]\
    \ - guess[i]);\n    }\n    return result;", "    std::vector<long> result(guess.size());\n\
    \    long diff = 0;\n    for(size_t i = 0; i < guess.size(); i++) {\n        diff\
    \ = abs(game[i] - guess[i]);\n        result[i] = diff;\n    }\n    return result;",
  "    std::vector<long> result(guess.size());\n    long score = 0;\n    long diff\
    \ = 0;\n    for(size_t i = 0; i < guess.size(); ++i) {\n        diff = abs(game[i]\
    \ - guess[i]);\n        if(diff == 0) {\n            result[i] = 0;\n        }\
    \ else {\n            result[i] = diff;\n        }\n        score += game[i];\n\
    \    }\n    return result;", "    std::vector<long> result(guess.size());\n  \
    \  long diff = 0;\n    long score = 0;\n    for(int i = 0; i < guess.size(); i++)\
    \ {\n        diff = abs(game[i] - guess[i]);\n        score = game[i];\n     \
    \   if(diff == 0) {\n            result[i] = 0;\n        } else {\n          \
    \  result[i] = diff;\n        }\n    }\n    return result;", "    // Write your\
    \ code here\n    std::vector<long> result(guess.size());\n    long sum = 0;\n\
    \    for(int i = 0; i < guess.size(); i++) {\n        sum += abs(game[i] - guess[i]);\n\
    \        result[i] = sum;\n    }\n    return result;", "    // Your code here\n\
    \    std::vector<long> result(guess.size());\n    long sum = 0;\n    for (size_t\
    \ i = 0; i < guess.size(); i++) {\n        sum += abs(game[i] - guess[i]);\n \
    \       result[i] = sum;\n    }\n    return result;", "    std::vector<long> result(guess.size());\n\
    \    for (size_t i = 0; i < guess.size(); ++i) {\n        result[i] = abs(game[i]\
    \ - guess[i]);\n    }\n    return result;", "    // Your code here\n    std::vector<long>\
    \ result(guess.size());\n    long sum = 0;\n    for(size_t i = 0; i < guess.size();\
    \ i++) {\n        sum += abs(game[i] - guess[i]);\n        result[i] = sum;\n\
    \    }\n    return result;", "    std::vector<long> result(guess.size());\n  \
    \  long diff = 0;\n    for (size_t i = 0; i < guess.size(); ++i) {\n        diff\
    \ = abs(game[i] - guess[i]);\n        result[i] = diff;\n    }\n    return result;",
  "    std::vector<long> result(guess.size());\n    long score;\n    long diff;\n\
    \    long diff2;\n    long diff3;\n    long diff4;\n    long diff5;\n    long\
    \ diff6;\n    long diff7;\n    long diff8;\n    long diff9;\n    long diff10;\n\
    \    long diff11;\n    long diff12;\n    long diff13;\n    long diff14;\n    long\
    \ diff15;\n    long diff16;\n    long diff17;\n    long diff18;\n    long diff19;\n\
    \    long diff20;\n    long diff21;\n    long diff22;\n    long diff23;\n    long\
    \ diff24;\n    long diff25;\n    long diff26;\n    long diff27;\n    long diff28;\n\
    \    long diff29;\n    long diff30;\n    long diff31;\n    long diff32;\n    long\
    \ diff33;\n    long diff34;\n    long diff35;\n    long diff36;\n    long diff37;\n\
    \    long diff38;\n    long diff39;\n    long diff40;\n    long diff41;\n    long\
    \ diff42;\n    long diff43;\n    long diff44;\n    long diff45;\n    long diff46;\n\
    \    long diff47;\n    long diff48;\n    long diff49;\n    long diff50;\n    long\
    \ diff51;\n    long diff52;\n    long diff53;\n    long diff54;\n    long diff55;\n\
    \    long diff56;\n    long diff57;\n    long diff58;\n    long diff59;\n    long\
    \ diff60;\n    long diff61;\n    long diff62;\n    long diff63;\n    long diff64;\n\
    \    long diff65;\n    long diff66;\n    long diff67;\n    long diff68;\n    long\
    \ diff69;\n    long diff70;\n    long diff71;\n    long diff72;\n    long diff73;\n\
    \    long diff74;\n    long diff75;\n    long diff76;\n    long diff77;\n    long\
    \ diff78;\n    long diff79;\n    long diff80;\n    long diff81;\n    long diff82;\n\
    \    long diff83;\n    long diff84;\n    long diff85;\n    long diff86;\n    ",
  "    std::vector<long> result(guess.size());\n    long total = 0;\n    for (size_t\
    \ i = 0; i < guess.size(); i++) {\n        total += abs(game[i] - guess[i]);\n\
    \        result[i] = total;\n    }\n    return result;", "    std::vector<long>\
    \ result(guess.size());\n    long total = 0;\n    for (size_t i = 0; i < guess.size();\
    \ i++) {\n        total += abs(game[i] - guess[i]);\n        result[i] = total;\n\
    \    }\n    return result;", "    // Your code here\n    std::vector<long> result(guess.size());\n\
    \    long sum = 0;\n    long diff = 0;\n    long min = 0;\n    long max = 0;\n\
    \    long mid = 0;\n    long mid2 = 0;\n    long mid3 = 0;\n    long mid4 = 0;\n\
    \    long mid5 = 0;\n    long mid6 = 0;\n    long mid7 = 0;\n    long mid8 = 0;\n\
    \    long mid9 = 0;\n    long mid10 = 0;\n    long mid11 = 0;\n    long mid12\
    \ = 0;\n    long mid13 = 0;\n    long mid14 = 0;\n    long mid15 = 0;\n    long\
    \ mid16 = 0;\n    long mid17 = 0;\n    long mid18 = 0;\n    long mid19 = 0;\n\
    \    long mid20 = 0;\n    long mid21 = 0;\n    long mid22 = 0;\n    long mid23\
    \ = 0;\n    long mid24 = 0;\n    long mid25 = 0;\n    long mid26 = 0;\n    long\
    \ mid27 = 0;\n    long mid28 = 0;\n    long mid29 = 0;\n    long mid30 = 0;\n\
    \    long mid31 = 0;\n    long mid32 = 0;\n    long mid33 = 0;\n    long mid34\
    \ = 0;\n    long mid35 = 0;\n    long mid36 = 0;\n    long mid37 = 0;\n    long\
    \ mid38 = 0;\n    long mid39 = 0;\n    long mid40 = 0;\n    long mid41 = 0;\n\
    \    long mid42 = 0;\n    long mid43 = 0;\n    long mid44 = 0;\n    long mid45\
    \ = 0;\n    long mid46 = 0;\n    long mid47 = 0;\n    long mid48 = 0;\n    long\
    \ mid49 = 0;\n    long mid50 = 0;\n    long mid51 = 0;\n    long mid52 = 0;\n\
    \    long mid53 = 0;\n    long mid54 = 0;\n    long mid55 = 0;\n    long mid56\
    \ = 0;\n    long mid57 = 0;\n    long mid58 = 0;\n    long mid59 = 0;\n    long\
    \ mid60 = 0;\n    long mid61 = 0;\n    long mid62 = 0;\n    long mid63 = 0;\n\
    \    long mid64 = 0;\n    long mid65 = 0;\n    long mid66 = 0;\n    long mid67\
    \ = 0;\n    long mid68 = 0;\n    long mid69 = 0;\n    long mid70 = 0;\n    long\
    \ mid71 = 0;\n    long mid72 = 0;\n    long mid73 = 0;\n    long mid74 = 0;\n\
    \    long mid75 = 0;\n    long mid76 = 0;\n    long mid77 = 0;\n    long mid78\
    \ = 0;\n    long mid79 = 0;\n    long mid80 = 0;\n    long ", "    std::vector<long>\
    \ result(guess.size());\n    long diff = 0;\n    for(long i = 0; i < guess.size();\
    \ i++) {\n        if(game[i] == guess[i]) {\n            result[i] = 0;\n    \
    \    } else {\n            result[i] = abs(game[i] - guess[i]);\n        }\n \
    \   }\n    return result;", "    std::vector<long> result(guess.size());\n   \
    \ long score = 0;\n    for (size_t i = 0; i < guess.size(); ++i) {\n        score\
    \ += game[i] - guess[i];\n        result[i] = abs(score - game[i]);\n    }\n \
    \   return result;", "    std::vector<long> result(guess.size());\n    long sum\
    \ = 0;\n    long diff = 0;\n    for (size_t i = 0; i < guess.size(); i++) {\n\
    \        sum += game[i];\n        diff = game[i] - guess[i];\n        if (diff\
    \ < 0) {\n            diff *= -1;\n        }\n        result[i] = sum - diff;\n\
    \    }\n    return result;", "    // your code here\n    std::vector<long> result(guess.size());\n\
    \    long sum = 0;\n    long diff = 0;\n    long minDiff = std::numeric_limits<long>::max();\n\
    \    long minDiffIndex = 0;\n    long maxDiff = std::numeric_limits<long>::min();\n\
    \    long maxDiffIndex = 0;\n    long minScore = std::numeric_limits<long>::max();\n\
    \    long maxScore = std::numeric_limits<long>::min();\n    long minScoreIndex\
    \ = 0;\n    long maxScoreIndex = 0;\n    long minGuess = std::numeric_limits<long>::max();\n\
    \    long maxGuess = std::numeric_limits<long>::min();\n    long minGuessIndex\
    \ = 0;\n    long maxGuessIndex = 0;\n    long minGame = std::numeric_limits<long>::max();\n\
    \    long maxGame = std::numeric_limits<long>::min();\n    long minGameIndex =\
    \ 0;\n    long maxGameIndex = 0;\n    long minGameScore = std::numeric_limits<long>::max();\n\
    \    long maxGameScore = std::numeric_limits<long>::min();\n    long minGameScoreIndex\
    \ = 0;\n    long maxGameScoreIndex = 0;\n    long minGuessScore = std::numeric_limits<long>::max();\n\
    \    long maxGuessScore = std::numeric_limits<long>::min();\n    long minGuessScoreIndex\
    \ = 0;\n    long maxGuessScoreIndex = 0;\n    long minGuess = std::numeric_limits<long>::max();\n\
    \    long maxGuess = std::numeric_limits<long>::min();\n    long minGuessIndex\
    \ = 0;\n    long maxGuessIndex = 0;\n    long minGame = std::numeric_limits<long>::max();\n\
    \    long maxGame = std::numeric_limits<long>::min();\n    long minGameIndex =\
    \ 0;\n    long maxGameIndex = 0;\n    long minGameScore = std::numeric_limits<long>::max();\n\
    \    long maxGameScore = std::numeric_limits<long>::min();\n    long minGameScoreIndex\
    \ = 0;\n    long maxGameScoreIndex = 0;\n    long minGuessScore = std::numeric_limits<long>::max();\n\
    \    long maxGuessScore = std::numeric_limits<long>::min();\n    long minGuessScoreIndex\
    \ = 0;\n    long maxGuessScoreIndex = 0;\n    long minGuess = std::numeric_limits<long>::max();\n\
    \    long maxGuess = std::numeric_limits<long>::min();\n    long minGuessIndex",
  "    // Your code here\n    std::vector<long> result(guess.size());\n    long sum\
    \ = 0;\n    for(long i = 0; i < guess.size(); i++) {\n        sum += abs(game[i]\
    \ - guess[i]);\n        result[i] = sum;\n    }\n    return result;", "    std::vector<long>\
    \ result(guess.size());\n    long score;\n    long diff;\n    for(int i = 0; i\
    \ < guess.size(); i++) {\n        score = game[i];\n        diff = abs(guess -\
    \ score);\n        result[i] = diff;\n    }\n    return result;", "    std::vector<long>\
    \ result(guess.size());\n    long score = 0;\n    long diff = 0;\n    long maxScore\
    \ = std::max(game.front(), guess.front());\n    long minScore = std::min(game.back(),\
    \ guess.back());\n    long maxDiff = maxScore - minScore;\n    long minDiff =\
    \ maxScore - maxDiff;\n    long maxGuess = std::max(game.back(), guess.back());\n\
    \    long minGuess = std::min(game.front(), guess.front());\n    long maxDiffGuess\
    \ = maxGuess - minGuess;\n    long minDiffGuess = maxGuess - maxDiffGuess;\n \
    \   long maxScoreGuess = std::max(game.back(), guess.back());\n    long minScoreGuess\
    \ = std::min(game.front(), guess.front());\n    long maxDiffGuess = maxScoreGuess\
    \ - minScoreGuess;\n    long minDiffGuess = maxScoreGuess - maxDiffGuess;\n  \
    \  long maxGuesses = std::max(game.back(), guess.back());\n    long minGuesses\
    \ = std::min(game.front(), guess.front());\n    long maxDiffGuesses = maxGuesses\
    \ - minGuesses;\n    long minDiffGuesses = maxGuesses - maxDiffGuesses;\n    long\
    \ maxGuessesGuess = std::max(game.back(), guess.back());\n    long minGuessesGuess\
    \ = std::min(game.front(), guess.front());\n    long maxDiffGuessesGuess = maxGuessesGuess\
    \ - minGuessesGuess;\n    long minDiffGuessesGuess = maxGuessesGuess - maxDiffGuessesGuess;\n\
    \    long maxGuessesGuesses = std::max(game.back(), guess.back());\n    long minGuessesGuesses\
    \ = std::min(game.front(), guess.front());\n    long maxDiffGuessesGuesses = maxGuessesGuesses\
    \ - minGuessesGuesses;\n    long minDiffGuessesGuesses = maxGuessesGuesses - maxDiffGuessesGuesses;\n\
    \    long maxGuessesGuesses = std::max(game.back(), guess.back());\n    long minGuessesGuesses\
    \ = std::min(game.front(), guess.front());\n    long maxDiff", "    // Your code\
    \ here\n    std::vector<long> result(guess.size());\n    long score = 0;\n   \
    \ long guess = 0;\n    for (size_t i = 0; i < guess.size(); i++) {\n        guess\
    \ = guess[i];\n        score = game[i];\n        if (guess == score) {\n     \
    \       result[i] = 0;\n        } else {\n            result[i] = abs(guess -\
    \ score);\n        }\n    }\n    return result;", "    // Your code here\n   \
    \ std::vector<long> result(guess.size());\n    long score;\n    long diff;\n \
    \   long sum = 0;\n    long count = 0;\n    for(long i = 0; i < guess.size();\
    \ i++) {\n        score = game[i];\n        diff = abs(guess - score);\n     \
    \   sum += diff;\n        if(diff == 0) {\n            result[i] = 0;\n      \
    \      count++;\n        } else {\n            result[i] = sum;\n        }\n \
    \   }\n    return result;", "    std::vector<long> result(guess.size());\n   \
    \ for (size_t i = 0; i < guess.size(); i++) {\n        result[i] = abs(guess[i]\
    \ - game[i]);\n    }\n    return result;", "    // Your code here\n    std::vector<long>\
    \ result(guess.size());\n    long sum = 0;\n    for (size_t i = 0; i < guess.size();\
    \ i++) {\n        sum += abs(game[i] - guess[i]);\n        result[i] = sum;\n\
    \    }\n    return result;", "    // Write your code here\n    std::vector<long>\
    \ result(guess.size());\n    long sum = 0;\n    for (size_t i = 0; i < guess.size();\
    \ i++) {\n        sum += abs(game[i] - guess[i]);\n        result[i] = sum;\n\
    \    }\n    return result;", "    // Your code here\n    std::vector<long> result(guess.size());\n\
    \    long sum = 0;\n    long diff = 0;\n    for (size_t i = 0; i < guess.size();\
    \ i++) {\n        sum += game[i];\n        diff = abs(game[i] - guess[i]);\n \
    \       result[i] = sum - diff;\n    }\n    return result;", "    // Your code\
    \ here\n    std::vector<long> result(guess.size());\n    long score = 0;\n   \
    \ long diff = 0;\n    for(int i = 0; i < guess.size(); i++) {\n        diff =\
    \ abs(game[i] - guess[i]);\n        if(diff == 0) {\n            result[i] = 0;\n\
    \        } else {\n            result[i] = diff;\n        }\n    }\n    return\
    \ result;", "    // Your code here\n    std::vector<long> result(guess.size());\n\
    \    long sum = 0;\n    long sum2 = 0;\n    long sum3 = 0;\n    long sum4 = 0;\n\
    \    long sum5 = 0;\n    long sum6 = 0;\n    long sum7 = 0;\n    long sum8 = 0;\n\
    \    long sum9 = 0;\n    long sum10 = 0;\n    long sum11 = 0;\n    long sum12\
    \ = 0;\n    long sum13 = 0;\n    long sum14 = 0;\n    long sum15 = 0;\n    long\
    \ sum16 = 0;\n    long sum17 = 0;\n    long sum18 = 0;\n    long sum19 = 0;\n\
    \    long sum20 = 0;\n    long sum21 = 0;\n    long sum22 = 0;\n    long sum23\
    \ = 0;\n    long sum24 = 0;\n    long sum25 = 0;\n    long sum26 = 0;\n    long\
    \ sum27 = 0;\n    long sum28 = 0;\n    long sum29 = 0;\n    long sum30 = 0;\n\
    \    long sum31 = 0;\n    long sum32 = 0;\n    long sum33 = 0;\n    long sum34\
    \ = 0;\n    long sum35 = 0;\n    long sum36 = 0;\n    long sum37 = 0;\n    long\
    \ sum38 = 0;\n    long sum39 = 0;\n    long sum40 = 0;\n    long sum41 = 0;\n\
    \    long sum42 = 0;\n    long sum43 = 0;\n    long sum44 = 0;\n    long sum45\
    \ = 0;\n    long sum46 = 0;\n    long sum47 = 0;\n    long sum48 = 0;\n    long\
    \ sum49 = 0;\n    long sum50 = 0;\n    long sum51 = 0;\n    long sum52 = 0;\n\
    \    long sum53 = 0;\n    long sum54 = 0;\n    long sum55 = 0;\n    long sum56\
    \ = 0;\n    long sum57 = 0;\n    long sum58 = 0;\n    long sum59 = 0;\n    long\
    \ sum60 = 0;\n    long sum61 = 0;\n    long sum62 = 0;\n    long sum63 = 0;\n\
    \    long sum64 = 0;\n    long sum65 = 0;\n    long sum66 = 0;\n    long sum67\
    \ = 0;\n    long sum68 = 0;\n    long sum69 = 0;\n    long sum70 = 0;\n    long\
    \ sum71 = 0;\n    long sum72 = 0;\n    long sum73 = 0;\n    long sum74 = 0;\n\
    \    long sum75 = 0;\n    long sum76 = 0;\n    long sum77 = 0;\n    long sum78\
    \ = 0;\n    long sum79 = 0;\n    long sum80 = 0;\n    long sum81 = 0;\n    long\
    \ sum82 = 0;\n    long sum83 = 0;\n    long sum84", "    // Your code goes here\n\
    \    std::vector<long> result(guess.size());\n    long sum = 0;\n    for(int i\
    \ = 0; i < guess.size(); i++) {\n        sum += abs(game[i] - guess[i]);\n   \
    \     result[i] = sum;\n    }\n    return result;", "    std::vector<long> result(guess.size());\n\
    \    long diff = 0;\n    for(size_t i = 0; i < guess.size(); i++) {\n        diff\
    \ = std::abs(game[i] - guess[i]);\n        result[i] = diff;\n    }\n    return\
    \ result;", "    // Your code here\n    std::vector<long> result(guess.size());\n\
    \    long sum = 0;\n    long max = 0;\n    long min = 0;\n    long diff = 0;\n\
    \    long sum2 = 0;\n    long max2 = 0;\n    long min2 = 0;\n    long diff2 =\
    \ 0;\n    long sum3 = 0;\n    long max3 = 0;\n    long min3 = 0;\n    long diff3\
    \ = 0;\n    long sum4 = 0;\n    long max4 = 0;\n    long min4 = 0;\n    long diff4\
    \ = 0;\n    long sum5 = 0;\n    long max5 = 0;\n    long min5 = 0;\n    long diff5\
    \ = 0;\n    long sum6 = 0;\n    long max6 = 0;\n    long min6 = 0;\n    long diff6\
    \ = 0;\n    long sum7 = 0;\n    long max7 = 0;\n    long min7 = 0;\n    long diff7\
    \ = 0;\n    long sum8 = 0;\n    long max8 = 0;\n    long min8 = 0;\n    long diff8\
    \ = 0;\n    long sum9 = 0;\n    long max9 = 0;\n    long min9 = 0;\n    long diff9\
    \ = 0;\n    long sum10 = 0;\n    long max10 = 0;\n    long min10 = 0;\n    long\
    \ diff10 = 0;\n    long sum11 = 0;\n    long max11 = 0;\n    long min11 = 0;\n\
    \    long diff11 = 0;\n    long sum12 = 0;\n    long max12 = 0;\n    long min12\
    \ = 0;\n    long diff12 = 0;\n    long sum13 = 0;\n    long max13 = 0;\n    long\
    \ min13 = 0;\n    long diff13 = 0;\n    long sum14 = 0;\n    long max14 = 0;\n\
    \    long min14 = 0;\n    long diff14 = 0;\n    long sum15 = 0;\n    long max15\
    \ = 0;\n    long min15 = 0;\n    long diff15 = 0;\n    long sum16 = 0;\n    long\
    \ max16 = 0;\n    long min16 = 0;\n    long diff16 = 0;\n    long sum17 = 0;\n\
    \    long max17 = 0;\n    long min17 = 0;\n    long diff17 = 0;\n    long sum18\
    \ = 0;\n    long max18 = 0;\n    long min18 = 0;\n    long diff18 = 0;\n    long\
    \ sum19 = 0;\n    long max19 = 0;\n    long min19 = 0;\n    long diff19 = 0;\n\
    \    long sum20 = 0;\n    long max20 = 0;\n    long min20 = 0;\n    long diff20\
    \ = 0;\n    long sum21 = 0;\n    long max21 = 0;\n    long min21 = 0;\n    long\
    \ diff21 = 0;\n    long sum22 = 0;\n    long max22 = 0;\n    ", "    std::vector<long>\
    \ result(guess.size());\n    long score = 0;\n    for (size_t i = 0; i < guess.size();\
    \ i++) {\n        score += game[i] - guess[i];\n        result[i] = abs(score);\n\
    \    }\n    return result;", "    std::vector<long> result(guess.size());\n  \
    \  long diff = 0;\n    for (size_t i = 0; i < guess.size(); ++i) {\n        diff\
    \ = std::abs(guess - game[i]);\n        result[i] = diff;\n    }\n    return result;",
  "    std::vector<long> result(guess.size());\n    long diff = 0;\n    for(size_t\
    \ i = 0; i < guess.size(); i++) {\n        diff = abs(game[i] - guess[i]);\n \
    \       result[i] = diff;\n    }\n    return result;", "    std::vector<long>\
    \ result(guess.size());\n    long sum = 0;\n    long diff = 0;\n    for(size_t\
    \ i = 0; i < guess.size(); i++) {\n        sum += game[i];\n        diff = abs(guess[i]\
    \ - sum);\n        result[i] = diff;\n    }\n    return result;", "    std::vector<long>\
    \ result(guess.size());\n    long max_diff = std::numeric_limits<long>::max();\n\
    \    for(size_t i = 0; i < guess.size(); ++i) {\n        long diff = std::abs(game[i]\
    \ - guess[i]);\n        if(diff > max_diff) {\n            max_diff = diff;\n\
    \        }\n        result[i] = diff;\n    }\n    return result;", "    std::vector<long>\
    \ result(guess.size());\n    for (size_t i = 0; i < guess.size(); ++i) {\n   \
    \     result[i] = abs(game[i] - guess[i]);\n    }\n    return result;", "    std::vector<long>\
    \ result(guess.size());\n    long diff = 0;\n    for(int i = 0; i < guess.size();\
    \ i++) {\n        diff = abs(game[i] - guess[i]);\n        result[i] = diff;\n\
    \    }\n    return result;", "    // Your code here\n    std::vector<long> result(guess.size());\n\
    \    long sum = 0;\n    for(int i = 0; i < guess.size(); i++) {\n        sum +=\
    \ abs(game[i] - guess[i]);\n        result[i] = sum;\n    }\n    return result;",
  "    std::vector<long> result(guess.size());\n    long score;\n    long diff;\n\
    \    long sum = 0;\n    long count = 0;\n    long sum2 = 0;\n    long count2 =\
    \ 0;\n    long sum3 = 0;\n    long count3 = 0;\n    long sum4 = 0;\n    long count4\
    \ = 0;\n    long sum5 = 0;\n    long count5 = 0;\n    long sum6 = 0;\n    long\
    \ count6 = 0;\n    long sum7 = 0;\n    long count7 = 0;\n    long sum8 = 0;\n\
    \    long count8 = 0;\n    long sum9 = 0;\n    long count9 = 0;\n    long sum10\
    \ = 0;\n    long count10 = 0;\n    long sum11 = 0;\n    long count11 = 0;\n  \
    \  long sum12 = 0;\n    long count12 = 0;\n    long sum13 = 0;\n    long count13\
    \ = 0;\n    long sum14 = 0;\n    long count14 = 0;\n    long sum15 = 0;\n    long\
    \ count15 = 0;\n    long sum16 = 0;\n    long count16 = 0;\n    long sum17 = 0;\n\
    \    long count17 = 0;\n    long sum18 = 0;\n    long count18 = 0;\n    long sum19\
    \ = 0;\n    long count19 = 0;\n    long sum20 = 0;\n    long count20 = 0;\n  \
    \  long sum21 = 0;\n    long count21 = 0;\n    long sum22 = 0;\n    long count22\
    \ = 0;\n    long sum23 = 0;\n    long count23 = 0;\n    long sum24 = 0;\n    long\
    \ count24 = 0;\n    long sum25 = 0;\n    long count25 = 0;\n    long sum26 = 0;\n\
    \    long count26 = 0;\n    long sum27 = 0;\n    long count27 = 0;\n    long sum28\
    \ = 0;\n    long count28 = 0;\n    long sum29 = 0;\n    long count29 = 0;\n  \
    \  long sum30 = 0;\n    long count30 = 0;\n    long sum31 = 0;\n    long count31\
    \ = 0;\n    long sum32 = 0;\n    long count32 = 0;\n    long sum33 = 0;\n    long\
    \ count33 = 0;\n    long sum34 = 0;\n    long count34 = 0;\n    long sum35 = 0;\n\
    \    long count35 = 0;\n    long sum36 = 0;\n    long count36 = 0;\n    long sum37\
    \ = 0;\n    long count37 = 0;\n    long sum38 = 0;\n    long count38 = 0;\n  \
    \  long sum39 = 0;\n    long count39 = 0;\n    long sum40 = 0;\n    long count40\
    \ = 0;\n    long sum41 = 0;\n    long count41 = 0;\n    long sum42 = 0;\n    long\
    \ count42 = 0;", "    // Your code here\n    std::vector<long> result(guess.size());\n\
    \    long sum = 0;\n    for(int i = 0; i < guess.size(); i++) {\n        sum +=\
    \ abs(game[i] - guess[i]);\n        result[i] = sum;\n    }\n    return result;",
  "    std::vector<long> result(guess.size());\n    long score = 0;\n    for (size_t\
    \ i = 0; i < guess.size(); ++i) {\n        score += game[i] - guess[i];\n    \
    \    result[i] = abs(score - game[i]);\n    }\n    return result;", "    std::vector<long>\
    \ result(guess.size());\n    for (size_t i = 0; i < guess.size(); ++i) {\n   \
    \     result[i] = abs(game[i] - guess[i]);\n    }\n    return result;", "    std::vector<long>\
    \ result(guess.size());\n    long diff = 0;\n    for(int i = 0; i < guess.size();\
    \ i++) {\n        diff = abs(game[i] - guess[i]);\n        result[i] = diff;\n\
    \    }\n    return result;", "    std::vector<long> result(guess.size());\n  \
    \  long long int sum = 0;\n    for(int i = 0; i < guess.size(); i++) {\n     \
    \   sum += abs(game[i] - guess[i]);\n        result[i] = sum;\n    }\n    return\
    \ result;", "    // Write your code here\n    std::vector<long> result(guess.size());\n\
    \    long sum = 0;\n    long diff = 0;\n    for(int i = 0; i < guess.size(); i++){\n\
    \        sum += abs(game[i] - guess[i]);\n    }\n    for(int i = 0; i < guess.size();\
    \ i++){\n        diff = abs(game[i] - guess[i]);\n        if(diff == sum){\n \
    \           result[i] = 0;\n        }else{\n            result[i] = diff;\n  \
    \      }\n    }\n    return result;", "    // Your code goes here\n    std::vector<long>\
    \ result(guess.size());\n    long sum = 0;\n    for(int i = 0; i < guess.size();\
    \ i++){\n        sum += abs(game[i] - guess[i]);\n        result[i] = sum;\n \
    \   }\n    return result;", "    std::vector<long> result(guess.size());\n   \
    \ long diff = 0;\n    for (size_t i = 0; i < guess.size(); ++i) {\n        diff\
    \ = std::abs(game[i] - guess[i]);\n        result[i] = diff;\n    }\n    return\
    \ result;", "    std::vector<long> result(guess.size());\n    long score = 0;\n\
    \    for (size_t i = 0; i < guess.size(); i++) {\n        score += abs(game[i]\
    \ - guess[i]);\n        result[i] = score;\n    }\n    return result;", "    std::vector<long>\
    \ result(guess.size());\n    long diff = 0;\n    for (size_t i = 0; i < guess.size();\
    \ i++) {\n        diff = std::abs(game[i] - guess[i]);\n        result[i] = diff;\n\
    \    }\n    return result;", "    // Your code goes here\n    std::vector<long>\
    \ result(guess.size());\n    long score = 0;\n    long diff = 0;\n    for(int\
    \ i = 0; i < guess.size(); i++){\n        diff = abs(game[i] - guess[i]);\n  \
    \      if(diff == 0){\n            result[i] = 0;\n        }else{\n          \
    \  result[i] = diff;\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result(guess.size());\n    long score;\n    long diff;\n    long diff2;\n  \
    \  long diff3;\n    long diff4;\n    long diff5;\n    long diff6;\n    long diff7;\n\
    \    long diff8;\n    long diff9;\n    long diff10;\n    long diff11;\n    long\
    \ diff12;\n    long diff13;\n    long diff14;\n    long diff15;\n    long diff16;\n\
    \    long diff17;\n    long diff18;\n    long diff19;\n    long diff20;\n    long\
    \ diff21;\n    long diff22;\n    long diff23;\n    long diff24;\n    long diff25;\n\
    \    long diff26;\n    long diff27;\n    long diff28;\n    long diff29;\n    long\
    \ diff30;\n    long diff31;\n    long diff32;\n    long diff33;\n    long diff34;\n\
    \    long diff35;\n    long diff36;\n    long diff37;\n    long diff38;\n    long\
    \ diff39;\n    long diff40;\n    long diff41;\n    long diff42;\n    long diff43;\n\
    \    long diff44;\n    long diff45;\n    long diff46;\n    long diff47;\n    long\
    \ diff48;\n    long diff49;\n    long diff50;\n    long diff51;\n    long diff52;\n\
    \    long diff53;\n    long diff54;\n    long diff55;\n    long diff56;\n    long\
    \ diff57;\n    long diff58;\n    long diff59;\n    long diff60;\n    long diff61;\n\
    \    long diff62;\n    long diff63;\n    long diff64;\n    long diff65;\n    long\
    \ diff66;\n    long diff67;\n    long diff68;\n    long diff69;\n    long diff70;\n\
    \    long diff71;\n    long diff72;\n    long diff73;\n    long diff74;\n    long\
    \ diff75;\n    long diff76;\n    long diff77;\n    long diff78;\n    long diff79;\n\
    \    long diff80;\n    long diff81;\n    long diff82;\n    long diff83;\n    long\
    \ diff84;\n    long diff85;\n    long diff86;\n    ", "    std::vector<long> result(guess.size());\n\
    \    long score;\n    long diff;\n    long sum = 0;\n    long count = 0;\n   \
    \ long max = 0;\n    long min = 0;\n    long mid = 0;\n    long mid2 = 0;\n  \
    \  long mid3 = 0;\n    long mid4 = 0;\n    long mid5 = 0;\n    long mid6 = 0;\n\
    \    long mid7 = 0;\n    long mid8 = 0;\n    long mid9 = 0;\n    long mid10 =\
    \ 0;\n    long mid11 = 0;\n    long mid12 = 0;\n    long mid13 = 0;\n    long\
    \ mid14 = 0;\n    long mid15 = 0;\n    long mid16 = 0;\n    long mid17 = 0;\n\
    \    long mid18 = 0;\n    long mid19 = 0;\n    long mid20 = 0;\n    long mid21\
    \ = 0;\n    long mid22 = 0;\n    long mid23 = 0;\n    long mid24 = 0;\n    long\
    \ mid25 = 0;\n    long mid26 = 0;\n    long mid27 = 0;\n    long mid28 = 0;\n\
    \    long mid29 = 0;\n    long mid30 = 0;\n    long mid31 = 0;\n    long mid32\
    \ = 0;\n    long mid33 = 0;\n    long mid34 = 0;\n    long mid35 = 0;\n    long\
    \ mid36 = 0;\n    long mid37 = 0;\n    long mid38 = 0;\n    long mid39 = 0;\n\
    \    long mid40 = 0;\n    long mid41 = 0;\n    long mid42 = 0;\n    long mid43\
    \ = 0;\n    long mid44 = 0;\n    long mid45 = 0;\n    long mid46 = 0;\n    long\
    \ mid47 = 0;\n    long mid48 = 0;\n    long mid49 = 0;\n    long mid50 = 0;\n\
    \    long mid51 = 0;\n    long mid52 = 0;\n    long mid53 = 0;\n    long mid54\
    \ = 0;\n    long mid55 = 0;\n    long mid56 = 0;\n    long mid57 = 0;\n    long\
    \ mid58 = 0;\n    long mid59 = 0;\n    long mid60 = 0;\n    long mid61 = 0;\n\
    \    long mid62 = 0;\n    long mid63 = 0;\n    long mid64 = 0;\n    long mid65\
    \ = 0;\n    long mid66 = 0;\n    long mid67 = 0;\n    long mid68 = 0;\n    long\
    \ mid69 = 0;\n    long mid70 = 0;\n    long mid71 = 0;\n    long mid72 = 0;\n\
    \    long mid73 = 0;\n    long mid74 = 0;\n    long mid75 = 0;\n    long mid76\
    \ = 0;\n    long mid77 = 0;\n    long mid78 = 0;\n    long mid79 = 0;\n    long\
    \ mid80"]
stop_tokens:
- "\n}"

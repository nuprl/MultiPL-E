name: HumanEval_92_any_int
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that takes\
  \ 3 numbers.\n// Returns true if one of the numbers is equal to the sum of the other\
  \ two, and all numbers are integers.\n// Returns false in any other cases.\n// Examples\n\
  bool any_int(float x, float y, float z) {\n"
tests: "}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
  \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
  \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n  \
  \  assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
  \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
  \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
  \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
  \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
  \ == (false));\n}\n"
completions: ['    return (x == y + z);', "    assert(x >= 0);\n    assert(y >= 0);\n\
    \    assert(z >= 0);\n    return (x == y + z);", '    return (x == y || x == z
    || y == z);', '    return (x == y + z);', "    assert(x >= 0);\n    assert(y >=\
    \ 0);\n    assert(z >= 0);\n    return (x == y + z);", '    return (x == y + z);',
  '    return (x == y || x == z || y == z);', "    // Write your code here\n    return\
    \ x == y || x == z;", '    return (x == y + z);', '    return (x == y + z);',
  '    return (x == y + z);', '    return (x == y + z);', '    return (x == y + z);',
  "    // Write your code here\n    return (x+y+z==(x+y+z));", "    assert(x >= 0);\n\
    \    assert(y >= 0);\n    assert(z >= 0);\n    return (x == y + z);", '    return
    (x == y || x == z || y == z);', '    return (x == y + z);', '    return (x ==
    y || x == z || y == z);', '    return (x == y + z);', "    // Write your code\
    \ here\n    return (x == y + z);", "    // Your code here\n    return (x+y+z ==\
    \ (x+y+z));", '    return (x == y + z);', "    assert(x >= 0);\n    assert(y >=\
    \ 0);\n    assert(z >= 0);\n    return (x == y + z);", '    return (x == y ||
    x == z || y == z);', '    return (x == y + z);', "    // Write your code here\n\
    \    return x == y || x == z || y == z;", '    return (x == y + z);', "    assert(x\
    \ >= 0);\n    assert(y >= 0);\n    assert(z >= 0);\n    return (x == y + z);",
  '    return (x == y + z);', "    if (x == y + z) return true;\n    if (x == y -\
    \ z) return true;\n    if (x == y - z) return true;\n    return false;", '    return
    (x == y + z);', "    assert(x >= 0);\n    assert(y >= 0);\n    assert(z >= 0);\n\
    \    return x == y + z;", "    // Write your code here\n    return (x == y ||\
    \ x == z || y == z);", '    return (x == y + z);', '    return (x == y + z);',
  "    if (x == y + z) return true;\n    if (x == y - z) return true;\n    if (x ==\
    \ y - z) return true;\n    return false;", '    return (x == y || x == z || y
    == z);', '    return (x == y || x == z || y == z);', '    return (x == y + z);',
  "    if (x == y && y == z) return true;\n    return false;", '    return (x == y
    + z);', "    assert(x >= 0);\n    assert(y >= 0);\n    assert(z >= 0);\n    return\
    \ (x == y + z);", "    // Write your code here\n    return (x == y || x == z ||\
    \ y == z);", "    assert(x >= 0);\n    assert(y >= 0);\n    assert(z >= 0);\n\
    \    if (x + y == z) {\n        return true;\n    }\n    return false;", "   \
    \ if (x == y + z) return true;\n    if (x == y - z) return true;\n    if (x ==\
    \ y - z) return true;\n    return false;", '    return (x == y || x == z || y
    == z);', "    if (x == y && y == z) {\n        return true;\n    }\n    return\
    \ false;", '    // Your code here', '    // Your code here', '    return (x ==
    y || x == z || y == z);', "    assert(x >= 0);\n    assert(y >= 0);\n    assert(z\
    \ >= 0);\n    if (x + y == z) {\n        return true;\n    }\n    return false;",
  '    return (x == y + z);', "    assert(x >= 0);\n    assert(y >= 0);\n    assert(z\
    \ >= 0);\n    return (x == y + z);", "    assert(x >= 0);\n    assert(y >= 0);\n\
    \    assert(z >= 0);\n    return (x == y + z);", '    return (x == y + z);', '    return
    (x == y + z);', "    // Write your code here\n    return (x+y+z==(x+y+z));", " \
    \   assert(x >= 0);\n    assert(y >= 0);\n    assert(z >= 0);\n    return x ==\
    \ y + z;", '    return (x == y + z);', "    // Write your code here\n    float\
    \ sum=x+y+z;\n    if(sum==x||sum==y||sum==z){\n        return true;\n    }\n \
    \   return false;", '    return (x == y + z);', '    return (x == y + z);', '    return
    (x == y + z);', '    return (x == y + z);', "    // TODO: Write code here\n  \
    \  return false;", '    return (x == y + z);', "    // Your code here\n    return\
    \ x == y || x == z || y == z;", '    return (x == y || x == z || y == z);', '    return
    (x == y + z);', "    // Write your code here\n    return (x+y+z==(x*x+y*y+z*z));",
  '    return (x == y + z);', '    return (x == y + z);', "    assert(x >= 0);\n \
    \   assert(y >= 0);\n    assert(z >= 0);\n    return (x == y + z);", '    return
    (x == y + z);', '    return (x == y + z);', '    return (x == y + z);', '    return
    (x == y + z);', '    return (x == y || x == z || y == z);', "    assert(x >= 0);\n\
    \    assert(y >= 0);\n    assert(z >= 0);\n    if (x + y == z) {\n        return\
    \ true;\n    }\n    return false;", '    return (x == y + z);', '    return (x
    == y + z);', "    // Write your code here\n    return (x == y || x == z || y ==\
    \ z);", "    // Write your code here\n    return (x == y || x == z || y == z);",
  "    assert(x >= 0);\n    assert(y >= 0);\n    assert(z >= 0);\n    return (x ==\
    \ y + z);", "    assert(x >= 0);\n    assert(y >= 0);\n    assert(z >= 0);\n \
    \   return (x == y + z);", "    assert(x >= 0);\n    assert(y >= 0);\n    assert(z\
    \ >= 0);\n    return (x == y + z);", '    return (x == y + z);', "    // TODO:\
    \ Write code here\n    return false;", '    return (x == y + z);', "    // Write\
    \ your code here\n    return x == y || x == z || y == z;", "    // Your code here\n\
    \    return x == y || x == z;", '    return (x == y + z);', "    assert(x >= 0);\n\
    \    assert(y >= 0);\n    assert(z >= 0);\n    return (x == y + z);", '    return
    (x == y + z);', "    // Write your code here\n    return x == y || x == z || y\
    \ == z;", "    assert(x >= 0);\n    assert(y >= 0);\n    assert(z >= 0);\n   \
    \ return (x == y + z);", "    // Your code here\n    return x == y || x == z ||\
    \ y == z;", '    return (x == y + z);', "    assert(x >= 0);\n    assert(y >=\
    \ 0);\n    assert(z >= 0);\n    return x == y + z;", '    return (x == y + z);',
  '    return (x == y + z);', '    return (x == y + z);', "    // Write your code\
    \ here\n    return (x == y + z);", "    // Write your code here\n    return (x\
    \ == y + z);", "    if (x == y + z) return true;\n    if (x == y - z) return true;\n\
    \    if (x == y - z) return true;\n    return false;", '    return (x == y + z);',
  "    // Write your code here\n    return (x == y || x == z || y == z);", "    //\
    \ Write your code here\n    return x == y || x == z || y == z;", '    return (x
    == y + z);', "    // Write your code here\n    return (x == y + z);", '    return
    (x == y + z);', "    assert(x >= 0);\n    assert(y >= 0);\n    assert(z >= 0);\n\
    \    return (x == y + z);", "    // Write your code here\n    return (x == y ||\
    \ x == z || y == z);", '    return (x == y + z);', '    return (x == y + z);',
  "    if (x == y + z) return true;\n    return false;", '    return (x == y + z);',
  '    return (x == y || x == z || y == z);', '    return (x == y + z);', '    return
    (x == y + z);', '    return (x == y || x == z || y == z);', "    assert(x >= 0);\n\
    \    assert(y >= 0);\n    assert(z >= 0);\n    return (x == y + z);", "    //\
    \ Write your code here\n    return (x == y + z);", '    return (x == y || x ==
    z || y == z);', '    return (x == y + z);', '    return (x == y + z);', '    return
    (x == y + z);', '    return (x == y || x == z || y == z);', "    // Write your\
    \ code here\n    return (x == y || x == z || y == z);", '    return (x == y +
    z);', '    return (x == y + z);', "    assert(x >= 0);\n    assert(y >= 0);\n\
    \    assert(z >= 0);\n    return (x == y + z);", "    // Write your code here\n\
    \    return (x == y || x == z || y == z);", '    return (x == y + z);', '    return
    (x == y + z);', '    return (x == y + z);', "    // Write your code here\n   \
    \ return x == y || x == z || y == z;", "    if (x == y + z) {\n        return\
    \ true;\n    }\n    return false;", '    return (x == y + z);', '    return (x
    == y || x == z || y == z);', "    if (x == y + z) {\n        return true;\n  \
    \  }\n    return false;", '    return (x == y || x == z || y == z);', '    return
    (x == y || x == z || y == z);', '    return (x == y + z);', '    return (x ==
    y + z);', '    return (x == y || x == z || y == z);', "    if (x == y + z) return\
    \ true;\n    if (x == y - z) return true;\n    if (x == y - z) return true;\n\
    \    return false;", "    // Write your code here\n    return (x == y || x ==\
    \ z || y == z);", "    if (x == y + z) {\n        return true;\n    }\n    return\
    \ false;", "    // Write your code here\n    return (x == y + z);", "    // Write\
    \ your code here\n    return (x+y+z == (x+y) || x+y+z == (x+y) && x+y+z == (x+y)\
    \ && x+y+z == (x+y) && x+y+z == (x+y) && x+y+z == (x+y) && x+y+z == (x+y) && x+y+z\
    \ == (x+y) && x+y+z == (x+y) && x+y+z == (x+y) && x+y+z == (x+y) && x+y+z == (x+y)\
    \ && x+y+z == (x+y) && x+y+z == (x+y) && x+y+z == (x+y) && x+y+z == (x+y) && x+y+z\
    \ == (x+y) && x+y+z == (x+y) && x+y+z == (x+y) && x+y+z == (x+y) && x+y+z == (x+y)\
    \ && x+y+z == (x+y) && x+y+z == (x+y) && x+y+z == (x+y) && x+y+z == (x+y) && x+y+z\
    \ == (x+y) && x+y+z == (x+y) && x+y+z == (x+y) && x+y+z == (x+y) && x+y+z == (x+y)\
    \ && x+y+z == (x+y) && x+y+z == (x+y) && x+y+z == (x+y) && x+y+z == (x+y) && x+y+z\
    \ == (x+y) && x+y+z == (x+y) && x+y+z == (x+y) && x+y+z == (x+y) && x+y+z == (x+y)\
    \ && x+y+z == (x+y) && x+y+z == (x+y) && x+y+z == (x+y) && x+y+z == (x+y) && x+y+z\
    \ == (x+y) && x+y+z == (x+y) && x+y+z == (x+y) && x+y+z == (x+y) && x+y+z == (x+y)\
    \ && x+y+z == (x+y) && x+y+z == (x+y) && x+y+z == (x+y) && x+y+z == (x+y) && x+y+z\
    \ == (x+y) && x+y+z == (x+y) && x+y+z == (x+y) && x+y+z == (x+y) && x+y+z == (x+y)\
    \ && x+y+z == (x+y) && x+y+z == (x+y) && x+y+z == (x+y) && x+y+z == (x+y) && x+y+z\
    \ == (x+y) && x+y+z == (x+y) && x+", "    assert(x >= 0);\n    assert(y >= 0);\n\
    \    assert(z >= 0);\n    return (x == y + z);", "    assert(x >= 0);\n    assert(y\
    \ >= 0);\n    assert(z >= 0);\n    if (x + y == z) {\n        return true;\n \
    \   }\n    return false;", '    return (x == y || x == z || y == z);', '    return
    (x == y + z);', '    return (x == y + z);', '    return (x == y + z);', "    assert(x\
    \ >= 0);\n    assert(y >= 0);\n    assert(z >= 0);\n    return (x == y + z);",
  "    assert(x >= 0);\n    assert(y >= 0);\n    assert(z >= 0);\n    return (x ==\
    \ y + z);", "    // Write your code here\n    return (x == y || x == z || y ==\
    \ z);", "    // Write your code here\n    return (x+y+z==(x+y+z));", "    assert(x\
    \ >= 0);\n    assert(y >= 0);\n    assert(z >= 0);\n    return (x == y + z);",
  '    return (x == y + z);', "    assert(x >= 0);\n    assert(y >= 0);\n    assert(z\
    \ >= 0);\n    return (x == y + z);", "    assert(x >= 0);\n    assert(y >= 0);\n\
    \    assert(z >= 0);\n    return (x == y + z);", '    return (x == y || x == z
    || y == z);', '    return (x == y + z);', "    // Write your code here\n    return\
    \ (x == y + z);", "    // Write your code here\n    return x == y || x == z;",
  '    return (x == y + z);', '    return (x == y + z);', '    return (x == y || x
    == z || y == z);', '    return (x == y || x == z || y == z);', '    return (x
    == y + z);', "    assert(x >= 0);\n    assert(y >= 0);\n    assert(z >= 0);\n\
    \    return (x == y + z);", "    if (x == y + z) return true;\n    if (x == y\
    \ - z) return true;\n    if (x == y - z) return true;\n    return false;", " \
    \   assert(x >= 0);\n    assert(y >= 0);\n    assert(z >= 0);\n    return (x ==\
    \ y + z);", '    return (x == y + z);', "    assert(x >= 0);\n    assert(y >=\
    \ 0);\n    assert(z >= 0);\n    return (x == y + z);", "    // Write your code\
    \ here\n    return x == y || x == z;", "    assert(x >= 0);\n    assert(y >= 0);\n\
    \    assert(z >= 0);\n    return (x == y + z);", '    return (x == y + z);', '    return
    (x == y || x == z || y == z);', "    // Write your code here\n    return (x ==\
    \ y || x == z || y == z);", "    assert(x >= 0);\n    assert(y >= 0);\n    assert(z\
    \ >= 0);\n    return (x == y || x == z || y == z);", '    return (x == y + z);',
  '    return (x == y + z);', '    return (x == y + z);', '    return (x == y || x
    == z || y == z);', "    // Write your code here\n    return x == y || x == z ||\
    \ y == z;", '    return (x == y + z);', '    return (x == y || x == z || y ==
    z);', '    return (x == y + z);', "    assert(x >= 0);\n    assert(y >= 0);\n\
    \    assert(z >= 0);\n    return (x == y + z);", "    assert(x >= 0);\n    assert(y\
    \ >= 0);\n    assert(z >= 0);\n    return (x == y + z);", '    return (x == y
    + z);', '    return (x == y + z);', "    if (x == y + z) return true;\n    return\
    \ false;", "    assert(x >= 0);\n    assert(y >= 0);\n    assert(z >= 0);\n  \
    \  return (x == y + z);", '    return (x == y + z);']
stop_tokens:
- "\n}"

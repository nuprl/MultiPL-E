name: HumanEval_110_exchange
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this problem, you will\
  \ implement a function that takes two lists of numbers,\n// and determines whether\
  \ it is possible to perform an exchange of elements\n// between them to make lst1\
  \ a list of only even numbers.\n// There is no limit on the number of exchanged\
  \ elements between lst1 and lst2.\n// If it is possible to exchange elements between\
  \ the lst1 and lst2 to make\n// all the elements of lst1 to be even, return \"YES\"\
  .\n// Otherwise, return \"NO\".\n// For example:\n// It is assumed that the input\
  \ lists will be non-empty.\nstd::string exchange(std::vector<long> lst1, std::vector<long>\
  \ lst2) {\n"
tests: "}\nint main() {\n    auto candidate = exchange;\n    assert(candidate((std::vector<long>({(long)1,\
  \ (long)2, (long)3, (long)4})), (std::vector<long>({(long)1, (long)2, (long)3, (long)4})))\
  \ == (\"YES\"));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
  \ (long)4})), (std::vector<long>({(long)1, (long)5, (long)3, (long)4}))) == (\"\
  NO\"));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4})),\
  \ (std::vector<long>({(long)2, (long)1, (long)4, (long)3}))) == (\"YES\"));\n  \
  \  assert(candidate((std::vector<long>({(long)5, (long)7, (long)3})), (std::vector<long>({(long)2,\
  \ (long)6, (long)4}))) == (\"YES\"));\n    assert(candidate((std::vector<long>({(long)5,\
  \ (long)7, (long)3})), (std::vector<long>({(long)2, (long)6, (long)3}))) == (\"\
  NO\"));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)6, (long)1,\
  \ (long)8, (long)9})), (std::vector<long>({(long)3, (long)5, (long)5, (long)1, (long)1,\
  \ (long)1}))) == (\"NO\"));\n    assert(candidate((std::vector<long>({(long)100,\
  \ (long)200})), (std::vector<long>({(long)200, (long)200}))) == (\"YES\"));\n}\n"
completions: ["    // Your code here\n    long even = 0;\n    long odd = 0;\n    long\
    \ evenCount = 0;\n    long oddCount = 0;\n    for (long i = 0; i < lst1.size();\
    \ i++) {\n        if (lst1[i] % 2 == 0) {\n            evenCount++;\n        }\
    \ else {\n            oddCount++;\n        }\n    }\n    for (long i = 0; i <\
    \ lst2.size(); i++) {\n        if (lst2[i] % 2 == 0) {\n            evenCount++;\n\
    \        } else {\n            oddCount++;\n        }\n    }\n    if (evenCount\
    \ == lst1.size() && oddCount == lst2.size()) {\n        return \"YES\";\n    }\
    \ else {\n        return \"NO\";\n    }", '    // Your code here', "    // Your\
    \ code here\n    ", "    // Write your code here\n    \n    long even = 0;\n \
    \   long odd = 0;\n    long evenCount = 0;\n    long oddCount = 0;\n    long evenSum\
    \ = 0;\n    long oddSum = 0;\n    long evenMax = std::numeric_limits<long>::max();\n\
    \    long oddMax = std::numeric_limits<long>::max();\n    long evenMin = std::numeric_limits<long>::min();\n\
    \    long oddMin = std::numeric_limits<long>::min();\n    long evenMaxSum = std::numeric_limits<long>::max();\n\
    \    long oddMaxSum = std::numeric_limits<long>::max();\n    long evenMinSum =\
    \ std::numeric_limits<long>::min();\n    long oddMinSum = std::numeric_limits<long>::min();\n\
    \    long evenMaxCount = std::numeric_limits<long>::max();\n    long oddMaxCount\
    \ = std::numeric_limits<long>::max();\n    long evenMinCount = std::numeric_limits<long>::min();\n\
    \    long oddMinCount = std::numeric_limits<long>::min();\n    long evenMaxSumCount\
    \ = std::numeric_limits<long>::max();\n    long oddMaxSumCount = std::numeric_limits<long>::max();\n\
    \    long evenMinSumCount = std::numeric_limits<long>::min();\n    long oddMinSumCount\
    \ = std::numeric_limits<long>::min();\n    long evenMaxCountSum = std::numeric_limits<long>::max();\n\
    \    long oddMaxCountSum = std::numeric_limits<long>::max();\n    long evenMinCountSum\
    \ = std::numeric_limits<long>::min();\n    long oddMinCountSum = std::numeric_limits<long>::min();\n\
    \    long evenMaxSumCountSum = std::numeric_limits<long>::max();\n    long oddMaxSumCountSum\
    \ = std::numeric_limits<long>::max();\n    long evenMinSumCountSum = std::numeric_limits<long>::min();\n\
    \    long oddMinSumCountSum = std::numeric_limits<long>::min();\n    long evenMaxCountCountSum\
    \ = std::numeric_limits<long>::max();\n    long oddMaxCountCountSum = std::numeric_limits<long>::max();\n\
    \    long evenMinCountCountSum = std::numeric_limits<long>::min();\n    long oddMinCountCountSum\
    \ = std::numeric_limits<long>::min();\n    long evenMaxSumCountCountSum = std::numeric_limits<long>::max();\n\
    \    long oddMaxSumCountCountSum = std::numeric_limits<long>::max();\n    long\
    \ even", "    // Your code here\n    long even = 0;\n    long odd = 0;\n    long\
    \ evenCount = 0;\n    long oddCount = 0;\n    long evenSum = 0;\n    long oddSum\
    \ = 0;\n    long evenMax = lst1[0];\n    long oddMax = lst1[0];\n    long evenMin\
    \ = lst1[0];\n    long oddMin = lst1[0];\n    long evenMax2 = lst2[0];\n    long\
    \ oddMax2 = lst2[0];\n    long evenMin2 = lst2[0];\n    long oddMin2 = lst2[0];\n\
    \    long evenMax3 = lst2[0];\n    long oddMax3 = lst2[0];\n    long evenMin3\
    \ = lst2[0];\n    long oddMin3 = lst2[0];\n    long evenMax4 = lst2[0];\n    long\
    \ oddMax4 = lst2[0];\n    long evenMin4 = lst2[0];\n    long oddMin4 = lst2[0];\n\
    \    long evenMax5 = lst2[0];\n    long oddMax5 = lst2[0];\n    long evenMin5\
    \ = lst2[0];\n    long oddMin5 = lst2[0];\n    long evenMax6 = lst2[0];\n    long\
    \ oddMax6 = lst2[0];\n    long evenMin6 = lst2[0];\n    long oddMin6 = lst2[0];\n\
    \    long evenMax7 = lst2[0];\n    long oddMax7 = lst2[0];\n    long evenMin7\
    \ = lst2[0];\n    long oddMin7 = lst2[0];\n    long evenMax8 = lst2[0];\n    long\
    \ oddMax8 = lst2[0];\n    long evenMin8 = lst2[0];\n    long oddMin8 = lst2[0];\n\
    \    long evenMax9 = lst2[0];\n    long oddMax9 = lst2[0];\n    long evenMin9\
    \ = lst2[0];\n    long oddMin9 = lst2[0];\n    long evenMax10 = lst2[0];\n   \
    \ long oddMax10 = lst2[0];\n    long evenMin10 = lst2[0];\n    long oddMin10 =\
    \ lst2[0];\n    long evenMax11 = lst2[0];\n    long oddMax11 = lst2[0];\n    long\
    \ evenMin11 = lst2[0];\n    long oddMin11 = lst2[0];\n    long evenMax12 = lst2[0];\n\
    \    long oddMax12 = lst2[0];\n    long evenMin12 = lst2[0];\n    long oddMin12\
    \ = lst2[0];\n    long evenMax13 = lst2[0];\n    long oddMax13 = lst2[0];\n  \
    \  long evenMin13 = lst2[0];\n    long oddMin13 = lst2[0];\n    ", "    // Write\
    \ your code here\n    long even = 0;\n    long odd = 0;\n    long evenCount =\
    \ 0;\n    long oddCount = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n  \
    \  long evenMax = 0;\n    long oddMax = 0;\n    long evenMin = 0;\n    long oddMin\
    \ = 0;\n    long evenMax2 = 0;\n    long oddMax2 = 0;\n    long evenMin2 = 0;\n\
    \    long oddMin2 = 0;\n    long evenMax3 = 0;\n    long oddMax3 = 0;\n    long\
    \ evenMin3 = 0;\n    long oddMin3 = 0;\n    long evenMax4 = 0;\n    long oddMax4\
    \ = 0;\n    long evenMin4 = 0;\n    long oddMin4 = 0;\n    long evenMax5 = 0;\n\
    \    long oddMax5 = 0;\n    long evenMin5 = 0;\n    long oddMin5 = 0;\n    long\
    \ evenMax6 = 0;\n    long oddMax6 = 0;\n    long evenMin6 = 0;\n    long oddMin6\
    \ = 0;\n    long evenMax7 = 0;\n    long oddMax7 = 0;\n    long evenMin7 = 0;\n\
    \    long oddMin7 = 0;\n    long evenMax8 = 0;\n    long oddMax8 = 0;\n    long\
    \ evenMin8 = 0;\n    long oddMin8 = 0;\n    long evenMax9 = 0;\n    long oddMax9\
    \ = 0;\n    long evenMin9 = 0;\n    long oddMin9 = 0;\n    long evenMax10 = 0;\n\
    \    long oddMax10 = 0;\n    long evenMin10 = 0;\n    long oddMin10 = 0;\n   \
    \ long evenMax11 = 0;\n    long oddMax11 = 0;\n    long evenMin11 = 0;\n    long\
    \ oddMin11 = 0;\n    long evenMax12 = 0;\n    long oddMax12 = 0;\n    long evenMin12\
    \ = 0;\n    long oddMin12 = 0;\n    long evenMax13 = 0;\n    long oddMax13 = 0;\n\
    \    long evenMin13 = 0;\n    long oddMin13 = 0;\n    long evenMax14 = 0;\n  \
    \  long oddMax14 = 0;\n    long evenMin14 = 0;\n    long oddMin14 = 0;\n    long\
    \ evenMax15 = 0;\n    long oddMax15 = 0;\n    long evenMin15 = 0;\n    long oddMin15\
    \ = 0;\n    long evenMax16 = 0;\n    long oddMax16 = 0;\n    long evenMin16 =\
    \ 0;\n    long oddMin16 = 0;\n    long evenMax17 = 0;\n    long oddMax17 = 0;\n\
    \    long evenMin17 = 0;\n    long oddMin17 = 0;\n    long evenMax18 = 0;\n  \
    \  long oddMax18 = 0;\n    long even", "    // Write your code here\n    long\
    \ even = 0;\n    long odd = 0;\n    long eveneven = 0;\n    long evenodd = 0;\n\
    \    long oddodd = 0;\n    long eveneveneven = 0;\n    long evenoddodd = 0;\n\
    \    long oddoddeven = 0;\n    long oddoddodd = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddoddeven = 0;\n    long oddoddeveneven = 0;\n    long oddoddoddeven\
    \ = 0;\n    long eveneveneveneven = 0;\n    long evenoddoddoddeven = 0;\n    long\
    \ oddoddeveneven = 0;\n    long oddoddoddeven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddoddoddeven = 0;\n    long oddoddeveneven = 0;\n    long\
    \ oddoddoddeven = 0;\n    long eveneveneveneven = 0;\n    long evenoddoddoddeven\
    \ = 0;\n    long oddoddeveneven = 0;\n    long oddoddoddeven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddoddoddeven = 0;\n    long oddoddeveneven = 0;\n    long\
    \ oddoddoddeven = 0;\n    long eveneveneveneven = 0;\n    long evenoddoddoddeven\
    \ = 0;\n    long oddoddeveneven = 0;\n    long oddoddoddeven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddoddoddeven = 0;\n    long oddoddeveneven = 0;\n    long\
    \ oddoddoddeven = 0;\n    long eveneveneveneven = 0;\n    long evenoddoddoddeven\
    \ = 0;\n    long oddoddeveneven = 0;\n    long oddoddoddeven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddoddoddeven = 0;\n    long oddoddeveneven = 0;\n    long\
    \ oddoddoddeven = 0;\n    long eveneveneveneven = 0;\n    long evenoddoddoddeven\
    \ = 0;\n    long oddoddeveneven = 0;\n    long oddoddoddeven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddoddoddeven = 0;\n    long oddoddeveneven = 0;\n    long\
    \ oddoddoddeven = 0;\n    long eveneveneveneven = 0;\n    long evenoddoddoddeven\
    \ = 0;\n    long oddoddeveneven = 0;\n    long oddoddoddeven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddoddoddeven = 0;\n    long oddoddeveneven = 0;\n    long\
    \ oddoddoddeven = 0;\n    long eveneveneveneven = 0;\n    long evenoddoddoddeven\
    \ = 0;\n    long oddoddeveneven", '    // Your code here', "    // Write your\
    \ code here\n    ", '    // Your code here', '    // Your code here', "    //\
    \ Write your code here\n    long even = 0;\n    long odd = 0;\n    long evenCount\
    \ = 0;\n    long oddCount = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n\
    \    long evenMax = std::numeric_limits<long>::min();\n    long oddMax = std::numeric_limits<long>::min();\n\
    \    long evenMin = std::numeric_limits<long>::max();\n    long oddMin = std::numeric_limits<long>::max();\n\
    \    for (long i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 == 0) {\n\
    \            even = even + lst1[i];\n            evenCount = evenCount + 1;\n\
    \            evenSum = evenSum + lst1[i];\n            if (lst1[i] > evenMax)\
    \ {\n                evenMax = lst1[i];\n            }\n            if (lst1[i]\
    \ < evenMin) {\n                evenMin = lst1[i];\n            }\n        } else\
    \ {\n            odd = odd + lst1[i];\n            oddCount = oddCount + 1;\n\
    \            oddSum = oddSum + lst1[i];\n            if (lst1[i] > oddMax) {\n\
    \                oddMax = lst1[i];\n            }\n            if (lst1[i] < oddMin)\
    \ {\n                oddMin = lst1[i];\n            }\n        }\n    }\n    for\
    \ (long i = 0; i < lst2.size(); i++) {\n        if (lst2[i] % 2 == 0) {\n    \
    \        even = even + lst2[i];\n            evenCount = evenCount + 1;\n    \
    \        evenSum = evenSum + lst2[i];\n            if (lst2[i] > evenMax) {\n\
    \                evenMax = lst2[i];\n            }\n            if (lst2[i] <\
    \ evenMin) {\n                evenMin = lst2[i];\n            }\n        } else\
    \ {\n            odd = odd + lst2[i];\n            oddCount = oddCount + 1;\n\
    \            oddSum = oddSum + lst2[i];\n            if (lst2[i] > oddMax) {\n\
    \                oddMax = lst2[i];\n            }\n            if (lst2[i] < oddMin)\
    \ {\n                oddMin = lst2[i];\n            }\n        }\n    }\n    if\
    \ (evenCount == lst1.size()) {\n        if (evenSum == lst2.size()) {\n      \
    \      return \"YES\";\n        } else {\n            return \"NO\";\n       \
    \ }\n    } else if (oddCount == lst1.size()) {\n        if (oddSum == lst2.size())\
    \ {\n            return \"YES\";\n        } else {\n            return \"NO\"\
    ;\n        }\n    } else {\n        if (evenSum == lst2.size() && oddSum == lst1.size())\
    \ {\n            return \"YES\";\n        } else {\n            return \"NO\"\
    ;\n        }\n    }", "    // Your code here\n    long even = 0;\n    long odd\
    \ = 0;\n    long evenCount = 0;\n    long oddCount = 0;\n    long evenSum = 0;\n\
    \    long oddSum = 0;\n    long evenMin = INT_MAX;\n    long oddMin = INT_MAX;\n\
    \    long evenMax = INT_MIN;\n    long oddMax = INT_MIN;\n    long evenMinCount\
    \ = 0;\n    long oddMinCount = 0;\n    long evenMaxCount = 0;\n    long oddMaxCount\
    \ = 0;\n    long evenMinSum = 0;\n    long oddMinSum = 0;\n    long evenMaxSum\
    \ = 0;\n    long oddMaxSum = 0;\n    long evenMinMin = INT_MAX;\n    long oddMinMin\
    \ = INT_MAX;\n    long evenMaxMin = INT_MIN;\n    long oddMaxMin = INT_MIN;\n\
    \    long evenMinMaxCount = 0;\n    long oddMinMaxCount = 0;\n    long evenMaxMaxCount\
    \ = 0;\n    long oddMaxMaxCount = 0;\n    long evenMinMinSum = 0;\n    long oddMinMinSum\
    \ = 0;\n    long evenMaxMinSum = 0;\n    long oddMaxMinSum = 0;\n    long evenMinMaxSum\
    \ = 0;\n    long oddMinMaxSum = 0;\n    long evenMinMinMin = INT_MAX;\n    long\
    \ oddMinMinMin = INT_MAX;\n    long evenMaxMinMin = INT_MIN;\n    long oddMaxMinMin\
    \ = INT_MIN;\n    long evenMinMaxMinCount = 0;\n    long oddMinMaxMinCount = 0;\n\
    \    long evenMaxMaxMinCount = 0;\n    long oddMaxMaxMinCount = 0;\n    long evenMinMinMinSum\
    \ = 0;\n    long oddMinMinMinSum = 0;\n    long evenMaxMinMinSum = 0;\n    long\
    \ oddMaxMinMinSum = 0;\n    long evenMinMaxMinSum = 0;\n    long oddMinMaxMinSum\
    \ = 0;\n    long evenMinMaxMinSum = 0;\n    long oddMinMaxMinSum = 0;\n    long\
    \ evenMinMinMaxCount = 0;\n    long oddMinMinMaxCount = 0;\n    long evenMaxMinMaxCount\
    \ = 0;\n    long oddMaxMinMaxCount = 0;\n    long evenMinMinMaxSum = 0;\n    long\
    \ oddMinMinMaxSum = 0;\n    long evenMaxMinMaxSum = 0;\n    long oddMaxMinMaxSum\
    \ = 0;\n    long evenMinMinMaxSum = 0;\n    long oddMinMinMaxSum = 0;\n    long\
    \ evenMaxMinMaxSum = 0;\n    long oddMaxMinMaxSum = 0;\n    ", "    long even\
    \ = 0;\n    long odd = 0;\n    long evenCount = 0;\n    long oddCount = 0;\n \
    \   for (long i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 == 0) {\n\
    \            evenCount++;\n        } else {\n            oddCount++;\n       \
    \ }\n    }\n    for (long i = 0; i < lst2.size(); i++) {\n        if (lst2[i]\
    \ % 2 == 0) {\n            evenCount++;\n        } else {\n            oddCount++;\n\
    \        }\n    }\n    if (evenCount == lst1.size()) {\n        return \"YES\"\
    ;\n    }\n    if (oddCount == lst2.size()) {\n        return \"YES\";\n    }\n\
    \    if (evenCount > lst1.size()) {\n        return \"NO\";\n    }\n    if (oddCount\
    \ > lst2.size()) {\n        return \"NO\";\n    }\n    long evenCount2 = 0;\n\
    \    long oddCount2 = 0;\n    for (long i = 0; i < lst1.size(); i++) {\n     \
    \   if (lst1[i] % 2 == 0) {\n            evenCount2++;\n        } else {\n   \
    \         oddCount2++;\n        }\n    }\n    for (long i = 0; i < lst2.size();\
    \ i++) {\n        if (lst2[i] % 2 == 0) {\n            evenCount2++;\n       \
    \ } else {\n            oddCount2++;\n        }\n    }\n    if (evenCount2 ==\
    \ lst1.size()) {\n        return \"YES\";\n    }\n    if (oddCount2 == lst2.size())\
    \ {\n        return \"YES\";\n    }\n    if (evenCount2 > lst1.size()) {\n   \
    \     return \"NO\";\n    }\n    if (oddCount2 > lst2.size()) {\n        return\
    \ \"NO\";\n    }\n    long evenCount3 = 0;\n    long oddCount3 = 0;\n    for (long\
    \ i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 == 0) {\n          \
    \  evenCount3++;\n        } else {\n            oddCount3++;\n        }\n    }\n\
    \    for (long i = 0; i < lst2.size(); i++) {\n        if (lst2[i] % 2 == 0) {\n\
    \            evenCount3++;\n        } else {\n            oddCount3++;\n     \
    \   }\n    }\n    if (evenCount3 == lst1.size()) {\n        return \"YES\";\n\
    \    }\n    if (oddCount3 == lst2.size()) {\n        return \"YES\";\n    }\n\
    \    if (evenCount3 > lst1.size()) {\n        return \"NO\";\n    }\n    if (oddCount3\
    \ > lst2.size()) {\n        return \"NO\";\n    }\n    long evenCount4 = 0;\n\
    \    long oddCount4 = 0;\n    for (long i = 0; i < lst1.size(); i++) {\n     \
    \   if (lst1[i] % 2 == 0) {\n            evenCount4++;\n        } else {\n   \
    \         oddCount4++;\n        }\n    }\n    for (long i = 0; i < lst2.size();\
    \ i++) {\n        if (lst2[i] % 2 == 0) {\n            evenCount4++;\n       \
    \ } else {\n            oddCount4++;\n        }\n    }\n    if (even", "    //\
    \ Your code here\n    ", "    // Write your code here\n    long even = 0;\n  \
    \  long odd = 0;\n    long sum = 0;\n    long count = 0;\n    for (long i = 0;\
    \ i < lst1.size(); i++) {\n        sum += lst1[i];\n    }\n    for (long i = 0;\
    \ i < lst2.size(); i++) {\n        sum += lst2[i];\n    }\n    for (long i = 0;\
    \ i < lst1.size(); i++) {\n        if (lst1[i] % 2 == 0) {\n            even =\
    \ even + lst1[i];\n            count++;\n        } else {\n            odd = odd\
    \ + lst1[i];\n        }\n    }\n    for (long i = 0; i < lst2.size(); i++) {\n\
    \        if (lst2[i] % 2 == 0) {\n            even = even + lst2[i];\n       \
    \     count++;\n        } else {\n            odd = odd + lst2[i];\n        }\n\
    \    }\n    if (count == 0) {\n        return \"NO\";\n    }\n    if (sum % 2\
    \ == 0) {\n        return \"YES\";\n    }\n    return \"NO\";", "    // Write\
    \ your code here\n    long even = 0;\n    long odd = 0;\n    long evenCount =\
    \ 0;\n    long oddCount = 0;\n    for (long i = 0; i < lst1.size(); i++) {\n \
    \       if (lst1[i] % 2 == 0) {\n            evenCount++;\n        } else {\n\
    \            oddCount++;\n        }\n    }\n    for (long i = 0; i < lst2.size();\
    \ i++) {\n        if (lst2[i] % 2 == 0) {\n            evenCount++;\n        }\
    \ else {\n            oddCount++;\n        }\n    }\n    if (evenCount == lst1.size()\
    \ && oddCount == lst2.size()) {\n        return \"YES\";\n    } else {\n     \
    \   return \"NO\";\n    }", '    // Your code here', "    // Your code here\n\
    \    long even = 0;\n    long odd = 0;\n    long evenCount = 0;\n    long oddCount\
    \ = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n    long evenMax = lst1[0];\n\
    \    long oddMax = lst2[0];\n    long evenMin = lst1[0];\n    long oddMin = lst2[0];\n\
    \    long evenMaxSum = 0;\n    long oddMaxSum = 0;\n    long evenMinSum = 0;\n\
    \    long oddMinSum = 0;\n    long evenMaxCount = 0;\n    long oddMaxCount = 0;\n\
    \    long evenMinCount = 0;\n    long oddMinCount = 0;\n    long evenMaxSum2 =\
    \ 0;\n    long oddMaxSum2 = 0;\n    long evenMinSum2 = 0;\n    long oddMinSum2\
    \ = 0;\n    long evenMaxCount2 = 0;\n    long oddMaxCount2 = 0;\n    long evenMinCount2\
    \ = 0;\n    long oddMinCount2 = 0;\n    long evenMaxSum3 = 0;\n    long oddMaxSum3\
    \ = 0;\n    long evenMinSum3 = 0;\n    long oddMinSum3 = 0;\n    long evenMaxCount3\
    \ = 0;\n    long oddMaxCount3 = 0;\n    long evenMinCount3 = 0;\n    long oddMinCount3\
    \ = 0;\n    long evenMaxSum4 = 0;\n    long oddMaxSum4 = 0;\n    long evenMinSum4\
    \ = 0;\n    long oddMinSum4 = 0;\n    long evenMaxCount4 = 0;\n    long oddMaxCount4\
    \ = 0;\n    long evenMinCount4 = 0;\n    long oddMinCount4 = 0;\n    long evenMaxSum5\
    \ = 0;\n    long oddMaxSum5 = 0;\n    long evenMinSum5 = 0;\n    long oddMinSum5\
    \ = 0;\n    long evenMaxCount5 = 0;\n    long oddMaxCount5 = 0;\n    long evenMinCount5\
    \ = 0;\n    long oddMinCount5 = 0;\n    long evenMaxSum6 = 0;\n    long oddMaxSum6\
    \ = 0;\n    long evenMinSum6 = 0;\n    long oddMinSum6 = 0;\n    long evenMaxCount6\
    \ = 0;\n    long oddMaxCount6 = 0;\n    long evenMinCount6 = 0;\n    long oddMinCount6\
    \ = 0;\n    long evenMaxSum7 = 0;\n    long oddMaxSum7 = 0;\n    long evenMinSum7\
    \ = 0;\n    long oddMinSum7 = 0;\n    long evenMaxCount7 = 0;\n    long oddMaxCount7\
    \ = 0;\n    long evenMinCount7 = 0;\n    long oddMinCount7 = 0;\n    long evenMaxSum8\
    \ = 0;\n    long oddMaxSum8 = 0;\n    long evenMinSum8 = 0;\n    long oddMinSum",
  '    // Your code here', "    // Write your code here\n    long even = 0;\n    long\
    \ odd = 0;\n    long count = 0;\n    long sum = 0;\n    long temp = 0;\n    long\
    \ evensum = 0;\n    long oddsum = 0;\n    long evenevensum = 0;\n    long oddoddsum\
    \ = 0;\n    long evenevenevensum = 0;\n    long oddoddoddsum = 0;\n    long evenevenevenevensum\
    \ = 0;\n    long oddoddoddoddsum = 0;\n    long evenevenevenevensum = 0;\n   \
    \ long oddoddoddoddsum = 0;\n    long evenevenevenevenevensum = 0;\n    long oddoddoddoddsum\
    \ = 0;\n    long evenevenevenevenevenevensum = 0;\n    long oddoddoddsum = 0;\n\
    \    long evenevenevenevenevenevenevensum = 0;\n    long oddoddsum = 0;\n    long\
    \ evenevenevenevenevenevenevenevensum = 0;\n    long oddsum = 0;\n    long evenevenevenevenevenevenevenevenevensum\
    \ = 0;\n    long sum = 0;\n    long evenevenevenevenevenevenevenevenevenevensum\
    \ = 0;\n    long oddsum = 0;\n    long evenevenevenevenevenevenevenevenevenevenevensum\
    \ = 0;\n    long sum = 0;\n    long evenevenevenevenevenevenevenevenevenevenevenevensum\
    \ = 0;\n    long oddsum = 0;\n    long evenevenevenevenevenevenevenevenevenevenevenevenevensum\
    \ = 0;\n    long sum = 0;\n    long evenevenevenevenevenevenevenevenevenevenevenevenevenevensum\
    \ = 0;\n    long sum = 0;\n    long evenevenevenevenevenevenevenevenevenevenevenevenevenevenevensum\
    \ = 0;\n    long sum = 0;\n    long evenevenevenevenevenevenevenevenevenevenevenevenevenevenevensum\
    \ = 0;\n    long sum = 0;\n    long evenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevensum\
    \ = 0;\n    long sum = 0;\n    long evenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevensum\
    \ = 0;\n    long sum = 0;\n    long evenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevensum\
    \ = 0;\n    long sum = 0;\n    long evenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevensum\
    \ = 0;\n    long sum = 0;\n    long evenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevensum\
    \ = 0;\n    long sum = 0;\n    long eveneveneveneveneveneveneveneveneveneveneveneveneven",
  "    // Write your code here\n    long even = 0;\n    long odd = 0;\n    long evenCount\
    \ = 0;\n    long oddCount = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n\
    \    long evenMin = INT_MAX;\n    long oddMin = INT_MAX;\n    long evenMax = INT_MIN;\n\
    \    long oddMax = INT_MIN;\n    long evenMinCount = 0;\n    long oddMinCount\
    \ = 0;\n    long evenMaxCount = 0;\n    long oddMaxCount = 0;\n    long evenMinSum\
    \ = 0;\n    long oddMinSum = 0;\n    long evenMaxSum = 0;\n    long oddMaxSum\
    \ = 0;\n    long evenMinMin = INT_MAX;\n    long oddMinMin = INT_MAX;\n    long\
    \ evenMaxMin = INT_MIN;\n    long oddMaxMin = INT_MIN;\n    long evenMinMaxCount\
    \ = 0;\n    long oddMinMaxCount = 0;\n    long evenMaxMaxCount = 0;\n    long\
    \ oddMaxMaxCount = 0;\n    long evenMinMinSum = 0;\n    long oddMinMinSum = 0;\n\
    \    long evenMaxMinSum = 0;\n    long oddMaxMinSum = 0;\n    long evenMinMaxSum\
    \ = 0;\n    long oddMinMaxSum = 0;\n    long evenMinMinMin = INT_MAX;\n    long\
    \ oddMinMinMin = INT_MAX;\n    long evenMaxMinMin = INT_MIN;\n    long oddMaxMinMin\
    \ = INT_MIN;\n    long evenMinMaxMinCount = 0;\n    long oddMinMaxMinCount = 0;\n\
    \    long evenMaxMaxMinCount = 0;\n    long oddMaxMaxMinCount = 0;\n    long evenMinMinMinSum\
    \ = 0;\n    long oddMinMinMinSum = 0;\n    long evenMaxMinMinSum = 0;\n    long\
    \ oddMaxMinMinSum = 0;\n    long evenMinMaxMinSum = 0;\n    long oddMinMaxMinSum\
    \ = 0;\n    long evenMinMinMaxCount = 0;\n    long oddMinMinMaxCount = 0;\n  \
    \  long evenMaxMinMaxCount = 0;\n    long oddMaxMinMaxCount = 0;\n    long evenMinMinMaxSum\
    \ = 0;\n    long oddMinMinMaxSum = 0;\n    long evenMaxMinMaxSum = 0;\n    long\
    \ oddMaxMinMaxSum = 0;\n    long evenMinMinMaxSum = 0;\n    long oddMinMinMaxSum\
    \ = 0;\n    long evenMaxMinMaxSum = 0;\n    long oddMaxMinMaxSum = 0;\n    long\
    \ evenMinMinMinMaxCount = 0;\n    long oddMinMinMinMaxCount = 0;", '    // Your
    code here', "    // Your code here\n    ", "    // Write your code here\n    long\
    \ even = 0;\n    long odd = 0;\n    long evenCount = 0;\n    long oddCount = 0;\n\
    \    long evenSum = 0;\n    long oddSum = 0;\n    long evenMin = INT_MAX;\n  \
    \  long oddMin = INT_MAX;\n    long evenMax = INT_MIN;\n    long oddMax = INT_MIN;\n\
    \    long evenSum2 = 0;\n    long oddSum2 = 0;\n    long evenMin2 = 0;\n    long\
    \ oddMin2 = 0;\n    long evenMax2 = 0;\n    long oddMax2 = 0;\n    long evenSum3\
    \ = 0;\n    long oddSum3 = 0;\n    long evenMin3 = 0;\n    long oddMin3 = 0;\n\
    \    long evenMax3 = 0;\n    long oddMax3 = 0;\n    long evenSum4 = 0;\n    long\
    \ oddSum4 = 0;\n    long evenMin4 = 0;\n    long oddMin4 = 0;\n    long evenMax4\
    \ = 0;\n    long oddMax4 = 0;\n    long evenSum5 = 0;\n    long oddSum5 = 0;\n\
    \    long evenMin5 = 0;\n    long oddMin5 = 0;\n    long evenMax5 = 0;\n    long\
    \ oddMax5 = 0;\n    long evenSum6 = 0;\n    long oddSum6 = 0;\n    long evenMin6\
    \ = 0;\n    long oddMin6 = 0;\n    long evenMax6 = 0;\n    long oddMax6 = 0;\n\
    \    long evenSum7 = 0;\n    long oddSum7 = 0;\n    long evenMin7 = 0;\n    long\
    \ oddMin7 = 0;\n    long evenMax7 = 0;\n    long oddMax7 = 0;\n    long evenSum8\
    \ = 0;\n    long oddSum8 = 0;\n    long evenMin8 = 0;\n    long oddMin8 = 0;\n\
    \    long evenMax8 = 0;\n    long oddMax8 = 0;\n    long evenSum9 = 0;\n    long\
    \ oddSum9 = 0;\n    long evenMin9 = 0;\n    long oddMin9 = 0;\n    long evenMax9\
    \ = 0;\n    long oddMax9 = 0;\n    long evenSum10 = 0;\n    long oddSum10 = 0;\n\
    \    long evenMin10 = 0;\n    long oddMin10 = 0;\n    long evenMax10 = 0;\n  \
    \  long oddMax10 = 0;\n    long evenSum11 = 0;\n    long oddSum11 = 0;\n    long\
    \ evenMin11 = 0;\n    long oddMin11 = 0;\n    long evenMax11 = 0;\n    long oddMax11\
    \ = 0;\n    long evenSum12 = 0;\n    long oddSum12 = 0;\n    long evenMin12 =\
    \ 0;\n    long oddMin12 = 0;\n    long evenMax12 = 0;\n    long oddMax12 = 0;",
  "    // Your code here\n    long even = 0;\n    long odd = 0;\n    long sum = 0;\n\
    \    long count = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long\
    \ l = 0;\n    long m = 0;\n    long n = 0;\n    long o = 0;\n    long p = 0;\n\
    \    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long\
    \ u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n\
    \    long z = 0;\n    long A = 0;\n    long B = 0;\n    long C = 0;\n    long\
    \ D = 0;\n    long E = 0;\n    long F = 0;\n    long G = 0;\n    long H = 0;\n\
    \    long I = 0;\n    long J = 0;\n    long K = 0;\n    long L = 0;\n    long\
    \ M = 0;\n    long N = 0;\n    long O = 0;\n    long P = 0;\n    long Q = 0;\n\
    \    long R = 0;\n    long S = 0;\n    long T = 0;\n    long U = 0;\n    long\
    \ V = 0;\n    long W = 0;\n    long X = 0;\n    long Y = 0;\n    long Z = 0;\n\
    \    long AA = 0;\n    long BB = 0;\n    long CC = 0;\n    long DD = 0;\n    long\
    \ EE = 0;\n    long FF = 0;\n    long GG = 0;\n    long HH = 0;\n    long II =\
    \ 0;\n    long JJ = 0;\n    long KK = 0;\n    long LL = 0;\n    long MM = 0;\n\
    \    long NN = 0;\n    long OO = 0;\n    long PP = 0;\n    long QQ = 0;\n    long\
    \ RR = 0;\n    long SS = 0;\n    long TT = 0;\n    long UU = 0;\n    long VV =\
    \ 0;\n    long WW = 0;\n    long XX = 0;\n    long YY = 0;\n    long ZZ = 0;\n\
    \    long AAA = 0;\n    long BBB = 0;\n    long CCC = 0;\n    long DDD = 0;\n\
    \    long EEE = 0;\n    long FFF = 0;\n    long GGG = 0;\n    long HHH = 0;\n\
    \    long III = 0;\n    long JJJ = 0;\n    long KKK = 0;\n    long LLL = 0;\n\
    \    long MMM = 0;\n    long NNN = 0;\n    long OOO = 0;\n    long PPP = 0;\n\
    \    long QQQ = 0;\n    long RRR = 0;\n    long SSS = 0;\n    long TTT = 0;\n\
    \    long UUU = 0;\n    long VVV = 0;\n    long WWW = 0;\n    long XXX", "   \
    \ // Write your code here\n    long even = 0;\n    long odd = 0;\n    long evenCount\
    \ = 0;\n    long oddCount = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n\
    \    long evenMax = lst1[0];\n    long oddMax = lst2[0];\n    long evenMin = lst1[0];\n\
    \    long oddMin = lst2[0];\n    long evenMax2 = lst1[0];\n    long oddMax2 =\
    \ lst2[0];\n    long evenMin2 = lst1[0];\n    long oddMin2 = lst2[0];\n    long\
    \ evenMax3 = lst1[0];\n    long oddMax3 = lst2[0];\n    long evenMin3 = lst1[0];\n\
    \    long oddMin3 = lst2[0];\n    long evenMax4 = lst1[0];\n    long oddMax4 =\
    \ lst2[0];\n    long evenMin4 = lst1[0];\n    long oddMin4 = lst2[0];\n    long\
    \ evenMax5 = lst1[0];\n    long oddMax5 = lst2[0];\n    long evenMin5 = lst1[0];\n\
    \    long oddMin5 = lst2[0];\n    long evenMax6 = lst1[0];\n    long oddMax6 =\
    \ lst2[0];\n    long evenMin6 = lst1[0];\n    long oddMin6 = lst2[0];\n    long\
    \ evenMax7 = lst1[0];\n    long oddMax7 = lst2[0];\n    long evenMin7 = lst1[0];\n\
    \    long oddMin7 = lst2[0];\n    long evenMax8 = lst1[0];\n    long oddMax8 =\
    \ lst2[0];\n    long evenMin8 = lst1[0];\n    long oddMin8 = lst2[0];\n    long\
    \ evenMax9 = lst1[0];\n    long oddMax9 = lst2[0];\n    long evenMin9 = lst1[0];\n\
    \    long oddMin9 = lst2[0];\n    long evenMax10 = lst1[0];\n    long oddMax10\
    \ = lst2[0];\n    long evenMin10 = lst1[0];\n    long oddMin10 = lst2[0];\n  \
    \  long evenMax11 = lst1[0];\n    long oddMax11 = lst2[0];\n    long evenMin11\
    \ = lst1[0];\n    long oddMin11 = lst2[0];\n    long evenMax12 = lst1[0];\n  \
    \  long oddMax12 = lst2[0];\n    long evenMin12 = lst1[0];\n    long oddMin12\
    \ = lst2[0];\n    long evenMax13 = lst1[0];\n    long oddMax13 = lst2[0];\n  \
    \  long evenMin13 = lst1[0];\n    long oddMin13 = lst2[0];\n    ", '    // Your
    code here', "    // Write your code here\n    long even = 0;\n    long odd = 0;\n\
    \    long evenCount = 0;\n    long oddCount = 0;\n    long evenSum = 0;\n    long\
    \ oddSum = 0;\n    long evenMax = lst1[0];\n    long oddMax = lst1[0];\n    long\
    \ evenMin = lst1[0];\n    long oddMin = lst1[0];\n    long evenMax2 = lst2[0];\n\
    \    long oddMax2 = lst2[0];\n    long evenMin2 = lst2[0];\n    long oddMin2 =\
    \ lst2[0];\n    long evenMax3 = lst1[0];\n    long oddMax3 = lst1[0];\n    long\
    \ evenMin3 = lst1[0];\n    long oddMin3 = lst1[0];\n    long evenMax4 = lst2[0];\n\
    \    long oddMax4 = lst2[0];\n    long evenMin4 = lst2[0];\n    long oddMin4 =\
    \ lst2[0];\n    long evenMax5 = lst1[0];\n    long oddMax5 = lst1[0];\n    long\
    \ evenMin5 = lst1[0];\n    long oddMin5 = lst1[0];\n    long evenMax6 = lst2[0];\n\
    \    long oddMax6 = lst2[0];\n    long evenMin6 = lst2[0];\n    long oddMin6 =\
    \ lst2[0];\n    long evenMax7 = lst1[0];\n    long oddMax7 = lst1[0];\n    long\
    \ evenMin7 = lst1[0];\n    long oddMin7 = lst1[0];\n    long evenMax8 = lst2[0];\n\
    \    long oddMax8 = lst2[0];\n    long evenMin8 = lst2[0];\n    long oddMin8 =\
    \ lst2[0];\n    long evenMax9 = lst1[0];\n    long oddMax9 = lst1[0];\n    long\
    \ evenMin9 = lst1[0];\n    long oddMin9 = lst1[0];\n    long evenMax10 = lst2[0];\n\
    \    long oddMax10 = lst2[0];\n    long evenMin10 = lst2[0];\n    long oddMin10\
    \ = lst2[0];\n    long evenMax11 = lst1[0];\n    long oddMax11 = lst1[0];\n  \
    \  long evenMin11 = lst1[0];\n    long oddMin11 = lst1[0];\n    long evenMax12\
    \ = lst2[0];\n    long oddMax12 = lst2[0];\n    long evenMin12 = lst2[0];\n  \
    \  long oddMin12 = lst2[0];\n    long evenMax13 = lst1[0];\n    long oddMax13\
    \ = lst1[0];\n    long evenMin13 = lst1[0];\n    long oddMin13 = lst1[0];\n  \
    \  ", '    // Your code here', "    // Your code here\n    long even = 0;\n  \
    \  long odd = 0;\n    long evenCount = 0;\n    long oddCount = 0;\n    long evenSum\
    \ = 0;\n    long oddSum = 0;\n    long evenMax = lst1[0];\n    long oddMax = lst1[0];\n\
    \    long evenMin = lst1[0];\n    long oddMin = lst1[0];\n    long evenMax2 =\
    \ lst2[0];\n    long oddMax2 = lst2[0];\n    long evenMin2 = lst2[0];\n    long\
    \ oddMin2 = lst2[0];\n    long evenMax3 = lst2[0];\n    long oddMax3 = lst2[0];\n\
    \    long evenMin3 = lst2[0];\n    long oddMin3 = lst2[0];\n    long evenMax4\
    \ = lst2[0];\n    long oddMax4 = lst2[0];\n    long evenMin4 = lst2[0];\n    long\
    \ oddMin4 = lst2[0];\n    long evenMax5 = lst2[0];\n    long oddMax5 = lst2[0];\n\
    \    long evenMin5 = lst2[0];\n    long oddMin5 = lst2[0];\n    long evenMax6\
    \ = lst2[0];\n    long oddMax6 = lst2[0];\n    long evenMin6 = lst2[0];\n    long\
    \ oddMin6 = lst2[0];\n    long evenMax7 = lst2[0];\n    long oddMax7 = lst2[0];\n\
    \    long evenMin7 = lst2[0];\n    long oddMin7 = lst2[0];\n    long evenMax8\
    \ = lst2[0];\n    long oddMax8 = lst2[0];\n    long evenMin8 = lst2[0];\n    long\
    \ oddMin8 = lst2[0];\n    long evenMax9 = lst2[0];\n    long oddMax9 = lst2[0];\n\
    \    long evenMin9 = lst2[0];\n    long oddMin9 = lst2[0];\n    long evenMax10\
    \ = lst2[0];\n    long oddMax10 = lst2[0];\n    long evenMin10 = lst2[0];\n  \
    \  long oddMin10 = lst2[0];\n    long evenMax11 = lst2[0];\n    long oddMax11\
    \ = lst2[0];\n    long evenMin11 = lst2[0];\n    long oddMin11 = lst2[0];\n  \
    \  long evenMax12 = lst2[0];\n    long oddMax12 = lst2[0];\n    long evenMin12\
    \ = lst2[0];\n    long oddMin12 = lst2[0];\n    long evenMax13 = lst2[0];\n  \
    \  long oddMax13 = lst2[0];\n    long evenMin13 = lst2[0];\n    long oddMin13\
    \ = lst2[0];\n    ", '    // Your code here', '    // Your code here', "    //\
    \ Your code here\n    ", "    // Your code here\n    long even = 0;\n    long\
    \ odd = 0;\n    for (long i = 0; i < lst1.size(); i++) {\n        if (lst1[i]\
    \ % 2 == 0) {\n            even = even + lst1[i];\n        }\n        else {\n\
    \            odd = odd + lst1[i];\n        }\n    }\n    for (long i = 0; i <\
    \ lst2.size(); i++) {\n        if (lst2[i] % 2 == 0) {\n            even = even\
    \ + lst2[i];\n        }\n        else {\n            odd = odd + lst2[i];\n  \
    \      }\n    }\n    if (even > odd) {\n        return \"NO\";\n    }\n    else\
    \ {\n        return \"YES\";\n    }", "    // Your code here\n    long even =\
    \ 0;\n    long odd = 0;\n    for (long i = 0; i < lst1.size(); i++) {\n      \
    \  if (lst1[i] % 2 == 0) {\n            even = even + lst1[i];\n        }\n  \
    \      else {\n            odd = odd + lst1[i];\n        }\n    }\n    for (long\
    \ i = 0; i < lst2.size(); i++) {\n        if (lst2[i] % 2 == 0) {\n          \
    \  even = even + lst2[i];\n        }\n        else {\n            odd = odd +\
    \ lst2[i];\n        }\n    }\n    if (even == odd) {\n        return \"YES\";\n\
    \    }\n    else {\n        return \"NO\";\n    }", "    // Your code here\n \
    \   long even = 0;\n    long odd = 0;\n    long even2 = 0;\n    long odd2 = 0;\n\
    \    long even3 = 0;\n    long odd3 = 0;\n    long even4 = 0;\n    long odd4 =\
    \ 0;\n    long even5 = 0;\n    long odd5 = 0;\n    long even6 = 0;\n    long odd6\
    \ = 0;\n    long even7 = 0;\n    long odd7 = 0;\n    long even8 = 0;\n    long\
    \ odd8 = 0;\n    long even9 = 0;\n    long odd9 = 0;\n    long even10 = 0;\n \
    \   long odd10 = 0;\n    long even11 = 0;\n    long odd11 = 0;\n    long even12\
    \ = 0;\n    long odd12 = 0;\n    long even13 = 0;\n    long odd13 = 0;\n    long\
    \ even14 = 0;\n    long odd14 = 0;\n    long even15 = 0;\n    long odd15 = 0;\n\
    \    long even16 = 0;\n    long odd16 = 0;\n    long even17 = 0;\n    long odd17\
    \ = 0;\n    long even18 = 0;\n    long odd18 = 0;\n    long even19 = 0;\n    long\
    \ odd19 = 0;\n    long even20 = 0;\n    long odd20 = 0;\n    long even21 = 0;\n\
    \    long odd21 = 0;\n    long even22 = 0;\n    long odd22 = 0;\n    long even23\
    \ = 0;\n    long odd23 = 0;\n    long even24 = 0;\n    long odd24 = 0;\n    long\
    \ even25 = 0;\n    long odd25 = 0;\n    long even26 = 0;\n    long odd26 = 0;\n\
    \    long even27 = 0;\n    long odd27 = 0;\n    long even28 = 0;\n    long odd28\
    \ = 0;\n    long even29 = 0;\n    long odd29 = 0;\n    long even30 = 0;\n    long\
    \ odd30 = 0;\n    long even31 = 0;\n    long odd31 = 0;\n    long even32 = 0;\n\
    \    long odd32 = 0;\n    long even33 = 0;\n    long odd33 = 0;\n    long even34\
    \ = 0;\n    long odd34 = 0;\n    long even35 = 0;\n    long odd35 = 0;\n    long\
    \ even36 = 0;\n    long odd36 = 0;\n    long even37 = 0;\n    long odd37 = 0;\n\
    \    long even38 = 0;\n    long odd38 = 0;\n    long even39 = 0;\n    long odd39\
    \ = 0;\n    long even40 = 0;\n    long odd40 = 0;\n    long even41 = 0;\n    long\
    \ odd41 = 0;\n    long even42 = 0;\n    long odd42 = 0;\n    long even43 = 0;\n\
    \    long odd43 = 0;\n    ", "    // Your code here\n    long even = 0;\n    long\
    \ odd = 0;\n    long sum = 0;\n    long temp = 0;\n    long count = 0;\n    for\
    \ (long i = 0; i < lst1.size(); i++) {\n        sum += lst1[i];\n    }\n    for\
    \ (long i = 0; i < lst2.size(); i++) {\n        sum += lst2[i];\n    }\n    for\
    \ (long i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 == 0) {\n    \
    \        even = even + lst1[i];\n        }\n    }\n    for (long i = 0; i < lst2.size();\
    \ i++) {\n        if (lst2[i] % 2 == 0) {\n            odd = odd + lst2[i];\n\
    \        }\n    }\n    if (sum == even) {\n        return \"YES\";\n    }\n  \
    \  if (sum == odd) {\n        return \"NO\";\n    }\n    for (long i = 0; i <\
    \ lst1.size(); i++) {\n        if (lst1[i] % 2 == 0) {\n            temp = lst1[i];\n\
    \            lst1[i] = lst2[i];\n            lst2[i] = temp;\n            count++;\n\
    \        }\n    }\n    if (count == 0) {\n        return \"NO\";\n    }\n    return\
    \ \"YES\";", "    // Write your code here\n    long even = 0;\n    long odd =\
    \ 0;\n    long evenCount = 0;\n    long oddCount = 0;\n    long evenSum = 0;\n\
    \    long oddSum = 0;\n    long evenMin = INT_MAX;\n    long oddMin = INT_MAX;\n\
    \    long evenMax = INT_MIN;\n    long oddMax = INT_MIN;\n    long evenMinIndex\
    \ = -1;\n    long oddMinIndex = -1;\n    long evenMaxIndex = -1;\n    long oddMaxIndex\
    \ = -1;\n    long evenSumIndex = -1;\n    long oddSumIndex = -1;\n    long evenMinIndex\
    \ = -1;\n    long oddMinIndex = -1;\n    long evenMaxIndex = -1;\n    long oddMaxIndex\
    \ = -1;\n    long evenSumIndex = -1;\n    long oddSumIndex = -1;\n    long evenSum\
    \ = INT_MAX;\n    long oddSum = INT_MAX;\n    long evenMin = INT_MAX;\n    long\
    \ oddMin = INT_MAX;\n    long evenMax = INT_MIN;\n    long oddMax = INT_MIN;\n\
    \    long evenMinIndex = -1;\n    long oddMinIndex = -1;\n    long evenMaxIndex\
    \ = -1;\n    long oddMaxIndex = -1;\n    long evenSumIndex = -1;\n    long oddSumIndex\
    \ = -1;\n    long evenSum = INT_MAX;\n    long oddSum = INT_MAX;\n    long evenMin\
    \ = INT_MAX;\n    long oddMin = INT_MAX;\n    long evenMax = INT_MIN;\n    long\
    \ oddMax = INT_MIN;\n    long evenMinIndex = -1;\n    long oddMinIndex = -1;\n\
    \    long evenMaxIndex = -1;\n    long oddMaxIndex = -1;\n    long evenSumIndex\
    \ = -1;\n    long oddSumIndex = -1;\n    long evenSum = INT_MAX;\n    long oddSum\
    \ = INT_MAX;\n    long evenMin = INT_MAX;\n    long oddMin = INT_MAX;\n    long\
    \ evenMax = INT_MIN;\n    long oddMax = INT_MIN;\n    long evenMinIndex = -1;\n\
    \    long oddMinIndex = -1;\n    long evenMaxIndex = -1;\n    long oddMaxIndex\
    \ = -1;\n    long evenSumIndex = -1;\n    long oddSumIndex = -1;\n    long evenSum\
    \ = INT_MAX;\n    long oddSum = INT_MAX;\n    long evenMin = INT_MAX;\n    long\
    \ oddMin = INT_MAX;\n    long evenMax = INT_MIN;\n    long oddMax = INT_MIN;\n\
    \    long evenMinIndex = -1;\n    long oddMin", '    // Your code here', "   \
    \ long even = 0;\n    long odd = 0;\n    long temp = 0;\n    long count = 0;\n\
    \    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long\
    \ m = 0;\n    long n = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n\
    \    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long\
    \ v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n\
    \    long A = 0;\n    long B = 0;\n    long C = 0;\n    long D = 0;\n    long\
    \ E = 0;\n    long F = 0;\n    long G = 0;\n    long H = 0;\n    long I = 0;\n\
    \    long J = 0;\n    long K = 0;\n    long L = 0;\n    long M = 0;\n    long\
    \ N = 0;\n    long O = 0;\n    long P = 0;\n    long Q = 0;\n    long R = 0;\n\
    \    long S = 0;\n    long T = 0;\n    long U = 0;\n    long V = 0;\n    long\
    \ W = 0;\n    long X = 0;\n    long Y = 0;\n    long Z = 0;\n    long AA = 0;\n\
    \    long BB = 0;\n    long CC = 0;\n    long DD = 0;\n    long EE = 0;\n    long\
    \ FF = 0;\n    long GG = 0;\n    long HH = 0;\n    long II = 0;\n    long JJ =\
    \ 0;\n    long KK = 0;\n    long LL = 0;\n    long MM = 0;\n    long NN = 0;\n\
    \    long OO = 0;\n    long PP = 0;\n    long QQ = 0;\n    long RR = 0;\n    long\
    \ SS = 0;\n    long TT = 0;\n    long UU = 0;\n    long VV = 0;\n    long WW =\
    \ 0;\n    long XX = 0;\n    long YY = 0;\n    long ZZ = 0;\n    long AAA = 0;\n\
    \    long BBB = 0;\n    long CCC = 0;\n    long DDD = 0;\n    long EEE = 0;\n\
    \    long FFF = 0;\n    long GGG = 0;\n    long HHH = 0;\n    long III = 0;\n\
    \    long JJJ = 0;\n    long KKK = 0;\n    long LLL = 0;\n    long MMM = 0;\n\
    \    long NNN = 0;\n    long OOO = 0;\n    long PPP = 0;\n    long QQQ = 0;\n\
    \    long RRR = 0;\n    long SSS = 0;\n    long TTT = 0;\n    long UUU = 0;\n\
    \    long VVV = 0;\n    long WWW = 0;\n    long XXX = 0;\n    long YYY", "   \
    \ // Write your code here\n    long even = 0;\n    long odd = 0;\n    long evenCount\
    \ = 0;\n    long oddCount = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n\
    \    long evenMax = std::numeric_limits<long>::min();\n    long oddMax = std::numeric_limits<long>::min();\n\
    \    long evenMin = std::numeric_limits<long>::max();\n    long oddMin = std::numeric_limits<long>::max();\n\
    \    long evenMinSum = std::numeric_limits<long>::max();\n    long oddMinSum =\
    \ std::numeric_limits<long>::max();\n    long evenMaxSum = std::numeric_limits<long>::max();\n\
    \    long oddMaxSum = std::numeric_limits<long>::max();\n    long evenMinCount\
    \ = std::numeric_limits<long>::max();\n    long oddMinCount = std::numeric_limits<long>::max();\n\
    \    long evenMaxCount = std::numeric_limits<long>::max();\n    long oddMaxCount\
    \ = std::numeric_limits<long>::max();\n    long evenMinSumCount = std::numeric_limits<long>::max();\n\
    \    long oddMinSumCount = std::numeric_limits<long>::max();\n    long evenMaxSumCount\
    \ = std::numeric_limits<long>::max();\n    long oddMaxSumCount = std::numeric_limits<long>::max();\n\
    \    long evenMinCountSum = std::numeric_limits<long>::max();\n    long oddMinCountSum\
    \ = std::numeric_limits<long>::max();\n    long evenMaxCountSum = std::numeric_limits<long>::max();\n\
    \    long oddMaxCountSum = std::numeric_limits<long>::max();\n    long evenMinSumCountSum\
    \ = std::numeric_limits<long>::max();\n    long oddMinSumCountSum = std::numeric_limits<long>::max();\n\
    \    long evenMaxSumCountSum = std::numeric_limits<long>::max();\n    long oddMaxSumCountSum\
    \ = std::numeric_limits<long>::max();\n    long evenMinCountSumCount = std::numeric_limits<long>::max();\n\
    \    long oddMinCountSumCount = std::numeric_limits<long>::max();\n    long evenMaxCountSumCount\
    \ = std::numeric_limits<long>::max();\n    long oddMaxCountSumCount = std::numeric_limits<long>::max();\n\
    \    long evenMinSumCountSumCount = std::numeric_limits<long>::max();\n    long\
    \ oddMinSumCountSumCount = std::numeric_limits<long>::max();\n    long evenMaxSumCountSumCount\
    \ = std::numeric_limits", "    // Your code here\n    long even = 0;\n    long\
    \ odd = 0;\n    long evenCount = 0;\n    long oddCount = 0;\n    long evenSum\
    \ = 0;\n    long oddSum = 0;\n    long evenMin = lst1[0];\n    long oddMin = lst1[0];\n\
    \    long evenMax = lst1[0];\n    long oddMax = lst1[0];\n    for (long i = 0;\
    \ i < lst1.size(); i++) {\n        if (lst1[i] % 2 == 0) {\n            evenCount++;\n\
    \            evenSum += lst1[i];\n            if (lst1[i] < evenMin) {\n     \
    \           evenMin = lst1[i];\n            }\n            if (lst1[i] > evenMax)\
    \ {\n                evenMax = lst1[i];\n            }\n        } else {\n   \
    \         oddCount++;\n            oddSum += lst1[i];\n            if (lst1[i]\
    \ < oddMin) {\n                oddMin = lst1[i];\n            }\n            if\
    \ (lst1[i] > oddMax) {\n                oddMax = lst1[i];\n            }\n   \
    \     }\n    }\n    long evenMinSum = 0;\n    long evenMaxSum = 0;\n    long oddMinSum\
    \ = 0;\n    long oddMaxSum = 0;\n    for (long i = 0; i < lst2.size(); i++) {\n\
    \        if (lst2[i] % 2 == 0) {\n            evenCount++;\n            evenSum\
    \ += lst2[i];\n            if (lst2[i] < evenMin) {\n                evenMin =\
    \ lst2[i];\n            }\n            if (lst2[i] > evenMax) {\n            \
    \    evenMax = lst2[i];\n            }\n        } else {\n            oddCount++;\n\
    \            oddSum += lst2[i];\n            if (lst2[i] < oddMin) {\n       \
    \         oddMin = lst2[i];\n            }\n            if (lst2[i] > oddMax)\
    \ {\n                oddMax = lst2[i];\n            }\n        }\n    }\n    if\
    \ (evenCount == 0) {\n        return \"NO\";\n    }\n    if (oddCount == 0) {\n\
    \        return \"NO\";\n    }\n    if (evenSum == evenMaxSum) {\n        if (oddSum\
    \ == oddMaxSum) {\n            if (evenMin == evenMax) {\n                return\
    \ \"YES\";\n            } else {\n                return \"NO\";\n           \
    \ }\n        } else {\n            return \"NO\";\n        }\n    } else {\n \
    \       return \"NO\";\n    }", '    // Your code here', "    // Write your code\
    \ here\n    long even = 0;\n    long odd = 0;\n    for (long i = 0; i < lst1.size();\
    \ i++) {\n        if (lst1[i] % 2 == 0) {\n            even = even + lst1[i];\n\
    \        } else {\n            odd = odd + lst1[i];\n        }\n    }\n    for\
    \ (long i = 0; i < lst2.size(); i++) {\n        if (lst2[i] % 2 == 0) {\n    \
    \        even = even + lst2[i];\n        } else {\n            odd = odd + lst2[i];\n\
    \        }\n    }\n    if (even > odd) {\n        return \"NO\";\n    } else {\n\
    \        return \"YES\";\n    }", '    // Your code here', "    // Write your\
    \ code here\n    long even = 0;\n    long odd = 0;\n    long evenCount = 0;\n\
    \    long oddCount = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n    long\
    \ evenMax = lst1[0];\n    long oddMax = lst1[0];\n    long evenMin = lst1[0];\n\
    \    long oddMin = lst1[0];\n    long evenMax2 = lst2[0];\n    long oddMax2 =\
    \ lst2[0];\n    long evenMin2 = lst2[0];\n    long oddMin2 = lst2[0];\n    long\
    \ evenMax3 = lst2[0];\n    long oddMax3 = lst2[0];\n    long evenMin3 = lst2[0];\n\
    \    long oddMin3 = lst2[0];\n    long evenMax4 = lst2[0];\n    long oddMax4 =\
    \ lst2[0];\n    long evenMin4 = lst2[0];\n    long oddMin4 = lst2[0];\n    long\
    \ evenMax5 = lst2[0];\n    long oddMax5 = lst2[0];\n    long evenMin5 = lst2[0];\n\
    \    long oddMin5 = lst2[0];\n    long evenMax6 = lst2[0];\n    long oddMax6 =\
    \ lst2[0];\n    long evenMin6 = lst2[0];\n    long oddMin6 = lst2[0];\n    long\
    \ evenMax7 = lst2[0];\n    long oddMax7 = lst2[0];\n    long evenMin7 = lst2[0];\n\
    \    long oddMin7 = lst2[0];\n    long evenMax8 = lst2[0];\n    long oddMax8 =\
    \ lst2[0];\n    long evenMin8 = lst2[0];\n    long oddMin8 = lst2[0];\n    long\
    \ evenMax9 = lst2[0];\n    long oddMax9 = lst2[0];\n    long evenMin9 = lst2[0];\n\
    \    long oddMin9 = lst2[0];\n    long evenMax10 = lst2[0];\n    long oddMax10\
    \ = lst2[0];\n    long evenMin10 = lst2[0];\n    long oddMin10 = lst2[0];\n  \
    \  long evenMax11 = lst2[0];\n    long oddMax11 = lst2[0];\n    long evenMin11\
    \ = lst2[0];\n    long oddMin11 = lst2[0];\n    long evenMax12 = lst2[0];\n  \
    \  long oddMax12 = lst2[0];\n    long evenMin12 = lst2[0];\n    long oddMin12\
    \ = lst2[0];\n    long evenMax13 = lst2[0];\n    long oddMax13 = lst2[0];\n  \
    \  long evenMin13 = lst2[0];\n    long oddMin13 = lst2[0];\n    ", "    // Write\
    \ your code here\n    long even = 0;\n    long odd = 0;\n    long evenCount =\
    \ 0;\n    long oddCount = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n  \
    \  long evenMax = lst1[0];\n    long oddMax = lst1[0];\n    long evenMin = lst1[0];\n\
    \    long oddMin = lst1[0];\n    long evenMax2 = lst2[0];\n    long oddMax2 =\
    \ lst2[0];\n    long evenMin2 = lst2[0];\n    long oddMin2 = lst2[0];\n    for\
    \ (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] > evenMax) {\n    \
    \        evenMax = lst1[i];\n            evenMax2 = lst2[i];\n        }\n    \
    \    if (lst1[i] < evenMin) {\n            evenMin = lst1[i];\n            evenMin2\
    \ = lst2[i];\n        }\n        if (lst1[i] > oddMax) {\n            oddMax =\
    \ lst1[i];\n            oddMax2 = lst2[i];\n        }\n        if (lst1[i] < oddMin)\
    \ {\n            oddMin = lst1[i];\n            oddMin2 = lst2[i];\n        }\n\
    \    }\n    for (int i = 0; i < lst2.size(); i++) {\n        if (lst2[i] > evenMax2)\
    \ {\n            evenMax2 = lst2[i];\n        }\n        if (lst2[i] < evenMin2)\
    \ {\n            evenMin2 = lst2[i];\n        }\n        if (lst2[i] > oddMax2)\
    \ {\n            oddMax2 = lst2[i];\n        }\n        if (lst2[i] < oddMin2)\
    \ {\n            oddMin2 = lst2[i];\n        }\n    }\n    for (int i = 0; i <\
    \ lst1.size(); i++) {\n        if (lst1[i] > evenMax2) {\n            evenMax2\
    \ = lst2[i];\n        }\n        if (lst1[i] < evenMin2) {\n            evenMin2\
    \ = lst2[i];\n        }\n        if (lst1[i] > oddMax2) {\n            oddMax2\
    \ = lst2[i];\n        }\n        if (lst1[i] < oddMin2) {\n            oddMin2\
    \ = lst2[i];\n        }\n    }\n    for (int i = 0; i < lst2.size(); i++) {\n\
    \        if (lst2[i] > evenMax2) {\n            evenMax2 = lst2[i];\n        }\n\
    \        if (lst2[i] < evenMin2) {\n            evenMin2 = lst2[i];\n        }\n\
    \        if (lst2[i] > oddMax2) {\n            oddMax2 = lst2[i];\n        }\n\
    \        if (lst2[i] < oddMin2) {\n            oddMin2 = lst2[i];\n        }\n\
    \    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] > evenMax2)\
    \ {\n            evenMax2 = lst2[i];\n        }\n        if (lst1", "    // Your\
    \ code here\n    long even = 0;\n    long odd = 0;\n    long even2 = 0; \n   \
    \ long odd2 = 0;\n    long even3 = 0; \n    long odd3 = 0;\n    long even4 = 0;\
    \ \n    long odd4 = 0;\n    long even5 = 0;\n    long odd5 = 0;\n    long even6\
    \ = 0; \n    long odd6 = 0;\n    long even7 = 0; \n    long odd7 = 0;\n    long\
    \ even8 = 0; \n    long odd8 = 0;\n    long even9 = 0; \n    long odd9 = 0;\n\
    \    long even10 = 0; \n    long odd10 = 0;\n    long even11 = 0; \n    long odd11\
    \ = 0;\n    long even12 = 0; \n    long odd12 = 0;\n    long even13 = 0; \n  \
    \  long odd13 = 0;\n    long even14 = 0; \n    long odd14 = 0;\n    long even15\
    \ = 0; \n    long odd15 = 0;\n    long even16 = 0; \n    long odd16 = 0;\n   \
    \ long even17 = 0; \n    long odd17 = 0;\n    long even18 = 0; \n    long odd18\
    \ = 0;\n    long even19 = 0; \n    long odd19 = 0;\n    long even20 = 0; \n  \
    \  long odd20 = 0;\n    long even21 = 0; \n    long odd21 = 0;\n    long even22\
    \ = 0; \n    long odd22 = 0;\n    long even23 = 0; \n    long odd23 = 0;\n   \
    \ long even24 = 0; \n    long odd24 = 0;\n    long even25 = 0; \n    long odd25\
    \ = 0;\n    long even26 = 0; \n    long odd26 = 0;\n    long even27 = 0; \n  \
    \  long odd27 = 0;\n    long even28 = 0; \n    long odd28 = 0;\n    long even29\
    \ = 0; \n    long odd29 = 0;\n    long even30 = 0; \n    long odd30 = 0;\n   \
    \ long even31 = 0; \n    long odd31 = 0;\n    long even32 = 0; \n    long odd32\
    \ = 0;\n    long even33 = 0; \n    long odd33 = 0;\n    long even34 = 0; \n  \
    \  long odd34 = 0;\n    long even35 = 0; \n    long odd35 = 0;\n    long even36\
    \ = 0; \n    long odd36 = 0;\n    long even37 = 0; \n    long odd37 = 0;\n   \
    \ long even38 = 0; \n    long odd38 = 0;\n    long even39 = 0; \n    long odd39\
    \ = 0;\n    long even40 = 0; \n    long odd40 = 0;\n    long even41 = 0; \n  \
    \  long odd41 = 0;\n    long even42 = 0; \n    long odd42 = 0;\n    long even43\
    \ = 0; \n    long odd43", "    // Your code here\n    std::vector<long> even;\n\
    \    for(long i=0;i<lst1.size();i++){\n        if(lst1[i]%2==0){\n           \
    \ even.push_back(lst1[i]);\n        }\n    }\n    for(long i=0;i<lst2.size();i++){\n\
    \        if(lst2[i]%2==0){\n            even.push_back(lst2[i]);\n        }\n\
    \    }\n    if(even.size()==lst1.size()){\n        return \"YES\";\n    }\n  \
    \  return \"NO\";", "    // Write your code here\n    long even = 0;\n    long\
    \ odd = 0;\n    long even2 = 0;\n    long odd2 = 0;\n    long even3 = 0;\n   \
    \ long odd3 = 0;\n    long even4 = 0;\n    long odd4 = 0;\n    long even5 = 0;\n\
    \    long odd5 = 0;\n    long even6 = 0;\n    long odd6 = 0;\n    long even7 =\
    \ 0;\n    long odd7 = 0;\n    long even8 = 0;\n    long odd8 = 0;\n    long even9\
    \ = 0;\n    long odd9 = 0;\n    long even10 = 0;\n    long odd10 = 0;\n    long\
    \ even11 = 0;\n    long odd11 = 0;\n    long even12 = 0;\n    long odd12 = 0;\n\
    \    long even13 = 0;\n    long odd13 = 0;\n    long even14 = 0;\n    long odd14\
    \ = 0;\n    long even15 = 0;\n    long odd15 = 0;\n    long even16 = 0;\n    long\
    \ odd16 = 0;\n    long even17 = 0;\n    long odd17 = 0;\n    long even18 = 0;\n\
    \    long odd18 = 0;\n    long even19 = 0;\n    long odd19 = 0;\n    long even20\
    \ = 0;\n    long odd20 = 0;\n    long even21 = 0;\n    long odd21 = 0;\n    long\
    \ even22 = 0;\n    long odd22 = 0;\n    long even23 = 0;\n    long odd23 = 0;\n\
    \    long even24 = 0;\n    long odd24 = 0;\n    long even25 = 0;\n    long odd25\
    \ = 0;\n    long even26 = 0;\n    long odd26 = 0;\n    long even27 = 0;\n    long\
    \ odd27 = 0;\n    long even28 = 0;\n    long odd28 = 0;\n    long even29 = 0;\n\
    \    long odd29 = 0;\n    long even30 = 0;\n    long odd30 = 0;\n    long even31\
    \ = 0;\n    long odd31 = 0;\n    long even32 = 0;\n    long odd32 = 0;\n    long\
    \ even33 = 0;\n    long odd33 = 0;\n    long even34 = 0;\n    long odd34 = 0;\n\
    \    long even35 = 0;\n    long odd35 = 0;\n    long even36 = 0;\n    long odd36\
    \ = 0;\n    long even37 = 0;\n    long odd37 = 0;\n    long even38 = 0;\n    long\
    \ odd38 = 0;\n    long even39 = 0;\n    long odd39 = 0;\n    long even40 = 0;\n\
    \    long odd40 = 0;\n    long even41 = 0;\n    long odd41 = 0;\n    long even42\
    \ = 0;\n    long odd42 = 0;\n    long even43 = 0;\n    long odd43 = 0;", "   \
    \ // Write your code here\n    long even = 0;\n    long odd = 0;\n    long sum\
    \ = 0;\n    long count = 0;\n    for (long i = 0; i < lst1.size(); i++) {\n  \
    \      sum += lst1[i];\n    }\n    for (long i = 0; i < lst2.size(); i++) {\n\
    \        sum += lst2[i];\n    }\n    for (long i = 0; i < lst1.size(); i++) {\n\
    \        if (lst1[i] % 2 == 0) {\n            even += lst1[i];\n        } else\
    \ {\n            odd += lst1[i];\n        }\n    }\n    for (long i = 0; i < lst2.size();\
    \ i++) {\n        if (lst2[i] % 2 == 0) {\n            even += lst2[i];\n    \
    \    } else {\n            odd += lst2[i];\n        }\n    }\n    if (sum == even)\
    \ {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }", '    //
    Your code here', "    // Write your code here\n    long even = 0;\n    long odd\
    \ = 0;\n    long sum = 0;\n    long count = 0;\n    long temp = 0;\n    long temp2\
    \ = 0;\n    long temp3 = 0;\n    long temp4 = 0;\n    long temp5 = 0;\n    long\
    \ temp6 = 0;\n    long temp7 = 0;\n    long temp8 = 0;\n    long temp9 = 0;\n\
    \    long temp10 = 0;\n    long temp11 = 0;\n    long temp12 = 0;\n    long temp13\
    \ = 0;\n    long temp14 = 0;\n    long temp15 = 0;\n    long temp16 = 0;\n   \
    \ long temp17 = 0;\n    long temp18 = 0;\n    long temp19 = 0;\n    long temp20\
    \ = 0;\n    long temp21 = 0;\n    long temp22 = 0;\n    long temp23 = 0;\n   \
    \ long temp24 = 0;\n    long temp25 = 0;\n    long temp26 = 0;\n    long temp27\
    \ = 0;\n    long temp28 = 0;\n    long temp29 = 0;\n    long temp30 = 0;\n   \
    \ long temp31 = 0;\n    long temp32 = 0;\n    long temp33 = 0;\n    long temp34\
    \ = 0;\n    long temp35 = 0;\n    long temp36 = 0;\n    long temp37 = 0;\n   \
    \ long temp38 = 0;\n    long temp39 = 0;\n    long temp40 = 0;\n    long temp41\
    \ = 0;\n    long temp42 = 0;\n    long temp43 = 0;\n    long temp44 = 0;\n   \
    \ long temp45 = 0;\n    long temp46 = 0;\n    long temp47 = 0;\n    long temp48\
    \ = 0;\n    long temp49 = 0;\n    long temp50 = 0;\n    long temp51 = 0;\n   \
    \ long temp52 = 0;\n    long temp53 = 0;\n    long temp54 = 0;\n    long temp55\
    \ = 0;\n    long temp56 = 0;\n    long temp57 = 0;\n    long temp58 = 0;\n   \
    \ long temp59 = 0;\n    long temp60 = 0;\n    long temp61 = 0;\n    long temp62\
    \ = 0;\n    long temp63 = 0;\n    long temp64 = 0;\n    long temp65 = 0;\n   \
    \ long temp66 = 0;\n    long temp67 = 0;\n    long temp68 = 0;\n    long temp69\
    \ = 0;\n    long temp70 = 0;\n    long temp71 = 0;\n    long temp72 = 0;\n   \
    \ long temp73 = 0;\n    long temp74 = 0;\n    long temp75 = 0;\n    long temp76\
    \ = 0;\n    long temp77 = 0;\n    long temp78 = 0;\n    long temp79 = 0;\n   \
    \ long temp80 = 0;\n    long temp81 = 0;\n    long temp82 = 0;\n    ", '    //
    code here', "    // Write your code here\n    long even = 0;\n    long odd = 0;\n\
    \    for (long i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 == 0) {\n\
    \            even = even + lst1[i];\n        } else {\n            odd = odd +\
    \ lst1[i];\n        }\n    }\n    for (long i = 0; i < lst2.size(); i++) {\n \
    \       if (lst2[i] % 2 == 0) {\n            even = even + lst2[i];\n        }\
    \ else {\n            odd = odd + lst2[i];\n        }\n    }\n    if (even ==\
    \ odd) {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }",
  "    // Write your code here\n    long even = 0;\n    long odd = 0;\n    long evenCount\
    \ = 0;\n    long oddCount = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n\
    \    long evenMax = lst1[0];\n    long oddMax = lst1[0];\n    for (long i = 0;\
    \ i < lst1.size(); i++) {\n        if (lst1[i] > evenMax) {\n            evenMax\
    \ = lst1[i];\n        }\n        if (lst1[i] > oddMax) {\n            oddMax =\
    \ lst1[i];\n        }\n    }\n    for (long i = 0; i < lst2.size(); i++) {\n \
    \       if (lst2[i] > evenMax) {\n            evenMax = lst2[i];\n        }\n\
    \        if (lst2[i] > oddMax) {\n            oddMax = lst2[i];\n        }\n \
    \   }\n    for (long i = 0; i < lst1.size(); i++) {\n        if (lst1[i] > evenMax)\
    \ {\n            evenCount++;\n            evenSum += lst1[i];\n        }\n  \
    \      if (lst1[i] > oddMax) {\n            oddCount++;\n            oddSum +=\
    \ lst1[i];\n        }\n    }\n    for (long i = 0; i < lst2.size(); i++) {\n \
    \       if (lst2[i] > evenMax) {\n            evenCount++;\n            evenSum\
    \ += lst2[i];\n        }\n        if (lst2[i] > oddMax) {\n            oddCount++;\n\
    \            oddSum += lst2[i];\n        }\n    }\n    if (evenCount > oddCount)\
    \ {\n        return \"NO\";\n    }\n    if (evenCount == oddCount) {\n       \
    \ if (evenSum > oddSum) {\n            return \"NO\";\n        }\n        if (evenSum\
    \ < oddSum) {\n            return \"YES\";\n        }\n    }\n    return \"YES\"\
    ;", '    // Your code here', "    // Your code here\n    long even = 0;\n    long\
    \ odd = 0;\n    long evenCount = 0;\n    long oddCount = 0;\n    long evenSum\
    \ = 0;\n    long oddSum = 0;\n    long evenMax = lst1[0];\n    long oddMax = lst1[0];\n\
    \    long evenMin = lst1[0];\n    long oddMin = lst1[0];\n    long evenMax2 =\
    \ lst2[0];\n    long oddMax2 = lst2[0];\n    long evenMin2 = lst2[0];\n    long\
    \ oddMin2 = lst2[0];\n    long evenMax3 = lst2[0];\n    long oddMax3 = lst2[0];\n\
    \    long evenMin3 = lst2[0];\n    long oddMin3 = lst2[0];\n    long evenMax4\
    \ = lst2[0];\n    long oddMax4 = lst2[0];\n    long evenMin4 = lst2[0];\n    long\
    \ oddMin4 = lst2[0];\n    long evenMax5 = lst2[0];\n    long oddMax5 = lst2[0];\n\
    \    long evenMin5 = lst2[0];\n    long oddMin5 = lst2[0];\n    long evenMax6\
    \ = lst2[0];\n    long oddMax6 = lst2[0];\n    long evenMin6 = lst2[0];\n    long\
    \ oddMin6 = lst2[0];\n    long evenMax7 = lst2[0];\n    long oddMax7 = lst2[0];\n\
    \    long evenMin7 = lst2[0];\n    long oddMin7 = lst2[0];\n    long evenMax8\
    \ = lst2[0];\n    long oddMax8 = lst2[0];\n    long evenMin8 = lst2[0];\n    long\
    \ oddMin8 = lst2[0];\n    long evenMax9 = lst2[0];\n    long oddMax9 = lst2[0];\n\
    \    long evenMin9 = lst2[0];\n    long oddMin9 = lst2[0];\n    long evenMax10\
    \ = lst2[0];\n    long oddMax10 = lst2[0];\n    long evenMin10 = lst2[0];\n  \
    \  long oddMin10 = lst2[0];\n    long evenMax11 = lst2[0];\n    long oddMax11\
    \ = lst2[0];\n    long evenMin11 = lst2[0];\n    long oddMin11 = lst2[0];\n  \
    \  long evenMax12 = lst2[0];\n    long oddMax12 = lst2[0];\n    long evenMin12\
    \ = lst2[0];\n    long oddMin12 = lst2[0];\n    long evenMax13 = lst2[0];\n  \
    \  long oddMax13 = lst2[0];\n    long evenMin13 = lst2[0];\n    long oddMin13\
    \ = lst2[0];\n    ", "    // Write your code here\n    long even = 0;\n    long\
    \ odd = 0;\n    long even2 = 0;\n    long odd2 = 0;\n    long even3 = 0;\n   \
    \ long odd3 = 0;\n    long even4 = 0;\n    long odd4 = 0;\n    long even5 = 0;\n\
    \    long odd5 = 0;\n    long even6 = 0;\n    long odd6 = 0;\n    long even7 =\
    \ 0;\n    long odd7 = 0;\n    long even8 = 0;\n    long odd8 = 0;\n    long even9\
    \ = 0;\n    long odd9 = 0;\n    long even10 = 0;\n    long odd10 = 0;\n    long\
    \ even11 = 0;\n    long odd11 = 0;\n    long even12 = 0;\n    long odd12 = 0;\n\
    \    long even13 = 0;\n    long odd13 = 0;\n    long even14 = 0;\n    long odd14\
    \ = 0;\n    long even15 = 0;\n    long odd15 = 0;\n    long even16 = 0;\n    long\
    \ odd16 = 0;\n    long even17 = 0;\n    long odd17 = 0;\n    long even18 = 0;\n\
    \    long odd18 = 0;\n    long even19 = 0;\n    long odd19 = 0;\n    long even20\
    \ = 0;\n    long odd20 = 0;\n    long even21 = 0;\n    long odd21 = 0;\n    long\
    \ even22 = 0;\n    long odd22 = 0;\n    long even23 = 0;\n    long odd23 = 0;\n\
    \    long even24 = 0;\n    long odd24 = 0;\n    long even25 = 0;\n    long odd25\
    \ = 0;\n    long even26 = 0;\n    long odd26 = 0;\n    long even27 = 0;\n    long\
    \ odd27 = 0;\n    long even28 = 0;\n    long odd28 = 0;\n    long even29 = 0;\n\
    \    long odd29 = 0;\n    long even30 = 0;\n    long odd30 = 0;\n    long even31\
    \ = 0;\n    long odd31 = 0;\n    long even32 = 0;\n    long odd32 = 0;\n    long\
    \ even33 = 0;\n    long odd33 = 0;\n    long even34 = 0;\n    long odd34 = 0;\n\
    \    long even35 = 0;\n    long odd35 = 0;\n    long even36 = 0;\n    long odd36\
    \ = 0;\n    long even37 = 0;\n    long odd37 = 0;\n    long even38 = 0;\n    long\
    \ odd38 = 0;\n    long even39 = 0;\n    long odd39 = 0;\n    long even40 = 0;\n\
    \    long odd40 = 0;\n    long even41 = 0;\n    long odd41 = 0;\n    long even42\
    \ = 0;\n    long odd42 = 0;\n    long even43 = 0;\n    long odd43 = 0;\n    ",
  "    long even = 0;\n    long odd = 0;\n    long even2 = 0;\n    long odd2 = 0;\n\
    \    long even3 = 0;\n    long odd3 = 0;\n    long even4 = 0;\n    long odd4 =\
    \ 0;\n    long even5 = 0;\n    long odd5 = 0;\n    long even6 = 0;\n    long odd6\
    \ = 0;\n    long even7 = 0;\n    long odd7 = 0;\n    long even8 = 0;\n    long\
    \ odd8 = 0;\n    long even9 = 0;\n    long odd9 = 0;\n    long even10 = 0;\n \
    \   long odd10 = 0;\n    long even11 = 0;\n    long odd11 = 0;\n    long even12\
    \ = 0;\n    long odd12 = 0;\n    long even13 = 0;\n    long odd13 = 0;\n    long\
    \ even14 = 0;\n    long odd14 = 0;\n    long even15 = 0;\n    long odd15 = 0;\n\
    \    long even16 = 0;\n    long odd16 = 0;\n    long even17 = 0;\n    long odd17\
    \ = 0;\n    long even18 = 0;\n    long odd18 = 0;\n    long even19 = 0;\n    long\
    \ odd19 = 0;\n    long even20 = 0;\n    long odd20 = 0;\n    long even21 = 0;\n\
    \    long odd21 = 0;\n    long even22 = 0;\n    long odd22 = 0;\n    long even23\
    \ = 0;\n    long odd23 = 0;\n    long even24 = 0;\n    long odd24 = 0;\n    long\
    \ even25 = 0;\n    long odd25 = 0;\n    long even26 = 0;\n    long odd26 = 0;\n\
    \    long even27 = 0;\n    long odd27 = 0;\n    long even28 = 0;\n    long odd28\
    \ = 0;\n    long even29 = 0;\n    long odd29 = 0;\n    long even30 = 0;\n    long\
    \ odd30 = 0;\n    long even31 = 0;\n    long odd31 = 0;\n    long even32 = 0;\n\
    \    long odd32 = 0;\n    long even33 = 0;\n    long odd33 = 0;\n    long even34\
    \ = 0;\n    long odd34 = 0;\n    long even35 = 0;\n    long odd35 = 0;\n    long\
    \ even36 = 0;\n    long odd36 = 0;\n    long even37 = 0;\n    long odd37 = 0;\n\
    \    long even38 = 0;\n    long odd38 = 0;\n    long even39 = 0;\n    long odd39\
    \ = 0;\n    long even40 = 0;\n    long odd40 = 0;\n    long even41 = 0;\n    long\
    \ odd41 = 0;\n    long even42 = 0;\n    long odd42 = 0;\n    long even43 = 0;\n\
    \    long odd43 = 0;\n    long even44 = 0;\n", "    // Write your code here\n\
    \    long even = 0;\n    long odd = 0;\n    long evenCount = 0;\n    long oddCount\
    \ = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n    long evenMax = lst1[0];\n\
    \    long oddMax = lst1[0];\n    long evenMin = lst1[0];\n    long oddMin = lst1[0];\n\
    \    long evenMax2 = lst2[0];\n    long oddMax2 = lst2[0];\n    long evenMin2\
    \ = lst2[0];\n    long oddMin2 = lst2[0];\n    long evenMax3 = lst2[0];\n    long\
    \ oddMax3 = lst2[0];\n    long evenMin3 = lst2[0];\n    long oddMin3 = lst2[0];\n\
    \    long evenMax4 = lst2[0];\n    long oddMax4 = lst2[0];\n    long evenMin4\
    \ = lst2[0];\n    long oddMin4 = lst2[0];\n    long evenMax5 = lst2[0];\n    long\
    \ oddMax5 = lst2[0];\n    long evenMin5 = lst2[0];\n    long oddMin5 = lst2[0];\n\
    \    long evenMax6 = lst2[0];\n    long oddMax6 = lst2[0];\n    long evenMin6\
    \ = lst2[0];\n    long oddMin6 = lst2[0];\n    long evenMax7 = lst2[0];\n    long\
    \ oddMax7 = lst2[0];\n    long evenMin7 = lst2[0];\n    long oddMin7 = lst2[0];\n\
    \    long evenMax8 = lst2[0];\n    long oddMax8 = lst2[0];\n    long evenMin8\
    \ = lst2[0];\n    long oddMin8 = lst2[0];\n    long evenMax9 = lst2[0];\n    long\
    \ oddMax9 = lst2[0];\n    long evenMin9 = lst2[0];\n    long oddMin9 = lst2[0];\n\
    \    long evenMax10 = lst2[0];\n    long oddMax10 = lst2[0];\n    long evenMin10\
    \ = lst2[0];\n    long oddMin10 = lst2[0];\n    long evenMax11 = lst2[0];\n  \
    \  long oddMax11 = lst2[0];\n    long evenMin11 = lst2[0];\n    long oddMin11\
    \ = lst2[0];\n    long evenMax12 = lst2[0];\n    long oddMax12 = lst2[0];\n  \
    \  long evenMin12 = lst2[0];\n    long oddMin12 = lst2[0];\n    long evenMax13\
    \ = lst2[0];\n    long oddMax13 = lst2[0];\n    long evenMin13 = lst2[0];\n  \
    \  long oddMin13 = lst2[0];\n    ", "    // Write your code here\n    long even\
    \ = 0;\n    long odd = 0;\n    long evenCount = 0;\n    long oddCount = 0;\n \
    \   long evenSum = 0;\n    long oddSum = 0;\n    long evenMax = std::numeric_limits<long>::max();\n\
    \    long oddMax = std::numeric_limits<long>::max();\n    long evenMin = std::numeric_limits<long>::min();\n\
    \    long oddMin = std::numeric_limits<long>::min();\n    long evenMaxSum = 0;\n\
    \    long oddMaxSum = 0;\n    long evenMinSum = 0;\n    long oddMinSum = 0;\n\
    \    long evenMaxCount = 0;\n    long oddMaxCount = 0;\n    long evenMinCount\
    \ = 0;\n    long oddMinCount = 0;\n    long evenMaxSum2 = 0;\n    long oddMaxSum2\
    \ = 0;\n    long evenMinSum2 = 0;\n    long oddMinSum2 = 0;\n    long evenMaxCount2\
    \ = 0;\n    long oddMaxCount2 = 0;\n    long evenMinCount2 = 0;\n    long oddMinCount2\
    \ = 0;\n    long evenMaxSum3 = 0;\n    long oddMaxSum3 = 0;\n    long evenMinSum3\
    \ = 0;\n    long oddMinSum3 = 0;\n    long evenMaxCount3 = 0;\n    long oddMaxCount3\
    \ = 0;\n    long evenMinCount3 = 0;\n    long oddMinCount3 = 0;\n    long evenMaxSum4\
    \ = 0;\n    long oddMaxSum4 = 0;\n    long evenMinSum4 = 0;\n    long oddMinSum4\
    \ = 0;\n    long evenMaxCount4 = 0;\n    long oddMaxCount4 = 0;\n    long evenMinCount4\
    \ = 0;\n    long oddMinCount4 = 0;\n    long evenMaxSum5 = 0;\n    long oddMaxSum5\
    \ = 0;\n    long evenMinSum5 = 0;\n    long oddMinSum5 = 0;\n    long evenMaxCount5\
    \ = 0;\n    long oddMaxCount5 = 0;\n    long evenMinCount5 = 0;\n    long oddMinCount5\
    \ = 0;\n    long evenMaxSum6 = 0;\n    long oddMaxSum6 = 0;\n    long evenMinSum6\
    \ = 0;\n    long oddMinSum6 = 0;\n    long evenMaxCount6 = 0;\n    long oddMaxCount6\
    \ = 0;\n    long evenMinCount6 = 0;\n    long oddMinCount6 = 0;\n    long evenMaxSum7\
    \ = 0;\n    long oddMaxSum7 = 0;\n    long evenMinSum7 = 0;\n    long oddMinSum7\
    \ = 0;\n    long evenMaxCount7 = 0;\n    long oddMaxCount7 = 0;\n    long evenMinCount7\
    \ = 0;\n    long oddMinCount7 = 0;\n    long evenMaxSum8 = 0;\n    ", '    //
    Your code here', "    // Write your code here\n    long even = 0;\n    long odd\
    \ = 0;\n    long evenCount = 0;\n    long oddCount = 0;\n    long evenSum = 0;\n\
    \    long oddSum = 0;\n    long evenMax = std::numeric_limits<long>::min();\n\
    \    long oddMax = std::numeric_limits<long>::min();\n    long evenMin = std::numeric_limits<long>::max();\n\
    \    long oddMin = std::numeric_limits<long>::max();\n    long evenMinSum = std::numeric_limits<long>::max();\n\
    \    long oddMinSum = std::numeric_limits<long>::max();\n    long evenMaxSum =\
    \ std::numeric_limits<long>::max();\n    long oddMaxSum = std::numeric_limits<long>::max();\n\
    \    long evenMinCount = std::numeric_limits<long>::max();\n    long oddMinCount\
    \ = std::numeric_limits<long>::max();\n    long evenMaxCount = std::numeric_limits<long>::max();\n\
    \    long oddMaxCount = std::numeric_limits<long>::max();\n    long evenMinSumCount\
    \ = std::numeric_limits<long>::max();\n    long oddMinSumCount = std::numeric_limits<long>::max();\n\
    \    long evenMaxSumCount = std::numeric_limits<long>::max();\n    long oddMaxSumCount\
    \ = std::numeric_limits<long>::max();\n    long evenMinCountSum = std::numeric_limits<long>::max();\n\
    \    long oddMinCountSum = std::numeric_limits<long>::max();\n    long evenMaxCountSum\
    \ = std::numeric_limits<long>::max();\n    long oddMaxCountSum = std::numeric_limits<long>::max();\n\
    \    long evenMinSumCountSum = std::numeric_limits<long>::max();\n    long oddMinSumCountSum\
    \ = std::numeric_limits<long>::max();\n    long evenMaxSumCountSum = std::numeric_limits<long>::max();\n\
    \    long oddMaxSumCountSum = std::numeric_limits<long>::max();\n    long evenMinCountSumCount\
    \ = std::numeric_limits<long>::max();\n    long oddMinCountSumCount = std::numeric_limits<long>::max();\n\
    \    long evenMaxCountSumCount = std::numeric_limits<long>::max();\n    long oddMaxCountSumCount\
    \ = std::numeric_limits<long>::max();\n    long evenMinSumCountSumCount = std::numeric_limits<long>::max();\n\
    \    long oddMinSumCountSumCount = std::numeric_limits<long>::max();\n    long\
    \ evenMaxSumCountSumCount = std::numeric_limits", "    // Write your code here\n\
    \    long even = 0;\n    long odd = 0;\n    long evenCount = 0;\n    long oddCount\
    \ = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n    long evenMax = std::numeric_limits<long>::min();\n\
    \    long oddMax = std::numeric_limits<long>::min();\n    long evenMin = std::numeric_limits<long>::max();\n\
    \    long oddMin = std::numeric_limits<long>::max();\n    long evenTotal = 0;\n\
    \    long oddTotal = 0;\n    long evenMinMax = std::numeric_limits<long>::min();\n\
    \    long oddMinMax = std::numeric_limits<long>::min();\n    long evenMaxMin =\
    \ std::numeric_limits<long>::max();\n    long oddMaxMin = std::numeric_limits<long>::max();\n\
    \    long evenMinSum = std::numeric_limits<long>::min();\n    long oddMinSum =\
    \ std::numeric_limits<long>::min();\n    long evenMaxSum = std::numeric_limits<long>::max();\n\
    \    long oddMaxSum = std::numeric_limits<long>::max();\n    long evenMinMaxSum\
    \ = std::numeric_limits<long>::min();\n    long oddMinMaxSum = std::numeric_limits<long>::min();\n\
    \    long evenMaxMinSum = std::numeric_limits<long>::max();\n    long oddMaxMinSum\
    \ = std::numeric_limits<long>::max();\n    long evenMinSumMax = std::numeric_limits<long>::min();\n\
    \    long oddMinSumMax = std::numeric_limits<long>::min();\n    long evenMaxSumMax\
    \ = std::numeric_limits<long>::max();\n    long oddMaxSumMax = std::numeric_limits<long>::max();\n\
    \    long evenMinMaxSumMax = std::numeric_limits<long>::min();\n    long oddMinMaxSumMax\
    \ = std::numeric_limits<long>::min();\n    long evenMaxMinSumMax = std::numeric_limits<long>::max();\n\
    \    long oddMaxMinSumMax = std::numeric_limits<long>::max();\n    long evenMinSumMaxMin\
    \ = std::numeric_limits<long>::min();\n    long oddMinSumMaxMin = std::numeric_limits<long>::min();\n\
    \    long evenMaxSumMaxMin = std::numeric_limits<long>::max();\n    long oddMaxSumMaxMin\
    \ = std::numeric_limits<long>::max();\n    long evenMinMaxSumMaxMin = std::numeric_limits<long>::min();\n\
    \    long odd", "    // Your code here\n    long even = 0;\n    long odd = 0;\n\
    \    long even2 = 0;\n    long odd2 = 0;\n    long even3 = 0;\n    long odd3 =\
    \ 0;\n    long even4 = 0;\n    long odd4 = 0;\n    long even5 = 0;\n    long odd5\
    \ = 0;\n    long even6 = 0;\n    long odd6 = 0;\n    long even7 = 0;\n    long\
    \ odd7 = 0;\n    long even8 = 0;\n    long odd8 = 0;\n    long even9 = 0;\n  \
    \  long odd9 = 0;\n    long even10 = 0;\n    long odd10 = 0;\n    long even11\
    \ = 0;\n    long odd11 = 0;\n    long even12 = 0;\n    long odd12 = 0;\n    long\
    \ even13 = 0;\n    long odd13 = 0;\n    long even14 = 0;\n    long odd14 = 0;\n\
    \    long even15 = 0;\n    long odd15 = 0;\n    long even16 = 0;\n    long odd16\
    \ = 0;\n    long even17 = 0;\n    long odd17 = 0;\n    long even18 = 0;\n    long\
    \ odd18 = 0;\n    long even19 = 0;\n    long odd19 = 0;\n    long even20 = 0;\n\
    \    long odd20 = 0;\n    long even21 = 0;\n    long odd21 = 0;\n    long even22\
    \ = 0;\n    long odd22 = 0;\n    long even23 = 0;\n    long odd23 = 0;\n    long\
    \ even24 = 0;\n    long odd24 = 0;\n    long even25 = 0;\n    long odd25 = 0;\n\
    \    long even26 = 0;\n    long odd26 = 0;\n    long even27 = 0;\n    long odd27\
    \ = 0;\n    long even28 = 0;\n    long odd28 = 0;\n    long even29 = 0;\n    long\
    \ odd29 = 0;\n    long even30 = 0;\n    long odd30 = 0;\n    long even31 = 0;\n\
    \    long odd31 = 0;\n    long even32 = 0;\n    long odd32 = 0;\n    long even33\
    \ = 0;\n    long odd33 = 0;\n    long even34 = 0;\n    long odd34 = 0;\n    long\
    \ even35 = 0;\n    long odd35 = 0;\n    long even36 = 0;\n    long odd36 = 0;\n\
    \    long even37 = 0;\n    long odd37 = 0;\n    long even38 = 0;\n    long odd38\
    \ = 0;\n    long even39 = 0;\n    long odd39 = 0;\n    long even40 = 0;\n    long\
    \ odd40 = 0;\n    long even41 = 0;\n    long odd41 = 0;\n    long even42 = 0;\n\
    \    long odd42 = 0;\n    long even43 = 0;\n    long odd43 = 0;\n    ", "    //\
    \ Your code here\n    long even = 0;\n    long odd = 0;\n    long evenCount =\
    \ 0;\n    long oddCount = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n  \
    \  long evenMax = std::numeric_limits<long>::min();\n    long oddMax = std::numeric_limits<long>::min();\n\
    \    long evenMin = std::numeric_limits<long>::max();\n    long oddMin = std::numeric_limits<long>::max();\n\
    \    long evenSum2 = 0;\n    long oddSum2 = 0;\n    long evenMax2 = 0;\n    long\
    \ oddMax2 = 0;\n    long evenMin2 = 0;\n    long oddMin2 = 0;\n    long evenSum3\
    \ = 0;\n    long oddSum3 = 0;\n    long evenMax3 = 0;\n    long oddMax3 = 0;\n\
    \    long evenMin3 = 0;\n    long oddMin3 = 0;\n    long evenSum4 = 0;\n    long\
    \ oddSum4 = 0;\n    long evenMax4 = 0;\n    long oddMax4 = 0;\n    long evenMin4\
    \ = 0;\n    long oddMin4 = 0;\n    long evenSum5 = 0;\n    long oddSum5 = 0;\n\
    \    long evenMax5 = 0;\n    long oddMax5 = 0;\n    long evenMin5 = 0;\n    long\
    \ oddMin5 = 0;\n    long evenSum6 = 0;\n    long oddSum6 = 0;\n    long evenMax6\
    \ = 0;\n    long oddMax6 = 0;\n    long evenMin6 = 0;\n    long oddMin6 = 0;\n\
    \    long evenSum7 = 0;\n    long oddSum7 = 0;\n    long evenMax7 = 0;\n    long\
    \ oddMax7 = 0;\n    long evenMin7 = 0;\n    long oddMin7 = 0;\n    long evenSum8\
    \ = 0;\n    long oddSum8 = 0;\n    long evenMax8 = 0;\n    long oddMax8 = 0;\n\
    \    long evenMin8 = 0;\n    long oddMin8 = 0;\n    long evenSum9 = 0;\n    long\
    \ oddSum9 = 0;\n    long evenMax9 = 0;\n    long oddMax9 = 0;\n    long evenMin9\
    \ = 0;\n    long oddMin9 = 0;\n    long evenSum10 = 0;\n    long oddSum10 = 0;\n\
    \    long evenMax10 = 0;\n    long oddMax10 = 0;\n    long evenMin10 = 0;\n  \
    \  long oddMin10 = 0;\n    long evenSum11 = 0;\n    long oddSum11 = 0;\n    long\
    \ evenMax11 = 0;\n    long oddMax11 = 0;\n    long evenMin11 = 0;\n    long oddMin11\
    \ = 0;\n    long evenSum12 = 0;\n    long oddSum12 = 0;\n    long evenMax12 =\
    \ 0;\n", "    // Write your code here\n    ", '    // Your code here', '    //
    Your code here', "    // Your code here\n    ", "    // Write your code here\n\
    \    long even = 0;\n    long odd = 0;\n    long evenCount = 0;\n    long oddCount\
    \ = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n    long evenMin = INT_MAX;\n\
    \    long oddMin = INT_MAX;\n    long evenMax = INT_MIN;\n    long oddMax = INT_MIN;\n\
    \    long evenSum2 = 0;\n    long oddSum2 = 0;\n    long evenMin2 = 0;\n    long\
    \ oddMin2 = 0;\n    long evenMax2 = 0;\n    long oddMax2 = 0;\n    long evenSum3\
    \ = 0;\n    long oddSum3 = 0;\n    long evenMin3 = 0;\n    long oddMin3 = 0;\n\
    \    long evenMax3 = 0;\n    long oddMax3 = 0;\n    long evenSum4 = 0;\n    long\
    \ oddSum4 = 0;\n    long evenMin4 = 0;\n    long oddMin4 = 0;\n    long evenMax4\
    \ = 0;\n    long oddMax4 = 0;\n    long evenSum5 = 0;\n    long oddSum5 = 0;\n\
    \    long evenMin5 = 0;\n    long oddMin5 = 0;\n    long evenMax5 = 0;\n    long\
    \ oddMax5 = 0;\n    long evenSum6 = 0;\n    long oddSum6 = 0;\n    long evenMin6\
    \ = 0;\n    long oddMin6 = 0;\n    long evenMax6 = 0;\n    long oddMax6 = 0;\n\
    \    long evenSum7 = 0;\n    long oddSum7 = 0;\n    long evenMin7 = 0;\n    long\
    \ oddMin7 = 0;\n    long evenMax7 = 0;\n    long oddMax7 = 0;\n    long evenSum8\
    \ = 0;\n    long oddSum8 = 0;\n    long evenMin8 = 0;\n    long oddMin8 = 0;\n\
    \    long evenMax8 = 0;\n    long oddMax8 = 0;\n    long evenSum9 = 0;\n    long\
    \ oddSum9 = 0;\n    long evenMin9 = 0;\n    long oddMin9 = 0;\n    long evenMax9\
    \ = 0;\n    long oddMax9 = 0;\n    long evenSum10 = 0;\n    long oddSum10 = 0;\n\
    \    long evenMin10 = 0;\n    long oddMin10 = 0;\n    long evenMax10 = 0;\n  \
    \  long oddMax10 = 0;\n    long evenSum11 = 0;\n    long oddSum11 = 0;\n    long\
    \ evenMin11 = 0;\n    long oddMin11 = 0;\n    long evenMax11 = 0;\n    long oddMax11\
    \ = 0;\n    long evenSum12 = 0;\n    long oddSum12 = 0;\n    long evenMin12 =\
    \ 0;\n    long oddMin12 = 0;\n    long evenMax12 = 0;\n    long oddMax12 = 0;",
  "    // Your code goes here\n    ", "    // Write your code here\n    long even\
    \ = 0;\n    long odd = 0;\n    long evenCount = 0;\n    long oddCount = 0;\n \
    \   long evenSum = 0;\n    long oddSum = 0;\n    long evenMax = std::numeric_limits<long>::min();\n\
    \    long oddMax = std::numeric_limits<long>::min();\n    long evenMin = std::numeric_limits<long>::max();\n\
    \    long oddMin = std::numeric_limits<long>::max();\n    for (long i = 0; i <\
    \ lst1.size(); i++) {\n        if (lst1[i] % 2 == 0) {\n            even = even\
    \ + lst1[i];\n            evenCount = evenCount + 1;\n            evenSum = evenSum\
    \ + lst1[i];\n            if (lst1[i] > evenMax) {\n                evenMax =\
    \ lst1[i];\n            }\n            if (lst1[i] < evenMin) {\n            \
    \    evenMin = lst1[i];\n            }\n        } else {\n            odd = odd\
    \ + lst1[i];\n            oddCount = oddCount + 1;\n            oddSum = oddSum\
    \ + lst1[i];\n            if (lst1[i] > oddMax) {\n                oddMax = lst1[i];\n\
    \            }\n            if (lst1[i] < oddMin) {\n                oddMin =\
    \ lst1[i];\n            }\n        }\n    }\n    for (long i = 0; i < lst2.size();\
    \ i++) {\n        if (lst2[i] % 2 == 0) {\n            even = even + lst2[i];\n\
    \            evenCount = evenCount + 1;\n            evenSum = evenSum + lst2[i];\n\
    \            if (lst2[i] > evenMax) {\n                evenMax = lst2[i];\n  \
    \          }\n            if (lst2[i] < evenMin) {\n                evenMin =\
    \ lst2[i];\n            }\n        } else {\n            odd = odd + lst2[i];\n\
    \            oddCount = oddCount + 1;\n            oddSum = oddSum + lst2[i];\n\
    \            if (lst2[i] > oddMax) {\n                oddMax = lst2[i];\n    \
    \        }\n            if (lst2[i] < oddMin) {\n                oddMin = lst2[i];\n\
    \            }\n        }\n    }\n    if (evenCount == lst1.size()) {\n      \
    \  if (evenSum == lst2.size()) {\n            return \"YES\";\n        } else\
    \ {\n            return \"NO\";\n        }\n    } else {\n        if (oddCount\
    \ == lst1.size()) {\n            if (oddSum == lst2.size()) {\n              \
    \  return \"YES\";\n            } else {\n                return \"NO\";\n   \
    \         }\n        } else {\n            if (evenCount == lst2.size()) {\n \
    \               if (evenSum == lst1.size()) {\n                    return \"YES\"\
    ;\n                } else {\n                    return \"NO\";\n            \
    \    }\n            } else {\n                if (oddCount == lst2.size()) {\n",
  "    // Your code here\n    long even = 0;\n    long odd = 0;\n    long evenCount\
    \ = 0;\n    long oddCount = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n\
    \    long evenSum2 = 0;\n    long oddSum2 = 0;\n    long evenSum3 = 0;\n    long\
    \ oddSum3 = 0;\n    long evenSum4 = 0;\n    long oddSum4 = 0;\n    long evenSum5\
    \ = 0;\n    long oddSum5 = 0;\n    long evenSum6 = 0;\n    long oddSum6 = 0;\n\
    \    long evenSum7 = 0;\n    long oddSum7 = 0;\n    long evenSum8 = 0;\n    long\
    \ oddSum8 = 0;\n    long evenSum9 = 0;\n    long oddSum9 = 0;\n    long evenSum10\
    \ = 0;\n    long oddSum10 = 0;\n    long evenSum11 = 0;\n    long oddSum11 = 0;\n\
    \    long evenSum12 = 0;\n    long oddSum12 = 0;\n    long evenSum13 = 0;\n  \
    \  long oddSum13 = 0;\n    long evenSum14 = 0;\n    long oddSum14 = 0;\n    long\
    \ evenSum15 = 0;\n    long oddSum15 = 0;\n    long evenSum16 = 0;\n    long oddSum16\
    \ = 0;\n    long evenSum17 = 0;\n    long oddSum17 = 0;\n    long evenSum18 =\
    \ 0;\n    long oddSum18 = 0;\n    long evenSum19 = 0;\n    long oddSum19 = 0;\n\
    \    long evenSum20 = 0;\n    long oddSum20 = 0;\n    long evenSum21 = 0;\n  \
    \  long oddSum21 = 0;\n    long evenSum22 = 0;\n    long oddSum22 = 0;\n    long\
    \ evenSum23 = 0;\n    long oddSum23 = 0;\n    long evenSum24 = 0;\n    long oddSum24\
    \ = 0;\n    long evenSum25 = 0;\n    long oddSum25 = 0;\n    long evenSum26 =\
    \ 0;\n    long oddSum26 = 0;\n    long evenSum27 = 0;\n    long oddSum27 = 0;\n\
    \    long evenSum28 = 0;\n    long oddSum28 = 0;\n    long evenSum29 = 0;\n  \
    \  long oddSum29 = 0;\n    long evenSum30 = 0;\n    long oddSum30 = 0;\n    long\
    \ evenSum31 = 0;\n    long oddSum31 = 0;\n    long evenSum32 = 0;\n    long oddSum32\
    \ = 0;\n    long evenSum33 = 0;\n    long oddSum33 = 0;\n    long evenSum34 =\
    \ 0;\n    long oddSum34 = 0;\n    long evenSum35 = 0;\n    long oddSum35 = 0;\n\
    \    long evenSum36", "    // Your code here\n    ", "    // Your code here\n\
    \    long even = 0;\n    long odd = 0;\n    long count = 0;\n    for (long i =\
    \ 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 == 0) {\n            even\
    \ = even + lst1[i];\n            count++;\n        } else {\n            odd =\
    \ odd + lst1[i];\n            count++;\n        }\n    }\n    for (long i = 0;\
    \ i < lst2.size(); i++) {\n        if (lst2[i] % 2 == 0) {\n            even =\
    \ even + lst2[i];\n            count++;\n        } else {\n            odd = odd\
    \ + lst2[i];\n            count++;\n        }\n    }\n    if (count == lst1.size())\
    \ {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }", " \
    \   // Write your code here\n    long even = 0;\n    long odd = 0;\n    long evenCount\
    \ = 0;\n    long oddCount = 0;\n    for (long i = 0; i < lst1.size(); i++) {\n\
    \        if (lst1[i] % 2 == 0) {\n            evenCount++;\n        } else {\n\
    \            oddCount++;\n        }\n    }\n    for (long i = 0; i < lst2.size();\
    \ i++) {\n        if (lst2[i] % 2 == 0) {\n            evenCount++;\n        }\
    \ else {\n            oddCount++;\n        }\n    }\n    if (evenCount == lst1.size()\
    \ && oddCount == lst2.size()) {\n        return \"YES\";\n    } else {\n     \
    \   return \"NO\";\n    }", '    // Your code here', '    // Your code here',
  '    // Your code here', "    // Your code here\n    long even = 0;\n    long odd\
    \ = 0;\n    for (long i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2\
    \ == 0) {\n            even = even + lst1[i];\n        }\n        else {\n   \
    \         odd = odd + lst1[i];\n        }\n    }\n    for (long i = 0; i < lst2.size();\
    \ i++) {\n        if (lst2[i] % 2 == 0) {\n            even = even + lst2[i];\n\
    \        }\n        else {\n            odd = odd + lst2[i];\n        }\n    }\n\
    \    if (even > odd) {\n        return \"NO\";\n    }\n    else {\n        return\
    \ \"YES\";\n    }", "    // Write your code here\n    long even = 0;\n    long\
    \ odd = 0;\n    long even2 = 0;\n    long odd2 = 0;\n    long even3 = 0;\n   \
    \ long odd3 = 0;\n    long even4 = 0;\n    long odd4 = 0;\n    long even5 = 0;\n\
    \    long odd5 = 0;\n    long even6 = 0;\n    long odd6 = 0;\n    long even7 =\
    \ 0;\n    long odd7 = 0;\n    long even8 = 0;\n    long odd8 = 0;\n    long even9\
    \ = 0;\n    long odd9 = 0;\n    long even10 = 0;\n    long odd10 = 0;\n    long\
    \ even11 = 0;\n    long odd11 = 0;\n    long even12 = 0;\n    long odd12 = 0;\n\
    \    long even13 = 0;\n    long odd13 = 0;\n    long even14 = 0;\n    long odd14\
    \ = 0;\n    long even15 = 0;\n    long odd15 = 0;\n    long even16 = 0;\n    long\
    \ odd16 = 0;\n    long even17 = 0;\n    long odd17 = 0;\n    long even18 = 0;\n\
    \    long odd18 = 0;\n    long even19 = 0;\n    long odd19 = 0;\n    long even20\
    \ = 0;\n    long odd20 = 0;\n    long even21 = 0;\n    long odd21 = 0;\n    long\
    \ even22 = 0;\n    long odd22 = 0;\n    long even23 = 0;\n    long odd23 = 0;\n\
    \    long even24 = 0;\n    long odd24 = 0;\n    long even25 = 0;\n    long odd25\
    \ = 0;\n    long even26 = 0;\n    long odd26 = 0;\n    long even27 = 0;\n    long\
    \ odd27 = 0;\n    long even28 = 0;\n    long odd28 = 0;\n    long even29 = 0;\n\
    \    long odd29 = 0;\n    long even30 = 0;\n    long odd30 = 0;\n    long even31\
    \ = 0;\n    long odd31 = 0;\n    long even32 = 0;\n    long odd32 = 0;\n    long\
    \ even33 = 0;\n    long odd33 = 0;\n    long even34 = 0;\n    long odd34 = 0;\n\
    \    long even35 = 0;\n    long odd35 = 0;\n    long even36 = 0;\n    long odd36\
    \ = 0;\n    long even37 = 0;\n    long odd37 = 0;\n    long even38 = 0;\n    long\
    \ odd38 = 0;\n    long even39 = 0;\n    long odd39 = 0;\n    long even40 = 0;\n\
    \    long odd40 = 0;\n    long even41 = 0;\n    long odd41 = 0;\n    long even42\
    \ = 0;\n    long odd42 = 0;\n    long even43 = 0;\n    long odd43 = 0;\n    ",
  '    // Your code here', "    // Write your code here\n    long even = 0;\n    long\
    \ odd = 0;\n    long evenCount = 0;\n    long oddCount = 0;\n    long evenSum\
    \ = 0;\n    long oddSum = 0;\n    long evenMax = std::numeric_limits<long>::min();\n\
    \    long oddMax = std::numeric_limits<long>::min();\n    long evenMin = std::numeric_limits<long>::max();\n\
    \    long oddMin = std::numeric_limits<long>::max();\n    for (long i = 0; i <\
    \ lst1.size(); i++) {\n        evenSum += lst1[i];\n        oddSum += lst2[i];\n\
    \        if (lst1[i] % 2 == 0) {\n            evenCount++;\n            if (lst1[i]\
    \ > evenMax) {\n                evenMax = lst1[i];\n            }\n          \
    \  if (lst1[i] < evenMin) {\n                evenMin = lst1[i];\n            }\n\
    \        } else {\n            oddCount++;\n            if (lst2[i] > oddMax)\
    \ {\n                oddMax = lst2[i];\n            }\n            if (lst2[i]\
    \ < oddMin) {\n                oddMin = lst2[i];\n            }\n        }\n \
    \   }\n    if (evenCount == 0) {\n        return \"NO\";\n    }\n    if (oddCount\
    \ == 0) {\n        return \"NO\";\n    }\n    if (evenSum == oddSum) {\n     \
    \   return \"NO\";\n    }\n    if (evenSum > oddSum) {\n        return \"NO\"\
    ;\n    }\n    if (evenSum < oddSum) {\n        return \"NO\";\n    }\n    if (evenCount\
    \ > oddCount) {\n        return \"NO\";\n    }\n    if (evenCount < oddCount)\
    \ {\n        return \"NO\";\n    }\n    if (evenMax < oddMax) {\n        return\
    \ \"NO\";\n    }\n    if (evenMin > oddMin) {\n        return \"NO\";\n    }\n\
    \    if (evenMin < oddMin) {\n        return \"NO\";\n    }\n    return \"YES\"\
    ;", "    // Your code here\n    long even = 0;\n    long odd = 0;\n    long evenCount\
    \ = 0;\n    long oddCount = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n\
    \    long evenMax = lst1[0];\n    long oddMax = lst2[0];\n    long evenMin = lst1[0];\n\
    \    long oddMin = lst2[0];\n    long evenMaxSum = 0;\n    long oddMaxSum = 0;\n\
    \    long evenMinSum = 0;\n    long oddMinSum = 0;\n    long evenMinMax = 0;\n\
    \    long oddMinMax = 0;\n    long evenMinMin = 0;\n    long oddMinMin = 0;\n\
    \    long evenMinMaxSum = 0;\n    long oddMinMaxSum = 0;\n    long evenMinMinSum\
    \ = 0;\n    long oddMinMinSum = 0;\n    long evenMinMinMax = 0;\n    long oddMinMinMax\
    \ = 0;\n    long evenMinMinMin = 0;\n    long oddMinMinMin = 0;\n    long evenMinMinMaxSum\
    \ = 0;\n    long oddMinMinMaxSum = 0;\n    long evenMinMinMinSum = 0;\n    long\
    \ oddMinMinMinSum = 0;\n    long evenMinMinMinMax = 0;\n    long oddMinMinMinMax\
    \ = 0;\n    long evenMinMinMinMin = 0;\n    long oddMinMinMinMin = 0;\n    long\
    \ evenMinMinMinMaxSum = 0;\n    long oddMinMinMinMaxSum = 0;\n    long evenMinMinMinMinSum\
    \ = 0;\n    long oddMinMinMinMinSum = 0;\n    long evenMinMinMinMinMax = 0;\n\
    \    long oddMinMinMinMinMax = 0;\n    long evenMinMinMinMinMin = 0;\n    long\
    \ oddMinMinMinMinMin = 0;\n    long evenMinMinMinMinMaxSum = 0;\n    long oddMinMinMinMinMaxSum\
    \ = 0;\n    long evenMinMinMinMinMinSum = 0;\n    long oddMinMinMinMinMinSum =\
    \ 0;\n    long evenMinMinMinMinMaxSum = 0;\n    long oddMinMinMinMinMaxSum = 0;\n\
    \    long evenMinMinMinMinMinSum = 0;\n    long oddMinMinMinMinMinSum = 0;\n \
    \   long evenMinMinMinMinMaxSum = 0;\n    long oddMinMinMinMinMaxSum = 0;\n  \
    \  long evenMinMinMinMinMinSum = 0;\n    long oddMinMinMinMinMinSum = 0;\n   \
    \ long evenMinMinMinMinMinMaxSum = 0;\n    long oddMinMinMinMinMinMaxSum = 0;\n\
    \    long evenMinMinMinMinMinSum", "    // Your code here\n    long even = 0;\n\
    \    long odd = 0;\n    long sum = 0;\n    long count = 0;\n    for (long i =\
    \ 0; i < lst1.size(); i++) {\n        sum += lst1[i];\n    }\n    for (long i\
    \ = 0; i < lst2.size(); i++) {\n        sum += lst2[i];\n    }\n    for (long\
    \ i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 == 0) {\n          \
    \  even = even + lst1[i];\n            count++;\n        } else {\n          \
    \  odd = odd + lst1[i];\n        }\n    }\n    for (long i = 0; i < lst2.size();\
    \ i++) {\n        if (lst2[i] % 2 == 0) {\n            even = even + lst2[i];\n\
    \            count++;\n        } else {\n            odd = odd + lst2[i];\n  \
    \      }\n    }\n    if (count == sum) {\n        if (even % 2 == 0) {\n     \
    \       return \"YES\";\n        } else {\n            return \"NO\";\n      \
    \  }\n    }\n    return \"NO\";", "    // Your code here\n    long even = 0;\n\
    \    long odd = 0;\n    long evenCount = 0;\n    long oddCount = 0;\n    long\
    \ evenSum = 0;\n    long oddSum = 0;\n    long evenMin = INT_MAX;\n    long oddMin\
    \ = INT_MAX;\n    long evenMax = INT_MIN;\n    long oddMax = INT_MIN;\n    long\
    \ evenSum2 = 0;\n    long oddSum2 = 0;\n    long evenMin2 = 0;\n    long oddMin2\
    \ = 0;\n    long evenMax2 = 0;\n    long oddMax2 = 0;\n    long evenSum3 = 0;\n\
    \    long oddSum3 = 0;\n    long evenMin3 = 0;\n    long oddMin3 = 0;\n    long\
    \ evenMax3 = 0;\n    long oddMax3 = 0;\n    long evenSum4 = 0;\n    long oddSum4\
    \ = 0;\n    long evenMin4 = 0;\n    long oddMin4 = 0;\n    long evenMax4 = 0;\n\
    \    long oddMax4 = 0;\n    long evenSum5 = 0;\n    long oddSum5 = 0;\n    long\
    \ evenMin5 = 0;\n    long oddMin5 = 0;\n    long evenMax5 = 0;\n    long oddMax5\
    \ = 0;\n    long evenSum6 = 0;\n    long oddSum6 = 0;\n    long evenMin6 = 0;\n\
    \    long oddMin6 = 0;\n    long evenMax6 = 0;\n    long oddMax6 = 0;\n    long\
    \ evenSum7 = 0;\n    long oddSum7 = 0;\n    long evenMin7 = 0;\n    long oddMin7\
    \ = 0;\n    long evenMax7 = 0;\n    long oddMax7 = 0;\n    long evenSum8 = 0;\n\
    \    long oddSum8 = 0;\n    long evenMin8 = 0;\n    long oddMin8 = 0;\n    long\
    \ evenMax8 = 0;\n    long oddMax8 = 0;\n    long evenSum9 = 0;\n    long oddSum9\
    \ = 0;\n    long evenMin9 = 0;\n    long oddMin9 = 0;\n    long evenMax9 = 0;\n\
    \    long oddMax9 = 0;\n    long evenSum10 = 0;\n    long oddSum10 = 0;\n    long\
    \ evenMin10 = 0;\n    long oddMin10 = 0;\n    long evenMax10 = 0;\n    long oddMax10\
    \ = 0;\n    long evenSum11 = 0;\n    long oddSum11 = 0;\n    long evenMin11 =\
    \ 0;\n    long oddMin11 = 0;\n    long evenMax11 = 0;\n    long oddMax11 = 0;\n\
    \    long evenSum12 = 0;\n    long oddSum12 = 0;\n    long evenMin12 = 0;\n  \
    \  long oddMin12 = 0;\n    long evenMax12 = 0;\n    long oddMax12 = 0;", '    //
    Your code here', "    // Your code here\n    ", '    // Your code here', "   \
    \ // Your code here\n    long even = 0;\n    long odd = 0;\n    for (long i =\
    \ 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 == 0) {\n            even\
    \ = even + lst1[i];\n        }\n        else {\n            odd = odd + lst1[i];\n\
    \        }\n    }\n    for (long i = 0; i < lst2.size(); i++) {\n        if (lst2[i]\
    \ % 2 == 0) {\n            even = even + lst2[i];\n        }\n        else {\n\
    \            odd = odd + lst2[i];\n        }\n    }\n    if (even == odd) {\n\
    \        return \"YES\";\n    }\n    else {\n        return \"NO\";\n    }", " \
    \   // Your code here\n    long even = 0;\n    long odd = 0;\n    for (long i\
    \ = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 == 0) {\n            even\
    \ = even + lst1[i];\n        }\n        else {\n            odd = odd + lst1[i];\n\
    \        }\n    }\n    for (long i = 0; i < lst2.size(); i++) {\n        if (lst2[i]\
    \ % 2 == 0) {\n            even = even + lst2[i];\n        }\n        else {\n\
    \            odd = odd + lst2[i];\n        }\n    }\n    if (even == odd) {\n\
    \        return \"YES\";\n    }\n    else {\n        return \"NO\";\n    }", " \
    \   long even = 0;\n    long odd = 0;\n    for (long i = 0; i < lst1.size(); i++)\
    \ {\n        if (lst1[i] % 2 == 0) {\n            even = even + lst1[i];\n   \
    \     } else {\n            odd = odd + lst1[i];\n        }\n    }\n    for (long\
    \ i = 0; i < lst2.size(); i++) {\n        if (lst2[i] % 2 == 0) {\n          \
    \  even = even + lst2[i];\n        } else {\n            odd = odd + lst2[i];\n\
    \        }\n    }\n    if (even > odd) {\n        return \"NO\";\n    } else {\n\
    \        return \"YES\";\n    }", '    // Your code here', '    // Your code here',
  "    // Write your code here\n    long even = 0;\n    long odd = 0;\n    long evenCount\
    \ = 0;\n    long oddCount = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n\
    \    long evenMax = lst1[0];\n    long oddMax = lst1[0];\n    long evenMin = lst1[0];\n\
    \    long oddMin = lst1[0];\n    long evenMax2 = lst2[0];\n    long oddMax2 =\
    \ lst2[0];\n    long evenMin2 = lst2[0];\n    long oddMin2 = lst2[0];\n    long\
    \ evenMax3 = lst2[0];\n    long oddMax3 = lst2[0];\n    long evenMin3 = lst2[0];\n\
    \    long oddMin3 = lst2[0];\n    long evenMax4 = lst2[0];\n    long oddMax4 =\
    \ lst2[0];\n    long evenMin4 = lst2[0];\n    long oddMin4 = lst2[0];\n    long\
    \ evenMax5 = lst2[0];\n    long oddMax5 = lst2[0];\n    long evenMin5 = lst2[0];\n\
    \    long oddMin5 = lst2[0];\n    long evenMax6 = lst2[0];\n    long oddMax6 =\
    \ lst2[0];\n    long evenMin6 = lst2[0];\n    long oddMin6 = lst2[0];\n    long\
    \ evenMax7 = lst2[0];\n    long oddMax7 = lst2[0];\n    long evenMin7 = lst2[0];\n\
    \    long oddMin7 = lst2[0];\n    long evenMax8 = lst2[0];\n    long oddMax8 =\
    \ lst2[0];\n    long evenMin8 = lst2[0];\n    long oddMin8 = lst2[0];\n    long\
    \ evenMax9 = lst2[0];\n    long oddMax9 = lst2[0];\n    long evenMin9 = lst2[0];\n\
    \    long oddMin9 = lst2[0];\n    long evenMax10 = lst2[0];\n    long oddMax10\
    \ = lst2[0];\n    long evenMin10 = lst2[0];\n    long oddMin10 = lst2[0];\n  \
    \  long evenMax11 = lst2[0];\n    long oddMax11 = lst2[0];\n    long evenMin11\
    \ = lst2[0];\n    long oddMin11 = lst2[0];\n    long evenMax12 = lst2[0];\n  \
    \  long oddMax12 = lst2[0];\n    long evenMin12 = lst2[0];\n    long oddMin12\
    \ = lst2[0];\n    long evenMax13 = lst2[0];\n    long oddMax13 = lst2[0];\n  \
    \  long evenMin13 = lst2[0];\n    long oddMin13 = lst2[0];\n    ", "    // Write\
    \ your code here\n    long even = 0;\n    long odd = 0;\n    long evenCount =\
    \ 0;\n    long oddCount = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n  \
    \  long evenMax = lst1[0];\n    long oddMax = lst1[0];\n    long evenMin = lst1[0];\n\
    \    long oddMin = lst1[0];\n    long evenMax2 = lst2[0];\n    long oddMax2 =\
    \ lst2[0];\n    long evenMin2 = lst2[0];\n    long oddMin2 = lst2[0];\n    for\
    \ (long i = 0; i < lst1.size(); i++) {\n        if (lst1[i] > evenMax) {\n   \
    \         evenMax = lst1[i];\n        }\n        if (lst1[i] < evenMin) {\n  \
    \          evenMin = lst1[i];\n        }\n        if (lst1[i] > evenMax2) {\n\
    \            evenMax2 = lst2[i];\n        }\n        if (lst1[i] < evenMin2) {\n\
    \            evenMin2 = lst2[i];\n        }\n    }\n    for (long i = 0; i < lst2.size();\
    \ i++) {\n        if (lst2[i] > oddMax) {\n            oddMax = lst2[i];\n   \
    \     }\n        if (lst2[i] < oddMin) {\n            oddMin = lst2[i];\n    \
    \    }\n        if (lst2[i] > oddMax2) {\n            oddMax2 = lst2[i];\n   \
    \     }\n        if (lst2[i] < oddMin2) {\n            oddMin2 = lst2[i];\n  \
    \      }\n    }\n    for (long i = 0; i < lst1.size(); i++) {\n        if (lst1[i]\
    \ > evenMax) {\n            evenCount++;\n            evenSum += lst1[i];\n  \
    \      }\n        if (lst1[i] < evenMin) {\n            oddCount++;\n        \
    \    oddSum += lst1[i];\n        }\n        if (lst1[i] > evenMax2) {\n      \
    \      evenCount++;\n            evenSum += lst2[i];\n        }\n        if (lst1[i]\
    \ < evenMin2) {\n            oddCount++;\n            oddSum += lst2[i];\n   \
    \     }\n    }\n    for (long i = 0; i < lst2.size(); i++) {\n        if (lst2[i]\
    \ > oddMax) {\n            oddCount++;\n            oddSum += lst2[i];\n     \
    \   }\n        if (lst2[i] < oddMin) {\n            evenCount++;\n           \
    \ evenSum += lst2[i];\n        }\n        if (lst2[i] > oddMax2) {\n         \
    \   oddCount++;\n            oddSum += lst2[i];\n        }\n        if (lst2[i]\
    \ < oddMin2) {\n            evenCount++;\n            evenSum += lst2[i];\n  \
    \      }\n    }\n    if (evenCount == lst1.size()) {\n", "    long even = 0;\n\
    \    long odd = 0;\n    long total = 0;\n    long evenTotal = 0;\n    long oddTotal\
    \ = 0;\n    long evenEven = 0;\n    long evenOdd = 0;\n    long oddEven = 0;\n\
    \    long oddOdd = 0;\n    long evenEvenTotal = 0;\n    long evenOddTotal = 0;\n\
    \    long oddEvenTotal = 0;\n    long oddOddTotal = 0;\n    long evenEvenEven\
    \ = 0;\n    long evenOddEven = 0;\n    long oddEvenEven = 0;\n    long oddOddEven\
    \ = 0;\n    long evenEvenEvenTotal = 0;\n    long evenOddEvenTotal = 0;\n    long\
    \ oddEvenEvenTotal = 0;\n    long oddOddEvenTotal = 0;\n    long evenEvenEvenEven\
    \ = 0;\n    long evenOddEvenEven = 0;\n    long oddEvenEvenEven = 0;\n    long\
    \ oddOddEvenEven = 0;\n    long evenEvenEvenEvenTotal = 0;\n    long evenOddEvenEvenTotal\
    \ = 0;\n    long oddEvenEvenEvenTotal = 0;\n    long oddOddEvenEven = 0;\n   \
    \ long evenEvenEvenEvenTotal = 0;\n    long evenOddEvenEven = 0;\n    long oddEvenEvenEven\
    \ = 0;\n    long oddOddEvenEven = 0;\n    long evenEvenEvenEvenTotal = 0;\n  \
    \  long evenOddEvenEven = 0;\n    long oddEvenEvenEven = 0;\n    long oddOddEvenEven\
    \ = 0;\n    long evenEvenEvenEvenTotal = 0;\n    long evenOddEvenEven = 0;\n \
    \   long oddEvenEvenEven = 0;\n    long oddOddEvenEven = 0;\n    long evenEvenEvenEvenTotal\
    \ = 0;\n    long evenOddEvenEven = 0;\n    long oddEvenEvenEven = 0;\n    long\
    \ oddOddEvenEven = 0;\n    long evenEvenEvenEvenTotal = 0;\n    long evenOddEvenEven\
    \ = 0;\n    long oddEvenEvenEven = 0;\n    long oddOddEvenEven = 0;\n    long\
    \ evenEvenEvenEvenTotal = 0;\n    long evenOddEvenEven = 0;\n    long oddEvenEvenEven\
    \ = 0;\n    long oddOddEvenEven = 0;\n    long evenEvenEvenEvenTotal = 0;\n  \
    \  long evenOddEvenEven = 0;\n    long oddEvenEvenEven = 0;\n    long oddOddEvenEven\
    \ = 0;\n    long evenEvenEvenEvenTotal = 0;\n    long evenOddEvenEven = 0;\n \
    \   long oddEvenEvenEven = 0;\n    long oddOddEvenEven = 0;\n    long evenEvenEvenEvenTotal\
    \ = 0;\n    long evenOdd", '    // Your code goes here', "    // Write your code\
    \ here\n    long even = 0;\n    long odd = 0;\n    long evenCount = 0;\n    long\
    \ oddCount = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n    long evenMax\
    \ = std::numeric_limits<long>::min();\n    long oddMax = std::numeric_limits<long>::min();\n\
    \    long evenMin = std::numeric_limits<long>::max();\n    long oddMin = std::numeric_limits<long>::max();\n\
    \    long evenTotal = 0;\n    long oddTotal = 0;\n    long evenMinMax = std::numeric_limits<long>::min();\n\
    \    long oddMinMax = std::numeric_limits<long>::min();\n    long evenMaxMin =\
    \ std::numeric_limits<long>::max();\n    long oddMaxMin = std::numeric_limits<long>::max();\n\
    \    long evenMinSum = std::numeric_limits<long>::min();\n    long oddMinSum =\
    \ std::numeric_limits<long>::min();\n    long evenMaxSum = std::numeric_limits<long>::max();\n\
    \    long oddMaxSum = std::numeric_limits<long>::max();\n    long evenMinMaxSum\
    \ = std::numeric_limits<long>::min();\n    long oddMinMaxSum = std::numeric_limits<long>::min();\n\
    \    long evenMaxMinSum = std::numeric_limits<long>::max();\n    long oddMaxMinSum\
    \ = std::numeric_limits<long>::max();\n    long evenMinSumMax = std::numeric_limits<long>::min();\n\
    \    long oddMinSumMax = std::numeric_limits<long>::min();\n    long evenMaxSumMax\
    \ = std::numeric_limits<long>::max();\n    long oddMaxSumMax = std::numeric_limits<long>::max();\n\
    \    long evenMinMaxSumMax = std::numeric_limits<long>::min();\n    long oddMinMaxSumMax\
    \ = std::numeric_limits<long>::min();\n    long evenMaxMinSumMax = std::numeric_limits<long>::max();\n\
    \    long oddMaxMinSumMax = std::numeric_limits<long>::max();\n    long evenMinSumMaxMin\
    \ = std::numeric_limits<long>::min();\n    long oddMinSumMaxMin = std::numeric_limits<long>::min();\n\
    \    long evenMaxSumMaxMin = std::numeric_limits<long>::max();\n    long oddMaxSumMaxMin\
    \ = std::numeric_limits<long>::max();\n    long evenMinMaxSumMaxMin = std::numeric_limits<long>::min();\n\
    \    long odd", '    // Your code here', "    // Write your code here\n    long\
    \ even = 0;\n    long odd = 0;\n    long evenCount = 0;\n    long oddCount = 0;\n\
    \    long evenSum = 0;\n    long oddSum = 0;\n    long evenMax = std::numeric_limits<long>::max();\n\
    \    long oddMax = std::numeric_limits<long>::max();\n    long evenMin = std::numeric_limits<long>::min();\n\
    \    long oddMin = std::numeric_limits<long>::min();\n    long evenSum2 = 0;\n\
    \    long oddSum2 = 0;\n    long evenMax2 = 0;\n    long oddMax2 = 0;\n    long\
    \ evenMin2 = 0;\n    long oddMin2 = 0;\n    long evenSum3 = 0;\n    long oddSum3\
    \ = 0;\n    long evenMax3 = 0;\n    long oddMax3 = 0;\n    long evenMin3 = 0;\n\
    \    long oddMin3 = 0;\n    long evenSum4 = 0;\n    long oddSum4 = 0;\n    long\
    \ evenMax4 = 0;\n    long oddMax4 = 0;\n    long evenMin4 = 0;\n    long oddMin4\
    \ = 0;\n    long evenSum5 = 0;\n    long oddSum5 = 0;\n    long evenMax5 = 0;\n\
    \    long oddMax5 = 0;\n    long evenMin5 = 0;\n    long oddMin5 = 0;\n    long\
    \ evenSum6 = 0;\n    long oddSum6 = 0;\n    long evenMax6 = 0;\n    long oddMax6\
    \ = 0;\n    long evenMin6 = 0;\n    long oddMin6 = 0;\n    long evenSum7 = 0;\n\
    \    long oddSum7 = 0;\n    long evenMax7 = 0;\n    long oddMax7 = 0;\n    long\
    \ evenMin7 = 0;\n    long oddMin7 = 0;\n    long evenSum8 = 0;\n    long oddSum8\
    \ = 0;\n    long evenMax8 = 0;\n    long oddMax8 = 0;\n    long evenMin8 = 0;\n\
    \    long oddMin8 = 0;\n    long evenSum9 = 0;\n    long oddSum9 = 0;\n    long\
    \ evenMax9 = 0;\n    long oddMax9 = 0;\n    long evenMin9 = 0;\n    long oddMin9\
    \ = 0;\n    long evenSum10 = 0;\n    long oddSum10 = 0;\n    long evenMax10 =\
    \ 0;\n    long oddMax10 = 0;\n    long evenMin10 = 0;\n    long oddMin10 = 0;\n\
    \    long evenSum11 = 0;\n    long oddSum11 = 0;\n    long evenMax11 = 0;\n  \
    \  long oddMax11 = 0;\n    long evenMin11 = 0;\n    long oddMin11 = 0;\n    long\
    \ evenSum12 = 0;\n    long oddSum12 = 0;\n    long evenMax12 = 0;\n", '    //
    code here', '    // Your code here', "    // Write your code here\n    long even\
    \ = 0;\n    long odd = 0;\n    long evenCount = 0;\n    long oddCount = 0;\n \
    \   long evenSum = 0;\n    long oddSum = 0;\n    long evenMax = std::numeric_limits<long>::max();\n\
    \    long oddMax = std::numeric_limits<long>::max();\n    long evenMin = std::numeric_limits<long>::min();\n\
    \    long oddMin = std::numeric_limits<long>::min();\n    long evenMin = std::numeric_limits<long>::min();\n\
    \    long oddMin = std::numeric_limits<long>::min();\n    long evenMax = std::numeric_limits<long>::max();\n\
    \    long oddMax = std::numeric_limits<long>::max();\n    long evenMin = std::numeric_limits<long>::min();\n\
    \    long oddMin = std::numeric_limits<long>::min();\n    long evenMin = std::numeric_limits<long>::min();\n\
    \    long oddMin = std::numeric_limits<long>::min();\n    long evenMax = std::numeric_limits<long>::max();\n\
    \    long oddMax = std::numeric_limits<long>::max();\n    long evenMin = std::numeric_limits<long>::min();\n\
    \    long oddMin = std::numeric_limits<long>::min();\n    long evenMin = std::numeric_limits<long>::min();\n\
    \    long oddMin = std::numeric_limits<long>::min();\n    long evenMax = std::numeric_limits<long>::max();\n\
    \    long oddMax = std::numeric_limits<long>::max();\n    long evenMin = std::numeric_limits<long>::min();\n\
    \    long oddMin = std::numeric_limits<long>::min();\n    long evenMin = std::numeric_limits<long>::min();\n\
    \    long oddMin = std::numeric_limits<long>::min();\n    long evenMax = std::numeric_limits<long>::max();\n\
    \    long oddMax = std::numeric_limits<long>::max();\n    long evenMin = std::numeric_limits<long>::min();\n\
    \    long oddMin = std::numeric_limits<long>::min();\n    long evenMin = std::numeric_limits<long>::min();\n\
    \    long oddMin = std::numeric_limits<long>::min();\n    long evenMax = std::numeric_limits<long>::max();\n\
    \    long oddMax = std::numeric_limits<long>::max();\n    long evenMin = std::numeric_limits<long>::min();\n\
    \    long oddMin = std::numeric_limits<long>::", "    // Your code here\n    std::vector<long>\
    \ even;\n    for(long i = 0; i < lst1.size(); i++) {\n        if(lst1[i] % 2 ==\
    \ 0) {\n            even.push_back(lst1[i]);\n        }\n    }\n    for(long i\
    \ = 0; i < lst2.size(); i++) {\n        if(lst2[i] % 2 == 0) {\n            even.push_back(lst2[i]);\n\
    \        }\n    }\n    for(long i = 0; i < even.size(); i++) {\n        for(long\
    \ j = 0; j < even.size(); j++) {\n            if(even[i] > even[j]) {\n      \
    \          long temp = even[i];\n                even[i] = even[j];\n        \
    \        even[j] = temp;\n            }\n        }\n    }\n    for(long i = 0;\
    \ i < even.size(); i++) {\n        if(even[i] % 2 == 0) {\n            return\
    \ \"YES\";\n        }\n    }\n    return \"NO\";", '    // Your code here', '    //
    Your code here', '    // Your code here', "    long even = 0;\n    long odd =\
    \ 0;\n    long evenCount = 0;\n    long oddCount = 0;\n    long evenSum = 0;\n\
    \    long oddSum = 0;\n    long evenMax = std::numeric_limits<long>::min();\n\
    \    long oddMax = std::numeric_limits<long>::min();\n    long evenMin = std::numeric_limits<long>::max();\n\
    \    long oddMin = std::numeric_limits<long>::max();\n    long evenMinSum = std::numeric_limits<long>::max();\n\
    \    long oddMinSum = std::numeric_limits<long>::max();\n    long evenMaxSum =\
    \ std::numeric_limits<long>::max();\n    long oddMaxSum = std::numeric_limits<long>::max();\n\
    \    long evenMinCount = std::numeric_limits<long>::max();\n    long oddMinCount\
    \ = std::numeric_limits<long>::max();\n    long evenMaxCount = std::numeric_limits<long>::max();\n\
    \    long oddMaxCount = std::numeric_limits<long>::max();\n    long evenMinMax\
    \ = std::numeric_limits<long>::max();\n    long oddMinMax = std::numeric_limits<long>::max();\n\
    \    long evenMinMaxSum = std::numeric_limits<long>::max();\n    long oddMinMaxSum\
    \ = std::numeric_limits<long>::max();\n    long evenMinMaxCount = std::numeric_limits<long>::max();\n\
    \    long oddMinMaxCount = std::numeric_limits<long>::max();\n    long evenMinMaxSum\
    \ = std::numeric_limits<long>::max();\n    long oddMinMaxSum = std::numeric_limits<long>::max();\n\
    \    long evenMinMaxCount = std::numeric_limits<long>::max();\n    long oddMinMaxCount\
    \ = std::numeric_limits<long>::max();\n    long evenMinMaxSum = std::numeric_limits<long>::max();\n\
    \    long oddMinMaxSum = std::numeric_limits<long>::max();\n    long evenMinMaxCount\
    \ = std::numeric_limits<long>::max();\n    long oddMinMaxCount = std::numeric_limits<long>::max();\n\
    \    long evenMinMaxSum = std::numeric_limits<long>::max();\n    long oddMinMaxSum\
    \ = std::numeric_limits<long>::max();\n    long evenMinMaxCount = std::numeric_limits<long>::max();\n\
    \    long oddMinMaxCount = std::numeric_limits<long>::max();\n    long evenMinMaxSum\
    \ = std::numeric_limits<long>::max();\n    long oddMinMaxSum = std::numeric_limits<long",
  "    // Your code here\n    ", "    // Write your code here\n    long even = 0;\n\
    \    long odd = 0;\n    long count = 0;\n    long evenCount = 0;\n    long oddCount\
    \ = 0;\n    long evenOdd = 0;\n    long evenOddCount = 0;\n    long evenOddEven\
    \ = 0;\n    long evenOddEvenCount = 0;\n    long evenOddEvenOdd = 0;\n    long\
    \ evenOddEvenOddCount = 0;\n    long evenOddEvenOddEven = 0;\n    long evenOddEvenOddEvenCount\
    \ = 0;\n    long evenOddEvenOddEvenOdd = 0;\n    long evenOddEvenOddEvenOddCount\
    \ = 0;\n    long evenOddEvenOddEvenOddEven = 0;\n    long evenOddEvenOddEvenOddEvenCount\
    \ = 0;\n    long evenOddEvenOddEvenOddEvenOdd = 0;\n    long evenOddEvenOddEvenOddEvenOddCount\
    \ = 0;\n    long evenOddEvenOddEvenOddEvenOddEven = 0;\n    long evenOddEvenOddEvenOddEvenOddEvenCount\
    \ = 0;\n    long evenOddEvenOddEvenOddEvenOddEvenOdd = 0;\n    long evenOddEvenOddEvenOddEvenOddEvenOddCount\
    \ = 0;\n    long evenOddEvenOddEvenOddEvenOddEvenOddEven = 0;\n    long evenOddEvenOddEvenOddEvenOddEvenOddCount\
    \ = 0;\n    long evenOddEvenOddEvenOddEvenOddEvenOddEvenOdd = 0;\n    long evenOddEvenOddEvenOddEvenOddEvenOddEvenOddCount\
    \ = 0;\n    long evenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = 0;\n    long\
    \ evenOddEvenOddEvenOddEvenOddEvenOddEvenOddCount = 0;\n    long evenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = 0;\n    long evenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddCount = 0;\n\
    \    long evenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = 0;\n    long\
    \ evenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddCount = 0;\n    long evenOddEvenOdd",
  "    long even = 0;\n    long odd = 0;\n    long evenCount = 0;\n    long oddCount\
    \ = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n    long evenMax = std::numeric_limits<long>::min();\n\
    \    long oddMax = std::numeric_limits<long>::min();\n    long evenMin = std::numeric_limits<long>::max();\n\
    \    long oddMin = std::numeric_limits<long>::max();\n    long evenMaxSum = std::numeric_limits<long>::min();\n\
    \    long oddMaxSum = std::numeric_limits<long>::min();\n    long evenMinSum =\
    \ std::numeric_limits<long>::max();\n    long oddMinSum = std::numeric_limits<long>::max();\n\
    \    long evenMaxCount = std::numeric_limits<long>::min();\n    long oddMaxCount\
    \ = std::numeric_limits<long>::min();\n    long evenMinCount = std::numeric_limits<long>::max();\n\
    \    long oddMinCount = std::numeric_limits<long>::max();\n    long evenMaxSumOfEven\
    \ = std::numeric_limits<long>::min();\n    long oddMaxSumOfEven = std::numeric_limits<long>::min();\n\
    \    long evenMinSumOfEven = std::numeric_limits<long>::max();\n    long oddMinSumOfEven\
    \ = std::numeric_limits<long>::max();\n    long evenMaxSumOfOdd = std::numeric_limits<long>::min();\n\
    \    long oddMaxSumOfOdd = std::numeric_limits<long>::min();\n    long evenMinSumOfOdd\
    \ = std::numeric_limits<long>::max();\n    long oddMinSumOfOdd = std::numeric_limits<long>::max();\n\
    \    long evenMaxCountOfEven = std::numeric_limits<long>::min();\n    long oddMaxCountOfEven\
    \ = std::numeric_limits<long>::min();\n    long evenMinCountOfEven = std::numeric_limits<long>::max();\n\
    \    long oddMinCountOfEven = std::numeric_limits<long>::max();\n    long evenMaxCountOfOdd\
    \ = std::numeric_limits<long>::min();\n    long oddMaxCountOfOdd = std::numeric_limits<long>::min();\n\
    \    long evenMinCountOfOdd = std::numeric_limits<long>::max();\n    long oddMinCountOfOdd\
    \ = std::numeric_limits<long>::max();\n    long evenMaxSumOfEvenOdd = std::numeric_limits<long>::min();\n\
    \    long oddMaxSumOfEven", '    // Your code here', "    // Write your code here\n\
    \    long even = 0;\n    long odd = 0;\n    long evenCount = 0;\n    long oddCount\
    \ = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n    long evenMin = INT_MAX;\n\
    \    long oddMin = INT_MAX;\n    long evenMax = INT_MIN;\n    long oddMax = INT_MIN;\n\
    \    long evenMinIndex = -1;\n    long oddMinIndex = -1;\n    long evenMaxIndex\
    \ = -1;\n    long oddMaxIndex = -1;\n    long evenMinSum = INT_MAX;\n    long\
    \ oddMinSum = INT_MAX;\n    long evenMaxSum = INT_MIN;\n    long oddMaxSum = INT_MIN;\n\
    \    long evenMinSumIndex = -1;\n    long oddMinSumIndex = -1;\n    long evenMaxSumIndex\
    \ = -1;\n    long oddMaxSumIndex = -1;\n    long evenMinMin = INT_MAX;\n    long\
    \ oddMinMin = INT_MAX;\n    long evenMaxMin = INT_MIN;\n    long oddMaxMin = INT_MIN;\n\
    \    long evenMinMinIndex = -1;\n    long oddMinMinIndex = -1;\n    long evenMaxMinIndex\
    \ = -1;\n    long oddMaxMinIndex = -1;\n    long evenMinMinSum = INT_MAX;\n  \
    \  long oddMinMinSum = INT_MAX;\n    long evenMaxMinSum = INT_MIN;\n    long oddMaxMinSum\
    \ = INT_MIN;\n    long evenMinMinSumIndex = -1;\n    long oddMinMinSumIndex =\
    \ -1;\n    long evenMaxMinSumIndex = -1;\n    long oddMaxMinSumIndex = -1;\n \
    \   long evenMinMax = INT_MAX;\n    long oddMinMax = INT_MAX;\n    long evenMaxMax\
    \ = INT_MIN;\n    long oddMaxMax = INT_MIN;\n    long evenMinMaxIndex = -1;\n\
    \    long oddMinMaxIndex = -1;\n    long evenMaxMaxIndex = -1;\n    long oddMaxMaxIndex\
    \ = -1;\n    long evenMinMaxSum = INT_MAX;\n    long oddMinMaxSum = INT_MAX;\n\
    \    long evenMaxMaxSum = INT_MIN;\n    long oddMaxMaxSum = INT_MIN;\n    long\
    \ evenMinMaxSumIndex = -1;\n    long oddMinMaxSumIndex = -1;\n    long evenMaxMaxSumIndex\
    \ = -1;\n    long oddMaxMaxSumIndex = -1;\n    long evenMinMinMin = INT_MAX;\n\
    \    long oddMinMinMin = INT_MAX;\n    long evenMaxMinMin = INT_MIN;\n", "   \
    \ // Your code here\n    long even = 0;\n    long odd = 0;\n    long evenCount\
    \ = 0;\n    long oddCount = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n\
    \    long evenMax = lst1[0];\n    long oddMax = lst2[0];\n    long evenMin = lst1[0];\n\
    \    long oddMin = lst2[0];\n    long evenMaxSum = 0;\n    long oddMaxSum = 0;\n\
    \    long evenMinSum = 0;\n    long oddMinSum = 0;\n    long evenMinMax = 0;\n\
    \    long oddMinMax = 0;\n    long evenMinMin = 0;\n    long oddMinMin = 0;\n\
    \    long evenMaxMin = 0;\n    long oddMaxMin = 0;\n    long evenMinMaxSum = 0;\n\
    \    long oddMinMaxSum = 0;\n    long evenMinMinSum = 0;\n    long oddMinMinSum\
    \ = 0;\n    long evenMinMinMax = 0;\n    long oddMinMinMax = 0;\n    long evenMinMinMin\
    \ = 0;\n    long oddMinMinMin = 0;\n    long evenMaxMinMin = 0;\n    long oddMaxMinMin\
    \ = 0;\n    long evenMinMaxMin = 0;\n    long oddMinMaxMin = 0;\n    long evenMinMinMax\
    \ = 0;\n    long oddMinMinMax = 0;\n    long evenMinMinMin = 0;\n    long oddMinMinMin\
    \ = 0;\n    long evenMaxMinMin = 0;\n    long oddMaxMinMin = 0;\n    long evenMinMaxMin\
    \ = 0;\n    long oddMinMaxMin = 0;\n    long evenMinMinMin = 0;\n    long oddMinMinMin\
    \ = 0;\n    long evenMaxMinMin = 0;\n    long oddMaxMinMin = 0;\n    long evenMinMaxMin\
    \ = 0;\n    long oddMinMaxMin = 0;\n    long evenMinMinMin = 0;\n    long oddMinMinMin\
    \ = 0;\n    long evenMaxMinMin = 0;\n    long oddMaxMinMin = 0;\n    long evenMinMaxMin\
    \ = 0;\n    long oddMinMaxMin = 0;\n    long evenMinMinMax = 0;\n    long oddMinMinMax\
    \ = 0;\n    long evenMinMinMin = 0;\n    long oddMinMinMin = 0;\n    long evenMaxMinMin\
    \ = 0;\n    long oddMaxMinMin = 0;\n    long evenMinMaxMin = 0;\n    long oddMinMaxMin\
    \ = 0;\n    long evenMinMinMin = 0;\n    long oddMinMinMin = 0;\n    long evenMaxMinMin\
    \ = 0;\n    long oddMaxMinMin = 0;\n    long evenMinMaxMin = 0;\n    long oddMinMaxMin\
    \ = 0;", "    // Your code here\n    ", '    // Your code here', "    // Write\
    \ your code here\n    long even = 0;\n    long odd = 0;\n    long evenCount =\
    \ 0;\n    long oddCount = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n  \
    \  long evenMax = lst1[0];\n    long oddMax = lst1[0];\n    long evenMin = lst1[0];\n\
    \    long oddMin = lst1[0];\n    long evenMax2 = lst2[0];\n    long oddMax2 =\
    \ lst2[0];\n    long evenMin2 = lst2[0];\n    long oddMin2 = lst2[0];\n    long\
    \ evenMax3 = lst2[0];\n    long oddMax3 = lst2[0];\n    long evenMin3 = lst2[0];\n\
    \    long oddMin3 = lst2[0];\n    long evenMax4 = lst2[0];\n    long oddMax4 =\
    \ lst2[0];\n    long evenMin4 = lst2[0];\n    long oddMin4 = lst2[0];\n    long\
    \ evenMax5 = lst2[0];\n    long oddMax5 = lst2[0];\n    long evenMin5 = lst2[0];\n\
    \    long oddMin5 = lst2[0];\n    long evenMax6 = lst2[0];\n    long oddMax6 =\
    \ lst2[0];\n    long evenMin6 = lst2[0];\n    long oddMin6 = lst2[0];\n    long\
    \ evenMax7 = lst2[0];\n    long oddMax7 = lst2[0];\n    long evenMin7 = lst2[0];\n\
    \    long oddMin7 = lst2[0];\n    long evenMax8 = lst2[0];\n    long oddMax8 =\
    \ lst2[0];\n    long evenMin8 = lst2[0];\n    long oddMin8 = lst2[0];\n    long\
    \ evenMax9 = lst2[0];\n    long oddMax9 = lst2[0];\n    long evenMin9 = lst2[0];\n\
    \    long oddMin9 = lst2[0];\n    long evenMax10 = lst2[0];\n    long oddMax10\
    \ = lst2[0];\n    long evenMin10 = lst2[0];\n    long oddMin10 = lst2[0];\n  \
    \  long evenMax11 = lst2[0];\n    long oddMax11 = lst2[0];\n    long evenMin11\
    \ = lst2[0];\n    long oddMin11 = lst2[0];\n    long evenMax12 = lst2[0];\n  \
    \  long oddMax12 = lst2[0];\n    long evenMin12 = lst2[0];\n    long oddMin12\
    \ = lst2[0];\n    long evenMax13 = lst2[0];\n    long oddMax13 = lst2[0];\n  \
    \  long evenMin13 = lst2[0];\n    long oddMin13 = lst2[0];\n    ", "    // Write\
    \ your code here\n    long even = 0;\n    long odd = 0;\n    long evenCount =\
    \ 0;\n    long oddCount = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n  \
    \  long evenMax = std::numeric_limits<long>::max();\n    long oddMax = std::numeric_limits<long>::min();\n\
    \    long evenMin = std::numeric_limits<long>::min();\n    long oddMin = std::numeric_limits<long>::max();\n\
    \    long evenSum2 = 0;\n    long oddSum2 = 0;\n    long evenMax2 = 0;\n    long\
    \ oddMax2 = 0;\n    long evenMin2 = 0;\n    long oddMin2 = 0;\n    long evenSum3\
    \ = 0;\n    long oddSum3 = 0;\n    long evenMax3 = 0;\n    long oddMax3 = 0;\n\
    \    long evenMin3 = 0;\n    long oddMin3 = 0;\n    long evenSum4 = 0;\n    long\
    \ oddSum4 = 0;\n    long evenMax4 = 0;\n    long oddMax4 = 0;\n    long evenMin4\
    \ = 0;\n    long oddMin4 = 0;\n    long evenSum5 = 0;\n    long oddSum5 = 0;\n\
    \    long evenMax5 = 0;\n    long oddMax5 = 0;\n    long evenMin5 = 0;\n    long\
    \ oddMin5 = 0;\n    long evenSum6 = 0;\n    long oddSum6 = 0;\n    long evenMax6\
    \ = 0;\n    long oddMax6 = 0;\n    long evenMin6 = 0;\n    long oddMin6 = 0;\n\
    \    long evenSum7 = 0;\n    long oddSum7 = 0;\n    long evenMax7 = 0;\n    long\
    \ oddMax7 = 0;\n    long evenMin7 = 0;\n    long oddMin7 = 0;\n    long evenSum8\
    \ = 0;\n    long oddSum8 = 0;\n    long evenMax8 = 0;\n    long oddMax8 = 0;\n\
    \    long evenMin8 = 0;\n    long oddMin8 = 0;\n    long evenSum9 = 0;\n    long\
    \ oddSum9 = 0;\n    long evenMax9 = 0;\n    long oddMax9 = 0;\n    long evenMin9\
    \ = 0;\n    long oddMin9 = 0;\n    long evenSum10 = 0;\n    long oddSum10 = 0;\n\
    \    long evenMax10 = 0;\n    long oddMax10 = 0;\n    long evenMin10 = 0;\n  \
    \  long oddMin10 = 0;\n    long evenSum11 = 0;\n    long oddSum11 = 0;\n    long\
    \ evenMax11 = 0;\n    long oddMax11 = 0;\n    long evenMin11 = 0;\n    long oddMin11\
    \ = 0;\n    long evenSum12 = 0;\n    long oddSum12 = 0;\n    long evenMax12 =\
    \ 0;\n", "    // Write your code here\n    long even = 0;\n    long odd = 0;\n\
    \    long evenCount = 0;\n    long oddCount = 0;\n    long evenSum = 0;\n    long\
    \ oddSum = 0;\n    long evenMin = std::numeric_limits<long>::max();\n    long\
    \ oddMin = std::numeric_limits<long>::max();\n    long evenMax = std::numeric_limits<long>::min();\n\
    \    long oddMax = std::numeric_limits<long>::min();\n    long evenMinSum = std::numeric_limits<long>::max();\n\
    \    long oddMinSum = std::numeric_limits<long>::max();\n    long evenMaxSum =\
    \ std::numeric_limits<long>::min();\n    long oddMaxSum = std::numeric_limits<long>::min();\n\
    \    long evenMinCount = std::numeric_limits<long>::max();\n    long oddMinCount\
    \ = std::numeric_limits<long>::max();\n    long evenMaxCount = std::numeric_limits<long>::min();\n\
    \    long oddMaxCount = std::numeric_limits<long>::min();\n    long evenMinSumCount\
    \ = std::numeric_limits<long>::max();\n    long oddMinSumCount = std::numeric_limits<long>::max();\n\
    \    long evenMaxSumCount = std::numeric_limits<long>::min();\n    long oddMaxSumCount\
    \ = std::numeric_limits<long>::min();\n    long evenMinMin = std::numeric_limits<long>::max();\n\
    \    long oddMinMin = std::numeric_limits<long>::max();\n    long evenMaxMin =\
    \ std::numeric_limits<long>::min();\n    long oddMaxMin = std::numeric_limits<long>::min();\n\
    \    long evenMinMax = std::numeric_limits<long>::max();\n    long oddMinMax =\
    \ std::numeric_limits<long>::max();\n    long evenMaxMax = std::numeric_limits<long>::min();\n\
    \    long oddMaxMax = std::numeric_limits<long>::min();\n    long evenMinMinSum\
    \ = std::numeric_limits<long>::max();\n    long oddMinMinSum = std::numeric_limits<long>::max();\n\
    \    long evenMaxMinSum = std::numeric_limits<long>::min();\n    long oddMaxMinSum\
    \ = std::numeric_limits<long>::min();\n    long evenMinMaxSum = std::numeric_limits<long>::max();\n\
    \    long oddMinMaxSum = std::numeric_limits<long>::max();\n    long evenMaxMaxSum\
    \ = std::numeric_limits<long>::min();\n    long oddMaxMaxSum = std::numeric_",
  "    // Write your code here\n    long even = 0;\n    long odd = 0;\n    long evenCount\
    \ = 0;\n    long oddCount = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n\
    \    long evenMax = lst1[0];\n    long oddMax = lst1[0];\n    long evenMin = lst1[0];\n\
    \    long oddMin = lst1[0];\n    long evenMax2 = lst2[0];\n    long oddMax2 =\
    \ lst2[0];\n    long evenMin2 = lst2[0];\n    long oddMin2 = lst2[0];\n    long\
    \ evenMax3 = lst1[0];\n    long oddMax3 = lst1[0];\n    long evenMin3 = lst1[0];\n\
    \    long oddMin3 = lst1[0];\n    long evenMax4 = lst2[0];\n    long oddMax4 =\
    \ lst2[0];\n    long evenMin4 = lst2[0];\n    long oddMin4 = lst2[0];\n    long\
    \ evenMax5 = lst1[0];\n    long oddMax5 = lst1[0];\n    long evenMin5 = lst1[0];\n\
    \    long oddMin5 = lst1[0];\n    long evenMax6 = lst2[0];\n    long oddMax6 =\
    \ lst2[0];\n    long evenMin6 = lst2[0];\n    long oddMin6 = lst2[0];\n    long\
    \ evenMax7 = lst1[0];\n    long oddMax7 = lst1[0];\n    long evenMin7 = lst1[0];\n\
    \    long oddMin7 = lst1[0];\n    long evenMax8 = lst2[0];\n    long oddMax8 =\
    \ lst2[0];\n    long evenMin8 = lst2[0];\n    long oddMin8 = lst2[0];\n    long\
    \ evenMax9 = lst1[0];\n    long oddMax9 = lst1[0];\n    long evenMin9 = lst1[0];\n\
    \    long oddMin9 = lst1[0];\n    long evenMax10 = lst2[0];\n    long oddMax10\
    \ = lst2[0];\n    long evenMin10 = lst2[0];\n    long oddMin10 = lst2[0];\n  \
    \  long evenMax11 = lst1[0];\n    long oddMax11 = lst1[0];\n    long evenMin11\
    \ = lst1[0];\n    long oddMin11 = lst1[0];\n    long evenMax12 = lst2[0];\n  \
    \  long oddMax12 = lst2[0];\n    long evenMin12 = lst2[0];\n    long oddMin12\
    \ = lst2[0];\n    long evenMax13 = lst1[0];\n    long oddMax13 = lst1[0];\n  \
    \  long evenMin13 = lst1[0];\n    long oddMin13 = lst1[0];\n    ", "    // Your\
    \ code goes here\n    long even = 0;\n    long odd = 0;\n    long even2 = 0;\n\
    \    long odd2 = 0;\n    long even3 = 0;\n    long odd3 = 0;\n    long even4 =\
    \ 0;\n    long odd4 = 0;\n    long even5 = 0;\n    long odd5 = 0;\n    long even6\
    \ = 0;\n    long odd6 = 0;\n    long even7 = 0;\n    long odd7 = 0;\n    long\
    \ even8 = 0;\n    long odd8 = 0;\n    long even9 = 0;\n    long odd9 = 0;\n  \
    \  long even10 = 0;\n    long odd10 = 0;\n    long even11 = 0;\n    long odd11\
    \ = 0;\n    long even12 = 0;\n    long odd12 = 0;\n    long even13 = 0;\n    long\
    \ odd13 = 0;\n    long even14 = 0;\n    long odd14 = 0;\n    long even15 = 0;\n\
    \    long odd15 = 0;\n    long even16 = 0;\n    long odd16 = 0;\n    long even17\
    \ = 0;\n    long odd17 = 0;\n    long even18 = 0;\n    long odd18 = 0;\n    long\
    \ even19 = 0;\n    long odd19 = 0;\n    long even20 = 0;\n    long odd20 = 0;\n\
    \    long even21 = 0;\n    long odd21 = 0;\n    long even22 = 0;\n    long odd22\
    \ = 0;\n    long even23 = 0;\n    long odd23 = 0;\n    long even24 = 0;\n    long\
    \ odd24 = 0;\n    long even25 = 0;\n    long odd25 = 0;\n    long even26 = 0;\n\
    \    long odd26 = 0;\n    long even27 = 0;\n    long odd27 = 0;\n    long even28\
    \ = 0;\n    long odd28 = 0;\n    long even29 = 0;\n    long odd29 = 0;\n    long\
    \ even30 = 0;\n    long odd30 = 0;\n    long even31 = 0;\n    long odd31 = 0;\n\
    \    long even32 = 0;\n    long odd32 = 0;\n    long even33 = 0;\n    long odd33\
    \ = 0;\n    long even34 = 0;\n    long odd34 = 0;\n    long even35 = 0;\n    long\
    \ odd35 = 0;\n    long even36 = 0;\n    long odd36 = 0;\n    long even37 = 0;\n\
    \    long odd37 = 0;\n    long even38 = 0;\n    long odd38 = 0;\n    long even39\
    \ = 0;\n    long odd39 = 0;\n    long even40 = 0;\n    long odd40 = 0;\n    long\
    \ even41 = 0;\n    long odd41 = 0;\n    long even42 = 0;\n    long odd42 = 0;\n\
    \    long even43 = 0;\n    long odd43 = 0;\n", "    // Your code here\n    long\
    \ even = 0;\n    long odd = 0;\n    for (long i = 0; i < lst1.size(); i++) {\n\
    \        if (lst1[i] % 2 == 0) {\n            even = even + lst1[i];\n       \
    \ }\n        else {\n            odd = odd + lst1[i];\n        }\n    }\n    for\
    \ (long i = 0; i < lst2.size(); i++) {\n        if (lst2[i] % 2 == 0) {\n    \
    \        even = even + lst2[i];\n        }\n        else {\n            odd =\
    \ odd + lst2[i];\n        }\n    }\n    if (even > odd) {\n        return \"NO\"\
    ;\n    }\n    else {\n        return \"YES\";\n    }", '    // Your code here',
  '    // Your code here', "    // Write your code here\n    ", "    // Write your\
    \ code here\n    long even = 0;\n    long odd = 0;\n    long evenCount = 0;\n\
    \    long oddCount = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n    long\
    \ evenMax = std::numeric_limits<long>::min();\n    long oddMax = std::numeric_limits<long>::min();\n\
    \    long evenMin = std::numeric_limits<long>::max();\n    long oddMin = std::numeric_limits<long>::max();\n\
    \    long evenSumMax = std::numeric_limits<long>::min();\n    long oddSumMax =\
    \ std::numeric_limits<long>::min();\n    long evenSumMin = std::numeric_limits<long>::max();\n\
    \    long oddSumMin = std::numeric_limits<long>::max();\n    long evenSumMax2\
    \ = std::numeric_limits<long>::min();\n    long oddSumMax2 = std::numeric_limits<long>::min();\n\
    \    long evenSumMin2 = std::numeric_limits<long>::max();\n    long oddSumMin2\
    \ = std::numeric_limits<long>::max();\n    long evenSumMax3 = std::numeric_limits<long>::min();\n\
    \    long oddSumMax3 = std::numeric_limits<long>::min();\n    long evenSumMin3\
    \ = std::numeric_limits<long>::max();\n    long oddSumMin3 = std::numeric_limits<long>::max();\n\
    \    long evenSumMax4 = std::numeric_limits<long>::min();\n    long oddSumMax4\
    \ = std::numeric_limits<long>::min();\n    long evenSumMin4 = std::numeric_limits<long>::max();\n\
    \    long oddSumMin4 = std::numeric_limits<long>::max();\n    long evenSumMax5\
    \ = std::numeric_limits<long>::min();\n    long oddSumMax5 = std::numeric_limits<long>::min();\n\
    \    long evenSumMin5 = std::numeric_limits<long>::max();\n    long oddSumMin5\
    \ = std::numeric_limits<long>::max();\n    long evenSumMax6 = std::numeric_limits<long>::min();\n\
    \    long oddSumMax6 = std::numeric_limits<long>::min();\n    long evenSumMin6\
    \ = std::numeric_limits<long>::max();\n    long oddSumMin6 = std::numeric_limits<long>::max();\n\
    \    long evenSumMax7 = std::numeric_limits<long>::min();\n    long oddSumMax7\
    \ = std::numeric_limits<long>::min();\n    long evenSumMin7 = std::numeric_limits<long>::max();\n\
    \    long oddSumMin7 = std::numeric_limits<long>::", '    // Your code here',
  "    // Your code here\n    long even = 0;\n    long odd = 0;\n    long eveneven\
    \ = 0;\n    long evenodd = 0;\n    long oddodd = 0;\n    long eveneveneven = 0;\n\
    \    long evenoddodd = 0;\n    long oddoddeven = 0;\n    long oddoddodd = 0;\n\
    \    long eveneveneveneven = 0;\n    long evenoddoddeven = 0;\n    long oddoddeveneven\
    \ = 0;\n    long oddoddoddeven = 0;\n    long eveneveneveneven = 0;\n    long\
    \ evenoddoddoddeven = 0;\n    long oddoddeveneven = 0;\n    long oddoddoddeven\
    \ = 0;\n    long eveneveneveneven = 0;\n    long evenoddoddoddeven = 0;\n    long\
    \ oddoddeveneven = 0;\n    long oddoddoddeven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddoddoddeven = 0;\n    long oddoddeveneven = 0;\n    long\
    \ oddoddoddeven = 0;\n    long eveneveneveneven = 0;\n    long evenoddoddoddeven\
    \ = 0;\n    long oddoddeveneven = 0;\n    long oddoddoddeven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddoddoddeven = 0;\n    long oddoddeveneven = 0;\n    long\
    \ oddoddoddeven = 0;\n    long eveneveneveneven = 0;\n    long evenoddoddoddeven\
    \ = 0;\n    long oddoddeveneven = 0;\n    long oddoddoddeven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddoddoddeven = 0;\n    long oddoddeveneven = 0;\n    long\
    \ oddoddoddeven = 0;\n    long eveneveneveneven = 0;\n    long evenoddoddoddeven\
    \ = 0;\n    long oddoddeveneven = 0;\n    long oddoddoddeven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddoddoddeven = 0;\n    long oddoddeveneven = 0;\n    long\
    \ oddoddoddeven = 0;\n    long eveneveneveneven = 0;\n    long evenoddoddoddeven\
    \ = 0;\n    long oddoddeveneven = 0;\n    long oddoddoddeven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddoddoddeven = 0;\n    long oddoddeveneven = 0;\n    long\
    \ oddoddoddeven = 0;\n    long eveneveneveneven = 0;\n    long evenoddoddoddeven\
    \ = 0;\n    long oddoddeveneven = 0;\n    long oddoddoddeven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddoddoddeven = 0;\n    long oddoddeveneven", '    // Your
    code here', "    // Write your code here\n    long even = 0;\n    long odd = 0;\n\
    \    long evenCount = 0;\n    long oddCount = 0;\n    long evenSum = 0;\n    long\
    \ oddSum = 0;\n    long evenMin = lst1[0];\n    long oddMin = lst1[0];\n    long\
    \ evenMax = lst1[0];\n    long oddMax = lst1[0];\n    long evenMin2 = lst2[0];\n\
    \    long oddMin2 = lst2[0];\n    long evenMax2 = lst2[0];\n    long oddMax2 =\
    \ lst2[0];\n    long evenMin3 = lst2[0];\n    long oddMin3 = lst2[0];\n    long\
    \ evenMax3 = lst2[0];\n    long oddMax3 = lst2[0];\n    long evenMin4 = lst2[0];\n\
    \    long oddMin4 = lst2[0];\n    long evenMax4 = lst2[0];\n    long oddMax4 =\
    \ lst2[0];\n    long evenMin5 = lst2[0];\n    long oddMin5 = lst2[0];\n    long\
    \ evenMax5 = lst2[0];\n    long oddMax5 = lst2[0];\n    long evenMin6 = lst2[0];\n\
    \    long oddMin6 = lst2[0];\n    long evenMax6 = lst2[0];\n    long oddMax6 =\
    \ lst2[0];\n    long evenMin7 = lst2[0];\n    long oddMin7 = lst2[0];\n    long\
    \ evenMax7 = lst2[0];\n    long oddMax7 = lst2[0];\n    long evenMin8 = lst2[0];\n\
    \    long oddMin8 = lst2[0];\n    long evenMax8 = lst2[0];\n    long oddMax8 =\
    \ lst2[0];\n    long evenMin9 = lst2[0];\n    long oddMin9 = lst2[0];\n    long\
    \ evenMax9 = lst2[0];\n    long oddMax9 = lst2[0];\n    long evenMin10 = lst2[0];\n\
    \    long oddMin10 = lst2[0];\n    long evenMax10 = lst2[0];\n    long oddMax10\
    \ = lst2[0];\n    long evenMin11 = lst2[0];\n    long oddMin11 = lst2[0];\n  \
    \  long evenMax11 = lst2[0];\n    long oddMax11 = lst2[0];\n    long evenMin12\
    \ = lst2[0];\n    long oddMin12 = lst2[0];\n    long evenMax12 = lst2[0];\n  \
    \  long oddMax12 = lst2[0];\n    long evenMin13 = lst2[0];\n    long oddMin13\
    \ = lst2[0];\n    long evenMax13 = lst2[0];\n    long oddMax13 = lst2[0];\n  \
    \  ", "    long even = 0;\n    long odd = 0;\n    long eveneven = 0;\n    long\
    \ evenodd = 0;\n    long oddodd = 0;\n    long eveneveneven = 0;\n    long evenoddodd\
    \ = 0;\n    long oddoddeven = 0;\n    long oddoddodd = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddoddeven = 0;\n    long oddoddeveneven = 0;\n    long oddoddoddeven\
    \ = 0;\n    long eveneveneveneven = 0;\n    long evenoddoddoddeven = 0;\n    long\
    \ oddoddeveneveneven = 0;\n    long oddoddoddeveneven = 0;\n    long eveneveneveneveneven\
    \ = 0;\n    long evenoddoddoddeveneven = 0;\n    long oddoddeveneveneven = 0;\n\
    \    long eveneveneveneveneven = 0;\n    long evenoddoddoddeveneven = 0;\n   \
    \ long oddoddeveneveneven = 0;\n    long eveneveneveneveneven = 0;\n    long evenoddoddoddeveneven\
    \ = 0;\n    long oddoddeveneveneven = 0;\n    long eveneveneveneveneven = 0;\n\
    \    long evenoddoddoddeveneven = 0;\n    long oddoddeveneveneven = 0;\n    long\
    \ eveneveneveneveneven = 0;\n    long evenoddoddoddeveneven = 0;\n    long oddoddeveneveneven\
    \ = 0;\n    long eveneveneveneveneven = 0;\n    long evenoddoddoddeveneven = 0;\n\
    \    long oddoddeveneveneven = 0;\n    long eveneveneveneveneven = 0;\n    long\
    \ evenoddoddoddeveneven = 0;\n    long oddoddeveneveneven = 0;\n    long eveneveneveneveneven\
    \ = 0;\n    long evenoddoddoddeveneven = 0;\n    long oddoddeveneven = 0;\n  \
    \  long eveneveneveneven = 0;\n    long evenoddoddoddeveneven = 0;\n    long oddoddeveneven\
    \ = 0;\n    long eveneveneveneven = 0;\n    long evenoddoddoddeven = 0;\n    long\
    \ oddoddeveneven = 0;\n    long eveneveneveneven = 0;\n    long evenoddoddoddeven\
    \ = 0;\n    long oddoddeveneven = 0;\n    long eveneveneveneven = 0;\n    long\
    \ evenoddoddoddeven = 0;\n    long oddoddeveneven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddoddoddeven = 0;\n    long oddoddeveneven = 0;\n    long\
    \ eveneveneveneven = 0;\n    long evenoddoddoddeven = 0;\n    long oddoddeveneven\
    \ = 0;\n    long eveneveneveneven = 0;\n    long evenoddoddoddeven", '    // Your
    code here', '    // Your code here', "    long even = lst1[0];\n    long odd =\
    \ lst2[0];\n    long even1 = lst1[1];\n    long odd1 = lst2[1];\n    long even2\
    \ = lst1[2];\n    long odd2 = lst2[2];\n    long even3 = lst1[3];\n    long odd3\
    \ = lst2[3];\n    long even4 = lst1[4];\n    long odd4 = lst2[4];\n    long even5\
    \ = lst1[5];\n    long odd5 = lst2[5];\n    long even6 = lst1[6];\n    long odd6\
    \ = lst2[6];\n    long even7 = lst1[7];\n    long odd7 = lst2[7];\n    long even8\
    \ = lst1[8];\n    long odd8 = lst2[8];\n    long even9 = lst1[9];\n    long odd9\
    \ = lst2[9];\n    long even10 = lst1[10];\n    long odd10 = lst2[10];\n    long\
    \ even11 = lst1[11];\n    long odd11 = lst2[11];\n    long even12 = lst1[12];\n\
    \    long odd12 = lst2[12];\n    long even13 = lst1[13];\n    long odd13 = lst2[13];\n\
    \    long even14 = lst1[14];\n    long odd14 = lst2[14];\n    long even15 = lst1[15];\n\
    \    long odd15 = lst2[15];\n    long even16 = lst1[16];\n    long odd16 = lst2[16];\n\
    \    long even17 = lst1[17];\n    long odd17 = lst2[17];\n    long even18 = lst1[18];\n\
    \    long odd18 = lst2[18];\n    long even19 = lst1[19];\n    long odd19 = lst2[19];\n\
    \    long even20 = lst1[20];\n    long odd20 = lst2[20];\n    long even21 = lst1[21];\n\
    \    long odd21 = lst2[21];\n    long even22 = lst1[22];\n    long odd22 = lst2[22];\n\
    \    long even23 = lst1[23];\n    long odd23 = lst2[23];\n    long even24 = lst1[24];\n\
    \    long odd24 = lst2[24];\n    long even25 = lst1[25];\n    long odd25 = lst2[25];\n\
    \    long even26 = lst1[26];\n    long odd26 = lst2[26];\n    long even27 = lst",
  "    // Write your code here\n    long even = 0;\n    long odd = 0;\n    long even2\
    \ = 0;\n    long odd2 = 0;\n    long even3 = 0;\n    long odd3 = 0;\n    long\
    \ even4 = 0;\n    long odd4 = 0;\n    long even5 = 0;\n    long odd5 = 0;\n  \
    \  long even6 = 0;\n    long odd6 = 0;\n    long even7 = 0;\n    long odd7 = 0;\n\
    \    long even8 = 0;\n    long odd8 = 0;\n    long even9 = 0;\n    long odd9 =\
    \ 0;\n    long even10 = 0;\n    long odd10 = 0;\n    long even11 = 0;\n    long\
    \ odd11 = 0;\n    long even12 = 0;\n    long odd12 = 0;\n    long even13 = 0;\n\
    \    long odd13 = 0;\n    long even14 = 0;\n    long odd14 = 0;\n    long even15\
    \ = 0;\n    long odd15 = 0;\n    long even16 = 0;\n    long odd16 = 0;\n    long\
    \ even17 = 0;\n    long odd17 = 0;\n    long even18 = 0;\n    long odd18 = 0;\n\
    \    long even19 = 0;\n    long odd19 = 0;\n    long even20 = 0;\n    long odd20\
    \ = 0;\n    long even21 = 0;\n    long odd21 = 0;\n    long even22 = 0;\n    long\
    \ odd22 = 0;\n    long even23 = 0;\n    long odd23 = 0;\n    long even24 = 0;\n\
    \    long odd24 = 0;\n    long even25 = 0;\n    long odd25 = 0;\n    long even26\
    \ = 0;\n    long odd26 = 0;\n    long even27 = 0;\n    long odd27 = 0;\n    long\
    \ even28 = 0;\n    long odd28 = 0;\n    long even29 = 0;\n    long odd29 = 0;\n\
    \    long even30 = 0;\n    long odd30 = 0;\n    long even31 = 0;\n    long odd31\
    \ = 0;\n    long even32 = 0;\n    long odd32 = 0;\n    long even33 = 0;\n    long\
    \ odd33 = 0;\n    long even34 = 0;\n    long odd34 = 0;\n    long even35 = 0;\n\
    \    long odd35 = 0;\n    long even36 = 0;\n    long odd36 = 0;\n    long even37\
    \ = 0;\n    long odd37 = 0;\n    long even38 = 0;\n    long odd38 = 0;\n    long\
    \ even39 = 0;\n    long odd39 = 0;\n    long even40 = 0;\n    long odd40 = 0;\n\
    \    long even41 = 0;\n    long odd41 = 0;\n    long even42 = 0;\n    long odd42\
    \ = 0;\n    long even43 = 0;\n    long odd43 = 0;\n    ", '    // Your code here',
  '    // Your code here', "    // Write your code here\n    long even = 0;\n    long\
    \ odd = 0;\n    long evenCount = 0;\n    long oddCount = 0;\n    long evenSum\
    \ = 0;\n    long oddSum = 0;\n    long evenMax = std::numeric_limits<long>::max();\n\
    \    long oddMax = std::numeric_limits<long>::max();\n    long evenMin = std::numeric_limits<long>::min();\n\
    \    long oddMin = std::numeric_limits<long>::min();\n    long evenMaxCount =\
    \ 0;\n    long oddMaxCount = 0;\n    long evenMinSum = 0;\n    long oddMinSum\
    \ = 0;\n    long evenMaxSum = 0;\n    long oddMaxSum = 0;\n    long evenMinMax\
    \ = 0;\n    long oddMinMax = 0;\n    long evenMinMaxCount = 0;\n    long oddMinMaxCount\
    \ = 0;\n    long evenMinMaxSum = 0;\n    long oddMinMaxSum = 0;\n    long evenMinMaxSumCount\
    \ = 0;\n    long oddMinMaxSumCount = 0;\n    long evenMinMaxSumSum = 0;\n    long\
    \ oddMinMaxSumSum = 0;\n    long evenMinMaxSumSumCount = 0;\n    long oddMinMaxSumSumCount\
    \ = 0;\n    long evenMinMaxSumSumSum = 0;\n    long oddMinMaxSumSumSum = 0;\n\
    \    long evenMinMaxSumSumSumCount = 0;\n    long oddMinMaxSumSumSumCount = 0;\n\
    \    long evenMinMaxSumSumSumSum = 0;\n    long oddMinMaxSumSumSumSum = 0;\n \
    \   long evenMinMaxSumSumSumCount = 0;\n    long oddMinMaxSumSumSumCount = 0;\n\
    \    long evenMinMaxSumSumSumSum = 0;\n    long oddMinMaxSumSumSumSum = 0;\n \
    \   long evenMinMaxSumSumSumSumCount = 0;\n    long oddMinMaxSumSumSumSumCount\
    \ = 0;\n    long evenMinMaxSumSumSumSumSum = 0;\n    long oddMinMaxSumSumSumSumSum\
    \ = 0;\n    long evenMinMaxSumSumSumSumCount = 0;\n    long oddMinMaxSumSumSumSumCount\
    \ = 0;\n    long evenMinMaxSumSumSumSumSum = 0;\n    long oddMinMaxSumSumSumSumSum\
    \ = 0;\n    long evenMinMaxSumSumSumSumCount = 0;\n    long oddMinMaxSumSumSumSumCount\
    \ = 0;\n    long evenMinMaxSumSumSumSumSum = 0;\n    long oddMinMaxSumSumSumSumSum\
    \ = 0;\n    long evenMinMaxSumSumSumSumCount = 0;\n    long oddMinMaxSumSumSumSum",
  "    // Write your code here\n    long even = 0;\n    long odd = 0;\n    long evenCount\
    \ = 0;\n    long oddCount = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n\
    \    long evenMin = std::numeric_limits<long>::max();\n    long oddMin = std::numeric_limits<long>::max();\n\
    \    long evenMax = std::numeric_limits<long>::min();\n    long oddMax = std::numeric_limits<long>::min();\n\
    \    long evenSum2 = 0;\n    long oddSum2 = 0;\n    long evenMin2 = std::numeric_limits<long>::max();\n\
    \    long oddMin2 = std::numeric_limits<long>::max();\n    long evenMax2 = std::numeric_limits<long>::min();\n\
    \    long oddMax2 = std::numeric_limits<long>::min();\n    long evenSum3 = 0;\n\
    \    long oddSum3 = 0;\n    long evenMin3 = std::numeric_limits<long>::max();\n\
    \    long oddMin3 = std::numeric_limits<long>::max();\n    long evenMax3 = std::numeric_limits<long>::min();\n\
    \    long oddMax3 = std::numeric_limits<long>::min();\n    long evenSum4 = 0;\n\
    \    long oddSum4 = 0;\n    long evenMin4 = std::numeric_limits<long>::max();\n\
    \    long oddMin4 = std::numeric_limits<long>::max();\n    long evenMax4 = std::numeric_limits<long>::min();\n\
    \    long oddMax4 = std::numeric_limits<long>::min();\n    long evenSum5 = 0;\n\
    \    long oddSum5 = 0;\n    long evenMin5 = std::numeric_limits<long>::max();\n\
    \    long oddMin5 = std::numeric_limits<long>::max();\n    long evenMax5 = std::numeric_limits<long>::min();\n\
    \    long oddMax5 = std::numeric_limits<long>::min();\n    long evenSum6 = 0;\n\
    \    long oddSum6 = 0;\n    long evenMin6 = std::numeric_limits<long>::max();\n\
    \    long oddMin6 = std::numeric_limits<long>::max();\n    long evenMax6 = std::numeric_limits<long>::min();\n\
    \    long oddMax6 = std::numeric_limits<long>::min();\n    long evenSum7 = 0;\n\
    \    long oddSum7 = 0;\n    long evenMin7 = std::numeric_limits<long>::max();\n\
    \    long oddMin7 = std::numeric_limits<long>::max();\n    long evenMax7 = std::numeric_limits<long>::min();\n\
    \    long oddMax7 = std::numeric_limits<long>::min();\n    long evenSum8", " \
    \   // Your code here\n    std::vector<long> even;\n    for(long i=0;i<lst1.size();i++){\n\
    \        if(lst1[i]%2==0){\n            even.push_back(lst1[i]);\n        }\n\
    \    }\n    for(long i=0;i<lst2.size();i++){\n        if(lst2[i]%2==0){\n    \
    \        even.push_back(lst2[i]);\n        }\n    }\n    if(even.size()==lst1.size()){\n\
    \        return \"YES\";\n    }\n    return \"NO\";", "    // Your code here\n\
    \    long even = 0;\n    long odd = 0;\n    long even2 = 0;\n    long odd2 = 0;\n\
    \    long even3 = 0;\n    long odd3 = 0;\n    long even4 = 0;\n    long odd4 =\
    \ 0;\n    long even5 = 0;\n    long odd5 = 0;\n    long even6 = 0;\n    long odd6\
    \ = 0;\n    long even7 = 0;\n    long odd7 = 0;\n    long even8 = 0;\n    long\
    \ odd8 = 0;\n    long even9 = 0;\n    long odd9 = 0;\n    long even10 = 0;\n \
    \   long odd10 = 0;\n    long even11 = 0;\n    long odd11 = 0;\n    long even12\
    \ = 0;\n    long odd12 = 0;\n    long even13 = 0;\n    long odd13 = 0;\n    long\
    \ even14 = 0;\n    long odd14 = 0;\n    long even15 = 0;\n    long odd15 = 0;\n\
    \    long even16 = 0;\n    long odd16 = 0;\n    long even17 = 0;\n    long odd17\
    \ = 0;\n    long even18 = 0;\n    long odd18 = 0;\n    long even19 = 0;\n    long\
    \ odd19 = 0;\n    long even20 = 0;\n    long odd20 = 0;\n    long even21 = 0;\n\
    \    long odd21 = 0;\n    long even22 = 0;\n    long odd22 = 0;\n    long even23\
    \ = 0;\n    long odd23 = 0;\n    long even24 = 0;\n    long odd24 = 0;\n    long\
    \ even25 = 0;\n    long odd25 = 0;\n    long even26 = 0;\n    long odd26 = 0;\n\
    \    long even27 = 0;\n    long odd27 = 0;\n    long even28 = 0;\n    long odd28\
    \ = 0;\n    long even29 = 0;\n    long odd29 = 0;\n    long even30 = 0;\n    long\
    \ odd30 = 0;\n    long even31 = 0;\n    long odd31 = 0;\n    long even32 = 0;\n\
    \    long odd32 = 0;\n    long even33 = 0;\n    long odd33 = 0;\n    long even34\
    \ = 0;\n    long odd34 = 0;\n    long even35 = 0;\n    long odd35 = 0;\n    long\
    \ even36 = 0;\n    long odd36 = 0;\n    long even37 = 0;\n    long odd37 = 0;\n\
    \    long even38 = 0;\n    long odd38 = 0;\n    long even39 = 0;\n    long odd39\
    \ = 0;\n    long even40 = 0;\n    long odd40 = 0;\n    long even41 = 0;\n    long\
    \ odd41 = 0;\n    long even42 = 0;\n    long odd42 = 0;\n    long even43 = 0;\n\
    \    long odd43 = 0;", "    // Write your code here\n    long even = 0;\n    long\
    \ odd = 0;\n    long count = 0;\n    long sum = 0;\n    long max = 0;\n    long\
    \ min = 0;\n    long temp = 0;\n    long temp2 = 0;\n    long temp3 = 0;\n   \
    \ long temp4 = 0;\n    long temp5 = 0;\n    long temp6 = 0;\n    long temp7 =\
    \ 0;\n    long temp8 = 0;\n    long temp9 = 0;\n    long temp10 = 0;\n    long\
    \ temp11 = 0;\n    long temp12 = 0;\n    long temp13 = 0;\n    long temp14 = 0;\n\
    \    long temp15 = 0;\n    long temp16 = 0;\n    long temp17 = 0;\n    long temp18\
    \ = 0;\n    long temp19 = 0;\n    long temp20 = 0;\n    long temp21 = 0;\n   \
    \ long temp22 = 0;\n    long temp23 = 0;\n    long temp24 = 0;\n    long temp25\
    \ = 0;\n    long temp26 = 0;\n    long temp27 = 0;\n    long temp28 = 0;\n   \
    \ long temp29 = 0;\n    long temp30 = 0;\n    long temp31 = 0;\n    long temp32\
    \ = 0;\n    long temp33 = 0;\n    long temp34 = 0;\n    long temp35 = 0;\n   \
    \ long temp36 = 0;\n    long temp37 = 0;\n    long temp38 = 0;\n    long temp39\
    \ = 0;\n    long temp40 = 0;\n    long temp41 = 0;\n    long temp42 = 0;\n   \
    \ long temp43 = 0;\n    long temp44 = 0;\n    long temp45 = 0;\n    long temp46\
    \ = 0;\n    long temp47 = 0;\n    long temp48 = 0;\n    long temp49 = 0;\n   \
    \ long temp50 = 0;\n    long temp51 = 0;\n    long temp52 = 0;\n    long temp53\
    \ = 0;\n    long temp54 = 0;\n    long temp55 = 0;\n    long temp56 = 0;\n   \
    \ long temp57 = 0;\n    long temp58 = 0;\n    long temp59 = 0;\n    long temp60\
    \ = 0;\n    long temp61 = 0;\n    long temp62 = 0;\n    long temp63 = 0;\n   \
    \ long temp64 = 0;\n    long temp65 = 0;\n    long temp66 = 0;\n    long temp67\
    \ = 0;\n    long temp68 = 0;\n    long temp69 = 0;\n    long temp70 = 0;\n   \
    \ long temp71 = 0;\n    long temp72 = 0;\n    long temp73 = 0;\n    long temp74\
    \ = 0;\n    long temp75 = 0;\n    long temp76 = 0;\n    long temp77 = 0;\n   \
    \ long temp78 = 0;\n    long temp79 = 0;\n    long temp80 = 0;\n    long temp",
  "    // Write your code here\n    long even = 0;\n    long odd = 0;\n    long evenCount\
    \ = 0;\n    long oddCount = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n\
    \    long evenMax = std::numeric_limits<long>::min();\n    long oddMax = std::numeric_limits<long>::min();\n\
    \    long evenMin = std::numeric_limits<long>::max();\n    long oddMin = std::numeric_limits<long>::max();\n\
    \    for (long i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 == 0) {\n\
    \            even = even + lst1[i];\n            evenCount++;\n            evenSum\
    \ = evenSum + lst1[i];\n            if (lst1[i] > evenMax) {\n               \
    \ evenMax = lst1[i];\n            }\n            if (lst1[i] < evenMin) {\n  \
    \              evenMin = lst1[i];\n            }\n        } else {\n         \
    \   odd = odd + lst1[i];\n            oddCount++;\n            oddSum = oddSum\
    \ + lst1[i];\n            if (lst1[i] > oddMax) {\n                oddMax = lst1[i];\n\
    \            }\n            if (lst1[i] < oddMin) {\n                oddMin =\
    \ lst1[i];\n            }\n        }\n    }\n    for (long i = 0; i < lst2.size();\
    \ i++) {\n        if (lst2[i] % 2 == 0) {\n            even = even + lst2[i];\n\
    \            evenCount++;\n            evenSum = evenSum + lst2[i];\n        \
    \    if (lst2[i] > evenMax) {\n                evenMax = lst2[i];\n          \
    \  }\n            if (lst2[i] < evenMin) {\n                evenMin = lst2[i];\n\
    \            }\n        } else {\n            odd = odd + lst2[i];\n         \
    \   oddCount++;\n            oddSum = oddSum + lst2[i];\n            if (lst2[i]\
    \ > oddMax) {\n                oddMax = lst2[i];\n            }\n            if\
    \ (lst2[i] < oddMin) {\n                oddMin = lst2[i];\n            }\n   \
    \     }\n    }\n    if (evenCount == 0) {\n        return \"NO\";\n    }\n   \
    \ if (evenCount == lst1.size()) {\n        if (evenSum == even) {\n          \
    \  return \"YES\";\n        }\n        return \"NO\";\n    }\n    if (oddCount\
    \ == 0) {\n        return \"NO\";\n    }\n    if (oddCount == lst1.size()) {\n\
    \        if (oddSum == odd) {\n            return \"YES\";\n        }\n      \
    \  return \"NO\";\n    }\n    if (evenCount == lst2.size()) {\n        if (evenSum\
    \ == even) {\n            return \"YES\";\n        }\n        return \"NO\";\n\
    \    }\n    if (oddCount == lst2.size()) {\n        if (oddSum == ", '    // Your
    code here', "    // Your code here\n    ", "    // Write your code here\n    long\
    \ even = 0;\n    long odd = 0;\n    long temp = 0;\n    long count = 0;\n    for\
    \ (long i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 == 0) {\n    \
    \        even = even + lst1[i];\n        } else {\n            odd = odd + lst1[i];\n\
    \        }\n    }\n    for (long i = 0; i < lst2.size(); i++) {\n        if (lst2[i]\
    \ % 2 == 0) {\n            even = even + lst2[i];\n        } else {\n        \
    \    odd = odd + lst2[i];\n        }\n    }\n    if (even > odd) {\n        temp\
    \ = even;\n        even = odd;\n        odd = temp;\n    }\n    for (long i =\
    \ 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 == 0) {\n            count\
    \ = count + 1;\n        }\n    }\n    for (long i = 0; i < lst2.size(); i++) {\n\
    \        if (lst2[i] % 2 == 0) {\n            count = count + 1;\n        }\n\
    \    }\n    if (count == lst1.size()) {\n        return \"YES\";\n    } else {\n\
    \        return \"NO\";\n    }", "    // Your code here\n    ", '    // Your code
    here', "    // Your code here\n    long even = 0;\n    long odd = 0;\n    long\
    \ evenCount = 0;\n    long oddCount = 0;\n    long evenSum = 0;\n    long oddSum\
    \ = 0;\n    long evenMax = lst1[0];\n    long oddMax = lst1[0];\n    long evenMin\
    \ = lst2[0];\n    long oddMin = lst2[0];\n    long evenMaxSum = 0;\n    long oddMaxSum\
    \ = 0;\n    long evenMinSum = 0;\n    long oddMinSum = 0;\n    long evenMaxCount\
    \ = 0;\n    long oddMaxCount = 0;\n    long evenMinCount = 0;\n    long oddMinCount\
    \ = 0;\n    long evenMaxSumCount = 0;\n    long oddMaxSumCount = 0;\n    long\
    \ evenMinSumCount = 0;\n    long oddMinSumCount = 0;\n    long evenMaxCountSum\
    \ = 0;\n    long oddMaxCountSum = 0;\n    long evenMinCountSum = 0;\n    long\
    \ oddMinCountSum = 0;\n    long evenMaxSumCountSum = 0;\n    long oddMaxSumCountSum\
    \ = 0;\n    long evenMinSumCountSum = 0;\n    long oddMinSumCountSum = 0;\n  \
    \  long evenMaxCountSumCount = 0;\n    long oddMaxCountSumCount = 0;\n    long\
    \ evenMinCountSumCount = 0;\n    long oddMinCountSumCount = 0;\n    long evenMaxSumCountSumCount\
    \ = 0;\n    long oddMaxSumCountSumCount = 0;\n    long evenMinSumCountSumCount\
    \ = 0;\n    long oddMinSumCountSumCount = 0;\n    long evenMaxCountSumCountSum\
    \ = 0;\n    long oddMaxCountSumCountSum = 0;\n    long evenMinCountSumCountSum\
    \ = 0;\n    long oddMinCountSumCountSum = 0;\n    long evenMaxSumCountSumCountSum\
    \ = 0;\n    long oddMaxSumCountSumCountSum = 0;\n    long evenMinSumCountSumCountSum\
    \ = 0;\n    long oddMinSumCountSumCountSum = 0;\n    long evenMaxCountSumCountSumCount\
    \ = 0;\n    long oddMaxCountSumCountSumCount = 0;\n    long evenMinSumCountSumCountSum\
    \ = 0;\n    long oddMinSumCountSumCountSum = 0;\n    long evenMaxSumCountSumCountSum\
    \ = 0;\n    long oddMaxSumCountSumCountSum = 0;\n    long evenMinSumCountSumCountSum\
    \ = 0;\n    long oddMinSumCountSumCountSum = 0;\n    long evenMaxCountSumCountSumCountSum\
    \ = 0;\n    long oddMaxCountSumCountSumCountSum = 0;\n    long evenMinSumCountSumCountSum",
  "    // Your code here\n    long even = 0;\n    long odd = 0;\n    long even2 =\
    \ 0;\n    long odd2 = 0;\n    long even3 = 0;\n    long odd3 = 0;\n    long even4\
    \ = 0;\n    long odd4 = 0;\n    long even5 = 0;\n    long odd5 = 0;\n    long\
    \ even6 = 0;\n    long odd6 = 0;\n    long even7 = 0;\n    long odd7 = 0;\n  \
    \  long even8 = 0;\n    long odd8 = 0;\n    long even9 = 0;\n    long odd9 = 0;\n\
    \    long even10 = 0;\n    long odd10 = 0;\n    long even11 = 0;\n    long odd11\
    \ = 0;\n    long even12 = 0;\n    long odd12 = 0;\n    long even13 = 0;\n    long\
    \ odd13 = 0;\n    long even14 = 0;\n    long odd14 = 0;\n    long even15 = 0;\n\
    \    long odd15 = 0;\n    long even16 = 0;\n    long odd16 = 0;\n    long even17\
    \ = 0;\n    long odd17 = 0;\n    long even18 = 0;\n    long odd18 = 0;\n    long\
    \ even19 = 0;\n    long odd19 = 0;\n    long even20 = 0;\n    long odd20 = 0;\n\
    \    long even21 = 0;\n    long odd21 = 0;\n    long even22 = 0;\n    long odd22\
    \ = 0;\n    long even23 = 0;\n    long odd23 = 0;\n    long even24 = 0;\n    long\
    \ odd24 = 0;\n    long even25 = 0;\n    long odd25 = 0;\n    long even26 = 0;\n\
    \    long odd26 = 0;\n    long even27 = 0;\n    long odd27 = 0;\n    long even28\
    \ = 0;\n    long odd28 = 0;\n    long even29 = 0;\n    long odd29 = 0;\n    long\
    \ even30 = 0;\n    long odd30 = 0;\n    long even31 = 0;\n    long odd31 = 0;\n\
    \    long even32 = 0;\n    long odd32 = 0;\n    long even33 = 0;\n    long odd33\
    \ = 0;\n    long even34 = 0;\n    long odd34 = 0;\n    long even35 = 0;\n    long\
    \ odd35 = 0;\n    long even36 = 0;\n    long odd36 = 0;\n    long even37 = 0;\n\
    \    long odd37 = 0;\n    long even38 = 0;\n    long odd38 = 0;\n    long even39\
    \ = 0;\n    long odd39 = 0;\n    long even40 = 0;\n    long odd40 = 0;\n    long\
    \ even41 = 0;\n    long odd41 = 0;\n    long even42 = 0;\n    long odd42 = 0;\n\
    \    long even43 = 0;\n    long odd43 = 0;", '    // Your code here', "    //\
    \ Your code here\n    ", "    // Write your code here\n    long even = 0;\n  \
    \  long odd = 0;\n    long evenCount = 0;\n    long oddCount = 0;\n    for (long\
    \ i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 == 0) {\n          \
    \  even = even + lst1[i];\n            evenCount++;\n        } else {\n      \
    \      odd = odd + lst1[i];\n            oddCount++;\n        }\n    }\n    for\
    \ (long i = 0; i < lst2.size(); i++) {\n        if (lst2[i] % 2 == 0) {\n    \
    \        even = even + lst2[i];\n            evenCount++;\n        } else {\n\
    \            odd = odd + lst2[i];\n            oddCount++;\n        }\n    }\n\
    \    if (evenCount == oddCount) {\n        return \"YES\";\n    } else {\n   \
    \     return \"NO\";\n    }", "    long even = lst1[0];\n    long odd = lst2[0];\n\
    \    long even1 = lst1[1];\n    long odd1 = lst2[1];\n    long even2 = lst1[2];\n\
    \    long odd2 = lst2[2];\n    long even3 = lst1[3];\n    long odd3 = lst2[3];\n\
    \    long even4 = lst1[4];\n    long odd4 = lst2[4];\n    long even5 = lst1[5];\n\
    \    long odd5 = lst2[5];\n    long even6 = lst1[6];\n    long odd6 = lst2[6];\n\
    \    long even7 = lst1[7];\n    long odd7 = lst2[7];\n    long even8 = lst1[8];\n\
    \    long odd8 = lst2[8];\n    long even9 = lst1[9];\n    long odd9 = lst2[9];\n\
    \    long even10 = lst1[10];\n    long odd10 = lst2[10];\n    long even11 = lst1[11];\n\
    \    long odd11 = lst2[11];\n    long even12 = lst1[12];\n    long odd12 = lst2[12];\n\
    \    long even13 = lst1[13];\n    long odd13 = lst2[13];\n    long even14 = lst1[14];\n\
    \    long odd14 = lst2[14];\n    long even15 = lst1[15];\n    long odd15 = lst2[15];\n\
    \    long even16 = lst1[16];\n    long odd16 = lst2[16];\n    long even17 = lst1[17];\n\
    \    long odd17 = lst2[17];\n    long even18 = lst1[18];\n    long odd18 = lst2[18];\n\
    \    long even19 = lst1[19];\n    long odd19 = lst2[19];\n    long even20 = lst1[20];\n\
    \    long odd20 = lst2[20];\n    long even21 = lst1[21];\n    long odd21 = lst2[21];\n\
    \    long even22 = lst1[22];\n    long odd22 = lst2[22];\n    long even23 = lst1[23];\n\
    \    long odd23 = lst2[23];\n    long even24 = lst1[24];\n    long odd24 = lst2[24];\n\
    \    long even25 = lst1[25];\n    long odd25 = lst2[25];\n    long even26 = lst1[26];\n\
    \    long odd26 = lst2[26];\n    long even27 = lst", "    // Write your code here\n\
    \    long even = 0;\n    long odd = 0;\n    long eveneven = 0;\n    long evenodd\
    \ = 0;\n    long oddodd = 0;\n    long eveneveneven = 0;\n    long evenoddodd\
    \ = 0;\n    long oddoddeven = 0;\n    long oddoddodd = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddoddeven = 0;\n    long oddoddeveneven = 0;\n    long oddoddoddeven\
    \ = 0;\n    long eveneveneveneven = 0;\n    long evenoddoddoddeven = 0;\n    long\
    \ oddoddeveneven = 0;\n    long oddoddoddeven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddoddoddeven = 0;\n    long oddoddeveneven = 0;\n    long\
    \ oddoddoddeven = 0;\n    long eveneveneveneven = 0;\n    long evenoddoddoddeven\
    \ = 0;\n    long oddoddeveneven = 0;\n    long oddoddoddeven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddoddoddeven = 0;\n    long oddoddeveneven = 0;\n    long\
    \ oddoddoddeven = 0;\n    long eveneveneveneven = 0;\n    long evenoddoddoddeven\
    \ = 0;\n    long oddoddeveneven = 0;\n    long oddoddoddeven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddoddoddeven = 0;\n    long oddoddeveneven = 0;\n    long\
    \ oddoddoddeven = 0;\n    long eveneveneveneven = 0;\n    long evenoddoddoddeven\
    \ = 0;\n    long oddoddeveneven = 0;\n    long oddoddoddeven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddoddoddeven = 0;\n    long oddoddeveneven = 0;\n    long\
    \ oddoddoddeven = 0;\n    long eveneveneveneven = 0;\n    long evenoddoddoddeven\
    \ = 0;\n    long oddoddeveneven = 0;\n    long oddoddoddeven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddoddoddeven = 0;\n    long oddoddeveneven = 0;\n    long\
    \ oddoddoddeven = 0;\n    long eveneveneveneven = 0;\n    long evenoddoddoddeven\
    \ = 0;\n    long oddoddeveneven = 0;\n    long oddoddoddeven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddoddoddeven = 0;\n    long oddoddeveneven = 0;\n    long\
    \ oddoddoddeven = 0;\n    long eveneveneveneven = 0;\n    long evenoddoddoddeven\
    \ = 0;\n    long oddoddeveneven", "    // Write your code here\n    long even\
    \ = 0;\n    long odd = 0;\n    long eveneven = 0;\n    long evenodd = 0;\n   \
    \ long oddodd = 0;\n    long eveneveneven = 0;\n    long evenoddodd = 0;\n   \
    \ long oddoddeven = 0;\n    long oddoddodd = 0;\n    long eveneveneveneven = 0;\n\
    \    long evenoddoddeven = 0;\n    long oddoddeveneven = 0;\n    long oddoddoddeven\
    \ = 0;\n    long eveneveneveneven = 0;\n    long evenoddoddoddeven = 0;\n    long\
    \ oddoddeveneven = 0;\n    long oddoddoddeven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddoddoddeven = 0;\n    long oddoddeveneven = 0;\n    long\
    \ oddoddoddeven = 0;\n    long eveneveneveneven = 0;\n    long evenoddoddoddeven\
    \ = 0;\n    long oddoddeveneven = 0;\n    long oddoddoddeven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddoddoddeven = 0;\n    long oddoddeveneven = 0;\n    long\
    \ oddoddoddeven = 0;\n    long eveneveneveneven = 0;\n    long evenoddoddoddeven\
    \ = 0;\n    long oddoddeveneven = 0;\n    long oddoddoddeven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddoddoddeven = 0;\n    long oddoddeveneven = 0;\n    long\
    \ oddoddoddeven = 0;\n    long eveneveneveneven = 0;\n    long evenoddoddoddeven\
    \ = 0;\n    long oddoddeveneven = 0;\n    long oddoddoddeven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddoddoddeven = 0;\n    long oddoddeveneven = 0;\n    long\
    \ oddoddoddeven = 0;\n    long eveneveneveneven = 0;\n    long evenoddoddoddeven\
    \ = 0;\n    long oddoddeveneven = 0;\n    long oddoddoddeven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddoddoddeven = 0;\n    long oddoddeveneven = 0;\n    long\
    \ oddoddoddeven = 0;\n    long eveneveneveneven = 0;\n    long evenoddoddoddeven\
    \ = 0;\n    long oddoddeveneven = 0;\n    long oddoddoddeven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddoddoddeven = 0;\n    long oddoddeveneven = 0;\n    long\
    \ oddoddoddeven = 0;\n    long eveneveneveneven = 0;\n    long evenoddoddoddeven\
    \ = 0;\n    long oddoddeveneven", "    // Your code goes here\n    long even =\
    \ 0;\n    long odd = 0;\n    long evenCount = 0;\n    long oddCount = 0;\n   \
    \ long evenSum = 0;\n    long oddSum = 0;\n    long evenMax = lst1[0];\n    long\
    \ oddMax = lst1[0];\n    long evenMin = lst1[0];\n    long oddMin = lst1[0];\n\
    \    for (long i = 0; i < lst1.size(); i++) {\n        if (lst1[i] > evenMax)\
    \ {\n            evenMax = lst1[i];\n        }\n        if (lst1[i] < evenMin)\
    \ {\n            evenMin = lst1[i];\n        }\n        if (lst2[i] > oddMax)\
    \ {\n            oddMax = lst2[i];\n        }\n        if (lst2[i] < oddMin) {\n\
    \            oddMin = lst2[i];\n        }\n    }\n    for (long i = 0; i < lst1.size();\
    \ i++) {\n        if (lst1[i] % 2 == 0) {\n            evenCount++;\n        \
    \    evenSum += lst1[i];\n        }\n        else {\n            oddCount++;\n\
    \            oddSum += lst1[i];\n        }\n    }\n    for (long i = 0; i < lst2.size();\
    \ i++) {\n        if (lst2[i] % 2 == 0) {\n            evenCount++;\n        \
    \    evenSum += lst2[i];\n        }\n        else {\n            oddCount++;\n\
    \            oddSum += lst2[i];\n        }\n    }\n    if (evenCount != 0) {\n\
    \        if (evenSum == evenMax) {\n            return \"YES\";\n        }\n \
    \       else {\n            return \"NO\";\n        }\n    }\n    if (oddCount\
    \ != 0) {\n        if (oddSum == oddMax) {\n            return \"YES\";\n    \
    \    }\n        else {\n            return \"NO\";\n        }\n    }\n    if (evenCount\
    \ == 0 && oddCount == 0) {\n        return \"YES\";\n    }\n    if (evenCount\
    \ == 0 && oddCount != 0) {\n        return \"NO\";\n    }\n    if (evenCount !=\
    \ 0 && oddCount == 0) {\n        return \"NO\";\n    }\n    if (evenCount == 0\
    \ && oddCount == 0) {\n        return \"NO\";\n    }", "    // Write your code\
    \ here\n    long even = 0;\n    long odd = 0;\n    long evenCount = 0;\n    long\
    \ oddCount = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n    long evenMin\
    \ = std::numeric_limits<long>::max();\n    long oddMin = std::numeric_limits<long>::max();\n\
    \    long evenMax = std::numeric_limits<long>::min();\n    long oddMax = std::numeric_limits<long>::min();\n\
    \    long evenMinCount = 0;\n    long oddMinCount = 0;\n    long evenMaxCount\
    \ = 0;\n    long oddMaxCount = 0;\n    long evenMinSum = 0;\n    long oddMinSum\
    \ = 0;\n    long evenMaxSum = 0;\n    long oddMaxSum = 0;\n    long evenMinMin\
    \ = std::numeric_limits<long>::max();\n    long oddMinMin = std::numeric_limits<long>::max();\n\
    \    long evenMaxMin = std::numeric_limits<long>::min();\n    long oddMaxMin =\
    \ std::numeric_limits<long>::min();\n    long evenMinMaxCount = 0;\n    long oddMinMaxCount\
    \ = 0;\n    long evenMaxMaxCount = 0;\n    long oddMaxMaxCount = 0;\n    long\
    \ evenMinMinSum = 0;\n    long oddMinMinSum = 0;\n    long evenMaxMinSum = 0;\n\
    \    long oddMaxMinSum = 0;\n    long evenMaxMinMin = std::numeric_limits<long>::max();\n\
    \    long oddMaxMinMin = std::numeric_limits<long>::max();\n    long evenMaxMinMin\
    \ = std::numeric_limits<long>::min();\n    long oddMaxMinMin = std::numeric_limits<long>::min();\n\
    \    long evenMinMaxSum = 0;\n    long oddMinMaxSum = 0;\n    long evenMaxMaxSum\
    \ = 0;\n    long oddMaxMaxSum = 0;\n    long evenMinMaxMin = std::numeric_limits<long>::max();\n\
    \    long oddMinMaxMin = std::numeric_limits<long>::max();\n    long evenMaxMaxMin\
    \ = std::numeric_limits<long>::min();\n    long oddMaxMaxMin = std::numeric_limits<long>::min();\n\
    \    long evenMinMinCount = 0;\n    long oddMinMinCount = 0;\n    long evenMaxMinCount\
    \ = 0;\n    long oddMaxMinCount = 0;\n    long evenMinMinSum = 0;\n    long oddMinMinSum\
    \ = 0;\n    long evenMaxMinSum = 0;\n    long oddMaxMinSum = 0;\n    long evenMaxMinMin\
    \ = std::numeric_limits<long>::", "    // Your code here\n    long even = 0;\n\
    \    long odd = 0;\n    long even2 = 0;\n    long odd2 = 0;\n    long even3 =\
    \ 0;\n    long odd3 = 0;\n    long even4 = 0;\n    long odd4 = 0;\n    long even5\
    \ = 0;\n    long odd5 = 0;\n    long even6 = 0;\n    long odd6 = 0;\n    long\
    \ even7 = 0;\n    long odd7 = 0;\n    long even8 = 0;\n    long odd8 = 0;\n  \
    \  long even9 = 0;\n    long odd9 = 0;\n    long even10 = 0;\n    long odd10 =\
    \ 0;\n    long even11 = 0;\n    long odd11 = 0;\n    long even12 = 0;\n    long\
    \ odd12 = 0;\n    long even13 = 0;\n    long odd13 = 0;\n    long even14 = 0;\n\
    \    long odd14 = 0;\n    long even15 = 0;\n    long odd15 = 0;\n    long even16\
    \ = 0;\n    long odd16 = 0;\n    long even17 = 0;\n    long odd17 = 0;\n    long\
    \ even18 = 0;\n    long odd18 = 0;\n    long even19 = 0;\n    long odd19 = 0;\n\
    \    long even20 = 0;\n    long odd20 = 0;\n    long even21 = 0;\n    long odd21\
    \ = 0;\n    long even22 = 0;\n    long odd22 = 0;\n    long even23 = 0;\n    long\
    \ odd23 = 0;\n    long even24 = 0;\n    long odd24 = 0;\n    long even25 = 0;\n\
    \    long odd25 = 0;\n    long even26 = 0;\n    long odd26 = 0;\n    long even27\
    \ = 0;\n    long odd27 = 0;\n    long even28 = 0;\n    long odd28 = 0;\n    long\
    \ even29 = 0;\n    long odd29 = 0;\n    long even30 = 0;\n    long odd30 = 0;\n\
    \    long even31 = 0;\n    long odd31 = 0;\n    long even32 = 0;\n    long odd32\
    \ = 0;\n    long even33 = 0;\n    long odd33 = 0;\n    long even34 = 0;\n    long\
    \ odd34 = 0;\n    long even35 = 0;\n    long odd35 = 0;\n    long even36 = 0;\n\
    \    long odd36 = 0;\n    long even37 = 0;\n    long odd37 = 0;\n    long even38\
    \ = 0;\n    long odd38 = 0;\n    long even39 = 0;\n    long odd39 = 0;\n    long\
    \ even40 = 0;\n    long odd40 = 0;\n    long even41 = 0;\n    long odd41 = 0;\n\
    \    long even42 = 0;\n    long odd42 = 0;\n    long even43 = 0;\n    long odd43\
    \ = 0;\n    ", "    // Your code here\n    long even = 0;\n    long odd = 0;\n\
    \    long evenCount = 0;\n    long oddCount = 0;\n    for (long i = 0; i < lst1.size();\
    \ i++) {\n        if (lst1[i] % 2 == 0) {\n            even++;\n            evenCount++;\n\
    \        } else {\n            odd++;\n            oddCount++;\n        }\n  \
    \  }\n    if (evenCount == lst1.size() && oddCount == lst2.size()) {\n       \
    \ return \"YES\";\n    } else {\n        return \"NO\";\n    }", "    // Write\
    \ your code here\n    long even = 0;\n    long odd = 0;\n    long evenCount =\
    \ 0;\n    long oddCount = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n  \
    \  long evenMax = std::numeric_limits<long>::min();\n    long oddMax = std::numeric_limits<long>::min();\n\
    \    long evenMin = std::numeric_limits<long>::max();\n    long oddMin = std::numeric_limits<long>::max();\n\
    \    long evenMinSum = std::numeric_limits<long>::max();\n    long oddMinSum =\
    \ std::numeric_limits<long>::max();\n    long evenMaxSum = std::numeric_limits<long>::max();\n\
    \    long oddMaxSum = std::numeric_limits<long>::max();\n    for (long i = 0;\
    \ i < lst1.size(); i++) {\n        even = lst1[i];\n        odd = lst2[i];\n \
    \       evenCount = evenCount + 1;\n        oddCount = oddCount + 1;\n       \
    \ evenSum = evenSum + even;\n        oddSum = oddSum + odd;\n        if (even\
    \ > evenMax) {\n            evenMax = even;\n        }\n        if (odd > oddMax)\
    \ {\n            oddMax = odd;\n        }\n        if (even < evenMin) {\n   \
    \         evenMin = even;\n        }\n        if (odd < oddMin) {\n          \
    \  oddMin = odd;\n        }\n        if (evenSum > evenMaxSum) {\n           \
    \ evenMaxSum = evenSum;\n        }\n        if (oddSum > oddMaxSum) {\n      \
    \      oddMaxSum = oddSum;\n        }\n        if (evenCount > evenMaxCount) {\n\
    \            evenMaxCount = evenCount;\n        }\n        if (oddCount > oddMaxCount)\
    \ {\n            oddMaxCount = oddCount;\n        }\n        if (even < evenMinSum)\
    \ {\n            evenMinSum = even;\n        }\n        if (odd < oddMinSum) {\n\
    \            oddMinSum = odd;\n        }\n    }\n    if (evenMaxCount == evenMax)\
    \ {\n        return \"YES\";\n    }\n    if (oddMaxCount == oddMax) {\n      \
    \  return \"YES\";\n    }\n    if (evenMinSum == evenMin) {\n        return \"\
    YES\";\n    }\n    if (oddMinSum == oddMin) {\n        return \"YES\";\n    }\n\
    \    if (evenMaxSum == evenMax) {\n        return \"YES\";\n    }\n    if (oddMaxSum\
    \ == oddMax) {\n        return \"YES\";\n    }\n    return \"NO\";", "    // Your\
    \ code here\n    long even = 0;\n    long odd = 0;\n    for (long i = 0; i < lst1.size();\
    \ i++) {\n        if (lst1[i] % 2 == 0) {\n            even = even + lst1[i];\n\
    \        } else {\n            odd = odd + lst1[i];\n        }\n    }\n    for\
    \ (long i = 0; i < lst2.size(); i++) {\n        if (lst2[i] % 2 == 0) {\n    \
    \        even = even + lst2[i];\n        } else {\n            odd = odd + lst2[i];\n\
    \        }\n    }\n    if (even > odd) {\n        return \"NO\";\n    } else {\n\
    \        return \"YES\";\n    }", "    // Your code here\n    long even = 0;\n\
    \    long odd = 0;\n    long even2 = 0;\n    long odd2 = 0;\n    long even3 =\
    \ 0;\n    long odd3 = 0;\n    long even4 = 0;\n    long odd4 = 0;\n    long even5\
    \ = 0;\n    long odd5 = 0;\n    long even6 = 0;\n    long odd6 = 0;\n    long\
    \ even7 = 0;\n    long odd7 = 0;\n    long even8 = 0;\n    long odd8 = 0;\n  \
    \  long even9 = 0;\n    long odd9 = 0;\n    long even10 = 0;\n    long odd10 =\
    \ 0;\n    long even11 = 0;\n    long odd11 = 0;\n    long even12 = 0;\n    long\
    \ odd12 = 0;\n    long even13 = 0;\n    long odd13 = 0;\n    long even14 = 0;\n\
    \    long odd14 = 0;\n    long even15 = 0;\n    long odd15 = 0;\n    long even16\
    \ = 0;\n    long odd16 = 0;\n    long even17 = 0;\n    long odd17 = 0;\n    long\
    \ even18 = 0;\n    long odd18 = 0;\n    long even19 = 0;\n    long odd19 = 0;\n\
    \    long even20 = 0;\n    long odd20 = 0;\n    long even21 = 0;\n    long odd21\
    \ = 0;\n    long even22 = 0;\n    long odd22 = 0;\n    long even23 = 0;\n    long\
    \ odd23 = 0;\n    long even24 = 0;\n    long odd24 = 0;\n    long even25 = 0;\n\
    \    long odd25 = 0;\n    long even26 = 0;\n    long odd26 = 0;\n    long even27\
    \ = 0;\n    long odd27 = 0;\n    long even28 = 0;\n    long odd28 = 0;\n    long\
    \ even29 = 0;\n    long odd29 = 0;\n    long even30 = 0;\n    long odd30 = 0;\n\
    \    long even31 = 0;\n    long odd31 = 0;\n    long even32 = 0;\n    long odd32\
    \ = 0;\n    long even33 = 0;\n    long odd33 = 0;\n    long even34 = 0;\n    long\
    \ odd34 = 0;\n    long even35 = 0;\n    long odd35 = 0;\n    long even36 = 0;\n\
    \    long odd36 = 0;\n    long even37 = 0;\n    long odd37 = 0;\n    long even38\
    \ = 0;\n    long odd38 = 0;\n    long even39 = 0;\n    long odd39 = 0;\n    long\
    \ even40 = 0;\n    long odd40 = 0;\n    long even41 = 0;\n    long odd41 = 0;\n\
    \    long even42 = 0;\n    long odd42 = 0;\n    long even43 = 0;\n    long odd43\
    \ = 0;\n    ", '    // Your code here', "    // Write your code here\n    long\
    \ even = 0;\n    long odd = 0;\n    long evenCount = 0;\n    long oddCount = 0;\n\
    \    long evenSum = 0;\n    long oddSum = 0;\n    long evenMax = lst1[0];\n  \
    \  long oddMax = lst1[0];\n    long evenMin = lst1[0];\n    long oddMin = lst1[0];\n\
    \    long evenMax2 = lst2[0];\n    long oddMax2 = lst2[0];\n    long evenMin2\
    \ = lst2[0];\n    long oddMin2 = lst2[0];\n    long evenMax3 = lst2[0];\n    long\
    \ oddMax3 = lst2[0];\n    long evenMin3 = lst2[0];\n    long oddMin3 = lst2[0];\n\
    \    long evenMax4 = lst2[0];\n    long oddMax4 = lst2[0];\n    long evenMin4\
    \ = lst2[0];\n    long oddMin4 = lst2[0];\n    long evenMax5 = lst2[0];\n    long\
    \ oddMax5 = lst2[0];\n    long evenMin5 = lst2[0];\n    long oddMin5 = lst2[0];\n\
    \    long evenMax6 = lst2[0];\n    long oddMax6 = lst2[0];\n    long evenMin6\
    \ = lst2[0];\n    long oddMin6 = lst2[0];\n    long evenMax7 = lst2[0];\n    long\
    \ oddMax7 = lst2[0];\n    long evenMin7 = lst2[0];\n    long oddMin7 = lst2[0];\n\
    \    long evenMax8 = lst2[0];\n    long oddMax8 = lst2[0];\n    long evenMin8\
    \ = lst2[0];\n    long oddMin8 = lst2[0];\n    long evenMax9 = lst2[0];\n    long\
    \ oddMax9 = lst2[0];\n    long evenMin9 = lst2[0];\n    long oddMin9 = lst2[0];\n\
    \    long evenMax10 = lst2[0];\n    long oddMax10 = lst2[0];\n    long evenMin10\
    \ = lst2[0];\n    long oddMin10 = lst2[0];\n    long evenMax11 = lst2[0];\n  \
    \  long oddMax11 = lst2[0];\n    long evenMin11 = lst2[0];\n    long oddMin11\
    \ = lst2[0];\n    long evenMax12 = lst2[0];\n    long oddMax12 = lst2[0];\n  \
    \  long evenMin12 = lst2[0];\n    long oddMin12 = lst2[0];\n    long evenMax13\
    \ = lst2[0];\n    long oddMax13 = lst2[0];\n    long evenMin13 = lst2[0];\n  \
    \  long oddMin13 = lst2[0];\n    ", "    // Your code here\n    long even = 0;\n\
    \    long odd = 0;\n    long evenCount = 0;\n    long oddCount = 0;\n    long\
    \ evenSum = 0;\n    long oddSum = 0;\n    long evenMax = std::numeric_limits<long>::max();\n\
    \    long oddMax = std::numeric_limits<long>::min();\n    long evenMin = std::numeric_limits<long>::min();\n\
    \    long oddMin = std::numeric_limits<long>::max();\n    for (long i = 0; i <\
    \ lst1.size(); i++) {\n        if (lst1[i] % 2 == 0) {\n            even = even\
    \ + lst1[i];\n            evenCount++;\n            evenSum = evenSum + lst1[i];\n\
    \            if (lst1[i] > evenMax) {\n                evenMax = lst1[i];\n  \
    \          }\n            if (lst1[i] < evenMin) {\n                evenMin =\
    \ lst1[i];\n            }\n        }\n        else {\n            odd = odd +\
    \ lst1[i];\n            oddCount++;\n            oddSum = oddSum + lst1[i];\n\
    \            if (lst1[i] > oddMax) {\n                oddMax = lst1[i];\n    \
    \        }\n            if (lst1[i] < oddMin) {\n                oddMin = lst1[i];\n\
    \            }\n        }\n    }\n    for (long i = 0; i < lst2.size(); i++) {\n\
    \        if (lst2[i] % 2 == 0) {\n            even = even + lst2[i];\n       \
    \     evenCount++;\n            evenSum = evenSum + lst2[i];\n            if (lst2[i]\
    \ > evenMax) {\n                evenMax = lst2[i];\n            }\n          \
    \  if (lst2[i] < evenMin) {\n                evenMin = lst2[i];\n            }\n\
    \        }\n        else {\n            odd = odd + lst2[i];\n            oddCount++;\n\
    \            oddSum = oddSum + lst2[i];\n            if (lst2[i] > oddMax) {\n\
    \                oddMax = lst2[i];\n            }\n            if (lst2[i] < oddMin)\
    \ {\n                oddMin = lst2[i];\n            }\n        }\n    }\n    if\
    \ (evenCount == 0) {\n        return \"NO\";\n    }\n    if (evenCount == 1) {\n\
    \        if (evenSum == even) {\n            return \"YES\";\n        }\n    \
    \    else {\n            return \"NO\";\n        }\n    }\n    if (evenCount >\
    \ 1) {\n        if (evenSum == even) {\n            if (evenSum == evenMax) {\n\
    \                return \"YES\";\n            }\n            else {\n        \
    \        return \"NO\";\n            }\n        }\n        else {\n          \
    \  if (evenSum == evenMin) {\n                return \"YES\";\n            }\n\
    \            else {\n                return \"NO\";\n            }\n        }\n\
    \    }\n    if (oddCount == 0) {\n        return \"", '    // Your code here',
  "    // Write your code here\n    long even = 0;\n    long odd = 0;\n    long evenCount\
    \ = 0;\n    long oddCount = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n\
    \    long evenMax = std::numeric_limits<long>::min();\n    long oddMax = std::numeric_limits<long>::min();\n\
    \    long evenMin = std::numeric_limits<long>::max();\n    long oddMin = std::numeric_limits<long>::max();\n\
    \    long evenMaxCount = 0;\n    long oddMaxCount = 0;\n    long evenMinSum =\
    \ 0;\n    long oddMinSum = 0;\n    long evenMaxSum = 0;\n    long oddMaxSum =\
    \ 0;\n    long evenMinMax = std::numeric_limits<long>::max();\n    long oddMinMax\
    \ = std::numeric_limits<long>::max();\n    long evenMinMin = std::numeric_limits<long>::min();\n\
    \    long oddMinMin = std::numeric_limits<long>::min();\n    long evenMaxMin =\
    \ std::numeric_limits<long>::max();\n    long oddMinMin = std::numeric_limits<long>::min();\n\
    \    long evenMaxMinCount = std::numeric_limits<long>::max();\n    long oddMinMinCount\
    \ = std::numeric_limits<long>::max();\n    long evenMinMinSum = std::numeric_limits<long>::max();\n\
    \    long oddMinMinSum = std::numeric_limits<long>::max();\n    long evenMinMinMax\
    \ = std::numeric_limits<long>::max();\n    long oddMinMinMax = std::numeric_limits<long>::max();\n\
    \    long evenMinMinMin = std::numeric_limits<long>::min();\n    long oddMinMinMin\
    \ = std::numeric_limits<long>::min();\n    long evenMaxMinMin = std::numeric_limits<long>::max();\n\
    \    long oddMinMinMin = std::numeric_limits<long>::min();\n    long evenMaxMinMinCount\
    \ = std::numeric_limits<long>::max();\n    long oddMinMinMinCount = std::numeric_limits<long>::max();\n\
    \    long evenMinMinMinSum = std::numeric_limits<long>::max();\n    long oddMinMinMinSum\
    \ = std::numeric_limits<long>::max();\n    long evenMinMinMinMax = std::numeric_limits<long>::max();\n\
    \    long oddMinMinMinMax = std::numeric_limits<long>::max();\n    long evenMinMinMinMin\
    \ = std::numeric_limits<long>::min();\n    long oddMinMinMin = std::numeric_limits",
  '    // Your code here', "    // Your code here\n    long even = 0;\n    long odd\
    \ = 0;\n    long even2 = 0;\n    long odd2 = 0;\n    long even3 = 0;\n    long\
    \ odd3 = 0;\n    long even4 = 0;\n    long odd4 = 0;\n    long even5 = 0;\n  \
    \  long odd5 = 0;\n    long even6 = 0;\n    long odd6 = 0;\n    long even7 = 0;\n\
    \    long odd7 = 0;\n    long even8 = 0;\n    long odd8 = 0;\n    long even9 =\
    \ 0;\n    long odd9 = 0;\n    long even10 = 0;\n    long odd10 = 0;\n    long\
    \ even11 = 0;\n    long odd11 = 0;\n    long even12 = 0;\n    long odd12 = 0;\n\
    \    long even13 = 0;\n    long odd13 = 0;\n    long even14 = 0;\n    long odd14\
    \ = 0;\n    long even15 = 0;\n    long odd15 = 0;\n    long even16 = 0;\n    long\
    \ odd16 = 0;\n    long even17 = 0;\n    long odd17 = 0;\n    long even18 = 0;\n\
    \    long odd18 = 0;\n    long even19 = 0;\n    long odd19 = 0;\n    long even20\
    \ = 0;\n    long odd20 = 0;\n    long even21 = 0;\n    long odd21 = 0;\n    long\
    \ even22 = 0;\n    long odd22 = 0;\n    long even23 = 0;\n    long odd23 = 0;\n\
    \    long even24 = 0;\n    long odd24 = 0;\n    long even25 = 0;\n    long odd25\
    \ = 0;\n    long even26 = 0;\n    long odd26 = 0;\n    long even27 = 0;\n    long\
    \ odd27 = 0;\n    long even28 = 0;\n    long odd28 = 0;\n    long even29 = 0;\n\
    \    long odd29 = 0;\n    long even30 = 0;\n    long odd30 = 0;\n    long even31\
    \ = 0;\n    long odd31 = 0;\n    long even32 = 0;\n    long odd32 = 0;\n    long\
    \ even33 = 0;\n    long odd33 = 0;\n    long even34 = 0;\n    long odd34 = 0;\n\
    \    long even35 = 0;\n    long odd35 = 0;\n    long even36 = 0;\n    long odd36\
    \ = 0;\n    long even37 = 0;\n    long odd37 = 0;\n    long even38 = 0;\n    long\
    \ odd38 = 0;\n    long even39 = 0;\n    long odd39 = 0;\n    long even40 = 0;\n\
    \    long odd40 = 0;\n    long even41 = 0;\n    long odd41 = 0;\n    long even42\
    \ = 0;\n    long odd42 = 0;\n    long even43 = 0;\n    long odd43 = 0;\n    ",
  "    // Your code here\n    \n    long even = 0;\n    long odd = 0;\n    long evenCount\
    \ = 0;\n    long oddCount = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n\
    \    long evenMin = std::numeric_limits<long>::max();\n    long oddMin = std::numeric_limits<long>::max();\n\
    \    long evenMax = std::numeric_limits<long>::min();\n    long oddMax = std::numeric_limits<long>::min();\n\
    \    long evenSum2 = 0;\n    long oddSum2 = 0;\n    long evenMin2 = std::numeric_limits<long>::max();\n\
    \    long oddMin2 = std::numeric_limits<long>::max();\n    long evenMax2 = std::numeric_limits<long>::min();\n\
    \    long oddMax2 = std::numeric_limits<long>::min();\n    long evenSum3 = 0;\n\
    \    long oddSum3 = 0;\n    long evenMin3 = std::numeric_limits<long>::max();\n\
    \    long oddMin3 = std::numeric_limits<long>::max();\n    long evenMax3 = std::numeric_limits<long>::min();\n\
    \    long oddMax3 = std::numeric_limits<long>::min();\n    long evenSum4 = 0;\n\
    \    long oddSum4 = 0;\n    long evenMin4 = std::numeric_limits<long>::max();\n\
    \    long oddMin4 = std::numeric_limits<long>::max();\n    long evenMax4 = std::numeric_limits<long>::min();\n\
    \    long oddMax4 = std::numeric_limits<long>::min();\n    long evenSum5 = 0;\n\
    \    long oddSum5 = 0;\n    long evenMin5 = std::numeric_limits<long>::max();\n\
    \    long oddMin5 = std::numeric_limits<long>::max();\n    long evenMax5 = std::numeric_limits<long>::min();\n\
    \    long oddMax5 = std::numeric_limits<long>::min();\n    long evenSum6 = 0;\n\
    \    long oddSum6 = 0;\n    long evenMin6 = std::numeric_limits<long>::max();\n\
    \    long oddMin6 = std::numeric_limits<long>::max();\n    long evenMax6 = std::numeric_limits<long>::min();\n\
    \    long oddMax6 = std::numeric_limits<long>::min();\n    long evenSum7 = 0;\n\
    \    long oddSum7 = 0;\n    long evenMin7 = std::numeric_limits<long>::max();\n\
    \    long oddMin7 = std::numeric_limits<long>::max();\n    long evenMax7 = std::numeric_limits<long>::min();\n\
    \    long oddMax7 = std::numeric_limits<long>::min();\n    long even", "    //\
    \ Write your code here\n    long even = 0;\n    long odd = 0;\n    long even2\
    \ = 0;\n    long odd2 = 0;\n    long even3 = 0;\n    long odd3 = 0;\n    long\
    \ even4 = 0;\n    long odd4 = 0;\n    long even5 = 0;\n    long odd5 = 0;\n  \
    \  long even6 = 0;\n    long odd6 = 0;\n    long even7 = 0;\n    long odd7 = 0;\n\
    \    long even8 = 0;\n    long odd8 = 0;\n    long even9 = 0;\n    long odd9 =\
    \ 0;\n    long even10 = 0;\n    long odd10 = 0;\n    long even11 = 0;\n    long\
    \ odd11 = 0;\n    long even12 = 0;\n    long odd12 = 0;\n    long even13 = 0;\n\
    \    long odd13 = 0;\n    long even14 = 0;\n    long odd14 = 0;\n    long even15\
    \ = 0;\n    long odd15 = 0;\n    long even16 = 0;\n    long odd16 = 0;\n    long\
    \ even17 = 0;\n    long odd17 = 0;\n    long even18 = 0;\n    long odd18 = 0;\n\
    \    long even19 = 0;\n    long odd19 = 0;\n    long even20 = 0;\n    long odd20\
    \ = 0;\n    long even21 = 0;\n    long odd21 = 0;\n    long even22 = 0;\n    long\
    \ odd22 = 0;\n    long even23 = 0;\n    long odd23 = 0;\n    long even24 = 0;\n\
    \    long odd24 = 0;\n    long even25 = 0;\n    long odd25 = 0;\n    long even26\
    \ = 0;\n    long odd26 = 0;\n    long even27 = 0;\n    long odd27 = 0;\n    long\
    \ even28 = 0;\n    long odd28 = 0;\n    long even29 = 0;\n    long odd29 = 0;\n\
    \    long even30 = 0;\n    long odd30 = 0;\n    long even31 = 0;\n    long odd31\
    \ = 0;\n    long even32 = 0;\n    long odd32 = 0;\n    long even33 = 0;\n    long\
    \ odd33 = 0;\n    long even34 = 0;\n    long odd34 = 0;\n    long even35 = 0;\n\
    \    long odd35 = 0;\n    long even36 = 0;\n    long odd36 = 0;\n    long even37\
    \ = 0;\n    long odd37 = 0;\n    long even38 = 0;\n    long odd38 = 0;\n    long\
    \ even39 = 0;\n    long odd39 = 0;\n    long even40 = 0;\n    long odd40 = 0;\n\
    \    long even41 = 0;\n    long odd41 = 0;\n    long even42 = 0;\n    long odd42\
    \ = 0;\n    long even43 = 0;\n    long odd43 = 0;\n    ", "    // Your code here\n\
    \    long even = 0;\n    long odd = 0;\n    long temp = 0;\n    long count = 0;\n\
    \    for (long i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 == 0) {\n\
    \            even = even + lst1[i];\n            count++;\n        } else {\n\
    \            odd = odd + lst1[i];\n            count++;\n        }\n    }\n  \
    \  for (long i = 0; i < lst2.size(); i++) {\n        if (lst2[i] % 2 == 0) {\n\
    \            even = even + lst2[i];\n            count++;\n        } else {\n\
    \            odd = odd + lst2[i];\n            count++;\n        }\n    }\n  \
    \  if (count == 0) {\n        return \"NO\";\n    }\n    if (even > odd) {\n \
    \       temp = even;\n        even = odd;\n        odd = temp;\n    }\n    long\
    \ even1 = even;\n    long odd1 = odd;\n    long even2 = even;\n    long odd2 =\
    \ odd;\n    long even3 = even;\n    long odd3 = odd;\n    long even4 = even;\n\
    \    long odd4 = odd;\n    long even5 = even;\n    long odd5 = odd;\n    long\
    \ even6 = even;\n    long odd6 = odd;\n    long even7 = even;\n    long odd7 =\
    \ odd;\n    long even8 = even;\n    long odd8 = odd;\n    long even9 = even;\n\
    \    long odd9 = odd;\n    long even10 = even;\n    long odd10 = odd;\n    long\
    \ even11 = even;\n    long odd11 = odd;\n    long even12 = even;\n    long odd12\
    \ = odd;\n    long even13 = even;\n    long odd13 = odd;\n    long even14 = even;\n\
    \    long odd14 = odd;\n    long even15 = even;\n    long odd15 = odd;\n    long\
    \ even16 = even;\n    long odd16 = odd;\n    long even17 = even;\n    long odd17\
    \ = odd;\n    long even18 = even;\n    long odd18 = odd;\n    long even19 = even;\n\
    \    long odd19 = odd;\n    long even20 = even;\n    long odd20 = odd;\n    long\
    \ even21 = even;\n    long odd21 = odd;\n    long even22 = even;\n    long odd22\
    \ = odd;\n    long even23 = even;\n    long odd23 = odd;\n    long even24 = even;\n\
    \    long odd24 = ", "    long even = 0;\n    long odd = 0;\n    long sum = 0;\n\
    \    long i = 0;\n    long j = 0;\n    long k = 0;\n    long evenSum = 0;\n  \
    \  long oddSum = 0;\n    long evenSum2 = 0;\n    long oddSum2 = 0;\n    long evenSum3\
    \ = 0;\n    long oddSum3 = 0;\n    long evenSum4 = 0;\n    long oddSum4 = 0;\n\
    \    long evenSum5 = 0;\n    long oddSum5 = 0;\n    long evenSum6 = 0;\n    long\
    \ oddSum6 = 0;\n    long evenSum7 = 0;\n    long oddSum7 = 0;\n    long evenSum8\
    \ = 0;\n    long oddSum8 = 0;\n    long evenSum9 = 0;\n    long oddSum9 = 0;\n\
    \    long evenSum10 = 0;\n    long oddSum10 = 0;\n    long evenSum11 = 0;\n  \
    \  long oddSum11 = 0;\n    long evenSum12 = 0;\n    long oddSum12 = 0;\n    long\
    \ evenSum13 = 0;\n    long oddSum13 = 0;\n    long evenSum14 = 0;\n    long oddSum14\
    \ = 0;\n    long evenSum15 = 0;\n    long oddSum15 = 0;\n    long evenSum16 =\
    \ 0;\n    long oddSum16 = 0;\n    long evenSum17 = 0;\n    long oddSum17 = 0;\n\
    \    long evenSum18 = 0;\n    long oddSum18 = 0;\n    long evenSum19 = 0;\n  \
    \  long oddSum19 = 0;\n    long evenSum20 = 0;\n    long oddSum20 = 0;\n    long\
    \ evenSum21 = 0;\n    long oddSum21 = 0;\n    long evenSum22 = 0;\n    long oddSum22\
    \ = 0;\n    long evenSum23 = 0;\n    long oddSum23 = 0;\n    long evenSum24 =\
    \ 0;\n    long oddSum24 = 0;\n    long evenSum25 = 0;\n    long oddSum25 = 0;\n\
    \    long evenSum26 = 0;\n    long oddSum26 = 0;\n    long evenSum27 = 0;\n  \
    \  long oddSum27 = 0;\n    long evenSum28 = 0;\n    long oddSum28 = 0;\n    long\
    \ evenSum29 = 0;\n    long oddSum29 = 0;\n    long evenSum30 = 0;\n    long oddSum30\
    \ = 0;\n    long evenSum31 = 0;\n    long oddSum31 = 0;\n    long evenSum32 =\
    \ 0;\n    long oddSum32 = 0;\n    long evenSum33 = 0;\n    long oddSum33 = 0;\n\
    \    long evenSum34 = 0;\n    long oddSum34 = 0;\n    long evenSum35 = 0;\n  \
    \  long oddSum35 = 0;\n    long even", "    // Your code here\n    long even =\
    \ 0;\n    long odd = 0;\n    long even2 = 0;\n    long odd2 = 0;\n    long even3\
    \ = 0;\n    long odd3 = 0;\n    long even4 = 0;\n    long odd4 = 0;\n    long\
    \ even5 = 0;\n    long odd5 = 0;\n    long even6 = 0;\n    long odd6 = 0;\n  \
    \  long even7 = 0;\n    long odd7 = 0;\n    long even8 = 0;\n    long odd8 = 0;\n\
    \    long even9 = 0;\n    long odd9 = 0;\n    long even10 = 0;\n    long odd10\
    \ = 0;\n    long even11 = 0;\n    long odd11 = 0;\n    long even12 = 0;\n    long\
    \ odd12 = 0;\n    long even13 = 0;\n    long odd13 = 0;\n    long even14 = 0;\n\
    \    long odd14 = 0;\n    long even15 = 0;\n    long odd15 = 0;\n    long even16\
    \ = 0;\n    long odd16 = 0;\n    long even17 = 0;\n    long odd17 = 0;\n    long\
    \ even18 = 0;\n    long odd18 = 0;\n    long even19 = 0;\n    long odd19 = 0;\n\
    \    long even20 = 0;\n    long odd20 = 0;\n    long even21 = 0;\n    long odd21\
    \ = 0;\n    long even22 = 0;\n    long odd22 = 0;\n    long even23 = 0;\n    long\
    \ odd23 = 0;\n    long even24 = 0;\n    long odd24 = 0;\n    long even25 = 0;\n\
    \    long odd25 = 0;\n    long even26 = 0;\n    long odd26 = 0;\n    long even27\
    \ = 0;\n    long odd27 = 0;\n    long even28 = 0;\n    long odd28 = 0;\n    long\
    \ even29 = 0;\n    long odd29 = 0;\n    long even30 = 0;\n    long odd30 = 0;\n\
    \    long even31 = 0;\n    long odd31 = 0;\n    long even32 = 0;\n    long odd32\
    \ = 0;\n    long even33 = 0;\n    long odd33 = 0;\n    long even34 = 0;\n    long\
    \ odd34 = 0;\n    long even35 = 0;\n    long odd35 = 0;\n    long even36 = 0;\n\
    \    long odd36 = 0;\n    long even37 = 0;\n    long odd37 = 0;\n    long even38\
    \ = 0;\n    long odd38 = 0;\n    long even39 = 0;\n    long odd39 = 0;\n    long\
    \ even40 = 0;\n    long odd40 = 0;\n    long even41 = 0;\n    long odd41 = 0;\n\
    \    long even42 = 0;\n    long odd42 = 0;\n    long even43 = 0;\n    long odd43\
    \ = 0;\n    ", "    // Your code here\n    long even = 0;\n    long odd = 0;\n\
    \    long evenCount = 0;\n    long oddCount = 0;\n    long evenSum = 0;\n    long\
    \ oddSum = 0;\n    long evenMax = std::numeric_limits<long>::min();\n    long\
    \ oddMax = std::numeric_limits<long>::min();\n    long evenMin = std::numeric_limits<long>::max();\n\
    \    long oddMin = std::numeric_limits<long>::max();\n    long evenTotal = 0;\n\
    \    long oddTotal = 0;\n    long evenMinTotal = std::numeric_limits<long>::max();\n\
    \    long oddMinTotal = std::numeric_limits<long>::max();\n    long evenMaxTotal\
    \ = std::numeric_limits<long>::min();\n    long oddMaxTotal = std::numeric_limits<long>::min();\n\
    \    long evenMinMax = std::numeric_limits<long>::max();\n    long oddMinMax =\
    \ std::numeric_limits<long>::max();\n    long evenMinMaxTotal = std::numeric_limits<long>::max();\n\
    \    long oddMinMaxTotal = std::numeric_limits<long>::max();\n    long evenMinMaxTotal\
    \ = std::numeric_limits<long>::max();\n    long oddMinMaxTotal = std::numeric_limits<long>::max();\n\
    \    long evenMinMaxTotal = std::numeric_limits<long>::max();\n    long oddMinMaxTotal\
    \ = std::numeric_limits<long>::max();\n    long evenMinMaxTotal = std::numeric_limits<long>::max();\n\
    \    long oddMinMaxTotal = std::numeric_limits<long>::max();\n    long evenMinMaxTotal\
    \ = std::numeric_limits<long>::max();\n    long oddMinMaxTotal = std::numeric_limits<long>::max();\n\
    \    long evenMinMaxTotal = std::numeric_limits<long>::max();\n    long oddMinMaxTotal\
    \ = std::numeric_limits<long>::max();\n    long evenMinMaxTotal = std::numeric_limits<long>::max();\n\
    \    long oddMinMaxTotal = std::numeric_limits<long>::max();\n    long evenMinMaxTotal\
    \ = std::numeric_limits<long>::max();\n    long oddMinMaxTotal = std::numeric_limits<long>::max();\n\
    \    long evenMinMaxTotal = std::numeric_limits<long>::max();\n    long oddMinMaxTotal\
    \ = std::numeric_limits<long>::max();\n    long evenMinMaxTotal = std::numeric_limits<long>::max();\n\
    \    long oddMinMaxTotal = std::numeric_limits<", "    // Write your code here\n\
    \    long even = 0;\n    long odd = 0;\n    long evenCount = 0;\n    long oddCount\
    \ = 0;\n    for (long i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2\
    \ == 0) {\n            evenCount++;\n            even = even + lst1[i];\n    \
    \    } else {\n            oddCount++;\n            odd = odd + lst1[i];\n   \
    \     }\n    }\n    for (long i = 0; i < lst2.size(); i++) {\n        if (lst2[i]\
    \ % 2 == 0) {\n            evenCount++;\n            even = even + lst2[i];\n\
    \        } else {\n            oddCount++;\n            odd = odd + lst2[i];\n\
    \        }\n    }\n    if (evenCount == lst1.size() && oddCount == lst2.size())\
    \ {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }", " \
    \   // Your code here\n    long even = 0;\n    long odd = 0;\n    long evenCount\
    \ = 0;\n    long oddCount = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n\
    \    long evenMax = lst1[0];\n    long oddMax = lst1[0];\n    long evenMin = lst1[0];\n\
    \    long oddMin = lst1[0];\n    for (long i = 0; i < lst1.size(); i++) {\n  \
    \      if (lst1[i] > evenMax) {\n            evenMax = lst1[i];\n        }\n \
    \       if (lst1[i] < evenMin) {\n            evenMin = lst1[i];\n        }\n\
    \        if (lst2[i] > oddMax) {\n            oddMax = lst2[i];\n        }\n \
    \       if (lst2[i] < oddMin) {\n            oddMin = lst2[i];\n        }\n  \
    \  }\n    for (long i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 ==\
    \ 0) {\n            evenCount++;\n            evenSum += lst1[i];\n        }\n\
    \        if (lst2[i] % 2 == 0) {\n            oddCount++;\n            oddSum\
    \ += lst2[i];\n        }\n    }\n    if (evenCount == oddCount) {\n        if\
    \ (evenSum > oddSum) {\n            return \"YES\";\n        }\n        return\
    \ \"NO\";\n    }\n    if (evenCount > oddCount) {\n        return \"NO\";\n  \
    \  }\n    if (evenCount < oddCount) {\n        return \"YES\";\n    }", "    //\
    \ Your code here\n    long even = 0;\n    long odd = 0;\n    long evenCount =\
    \ 0;\n    long oddCount = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n  \
    \  long evenMin = std::numeric_limits<long>::max();\n    long oddMin = std::numeric_limits<long>::max();\n\
    \    long evenMax = std::numeric_limits<long>::min();\n    long oddMax = std::numeric_limits<long>::min();\n\
    \    long evenSum2 = 0;\n    long oddSum2 = 0;\n    long evenMin2 = std::numeric_limits<long>::max();\n\
    \    long oddMin2 = std::numeric_limits<long>::max();\n    long evenMax2 = std::numeric_limits<long>::min();\n\
    \    long oddMax2 = std::numeric_limits<long>::min();\n    long evenSum3 = 0;\n\
    \    long oddSum3 = 0;\n    long evenMin3 = std::numeric_limits<long>::max();\n\
    \    long oddMin3 = std::numeric_limits<long>::max();\n    long evenMax3 = std::numeric_limits<long>::min();\n\
    \    long oddMax3 = std::numeric_limits<long>::min();\n    long evenSum4 = 0;\n\
    \    long oddSum4 = 0;\n    long evenMin4 = std::numeric_limits<long>::max();\n\
    \    long oddMin4 = std::numeric_limits<long>::max();\n    long evenMax4 = std::numeric_limits<long>::min();\n\
    \    long oddMax4 = std::numeric_limits<long>::min();\n    long evenSum5 = 0;\n\
    \    long oddSum5 = 0;\n    long evenMin5 = std::numeric_limits<long>::max();\n\
    \    long oddMin5 = std::numeric_limits<long>::max();\n    long evenMax5 = std::numeric_limits<long>::min();\n\
    \    long oddMax5 = std::numeric_limits<long>::min();\n    long evenSum6 = 0;\n\
    \    long oddSum6 = 0;\n    long evenMin6 = std::numeric_limits<long>::max();\n\
    \    long oddMin6 = std::numeric_limits<long>::max();\n    long evenMax6 = std::numeric_limits<long>::min();\n\
    \    long oddMax6 = std::numeric_limits<long>::min();\n    long evenSum7 = 0;\n\
    \    long oddSum7 = 0;\n    long evenMin7 = std::numeric_limits<long>::max();\n\
    \    long oddMin7 = std::numeric_limits<long>::max();\n    long evenMax7 = std::numeric_limits<long>::min();\n\
    \    long oddMax7 = std::numeric_limits<long>::min();\n    long evenSum8", '    //
    Your code here', "    // Write your code here\n    long even = 0;\n    long odd\
    \ = 0;\n    long evenCount = 0;\n    long oddCount = 0;\n    long evenSum = 0;\n\
    \    long oddSum = 0;\n    long evenMin = INT_MAX;\n    long oddMin = INT_MAX;\n\
    \    long evenMax = INT_MIN;\n    long oddMax = INT_MIN;\n    long evenSum2 =\
    \ 0;\n    long oddSum2 = 0;\n    long evenMin2 = 0;\n    long oddMin2 = 0;\n \
    \   long evenMax2 = 0;\n    long oddMax2 = 0;\n    long evenSum3 = 0;\n    long\
    \ oddSum3 = 0;\n    long evenMin3 = 0;\n    long oddMin3 = 0;\n    long evenMax3\
    \ = 0;\n    long oddMax3 = 0;\n    long evenSum4 = 0;\n    long oddSum4 = 0;\n\
    \    long evenMin4 = 0;\n    long oddMin4 = 0;\n    long evenMax4 = 0;\n    long\
    \ oddMax4 = 0;\n    long evenSum5 = 0;\n    long oddSum5 = 0;\n    long evenMin5\
    \ = 0;\n    long oddMin5 = 0;\n    long evenMax5 = 0;\n    long oddMax5 = 0;\n\
    \    long evenSum6 = 0;\n    long oddSum6 = 0;\n    long evenMin6 = 0;\n    long\
    \ oddMin6 = 0;\n    long evenMax6 = 0;\n    long oddMax6 = 0;\n    long evenSum7\
    \ = 0;\n    long oddSum7 = 0;\n    long evenMin7 = 0;\n    long oddMin7 = 0;\n\
    \    long evenMax7 = 0;\n    long oddMax7 = 0;\n    long evenSum8 = 0;\n    long\
    \ oddSum8 = 0;\n    long evenMin8 = 0;\n    long oddMin8 = 0;\n    long evenMax8\
    \ = 0;\n    long oddMax8 = 0;\n    long evenSum9 = 0;\n    long oddSum9 = 0;\n\
    \    long evenMin9 = 0;\n    long oddMin9 = 0;\n    long evenMax9 = 0;\n    long\
    \ oddMax9 = 0;\n    long evenSum10 = 0;\n    long oddSum10 = 0;\n    long evenMin10\
    \ = 0;\n    long oddMin10 = 0;\n    long evenMax10 = 0;\n    long oddMax10 = 0;\n\
    \    long evenSum11 = 0;\n    long oddSum11 = 0;\n    long evenMin11 = 0;\n  \
    \  long oddMin11 = 0;\n    long evenMax11 = 0;\n    long oddMax11 = 0;\n    long\
    \ evenSum12 = 0;\n    long oddSum12 = 0;\n    long evenMin12 = 0;\n    long oddMin12\
    \ = 0;\n    long evenMax12 = 0;\n    long oddMax12 = 0;", "    // Your code here\n\
    \    long even = 0;\n    long odd = 0;\n    long evenCount = 0;\n    long oddCount\
    \ = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n    long evenSum2 = 0;\n\
    \    long oddSum2 = 0;\n    long evenSum3 = 0;\n    long oddSum3 = 0;\n    long\
    \ evenSum4 = 0;\n    long oddSum4 = 0;\n    long evenSum5 = 0;\n    long oddSum5\
    \ = 0;\n    long evenSum6 = 0;\n    long oddSum6 = 0;\n    long evenSum7 = 0;\n\
    \    long oddSum7 = 0;\n    long evenSum8 = 0;\n    long oddSum8 = 0;\n    long\
    \ evenSum9 = 0;\n    long oddSum9 = 0;\n    long evenSum10 = 0;\n    long oddSum10\
    \ = 0;\n    long evenSum11 = 0;\n    long oddSum11 = 0;\n    long evenSum12 =\
    \ 0;\n    long oddSum12 = 0;\n    long evenSum13 = 0;\n    long oddSum13 = 0;\n\
    \    long evenSum14 = 0;\n    long oddSum14 = 0;\n    long evenSum15 = 0;\n  \
    \  long oddSum15 = 0;\n    long evenSum16 = 0;\n    long oddSum16 = 0;\n    long\
    \ evenSum17 = 0;\n    long oddSum17 = 0;\n    long evenSum18 = 0;\n    long oddSum18\
    \ = 0;\n    long evenSum19 = 0;\n    long oddSum19 = 0;\n    long evenSum20 =\
    \ 0;\n    long oddSum20 = 0;\n    long evenSum21 = 0;\n    long oddSum21 = 0;\n\
    \    long evenSum22 = 0;\n    long oddSum22 = 0;\n    long evenSum23 = 0;\n  \
    \  long oddSum23 = 0;\n    long evenSum24 = 0;\n    long oddSum24 = 0;\n    long\
    \ evenSum25 = 0;\n    long oddSum25 = 0;\n    long evenSum26 = 0;\n    long oddSum26\
    \ = 0;\n    long evenSum27 = 0;\n    long oddSum27 = 0;\n    long evenSum28 =\
    \ 0;\n    long oddSum28 = 0;\n    long evenSum29 = 0;\n    long oddSum29 = 0;\n\
    \    long evenSum30 = 0;\n    long oddSum30 = 0;\n    long evenSum31 = 0;\n  \
    \  long oddSum31 = 0;\n    long evenSum32 = 0;\n    long oddSum32 = 0;\n    long\
    \ evenSum33 = 0;\n    long oddSum33 = 0;\n    long evenSum34 = 0;\n    long oddSum34\
    \ = 0;\n    long evenSum35 = 0;\n    long oddSum35 = 0;\n    long evenSum36",
  "    // Your code here\n    std::vector<long> even;\n    for(long i = 0; i < lst1.size();\
    \ i++) {\n        if(lst1[i] % 2 == 0) {\n            even.push_back(lst1[i]);\n\
    \        }\n    }\n    for(long i = 0; i < lst2.size(); i++) {\n        if(lst2[i]\
    \ % 2 == 0) {\n            even.push_back(lst2[i]);\n        }\n    }\n    for(long\
    \ i = 0; i < even.size(); i++) {\n        if(even[i] != even[even.size() - 1])\
    \ {\n            return \"NO\";\n        }\n    }\n    return \"YES\";", '    //
    Your code here', '    // Your code here', "    // Your code here\n    long even\
    \ = 0;\n    long odd = 0;\n    long evenCount = 0;\n    long oddCount = 0;\n \
    \   long evenSum = 0;\n    long oddSum = 0;\n    long evenMax = std::numeric_limits<long>::min();\n\
    \    long oddMax = std::numeric_limits<long>::min();\n    long evenMin = std::numeric_limits<long>::max();\n\
    \    long oddMin = std::numeric_limits<long>::max();\n    long evenTotal = 0;\n\
    \    long oddTotal = 0;\n    long evenMaxSum = std::numeric_limits<long>::min();\n\
    \    long oddMaxSum = std::numeric_limits<long>::min();\n    long evenMinSum =\
    \ std::numeric_limits<long>::max();\n    long oddMinSum = std::numeric_limits<long>::max();\n\
    \    long evenTotalSum = 0;\n    long oddTotalSum = 0;\n    long evenMaxSumTotal\
    \ = std::numeric_limits<long>::min();\n    long oddMaxSumTotal = std::numeric_limits<long>::min();\n\
    \    long evenMinSumTotal = std::numeric_limits<long>::max();\n    long oddMinSumTotal\
    \ = std::numeric_limits<long>::max();\n    long evenTotalSumTotal = 0;\n    long\
    \ oddTotalSumTotal = 0;\n    long evenMaxSumTotalSum = std::numeric_limits<long>::min();\n\
    \    long oddMaxSumTotalSum = std::numeric_limits<long>::min();\n    long evenMinSumTotalSum\
    \ = std::numeric_limits<long>::max();\n    long oddMinSumTotalSum = std::numeric_limits<long>::max();\n\
    \    long evenTotalSumTotalSum = 0;\n    long oddTotalSumTotalSum = 0;\n    long\
    \ evenMaxSumTotalSumTotal = std::numeric_limits<long>::min();\n    long oddMaxSumTotalSumTotal\
    \ = std::numeric_limits<long>::min();\n    long evenMinSumTotalSumTotal = std::numeric_limits<long>::max();\n\
    \    long oddMinSumTotalSumTotal = std::numeric_limits<long>::max();\n    long\
    \ evenTotalSumTotalSumTotal = 0;\n    long oddTotalSumTotalSumTotal = 0;\n   \
    \ long evenMaxSumTotalSumTotalSum = std::numeric_limits<long>::min();\n    long\
    \ oddMaxSumTotalSumTotalSum = std::numeric_limits<long>::min();\n    long evenMinSumTotalSumTotalSum\
    \ = std::numeric_limits<long>::max();\n    long oddMinSumTotalSumTotalSum = std::numeric_limits<long>::",
  "    // Your code here\n    ", "    // Your code here\n    long even = 0;\n    long\
    \ odd = 0;\n    long eveneven = 0;\n    long evenodd = 0;\n    long oddeven =\
    \ 0;\n    long oddodd = 0;\n    long eveneveneven = 0;\n    long evenevenodd =\
    \ 0;\n    long evenoddeven = 0;\n    long evenoddodd = 0;\n    long oddeveneven\
    \ = 0;\n    long oddevenodd = 0;\n    long oddoddeven = 0;\n    long oddoddeven\
    \ = 0;\n    long oddoddodd = 0;\n    long eveneveneveneven = 0;\n    long evenevenevenodd\
    \ = 0;\n    long evenevenoddeven = 0;\n    long evenoddeveneven = 0;\n    long\
    \ evenoddeveneven = 0;\n    long evenoddoddeven = 0;\n    long oddeveneveneven\
    \ = 0;\n    long oddevenevenodd = 0;\n    long oddoddeveneven = 0;\n    long oddoddeveneven\
    \ = 0;\n    long oddoddoddeven = 0;\n    long eveneveneveneveneven = 0;\n    long\
    \ evenevenevenodd = 0;\n    long evenevenoddeven = 0;\n    long evenoddeveneven\
    \ = 0;\n    long evenoddeveneven = 0;\n    long evenoddeveneven = 0;\n    long\
    \ oddeveneveneven = 0;\n    long oddevenevenodd = 0;\n    long oddoddeveneven\
    \ = 0;\n    long oddoddeveneven = 0;\n    long oddoddoddeven = 0;\n    long eveneveneveneveneven\
    \ = 0;\n    long evenevenevenodd = 0;\n    long evenevenoddeven = 0;\n    long\
    \ evenoddeveneven = 0;\n    long evenoddeveneven = 0;\n    long oddeveneveneven\
    \ = 0;\n    long oddevenevenodd = 0;\n    long oddoddeveneven = 0;\n    long oddoddeveneven\
    \ = 0;\n    long oddoddoddeven = 0;\n    long eveneveneveneveneven = 0;\n    long\
    \ evenevenevenodd = 0;\n    long evenevenoddeven = 0;\n    long evenoddeveneven\
    \ = 0;\n    long evenoddeveneven = 0;\n    long oddeveneveneven = 0;\n    long\
    \ oddevenevenodd = 0;\n    long oddoddeveneven = 0;\n    long oddoddeveneven =\
    \ 0;\n    long oddoddoddeven = 0;\n    long eveneveneveneven = 0;\n    long evenevenevenodd\
    \ = 0;\n    long evenevenoddeven = 0;\n    long evenoddeveneven = 0;\n    long\
    \ evenoddeveneven = 0;\n    long oddeveneveneven = 0;\n    long oddevenevenodd\
    \ = 0;\n    long oddoddeveneven = 0;\n    long oddoddeveneven = 0;", "    // Your\
    \ code here\n    long even = 0;\n    long odd = 0;\n    long evenCount = 0;\n\
    \    long oddCount = 0;\n    long evenSum = 0;\n    long oddSum = 0;\n    long\
    \ evenMax = lst1[0];\n    long oddMax = lst1[0];\n    long evenMin = lst1[0];\n\
    \    long oddMin = lst1[0];\n    long evenSum = 0;\n    long oddSum = 0;\n   \
    \ long evenMax = lst2[0];\n    long oddMax = lst2[0];\n    long evenMin = lst2[0];\n\
    \    long oddMin = lst2[0];\n    long evenSum = 0;\n    long oddSum = 0;\n   \
    \ long evenMax = lst1[0];\n    long oddMax = lst1[0];\n    long evenMin = lst1[0];\n\
    \    long oddMin = lst1[0];\n    long evenSum = 0;\n    long oddSum = 0;\n   \
    \ long evenMax = lst2[0];\n    long oddMax = lst2[0];\n    long evenMin = lst2[0];\n\
    \    long oddMin = lst2[0];\n    long evenSum = 0;\n    long oddSum = 0;\n   \
    \ long evenMax = lst1[0];\n    long oddMax = lst1[0];\n    long evenMin = lst1[0];\n\
    \    long oddMin = lst1[0];\n    long evenSum = 0;\n    long oddSum = 0;\n   \
    \ long evenMax = lst2[0];\n    long oddMax = lst2[0];\n    long evenMin = lst2[0];\n\
    \    long oddMin = lst2[0];\n    long evenSum = 0;\n    long oddSum = 0;\n   \
    \ long evenMax = lst1[0];\n    long oddMax = lst1[0];\n    long evenMin = lst1[0];\n\
    \    long oddMin = lst1[0];\n    long evenSum = 0;\n    long oddSum = 0;\n   \
    \ long evenMax = lst2[0];\n    long oddMax = lst2[0];\n    long evenMin = lst2[0];\n\
    \    long oddMin = lst2[0];\n    long evenSum = 0;\n    long oddSum = 0;\n   \
    \ long evenMax = lst1[0];\n    long oddMax = lst1[0];\n    long evenMin = lst1[0];\n\
    \    long oddMin = lst1[0];\n    long evenSum = 0;\n    long oddSum = 0;\n   \
    \ long evenMax = lst2[0];\n    long oddMax = lst2[0];\n    long evenMin = lst2[0];\n\
    \    long oddMin = lst2[0];\n    long evenSum = 0;", '    // Your code here',
  "    long even = 0;\n    long odd = 0;\n    long even2 = 0;\n    long odd2 = 0;\n\
    \    long even3 = 0;\n    long odd3 = 0;\n    long even4 = 0;\n    long odd4 =\
    \ 0;\n    long even5 = 0;\n    long odd5 = 0;\n    long even6 = 0;\n    long odd6\
    \ = 0;\n    long even7 = 0;\n    long odd7 = 0;\n    long even8 = 0;\n    long\
    \ odd8 = 0;\n    long even9 = 0;\n    long odd9 = 0;\n    long even10 = 0;\n \
    \   long odd10 = 0;\n    long even11 = 0;\n    long odd11 = 0;\n    long even12\
    \ = 0;\n    long odd12 = 0;\n    long even13 = 0;\n    long odd13 = 0;\n    long\
    \ even14 = 0;\n    long odd14 = 0;\n    long even15 = 0;\n    long odd15 = 0;\n\
    \    long even16 = 0;\n    long odd16 = 0;\n    long even17 = 0;\n    long odd17\
    \ = 0;\n    long even18 = 0;\n    long odd18 = 0;\n    long even19 = 0;\n    long\
    \ odd19 = 0;\n    long even20 = 0;\n    long odd20 = 0;\n    long even21 = 0;\n\
    \    long odd21 = 0;\n    long even22 = 0;\n    long odd22 = 0;\n    long even23\
    \ = 0;\n    long odd23 = 0;\n    long even24 = 0;\n    long odd24 = 0;\n    long\
    \ even25 = 0;\n    long odd25 = 0;\n    long even26 = 0;\n    long odd26 = 0;\n\
    \    long even27 = 0;\n    long odd27 = 0;\n    long even28 = 0;\n    long odd28\
    \ = 0;\n    long even29 = 0;\n    long odd29 = 0;\n    long even30 = 0;\n    long\
    \ odd30 = 0;\n    long even31 = 0;\n    long odd31 = 0;\n    long even32 = 0;\n\
    \    long odd32 = 0;\n    long even33 = 0;\n    long odd33 = 0;\n    long even34\
    \ = 0;\n    long odd34 = 0;\n    long even35 = 0;\n    long odd35 = 0;\n    long\
    \ even36 = 0;\n    long odd36 = 0;\n    long even37 = 0;\n    long odd37 = 0;\n\
    \    long even38 = 0;\n    long odd38 = 0;\n    long even39 = 0;\n    long odd39\
    \ = 0;\n    long even40 = 0;\n    long odd40 = 0;\n    long even41 = 0;\n    long\
    \ odd41 = 0;\n    long even42 = 0;\n    long odd42 = 0;\n    long even43 = 0;\n\
    \    long odd43 = 0;\n    long even44 = 0;\n", "    // Your code here\n    long\
    \ even = 0;\n    long odd = 0;\n    long eveneven = 0;\n    long evenodd = 0;\n\
    \    long oddodd = 0;\n    long eveneveneven = 0;\n    long evenoddodd = 0;\n\
    \    long oddoddeven = 0;\n    long oddoddodd = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddoddeven = 0;\n    long oddoddeveneven = 0;\n    long oddoddoddeven\
    \ = 0;\n    long eveneveneveneven = 0;\n    long evenoddoddoddeven = 0;\n    long\
    \ oddoddeveneven = 0;\n    long oddoddoddeven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddoddoddeven = 0;\n    long oddoddeveneven = 0;\n    long\
    \ oddoddoddeven = 0;\n    long eveneveneveneven = 0;\n    long evenoddoddoddeven\
    \ = 0;\n    long oddoddeveneven = 0;\n    long oddoddoddeven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddoddoddeven = 0;\n    long oddoddeveneven = 0;\n    long\
    \ oddoddoddeven = 0;\n    long eveneveneveneven = 0;\n    long evenoddoddoddeven\
    \ = 0;\n    long oddoddeveneven = 0;\n    long oddoddoddeven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddoddoddeven = 0;\n    long oddoddeveneven = 0;\n    long\
    \ oddoddoddeven = 0;\n    long eveneveneveneven = 0;\n    long evenoddoddoddeven\
    \ = 0;\n    long oddoddeveneven = 0;\n    long oddoddoddeven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddoddoddeven = 0;\n    long oddoddeveneven = 0;\n    long\
    \ oddoddoddeven = 0;\n    long eveneveneveneven = 0;\n    long evenoddoddoddeven\
    \ = 0;\n    long oddoddeveneven = 0;\n    long oddoddoddeven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddoddoddeven = 0;\n    long oddoddeveneven = 0;\n    long\
    \ oddoddoddeven = 0;\n    long eveneveneveneven = 0;\n    long evenoddoddoddeven\
    \ = 0;\n    long oddoddeveneven = 0;\n    long oddoddoddeven = 0;\n    long eveneveneveneven\
    \ = 0;\n    long evenoddoddoddeven = 0;\n    long oddoddeveneven = 0;\n    long\
    \ oddoddoddeven = 0;\n    long eveneveneveneven = 0;\n    long evenoddoddoddeven\
    \ = 0;\n    long oddoddeveneven", "    // Write your code here\n    long even\
    \ = 0;\n    long odd = 0;\n    long evenCount = 0;\n    long oddCount = 0;\n \
    \   for (long i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 == 0) {\n\
    \            even = even + lst1[i];\n            evenCount++;\n        } else\
    \ {\n            odd = odd + lst1[i];\n            oddCount++;\n        }\n  \
    \  }\n    for (long i = 0; i < lst2.size(); i++) {\n        if (lst2[i] % 2 ==\
    \ 0) {\n            even = even + lst2[i];\n            evenCount++;\n       \
    \ } else {\n            odd = odd + lst2[i];\n            oddCount++;\n      \
    \  }\n    }\n    if (evenCount == lst1.size() && oddCount == lst2.size()) {\n\
    \        return \"YES\";\n    } else {\n        return \"NO\";\n    }", "    //\
    \ Your code here\n    std::vector<long> even;\n    for(long i = 0; i < lst1.size();\
    \ i++){\n        if(lst1[i] % 2 == 0){\n            even.push_back(lst1[i]);\n\
    \        }\n    }\n    for(long i = 0; i < lst2.size(); i++){\n        if(lst2[i]\
    \ % 2 == 0){\n            even.push_back(lst2[i]);\n        }\n    }\n    for(long\
    \ i = 0; i < even.size(); i++){\n        if(even[i] != even[even.size()-1]){\n\
    \            return \"NO\";\n        }\n    }\n    return \"YES\";", "    // Your\
    \ code here\n    long even = 0;\n    long odd = 0;\n    long even2 = 0;\n    long\
    \ odd2 = 0;\n    long even3 = 0;\n    long odd3 = 0;\n    long even4 = 0;\n  \
    \  long odd4 = 0;\n    long even5 = 0;\n    long odd5 = 0;\n    long even6 = 0;\n\
    \    long odd6 = 0;\n    long even7 = 0;\n    long odd7 = 0;\n    long even8 =\
    \ 0;\n    long odd8 = 0;\n    long even9 = 0;\n    long odd9 = 0;\n    long even10\
    \ = 0;\n    long odd10 = 0;\n    long even11 = 0;\n    long odd11 = 0;\n    long\
    \ even12 = 0;\n    long odd12 = 0;\n    long even13 = 0;\n    long odd13 = 0;\n\
    \    long even14 = 0;\n    long odd14 = 0;\n    long even15 = 0;\n    long odd15\
    \ = 0;\n    long even16 = 0;\n    long odd16 = 0;\n    long even17 = 0;\n    long\
    \ odd17 = 0;\n    long even18 = 0;\n    long odd18 = 0;\n    long even19 = 0;\n\
    \    long odd19 = 0;\n    long even20 = 0;\n    long odd20 = 0;\n    long even21\
    \ = 0;\n    long odd21 = 0;\n    long even22 = 0;\n    long odd22 = 0;\n    long\
    \ even23 = 0;\n    long odd23 = 0;\n    long even24 = 0;\n    long odd24 = 0;\n\
    \    long even25 = 0;\n    long odd25 = 0;\n    long even26 = 0;\n    long odd26\
    \ = 0;\n    long even27 = 0;\n    long odd27 = 0;\n    long even28 = 0;\n    long\
    \ odd28 = 0;\n    long even29 = 0;\n    long odd29 = 0;\n    long even30 = 0;\n\
    \    long odd30 = 0;\n    long even31 = 0;\n    long odd31 = 0;\n    long even32\
    \ = 0;\n    long odd32 = 0;\n    long even33 = 0;\n    long odd33 = 0;\n    long\
    \ even34 = 0;\n    long odd34 = 0;\n    long even35 = 0;\n    long odd35 = 0;\n\
    \    long even36 = 0;\n    long odd36 = 0;\n    long even37 = 0;\n    long odd37\
    \ = 0;\n    long even38 = 0;\n    long odd38 = 0;\n    long even39 = 0;\n    long\
    \ odd39 = 0;\n    long even40 = 0;\n    long odd40 = 0;\n    long even41 = 0;\n\
    \    long odd41 = 0;\n    long even42 = 0;\n    long odd42 = 0;\n    long even43\
    \ = 0;\n    long odd43 = 0;\n    ", '    // Your code here']
stop_tokens:
- "\n}"

name: HumanEval_86_anti_shuffle
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that takes\
  \ a string and returns an ordered version of it.\n// Ordered version of string,\
  \ is a string where all words (separated by space)\n// are replaced by a new word\
  \ where all the characters arranged in\n// ascending order based on ascii value.\n\
  // Note: You should keep the order of words and blank spaces in the sentence.\n\
  // For example:\nstd::string anti_shuffle(std::string s) {\n"
tests: "}\nint main() {\n    auto candidate = anti_shuffle;\n    assert(candidate((\"\
  Hi\")) == (\"Hi\"));\n    assert(candidate((\"hello\")) == (\"ehllo\"));\n    assert(candidate((\"\
  number\")) == (\"bemnru\"));\n    assert(candidate((\"abcd\")) == (\"abcd\"));\n\
  \    assert(candidate((\"Hello World!!!\")) == (\"Hello !!!Wdlor\"));\n    assert(candidate((\"\
  \")) == (\"\"));\n    assert(candidate((\"Hi. My name is Mister Robot. How are you?\"\
  )) == (\".Hi My aemn is Meirst .Rboot How aer ?ouy\"));\n}\n"
completions: ["    // Write your code here\n    std::string ans;\n    for(int i=0;i<s.size();i++){\n\
    \        if(s[i]==' '){\n            ans+=\" \"+s[i];\n        }\n        else{\n\
    \            int j=i;\n            while(j<s.size() && s[j+1]==' '){\n       \
    \         j++;\n            }\n            ans+=\" \"+s.substr(i,j-i+1);\n   \
    \         i=j;\n        }\n    }\n    return ans;", "    std::string ans = \"\"\
    ;\n    std::string word = \"\";\n    std::string temp = \"\";\n    for(int i =\
    \ 0; i < s.length(); i++) {\n        if(s[i] == ' ') {\n            ans += word;\n\
    \            word = \"\";\n        } else {\n            word += s[i];\n     \
    \   }\n    }\n    ans += word;\n    return ans;", "    std::string ans = \"\"\
    ;\n    std::string word;\n    for (auto &c: s) {\n        if (c != ' ') {\n  \
    \          word += c;\n        } else {\n            ans += word;\n          \
    \  word = \"\";\n        }\n    }\n    ans += word;\n    return ans;", "    std::string\
    \ new_s = \"\";\n    std::string temp = \"\";\n    for (auto &c : s) {\n     \
    \   if (c != ' ') {\n            temp = temp + c;\n        } else {\n        \
    \    new_s = new_s + \" \" + temp;\n            temp = \"\";\n        }\n    }\n\
    \    new_s = new_s + \" \" + temp;\n    return new_s;", "    // Write your code\
    \ here\n    std::string ans = \"\";\n    int n = s.size();\n    for (int i = 0;\
    \ i < n; i++) {\n        char c = s[i];\n        if (c == ' ' || c == '.' || c\
    \ == '!' || c == '?') {\n            ans += c;\n        } else {\n           \
    \ int j = i;\n            while (j > 0 && s[j - 1] == ' ') {\n               \
    \ ans += s[j - 1];\n                j--;\n            }\n            ans += c;\n\
    \        }\n    }\n    return ans;", "    std::string ans = \"\";\n    std::string\
    \ temp = \"\";\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int n = s.size();\n\
    \    while(i < n) {\n        temp = s.substr(i, 1);\n        while(j < n) {\n\
    \            if(temp == s.substr(j, 1)) {\n                ans = ans + temp;\n\
    \                j = j + 1;\n            }\n            else\n               \
    \ j = j + 1;\n        }\n        i = i + 1;\n    }\n    return ans;", "    std::string\
    \ new_s = \"\";\n    std::string word = \"\";\n    for (auto c : s) {\n      \
    \  if (c != ' ') {\n            word += c;\n        } else {\n            new_s\
    \ += word;\n            word = \"\";\n        }\n    }\n    new_s += word;\n \
    \   return new_s;", "    std::string ans = \"\";\n    std::string word = \"\"\
    ;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    while (i < s.size()) {\n\
    \        word = s.substr(i, 1);\n        if (word == \" \") {\n            ans\
    \ += word;\n            i += 1;\n        } else {\n            ans += word;\n\
    \            ans += \" \";\n            i += 1;\n        }\n    }\n    return\
    \ ans;", "    std::string ans = \"\";\n    std::string word = \"\";\n    std::string\
    \ temp = \"\";\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] ==\
    \ ' ') {\n            ans += temp;\n            temp = \"\";\n        } else {\n\
    \            temp += s[i];\n        }\n    }\n    ans += temp;\n    return ans;",
  "    std::string ans = \"\";\n    std::string word = \"\";\n    std::string temp\
    \ = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ')\
    \ {\n            ans += word;\n            word = \"\";\n        } else {\n  \
    \          word += s[i];\n        }\n    }\n    ans += word;\n    return ans;",
  "    std::string new_s = \"\";\n    std::string word;\n    std::string new_word;\n\
    \    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n      \
    \      new_s += new_word;\n            new_word = \"\";\n        } else {\n  \
    \          new_word += s[i];\n        }\n    }\n    new_s += new_word;\n    return\
    \ new_s;", "    std::string ans = \"\";\n    std::string temp = \"\";\n    for\
    \ (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n           \
    \ ans += temp;\n            temp = \"\";\n        } else {\n            temp +=\
    \ s[i];\n        }\n    }\n    ans += temp;\n    return ans;", "    // Write your\
    \ code here\n    std::string ans = \"\";\n    for(int i=0;i<s.size();i++){\n \
    \       if(s[i]==' '){\n            ans += \" \";\n        }\n        else{\n\
    \            ans += s[i];\n        }\n    }\n    return ans;", "    std::string\
    \ ans = \"\";\n    for(int i = 0; i < s.size(); i++) {\n        if(!isalpha(s[i]))\
    \ {\n            ans += s[i];\n        } else {\n            ans += \" \";\n \
    \           ans += s[i];\n        }\n    }\n    return ans;", "    std::string\
    \ ans = \"\";\n    std::string word;\n    for (auto &c : s) {\n        if (c ==\
    \ ' ') {\n            ans += word;\n            word = \"\";\n        } else {\n\
    \            word += c;\n        }\n    }\n    ans += word;\n    return ans;",
  "    std::string ans = \"\";\n    std::string temp = \"\";\n    for(int i = 0; i\
    \ < s.length(); i++) {\n        if(!isalpha(s[i])) {\n            ans += s[i];\n\
    \            continue;\n        }\n        temp = s[i];\n        for(int j = i\
    \ + 1; j < s.length(); j++) {\n            if(isalpha(s[j]) && temp < s[j]) {\n\
    \                temp = s[j];\n            }\n        }\n        ans += temp;\n\
    \    }\n    return ans;", "    std::string new_s = \"\";\n    std::string word\
    \ = \"\";\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    while (i < s.size())\
    \ {\n        word = s.substr(i, 1);\n        if (word != \" \") {\n          \
    \  j = i;\n            while (j < s.size() && s[j] != ' ') {\n               \
    \ j++;\n            }\n            k = i;\n            while (k < s.size() &&\
    \ s[k] != ' ') {\n                k++;\n            }\n            if (j < s.size()\
    \ && k < s.size()) {\n                while (k < s.size() && s[k] != ' ') {\n\
    \                    k++;\n                }\n                while (j < s.size()\
    \ && s[j] != ' ') {\n                    j++;\n                }\n           \
    \     while (k < s.size() && s[k] != ' ') {\n                    k++;\n      \
    \          }\n            }\n            if (j < s.size()) {\n               \
    \ while (k < s.size() && s[k] != ' ') {\n                    k++;\n          \
    \      }\n            }\n            if (k < s.size()) {\n                while\
    \ (j < s.size() && s[j] != ' ') {\n                    j++;\n                }\n\
    \            }\n            if (j < s.size()) {\n                while (k < s.size()\
    \ && s[k] != ' ') {\n                    k++;\n                }\n           \
    \ }\n            if (k < s.size()) {\n                while (j < s.size() && s[k]\
    \ != ' ') {\n                    j++;\n                }\n            }\n    \
    \        if (j < s.size()) {\n                while (k < s.size() && s[k] != '\
    \ ') {\n                    k++;\n                }\n            }\n         \
    \   if (k < s.size()) {\n                while (j < s.size() && s[k] != ' ') {\n\
    \                    j++;\n                }\n            }\n            if (j\
    \ < s.size()) {\n                while (k < s.size() && s[k] != ' ') {\n     \
    \               k++;\n                }\n            }\n            if (k < s.size())\
    \ {\n                while (j < s.size() && s[k] != ' ') {\n                 \
    \   j++;\n                }\n            }\n            if (k < s.size()) {\n\
    \                while (k < s.size() && s[k] != ' ') {\n                    k++;\n\
    \                }\n            }\n            if (k < s.size()) {\n         \
    \       while (j < s.size() && s[k] != ' ') {\n                    j++;\n    \
    \            }\n            }\n            if (k < s.size()) {\n             \
    \   while (k < s.size() && s[k] != ' ') {\n                    k++;\n        \
    \        }\n            }\n            if (k < s.size()) {\n                while\
    \ (j < s.size() && s[k] != ' ') {\n                    j++;\n                }\n\
    \            }\n            if (k < s.size()) {\n                while (k < s.size()\
    \ && s[k] != ' ') {\n                    k++;\n                }\n           \
    \ }\n            if (k < s.size()) {\n                while (j < s.size() && s[k]\
    \ != ' ') {\n                    j++;\n                }\n            }\n    \
    \        if (k < s.size()) {\n                while (k < s.size() && s[k] != '\
    \ ') {\n                    k++;\n                }\n            }\n         \
    \   if (k < s.size()) {\n                while (j < s.size() && s[k] != ' ') {\n\
    \                    j++;\n                }\n            }\n            if (k\
    \ < s.size()) {\n                ", "    std::string ans = \"\";\n    int n =\
    \ s.size();\n    for (int i = 0; i < n; i++) {\n        char c = s[i];\n     \
    \   if (c == ' ' || c == '.' || c == '!' || c == '?') {\n            ans += c;\n\
    \        }\n        else {\n            int j = i;\n            while (j > 0 &&\
    \ s[j - 1] > c) {\n                ans += s[j - 1];\n                j--;\n  \
    \          }\n            ans += c;\n        }\n    }\n    return ans;", "   \
    \ std::string ans = \"\";\n    int n = s.size();\n    for (int i = 0; i < n; i++)\
    \ {\n        char c = s[i];\n        int j = i;\n        while (j > 0 && s[j -\
    \ 1] > c) {\n            ans += s[j - 1];\n            s[j - 1] = s[j];\n    \
    \        s[j] = c;\n            j--;\n        }\n        ans += s[j];\n    }\n\
    \    return ans;", "    std::string new_s = \"\";\n    std::string word;\n   \
    \ std::string new_word;\n    std::string blank;\n    std::string new_blank;\n\
    \    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n    \
    \        blank = s.substr(i, 1);\n            new_blank = s.substr(i, 1);\n  \
    \          word = s.substr(i + 1, 1);\n            new_word = s.substr(i + 1,\
    \ 1);\n            new_s += new_blank;\n            new_s += word;\n         \
    \   new_s += new_word;\n            i += 1;\n        } else {\n            new_s\
    \ += s[i];\n        }\n    }\n    return new_s;", "    std::string ans = \"\"\
    ;\n    for(int i = 0; i < s.size(); i++) {\n        if(s[i] == ' ') {\n      \
    \      ans += \" \";\n        } else {\n            ans += s[i];\n        }\n\
    \    }\n    return ans;", "    // Write your code here\n    std::string ans =\
    \ \"\";\n    for(int i = 0; i < s.size(); i++) {\n        for(int j = i; j < s.size();\
    \ j++) {\n            if(s[j] < s[i]) {\n                char temp = s[j];\n \
    \               s[j] = s[i];\n                s[i] = temp;\n            }\n  \
    \      }\n    }\n    return ans;", "    std::string ans = \"\";\n    std::string\
    \ word = \"\";\n    std::string temp = \"\";\n    for (auto c : s) {\n       \
    \ if (c != ' ') {\n            word += c;\n        } else {\n            ans +=\
    \ temp;\n            ans += word;\n            word = \"\";\n            temp\
    \ = \"\";\n        }\n    }\n    ans += temp;\n    ans += word;\n    return ans;",
  "    std::string new_s = \"\";\n    std::string temp = \"\";\n    for (int i = 0;\
    \ i < s.size(); i++) {\n        if (s[i] == ' ') {\n            new_s += temp;\n\
    \            temp = \"\";\n        } else {\n            temp += s[i];\n     \
    \   }\n    }\n    new_s += temp;\n    return new_s;", "    std::string new_s =\
    \ \"\";\n    std::string word;\n    for (auto &c : s) {\n        if (c == ' ')\
    \ {\n            word = new_s;\n            new_s = \"\";\n        } else {\n\
    \            new_s += c;\n        }\n    }\n    word = new_s;\n    new_s = \"\"\
    ;\n    for (auto &c : word) {\n        if (c == ' ') {\n            new_s += '\
    \ ';\n        } else {\n            new_s += c;\n        }\n    }\n    return\
    \ new_s;", "    std::string new_s = \"\";\n    std::string word = \"\";\n    int\
    \ i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n   \
    \ int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n\
    \    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n\
    \    int x = 0;\n    int y = 0;\n    int z = 0;\n    int A = 0;\n    int B = 0;\n\
    \    int C = 0;\n    int D = 0;\n    int E = 0;\n    int F = 0;\n    int G = 0;\n\
    \    int H = 0;\n    int I = 0;\n    int J = 0;\n    int K = 0;\n    int L = 0;\n\
    \    int M = 0;\n    int N = 0;\n    int O = 0;\n    int P = 0;\n    int Q = 0;\n\
    \    int R = 0;\n    int S = 0;\n    int T = 0;\n    int U = 0;\n    int V = 0;\n\
    \    int W = 0;\n    int X = 0;\n    int Y = 0;\n    int Z = 0;\n    int space\
    \ = 0;\n    int comma = 0;\n    int period = 0;\n    int semicolon = 0;\n    int\
    \ colon = 0;\n    int equal = 0;\n    int question_mark = 0;\n    int exclamation_mark\
    \ = 0;\n    int left_parenthesis = 0;\n    int right_parenthesis = 0;\n    int\
    \ asterisk = 0;\n    int underscore = 0;\n    int backslash = 0;\n    int left_bracket\
    \ = 0;\n    int right_bracket = 0;\n    int left_brace = 0;\n    int right_brace\
    \ = 0;\n    int left_bracket = 0;\n    int right_bracket = 0;\n    int left_brace\
    \ = 0;\n    int right_brace = 0;\n    int left_bracket = 0;\n    int right_bracket\
    \ = 0;\n    int left_brace = 0;\n    int right_brace = 0;\n    int left_bracket\
    \ = 0;\n    int right_bracket = 0;\n    int left_brace = 0;\n    int right_brace\
    \ = 0;\n    int left_bracket = 0;\n    int right_bracket = 0;\n    int left_brace\
    \ = 0;\n    int right_brace = 0;\n    int left_bracket = 0;\n    int right_bracket\
    \ = 0;\n    int left_brace = 0;\n    int right_brace = 0;\n    int left_bracket\
    \ = 0;\n    int right_bracket = 0;\n    int left_brace = 0;\n    int right_brace\
    \ = 0;\n    int left_bracket = 0;\n    int right_bracket = 0;\n    int left_brace\
    \ = 0;\n    int right_brace = 0;\n    int left_bracket = 0;\n    int right_bracket\
    \ = 0;\n    int left_brace = 0;\n    int right_brace = 0;\n    int left_bracket\
    \ = 0;\n    int right_bracket = 0;\n    int left_brace = 0;\n    int right_brace\
    \ = 0;\n    int left_bracket = 0;\n    int right_bracket = 0;\n    int left_brace\
    \ = 0;\n    int right_brace = 0;\n    int left_bracket = 0;\n    int right_bracket\
    \ = 0;\n    int left_brace = 0;\n    int right_brace = 0;\n    int left_bracket\
    \ = 0;\n    int right_bracket = 0;\n    int left_brace = 0;\n    int right_brace\
    \ = 0;\n    int left_bracket", "    std::string ans;\n    std::string temp;\n\
    \    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n\
    \    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n\
    \    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n\
    \    int x = 0;\n    int y = 0;\n    int z = 0;\n    int A = 0;\n    int B = 0;\n\
    \    int C = 0;\n    int D = 0;\n    int E = 0;\n    int F = 0;\n    int G = 0;\n\
    \    int H = 0;\n    int I = 0;\n    int J = 0;\n    int K = 0;\n    int L = 0;\n\
    \    int M = 0;\n    int N = 0;\n    int O = 0;\n    int P = 0;\n    int Q = 0;\n\
    \    int R = 0;\n    int S = 0;\n    int T = 0;\n    int U = 0;\n    int V = 0;\n\
    \    int W = 0;\n    int X = 0;\n    int Y = 0;\n    int Z = 0;\n    int space\
    \ = 0;\n    int blank = 0;\n    int alpha = 0;\n    int digit = 0;\n    int other\
    \ = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int A = 0;\n    int\
    \ B = 0;\n    int C = 0;\n    int D = 0;\n    int E = 0;\n    int F = 0;\n   \
    \ int G = 0;\n    int H = 0;\n    int I = 0;\n    int J = 0;\n    int K = 0;\n\
    \    int L = 0;\n    int M = 0;\n    int N = 0;\n    int O = 0;\n    int P = 0;\n\
    \    int Q = 0;\n    int R = 0;\n    int S = 0;\n    int T = 0;\n    int U = 0;\n\
    \    int V = 0;\n    int W = 0;\n    int X = 0;\n    int Y = 0;\n    int Z = 0;\n\
    \    int space = 0;\n    int blank = 0;\n    int alpha = 0;\n    int digit = 0;\n\
    \    int other = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int A\
    \ = 0;\n    int B = 0;\n    int C = 0;\n    int D = 0;\n    int E = 0;\n    int\
    \ F = 0;\n    int G = 0;\n    int H = 0;\n    int I = 0;\n    int J = 0;\n   \
    \ int K = 0;\n    int L = 0;\n    int M = 0;\n    int N = 0;\n    int O = 0;\n\
    \    int P = 0;\n    int Q = 0;\n    int R = 0;\n    int S = 0;\n    int T = 0;\n\
    \    int U = 0;\n    int V = 0;\n    int W = 0;\n    int X = 0;\n    int Y = 0;\n\
    \    int Z = 0;\n    int space = 0;\n    int blank = 0;\n    int alpha = 0;\n\
    \    int digit = 0;\n    int other = 0;\n    int x = 0;\n    int y = 0;\n    int\
    \ z = 0;\n    int A = 0;\n    int B = 0;\n    int C = 0;\n    int D = 0;\n   \
    \ int E = 0;\n    int F = 0;\n    int ", "    std::string ans = \"\";\n    std::string\
    \ word = \"\";\n    std::string temp = \"\";\n    for (int i = 0; i < s.length();\
    \ i++) {\n        if (s[i] == ' ') {\n            if (word.length() > 0) {\n \
    \               ans += \" \" + word;\n                word = \"\";\n         \
    \   }\n        } else {\n            word += s[i];\n        }\n    }\n    if (word.length()\
    \ > 0) {\n        ans += \" \" + word;\n    }\n    return ans;", "    std::string\
    \ new_s;\n    std::string word;\n    std::string new_word;\n    for (auto &c :\
    \ s) {\n        if (c != ' ') {\n            word.push_back(c);\n        }\n \
    \   }\n    for (auto &c : word) {\n        new_word.push_back(c);\n    }\n   \
    \ for (auto &c : new_word) {\n        int val = c;\n        if (val > 96 && val\
    \ < 123) {\n            val -= 32;\n        }\n        new_s.push_back(val);\n\
    \    }\n    return new_s;", "    std::string new_s = \"\";\n    std::string word\
    \ = \"\";\n    std::string new_word = \"\";\n    for (char c : s) {\n        if\
    \ (c == ' ') {\n            new_s += word;\n            word = \"\";\n       \
    \ } else {\n            word += c;\n        }\n    }\n    new_s += word;\n   \
    \ return new_s;", "    std::string ans = \"\";\n    std::string temp = \"\";\n\
    \    for (auto &c : s) {\n        if (c != ' ') {\n            temp = temp + c;\n\
    \        } else {\n            ans = ans + temp;\n            temp = \"\";\n \
    \       }\n    }\n    ans = ans + temp;\n    return ans;", "    std::string ans\
    \ = \"\";\n    std::string word = \"\";\n    std::string temp = \"\";\n    for\
    \ (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n           \
    \ ans += temp;\n            temp = \"\";\n        } else {\n            temp +=\
    \ s[i];\n        }\n    }\n    ans += temp;\n    return ans;", "    std::string\
    \ ans = \"\";\n    std::string temp = \"\";\n    int i = 0;\n    int j = 0;\n\
    \    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n\
    \    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n\
    \    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n\
    \    int z = 0;\n    int A = 0;\n    int B = 0;\n    int C = 0;\n    int D = 0;\n\
    \    int E = 0;\n    int F = 0;\n    int G = 0;\n    int H = 0;\n    int I = 0;\n\
    \    int J = 0;\n    int K = 0;\n    int L = 0;\n    int M = 0;\n    int N = 0;\n\
    \    int O = 0;\n    int P = 0;\n    int Q = 0;\n    int R = 0;\n    int S = 0;\n\
    \    int T = 0;\n    int U = 0;\n    int V = 0;\n    int W = 0;\n    int X = 0;\n\
    \    int Y = 0;\n    int Z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n\
    \    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n\
    \    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n\
    \    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n\
    \    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n\
    \    int x = 0;\n    int y = 0;\n    int z = 0;\n    int A = 0;\n    int B = 0;\n\
    \    int C = 0;\n    int D = 0;\n    int E = 0;\n    int F = 0;\n    int G = 0;\n\
    \    int H = 0;\n    int I = 0;\n    int J = 0;\n    int K = 0;\n    int L = 0;\n\
    \    int M = 0;\n    int N = 0;\n    int O = 0;\n    int P = 0;\n    int Q = 0;\n\
    \    int R = 0;\n    int S = 0;\n    int T = 0;\n    int U = 0;\n    int V = 0;\n\
    \    int W = 0;\n    int X = 0;\n    int Y = 0;\n    int Z = 0;\n    int a = 0;\n\
    \    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n\
    \    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n\
    \    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n\
    \    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n\
    \    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n\
    \    int A = 0;\n    int B = 0;\n    int C = 0;\n    int D = 0;\n    int E = 0;\n\
    \    int F", "    std::string ans = \"\";\n    std::string word = \"\";\n    std::string\
    \ temp = \"\";\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i] ==\
    \ ' ') {\n            ans += temp;\n            temp = \"\";\n        } else {\n\
    \            temp += s[i];\n        }\n    }\n    ans += temp;\n    return ans;",
  "    std::string new_s = \"\";\n    std::string word;\n    int i = 0;\n    while\
    \ (i < s.size()) {\n        word = s.substr(i, 1);\n        i += 1;\n        if\
    \ (word != \" \") {\n            new_s += word;\n        }\n    }\n    return\
    \ new_s;", "    std::string ans = \"\";\n    std::string word = \"\";\n    for\
    \ (auto c : s) {\n        if (c == ' ' || c == '.' || c == '!' || c == '?') {\n\
    \            ans += word;\n            word = \"\";\n        } else {\n      \
    \      word += c;\n        }\n    }\n    ans += word;\n    return ans;", "   \
    \ std::string ans = \"\";\n    std::string word = \"\";\n    std::string temp\
    \ = \"\";\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n  \
    \  int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n\
    \    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n\
    \    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n\
    \    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n\
    \    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n\
    \    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n\
    \    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n\
    \    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n\
    \    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n\
    \    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n\
    \    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n\
    \    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n\
    \    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n\
    \    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n\
    \    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n\
    \    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n\
    \    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n\
    \    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n\
    \    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n\
    \    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n\
    \    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n\
    \    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n\
    \    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n\
    \    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n\
    \    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;", "    std::string\
    \ ans = \"\";\n    std::string word = \"\";\n    std::string temp = \"\";\n  \
    \  for (auto c : s) {\n        if (c != ' ') {\n            word = word + c;\n\
    \        } else {\n            temp = temp + word;\n            ans = ans + temp;\n\
    \            word = \"\";\n            temp = \"\";\n        }\n    }\n    ans\
    \ = ans + temp;\n    return ans;", "    // Write your code here\n    std::string\
    \ new_s;\n    for(int i=0;i<s.size();i++){\n        if(s[i]==' '){\n         \
    \   new_s+=\" \";\n        }\n        else if(s[i]>='a' && s[i]<='z'){\n     \
    \       new_s+=\"z\";\n        }\n        else if(s[i]>='A' && s[i]<='Z'){\n \
    \           new_s+=\"Z\";\n        }\n        else if(s[i]>='0' && s[i]<='9'){\n\
    \            new_s+=\"9\";\n        }\n        else{\n            new_s+=(s[i]);\n\
    \        }\n    }\n    return new_s;", "    std::string new_s = \"\";\n    std::string\
    \ word;\n    std::string new_word;\n    for (auto &c : s) {\n        if (c ==\
    \ ' ') {\n            new_s += new_word;\n            new_word = \"\";\n     \
    \   } else {\n            new_word += c;\n        }\n    }\n    new_s += new_word;\n\
    \    return new_s;", '    // code here', "    // Your code here\n    std::string\
    \ ans = \"\";\n    std::string temp = \"\";\n    for(int i = 0; i < s.size();\
    \ i++){\n        if(s[i] == ' '){\n            ans += temp;\n            temp\
    \ = \"\";\n        }\n        else{\n            temp += s[i];\n        }\n  \
    \  }\n    ans += temp;\n    return ans;", "    // Write your code here\n    std::string\
    \ ans = \"\";\n    for(int i = 0; i < s.size(); i++) {\n        if(s[i] == ' ')\
    \ {\n            ans += \" \";\n        } else {\n            ans += s[i];\n \
    \       }\n    }\n    return ans;", "    std::string new_s = \"\";\n    std::string\
    \ word = \"\";\n    for (auto &c : s) {\n        if (c != ' ') {\n           \
    \ word += c;\n        } else {\n            new_s += word;\n            word =\
    \ \"\";\n        }\n    }\n    new_s += word;\n    return new_s;", "    std::string\
    \ ans = \"\";\n    std::string word = \"\";\n    int i = 0;\n    while (i < s.size())\
    \ {\n        if (s[i] == ' ') {\n            ans += word;\n            word =\
    \ \"\";\n        } else {\n            word += s[i];\n        }\n        i++;\n\
    \    }\n    ans += word;\n    return ans;", "    std::string ans = \"\";\n   \
    \ std::string word = \"\";\n    std::string temp = \"\";\n    for (int i = 0;\
    \ i < s.size(); i++) {\n        if (s[i] == ' ') {\n            ans += temp;\n\
    \            temp = \"\";\n        } else {\n            temp += s[i];\n     \
    \   }\n    }\n    ans += temp;\n    return ans;", "    std::string new_s = \"\"\
    ;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m =\
    \ 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int\
    \ r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n   \
    \ int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int A = 0;\n\
    \    int B = 0;\n    int C = 0;\n    int D = 0;\n    int E = 0;\n    int F = 0;\n\
    \    int G = 0;\n    int H = 0;\n    int I = 0;\n    int J = 0;\n    int K = 0;\n\
    \    int L = 0;\n    int M = 0;\n    int N = 0;\n    int O = 0;\n    int P = 0;\n\
    \    int Q = 0;\n    int R = 0;\n    int S = 0;\n    int T = 0;\n    int U = 0;\n\
    \    int V = 0;\n    int W = 0;\n    int X = 0;\n    int Y = 0;\n    int Z = 0;\n\
    \    int space = 0;\n    int comma = 0;\n    int period = 0;\n    int semicolon\
    \ = 0;\n    int colon = 0;\n    int equal = 0;\n    int dash = 0;\n    int underscore\
    \ = 0;\n    int open_bracket = 0;\n    int close_bracket = 0;\n    int open_square\
    \ = 0;\n    int close_square = 0;\n    int open_curly = 0;\n    int close_curly\
    \ = 0;\n    int open_parenthesis = 0;\n    int close_parenthesis = 0;\n    int\
    \ open_angle = 0;\n    int close_angle = 0;\n    int open_curly_bracket = 0;\n\
    \    int close_curly_bracket = 0;\n    int open_parenthesis_bracket = 0;\n   \
    \ int close_parenthesis_bracket = 0;\n    int open_parenthesis_curly = 0;\n  \
    \  int close_parenthesis_curly = 0;\n    int open_curly_curly = 0;\n    int close_curly_curly\
    \ = 0;\n    int open_curly_curly_bracket = 0;\n    int close_curly_curly_bracket\
    \ = 0;\n    int open_curly_curly_curly = 0;\n    int close_curly_curly_curly =\
    \ 0;\n    int open_curly_curly_curly_bracket = 0;\n    int close_curly_curly_curly_bracket\
    \ = 0;\n    int open_curly_curly_curly_curly = 0;\n    int close_curly_curly_curly_curly\
    \ = 0;\n    int open_curly_curly_curly_curly_bracket = 0;\n    int close_curly_curly_curly_curly_bracket\
    \ = 0;\n    int open_curly_curly_curly_curly_curly = 0;\n    int close_curly_curly_curly_curly_curly\
    \ = 0;\n    int open_curly_curly_curly_curly_curly_bracket = 0;\n    int close_curly_curly_curly_curly_curly_bracket\
    \ = 0;\n    int open_curly_curly_curly_cur", "    std::string ans = \"\";\n  \
    \  std::string word;\n    std::string temp;\n    int i = 0;\n    while (i < s.size())\
    \ {\n        word = s.substr(i, i + 1);\n        temp = word;\n        ans = ans\
    \ + temp;\n        i += 1;\n    }\n    return ans;", "    std::string ans = s;\n\
    \    std::string word;\n    std::string new_word;\n    std::string temp;\n   \
    \ for (int i = 0; i < ans.size(); i++) {\n        word = ans.substr(i, 1);\n \
    \       temp = ans.substr(0, i);\n        ans = temp + word;\n    }\n    return\
    \ ans;", "    // Write your code here\n    std::string ans;\n    for(int i=0;i<s.size();i++){\n\
    \        if(s[i]==' '){\n            ans+=\" \"+s[i];\n        }\n        else{\n\
    \            ans+=\" \"+s[i];\n        }\n    }\n    return ans;", "    // Your\
    \ code here\n    \n    return s;", "    std::string ans = \"\";\n    std::string\
    \ temp = \"\";\n    for(int i = 0; i < s.length(); i++) {\n        if(!isalpha(s[i]))\
    \ {\n            ans += s[i];\n            continue;\n        }\n        temp\
    \ = s[i];\n        for(int j = i; j < s.length(); j++) {\n            if(isalpha(s[j]))\
    \ {\n                ans += temp;\n                ans += s[j];\n            \
    \    temp = s[j];\n            }\n        }\n        ans += temp;\n    }\n   \
    \ return ans;", "    std::string new_s = \"\";\n    std::string word = \"\";\n\
    \    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n      \
    \      new_s += word;\n            word = \"\";\n        } else {\n          \
    \  word += s[i];\n        }\n    }\n    new_s += word;\n    return new_s;", " \
    \   std::string ans = \"\";\n    std::string temp = \"\";\n    std::string word\
    \ = \"\";\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ')\
    \ {\n            ans += temp;\n            temp = \"\";\n        } else {\n  \
    \          temp += s[i];\n        }\n    }\n    ans += temp;\n    return ans;",
  "    std::string ans = \"\";\n    std::string word = \"\";\n    std::string temp\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == ' ')\
    \ {\n            ans += temp;\n            temp = \"\";\n        } else {\n  \
    \          temp += s[i];\n        }\n    }\n    ans += temp;\n    return ans;",
  "    std::string new_s = \"\";\n    std::string word;\n    std::string new_word;\n\
    \    for (auto &c : s) {\n        if (c != ' ') {\n            word = new_s +\
    \ c;\n            new_s += word;\n        } else {\n            new_word += new_s;\n\
    \            new_s = \"\";\n            new_word += c;\n        }\n    }\n   \
    \ new_word += new_s;\n    return new_word;", "    std::string ans = s;\n    std::sort(ans.begin(),\
    \ ans.end(), [](char a, char b){\n        return a < b;\n    });\n    return ans;",
  "    std::string new_s = \"\";\n    std::string word = \"\";\n    std::string new_word\
    \ = \"\";\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ')\
    \ {\n            new_s += word;\n            word = \"\";\n        } else {\n\
    \            word += s[i];\n        }\n    }\n    new_s += word;\n    return new_s;",
  "    std::string ans = \"\";\n    std::string word = \"\";\n    std::string temp\
    \ = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ')\
    \ {\n            ans += word;\n            word = \"\";\n        } else {\n  \
    \          word += s[i];\n        }\n    }\n    ans += word;\n    return ans;",
  "    // Write your code here\n    std::string ans = \"\";\n    for(int i=0;i<s.size();i++){\n\
    \        if(s[i]==' '){\n            ans += \" \";\n        }\n        else if(s[i]>='a'\
    \ && s[i]<='z'){\n            ans += s[i];\n        }\n        else if(s[i]>='A'\
    \ && s[i]<='Z'){\n            ans += s[i];\n        }\n        else{\n       \
    \     ans += \" \";\n        }\n    }\n    return ans;", "    std::string ans;\n\
    \    std::string temp;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int\
    \ l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n   \
    \ int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n\
    \    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n\
    \    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n\
    \    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n\
    \    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n\
    \    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n\
    \    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n\
    \    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n\
    \    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n\
    \    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n\
    \    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n\
    \    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n\
    \    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n\
    \    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n\
    \    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n\
    \    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n\
    \    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n\
    \    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n\
    \    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n\
    \    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n\
    \    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n\
    \    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n\
    \    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n\
    \    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n\
    \    int g = 0;\n    int ", "    std::string ans = \"\";\n    std::string temp\
    \ = \"\";\n    std::string temp2 = \"\";\n    for (int i = 0; i < s.length();\
    \ i++) {\n        if (s[i] == ' ') {\n            ans += temp;\n            temp\
    \ = \"\";\n        } else {\n            temp += s[i];\n        }\n    }\n   \
    \ ans += temp;\n    return ans;", "    std::string ans = \"\";\n    int i = 0;\n\
    \    int j = 0;\n    int k = 0;\n    int n = s.size();\n    while (i < n) {\n\
    \        while (j < n) {\n            if (s[j] == ' ') {\n                ans\
    \ += s[k];\n                j++;\n                k++;\n            }\n      \
    \      else {\n                ans += s[j];\n                j++;\n          \
    \  }\n        }\n        while (j < n) {\n            if (s[j] == ' ') {\n   \
    \             ans += s[k];\n                j++;\n                k++;\n     \
    \       }\n            else {\n                ans += s[j];\n                j++;\n\
    \            }\n        }\n        i++;\n    }\n    return ans;", "    std::string\
    \ ans = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < s.size();\
    \ i++) {\n        if (s[i] == ' ') {\n            ans += word;\n            word\
    \ = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n   \
    \ ans += word;\n    return ans;", "    std::string ans = \"\";\n    std::string\
    \ temp = \"\";\n    std::string temp2 = \"\";\n    for (int i = 0; i < s.size();\
    \ i++) {\n        if (s[i] == ' ') {\n            ans += temp;\n            temp\
    \ = \"\";\n        } else {\n            temp += s[i];\n        }\n    }\n   \
    \ ans += temp;\n    return ans;", "    // Write your code here\n    std::string\
    \ ans = \"\";\n    for(int i=0;i<s.size();i++){\n        if(s[i]==' '){\n    \
    \        for(int j=i+1;j<s.size();j++){\n                if(s[j] == ' '){\n  \
    \                  ans += s[j];\n                    i++;\n                }\n\
    \                else{\n                    ans += s[j];\n                   \
    \ break;\n                }\n            }\n        }\n        else{\n       \
    \     ans += s[i];\n        }\n    }\n    return ans;", "    std::string new_s;\n\
    \    std::string word;\n    std::string new_word;\n    for (auto &c: s) {\n  \
    \      if (c == ' ') {\n            new_word += c;\n        } else {\n       \
    \     word = new_word;\n            new_word += c;\n            new_s += new_word;\n\
    \            new_word = word;\n        }\n    }\n    return new_s;", "    // Write\
    \ your code here\n    std::string ans = \"\";\n    for(int i=0;i<s.size();i++){\n\
    \        if(s[i]==' '){\n            ans += \" \";\n        }\n        else{\n\
    \            ans += s[i];\n        }\n    }\n    return ans;", "    std::string\
    \ new_s = \"\";\n    std::string temp;\n    std::string temp2;\n    std::string\
    \ temp3;\n    std::string temp4;\n    std::string temp5;\n    std::string temp6;\n\
    \    std::string temp7;\n    std::string temp8;\n    std::string temp9;\n    std::string\
    \ temp10;\n    std::string temp11;\n    std::string temp12;\n    std::string temp13;\n\
    \    std::string temp14;\n    std::string temp15;\n    std::string temp16;\n \
    \   std::string temp17;\n    std::string temp18;\n    std::string temp19;\n  \
    \  std::string temp20;\n    std::string temp21;\n    std::string temp22;\n   \
    \ std::string temp23;\n    std::string temp24;\n    std::string temp25;\n    std::string\
    \ temp26;\n    std::string temp27;\n    std::string temp28;\n    std::string temp29;\n\
    \    std::string temp30;\n    std::string temp31;\n    std::string temp32;\n \
    \   std::string temp33;\n    std::string temp34;\n    std::string temp35;\n  \
    \  std::string temp36;\n    std::string temp37;\n    std::string temp38;\n   \
    \ std::string temp39;\n    std::string temp40;\n    std::string temp41;\n    std::string\
    \ temp42;\n    std::string temp43;\n    std::string temp44;\n    std::string temp45;\n\
    \    std::string temp46;\n    std::string temp47;\n    std::string temp48;\n \
    \   std::string temp49;\n    std::string temp50;\n    std::string temp51;\n  \
    \  std::string temp52;\n    std::string temp53;\n    std::string temp54;\n   \
    \ std::string temp55;\n    std::string temp56;\n    std::string temp57;\n    std::string\
    \ temp58;\n    std::string temp59;\n    std::string temp60;\n    std::string temp61;\n\
    \    std::string temp62;\n    std::string temp63;\n    std::string temp64;\n \
    \   std::string temp65;\n    std::string temp66;\n    std::string temp67;\n  \
    \  std::string temp68;\n    std::string temp69;\n    std::string temp70;\n   \
    \ std::string temp71;\n    std::string temp72;\n    std::string temp73;\n    std::string\
    \ temp74;\n    std::string temp75;\n    std::string temp76;\n    std::string temp77;\n\
    \    std::string temp78;\n    std::string temp79;\n    std::string temp80;\n \
    \   std::string temp81;\n    std::string temp82;\n    std::string temp83;\n  \
    \  std::string temp84;\n    std::string temp85;\n    std::string temp86;\n   \
    \ std::string temp87;\n    std::string temp88", "    std::string ans = \"\";\n\
    \    std::string word = \"\";\n    std::string temp = \"\";\n    for(int i = 0;\
    \ i < s.size(); i++) {\n        if(s[i] == ' ') {\n            ans += word;\n\
    \            word = \"\";\n        } else {\n            word += s[i];\n     \
    \   }\n    }\n    ans += word;\n    return ans;", "    std::string ans = \"\"\
    ;\n    std::string word = \"\";\n    std::string temp = \"\";\n    for(int i =\
    \ 0; i < s.size(); i++) {\n        if(s[i] == ' ') {\n            ans += word;\n\
    \            word = \"\";\n        } else {\n            word += s[i];\n     \
    \   }\n    }\n    ans += word;\n    return ans;", "    // Write your code here\n\
    \    std::string ans = \"\";\n    for(int i=0;i<s.size();i++){\n        if(s[i]=='\
    \ '){\n            ans += \" \";\n        }\n        else{\n            ans +=\
    \ s[i];\n        }\n    }\n    return ans;", "    std::string ans = \"\";\n  \
    \  std::string word = \"\";\n    for (int i = 0; i < s.size(); i++) {\n      \
    \  if (i == 0 || i == s.size() - 1) {\n            ans += s[i];\n        } else\
    \ {\n            ans += s[i];\n            ans += \" \";\n        }\n    }\n \
    \   return ans;", "    std::string new_s = \"\";\n    std::string word;\n    std::string\
    \ new_word;\n    for (int i = 0; i < s.size(); i++) {\n        word = s.substr(i,\
    \ 1);\n        if (word == \" \") {\n            new_s += new_word;\n        \
    \    new_word = \"\";\n        } else {\n            new_word += word;\n     \
    \   }\n    }\n    new_s += new_word;\n    return new_s;", "    std::string ans\
    \ = \"\";\n    std::string temp = \"\";\n    for (auto &c : s) {\n        if (c\
    \ != ' ') {\n            temp = temp + c;\n        } else {\n            ans =\
    \ ans + temp;\n            temp = \"\";\n        }\n    }\n    ans = ans + temp;\n\
    \    return ans;", "    std::string ans = \"\";\n    std::string temp = \"\";\n\
    \    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == ' ') {\n      \
    \      ans += temp;\n            temp = \"\";\n        } else {\n            temp\
    \ += s[i];\n        }\n    }\n    ans += temp;\n    return ans;", "    std::string\
    \ new_s = \"\";\n    std::string word = \"\";\n    std::string new_word = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == ' ') {\n    \
    \        word += s[i];\n        } else {\n            new_word += word;\n    \
    \        word = \"\";\n            new_word += s[i];\n        }\n    }\n    new_word\
    \ += word;\n    new_s += new_word;\n    return new_s;", "    // Write your code\
    \ here\n    std::string ans = \"\";\n    for(int i = 0; i < s.size(); i++) {\n\
    \        if(!isalpha(s[i]) && !isspace(s[i])) {\n            ans += s[i];\n  \
    \      }\n    }\n    return ans;", "    std::string new_s = \"\";\n    std::string\
    \ word = \"\";\n    std::string new_word = \"\";\n    std::string blank = \"\"\
    ;\n    for (auto c : s) {\n        if (c == ' ') {\n            new_word += blank;\n\
    \            blank = \"\";\n        } else {\n            blank += c;\n      \
    \  }\n    }\n    for (auto c : s) {\n        if (c == ' ') {\n            new_word\
    \ += blank;\n            blank = \"\";\n        } else {\n            blank +=\
    \ c;\n        }\n    }\n    for (auto c : s) {\n        if (c == ' ') {\n    \
    \        new_word += blank;\n            blank = \"\";\n        } else {\n   \
    \         blank += c;\n        }\n    }\n    for (auto c : s) {\n        if (c\
    \ == ' ') {\n            new_word += blank;\n            blank = \"\";\n     \
    \   } else {\n            blank += c;\n        }\n    }\n    for (auto c : s)\
    \ {\n        if (c == ' ') {\n            new_word += blank;\n            blank\
    \ = \"\";\n        } else {\n            blank += c;\n        }\n    }\n    for\
    \ (auto c : s) {\n        if (c == ' ') {\n            new_word += blank;\n  \
    \          blank = \"\";\n        } else {\n            blank += c;\n        }\n\
    \    }\n    for (auto c : s) {\n        if (c == ' ') {\n            new_word\
    \ += blank;\n            blank = \"\";\n        } else {\n            blank +=\
    \ c;\n        }\n    }\n    for (auto c : s) {\n        if (c == ' ') {\n    \
    \        new_word += blank;\n            blank = \"\";\n        } else {\n   \
    \         blank += c;\n        }\n    }\n    for (auto c : s) {\n        if (c\
    \ == ' ') {\n            new_word += blank;\n            blank = \"\";\n     \
    \   } else {\n            blank += c;\n        }\n    }\n    for (auto c : s)\
    \ {\n        if (c == ' ') {\n            new_word += blank;\n            blank\
    \ = \"\";\n        } else {\n            blank += c;\n        }\n    }\n    for\
    \ (auto c : s) {\n        if (c == ' ') {\n            new_word += blank;\n  \
    \          blank = \"\";\n        } else {\n            blank += c;\n        }\n\
    \    }\n    for (auto c : s) {\n        if (c == ' ') {\n            new_word\
    \ += blank;\n            blank = \"\";\n        } else {\n            blank +=\
    \ c;\n        }\n    }\n    for (auto c : s) {\n        if (c == ' ') {\n    \
    \        new_word += blank;\n            blank = \"\";\n        } else {\n   \
    \         blank += c;\n        }\n    }\n    for (auto c : s) {\n        if (c\
    \ == ' ') {\n            new_word += blank;\n            blank = \"\";\n     \
    \   } else {\n            blank += c;\n        }\n    }\n    for (auto c : s)\
    \ {\n        if (c == ' ') {\n            new_word += blank;\n            blank\
    \ = \"\";\n        } else {\n            blank += c;", "    std::string new_s\
    \ = \"\";\n    std::string temp = \"\";\n    std::string temp_s = \"\";\n    for\
    \ (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n           \
    \ temp_s = temp + s[i];\n            temp = temp_s + \" \";\n        } else {\n\
    \            temp_s = temp + s[i];\n            temp += temp_s + \" \";\n    \
    \    }\n    }\n    new_s = temp;\n    return new_s;", "    std::string new_s =\
    \ \"\";\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int\
    \ m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n   \
    \ int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n\
    \    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int A = 0;\n\
    \    int B = 0;\n    int C = 0;\n    int D = 0;\n    int E = 0;\n    int F = 0;\n\
    \    int G = 0;\n    int H = 0;\n    int I = 0;\n    int J = 0;\n    int K = 0;\n\
    \    int L = 0;\n    int M = 0;\n    int N = 0;\n    int O = 0;\n    int P = 0;\n\
    \    int Q = 0;\n    int R = 0;\n    int S = 0;\n    int T = 0;\n    int U = 0;\n\
    \    int V = 0;\n    int W = 0;\n    int X = 0;\n    int Y = 0;\n    int Z = 0;\n\
    \    int space = 0;\n    int comma = 0;\n    int period = 0;\n    int exclamation\
    \ = 0;\n    int question = 0;\n    int slash = 0;\n    int colon = 0;\n    int\
    \ semicolon = 0;\n    int equal = 0;\n    int dash = 0;\n    int underscore =\
    \ 0;\n    int open_bracket = 0;\n    int close_bracket = 0;\n    int open_square\
    \ = 0;\n    int close_square = 0;\n    int open_curly = 0;\n    int close_curly\
    \ = 0;\n    int open_bang = 0;\n    int close_bang = 0;\n    int open_parenthesis\
    \ = 0;\n    int close_parenthesis = 0;\n    int open_angle = 0;\n    int close_angle\
    \ = 0;\n    int open_curly_bracket = 0;\n    int close_curly_bracket = 0;\n  \
    \  int open_angle_bracket = 0;\n    int close_angle_bracket = 0;\n    int open_curly_brace\
    \ = 0;\n    int close_curly_brace = 0;\n    int open_angle_brace = 0;\n    int\
    \ close_angle_brace = 0;\n    int open_angle_bracket = 0;\n    int close_angle_bracket\
    \ = 0;\n    int open_curly_brace = 0;\n    int close_curly_brace = 0;\n    int\
    \ open_angle_brace = 0;\n    int close_angle_brace = 0;\n    int open_angle_bracket\
    \ = 0;\n    int close_angle_bracket = 0;\n    int open_curly_bracket = 0;\n  \
    \  int close_curly_bracket = 0;\n    int open_angle_bracket = 0;\n    int close_angle_bracket\
    \ = 0;\n    int open_curly_brace = 0;\n    int close_curly_brace = 0;\n    int\
    \ open_angle_brace = 0;\n    int close_angle_brace = 0;\n    int open_angle_bracket\
    \ = 0;\n    int close_angle_bracket = 0;\n    int open_curly_bracket = 0;\n  \
    \  int close_curly_bracket = 0;\n    int open_angle_bracket = 0;\n", "    std::string\
    \ ans = \"\";\n    std::string temp = \"\";\n    int i = 0;\n    int j = 0;\n\
    \    while (i < s.size()) {\n        if (s[i] == ' ') {\n            ans += temp;\n\
    \            temp = \"\";\n            i++;\n        } else {\n            temp\
    \ += s[i];\n        }\n        i++;\n    }\n    ans += temp;\n    return ans;",
  "    std::string ans = \"\";\n    std::string temp = \"\";\n    int i = 0;\n   \
    \ int j = 0;\n    int k = 0;\n    while (i < s.size()) {\n        if (s[i] ==\
    \ ' ') {\n            ans += temp;\n            temp = \"\";\n            i++;\n\
    \        } else {\n            temp += s[i];\n        }\n    }\n    ans += temp;\n\
    \    return ans;", "    std::string ans = \"\";\n    std::string temp = \"\";\n\
    \    for (auto &c : s) {\n        if (c != ' ') {\n            temp = temp + c;\n\
    \        } else {\n            ans = ans + temp;\n            temp = \"\";\n \
    \       }\n    }\n    ans = ans + temp;\n    return ans;", "    std::string ans\
    \ = \"\";\n    std::string temp = \"\";\n    std::string word = \"\";\n    for\
    \ (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            ans\
    \ += temp;\n            temp = \"\";\n        } else {\n            temp += s[i];\n\
    \        }\n    }\n    ans += temp;\n    return ans;", "    std::string ans =\
    \ \"\";\n    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++)\
    \ {\n        if (s[i] == ' ') {\n            ans += word;\n            word =\
    \ \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    ans\
    \ += word;\n    return ans;", "    std::string ans = \"\";\n    std::string temp\
    \ = \"\";\n    std::string temp2 = \"\";\n    std::string temp3 = \"\";\n    std::string\
    \ temp4 = \"\";\n    std::string temp5 = \"\";\n    std::string temp6 = \"\";\n\
    \    std::string temp7 = \"\";\n    std::string temp8 = \"\";\n    std::string\
    \ temp9 = \"\";\n    std::string temp10 = \"\";\n    std::string temp11 = \"\"\
    ;\n    std::string temp12 = \"\";\n    std::string temp13 = \"\";\n    std::string\
    \ temp14 = \"\";\n    std::string temp15 = \"\";\n    std::string temp16 = \"\"\
    ;\n    std::string temp17 = \"\";\n    std::string temp18 = \"\";\n    std::string\
    \ temp19 = \"\";\n    std::string temp20 = \"\";\n    std::string temp21 = \"\"\
    ;\n    std::string temp22 = \"\";\n    std::string temp23 = \"\";\n    std::string\
    \ temp24 = \"\";\n    std::string temp25 = \"\";\n    std::string temp26 = \"\"\
    ;\n    std::string temp27 = \"\";\n    std::string temp28 = \"\";\n    std::string\
    \ temp29 = \"\";\n    std::string temp30 = \"\";\n    std::string temp31 = \"\"\
    ;\n    std::string temp32 = \"\";\n    std::string temp33 = \"\";\n    std::string\
    \ temp34 = \"\";\n    std::string temp35 = \"\";\n    std::string temp36 = \"\"\
    ;\n    std::string temp37 = \"\";\n    std::string temp38 = \"\";\n    std::string\
    \ temp39 = \"\";\n    std::string temp40 = \"\";\n    std::string temp41 = \"\"\
    ;\n    std::string temp42 = \"\";\n    std::string temp43 = \"\";\n    std::string\
    \ temp44 = \"\";\n    std::string temp45 = \"\";\n    std::string temp46 = \"\"\
    ;\n    std::string temp47 = \"\";\n    std::string temp48 = \"\";\n    std::string\
    \ temp49 = \"\";\n    std::string temp50 = \"\";\n    std::string temp51 = \"\"\
    ;\n    std::string temp52 = \"\";\n    std::string temp53 = \"\";\n    std::string\
    \ temp54 = \"\";\n    std::string temp55 = \"\";\n    std::string temp56 = \"\"\
    ;\n    std::string temp57 = \"\";\n    std::string temp58 = \"\";\n    std::string\
    \ temp59 = \"\";\n    std::string temp60 = \"\";\n    std::string temp61 = \"\"\
    ;\n    std::string temp62 = \"\";\n    std::string temp63 = \"\";\n    std::string\
    \ temp64 = \"\";\n    std::string temp65 = \"\";\n    std::string temp66 = \"\"\
    ;\n    std::string temp67 = \"\";\n    std::string temp68 = \"\";\n    std::string\
    \ temp69 = \"\";\n    std::string temp70 = \"\";\n    std::string temp71 = \"\"\
    ;\n    std::string temp72 = \"\";\n    std::string temp73 = \"\";\n    std::string\
    \ temp74 = \"\";\n    std::string temp75 = \"\";\n    std::string temp76 = \"\"\
    ;\n    std::string temp77 = \"\";\n    std::string temp78 = \"\";\n    std::string\
    \ temp79 = \"\";\n    std::string temp80 = \"\";\n    std::string temp81 = \"\"\
    ;\n    std::string temp", "    // Write your code here\n    std::string ans;\n\
    \    for(int i=0;i<s.size();i++){\n        if(s[i]==' '){\n            ans.push_back('\
    \ ');\n        }\n        else{\n            ans.push_back(s[i]);\n        }\n\
    \    }\n    for(int i=0;i<s.size();i++){\n        if(s[i]==' '){\n           \
    \ ans.push_back(' ');\n        }\n        else{\n            for(int j=i+1;j<s.size();j++){\n\
    \                if(s[j]>s[i]){\n                    char temp=s[i];\n       \
    \             s[i]=s[j];\n                    s[j]=temp;\n                }\n\
    \            }\n        }\n    }\n    return ans;", "    std::string ans = \"\"\
    ;\n    std::string word = \"\";\n    std::string temp = \"\";\n    for (int i\
    \ = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            ans += temp;\n\
    \            temp = \"\";\n        } else {\n            temp += s[i];\n     \
    \   }\n    }\n    ans += temp;\n    return ans;", "    std::string ans = \"\"\
    ;\n    std::string temp = \"\";\n    std::string word = \"\";\n    for (int i\
    \ = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            ans += temp;\n\
    \            temp = \"\";\n        } else {\n            temp += s[i];\n     \
    \   }\n    }\n    ans += temp;\n    return ans;", "    std::string ans;\n    std::string\
    \ temp;\n    std::string word;\n    std::string temp2;\n    int i = 0;\n    int\
    \ j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n   \
    \ int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n\
    \    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n\
    \    int y = 0;\n    int z = 0;\n    int A = 0;\n    int B = 0;\n    int C = 0;\n\
    \    int D = 0;\n    int E = 0;\n    int F = 0;\n    int G = 0;\n    int H = 0;\n\
    \    int I = 0;\n    int J = 0;\n    int K = 0;\n    int L = 0;\n    int M = 0;\n\
    \    int N = 0;\n    int O = 0;\n    int P = 0;\n    int Q = 0;\n    int R = 0;\n\
    \    int S = 0;\n    int T = 0;\n    int U = 0;\n    int V = 0;\n    int W = 0;\n\
    \    int X = 0;\n    int Y = 0;\n    int Z = 0;\n    int a = 0;\n    int b = 0;\n\
    \    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n\
    \    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n\
    \    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n\
    \    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n\
    \    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int A = 0;\n\
    \    int B = 0;\n    int C = 0;\n    int D = 0;\n    int E = 0;\n    int F = 0;\n\
    \    int G = 0;\n    int H = 0;\n    int I = 0;\n    int J = 0;\n    int K = 0;\n\
    \    int L = 0;\n    int M = 0;\n    int N = 0;\n    int O = 0;\n    int P = 0;\n\
    \    int Q = 0;\n    int R = 0;\n    int S = 0;\n    int T = 0;\n    int U = 0;\n\
    \    int V = 0;\n    int W = 0;\n    int X = 0;\n    int Y = 0;\n    int Z = 0;\n\
    \    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n\
    \    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n\
    \    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n\
    \    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n\
    \    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n\
    \    int z = 0;\n    int A = 0;\n    int B = 0;\n    int C = 0;\n    int ", " \
    \   std::string ans = \"\";\n    std::string word = \"\";\n    std::string temp\
    \ = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ')\
    \ {\n            ans += temp;\n            temp = \"\";\n        } else {\n  \
    \          temp += s[i];\n        }\n    }\n    ans += temp;\n    return ans;",
  "    std::string ans = s;\n    std::sort(ans.begin(), ans.end(), [](char a, char\
    \ b){return std::tolower(a) < std::tolower(b);});\n    return ans;", "    std::string\
    \ ans = \"\";\n    std::string word = \"\";\n    std::string temp = \"\";\n  \
    \  for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n      \
    \      ans += temp;\n            temp = \"\";\n        } else {\n            temp\
    \ += s[i];\n        }\n    }\n    ans += temp;\n    return ans;", "    std::string\
    \ new_s = \"\";\n    std::string word = \"\";\n    std::string new_word = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == ' ') {\n    \
    \        word = word + s[i];\n        } else {\n            word = word + s[i];\n\
    \            new_s = new_s + new_word + word;\n            word = \"\";\n    \
    \        new_word = \"\";\n        }\n    }\n    new_s = new_s + new_word + word;\n\
    \    return new_s;", "    std::string ans;\n    std::string temp;\n    int i =\
    \ 0;\n    int j = 0;\n    int k = 0;\n    int n = s.size();\n    while(i < n)\
    \ {\n        while(j < n) {\n            if(s[j] == ' ') {\n                temp\
    \ = s[j];\n                s[j] = s[k];\n                s[k] = temp;\n      \
    \          j++;\n                k++;\n            }\n            j++;\n     \
    \   }\n        i++;\n    }\n    return ans;", "    // Write your code here\n \
    \   std::string ans = \"\";\n    for(int i = 0; i < s.size(); i++) {\n       \
    \ if(!isspace(s[i])) {\n            ans += s[i];\n        }\n    }\n    return\
    \ ans;", "    std::string new_s;\n    std::string word;\n    for (auto &c: s)\
    \ {\n        if (c == ' ') {\n            word = new_s;\n            new_s.clear();\n\
    \        } else {\n            new_s += c;\n        }\n    }\n    word = new_s;\n\
    \    new_s.clear();\n    for (auto &c: word) {\n        if (c == ' ') {\n    \
    \        new_s += ' ';\n        } else {\n            new_s += c;\n        }\n\
    \    }\n    return new_s;", "    std::string new_s = \"\";\n    std::string word;\n\
    \    for (auto &c : s) {\n        if (c == ' ') {\n            word = new_s;\n\
    \            new_s = \"\";\n        } else {\n            new_s += c;\n      \
    \  }\n    }\n    word = new_s;\n    for (auto &c : word) {\n        std::swap(word[word.size()\
    \ - 1], word[word.size() - 2]);\n    }\n    return word;", "    std::string ans\
    \ = \"\";\n    std::string temp = \"\";\n    for (auto &c : s) {\n        if (c\
    \ != ' ') {\n            temp = temp + c;\n        } else {\n            ans =\
    \ ans + temp;\n            temp = \"\";\n        }\n    }\n    ans = ans + temp;\n\
    \    return ans;", "    std::string new_s = \"\";\n    std::string word = \"\"\
    ;\n    for (auto c : s) {\n        if (c != ' ') {\n            word += c;\n \
    \       } else {\n            new_s += word;\n            word = \"\";\n     \
    \   }\n    }\n    new_s += word;\n    return new_s;", "    std::string new_s =\
    \ \"\";\n    std::string word = \"\";\n    std::string new_word = \"\";\n    for\
    \ (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n           \
    \ new_s += word;\n            word = \"\";\n        } else {\n            word\
    \ += s[i];\n        }\n    }\n    new_s += word;\n    return new_s;", "    std::string\
    \ ans;\n    std::string temp;\n    for(int i=0;i<s.size();i++){\n        if(s[i]=='\
    \ '){\n            temp.push_back(' ');\n        }\n        else{\n          \
    \  temp.push_back(s[i]);\n        }\n    }\n    for(int i=0;i<s.size();i++){\n\
    \        if(s[i]==' '){\n            temp.push_back(' ');\n        }\n       \
    \ else{\n            temp.push_back(s[i]);\n        }\n    }\n    for(int i=0;i<s.size();i++){\n\
    \        if(s[i]==' '){\n            temp.push_back(' ');\n        }\n       \
    \ else{\n            temp.push_back(s[i]);\n        }\n    }\n    for(int i=0;i<s.size();i++){\n\
    \        if(s[i]==' '){\n            temp.push_back(' ');\n        }\n       \
    \ else{\n            temp.push_back(s[i]);\n        }\n    }\n    for(int i=0;i<s.size();i++){\n\
    \        if(s[i]==' '){\n            temp.push_back(' ');\n        }\n       \
    \ else{\n            temp.push_back(s[i]);\n        }\n    }\n    for(int i=0;i<s.size();i++){\n\
    \        if(s[i]==' '){\n            temp.push_back(' ');\n        }\n       \
    \ else{\n            temp.push_back(s[i]);\n        }\n    }\n    for(int i=0;i<s.size();i++){\n\
    \        if(s[i]==' '){\n            temp.push_back(' ');\n        }\n       \
    \ else{\n            temp.push_back(s[i]);\n        }\n    }\n    for(int i=0;i<s.size();i++){\n\
    \        if(s[i]==' '){\n            temp.push_back(' ');\n        }\n       \
    \ else{\n            temp.push_back(s[i]);\n        }\n    }\n    for(int i=0;i<s.size();i++){\n\
    \        if(s[i]==' '){\n            temp.push_back(' ');\n        }\n       \
    \ else{\n            temp.push_back(s[i]);\n        }\n    }\n    for(int i=0;i<s.size();i++){\n\
    \        if(s[i]==' '){\n            temp.push_back(' ');\n        }\n       \
    \ else{\n            temp.push_back(s[i]);\n        }\n    }\n    for(int i=0;i<s.size();i++){\n\
    \        if(s[i]==' '){\n            temp.push_back(' ');\n        }\n       \
    \ else{\n            temp.push_back(s[i]);\n        }\n    }\n    for(int i=0;i<s.size();i++){\n\
    \        if(s[i]==' '){\n            temp.push_back(' ');\n        }\n       \
    \ else{\n            temp.push_back(s[i]);\n        }\n    }\n    for(int i=0;i<s.size();i++){\n\
    \        if(s[i]==' '){\n            temp.push_back(' ');\n        }\n       \
    \ else{\n            temp.push_back(s[i]);\n        }\n    }\n    for(int i=0;i<s.size();i++){\n\
    \        if(s[i]==' '){\n            temp.push_back(' '", "    std::string new_s\
    \ = \"\";\n    std::string word = \"\";\n    for (auto c : s) {\n        if (c\
    \ != ' ') {\n            word += c;\n        } else {\n            new_s += word;\n\
    \            word = \"\";\n        }\n    }\n    new_s += word;\n    return new_s;",
  "    std::string new_s = \"\";\n    std::string word = \"\";\n    std::string new_word\
    \ = \"\";\n    for (auto c : s) {\n        if (c != ' ') {\n            word +=\
    \ c;\n        } else {\n            new_word += word;\n            word = \"\"\
    ;\n        }\n    }\n    new_s += new_word;\n    return new_s;", "    std::string\
    \ ans;\n    for(int i=0;i<s.size();i++){\n        if(s[i]==' '){\n           \
    \ ans+=\" \"; \n        }\n        else if(s[i]>='a' && s[i]<='z'){\n        \
    \    ans+=(s[i]-'a'+26);\n        }\n        else if(s[i]>='A' && s[i]<='Z'){\n\
    \            ans+=(s[i]-'A'+26);\n        }\n        else{\n            ans+=(s[i]-'0');\n\
    \        }\n    }\n    return ans;", "    std::string new_s = \"\";\n    std::string\
    \ temp = \"\";\n    for (auto &c : s) {\n        if (c != ' ') {\n           \
    \ temp += c;\n        } else {\n            new_s += temp;\n            temp =\
    \ \"\";\n        }\n    }\n    new_s += temp;\n    return new_s;", "    std::string\
    \ ans = \"\";\n    std::string word = \"\";\n    for (auto c : s) {\n        if\
    \ (c != ' ') {\n            word += c;\n        } else {\n            ans += word;\n\
    \            word = \"\";\n        }\n    }\n    ans += word;\n    return ans;",
  "    // Write your code here\n    std::string new_s;\n    for(int i=0;i<s.size();i++){\n\
    \        if(s[i]==' '){\n            for(int j=i;j<s.size();j++){\n          \
    \      new_s.push_back(s[j]);\n            }\n            new_s.push_back(' ');\n\
    \            i=j;\n        }\n        else{\n            new_s.push_back(s[i]);\n\
    \        }\n    }\n    return new_s;", "    std::string ans = s;\n    std::sort(ans.begin(),\
    \ ans.end());\n    return ans;", "    // Write your code here\n    std::string\
    \ ans = \"\";\n    for(int i=0;i<s.size();i++){\n        if(s[i]==' '){\n    \
    \        for(int j=i;j<s.size();j++){\n                if(s[j]!=' '){\n      \
    \              ans += s[j];\n                }\n            }\n            ans\
    \ += ' ';\n        }\n        else{\n            ans += s[i];\n        }\n   \
    \ }\n    return ans;", "    // Write your code here\n    std::string ans = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == ' ') {\n    \
    \        ans += \" \";\n        } else {\n            ans += s[i];\n        }\n\
    \    }\n    return ans;", "    std::string new_s = \"\";\n    std::string word\
    \ = \"\";\n    std::string new_word = \"\";\n    for (int i = 0; i < s.length();\
    \ i++) {\n        if (s[i] == ' ') {\n            new_s += word;\n           \
    \ word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n\
    \    new_s += word;\n    return new_s;", '    // Your code here', "    std::string\
    \ new_s = \"\";\n    std::string temp = \"\";\n    for (int i = 0; i < s.size();\
    \ i++) {\n        if (s[i] == ' ') {\n            new_s += temp;\n           \
    \ temp = \"\";\n        } else {\n            temp += s[i];\n        }\n    }\n\
    \    new_s += temp;\n    return new_s;", "    std::string new_s = \"\";\n    std::string\
    \ temp = \"\";\n    std::string temp_s = \"\";\n    int i = 0;\n    int j = 0;\n\
    \    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n\
    \    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n\
    \    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n\
    \    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n\
    \    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n\
    \    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n\
    \    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n\
    \    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n\
    \    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n\
    \    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n\
    \    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n\
    \    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n\
    \    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n\
    \    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n\
    \    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n\
    \    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n\
    \    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n\
    \    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n\
    \    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n\
    \    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n\
    \    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n\
    \    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n\
    \    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n\
    \    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n\
    \    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n\
    \    int f", "    std::string ans = \"\";\n    std::string temp = \"\";\n    for\
    \ (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            ans\
    \ += temp;\n            temp = \"\";\n        } else {\n            temp += s[i];\n\
    \        }\n    }\n    ans += temp;\n    return ans;", "    std::string ans =\
    \ \"\";\n    std::string temp = \"\";\n    int i = 0;\n    while (i < s.size())\
    \ {\n        if (s[i] == ' ') {\n            temp = temp + s[i];\n           \
    \ i++;\n        } else {\n            temp = temp + s[i];\n            ans = ans\
    \ + temp;\n            temp = \"\";\n            i++;\n        }\n    }\n    ans\
    \ = ans + temp;\n    return ans;", "    std::string ans = \"\";\n    std::string\
    \ word = \"\";\n    for (auto c : s) {\n        if (c != ' ') {\n            word\
    \ += c;\n        } else {\n            ans += word;\n            word = \"\";\n\
    \        }\n    }\n    ans += word;\n    return ans;", "    std::string ans =\
    \ \"\";\n    std::string word = \"\";\n    for (auto c : s) {\n        if (c ==\
    \ ' ') {\n            ans += word;\n            word = \"\";\n        } else {\n\
    \            word += c;\n        }\n    }\n    ans += word;\n    return ans;",
  "    std::string ans = \"\";\n    std::string temp = \"\";\n    for(int i = 0; i\
    \ < s.size(); i++) {\n        if(s[i] == ' ') {\n            ans += temp;\n  \
    \          temp = \"\";\n        } else {\n            temp += s[i];\n       \
    \ }\n    }\n    ans += temp;\n    return ans;", "    std::string ans = \"\";\n\
    \    std::string word;\n    std::string new_word;\n    int i = 0;\n    int j =\
    \ 0;\n    int k = 0;\n    int n = s.size();\n    while (i < n) {\n        word\
    \ = s.substr(i, i + 1);\n        j = i;\n        while (j < n) {\n           \
    \ if (s[j] == ' ') {\n                j++;\n            } else {\n           \
    \     break;\n            }\n        }\n        k = i;\n        while (k >= j)\
    \ {\n            new_word = new_word + s.substr(k, j);\n            k--;\n   \
    \     }\n        new_word = new_word + word;\n        i = j + 1;\n        ans\
    \ = ans + new_word;\n    }\n    return ans;", "    std::string ans;\n    for(int\
    \ i=0;i<s.size();i++){\n        for(int j=i+1;j<s.size();j++){\n            if(s[i]==s[j]){\n\
    \                ans.insert(ans.begin()+i,s[j]);\n                ans.erase(ans.begin()+j);\n\
    \            }\n        }\n    }\n    return ans;", "    std::string ans;\n  \
    \  std::string temp;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int\
    \ l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n   \
    \ int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n\
    \    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n\
    \    int A = 0;\n    int B = 0;\n    int C = 0;\n    int D = 0;\n    int E = 0;\n\
    \    int F = 0;\n    int G = 0;\n    int H = 0;\n    int I = 0;\n    int J = 0;\n\
    \    int K = 0;\n    int L = 0;\n    int M = 0;\n    int N = 0;\n    int O = 0;\n\
    \    int P = 0;\n    int Q = 0;\n    int R = 0;\n    int S = 0;\n    int T = 0;\n\
    \    int U = 0;\n    int V = 0;\n    int W = 0;\n    int X = 0;\n    int Y = 0;\n\
    \    int Z = 0;\n    int space = 0;\n    int comma = 0;\n    int period = 0;\n\
    \    int semicolon = 0;\n    int colon = 0;\n    int equal = 0;\n    int dash\
    \ = 0;\n    int underscore = 0;\n    int open_bracket = 0;\n    int close_bracket\
    \ = 0;\n    int open_square = 0;\n    int close_square = 0;\n    int open_curly\
    \ = 0;\n    int close_curly = 0;\n    int open_bang = 0;\n    int close_bang =\
    \ 0;\n    int semicolon = 0;\n    int comma = 0;\n    int period = 0;\n    int\
    \ colon = 0;\n    int equal = 0;\n    int dash = 0;\n    int underscore = 0;\n\
    \    int open_bracket = 0;\n    int close_bracket = 0;\n    int open_square =\
    \ 0;\n    int close_square = 0;\n    int open_curly = 0;\n    int close_curly\
    \ = 0;\n    int open_bang = 0;\n    int close_bang = 0;\n    int semicolon = 0;\n\
    \    int comma = 0;\n    int period = 0;\n    int colon = 0;\n    int equal =\
    \ 0;\n    int dash = 0;\n    int underscore = 0;\n    int open_bracket = 0;\n\
    \    int close_bracket = 0;\n    int open_square = 0;\n    int close_square =\
    \ 0;\n    int open_curly = 0;\n    int close_curly = 0;\n    int open_bang = 0;\n\
    \    int close_bang = 0;\n    int semicolon = 0;\n    int comma = 0;\n    int\
    \ period = 0;\n    int colon = 0;\n    int equal = 0;\n    int dash = 0;\n   \
    \ int underscore = 0;\n    int open_bracket = 0;\n    int close_bracket = 0;\n\
    \    int open_square = 0;\n    int close_square = 0;\n    int open_curly = 0;\n\
    \    int close_curly = 0;\n    int open_bang = 0;\n    int close_bang = 0;\n \
    \   int semicolon = 0;\n    int comma = 0;\n    int period = 0;\n", "    std::string\
    \ ans;\n    std::string temp;\n    std::string temp2;\n    std::string temp3;\n\
    \    std::string temp4;\n    std::string temp5;\n    std::string temp6;\n    std::string\
    \ temp7;\n    std::string temp8;\n    std::string temp9;\n    std::string temp10;\n\
    \    std::string temp11;\n    std::string temp12;\n    std::string temp13;\n \
    \   std::string temp14;\n    std::string temp15;\n    std::string temp16;\n  \
    \  std::string temp17;\n    std::string temp18;\n    std::string temp19;\n   \
    \ std::string temp20;\n    std::string temp21;\n    std::string temp22;\n    std::string\
    \ temp23;\n    std::string temp24;\n    std::string temp25;\n    std::string temp26;\n\
    \    std::string temp27;\n    std::string temp28;\n    std::string temp29;\n \
    \   std::string temp30;\n    std::string temp31;\n    std::string temp32;\n  \
    \  std::string temp33;\n    std::string temp34;\n    std::string temp35;\n   \
    \ std::string temp36;\n    std::string temp37;\n    std::string temp38;\n    std::string\
    \ temp39;\n    std::string temp40;\n    std::string temp41;\n    std::string temp42;\n\
    \    std::string temp43;\n    std::string temp44;\n    std::string temp45;\n \
    \   std::string temp46;\n    std::string temp47;\n    std::string temp48;\n  \
    \  std::string temp49;\n    std::string temp50;\n    std::string temp51;\n   \
    \ std::string temp52;\n    std::string temp53;\n    std::string temp54;\n    std::string\
    \ temp55;\n    std::string temp56;\n    std::string temp57;\n    std::string temp58;\n\
    \    std::string temp59;\n    std::string temp60;\n    std::string temp61;\n \
    \   std::string temp62;\n    std::string temp63;\n    std::string temp64;\n  \
    \  std::string temp65;\n    std::string temp66;\n    std::string temp67;\n   \
    \ std::string temp68;\n    std::string temp69;\n    std::string temp70;\n    std::string\
    \ temp71;\n    std::string temp72;\n    std::string temp73;\n    std::string temp74;\n\
    \    std::string temp75;\n    std::string temp76;\n    std::string temp77;\n \
    \   std::string temp78;\n    std::string temp79;\n    std::string temp80;\n  \
    \  std::string temp81;\n    std::string temp82;\n    std::string temp83;\n   \
    \ std::string temp84;\n    std::string temp85;\n    std::string temp86;\n    std::string\
    \ temp87;\n    std::string temp88;", "    std::string ans = \"\";\n    std::string\
    \ temp = \"\";\n    std::string temp2 = \"\";\n    std::string temp3 = \"\";\n\
    \    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n    \
    \        ans += temp;\n            temp = \"\";\n            temp2 = \"\";\n \
    \           temp3 = \"\";\n        } else {\n            temp += s[i];\n     \
    \       temp2 += temp3;\n            temp3 = \"\";\n        }\n    }\n    ans\
    \ += temp;\n    return ans;", "    std::string ans = \"\";\n    std::string temp\
    \ = \"\";\n    std::string temp2 = \"\";\n    std::string temp3 = \"\";\n    int\
    \ i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n   \
    \ int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n\
    \    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n\
    \    int x = 0;\n    int y = 0;\n    int z = 0;\n    int A = 0;\n    int B = 0;\n\
    \    int C = 0;\n    int D = 0;\n    int E = 0;\n    int F = 0;\n    int G = 0;\n\
    \    int H = 0;\n    int I = 0;\n    int J = 0;\n    int K = 0;\n    int L = 0;\n\
    \    int M = 0;\n    int N = 0;\n    int O = 0;\n    int P = 0;\n    int Q = 0;\n\
    \    int R = 0;\n    int S = 0;\n    int T = 0;\n    int U = 0;\n    int V = 0;\n\
    \    int W = 0;\n    int X = 0;\n    int Y = 0;\n    int Z = 0;\n    int a = 0;\n\
    \    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n\
    \    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n\
    \    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n\
    \    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n\
    \    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n\
    \    int A = 0;\n    int B = 0;\n    int C = 0;\n    int D = 0;\n    int E = 0;\n\
    \    int F = 0;\n    int G = 0;\n    int H = 0;\n    int I = 0;\n    int J = 0;\n\
    \    int K = 0;\n    int L = 0;\n    int M = 0;\n    int N = 0;\n    int O = 0;\n\
    \    int P = 0;\n    int Q = 0;\n    int R = 0;\n    int S = 0;\n    int T = 0;\n\
    \    int U = 0;\n    int V = 0;\n    int W = 0;\n    int X = 0;\n    int Y = 0;\n\
    \    int Z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n\
    \    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n\
    \    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n\
    \    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n\
    \    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n\
    \    int y = 0;\n    int z = 0;\n    int A = 0;\n    int B = 0;\n    int C", " \
    \   std::string ans = \"\";\n    std::string word = \"\";\n    std::string temp\
    \ = \"\";\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ')\
    \ {\n            ans += temp;\n            temp = \"\";\n        } else {\n  \
    \          temp += s[i];\n        }\n    }\n    ans += temp;\n    return ans;",
  "    std::string ans = \"\";\n    std::string temp = \"\";\n    std::string word\
    \ = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ')\
    \ {\n            ans += temp;\n            temp = \"\";\n        } else {\n  \
    \          temp += s[i];\n        }\n    }\n    ans += temp;\n    return ans;",
  "    std::string new_s = \"\";\n    std::string word = \"\";\n    for (auto &c :\
    \ s) {\n        if (c != ' ') {\n            word += c;\n        } else {\n  \
    \          new_s += word;\n            word = \"\";\n        }\n    }\n    new_s\
    \ += word;\n    return new_s;", "    std::string ans = \"\";\n    std::string\
    \ word;\n    std::string temp;\n    for (int i = 0; i < s.size(); i++) {\n   \
    \     word = s.substr(i, 1);\n        temp = word;\n        for (int j = 0; j\
    \ < word.size(); j++) {\n            if (word[j] > 'z') {\n                temp\
    \ = temp + word[j] - 'a' + 1;\n            } else {\n                temp = temp\
    \ + word[j];\n            }\n        }\n        ans = ans + temp + \" \";\n  \
    \  }\n    return ans;", "    std::string ans = \"\";\n    std::string temp = \"\
    \";\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n  \
    \          ans += temp;\n            temp = \"\";\n        } else {\n        \
    \    temp += s[i];\n        }\n    }\n    ans += temp;\n    return ans;", "  \
    \  std::string ans = \"\";\n    std::string word = \"\";\n    std::string temp\
    \ = \"\";\n    for (auto &c : s) {\n        if (c != ' ') {\n            word\
    \ += c;\n        } else {\n            ans += temp + word;\n            word =\
    \ \"\";\n            temp = \"\";\n        }\n    }\n    ans += temp + word;\n\
    \    return ans;", "    std::string ans = \"\";\n    std::string temp = \"\";\n\
    \    for(int i = 0; i < s.size(); i++) {\n        if(s[i] == ' ') {\n        \
    \    ans += temp;\n            temp = \"\";\n        } else {\n            temp\
    \ += s[i];\n        }\n    }\n    ans += temp;\n    return ans;", "    std::string\
    \ ans = \"\";\n    std::string word = \"\";\n    int i = 0;\n    int j = 0;\n\
    \    while (i < s.size()) {\n        word = s.substr(i, 1);\n        if (word\
    \ == \" \") {\n            ans += word;\n            i += 1;\n        } else {\n\
    \            while (j < s.size()) {\n                if (s[j] == ' ') {\n    \
    \                ans += word;\n                    i += 1;\n                 \
    \   break;\n                } else {\n                    ans += s[j];\n     \
    \               j += 1;\n                }\n            }\n        }\n    }\n\
    \    return ans;", "    std::string ans = \"\";\n    std::string word = \"\";\n\
    \    std::string temp = \"\";\n    for (int i = 0; i < s.size(); i++) {\n    \
    \    if (s[i] == ' ') {\n            ans += temp;\n            temp = \"\";\n\
    \        } else {\n            temp += s[i];\n        }\n    }\n    ans += temp;\n\
    \    return ans;", "    // Write your code here\n    std::string new_s;\n    std::string\
    \ word;\n    for(int i=0;i<s.size();i++){\n        if(s[i]==' '){\n          \
    \  word=new_s;\n            new_s=\"\";\n        }\n        else{\n          \
    \  new_s=new_s+s[i];\n        }\n    }\n    return new_s;", "    std::string new_s\
    \ = \"\";\n    std::string temp = \"\";\n    for (int i = 0; i < s.size(); i++)\
    \ {\n        if (s[i] == ' ') {\n            new_s += temp;\n            temp\
    \ = \"\";\n        } else {\n            temp += s[i];\n        }\n    }\n   \
    \ new_s += temp;\n    return new_s;", "    // Write your code here\n    std::string\
    \ ans = \"\";\n    for(int i = 0; i < s.size(); i++){\n        if(s[i] == ' '){\n\
    \            ans += \" \";\n        }\n        else{\n            ans += s[i];\n\
    \        }\n    }\n    return ans;", "    std::string ans = \"\";\n    std::string\
    \ word = \"\";\n    std::string temp = \"\";\n    for(int i = 0; i < s.size();\
    \ i++) {\n        if(s[i] == ' ') {\n            ans += temp;\n            ans\
    \ += \" \";\n            temp = \"\";\n        } else {\n            temp += s[i];\n\
    \        }\n    }\n    ans += temp;\n    return ans;", "    std::string new_s\
    \ = \"\";\n    std::string word = \"\";\n    int i = 0;\n    int j = 0;\n    int\
    \ k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n   \
    \ int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n\
    \    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n\
    \    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n\
    \    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n\
    \    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n\
    \    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n\
    \    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n\
    \    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n\
    \    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n\
    \    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n\
    \    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n\
    \    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n\
    \    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n\
    \    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n\
    \    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n\
    \    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n\
    \    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n\
    \    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n\
    \    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n\
    \    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n\
    \    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n\
    \    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n\
    \    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n\
    \    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n\
    \    int f = 0;\n    int g = 0;\n", "    // Write your code here\n    std::string\
    \ ans = \"\";\n    for(int i=0;i<s.size();i++){\n        if(s[i]==' '){\n    \
    \        ans += \" \";\n        }\n        else{\n            ans += s[i];\n \
    \       }\n    }\n    return ans;", "    std::string ans = \"\";\n    std::string\
    \ temp = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < s.size();\
    \ i++) {\n        if (s[i] == ' ') {\n            if (temp != \"\") {\n      \
    \          ans += temp;\n                temp = \"\";\n            }\n       \
    \ } else {\n            temp += s[i];\n        }\n    }\n    if (temp != \"\"\
    ) {\n        ans += temp;\n    }\n    return ans;", "    std::string ans = \"\"\
    ;\n    std::string word = \"\";\n    std::string blank = \"\";\n    for (auto\
    \ c : s) {\n        if (c != ' ') {\n            word += c;\n        } else {\n\
    \            ans += blank + word;\n            word = \"\";\n            blank\
    \ = \"\";\n        }\n    }\n    ans += blank + word;\n    return ans;", "   \
    \ std::string ans = \"\";\n    std::string word = \"\";\n    std::string temp\
    \ = \"\";\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ')\
    \ {\n            ans += temp;\n            temp = \"\";\n        } else {\n  \
    \          temp += s[i];\n        }\n    }\n    ans += temp;\n    return ans;",
  "    std::string ans;\n    std::string temp;\n    for(int i=0;i<s.size();i++){\n\
    \        if(s[i]==' '){\n            temp.push_back(' ');\n        }\n       \
    \ else{\n            temp.push_back(s[i]);\n        }\n    }\n    for(int i=0;i<s.size();i++){\n\
    \        if(s[i]==' '){\n            ans.push_back(temp);\n            temp.clear();\n\
    \        }\n        else{\n            ans.push_back(s[i]);\n        }\n    }\n\
    \    return ans;", "    std::string ans = \"\";\n    std::string temp = \"\";\n\
    \    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == ' ') {\n      \
    \      ans += temp;\n            temp = \"\";\n        } else {\n            temp\
    \ += s[i];\n        }\n    }\n    ans += temp;\n    return ans;", "    std::string\
    \ ans = \"\";\n    std::string word = \"\";\n    for (auto c : s) {\n        if\
    \ (c == ' ') {\n            ans += word;\n            word = \"\";\n        }\
    \ else {\n            word += c;\n        }\n    }\n    ans += word;\n    return\
    \ ans;", "    // Write your code here\n    std::string new_s = \"\";\n    for(int\
    \ i=0;i<s.size();i++){\n        if(s[i]!=' '){\n            new_s += s[i];\n \
    \       }\n    }\n    for(int i=0;i<s.size();i++){\n        if(s[i]==' '){\n \
    \           new_s += ' ';\n        }\n    }\n    return new_s;", "    std::string\
    \ ans = s;\n    std::string word;\n    std::string new_word;\n    std::string\
    \ temp;\n    std::string temp_word;\n    int i = 0;\n    int j = 0;\n    int k\
    \ = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int\
    \ p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n   \
    \ int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n\
    \    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n\
    \    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n\
    \    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n\
    \    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n\
    \    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n\
    \    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n\
    \    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n\
    \    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n\
    \    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n\
    \    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n\
    \    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n\
    \    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n\
    \    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n\
    \    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n\
    \    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n\
    \    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n\
    \    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n\
    \    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n\
    \    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n\
    \    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n\
    \    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n\
    \    int a = 0;\n    int b = 0;\n    int c = 0;", "    std::string new_s = \"\"\
    ;\n    std::string word = \"\";\n    std::string new_word = \"\";\n    int i =\
    \ 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int\
    \ n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n   \
    \ int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n\
    \    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n\
    \    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n\
    \    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n\
    \    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n\
    \    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n\
    \    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n\
    \    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n\
    \    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n\
    \    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n\
    \    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n\
    \    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n\
    \    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n\
    \    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n\
    \    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n\
    \    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n\
    \    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n\
    \    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n\
    \    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n\
    \    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n\
    \    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n\
    \    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n\
    \    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n\
    \    int d = 0;\n    int e = 0;\n    int f", "    std::string ans = s;\n    std::string\
    \ temp;\n    std::string temp2;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n\
    \    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n\
    \    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n\
    \    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n\
    \    int A = 0;\n    int B = 0;\n    int C = 0;\n    int D = 0;\n    int E = 0;\n\
    \    int F = 0;\n    int G = 0;\n    int H = 0;\n    int I = 0;\n    int J = 0;\n\
    \    int K = 0;\n    int L = 0;\n    int M = 0;\n    int N = 0;\n    int O = 0;\n\
    \    int P = 0;\n    int Q = 0;\n    int R = 0;\n    int S = 0;\n    int T = 0;\n\
    \    int U = 0;\n    int V = 0;\n    int W = 0;\n    int X = 0;\n    int Y = 0;\n\
    \    int Z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n\
    \    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n\
    \    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n\
    \    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n\
    \    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n\
    \    int y = 0;\n    int z = 0;\n    int A = 0;\n    int B = 0;\n    int C = 0;\n\
    \    int D = 0;\n    int E = 0;\n    int F = 0;\n    int G = 0;\n    int H = 0;\n\
    \    int I = 0;\n    int J = 0;\n    int K = 0;\n    int L = 0;\n    int M = 0;\n\
    \    int N = 0;\n    int O = 0;\n    int P = 0;\n    int Q = 0;\n    int R = 0;\n\
    \    int S = 0;\n    int T = 0;\n    int U = 0;\n    int V = 0;\n    int W = 0;\n\
    \    int X = 0;\n    int Y = 0;\n    int Z = 0;\n    int a = 0;\n    int b = 0;\n\
    \    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n\
    \    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n\
    \    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n\
    \    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n\
    \    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int A = 0;\n\
    \    int B = 0;\n    int C = 0;\n    int D = 0;\n    int ", "    std::string ans\
    \ = \"\";\n    std::string word = \"\";\n    std::string temp = \"\";\n    for\
    \ (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            ans\
    \ += temp;\n            temp = \"\";\n        } else {\n            temp += s[i];\n\
    \        }\n    }\n    ans += temp;\n    return ans;", "    std::string ans =\
    \ \"\";\n    std::string word;\n    std::string temp;\n    for (int i = 0; i <\
    \ s.length(); i++) {\n        word = s.substr(i, 1);\n        temp = word;\n \
    \       for (int j = 0; j < temp.length(); j++) {\n            if (temp[j] > 'z')\
    \ {\n                temp = temp + temp[j] - 'z' + 'a';\n            } else {\n\
    \                temp = temp + temp[j];\n            }\n        }\n        ans\
    \ = ans + temp + \" \";\n    }\n    return ans;", "    std::string ans = \"\"\
    ;\n    int n = s.size();\n    for (int i = 0; i < n; i++) {\n        char c =\
    \ s[i];\n        if (c == ' ') {\n            ans += ' ';\n        } else {\n\
    \            int index = c - 'a';\n            ans += s[index];\n        }\n \
    \   }\n    return ans;", "    // Write your code here\n    std::string ans = \"\
    \";\n    for(int i=0;i<s.size();i++){\n        if(s[i]==' '){\n            ans\
    \ += \" \";\n        }\n        else{\n            ans += s[i];\n        }\n \
    \   }\n    return ans;", "    std::string new_s = \"\";\n    std::string word\
    \ = \"\";\n    std::string new_word = \"\";\n    for (int i = 0; i < s.size();\
    \ i++) {\n        if (s[i] == ' ') {\n            new_s += new_word;\n       \
    \     new_word = \"\";\n        } else {\n            new_word += s[i];\n    \
    \    }\n    }\n    new_s += new_word;\n    return new_s;", "    // Write your\
    \ code here\n    std::string ans = \"\";\n    for(int i=0;i<s.size();i++){\n \
    \       if(s[i]==' '){\n            ans += ' ';\n        }\n        else{\n  \
    \          ans += s[i];\n        }\n    }\n    return ans;", "    std::string\
    \ ans;\n    for(int i=0;i<s.size();i++){\n        for(int j=i+1;j<s.size();j++){\n\
    \            if((s[i]>s[j])){\n                char temp=s[i];\n             \
    \   s[i]=s[j];\n                s[j]=temp;\n            }\n        }\n       \
    \ ans+=(s[i]==' ' ? ' ' : s[i]);\n    }\n    return ans;", "    // Write your\
    \ code here\n    std::string ans = \"\";\n    for(int i=0;i<s.size();i++){\n \
    \       if(s[i]==' '){\n            for(int j=i+1;j<s.size();j++){\n         \
    \       if(s[j-1]>s[i]){\n                    ans += s[j-1];\n               \
    \     s[j-1]=s[i];\n                    s[i]=s[j];\n                    s[j]=ans;\n\
    \                    ans=\"\";\n                }\n            }\n        }\n\
    \        else{\n            ans += s[i];\n        }\n    }\n    return ans;",
  "    std::string new_s = \"\";\n    std::string word = \"\";\n    std::string new_word\
    \ = \"\";\n    for (auto &c : s) {\n        if (c != ' ') {\n            word\
    \ += c;\n        } else {\n            new_word += word;\n            word = \"\
    \";\n            new_s += new_word;\n            new_word = \"\";\n        }\n\
    \    }\n    return new_s;", "    std::string new_s = \"\";\n    std::string temp\
    \ = \"\";\n    std::string temp_s = \"\";\n    int i = 0;\n    int j = 0;\n  \
    \  int k = 0;\n    while (i < s.size()) {\n        j = i;\n        while (j <\
    \ s.size() && s[j] == ' ') {\n            j++;\n        }\n        k = i;\n  \
    \      while (k >= 0 && s[k] == ' ') {\n            k--;\n        }\n        if\
    \ (j > k) {\n            temp = s.substr(i, j - i);\n            temp_s = temp.substr(0,\
    \ temp.find_first_of(' '));\n            new_s += temp_s + \" \" + s.substr(k,\
    \ s.size());\n            i = j + 1;\n        } else {\n            new_s += s.substr(i,\
    \ s.size());\n            i = s.size();\n        }\n    }\n    return new_s;",
  "    // Write your code here\n    std::string ans = \"\";\n    for(int i = 0; i\
    \ < s.length(); i++){\n        for(int j = i + 1; j < s.length(); j++){\n    \
    \        if(s[i] == s[j]){\n                ans += s[j];\n                i =\
    \ j;\n            }\n        }\n    }\n    return ans;", "    std::string new_s\
    \ = \"\";\n    std::string temp = \"\";\n    std::string temp_s = \"\";\n    for(int\
    \ i = 0; i < s.size(); i++) {\n        if(s[i] == ' ') {\n            temp_s +=\
    \ temp;\n            temp = \"\";\n            temp_s = \"\";\n        } else\
    \ {\n            temp += s[i];\n        }\n    }\n    temp_s += temp;\n    temp\
    \ = \"\";\n    temp_s = \"\";\n    for(int i = 0; i < s.size(); i++) {\n     \
    \   if(s[i] == ' ') {\n            temp_s += temp;\n            temp = \"\";\n\
    \            temp_s = \"\";\n        } else {\n            temp += s[i];\n   \
    \     }\n    }\n    temp_s += temp;\n    temp = \"\";\n    temp_s = \"\";\n  \
    \  for(int i = 0; i < s.size(); i++) {\n        if(s[i] == ' ') {\n          \
    \  temp_s += temp;\n            temp = \"\";\n            temp_s = \"\";\n   \
    \     } else {\n            temp += s[i];\n        }\n    }\n    temp_s += temp;\n\
    \    temp = \"\";\n    temp_s = \"\";\n    for(int i = 0; i < s.size(); i++) {\n\
    \        if(s[i] == ' ') {\n            temp_s += temp;\n            temp = \"\
    \";\n            temp_s = \"\";\n        } else {\n            temp += s[i];\n\
    \        }\n    }\n    temp_s += temp;\n    temp = \"\";\n    temp_s = \"\";\n\
    \    for(int i = 0; i < s.size(); i++) {\n        if(s[i] == ' ') {\n        \
    \    temp_s += temp;\n            temp = \"\";\n            temp_s = \"\";\n \
    \       } else {\n            temp += s[i];\n        }\n    }\n    temp_s += temp;\n\
    \    temp = \"\";\n    temp_s = \"\";\n    for(int i = 0; i < s.size(); i++) {\n\
    \        if(s[i] == ' ') {\n            temp_s += temp;\n            temp = \"\
    \";\n            temp_s = \"\";\n        } else {\n            temp += s[i];\n\
    \        }\n    }\n    temp_s += temp;\n    temp = \"\";\n    temp_s = \"\";\n\
    \    for(int i = 0; i < s.size(); i++) {\n        if(s[i] == ' ') {\n        \
    \    temp_s += temp;\n            temp = \"\";\n            temp_s = \"\";\n \
    \       } else {\n            temp += s[i];\n        }\n    }\n    temp_s += temp;\n\
    \    temp = \"\";\n    temp_s = \"\";\n    for(int i = 0; i < s.size(); i++) {\n\
    \        if(s[i] == ' ') {\n            temp_s += temp;\n            temp = \"\
    \";\n            temp_s = \"\";\n        } else {\n            temp += s[i];\n\
    \        }\n    }\n    temp_s += temp;\n    temp = \"\";\n    temp_s = \"\";\n\
    \    for(int i = 0; i < s.size(); i++) {\n        if(s[i] == ' ') {\n        \
    \    temp_s += temp;\n            temp = \"\";\n            temp_s = \"\";\n \
    \       } else {\n            temp += s[i];\n        }\n    }\n    temp_s += temp;\n\
    \    temp = \"\";\n    temp_s = \"\";\n    for(int i = 0; i < s.size(); i++) {\n\
    \        if(s[i] == ' ') {\n            temp_s += temp;\n            temp = \"\
    \";\n            temp_s = \"\";\n        } else {\n            temp += s[i];\n\
    \        }\n    }\n", "    std::string ans = \"\";\n    std::string temp = \"\"\
    ;\n    std::string word = \"\";\n    for (auto c : s) {\n        if (c != ' ')\
    \ {\n            word += c;\n        } else {\n            ans += temp + word;\n\
    \            temp = \"\";\n            word = c;\n        }\n    }\n    ans +=\
    \ temp + word;\n    return ans;", "    std::string new_s;\n    std::string word;\n\
    \    std::string new_word;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n \
    \   while (i < s.size()) {\n        word = s.substr(i, 1);\n        if (word ==\
    \ \" \") {\n            new_s += \" \";\n            i++;\n        } else {\n\
    \            new_s += word;\n        }\n        while (i < s.size() && s.at(i)\
    \ != ' ') {\n            i++;\n        }\n        while (j < s.size() && s.at(j)\
    \ != ' ') {\n            j++;\n        }\n        while (j < s.size() && s.at(j)\
    \ == ' ') {\n            j++;\n        }\n        while (j < s.size() && s.at(j)\
    \ != ' ') {\n            j++;\n        }\n        while (i < s.size() && s.at(i)\
    \ == ' ') {\n            i++;\n        }\n        while (i < s.size() && s.at(i)\
    \ != ' ') {\n            i++;\n        }\n        while (i < s.size() && s.at(i)\
    \ == ' ') {\n            i++;\n        }\n        while (i < s.size() && s.at(i)\
    \ != ' ') {\n            i++;\n        }\n        while (i < s.size() && s.at(i)\
    \ == ' ') {\n            i++;\n        }\n        while (i < s.size() && s.at(i)\
    \ != ' ') {\n            i++;\n        }\n        while (i < s.size() && s.at(i)\
    \ == ' ') {\n            i++;\n        }\n        while (i < s.size() && s.at(i)\
    \ != ' ') {\n            i++;\n        }\n        while (i < s.size() && s.at(i)\
    \ == ' ') {\n            i++;\n        }\n        while (i < s.size() && s.at(i)\
    \ != ' ') {\n            i++;\n        }\n        while (i < s.size() && s.at(i)\
    \ == ' ') {\n            i++;\n        }\n        while (i < s.size() && s.at(i)\
    \ != ' ') {\n            i++;\n        }\n        while (i < s.size() && s.at(i)\
    \ == ' ') {\n            i++;\n        }\n        while (i < s.size() && s.at(i)\
    \ != ' ') {\n            i++;\n        }\n        while (i < s.size() && s.at(i)\
    \ == ' ') {\n            i++;\n        }\n        while (i < s.size() && s.at(i)\
    \ != ' ') {\n            i++;\n        }\n        while (i < s.size() && s.at(i)\
    \ == ' ') {\n            i++;\n        }\n        while (i < s.size() && s.at(i)\
    \ != ' ') {\n            i++;\n        }\n        while (i < s.size() && s.at(i)\
    \ == ' ') {\n            i++;\n        }\n        while (i < s.size() && s.at(i)\
    \ != ' ') {\n            i++;\n        }\n        while (i < s.size() && s.at(i)\
    \ == ' ') {\n            i++;\n        }\n        while (i < s.size() && s.at(i)\
    \ != ' ') {\n            i++;\n        }\n        while (i < s.size() && s.at(i)\
    \ == ' ') {", "    std::string ans = \"\";\n    std::string word = \"\";\n   \
    \ std::string temp = \"\";\n    for (int i = 0; i < s.size(); i++) {\n       \
    \ if (s[i] == ' ') {\n            ans += word;\n            word = \"\";\n   \
    \     } else {\n            word += s[i];\n        }\n    }\n    ans += word;\n\
    \    return ans;", "    std::string ans = \"\";\n    std::string temp = \"\";\n\
    \    for(int i = 0; i < s.size(); i++) {\n        if(!isalpha(s[i])) {\n     \
    \       ans += s[i];\n        } else {\n            temp = s[i];\n           \
    \ ans += temp;\n        }\n    }\n    return ans;", "    std::string ans = \"\"\
    ;\n    std::string word;\n    std::string temp;\n    for (int i = 0; i < s.length();\
    \ i++) {\n        if (s[i] == ' ') {\n            ans += temp;\n            temp.clear();\n\
    \        } else {\n            temp.push_back(s[i]);\n        }\n    }\n    ans\
    \ += temp;\n    return ans;", "    std::string ans = \"\";\n    std::string word\
    \ = \"\";\n    for (auto c : s) {\n        if (c == ' ') {\n            ans +=\
    \ word;\n            word = \"\";\n        } else {\n            word += c;\n\
    \        }\n    }\n    ans += word;\n    return ans;", "    std::string new_s\
    \ = \"\";\n    std::string word = \"\";\n    std::string new_word = \"\";\n  \
    \  for (auto c : s) {\n        if (c == ' ') {\n            new_s += word;\n \
    \           word = \"\";\n        } else {\n            word += c;\n        }\n\
    \    }\n    new_s += word;\n    return new_s;", "    std::string ans = \"\";\n\
    \    std::string word = \"\";\n    for (auto c : s) {\n        if (c == ' ') {\n\
    \            ans += word;\n            word = \"\";\n        } else {\n      \
    \      word += c;\n        }\n    }\n    ans += word;\n    return ans;", "   \
    \ // Write your code here\n    std::string ans = \"\";\n    for(int i=0;i<s.size();i++){\n\
    \        for(int j=0;j<s.size();j++){\n            if(s[i]==s[j]){\n         \
    \       ans += s[j];\n                ans += s[i];\n            }\n        }\n\
    \    }\n    return ans;", "    std::string ans = \"\";\n    std::string word =\
    \ \"\";\n    std::string blank = \"\";\n    std::string temp = \"\";\n    for\
    \ (auto c : s) {\n        if (c != ' ') {\n            word += c;\n        } else\
    \ {\n            ans += blank;\n            ans += word;\n            word = \"\
    \";\n            blank = \"\";\n        }\n    }\n    ans += blank;\n    ans +=\
    \ word;\n    return ans;", "    std::string ans = \"\";\n    std::string word\
    \ = \"\";\n    std::string temp = \"\";\n    for (auto c : s) {\n        if (c\
    \ == ' ') {\n            if (word.length() > 0) {\n                ans += \" \"\
    \ + word;\n                word = \"\";\n            }\n        } else {\n   \
    \         word += c;\n        }\n    }\n    if (word.length() > 0) {\n       \
    \ ans += \" \" + word;\n    }\n    return ans;", "    // Write your code here\n\
    \    std::string new_s;\n    for(int i=0;i<s.size();i++){\n        if(s[i]=='\
    \ '){\n            new_s+=\" \";\n        }\n        else{\n            new_s+=\"\
    a\";\n        }\n    }\n    return new_s;", "    std::string new_s = \"\";\n \
    \   std::string word;\n    std::string new_word;\n    for (int i = 0; i < s.size();\
    \ i++) {\n        if (s[i] == ' ') {\n            new_s += new_word;\n       \
    \     new_word = \"\";\n        } else {\n            new_word += s[i];\n    \
    \    }\n    }\n    new_s += new_word;\n    return new_s;", "    // Write your\
    \ code here\n    std::string new_s = \"\";\n    for(auto &c: s) {\n        if(c\
    \ != ' ') {\n            new_s += c;\n        }\n    }\n    for(auto &c: new_s)\
    \ {\n        if(c != ' ') {\n            int ascii = c;\n            int index\
    \ = 0;\n            while(ascii != 0) {\n                ascii /= 10;\n      \
    \          index++;\n            }\n            int new_ascii = ascii + 1;\n \
    \           while(new_ascii != 0) {\n                new_ascii /= 10;\n      \
    \          index++;\n            }\n            char new_char = static_cast<char>(new_ascii);\n\
    \            while(index != 0) {\n                new_s += new_char;\n       \
    \         index--;\n            }\n        }\n    }\n    return new_s;", "   \
    \ std::string ans = \"\";\n    std::string word;\n    std::string temp;\n    int\
    \ i = 0;\n    int j = 0;\n    int k = 0;\n    int l = s.size();\n    while (i\
    \ < l) {\n        word = s.substr(i, 1);\n        temp = s.substr(i, 1);\n   \
    \     while (j < l) {\n            if (temp == s.substr(j, 1)) {\n           \
    \     ans += word;\n                j++;\n                break;\n           \
    \ }\n            j++;\n        }\n        ans += word;\n        i++;\n    }\n\
    \    return ans;", "    std::string ans = \"\";\n    std::string word = \"\";\n\
    \    std::string blank = \"\";\n    for (int i = 0; i < s.length(); i++) {\n \
    \       if (s[i] == ' ') {\n            ans += blank;\n            blank = \"\"\
    ;\n        } else {\n            blank += s[i];\n        }\n    }\n    for (int\
    \ i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            ans +=\
    \ word;\n            word = \"\";\n        } else {\n            word += s[i];\n\
    \        }\n    }\n    return ans;", "    std::string new_s = \"\";\n    std::string\
    \ word = \"\";\n    std::string new_word = \"\";\n    std::string blank = \"\"\
    ;\n    std::string new_blank = \"\";\n    for (int i = 0; i < s.length(); i++)\
    \ {\n        if (s[i] == ' ') {\n            new_s += blank;\n            blank\
    \ = \"\";\n        } else {\n            blank += s[i];\n        }\n    }\n  \
    \  for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n      \
    \      new_word += new_blank;\n            new_blank = \"\";\n        } else {\n\
    \            new_blank += s[i];\n        }\n    }\n    new_s += new_word;\n  \
    \  return new_s;", "    // Write your code here\n    std::string ans = \"\";\n\
    \    for(int i=0;i<s.size();i++){\n        if(s[i]==' '){\n            ans +=\
    \ \" \";\n        }\n        else{\n            ans += s[i];\n        }\n    }\n\
    \    return ans;", "    std::string ans = \"\";\n    std::string word = \"\";\n\
    \    std::string temp = \"\";\n    for (int i = 0; i < s.size(); i++) {\n    \
    \    if (s[i] == ' ') {\n            ans += temp;\n            temp = \"\";\n\
    \        } else {\n            temp += s[i];\n        }\n    }\n    ans += temp;\n\
    \    return ans;", "    std::string ans = \"\";\n    std::string temp = \"\";\n\
    \    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == ' ') {\n      \
    \      ans += temp;\n            temp = \"\";\n        } else {\n            temp\
    \ += s[i];\n        }\n    }\n    ans += temp;\n    return ans;", "    std::string\
    \ ans = \"\";\n    int len = s.size();\n    for (int i = 0; i < len; i++) {\n\
    \        char c = s[i];\n        if (c == ' ') {\n            ans += ' ';\n  \
    \      } else {\n            ans += c;\n        }\n    }\n    return ans;", " \
    \   std::string new_s = \"\";\n    std::string word;\n    std::string new_word;\n\
    \    std::string blank_space;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n\
    \    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n\
    \    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n\
    \    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n\
    \    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n\
    \    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n\
    \    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n\
    \    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n\
    \    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n\
    \    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n\
    \    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n\
    \    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n\
    \    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n\
    \    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n\
    \    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n\
    \    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n\
    \    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n\
    \    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n\
    \    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n\
    \    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n\
    \    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n\
    \    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n\
    \    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n\
    \    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n\
    \    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n\
    \    int b = 0;\n    int c = 0;\n    int d = 0;", "    std::string ans = \"\"\
    ;\n    std::string temp = \"\";\n    std::string word = \"\";\n    for (int i\
    \ = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            if (word.length()\
    \ > 0) {\n                ans += temp;\n                temp = \"\";\n       \
    \     }\n            ans += word;\n            word = \"\";\n        } else {\n\
    \            word += s[i];\n        }\n    }\n    if (word.length() > 0) {\n \
    \       ans += temp;\n    }\n    return ans;", "    // Your code here\n    \n\
    \    return s;", "    std::string ans = \"\";\n    for(int i=0;i<s.size();i++)\
    \ {\n        char c = s[i];\n        if(c == ' ' || c == '.' || c == '!' || c\
    \ == '?' || c == '-' || c == '_' || c == '*' || c == '(' || c == ')' || c == '['\
    \ || c == ']' || c == '{' || c == '}' || c == '$' || c == '%' || c == '&' || c\
    \ == '#' || c == '@' || c == '^' || c == '~' || c == '`' || c == '|' || c == '<'\
    \ || c == '>' || c == '+' || c == '/' || c == '\\\\' || c == '\"' || c == '?'\
    \ || c == '!' || c == '.' || c == ';' || c == ':' || c == ':' || c == ',' || c\
    \ == ';' || c == '<' || c == '>' || c == '?' || c == '!' || c == '.' || c == '-'\
    \ || c == '_' || c == '*' || c == '(' || c == ')' || c == '[' || c == ']' || c\
    \ == '{' || c == '}' || c == '$' || c == '%' || c == '&' || c == '#' || c == '@'\
    \ || c == '^' || c == '~' || c == '`' || c == '|' || c == '<' || c == '>' || c\
    \ == '+' || c == '/' || c == '\\\\' || c == '\"' || c == '?' || c == '!' || c\
    \ == '.' || c == ';' || c == ':' || c == ':' || c == ',' || c == ';' || c == '<'\
    \ || c == '>' || c == '?' || c == '!' || c == '.' || c == '-' || c == '_' || c\
    \ == '*' || c == '(' || c == ')' || c == '[' || c == ']' || c == '{' || c == '}'\
    \ || c == '$' || c == '%' || c == '&' || c == '#' || c == '@' || c == '^' || c\
    \ == '~' || c == '`' || c == '|' || c == '<' || c == '>' || c == '+' || c == '/'\
    \ || c == '\\\\' || c == '\"' || c == '?' || c == '!' || c == '.' || c == ';'\
    \ || c == ':' || c == ':' || c == ',' || c == ';' || c == '<' || c == '>' || c\
    \ == '?' || c == '!' || c == '.' || c == '-' || c == '_' || c == '*' || c == '('\
    \ || c == ')' || c == '[' || c == ']' || c == '{' || c == '}' || c == '$' || c\
    \ == '%' || c == '&' || ", "    std::string new_s;\n    std::string word;\n  \
    \  int i = 0;\n    int j = 0;\n    int k = 0;\n    while (i < s.size()) {\n  \
    \      word = s.substr(i, 1);\n        if (word == \" \") {\n            new_s\
    \ += \" \";\n            i++;\n        } else {\n            new_s += word;\n\
    \        }\n        while (i < s.size() && s.at(i) == ' ') {\n            i++;\n\
    \        }\n    }\n    return new_s;", "    std::string new_s = \"\";\n    std::string\
    \ word = \"\";\n    for (auto &c : s) {\n        if (c != ' ') {\n           \
    \ word += c;\n        } else {\n            new_s += word;\n            word =\
    \ \"\";\n        }\n    }\n    new_s += word;\n    return new_s;", "    std::string\
    \ new_s;\n    std::string word;\n    std::string new_word;\n    for (auto &c:\
    \ s) {\n        if (c == ' ') {\n            new_word += c;\n        } else {\n\
    \            word = new_word;\n            new_word += c;\n            new_s +=\
    \ word;\n        }\n    }\n    return new_s;", "    // Write your code here\n\
    \    std::string ans;\n    for(int i=0;i<s.size();i++){\n        if(s[i]==' '){\n\
    \            ans.push_back(s[i]);\n        }\n        else{\n            int j=i;\n\
    \            while(j<s.size() && s[j+1]==' '){\n                j++;\n       \
    \     }\n            int k=i;\n            while(k<s.size() && s[k-1]==' '){\n\
    \                k--;\n            }\n            int m=j;\n            while(j<s.size()\
    \ && s[k]==' '){\n                j++;\n                k--;\n            }\n\
    \            int n=j;\n            while(j<s.size() && s[k]==' '){\n         \
    \       j++;\n                k++;\n            }\n            int o=k;\n    \
    \        while(k<s.size() && s[k]==' '){\n                k++;\n            }\n\
    \            int p=j;\n            while(j<s.size() && s[k]==' '){\n         \
    \       j++;\n            }\n            int q=k;\n            while(k<s.size()\
    \ && s[k]==' '){\n                k++;\n            }\n            int r=j;\n\
    \            while(j<s.size() && s[k]==' '){\n                j++;\n         \
    \   }\n            int s=k;\n            while(k<s.size() && s[k]==' '){\n   \
    \             k++;\n            }\n            int t=j;\n            while(j<s.size()\
    \ && s[k]==' '){\n                j++;\n            }\n            int u=k;\n\
    \            while(k<s.size() && s[k]==' '){\n                k++;\n         \
    \   }\n            int v=j;\n            while(j<s.size() && s[k]==' '){\n   \
    \             j++;\n            }\n            int w=k;\n            while(k<s.size()\
    \ && s[k]==' '){\n                k++;\n            }\n            int x=j;\n\
    \            while(j<s.size() && s[k]==' '){\n                j++;\n         \
    \   }\n            int y=k;\n            while(k<s.size() && s[k]==' '){\n   \
    \             k++;\n            }\n            int z=j;\n            while(j<s.size()\
    \ && s[k]==' '){\n                j++;\n            }\n            int a=k;\n\
    \            while(k<s.size() && s[k]==' '){\n                k++;\n         \
    \   }\n            int b=j;\n            while(j<s.size() && s[k]==' '){\n   \
    \             j++;\n            }\n            int c=k;\n            while(k<s.size()\
    \ && s[k]==' '){\n                k++;\n            }\n            int d=j;\n\
    \            while(j<s.size() && s[k]==' '){", "    std::string ans = \"\";\n\
    \    std::string word;\n    for (auto &c : s) {\n        if (c == ' ') {\n   \
    \         ans += word;\n            word = \"\";\n        } else {\n         \
    \   word += c;\n        }\n    }\n    ans += word;\n    return ans;", "    std::string\
    \ ans = \"\";\n    std::string temp = \"\";\n    for(int i = 0; i < s.length();\
    \ i++) {\n        if(s[i] == ' ') {\n            ans += temp;\n            temp\
    \ = \"\";\n        } else {\n            temp += s[i];\n        }\n    }\n   \
    \ ans += temp;\n    return ans;", "    std::string new_s = \"\";\n    std::string\
    \ word = \"\";\n    std::string new_word = \"\";\n    for (auto c : s) {\n   \
    \     if (c != ' ') {\n            word += c;\n        } else {\n            new_word\
    \ += word;\n            word = \"\";\n        }\n    }\n    new_s += new_word;\n\
    \    return new_s;", "    std::string ans = \"\";\n    std::string word = \"\"\
    ;\n    std::string temp = \"\";\n    for (int i = 0; i < s.size(); i++) {\n  \
    \      if (s[i] == ' ') {\n            if (word != \"\") {\n                ans\
    \ += \" \" + temp;\n                word = \"\";\n            }\n        } else\
    \ {\n            word += s[i];\n        }\n    }\n    if (word != \"\") {\n  \
    \      ans += \" \" + temp;\n    }\n    return ans;", "    std::string ans = \"\
    \";\n    std::string word = \"\";\n    std::string temp = \"\";\n    for (int\
    \ i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            ans +=\
    \ temp;\n            temp = \"\";\n        } else {\n            temp += s[i];\n\
    \        }\n    }\n    ans += temp;\n    return ans;", "    std::string ans =\
    \ \"\";\n    std::string word;\n    std::string temp;\n    for (auto &c : s) {\n\
    \        if (c == ' ') {\n            ans += temp;\n            temp.clear();\n\
    \        } else {\n            temp.push_back(c);\n        }\n    }\n    ans +=\
    \ temp;\n    return ans;", "    std::string new_s = \"\";\n    std::string word\
    \ = \"\";\n    std::string new_word = \"\";\n    for (int i = 0; i < s.size();\
    \ i++) {\n        if (s[i] == ' ') {\n            new_s += word;\n           \
    \ word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n\
    \    new_s += word;\n    return new_s;"]
stop_tokens:
- "\n}"

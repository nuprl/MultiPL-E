language: cpp
name: HumanEval_49_modp
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n > p) {\n        res *= p;\n        n -= p;\n    }\n    return res * p;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpl12ronrb: /tmp/tmpl12ronrb.cpp:14: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126936
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  long r = 1;\n  while (n)\
    \ {\n    if (n & 1) r = r * p;\n    n >>= 1;\n    p *= p;\n  }\n  return r;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpbhhey890: /tmp/tmpbhhey890.cpp:15: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126936
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n) {\n        if (n & 1) res = (res*p) % p;\n        n >>= 1;\n        p =\
    \ (p*p) % p;\n    }\n    return res;\n}\nint main() {\n    auto candidate = modp;\n\
    \    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101))\
    \ == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126936
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n) {\n        if (n&1) res = (res*p)%p;\n        n >>= 1;\n        p = (p*p)%p;\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126936
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ (n) {\n        if ((n & 1) != 0) r = (r * p) % p;\n        n >>= 1;\n      \
    \  p = (p * p) % p;\n    }\n    return r;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126936
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n) {\n        if (n&1) res *= p;\n        n >>= 1;\n        p *= p;\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpj3h3b03_: /tmp/tmpj3h3b03_.cpp:15: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126936
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ (n) {\n        if ((n & 1) != 0) {\n            r = (r * p) % p;\n        }\n\
    \        n >>= 1;\n        p = (p * p) % p;\n    }\n    return r;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126936
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ (n) {\n        if ((n & 1) != 0) {\n            r = (r * p) % p;\n        }\n\
    \        n >>= 1;\n        p = (p * p) % p;\n    }\n    return r;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126936
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long ans = 1;\n    for(long\
    \ i = 2; i <= p; i++) ans = (ans * (n - i)) % p;\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpsuupmtsd: /tmp/tmpsuupmtsd.cpp:11: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126936
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ (n) {\n        if ((n & 1) != 0) {\n            r = (r * p) % p;\n        }\n\
    \        n >>= 1;\n        p = (p * p) % p;\n    }\n    return r;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126936
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long ans = 1;\n    long\
    \ m = 1;\n    while (n > p) {\n        ans = (ans * n) % p;\n        n = (n *\
    \ n) % p;\n    }\n    return ans;\n}\nint main() {\n    auto candidate = modp;\n\
    \    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101))\
    \ == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpyibxafbr: /tmp/tmpyibxafbr.cpp:15: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126936
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    for(long\
    \ i = 2; i <= n; i++) res *= p;\n    return res * p % p;\n}\nint main() {\n  \
    \  auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpsju94uf8: /tmp/tmpsju94uf8.cpp:11: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126936
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    long\
    \ m = p;\n    while (n) {\n        if (n&1) r += m;\n        m <<= 1;\n      \
    \  n >>= 1;\n    }\n    return r;\n}\nint main() {\n    auto candidate = modp;\n\
    \    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101))\
    \ == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp_qvwlvne: /tmp/tmp_qvwlvne.cpp:16: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126936
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ (n) {\n        if ((n & 1) != 0) r = (r * p) % p;\n        n >>= 1;\n      \
    \  p = (p * p) % p;\n    }\n    return r;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126936
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    for(long\
    \ i = 2; i <= n; i++) {\n        res *= i;\n        res %= p;\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp6xqxvf22: /tmp/tmp6xqxvf22.cpp:14: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126936
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  long res = 1;\n  for (int\
    \ i = 0; i < p; i++) {\n    res *= 2;\n  }\n  res %= p;\n  assert(res == 1);\n\
    \  return res;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpqjh6iqrt: /tmp/tmpqjh6iqrt.cpp:10: long int modp(long int, long int):
    Assertion `res == 1'' failed.

    '
  stdout: ''
  timestamp: 1660126936
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long ans = 1;\n    long\
    \ t = 1;\n    long r = n;\n    long m = 1;\n    while (m <= p) {\n        if (n\
    \ % m == 0) {\n            ans = (ans * t) % p;\n        }\n        t *= r;\n\
    \        m += 1;\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpt0zsxzzt: /tmp/tmpt0zsxzzt.cpp:20: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126936
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  long r = 1;\n  while (n\
    \ > 0) {\n    r = r * p % n;\n    n /= 2;\n  }\n  return r;\n}\nint main() {\n\
    \    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmppbay_5wl: /tmp/tmppbay_5wl.cpp:14: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126936
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    for(long\
    \ i = 2; i <= p; i++) res *= i;\n    return n % res + res;\n}\nint main() {\n\
    \    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpgswru8n7: /tmp/tmpgswru8n7.cpp:11: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126936
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ (n) {\n        if (n & 1) r = (r * p) % p;\n        n >>= 1;\n        p = (p\
    \ * p) % p;\n    }\n    return r;\n}\nint main() {\n    auto candidate = modp;\n\
    \    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101))\
    \ == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126936
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n) {\n        if (n & 1) res = (res*p) % p;\n        n >>= 1;\n        p =\
    \ (p*p) % p;\n    }\n    return res;\n}\nint main() {\n    auto candidate = modp;\n\
    \    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101))\
    \ == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126936
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ (n) {\n        if ((n&1) && n>p) r += p;\n        n >>= 1;\n        p *= p;\n\
    \    }\n    return r;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpkmgeo15p: /tmp/tmpkmgeo15p.cpp:15: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126936
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ (n) {\n        if (n & 1) r = r * p;\n        n >>= 1;\n        p *= p;\n  \
    \  }\n    return r;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpchi8ty7y: /tmp/tmpchi8ty7y.cpp:15: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126936
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  long q = p / n;\n  long\
    \ r = p % n;\n  return (r == 0) ? q : (q + modp(q, p));\n}\nint main() {\n   \
    \ auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpvqv7e4o2: /tmp/tmpvqv7e4o2.cpp:11: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126936
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n) {\n        if (n & 1) res *= p;\n        n >>= 1;\n        p *= p;\n   \
    \ }\n    return res;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmphqbalopt: /tmp/tmphqbalopt.cpp:15: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126936
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n > 0) {\n        if (n & 1) res = (res * p) % p;\n        n >>= 1;\n     \
    \   p = (p * p) % p;\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126936
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while(p\
    \ > 1) {\n        if(p&1) res = (res * n) % p;\n        n = ((n*n) % p) % p;\n\
    \        p /= 2;\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmprze1hrjz: /tmp/tmprze1hrjz.cpp:16: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126936
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  long res = 1;\n  while (n)\
    \ {\n    if (n & 1) res = (res*p) % p;\n    n >>= 1;\n    p = (p*p) % p;\n  }\n\
    \  return res;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126938
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n > 0) {\n        if (n & 1) res = (res * p) % p;\n        n >>= 1;\n     \
    \   p = (p * p) % p;\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126936
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n) {\n        if (n & 1)\n            res = (res * p) % p;\n        n >>= 1;\n\
    \        p = (p * p) % p;\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126938
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ (n) {\n        if (n & 1) r = r * p;\n        n >>= 1;\n        p *= p;\n  \
    \  }\n    return r;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpchi8ty7y: /tmp/tmpchi8ty7y.cpp:15: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126936
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    return ((n % p) + p) %\
    \ p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5))\
    \ == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmphlhhcxdi: /tmp/tmphlhhcxdi.cpp:10: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126938
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n > 0) {\n        if (n & 1) res = (res*p) % p;\n        n >>= 1;\n       \
    \ p = (p*p) % p;\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126938
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    for(;\
    \ n > 0; n /= p)\n        res *= p;\n    return res * p;\n}\nint main() {\n  \
    \  auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpw1mjohof: /tmp/tmpw1mjohof.cpp:12: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126938
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    for(long\
    \ i = 2; i <= p; i++) res *= i;\n    return n % res + res;\n}\nint main() {\n\
    \    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpgswru8n7: /tmp/tmpgswru8n7.cpp:11: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126936
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long ans = 1;\n    long\
    \ d = 1;\n    long r = n;\n    long t;\n    long q;\n    long q2;\n    long q3;\n\
    \    long q4;\n    long q5;\n    long q6;\n    long q7;\n    long q8;\n    long\
    \ q9;\n    long q10;\n    long q11;\n    long q12;\n    long q13;\n    long q14;\n\
    \    long q15;\n    long q16;\n    long q17;\n    long q18;\n    long q19;\n \
    \   long q20;\n    long q21;\n    long q22;\n    long q23;\n    long q24;\n  \
    \  long q25;\n    long q26;\n    long q27;\n    long q28;\n    long q29;\n   \
    \ long q30;\n    long q31;\n    long q32;\n    long q33;\n    long q34;\n    long\
    \ q35;\n    long q36;\n    long q37;\n    long q38;\n    long q39;\n    long q40;\n\
    \    long q41;\n    long q42;\n    long q43;\n    long q44;\n    long q45;\n \
    \   long q46;\n    long q47;\n    long q48;\n    long q49;\n    long q50;\n  \
    \  long q51;\n    long q52;\n    long q53;\n    long q54;\n    long q55;\n   \
    \ long q56;\n    long q57;\n    long q58;\n    long q59;\n    long q60;\n    long\
    \ q61;\n    long q62;\n    long q63;\n    long q64;\n    long q65;\n    long q66;\n\
    \    long q67;\n    long q68;\n    long q69;\n    long q70;\n    long q71;\n \
    \   long q72;\n    long q73;\n    long q74;\n    long q75;\n    long q76;\n  \
    \  long q77;\n    long q78;\n    long q79;\n    long q80;\n    long q81;\n   \
    \ long q82;\n    long q83;\n    long q84;\n    long q85;\n    long q\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgd3gc82r.cpp: In function \u2018long int modp(long int, long int)\u2019\
    :\n/tmp/tmpgd3gc82r.cpp:95:1: error: expected initializer before \u2018}\u2019\
    \ token\n   95 | }\n      | ^\n/tmp/tmpgd3gc82r.cpp:95:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660126938
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n) {\n        if (n&1) res = (res*p)%p;\n        n >>= 1;\n        p = (p*p)%p;\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126936
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ (p > 1) {\n        if (p & 1) r += n;\n        n += n;\n        p >>= 1;\n \
    \   }\n    return r;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp8tcmzro8: /tmp/tmp8tcmzro8.cpp:15: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126938
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n > 0) {\n        if (n & 1) res = (res*p) % p;\n        n >>= 1;\n       \
    \ p = (p*p) % p;\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126938
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long ans = 1;\n    while\
    \ (n) {\n        ans = (ans * n) % p;\n        n /= p;\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp3yq0wl2i: /tmp/tmp3yq0wl2i.cpp:15: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126938
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    long\
    \ m = 1;\n    long t = 1;\n    long i = 1; // i is used to store p\n    long j\
    \ = 1; // j is used to store n\n    long k = 0;\n    long temp;\n    while (i\
    \ <= j) {\n        temp = i * k;\n        if (temp > p) {\n            temp =\
    \ p - temp;\n        }\n        r = r * temp;\n        j = k;\n        k = temp;\n\
    \        i++;\n    }\n    return r;\n}\nint main() {\n    auto candidate = modp;\n\
    \    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101))\
    \ == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpib2t5aml: /tmp/tmpib2t5aml.cpp:26: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126938
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n > 0) {\n        if (n & 1) res = (res * p) % p;\n        n >>= 1;\n     \
    \   p = (p * p) % p;\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126936
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n) {\n        if (n & 1)\n            res = (res * p) % p;\n        n >>= 1;\n\
    \        p = (p * p) % p;\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126938
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long ans = 1;\n    for(long\
    \ i = 2; i <= n; i++) ans = (ans * i) % p;\n    return ans;\n}\nint main() {\n\
    \    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpt2vykoc8: /tmp/tmpt2vykoc8.cpp:11: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126938
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  assert(p > 0);\n  long res\
    \ = 1;\n  while (n > 0) {\n    if (n & 1) res = (res * p) % p;\n    n >>= 1;\n\
    \    p = (p * p) % p;\n  }\n  return res;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126938
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long ans = 1;\n    for(;\
    \ n > 0; n--)\n        ans = (ans * p) % p;\n    return ans;\n}\nint main() {\n\
    \    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpmtuun_dy: /tmp/tmpmtuun_dy.cpp:12: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126938
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    long\
    \ t;\n    while ((t = n & -p) != 0) {\n        r = r * t + (n & p);\n        n\
    \ ^= t;\n    }\n    return r;\n}\nint main() {\n    auto candidate = modp;\n \
    \   assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101)) ==\
    \ (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpyjct2t7a: /tmp/tmpyjct2t7a.cpp:15: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126938
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long ans = 1;\n    long\
    \ t = n;\n    long r = p;\n    while (r != 0) {\n        long q = r % p;\n   \
    \     ans = (ans * t) % p;\n        t = q;\n        r = r / p;\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpi23hw1lk: /tmp/tmpi23hw1lk.cpp:18: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126938
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n > 0) {\n        if (n & 1) res = (res * p) % p;\n        n >>= 1;\n     \
    \   p = (p * p) % p;\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126936
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n) {\n        if (n&1) res *= p;\n        n >>= 1;\n        p *= p;\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpj3h3b03_: /tmp/tmpj3h3b03_.cpp:15: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126936
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ (n) {\n        if ((n & 1) != 0) r += p;\n        n >>= 1;\n        p >>= 1;\n\
    \    }\n    return r;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmprrm5lbf_: /tmp/tmprrm5lbf_.cpp:15: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126938
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n > 0) {\n        if (n & 1)\n            res = (res * p) % p;\n        n >>=\
    \ 1;\n        p = (p * p) % p;\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126938
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ (n) {\n        if ((n&1) != 0) r = (r*p) % p;\n        n >>= 1;\n        p =\
    \ (p*p) % p;\n    }\n    return r;\n}\nint main() {\n    auto candidate = modp;\n\
    \    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101))\
    \ == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126938
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ (n) {\n        if ((n & 1) != 0) {\n            r = (r * p) % p;\n        }\n\
    \        n >>= 1;\n        p = (p * p) % p;\n    }\n    return r;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126936
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n) {\n        if (n & 1) res = (res*p) % p;\n        n >>= 1;\n        p =\
    \ (p*p) % p;\n    }\n    return res;\n}\nint main() {\n    auto candidate = modp;\n\
    \    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101))\
    \ == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126936
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    for(;\
    \ n > 0; --n) {\n        res *= p;\n        res %= p;\n    }\n    return res;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp_iih0lrz: /tmp/tmp_iih0lrz.cpp:14: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126938
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n > 0) {\n        if (n & 1)\n            res = (res * p) % p;\n        n >>=\
    \ 1;\n        p = (p * p) % p;\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126938
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    return ((n % p) + p) %\
    \ p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5))\
    \ == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmphlhhcxdi: /tmp/tmphlhhcxdi.cpp:10: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126938
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long ans = 1;\n    while\
    \ (n > p) {\n        ans = (ans * n) % p;\n        n = (n * n) % p;\n    }\n \
    \   return ans;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp9jeoj71j: /tmp/tmp9jeoj71j.cpp:14: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126938
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ (n) {\n        if ((n & 1) != 0) r = (r * p) % p;\n        n >>= 1;\n      \
    \  p = (p * p) % p;\n    }\n    return r;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126936
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    long\
    \ m = 1;\n    long t = 1;\n    long i = 1; // i is used to count the number of\
    \ times we loop\n    while (i <= n) {\n        long c = r * m % p;\n        r\
    \ = m;\n        m = t;\n        t = c;\n        i++;\n    }\n    return r;\n}\n\
    int main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpmxtghbf8: /tmp/tmpmxtghbf8.cpp:20: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126938
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n) {\n        if (n & 1)\n            res = (res * p) % p;\n        n >>= 1;\n\
    \        p = (p * p) % p;\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126938
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ (n) {\n        if ((n & 1) != 0)\n            r = (r * p) % p;\n        n >>=\
    \ 1;\n        p = (p * p) % p;\n    }\n    return r;\n}\nint main() {\n    auto\
    \ candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126938
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    long\
    \ m = 1;\n    long t = 1;\n    long i = 1; // i is used to count the number of\
    \ times we loop\n    while (i <= n) {\n        long m = m * i % p;\n        long\
    \ t = t * i;\n        i++;\n    }\n    return (r * t) % p;\n}\nint main() {\n\
    \    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp9n6xkffz: /tmp/tmp9n6xkffz.cpp:18: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126938
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ (n) {\n        if (n & 1) r = r * p;\n        n >>= 1;\n        p *= p;\n  \
    \  }\n    return r;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpchi8ty7y: /tmp/tmpchi8ty7y.cpp:15: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126936
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n) {\n        if (n & 1) res = (res*p) % p;\n        n >>= 1;\n        p =\
    \ (p*p) % p;\n    }\n    return res;\n}\nint main() {\n    auto candidate = modp;\n\
    \    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101))\
    \ == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126936
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n) {\n        if (n & 1) res = (res*p) % p;\n        n >>= 1;\n        p =\
    \ (p*p) % p;\n    }\n    return res;\n}\nint main() {\n    auto candidate = modp;\n\
    \    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101))\
    \ == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126936
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n > 0) {\n        if (n & 1) res = (res*p) % p;\n        n >>= 1;\n       \
    \ p = (p*p) % p;\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126938
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ (n) {\n        if ((n & 1) != 0) {\n            r = (r * p) % p;\n        }\n\
    \        n >>= 1;\n        p = (p * p) % p;\n    }\n    return r;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126936
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ (n) {\n        if (n & 1)\n            r = (r * p) % p;\n        n >>= 1;\n\
    \        p = (p * p) % p;\n    }\n    return r;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126938
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n > 0) {\n        if (n & 1) res = (res*p) % p;\n        n >>= 1;\n       \
    \ p = (p*p) % p;\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126938
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ (n) {\n        if ((n&1) != 0) r = (r*n) % p;\n        n >>= 1;\n    }\n   \
    \ return r;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpykcqf5q3: /tmp/tmpykcqf5q3.cpp:15: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126939
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n > p) {\n        res *= p;\n        n -= p;\n    }\n    return res * p;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpl12ronrb: /tmp/tmpl12ronrb.cpp:14: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126936
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    long\
    \ m = 1;\n    long t = 1;\n    long i = 1L;\n    long j = 1L;\n    long k = 1L;\n\
    \    long m = p;\n    long r = n;\n    long s = 1;\n    long t = 0;\n    long\
    \ j = 1;\n    long k = 1;\n    long m = p;\n    long r = n;\n    long s = 1;\n\
    \    long t = 0;\n    long j = 1;\n    long k = 1;\n    long m = p;\n    long\
    \ r = n;\n    long s = 1;\n    long t = 0;\n    long j = 1;\n    long k = 1;\n\
    \    long m = p;\n    long r = n;\n    long s = 1;\n    long t = 0;\n    long\
    \ j = 1;\n    long k = 1;\n    long m = p;\n    long r = n;\n    long s = 1;\n\
    \    long t = 0;\n    long j = 1;\n    long k = 1;\n    long m = p;\n    long\
    \ r = n;\n    long s = 1;\n    long t = 0;\n    long j = 1;\n    long k = 1;\n\
    \    long m = p;\n    long r = n;\n    long s = 1;\n    long t = 0;\n    long\
    \ j = 1;\n    long k = 1;\n    long m = p;\n    long r = n;\n    long s = 1;\n\
    \    long t = 0;\n    long j = 1;\n    long k = 1;\n    long m = p;\n    long\
    \ r = n;\n    long s = 1;\n    long t = 0;\n    long j = 1;\n    long k = 1;\n\
    \    long m = p;\n    long r = n;\n    long s = 1;\n    long t = 0;\n    long\
    \ j = 1;\n    long k = 1;\n    long m = p;\n    long r = n;\n    long s = 1;\n\
    \    long t = 0;\n    long j = 1;\n    long k = 1;\n    long m = p;\n    long\
    \ r = n;\n    long s = 1;\n    long t = 0;\n    long j = 1;\n    long k = 1;\n\
    \    long m = p;\n    long r = n;\n    long s = 1;\n    long t = 0;\n    long\
    \ j = 1;\n    long k = 1;\n    long m = p;\n    long r = n;\n    long s = 1;\n\
    \    long t = 0;\n    long j = 1;\n    long k = 1;\n    long m = p;\n    long\
    \ r = n;\n    long s = 1;\n    long t = 0;\n    long j = 1;\n    long k = 1;\n\
    \    long m = p;\n    long r = n;\n    long s = 1;\n    long t = 0;\n    long\
    \ j = 1;\n    \n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp12ov3v00.cpp: In function \u2018long int modp(long int, long int)\u2019\
    :\n/tmp/tmp12ov3v00.cpp:11:10: error: redeclaration of \u2018long int m\u2019\n\
    \   11 |     long m = p;\n      |          ^\n/tmp/tmp12ov3v00.cpp:6:10: note:\
    \ \u2018long int m\u2019 previously declared here\n    6 |     long m = 1;\n \
    \     |          ^\n/tmp/tmp12ov3v00.cpp:12:10: error: redeclaration of \u2018\
    long int r\u2019\n   12 |     long r = n;\n      |          ^\n/tmp/tmp12ov3v00.cpp:5:10:\
    \ note: \u2018long int r\u2019 previously declared here\n    5 |     long r =\
    \ 1;\n      |          ^\n/tmp/tmp12ov3v00.cpp:14:10: error: redeclaration of\
    \ \u2018long int t\u2019\n   14 |     long t = 0;\n      |          ^\n/tmp/tmp12ov3v00.cpp:7:10:\
    \ note: \u2018long int t\u2019 previously declared here\n    7 |     long t =\
    \ 1;\n      |          ^\n/tmp/tmp12ov3v00.cpp:15:10: error: redeclaration of\
    \ \u2018long int j\u2019\n   15 |     long j = 1;\n      |          ^\n/tmp/tmp12ov3v00.cpp:9:10:\
    \ note: \u2018long int j\u2019 previously declared here\n    9 |     long j =\
    \ 1L;\n      |          ^\n/tmp/tmp12ov3v00.cpp:16:10: error: redeclaration of\
    \ \u2018long int k\u2019\n   16 |     long k = 1;\n      |          ^\n/tmp/tmp12ov3v00.cpp:10:10:\
    \ note: \u2018long int k\u2019 previously declared here\n   10 |     long k =\
    \ 1L;\n      |          ^\n/tmp/tmp12ov3v00.cpp:17:10: error: redeclaration of\
    \ \u2018long int m\u2019\n   17 |     long m = p;\n      |          ^\n/tmp/tmp12ov3v00.cpp:6:10:\
    \ note: \u2018long int m\u2019 previously declared here\n    6 |     long m =\
    \ 1;\n      |          ^\n/tmp/tmp12ov3v00.cpp:18:10: error: redeclaration of\
    \ \u2018long int r\u2019\n   18 |     long r = n;\n      |          ^\n/tmp/tmp12ov3v00.cpp:5:10:\
    \ note: \u2018long int r\u2019 previously declared here\n    5 |     long r =\
    \ 1;\n      |          ^\n/tmp/tmp12ov3v00.cpp:19:10: error: redeclaration of\
    \ \u2018long int s\u2019\n   19 |     long s = 1;\n      |          ^\n/tmp/tmp12ov3v00.cpp:13:10:\
    \ note: \u2018long int s\u2019 previously declared here\n   13 |     long s =\
    \ 1;\n      |          ^\n/tmp/tmp12ov3v00.cpp:20:10: error: redeclaration of\
    \ \u2018long int t\u2019\n   20 |     long t = 0;\n      |          ^\n/tmp/tmp12ov3v00."
  stdout: ''
  timestamp: 1660126939
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n > 0) {\n        if (n & 1)\n            res = (res * p) % p;\n        n >>=\
    \ 1;\n        p = (p * p) % p;\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126938
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long ans = 1;\n    while\
    \ (n > p) {\n        ans = (ans * (n - p)) % p;\n        n = (n - p) % p;\n  \
    \  }\n    return ans;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpjrnukr3k: /tmp/tmpjrnukr3k.cpp:14: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126939
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n) {\n        if (n & 1) res = (res*p) % p;\n        n >>= 1;\n        p =\
    \ (p*p) % p;\n    }\n    return res;\n}\nint main() {\n    auto candidate = modp;\n\
    \    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101))\
    \ == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126936
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ (n) {\n        if ((n & 1) != 0) {\n            r = (r * p) % p;\n        }\n\
    \        n >>= 1;\n        p = (p * p) % p;\n    }\n    return r;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126936
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    for(long\
    \ i = 2; i <= n; i++) res *= p;\n    res %= p;\n    return res;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmprglvcmho: /tmp/tmprglvcmho.cpp:12: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126939
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n > 0) {\n        if (n & 1) res = (res*p) % p;\n        n >>= 1;\n       \
    \ p = (p*p) % p;\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126938
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    for(long\
    \ i = 2; i <= n; ++i) {\n        res *= i;\n        res %= p;\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpf2qz0p8m: /tmp/tmpf2qz0p8m.cpp:14: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126939
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long ans = 1;\n    while\
    \ (n) {\n        if (n & 1)\n            ans = (ans * p) % p;\n        n >>= 1;\n\
    \        p = (p * p) % p;\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126939
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ (n) {\n        if ((n & 1) != 0) {\n            r = (r * p) % p;\n        }\n\
    \        n >>= 1;\n        p = (p * p) % p;\n    }\n    return r;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126936
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ (n) {\n        if ((n & 1) != 0) {\n            r = (r * p) % p;\n        }\n\
    \        n >>= 1;\n        p = (p * p) % p;\n    }\n    return r;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126936
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ (n) {\n        if (n & 1) r += p;\n        n >>= 1;\n        p *= p;\n    }\n\
    \    return r;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmppxc16_1k: /tmp/tmppxc16_1k.cpp:15: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126939
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while(n\
    \ > 0) {\n        res = (res*p) % p;\n        n /= p;\n    }\n    return res;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpw8ua6yir: /tmp/tmpw8ua6yir.cpp:14: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126939
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ (n) {\n        if ((n & 1) != 0) {\n            r = (r * p) % p;\n        }\n\
    \        n >>= 1;\n        p = (p * p) % p;\n    }\n    return r;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126936
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n > 0) {\n        if (n % 2 == 1) {\n            res = (res*p) % p;\n     \
    \   }\n        n /= 2;\n        p = (p*p) % p;\n    }\n    return res;\n}\nint\
    \ main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126939
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ (n) {\n        if ((n & 1) != 0) {\n            r = (r * p) % p;\n        }\n\
    \        n >>= 1;\n        p = (p * p) % p;\n    }\n    return r;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126936
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long ans = 1;\n    long\
    \ t = 1;\n    for(long i = 2; i <= n; i++) {\n        ans = (ans * i) % p;\n \
    \       t = (t * i) % p;\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp6ca05zt3: /tmp/tmp6ca05zt3.cpp:15: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126939
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ (n) {\n        if (n & 1) r = r * p;\n        n >>= 1;\n        p *= p;\n  \
    \  }\n    return r;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpchi8ty7y: /tmp/tmpchi8ty7y.cpp:15: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126936
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n > 0) {\n        if (n & 1) res = (res * p) % p;\n        n >>= 1;\n     \
    \   p = (p * p) % p;\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126936
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ (n) {\n        if ((n & 1) != 0) {\n            r = (r * p) % p;\n        }\n\
    \        n >>= 1;\n        p = (p * p) % p;\n    }\n    return r;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126936
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ (n) {\n        if ((n & 1) != 0) {\n            r = (r * p) % p;\n        }\n\
    \        n >>= 1;\n        p = (p * p) % p;\n    }\n    return r;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126936
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ (p > 1) {\n        if (p & 1) r = r * n % p;\n        p >>= 1;\n        n >>=\
    \ 1;\n    }\n    return r;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpop2xcck3: /tmp/tmpop2xcck3.cpp:16: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126939
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n) {\n        if (n & 1) res = (res * p) % p;\n        n >>= 1;\n        p\
    \ = (p * p) % p;\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126939
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ (n) {\n        if (n & 1) r = r * p;\n        n >>= 1;\n        p *= p;\n  \
    \  }\n    return r;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpchi8ty7y: /tmp/tmpchi8ty7y.cpp:15: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126936
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n) {\n        if (n & 1) res = (res*p) % p;\n        n >>= 1;\n        p =\
    \ (p*p) % p;\n    }\n    return res;\n}\nint main() {\n    auto candidate = modp;\n\
    \    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101))\
    \ == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126936
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    for(;\
    \ n > 0; n--)\n        res = (res*p) % p;\n    return res;\n}\nint main() {\n\
    \    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpfrr4kx2t: /tmp/tmpfrr4kx2t.cpp:12: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126939
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n) {\n        if (n & 1)\n            res = (res * p) % p;\n        n >>= 1;\n\
    \        p = (p * p) % p;\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126938
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  assert(p > 0);\n  long q\
    \ = p / 2;\n  long r = p % 2;\n  long ans = 1;\n  while (q) {\n    ans = (ans\
    \ * n) % p;\n    q--;\n  }\n  return (ans * r) % p;\n}\nint main() {\n    auto\
    \ candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpx8r_rj9t: /tmp/tmpx8r_rj9t.cpp:17: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126939
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    for(;\
    \ n > 0; n--)\n        res = (res*p) % p;\n    return res;\n}\nint main() {\n\
    \    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpfrr4kx2t: /tmp/tmpfrr4kx2t.cpp:12: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126939
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    long\
    \ m = 1;\n    long t = 1;\n    while (n) {\n        if (n & 1) r += p;\n     \
    \   m += t;\n        t *= p;\n        n >>= 1;\n    }\n    return (r * m) % p;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpd7fw6580: /tmp/tmpd7fw6580.cpp:18: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126939
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n > 0) {\n        if (n & 1) res = (res*p) % p;\n        n >>= 1;\n       \
    \ p = (p*p) % p;\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126938
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n > 1) {\n        if (n & 1) res = (res*p) % p;\n        n >>= 1;\n       \
    \ p = (p*p) % p;\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp47qn6d19: /tmp/tmp47qn6d19.cpp:15: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126939
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    return ((n % p) + p) %\
    \ p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5))\
    \ == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmphlhhcxdi: /tmp/tmphlhhcxdi.cpp:10: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126938
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  long q = p / n;\n  long\
    \ r = p % n;\n  long t = q * q;\n  long u = t + q;\n  long v = (r * r + r) * q;\n\
    \  long w = u + v;\n  long x = r * w;\n  long y = r * v;\n  long z = r * u;\n\
    \  return (r + z + y + x) % p;\n}\nint main() {\n    auto candidate = modp;\n\
    \    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101))\
    \ == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp1banma82: /tmp/tmp1banma82.cpp:18: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126939
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n > 0) {\n        if (n & 1) res = (res * p) % p;\n        n >>= 1;\n     \
    \   p = (p * p) % p;\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126936
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n) {\n        if (n & 1) res *= p;\n        n >>= 1;\n        p *= p;\n   \
    \ }\n    return res;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmphqbalopt: /tmp/tmphqbalopt.cpp:15: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126936
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    return ((n % p) + p) %\
    \ p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5))\
    \ == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmphlhhcxdi: /tmp/tmphlhhcxdi.cpp:10: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126938
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n) {\n        if (n&1) res *= p;\n        n >>= 1;\n        p *= p;\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpj3h3b03_: /tmp/tmpj3h3b03_.cpp:15: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126936
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long ans = 1;\n    for(long\
    \ i = 2; i <= p; i++) ans *= i;\n    ans %= p;\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmptfrb03np: /tmp/tmptfrb03np.cpp:12: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126939
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ (n) {\n        if ((n & 1) != 0) {\n            r = (r * p) % p;\n        }\n\
    \        n >>= 1;\n        p = (p * p) % p;\n    }\n    return r;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126936
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    return ((n % p) + p) %\
    \ p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5))\
    \ == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmphlhhcxdi: /tmp/tmphlhhcxdi.cpp:10: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126938
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    long\
    \ m = 1;\n    long t = 1;\n    long i = 3;\n    while (i * i <= n) {\n       \
    \ if (n % i == 0) {\n            m += t;\n            t *= p;\n        }\n   \
    \     i += 2;\n    }\n    if (n != m) {\n        m %= p;\n    }\n    return m;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpcsd051ih: /tmp/tmpcsd051ih.cpp:23: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126939
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    return ((n % p) + p) %\
    \ p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5))\
    \ == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmphlhhcxdi: /tmp/tmphlhhcxdi.cpp:10: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126938
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ (n) {\n        if (n & 1)\n            r = (r * p) % p;\n        n >>= 1;\n\
    \        p = (p * p) % p;\n    }\n    return r;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126938
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ (n) {\n        if ((n & 1) != 0) {\n            r = (r * p) % p;\n        }\n\
    \        n >>= 1;\n        p = (p * p) % p;\n    }\n    return r;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126936
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n > 0) {\n        if (n & 1) res = (res * p) % p;\n        n >>= 1;\n     \
    \   p = (p * p) % p;\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126936
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long ans = 1;\n    while\
    \ (n > p) {\n        ans = (ans * n) % p;\n        n = (n * n) % p;\n    }\n \
    \   return ans;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp9jeoj71j: /tmp/tmp9jeoj71j.cpp:14: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126938
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n) {\n        if (n&1) res *= p;\n        n >>= 1;\n        p *= p;\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpj3h3b03_: /tmp/tmpj3h3b03_.cpp:15: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126936
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  assert(p > 0);\n  long r\
    \ = 1;\n  while (n) {\n    if (n & 1) r += p;\n    n >>= 1;\n    p >>= 1;\n  }\n\
    \  return r;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp_w9mzfkg: /tmp/tmp_w9mzfkg.cpp:16: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126939
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    for(long\
    \ i = 2; i <= n; i++) res *= p;\n    return res * p % p;\n}\nint main() {\n  \
    \  auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpsju94uf8: /tmp/tmpsju94uf8.cpp:11: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126936
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ (n) {\n        if ((n & 1) != 0) {\n            r = (r * p) % p;\n        }\n\
    \        n >>= 1;\n        p = (p * p) % p;\n    }\n    return r;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126936
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long ans = 1;\n    for(long\
    \ i = 2; i <= n; i++) {\n        ans = (ans * i) % p;\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpc_dt20xl: /tmp/tmpc_dt20xl.cpp:13: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126939
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (p > 1) {\n        if (n & p)\n            res = (res*p) % p;\n        p /=\
    \ 2;\n    }\n    return res;\n}\nint main() {\n    auto candidate = modp;\n  \
    \  assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101)) ==\
    \ (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp9e2kl3ev: /tmp/tmp9e2kl3ev.cpp:15: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126939
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (p > 1) {\n        if (n & p) {\n            res *= p;\n            n /= p;\n\
    \        }\n        p *= p;\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpw5tbseip: /tmp/tmpw5tbseip.cpp:17: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126939
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  assert(p > 0);\n  long res\
    \ = 1;\n  while (n > 1) {\n    if (n % 2 == 0) {\n      res = (res*p) % p;\n \
    \   }\n    n = n / 2;\n    p = (p*p) % p;\n  }\n  return res;\n}\nint main() {\n\
    \    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpf8pt2i2h: /tmp/tmpf8pt2i2h.cpp:18: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126941
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  long r = 1;\n  while (n)\
    \ {\n    if (n & 1) r *= p;\n    n >>= 1;\n    p *= p;\n  }\n  return r;\n}\n\
    int main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpmmvzz8x4: /tmp/tmpmmvzz8x4.cpp:15: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126941
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n) {\n        if (n & 1) res = (res*p) % p;\n        n >>= 1;\n        p =\
    \ (p*p) % p;\n    }\n    return res;\n}\nint main() {\n    auto candidate = modp;\n\
    \    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101))\
    \ == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126936
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    for(long\
    \ i = 2; i <= n; i++) res *= p;\n    return res * p % p;\n}\nint main() {\n  \
    \  auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpsju94uf8: /tmp/tmpsju94uf8.cpp:11: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126936
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n) {\n        if (n & 1) res = (res*p) % p;\n        n >>= 1;\n        p =\
    \ (p*p) % p;\n    }\n    return res;\n}\nint main() {\n    auto candidate = modp;\n\
    \    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101))\
    \ == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126936
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    return ((n % p) + p) %\
    \ p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5))\
    \ == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmphlhhcxdi: /tmp/tmphlhhcxdi.cpp:10: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126938
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long ans = 1;\n    while\
    \ (n) {\n        if (n&1) ans = (ans*p)%p;\n        n >>= 1;\n        p = (p*p)%p;\n\
    \    }\n    return ans;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126941
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n > 0) {\n        if (n & 1)\n            res = (res * p) % p;\n        n >>=\
    \ 1;\n        p = (p * p) % p;\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126938
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n) {\n        if (n&1) res = (res * p) % p;\n        n >>= 1;\n        p =\
    \ (p * p) % p;\n    }\n    return res;\n}\nint main() {\n    auto candidate =\
    \ modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126941
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    long\
    \ m = 1;\n    long t = 1;\n    long i = 3;\n    long j;\n    long k;\n    long\
    \ m = 1;\n    long r = 1;\n    long t = 1;\n    long i = 3;\n    long j;\n   \
    \ long k;\n    long m = 1;\n    long r = 1;\n    long t = 1;\n    long i = 3;\n\
    \    long j;\n    long k;\n    long m = 1;\n    long r = 1;\n    long t = 1;\n\
    \    long i = 3;\n    long j;\n    long k;\n    long m = 1;\n    long r = 1;\n\
    \    long t = 1;\n    long i = 3;\n    long j;\n    long k;\n    long m = 1;\n\
    \    long r = 1;\n    long t = 1;\n    long i = 3;\n    long j;\n    long k;\n\
    \    long m = 1;\n    long r = 1;\n    long t = 1;\n    long i = 3;\n    long\
    \ j;\n    long k;\n    long m = 1;\n    long r = 1;\n    long t = 1;\n    long\
    \ i = 3;\n    long j;\n    long k;\n    long m = 1;\n    long r = 1;\n    long\
    \ t = 1;\n    long i = 3;\n    long j;\n    long k;\n    long m = 1;\n    long\
    \ r = 1;\n    long t = 1;\n    long i = 3;\n    long j;\n    long k;\n    long\
    \ m = 1;\n    long r = 1;\n    long t = 1;\n    long i = 3;\n    long j;\n   \
    \ long k;\n    long m = 1;\n    long r = 1;\n    long t = 1;\n    long i = 3;\n\
    \    long j;\n    long k;\n    long m = 1;\n    long r = 1;\n    long t = 1;\n\
    \    long i = 3;\n    long j;\n    long k;\n    long m = 1;\n    long r = 1;\n\
    \    long t = 1;\n    long i = 3;\n    long j;\n    long k;\n    long m = 1;\n\
    \    long r = 1;\n    long t = 1;\n    long i = 3;\n    long j;\n    long k;\n\
    \    long m = 1;\n    long r = 1;\n    long t = 1;\n    long i = 3;\n    long\
    \ j;\n    long k;\n    long m = 1;\n    long r = 1;\n    long t = 1;\n    long\
    \ i = 3;\n    long j;\n    long k;\n    long m = 1;\n    long r = 1;\n    long\
    \ t = 1;\n    long i = 3;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpv5d_0rbe.cpp: In function \u2018long int modp(long int, long int)\u2019\
    :\n/tmp/tmpv5d_0rbe.cpp:11:10: error: redeclaration of \u2018long int m\u2019\n\
    \   11 |     long m = 1;\n      |          ^\n/tmp/tmpv5d_0rbe.cpp:6:10: note:\
    \ \u2018long int m\u2019 previously declared here\n    6 |     long m = 1;\n \
    \     |          ^\n/tmp/tmpv5d_0rbe.cpp:12:10: error: redeclaration of \u2018\
    long int r\u2019\n   12 |     long r = 1;\n      |          ^\n/tmp/tmpv5d_0rbe.cpp:5:10:\
    \ note: \u2018long int r\u2019 previously declared here\n    5 |     long r =\
    \ 1;\n      |          ^\n/tmp/tmpv5d_0rbe.cpp:13:10: error: redeclaration of\
    \ \u2018long int t\u2019\n   13 |     long t = 1;\n      |          ^\n/tmp/tmpv5d_0rbe.cpp:7:10:\
    \ note: \u2018long int t\u2019 previously declared here\n    7 |     long t =\
    \ 1;\n      |          ^\n/tmp/tmpv5d_0rbe.cpp:14:10: error: redeclaration of\
    \ \u2018long int i\u2019\n   14 |     long i = 3;\n      |          ^\n/tmp/tmpv5d_0rbe.cpp:8:10:\
    \ note: \u2018long int i\u2019 previously declared here\n    8 |     long i =\
    \ 3;\n      |          ^\n/tmp/tmpv5d_0rbe.cpp:15:10: error: redeclaration of\
    \ \u2018long int j\u2019\n   15 |     long j;\n      |          ^\n/tmp/tmpv5d_0rbe.cpp:9:10:\
    \ note: \u2018long int j\u2019 previously declared here\n    9 |     long j;\n\
    \      |          ^\n/tmp/tmpv5d_0rbe.cpp:16:10: error: redeclaration of \u2018\
    long int k\u2019\n   16 |     long k;\n      |          ^\n/tmp/tmpv5d_0rbe.cpp:10:10:\
    \ note: \u2018long int k\u2019 previously declared here\n   10 |     long k;\n\
    \      |          ^\n/tmp/tmpv5d_0rbe.cpp:17:10: error: redeclaration of \u2018\
    long int m\u2019\n   17 |     long m = 1;\n      |          ^\n/tmp/tmpv5d_0rbe.cpp:6:10:\
    \ note: \u2018long int m\u2019 previously declared here\n    6 |     long m =\
    \ 1;\n      |          ^\n/tmp/tmpv5d_0rbe.cpp:18:10: error: redeclaration of\
    \ \u2018long int r\u2019\n   18 |     long r = 1;\n      |          ^\n/tmp/tmpv5d_0rbe.cpp:5:10:\
    \ note: \u2018long int r\u2019 previously declared here\n    5 |     long r =\
    \ 1;\n      |          ^\n/tmp/tmpv5d_0rbe.cpp:19:10: error: redeclaration of\
    \ \u2018long int t\u2019\n   19 |     long t = 1;\n      |          ^\n/tmp/tmpv5d_0rbe.cpp:7:10:\
    \ note: \u2018"
  stdout: ''
  timestamp: 1660126941
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    for(long\
    \ i = 2; i <= p; i++) res *= i;\n    return n % res + p;\n}\nint main() {\n  \
    \  auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp7a1trv5_: /tmp/tmp7a1trv5_.cpp:11: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126941
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    long\
    \ q = n / p;\n    long r = n % p;\n    while (p > 1) {\n        if (p % 2 == 1)\
    \ {\n            res = (res * q) % p;\n        }\n        p /= 2;\n        q =\
    \ (q * q) % p;\n    }\n    return (res * q) % p;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp_awv76_t: /tmp/tmp_awv76_t.cpp:19: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126941
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ (n) {\n        if (n & 1) r = r * p;\n        n >>= 1;\n        p *= p;\n  \
    \  }\n    return r;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpchi8ty7y: /tmp/tmpchi8ty7y.cpp:15: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126936
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n) {\n        if (n&1) res *= p;\n        n >>= 1;\n        p *= p;\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpj3h3b03_: /tmp/tmpj3h3b03_.cpp:15: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126936
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ (n) {\n        if (n&1) r += p;\n        n >>= 1;\n        p *= p;\n    }\n\
    \    return r;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpalxm8skr: /tmp/tmpalxm8skr.cpp:15: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126941
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long ans = 1;\n    long\
    \ i = 1; // i is used to count the number of times n divides p.\n    while (i\
    \ <= n) {\n        ans = (ans * i) % p;\n        i++;\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpoodf1gue: /tmp/tmpoodf1gue.cpp:15: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126941
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    return ((n % p) + p) %\
    \ p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5))\
    \ == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmphlhhcxdi: /tmp/tmphlhhcxdi.cpp:10: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126938
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    return ((n % p) + p) %\
    \ p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5))\
    \ == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmphlhhcxdi: /tmp/tmphlhhcxdi.cpp:10: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126938
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  assert(p > 0);\n  long r\
    \ = 1;\n  while (n) {\n    if (n & 1) r = r * p;\n    n >>= 1;\n    p *= p;\n\
    \  }\n  return r;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpp53gpi8i: /tmp/tmpp53gpi8i.cpp:16: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126941
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ (n) {\n        if ((n & 1) != 0)\n            r = (r * p) % p;\n        n >>=\
    \ 1;\n        p = (p * p) % p;\n    }\n    return r;\n}\nint main() {\n    auto\
    \ candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126938
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long ans = 1;\n    while\
    \ (n > p) {\n        ans = (ans * n) % p;\n        n = (n * n) % p;\n    }\n \
    \   return ans;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp9jeoj71j: /tmp/tmp9jeoj71j.cpp:14: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126938
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n > 0) {\n        if (n & 1) res = (res * p) % p;\n        n >>= 1;\n     \
    \   p = (p * p) % p;\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126936
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ (n) {\n        if ((n & 1) != 0) {\n            r = (r * p) % p;\n        }\n\
    \        n >>= 1;\n        p = (p * p) % p;\n    }\n    return r;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126936
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    long\
    \ m = 1;\n    long t = 1;\n    long i = 1; // i is used to count the number of\
    \ iterations.\n    while ((r << i) <= n) {\n        r <<= i;\n        m <<= i;\n\
    \        t <<= i;\n        ++i;\n    }\n    while (p > 1) {\n        if (p & 1)\
    \ {\n            m ^= t;\n        }\n        p >>= 1;\n        t <<= 1;\n    }\n\
    \    return m % p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpwm_osx33: /tmp/tmpwm_osx33.cpp:26: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126941
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    for(long\
    \ i = 2; i <= p; i++) res *= i;\n    return n % res + res;\n}\nint main() {\n\
    \    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpgswru8n7: /tmp/tmpgswru8n7.cpp:11: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126936
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ (p > 1) {\n        if (p & 1) r = r * n % p;\n        p >>= 1;\n        n >>=\
    \ 1;\n    }\n    return r;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpop2xcck3: /tmp/tmpop2xcck3.cpp:16: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126939
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ (n) {\n        if (n & 1)\n            r = (r * p) % p;\n        n >>= 1;\n\
    \        p = (p * p) % p;\n    }\n    return r;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126938
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ (n) {\n        if (n & 1) r = (r * p) % p;\n        n >>= 1;\n        p = (p\
    \ * p) % p;\n    }\n    return r;\n}\nint main() {\n    auto candidate = modp;\n\
    \    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101))\
    \ == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126936
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n > 0) {\n        if (n & 1)\n            res = (res * p) % p;\n        n >>=\
    \ 1;\n        p = (p * p) % p;\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126938
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n > p) {\n        if (n & 1)\n            res = (res * p) % p;\n        n >>=\
    \ 1;\n        p = (p * p) % p;\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpd0s3b5l9: /tmp/tmpd0s3b5l9.cpp:16: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126941
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long ans = 1;\n    long\
    \ t = 1;\n    long r = n;\n    long m = 1;\n    while (m <= p) {\n        ans\
    \ = (ans * t) % p;\n        t = (t * r) % p;\n        m = (m * r) % p;\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660126946
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    for(long\
    \ i = 2; i <= n; i++){\n        res *= i;\n        res %= p;\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpdhpa_drp: /tmp/tmpdhpa_drp.cpp:14: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126941
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ (n) {\n        if ((n & 1) != 0) {\n            r = (r * p) % p;\n        }\n\
    \        n >>= 1;\n        p = (p * p) % p;\n    }\n    return r;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126936
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ (n) {\n        if ((n & 1) != 0) {\n            r = (r * p) % p;\n        }\n\
    \        n >>= 1;\n        p = (p * p) % p;\n    }\n    return r;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126936
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    return ((n % p) + p) %\
    \ p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5))\
    \ == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmphlhhcxdi: /tmp/tmphlhhcxdi.cpp:10: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126938
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long ans = 1;\n    while\
    \ (n > p) {\n        ans = (ans * n) % p;\n        n = (n * n) % p;\n    }\n \
    \   return ans;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp9jeoj71j: /tmp/tmp9jeoj71j.cpp:14: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126938
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    return ((n % p) + p) %\
    \ p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5))\
    \ == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmphlhhcxdi: /tmp/tmphlhhcxdi.cpp:10: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126938
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    for(long\
    \ i = 2; i <= p; i++) res *= i;\n    return n % res + res;\n}\nint main() {\n\
    \    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpgswru8n7: /tmp/tmpgswru8n7.cpp:11: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126936
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ (n) {\n        if (n & 1) r = r * p;\n        n >>= 1;\n        p *= p;\n  \
    \  }\n    return r;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpchi8ty7y: /tmp/tmpchi8ty7y.cpp:15: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126936
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    for(;\
    \ n > 0; n /= p)\n        res *= p;\n    return res * p;\n}\nint main() {\n  \
    \  auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpw1mjohof: /tmp/tmpw1mjohof.cpp:12: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126938
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n > 0) {\n        if (n & 1)\n            res = (res * p) % p;\n        n >>=\
    \ 1;\n        p = (p * p) % p;\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126938
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n) {\n        if (n & 1)\n            res = (res * p) % p;\n        n >>= 1;\n\
    \        p = (p * p) % p;\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126938
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    for(long\
    \ i = 2; i <= p; i++) res *= i;\n    res %= p;\n    return res;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpdcxikllt: /tmp/tmpdcxikllt.cpp:12: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126941
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n) {\n        if (n&1) res = (res * p) % p;\n        n >>= 1;\n        p =\
    \ (p * p) % p;\n    }\n    return res;\n}\nint main() {\n    auto candidate =\
    \ modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126941
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n > p) {\n        res *= p;\n        n -= p;\n    }\n    return res * p % p;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp01ghd_i5: /tmp/tmp01ghd_i5.cpp:14: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126941
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while(n\
    \ > p) {\n        res *= p;\n        n -= p;\n    }\n    return res * p;\n}\n\
    int main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpk6i32cqy: /tmp/tmpk6i32cqy.cpp:14: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126941
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    return ((n % p) + p) %\
    \ p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5))\
    \ == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmphlhhcxdi: /tmp/tmphlhhcxdi.cpp:10: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126938
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    for(long\
    \ i = 2; i <= n; i++) res *= p;\n    return res * p % p;\n}\nint main() {\n  \
    \  auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpsju94uf8: /tmp/tmpsju94uf8.cpp:11: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126936
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  long q = p / n;\n  long\
    \ r = p % n;\n  long s = q * q;\n  long t = r * r;\n  long u = (t + q + s) % p;\n\
    \  return u;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpxazlsnpr: /tmp/tmpxazlsnpr.cpp:14: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126941
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long ans = 1;\n    long\
    \ i = 1; // i is used to count how many times we multiply by 2\n    while (i <\
    \ n) {\n        ans = (ans * 2) % p;\n        i++;\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpaqibkjyd: /tmp/tmpaqibkjyd.cpp:15: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126941
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ (n) {\n        if ((n & 1) != 0) r += p;\n        n >>= 1;\n        p *= p;\n\
    \    }\n    return r;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpj2x9x0um: /tmp/tmpj2x9x0um.cpp:15: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126941
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n) {\n        if (n & 1) res *= p;\n        n >>= 1;\n        p *= p;\n   \
    \ }\n    return res;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmphqbalopt: /tmp/tmphqbalopt.cpp:15: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126936
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ (n) {\n        if ((n & 1) != 0) r *= p;\n        n >>= 1;\n        p *= p;\n\
    \    }\n    return r;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp56_hduyx: /tmp/tmp56_hduyx.cpp:15: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126941
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n > p) {\n        res *= p;\n        n -= p;\n    }\n    return res * p;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpl12ronrb: /tmp/tmpl12ronrb.cpp:14: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126936
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    for(long\
    \ i = 2; i <= n; i++) res *= p;\n    res %= p;\n    return res;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmprglvcmho: /tmp/tmprglvcmho.cpp:12: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126939
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ (n) {\n        if ((n & 1) != 0) {\n            r = (r * p) % p;\n        }\n\
    \        n >>= 1;\n        p = (p * p) % p;\n    }\n    return r;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126936
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    for(long\
    \ i = 2; i <= p; i++) {\n        res *= i;\n        if(res > n)\n            res\
    \ = n - res;\n    }\n    return res;\n}\nint main() {\n    auto candidate = modp;\n\
    \    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101))\
    \ == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpa6x15r4m: /tmp/tmpa6x15r4m.cpp:15: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126941
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ (n) {\n        if ((n & 1) != 0) r *= p;\n        n >>= 1;\n        p *= p;\n\
    \    }\n    return r;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp56_hduyx: /tmp/tmp56_hduyx.cpp:15: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126941
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n) {\n        if (n & 1)\n            res = (res * p) % p;\n        n >>= 1;\n\
    \        p = (p * p) % p;\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126938
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ (n) {\n        if ((n & 1) != 0) {\n            r = (r * p) % p;\n        }\n\
    \        n >>= 1;\n        p = (p * p) % p;\n    }\n    return r;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126936
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ (n) {\n        if (n&1) r += p;\n        n >>= 1;\n        p *= p;\n    }\n\
    \    return r;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpalxm8skr: /tmp/tmpalxm8skr.cpp:15: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126941
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    return ((n % p) + p) %\
    \ p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5))\
    \ == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmphlhhcxdi: /tmp/tmphlhhcxdi.cpp:10: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126938
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  long r = 1;\n  while (n)\
    \ {\n    if (n & 1) r = r * p;\n    n >>= 1;\n    p *= p;\n  }\n  return r;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpbhhey890: /tmp/tmpbhhey890.cpp:15: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126936
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n != 0) {\n        if (n & 1) res = (res * p) % p;\n        n >>= 1;\n    \
    \    p = (p * p) % p;\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126941
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    long\
    \ i = 1; // i is used to store p\n    while(i < n) {\n        res *= p;\n    \
    \    res %= p;\n        i++;\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpuj7f_hay: /tmp/tmpuj7f_hay.cpp:16: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126942
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ (n) {\n        if ((n & 1) != 0) {\n            r = (r * p) % p;\n        }\n\
    \        n >>= 1;\n        p = (p * p) % p;\n    }\n    return r;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126936
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    return ((n % p) + p) %\
    \ p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5))\
    \ == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmphlhhcxdi: /tmp/tmphlhhcxdi.cpp:10: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126938
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ (n) {\n        if ((n & 1) != 0) {\n            r = (r * p) % p;\n        }\n\
    \        n >>= 1;\n        p = (p * p) % p;\n    }\n    return r;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126936
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long ans = 1;\n    long\
    \ r = n;\n    long t;\n    while (r != 0) {\n        t = r / p;\n        ans =\
    \ (ans * t) % p;\n        r = t;\n    }\n    return ans;\n}\nint main() {\n  \
    \  auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpgwisl9jw: /tmp/tmpgwisl9jw.cpp:17: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126942
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    long\
    \ m = 1;\n    long t = 1;\n    long i = 1; // i is used to avoid a gcc warning\
    \ about unused i\n    long j = 1;\n    long k = 1;\n    long t = 1;\n    long\
    \ m = 1;\n    long r = 1;\n    long m = 1;\n    long t = 1;\n    long m = 1;\n\
    \    long r = 1;\n    long m = 1;\n    long t = 1;\n    long m = 1;\n    long\
    \ r = 1;\n    long m = 1;\n    long t = 1;\n    long m = 1;\n    long r = 1;\n\
    \    long m = 1;\n    long t = 1;\n    long m = 1;\n    long r = 1;\n    long\
    \ m = 1;\n    long t = 1;\n    long m = 1;\n    long r = 1;\n    long m = 1;\n\
    \    long t = 1;\n    long m = 1;\n    long r = 1;\n    long m = 1;\n    long\
    \ t = 1;\n    long m = 1;\n    long r = 1;\n    long m = 1;\n    long t = 1;\n\
    \    long m = 1;\n    long r = 1;\n    long m = 1;\n    long t = 1;\n    long\
    \ m = 1;\n    long r = 1;\n    long m = 1;\n    long t = 1;\n    long m = 1;\n\
    \    long r = 1;\n    long m = 1;\n    long t = 1;\n    long m = 1;\n    long\
    \ r = 1;\n    long m = 1;\n    long t = 1;\n    long m = 1;\n    long r = 1;\n\
    \    long m = 1;\n    long t = 1;\n    long m = 1;\n    long r = 1;\n    long\
    \ m = 1;\n    long t = 1;\n    long m = 1;\n    long r = 1;\n    long m = 1;\n\
    \    long t = 1;\n    long m = 1;\n    long r = 1;\n    long m = 1;\n    long\
    \ t = 1;\n    long m = 1;\n    long r = 1;\n    long m = 1;\n    long t = 1;\n\
    \    long m = 1;\n    long r = 1;\n    long m = 1;\n    long t = 1;\n    long\
    \ m = 1;\n    long r = 1;\n    long m = 1;\n    long t = 1;\n    long m = 1;\n\
    \    long r = 1;\n    long m = 1;\n    long t = 1;\n    long m = 1;\n    long\
    \ r = 1;\n    long m = 1;\n    long t = 1;\n    long m = 1;\n    long r = 1;\n\
    \    long m = 1;\n    long t = 1;\n    long m = 1;\n    long r = 1;\n    long\
    \ m = 1;\n    long t = 1;\n    long m = 1;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgy48kw0v.cpp: In function \u2018long int modp(long int, long int)\u2019\
    :\n/tmp/tmpgy48kw0v.cpp:11:10: error: redeclaration of \u2018long int t\u2019\n\
    \   11 |     long t = 1;\n      |          ^\n/tmp/tmpgy48kw0v.cpp:7:10: note:\
    \ \u2018long int t\u2019 previously declared here\n    7 |     long t = 1;\n \
    \     |          ^\n/tmp/tmpgy48kw0v.cpp:12:10: error: redeclaration of \u2018\
    long int m\u2019\n   12 |     long m = 1;\n      |          ^\n/tmp/tmpgy48kw0v.cpp:6:10:\
    \ note: \u2018long int m\u2019 previously declared here\n    6 |     long m =\
    \ 1;\n      |          ^\n/tmp/tmpgy48kw0v.cpp:13:10: error: redeclaration of\
    \ \u2018long int r\u2019\n   13 |     long r = 1;\n      |          ^\n/tmp/tmpgy48kw0v.cpp:5:10:\
    \ note: \u2018long int r\u2019 previously declared here\n    5 |     long r =\
    \ 1;\n      |          ^\n/tmp/tmpgy48kw0v.cpp:14:10: error: redeclaration of\
    \ \u2018long int m\u2019\n   14 |     long m = 1;\n      |          ^\n/tmp/tmpgy48kw0v.cpp:6:10:\
    \ note: \u2018long int m\u2019 previously declared here\n    6 |     long m =\
    \ 1;\n      |          ^\n/tmp/tmpgy48kw0v.cpp:15:10: error: redeclaration of\
    \ \u2018long int t\u2019\n   15 |     long t = 1;\n      |          ^\n/tmp/tmpgy48kw0v.cpp:7:10:\
    \ note: \u2018long int t\u2019 previously declared here\n    7 |     long t =\
    \ 1;\n      |          ^\n/tmp/tmpgy48kw0v.cpp:16:10: error: redeclaration of\
    \ \u2018long int m\u2019\n   16 |     long m = 1;\n      |          ^\n/tmp/tmpgy48kw0v.cpp:6:10:\
    \ note: \u2018long int m\u2019 previously declared here\n    6 |     long m =\
    \ 1;\n      |          ^\n/tmp/tmpgy48kw0v.cpp:17:10: error: redeclaration of\
    \ \u2018long int r\u2019\n   17 |     long r = 1;\n      |          ^\n/tmp/tmpgy48kw0v.cpp:5:10:\
    \ note: \u2018long int r\u2019 previously declared here\n    5 |     long r =\
    \ 1;\n      |          ^\n/tmp/tmpgy48kw0v.cpp:18:10: error: redeclaration of\
    \ \u2018long int m\u2019\n   18 |     long m = 1;\n      |          ^\n/tmp/tmpgy48kw0v.cpp:6:10:\
    \ note: \u2018long int m\u2019 previously declared here\n    6 |     long m =\
    \ 1;\n      |          ^\n/tmp/tmpgy48kw0v.cpp:19:10: error: redeclaration of\
    \ \u2018long int t\u2019\n   19 |     long t = 1;\n      |          ^\n/tmp/tmpgy48kw0v.cpp:"
  stdout: ''
  timestamp: 1660126942
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n > 0) {\n        if (n & 1)\n            res = (res * p) % p;\n        n >>=\
    \ 1;\n        p = (p * p) % p;\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126938
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n) {\n        if (n & 1)\n            res = (res * p) % p;\n        n >>= 1;\n\
    \        p = (p * p) % p;\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126938
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  assert(p > 0);\n  long q\
    \ = p / 2;\n  long r = p % 2;\n  long ans = 1;\n  while (q) {\n    ans = (ans\
    \ * n) % p;\n    q--;\n  }\n  return (r * ans) % p;\n}\nint main() {\n    auto\
    \ candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpjzg5h5pw: /tmp/tmpjzg5h5pw.cpp:17: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126942

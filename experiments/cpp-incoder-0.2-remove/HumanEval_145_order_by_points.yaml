name: HumanEval_145_order_by_points
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function which sorts\
  \ the given list of integers\n// in ascending order according to the sum of their\
  \ digits.\n// Note: if there are several items with similar sum of their digits,\n\
  // order them based on their index in original list.\n// For example:\nstd::vector<long>\
  \ order_by_points(std::vector<long> nums) {\n"
tests: "}\nint main() {\n    auto candidate = order_by_points;\n    assert(candidate((std::vector<long>({(long)1,\
  \ (long)11, (long)-1, (long)-11, (long)-12}))) == (std::vector<long>({(long)-1,\
  \ (long)-11, (long)1, (long)-12, (long)11})));\n    assert(candidate((std::vector<long>({(long)1234,\
  \ (long)423, (long)463, (long)145, (long)2, (long)423, (long)423, (long)53, (long)6,\
  \ (long)37, (long)3457, (long)3, (long)56, (long)0, (long)46}))) == (std::vector<long>({(long)0,\
  \ (long)2, (long)3, (long)6, (long)53, (long)423, (long)423, (long)423, (long)1234,\
  \ (long)145, (long)37, (long)46, (long)56, (long)463, (long)3457})));\n    assert(candidate((std::vector<long>()))\
  \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
  \ (long)-11, (long)-32, (long)43, (long)54, (long)-98, (long)2, (long)-3}))) ==\
  \ (std::vector<long>({(long)-3, (long)-32, (long)-98, (long)-11, (long)1, (long)2,\
  \ (long)43, (long)54})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
  \ (long)3, (long)4, (long)5, (long)6, (long)7, (long)8, (long)9, (long)10, (long)11})))\
  \ == (std::vector<long>({(long)1, (long)10, (long)2, (long)11, (long)3, (long)4,\
  \ (long)5, (long)6, (long)7, (long)8, (long)9})));\n    assert(candidate((std::vector<long>({(long)0,\
  \ (long)6, (long)6, (long)-76, (long)-21, (long)23, (long)4}))) == (std::vector<long>({(long)-76,\
  \ (long)-21, (long)0, (long)4, (long)23, (long)6, (long)6})));\n}\n"
completions: ["    std::vector<long> nums_copy;\n    nums_copy.assign(nums.begin(),\
    \ nums.end());\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long\
    \ b){\n        return a + b < b;\n    });\n    return nums_copy;", "    // Write\
    \ your code here\n    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){return a+b<b;});\n    return nums_copy;",
  "    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(),\
    \ [](long a, long b){return a+b<b;});\n    return nums_copy;", "    std::vector<long>\
    \ sorted_nums(nums.size());\n    long sum = 0;\n    for (long i : nums) {\n  \
    \      sum += i;\n        sorted_nums[sum - i] = i;\n    }\n    return sorted_nums;",
  "    std::vector<long> numsCopy(nums);\n    std::sort(numsCopy.begin(), numsCopy.end(),\
    \ [](long a, long b){\n        return a + b < b;\n    });\n    return numsCopy;",
  "    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(),\
    \ [](long a, long b) {\n        return a + b < 0;\n    });\n    return nums_copy;",
  "    // Write your code here\n    std::vector<long> nums2;\n    long sum = 0;\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n     \
    \   nums2.push_back(nums[i]);\n    }\n    std::sort(nums2.begin(), nums2.end(),\
    \ [&sum](long a, long b){return sum - a + b < sum - b + a;});\n    return nums2;",
  "    std::vector<long> nums_copy = nums;\n    sort(nums_copy.begin(), nums_copy.end());\n\
    \    long sum = 0;\n    for (long i : nums_copy) {\n        sum += i;\n    }\n\
    \    std::vector<long> nums_sorted_by_sum;\n    for (long i : nums_copy) {\n \
    \       if (sum == i) {\n            nums_sorted_by_sum.push_back(i);\n      \
    \  }\n    }\n    return nums_sorted_by_sum;", "    // Write your code here\n \
    \   long sum = 0;\n    long max_sum = 0;\n    long max_index = 0;\n    for (long\
    \ i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum > max_sum)\
    \ {\n            max_sum = sum;\n            max_index = i;\n        }\n    }\n\
    \    std::vector<long> result;\n    for (long i = 0; i < nums.size(); i++) {\n\
    \        if (i == max_index) {\n            result.push_back(nums[i]);\n     \
    \   }\n    }\n    return result;", "    std::vector<long> nums_copy = nums;\n\
    \    std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b){\n     \
    \   return std::abs(a - b) < 10;\n    });\n    return nums_copy;", '    // TODO:
    Write your code here', "    std::vector<long> nums_copy(nums);\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){\n        return a + b < b;\n    });\n \
    \   return nums_copy;", "    // Write your code here\n    std::vector<long> nums_copy\
    \ = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b){\n\
    \        return a + b < b;\n    });\n    return nums_copy;", "    // TODO: your\
    \ code here\n    std::vector<long> nums2;\n    long sum = 0;\n    for (long i\
    \ = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        nums2.push_back(sum);\n\
    \    }\n    std::sort(nums2.begin(), nums2.end());\n    return nums2;", "    std::vector<long>\
    \ nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long\
    \ a, long b) {\n        return a + b < 0;\n    });\n    return nums_copy;", " \
    \   std::vector<long> result;\n    long long sum = 0;\n    for (long long i :\
    \ nums) {\n        sum += i;\n        result.push_back(i);\n    }\n    std::sort(result.begin(),\
    \ result.end(), [&sum](int i, int j) {\n        return sum - j;\n    });\n   \
    \ return result;", "    std::vector<long> numsCopy(nums);\n    std::sort(numsCopy.begin(),\
    \ numsCopy.end(), [](long a, long b){\n        return a + b < b;\n    });\n  \
    \  return numsCopy;", "    std::vector<long> nums_copy = nums;\n    sort(nums_copy.begin(),\
    \ nums_copy.end());\n    std::vector<long> nums_sorted_by_points;\n    for (long\
    \ i = 0; i < nums.size(); i++) {\n        long sum = 0;\n        for (long j =\
    \ 0; j < nums.size(); j++) {\n            if (i == j) continue;\n            sum\
    \ += nums[j];\n        }\n        if (sum == nums[i]) {\n            nums_sorted_by_points.push_back(nums[i]);\n\
    \        }\n    }\n    return nums_sorted_by_points;", "    std::vector<long>\
    \ nums_copy(nums);\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long\
    \ a, long b){\n        return a + b < b;\n    });\n    return nums_copy;", " \
    \   // TODO: Write your code here\n    std::vector<long> nums_copy = nums;\n \
    \   std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b){\n      \
    \  return a + b < b;\n    });\n    return nums_copy;", "    std::vector<long>\
    \ numsSorted(nums.size());\n    std::iota(numsSorted.begin(), numsSorted.end(),\
    \ 0);\n    std::sort(numsSorted.begin(), numsSorted.end(), [&nums](long a, long\
    \ b) -> bool {\n        return nums[a] + nums[b] < nums[a] + nums[b];\n    });\n\
    \    return numsSorted;", "    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){\n        return a + b < b;\n    });\n \
    \   return nums_copy;", "    std::vector<long> nums_copy(nums);\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){\n        return a + b < b;\n    });\n \
    \   return nums_copy;", "    std::vector<long> nums_copy = nums;\n    long sum\
    \ = 0;\n    for (auto &i : nums_copy) {\n        sum += i;\n    }\n    std::vector<long>\
    \ nums_sorted_by_sum;\n    for (auto &i : nums_copy) {\n        if (sum == i)\
    \ {\n            nums_sorted_by_sum.push_back(i);\n        }\n    }\n    long\
    \ max_sum = 0;\n    for (auto &i : nums_sorted_by_sum) {\n        max_sum = std::max(max_sum,\
    \ i);\n    }\n    std::vector<long> nums_sorted_by_max_sum;\n    for (auto &i\
    \ : nums_sorted_by_sum) {\n        if (max_sum == i) {\n            nums_sorted_by_max_sum.push_back(i);\n\
    \        }\n    }\n    return nums_sorted_by_max_sum;", "    // Write your code\
    \ here\n    long sum = 0;\n    std::vector<long> nums_sorted;\n    for (long i\
    \ : nums) {\n        sum += i;\n        nums_sorted.push_back(i);\n    }\n   \
    \ std::sort(nums_sorted.begin(), nums_sorted.end(), [&sum](long a, long b){\n\
    \        return sum - a + b < sum - b + a;\n    });\n    return nums_sorted;",
  "    // Write your code here\n    std::vector<long> nums_copy = nums;\n    long\
    \ sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum += nums_copy[i];\n\
    \    }\n    long max_sum = 0;\n    long max_index = 0;\n    for (long i = 0; i\
    \ < nums.size(); i++) {\n        if (sum == max_sum) {\n            max_index\
    \ = i;\n        }\n        if (sum < max_sum) {\n            max_sum = sum;\n\
    \        }\n    }\n    std::vector<long> result;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        if (i == max_index) {\n            result.push_back(nums[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> nums_copy = nums;\n\
    \    std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b){\n     \
    \   return std::abs(a - b) < std::abs(a - b) * 10;\n    });\n    return nums_copy;",
  "    std::vector<long> sorted_nums;\n    long sum = 0;\n    for (long num : nums)\
    \ {\n        sum += num;\n        sorted_nums.push_back(sum);\n    }\n    std::sort(sorted_nums.begin(),\
    \ sorted_nums.end());\n    return sorted_nums;", "    std::vector<long> numsSorted(nums.size());\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        numsSorted[i] = nums[i];\n\
    \    }\n    std::sort(numsSorted.begin(), numsSorted.end(), [](long a, long b){\n\
    \        return a + b < b;\n    });\n    return numsSorted;", "    std::vector<long>\
    \ nums_copy(nums);\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long\
    \ a, long b){\n        return a + b < b;\n    });\n    return nums_copy;", " \
    \   std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(),\
    \ [](long a, long b){\n        return a + b < b;\n    });\n    return nums_copy;",
  "    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(),\
    \ [](long a, long b){\n        return a + b < b;\n    });\n    return nums_copy;",
  "    std::vector<long> nums_copy;\n    nums_copy.insert(nums_copy.end(), nums.begin(),\
    \ nums.end());\n    sort(nums_copy.begin(), nums_copy.end(), [](long a, long b){return\
    \ a+b<b;});\n    return nums_copy;", "    std::vector<long> numsSorted(nums.size());\n\
    \    long sum = 0;\n    for (long &num : nums) {\n        sum += num;\n      \
    \  numsSorted[sum - num] = num;\n    }\n    return numsSorted;", "    std::vector<long>\
    \ nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long\
    \ a, long b){\n        return a + b < b;\n    });\n    return nums_copy;", " \
    \   // Write your code here\n    std::vector<long> nums2;\n    long sum = 0;\n\
    \    for (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n \
    \   }\n    long max = 0;\n    for (long i : nums2) {\n        if (sum > max) {\n\
    \            max = sum;\n        }\n        sum += i;\n    }\n    std::vector<long>\
    \ nums3;\n    for (long i : nums2) {\n        if (sum == max) {\n            nums3.push_back(i);\n\
    \        }\n    }\n    return nums3;", "    // Write your code here\n    long\
    \ sum = 0;\n    std::vector<long> result;\n    for(auto &num: nums) {\n      \
    \  sum += num;\n        result.push_back(sum);\n    }\n    std::sort(result.begin(),\
    \ result.end());\n    return result;", "    // Write your code here\n    long\
    \ sum = 0;\n    long index = 0;\n    long temp = 0;\n    std::vector<long> ans;\n\
    \    for (auto i : nums) {\n        sum += i;\n        if (sum > 10) {\n     \
    \       sum -= 10;\n            index++;\n        }\n    }\n    for (auto i :\
    \ nums) {\n        if (sum == i) {\n            ans.push_back(index);\n      \
    \  }\n    }\n    return ans;", '    // TODO: Write your code here', "    // TODO:\
    \ Write your code here\n    long sum = 0;\n    for(long i : nums)\n        sum\
    \ += i;\n    std::vector<long> ans;\n    for(long i : nums)\n    {\n        if(sum\
    \ == i)\n            ans.push_back(i);\n    }\n    for(long i : ans)\n    {\n\
    \        for(long j : ans)\n        {\n            if(i + j == sum)\n        \
    \    {\n                std::swap(ans[j], ans[i]);\n            }\n        }\n\
    \    }\n    return ans;", "    // TODO: Write your code here\n    long sum = 0;\n\
    \    std::vector<long> sorted_nums;\n    for (long num : nums) {\n        sum\
    \ += num;\n        sorted_nums.push_back(sum);\n    }\n    std::sort(sorted_nums.begin(),\
    \ sorted_nums.end());\n    return sorted_nums;", "    std::vector<long> nums_copy\
    \ = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b){return\
    \ a+b<b;});\n    return nums_copy;", "    // TODO: your code here\n    long sum\
    \ = 0;\n    for(long i : nums) {\n        sum += i;\n    }\n    std::vector<long>\
    \ result;\n    for(long i : nums) {\n        if(sum == i) {\n            result.push_back(i);\n\
    \        }\n    }\n    for(long i : result) {\n        std::cout << i << \" \"\
    ;\n    }\n    std::cout << std::endl;\n    return result;", "    // Write your\
    \ code here\n    std::vector<long> nums2;\n    long sum = 0;\n    for (long i\
    \ : nums) {\n        sum += i;\n        nums2.push_back(i);\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end(), [&sum](long a, long b) {\n        return sum - a + b < sum - b\
    \ + a;\n    });\n    return nums2;", "    // Write your code here\n    std::vector<long>\
    \ nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long\
    \ a, long b){\n        return a + b < b;\n    });\n    return nums_copy;", " \
    \   std::vector<long> nums_copy(nums);\n    std::sort(nums_copy.begin(), nums_copy.end(),\
    \ [](long a, long b){\n        return a + b < b;\n    });\n    return nums_copy;",
  "    std::vector<long> nums_copy = nums;\n    sort(nums_copy.begin(), nums_copy.end(),\
    \ [](long a, long b) {\n        return a + b < 0;\n    });\n    return nums_copy;",
  '    // Your code here', "    // Write your code here\n    long sum = 0;\n    for(long\
    \ i : nums)\n    {\n        sum += i;\n    }\n    std::vector<long> ans;\n   \
    \ for(long i : nums)\n    {\n        if(sum == i)\n        {\n            ans.push_back(i);\n\
    \        }\n    }\n    for(long i : ans)\n    {\n        std::swap(nums[i], nums[ans.size()-1]);\n\
    \    }\n    return ans;", "    std::vector<long> sorted_nums;\n    long sum =\
    \ 0;\n    for (long num : nums) {\n        sum += num;\n        sorted_nums.push_back(sum);\n\
    \    }\n    std::sort(sorted_nums.begin(), sorted_nums.end());\n    return sorted_nums;",
  "    // Write your code here\n    std::vector<long> nums2;\n    long sum = 0;\n\
    \    for (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n \
    \   }\n    long min = nums2[0];\n    long max = nums2[0];\n    for (long i : nums2)\
    \ {\n        if (i < min) {\n            min = i;\n        }\n        if (i >\
    \ max) {\n            max = i;\n        }\n    }\n    long mid = min + (max -\
    \ min) / 2;\n    long sum2 = 0;\n    for (long i : nums2) {\n        if (i ==\
    \ mid) {\n            sum2 += mid;\n        } else {\n            sum2 += i;\n\
    \        }\n    }\n    std::vector<long> nums3;\n    nums3.push_back(min);\n \
    \   nums3.push_back(mid);\n    nums3.push_back(max);\n    nums3.push_back(sum2);\n\
    \    return nums3;", "    // Write your code here\n    std::vector<long> result;\n\
    \    long sum = 0;\n    for (long i : nums) {\n        sum += i;\n        result.push_back(i);\n\
    \    }\n    std::sort(result.begin(), result.end(), [](long a, long b){return\
    \ a+b<b;});\n    return result;", "    std::vector<long> result;\n    long long\
    \ sum = 0;\n    for (long i : nums) {\n        sum += i;\n        result.push_back(i);\n\
    \    }\n    std::sort(result.begin(), result.end(), [sum](long a, long b) { return\
    \ sum - a + b; });\n    return result;", '    // Your code here', "    // Your\
    \ code here\n    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){return a+b<b;});\n    return nums_copy;",
  "    // Write your code here\n    std::vector<long> nums2;\n    long sum = 0;\n\
    \    for (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n \
    \   }\n    std::sort(nums2.begin(), nums2.end(), [sum](long a, long b) {\n   \
    \     return sum - a + b < sum - b + a;\n    });\n    return nums2;", "    //\
    \ Write your code here\n    std::vector<long> nums_copy = nums;\n    sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){return a+b<b;});\n    return nums_copy;",
  "    // Write your code here\n    std::vector<long> nums2;\n    long sum = 0;\n\
    \    for (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n \
    \   }\n    std::sort(nums2.begin(), nums2.end(), [&sum](long a, long b) -> bool\
    \ {\n        return sum - a < sum - b;\n    });\n    return nums2;", "    std::vector<long>\
    \ nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long\
    \ a, long b){\n        return std::abs(a - b) < std::abs(std::abs(a) - std::abs(b));\n\
    \    });\n    return nums_copy;", "    std::vector<long> numsCopy(nums);\n   \
    \ std::sort(numsCopy.begin(), numsCopy.end(), [](long a, long b){\n        return\
    \ a + b < b;\n    });\n    return numsCopy;", "    // Write your code here\n \
    \   std::vector<long> nums2;\n    long sum = 0;\n    for(long i : nums){\n   \
    \     sum += i;\n        nums2.push_back(i);\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end(), [&sum](long a, long b){\n        return sum - a + b < sum - b +\
    \ a;\n    });\n    return nums2;", "    std::vector<long> nums_copy = nums;\n\
    \    std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b){\n     \
    \   return a + b < b;\n    });\n    return nums_copy;", "    // Write your code\
    \ here\n    std::vector<long> nums2;\n    for (long i = 0; i < nums.size(); i++)\
    \ {\n        long sum = 0;\n        for (long j = 0; j < nums.size(); j++) {\n\
    \            sum += nums[j];\n            if (sum == i) {\n                nums2.push_back(nums[j]);\n\
    \            }\n        }\n    }\n    return nums2;", "    std::vector<long> nums_copy\
    \ = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b){\n\
    \        return a + b < b;\n    });\n    return nums_copy;", "    std::vector<long>\
    \ numsSorted(nums.size());\n    std::iota(numsSorted.begin(), numsSorted.end(),\
    \ 0);\n    std::sort(numsSorted.begin(), numsSorted.end(), [&nums] (long a, long\
    \ b) -> bool {\n        return nums[a] + nums[b] > nums[b] + nums[a];\n    });\n\
    \    return numsSorted;", "    std::vector<long> nums_copy(nums);\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){\n        return std::abs(a - b) < std::abs(std::abs(a)\
    \ - std::abs(b));\n    });\n    return nums_copy;", "    std::vector<long> nums_copy\
    \ = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b){\n\
    \        return a + b < b;\n    });\n    return nums_copy;", "    std::vector<long>\
    \ nums_copy;\n    nums_copy.assign(nums.begin(), nums.end());\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){\n        return a + b < b;\n    });\n \
    \   return nums_copy;", "    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){\n        return a + b < b;\n    });\n \
    \   return nums_copy;", "    std::vector<long> nums_copy;\n    for (auto num :\
    \ nums) {\n        nums_copy.push_back(num);\n    }\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){\n        return a + b < b;\n    });\n \
    \   return nums_copy;", "    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){\n        return a + b < b;\n    });\n \
    \   return nums_copy;", "    // TODO: Write your code here\n    long sum = 0;\n\
    \    for(long &num: nums){\n        sum += num;\n    }\n    std::vector<long>\
    \ result;\n    for(long &num: nums){\n        if(sum == num){\n            result.push_back(num);\n\
    \        }\n    }\n    std::sort(result.begin(), result.end());\n    return result;",
  "    // Write your code here\n    long sum = 0;\n    long max = 0;\n    long min\
    \ = 0;\n    long index = 0;\n    long sumOfDigits = 0;\n    long maxOfDigits =\
    \ 0;\n    long minOfDigits = 0;\n    long maxIndex = 0;\n    long minIndex = 0;\n\
    \    long maxSum = 0;\n    long minSum = 0;\n    long maxSumIndex = 0;\n    long\
    \ minSumIndex = 0;\n    long maxSumOfDigits = 0;\n    long minSumOfDigits = 0;\n\
    \    long maxSumIndexOfDigits = 0;\n    long minSumIndexOfDigits = 0;\n    long\
    \ maxSumOfDigitsIndex = 0;\n    long minSumOfDigitsIndex = 0;\n    long maxSumIndexOfDigitsIndex\
    \ = 0;\n    long minSumIndexOfDigitsIndex = 0;\n    long maxSumOfDigitsIndexOfDigits\
    \ = 0;\n    long minSumOfDigitsIndexOfDigits = 0;\n    long maxSumIndexOfDigitsIndexOfDigits\
    \ = 0;\n    long minSumIndexOfDigitsIndexOfDigits = 0;\n    long maxSumOfDigitsIndexOfDigitsIndex\
    \ = 0;\n    long minSumOfDigitsIndexOfDigitsIndex = 0;\n    long maxSumIndexOfDigitsIndexOfDigitsIndex\
    \ = 0;\n    long minSumIndexOfDigitsIndexOfDigitsIndex = 0;\n    long maxSumOfDigitsIndexOfDigitsIndexOfDigits\
    \ = 0;\n    long minSumOfDigitsIndexOfDigitsIndexOfDigits = 0;\n    long maxSumIndexOfDigitsIndexOfDigitsIndexOfDigits\
    \ = 0;\n    long minSumIndexOfDigitsIndexOfDigitsIndexOfDigits = 0;\n    long\
    \ maxSumOfDigitsIndexOfDigitsIndexOfDigitsIndex = 0;\n    long minSumOfDigitsIndexOfDigitsIndexOfDigitsIndex\
    \ = 0;\n    long maxSumIndexOfDigitsIndexOfDigitsIndexOfDigitsIndex = 0;\n   \
    \ long minSumIndexOfDigitsIndexOfDigitsIndexOfDigitsIndex = 0;\n    long maxSumOfDigitsIndexOfDigitsIndexOfDigitsIndexOfDigits\
    \ = 0;\n    long minSumOfDigitsIndexOfDigitsIndexOfDigitsIndexOfDigits = 0;\n\
    \    long maxSumIndexOfDigitsIndexOfDigitsIndexOfDigitsIndexOfDigits = 0;\n  \
    \  long minSumIndexOfDigitsIndexOfDigitsIndexOfDigitsIndexOfDigits = 0;\n    long\
    \ maxSumOfDigitsIndexOfDigitsIndexOfDigitsIndexOfDigitsIndex = 0;\n", "    //\
    \ Write your code here\n    std::vector<long> nums2;\n    long sum = 0;\n    for\
    \ (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n    }\n \
    \   std::sort(nums2.begin(), nums2.end(), [&sum](long a, long b){return sum -\
    \ a - b; });\n    return nums2;", "    std::vector<long> nums_copy = nums;\n \
    \   std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b) {\n     \
    \   return a + b < b;\n    });\n    return nums_copy;", "    std::vector<long>\
    \ sorted_nums(nums.size());\n    for (long &num : nums) {\n        long sum =\
    \ 0;\n        while (num != 0) {\n            sum += num % 10;\n            num\
    \ /= 10;\n        }\n        sorted_nums[sum - nums[sum - nums.size()]] = num;\n\
    \    }\n    std::sort(sorted_nums.begin(), sorted_nums.end());\n    return sorted_nums;",
  "    std::vector<long> nums_copy(nums);\n    std::sort(nums_copy.begin(), nums_copy.end(),\
    \ [](long a, long b){return a+b<b;});\n    return nums_copy;", "    std::vector<long>\
    \ nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long\
    \ a, long b){\n        return std::abs(a - b) < std::abs(a - b) / 10;\n    });\n\
    \    return nums_copy;", "    std::vector<long> sorted_nums;\n    long sum = 0;\n\
    \    for (auto num : nums) {\n        sum += num;\n        sorted_nums.push_back(sum);\n\
    \    }\n    std::sort(sorted_nums.begin(), sorted_nums.end());\n    return sorted_nums;",
  "    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(),\
    \ [](long a, long b) {\n        return a + b < b;\n    });\n    return nums_copy;",
  "    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(),\
    \ [](long a, long b){\n        return a + b < b;\n    });\n    return nums_copy;",
  "    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(),\
    \ [](long a, long b){\n        return a + b < b;\n    });\n    return nums_copy;",
  "    std::vector<long> sorted_nums;\n    long sum = 0;\n    for (long num : nums)\
    \ {\n        sum += num;\n        sorted_nums.push_back(sum);\n    }\n    std::sort(sorted_nums.begin(),\
    \ sorted_nums.end());\n    return sorted_nums;", "    std::vector<long> nums_copy(nums);\n\
    \    std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b){\n     \
    \   return a + b < b;\n    });\n    return nums_copy;", "    std::vector<long>\
    \ nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long\
    \ a, long b){\n        return std::abs(a - b) < 10;\n    });\n    return nums_copy;",
  "    std::vector<long> result;\n    long long sum = 0;\n    for (long i : nums)\
    \ {\n        sum += i;\n        result.push_back(i);\n    }\n    std::sort(result.begin(),\
    \ result.end(), [sum](long a, long b) -> bool {\n        return sum - a < sum\
    \ - b;\n    });\n    return result;", "    std::vector<long> result;\n    long\
    \ sum = 0;\n    for (auto i : nums) {\n        sum += i;\n        result.push_back(i);\n\
    \    }\n    std::sort(result.begin(), result.end(), [sum](int a, int b) {\n  \
    \      return sum - a + b < sum - b + a;\n    });\n    return result;", "    std::vector<long>\
    \ nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long\
    \ a, long b){\n        return a + b < b;\n    });\n    return nums_copy;", " \
    \   std::vector<long> sorted_nums;\n    long sum = 0;\n    for (auto num : nums)\
    \ {\n        sum += num;\n        sorted_nums.push_back(sum);\n    }\n    std::sort(sorted_nums.begin(),\
    \ sorted_nums.end());\n    return sorted_nums;", "    std::vector<long> nums_copy(nums);\n\
    \    std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b) {\n    \
    \    return a + b < 0;\n    });\n    return nums_copy;", "    std::vector<long>\
    \ sorted_nums;\n    long sum = 0;\n    for (auto num : nums) {\n        sum +=\
    \ num;\n        sorted_nums.push_back(sum);\n    }\n    long last_sum = 0;\n \
    \   for (auto num : nums) {\n        sum += num;\n        if (sum > last_sum)\
    \ {\n            std::swap(sorted_nums[sorted_nums.size() - 1], sorted_nums[sorted_nums.size()\
    \ - 2]);\n        }\n        last_sum = sum;\n    }\n    return sorted_nums;",
  "    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(),\
    \ [](long a, long b) {\n        return a + b < b;\n    });\n    return nums_copy;",
  "    // Write your code here\n    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){return a+b<b;});\n    return nums_copy;",
  "    // TODO: Write your code here\n    long long sum = 0;\n    for(long long i\
    \ : nums){\n        sum += i;\n    }\n    std::vector<long> result;\n    for(long\
    \ long i : nums){\n        if(sum == i){\n            result.push_back(i);\n \
    \       }\n    }\n    std::sort(result.begin(), result.end());\n    return result;",
  "    std::vector<long> numsSorted(nums.size());\n    long sum = 0;\n    for (long\
    \ &num : nums) {\n        sum += num;\n        numsSorted[sum - num] = num;\n\
    \    }\n    return numsSorted;", "    std::vector<long> nums_copy = nums;\n  \
    \  std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b) {\n      \
    \  return a + b < 0;\n    });\n    return nums_copy;", "    std::vector<long>\
    \ nums_copy = nums;\n    long sum = 0;\n    for (long i : nums_copy) {\n     \
    \   sum += i;\n    }\n    long max_sum = 0;\n    for (long i : nums_copy) {\n\
    \        max_sum = std::max(max_sum, sum);\n        sum += i;\n    }\n    std::vector<long>\
    \ result;\n    for (long i : nums_copy) {\n        if (sum == max_sum) {\n   \
    \         result.push_back(i);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long\
    \ a, long b){\n        return a + b < b;\n    });\n    return nums_copy;", " \
    \   std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(),\
    \ [](long a, long b){\n        return a + b < b;\n    });\n    return nums_copy;",
  "    std::vector<long> nums_copy(nums);\n    std::sort(nums_copy.begin(), nums_copy.end(),\
    \ [](long a, long b){\n        return a + b < b;\n    });\n    return nums_copy;",
  "    std::vector<long> nums2;\n    long sum = 0;\n    for (long &num: nums) {\n\
    \        sum += num;\n        nums2.push_back(sum);\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end());\n    return nums2;", "    std::vector<long> result;\n    long\
    \ sum = 0;\n    for (long num : nums) {\n        sum += num;\n        result.push_back(sum);\n\
    \    }\n    std::sort(result.begin(), result.end());\n    return result;", " \
    \   std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(),\
    \ [](long a, long b){\n        return a + b < b;\n    });\n    return nums_copy;",
  "    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(),\
    \ [](long a, long b){\n        return a + b < b;\n    });\n    return nums_copy;",
  "    // Write your code here\n    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){return a+b<b;});\n    return nums_copy;",
  "    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(),\
    \ [](long a, long b) {\n        return a + b < 0;\n    });\n    return nums_copy;",
  "    std::vector<long> nums2;\n    long sum = 0;\n    for (long i : nums) {\n  \
    \      sum += i;\n        nums2.push_back(i);\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end(), [&sum](long a, long b) -> bool {\n        return sum - b < sum\
    \ - a;\n    });\n    return nums2;", "    // Write your code here\n    long sum\
    \ = 0;\n    long max = 0;\n    long min = 0;\n    long index = 0;\n    long temp\
    \ = 0;\n    long count = 0;\n    long sumOfDigits = 0;\n    long maxOfDigits =\
    \ 0;\n    long minOfDigits = 0;\n    long tempOfDigits = 0;\n    long maxIndex\
    \ = 0;\n    long minIndex = 0;\n    long tempIndex = 0;\n    long maxSum = 0;\n\
    \    long minSum = 0;\n    long tempSum = 0;\n    long maxCount = 0;\n    long\
    \ minCount = 0;\n    long tempCount = 0;\n    long maxSumOfDigits = 0;\n    long\
    \ minSumOfDigits = 0;\n    long tempSumOfDigits = 0;\n    long maxMax = 0;\n \
    \   long minMax = 0;\n    long tempMax = 0;\n    long maxMin = 0;\n    long minMin\
    \ = 0;\n    long tempMin = 0;\n    long maxIndexOfDigits = 0;\n    long minIndexOfDigits\
    \ = 0;\n    long tempIndexOfDigits = 0;\n    long maxSumOfDigits = 0;\n    long\
    \ minSumOfDigits = 0;\n    long tempSumOfDigits = 0;\n    long maxMaxOfDigits\
    \ = 0;\n    long minMaxOfDigits = 0;\n    long tempMaxOfDigits = 0;\n    long\
    \ maxMinOfDigits = 0;\n    long minMinOfDigits = 0;\n    long tempMinOfDigits\
    \ = 0;\n    long maxIndexOfDigits = 0;\n    long minIndexOfDigits = 0;\n    long\
    \ tempIndexOfDigits = 0;\n    long maxSumOfDigits = 0;\n    long minSumOfDigits\
    \ = 0;\n    long tempSumOfDigits = 0;\n    long maxMaxOfDigits = 0;\n    long\
    \ minMaxOfDigits = 0;\n    long tempMaxOfDigits = 0;\n    long maxMinOfDigits\
    \ = 0;\n    long minMinOfDigits = 0;\n    long tempMinOfDigits = 0;\n    long\
    \ maxIndexOfDigits = 0;\n    long minIndexOfDigits = 0;\n    long tempIndexOfDigits\
    \ = 0;\n    long maxSumOfDigits = 0;\n    long minSumOfDigits = 0;\n    long tempSumOfDigits\
    \ = 0;\n    long maxMaxOfDigits = 0;\n    long minMaxOfDigits = 0;\n    long tempMaxOfDigits\
    \ = 0;\n    long maxMinOfDigits = 0;\n    long minMinOfDigits = 0;\n    long tempMinOfDigits\
    \ = 0;\n    long maxIndexOfDigits = 0;\n    long minIndexOfDigits = 0;\n    long\
    \ tempIndexOfDigits = 0;\n    long maxSumOfDigits = 0;\n    long minSumOfDigits\
    \ = 0;\n    long tempSumOfDigits = 0;\n", "    // Write your code here\n    long\
    \ sum = 0;\n    std::vector<long> nums_sorted;\n    for (long num : nums) {\n\
    \        sum += num;\n        nums_sorted.push_back(num);\n    }\n    std::sort(nums_sorted.begin(),\
    \ nums_sorted.end(), [&sum](long a, long b){\n        return sum - a + b < sum\
    \ - b + a;\n    });\n    return nums_sorted;", "    std::vector<long> nums_copy(nums);\n\
    \    std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b){\n     \
    \   return a + b < b;\n    });\n    return nums_copy;", "    // Write your code\
    \ here\n    std::vector<long> result;\n    long sum = 0;\n    for (long i : nums)\
    \ {\n        sum += i;\n        result.push_back(i);\n    }\n    std::sort(result.begin(),\
    \ result.end(), [&sum](long a, long b){\n        return sum - a < sum - b;\n \
    \   });\n    return result;", "    std::vector<long> sorted_nums;\n    long sum\
    \ = 0;\n    for (auto num : nums) {\n        sum += num;\n        sorted_nums.push_back(sum);\n\
    \    }\n    sort(sorted_nums.begin(), sorted_nums.end());\n    return sorted_nums;",
  "    std::vector<long> sorted_nums;\n    long sum = 0;\n    for (long num : nums)\
    \ {\n        sum += num;\n        sorted_nums.push_back(sum);\n    }\n    std::sort(sorted_nums.begin(),\
    \ sorted_nums.end());\n    return sorted_nums;", "    // Write your code here\n\
    \    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(),\
    \ [](long a, long b){return a+b<b;});\n    return nums_copy;", "    std::vector<long>\
    \ result;\n    long long sum = 0;\n    for (auto &num : nums) {\n        sum +=\
    \ num;\n        result.push_back(sum);\n    }\n    std::sort(result.begin(), result.end());\n\
    \    return result;", "    // TODO: Write your code here\n    std::vector<long>\
    \ nums2;\n    for(long i=0;i<nums.size();i++){\n        long sum=0;\n        for(long\
    \ j=0;j<nums.size();j++){\n            sum+=nums[j];\n        }\n        if(sum==nums[i]){\n\
    \            nums2.push_back(nums[i]);\n        }\n    }\n    return nums2;",
  "    // TODO: Write your code here\n    long sum = 0;\n    for(long i : nums)\n\
    \    {\n        sum += i;\n    }\n    long max_sum = 0;\n    long max_index =\
    \ 0;\n    for(long i : nums)\n    {\n        if(sum == max_sum)\n        {\n \
    \           max_index = i;\n        }\n        else if(sum > max_sum)\n      \
    \  {\n            max_sum = sum;\n            max_index = i;\n        }\n    }\n\
    \    std::vector<long> ans;\n    for(long i : nums)\n    {\n        if(i != max_index)\n\
    \        {\n            ans.push_back(i);\n        }\n    }\n    return ans;",
  "    std::vector<long> numsCopy = nums;\n    std::sort(numsCopy.begin(), numsCopy.end(),\
    \ [](long a, long b){\n        return a + b < b;\n    });\n    return numsCopy;",
  "    std::vector<long> numsSorted(nums.size());\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        long sum = 0;\n        for (long j = 0; j < nums.size(); j++)\
    \ {\n            sum += nums[j];\n            if (sum > i) {\n               \
    \ numsSorted[i] = nums[j];\n                break;\n            }\n        }\n\
    \    }\n    return numsSorted;", "    // TODO: Write your code here\n    std::vector<long>\
    \ nums2;\n    long sum = 0;\n    for (long i : nums) {\n        sum += i;\n  \
    \      nums2.push_back(i);\n    }\n    std::sort(nums2.begin(), nums2.end(), [sum](long\
    \ a, long b){return sum - a + b < sum - b + a;});\n    return nums2;", "    std::vector<long>\
    \ nums_copy;\n    nums_copy.assign(nums.begin(), nums.end());\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){\n        return a + b < b;\n    });\n \
    \   return nums_copy;", "    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){\n        return a + b < b;\n    });\n \
    \   return nums_copy;", "    std::vector<long> numsSorted(nums.size());\n    long\
    \ sum = 0;\n    for (long i : nums) {\n        sum += i;\n        numsSorted[sum\
    \ - i] = i;\n    }\n    return numsSorted;", "    std::vector<long> nums_copy(nums);\n\
    \    std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b) {\n    \
    \    return a + b < b;\n    });\n    return nums_copy;", "    // Write your code\
    \ here\n    long sum = 0;\n    std::vector<long> result;\n    for (long num :\
    \ nums) {\n        sum += num;\n        result.push_back(sum);\n    }\n    std::sort(result.begin(),\
    \ result.end());\n    return result;", "    std::vector<long> nums_copy(nums);\n\
    \    std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b){\n     \
    \   return a + b < b;\n    });\n    return nums_copy;", "    std::vector<long>\
    \ sorted_nums;\n    long sum = 0;\n    for (long num : nums) {\n        sum +=\
    \ num;\n        sorted_nums.push_back(sum);\n    }\n    std::sort(sorted_nums.begin(),\
    \ sorted_nums.end());\n    return sorted_nums;", "    std::vector<long> nums_copy\
    \ = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b){\n\
    \        return a + b < b;\n    });\n    return nums_copy;", "    // TODO: Write\
    \ your code here\n    long sum = 0;\n    for(long &num: nums){\n        sum +=\
    \ num;\n    }\n    std::vector<long> result;\n    for(long &num: nums){\n    \
    \    if(sum == num){\n            result.push_back(num);\n        }\n    }\n \
    \   std::sort(result.begin(), result.end());\n    return result;", "    std::vector<long>\
    \ nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long\
    \ a, long b){\n        return a + b < b;\n    });\n    return nums_copy;", " \
    \   std::vector<long> result;\n    long sum = 0;\n    for (long i : nums) {\n\
    \        sum += i;\n        result.push_back(i);\n    }\n    std::sort(result.begin(),\
    \ result.end(), [&sum](int i, int j) {\n        return sum - j;\n    });\n   \
    \ return result;", "    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){\n        return a + b < b;\n    });\n \
    \   return nums_copy;", "    std::vector<long> numsCopy(nums);\n    std::sort(numsCopy.begin(),\
    \ numsCopy.end(), [](long a, long b){\n        return a + b < b;\n    });\n  \
    \  return numsCopy;", "    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){\n        return std::abs(a - b) < std::abs(std::abs(a)\
    \ - std::abs(b));\n    });\n    return nums_copy;", "    std::vector<long> result;\n\
    \    long sum = 0;\n    for (long num : nums) {\n        sum += num;\n       \
    \ result.push_back(sum);\n    }\n    std::sort(result.begin(), result.end());\n\
    \    return result;", "    std::vector<long> nums_copy = nums;\n    sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){\n        return a + b < 0;\n    });\n \
    \   return nums_copy;", "    std::vector<long> nums_copy;\n    nums_copy = nums;\n\
    \    std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b) {\n    \
    \    return a + b < 0;\n    });\n    return nums_copy;", "    // Write your code\
    \ here\n    std::vector<long> nums_copy = nums;\n    sort(nums_copy.begin(), nums_copy.end(),\
    \ [](long a, long b){return a+b<b;});\n    return nums_copy;", "    // Write your\
    \ code here\n    long sum = 0;\n    long temp = 0;\n    long index = 0;\n    long\
    \ sumOfDigits = 0;\n    long maxSum = 0;\n    long minSum = 0;\n    long maxIndex\
    \ = 0;\n    long minIndex = 0;\n    for (auto &i : nums) {\n        sum += i;\n\
    \        sumOfDigits += i;\n    }\n    for (auto &i : nums) {\n        temp =\
    \ sumOfDigits % 10;\n        sumOfDigits /= 10;\n        if (sumOfDigits > maxSum)\
    \ {\n            maxSum = sumOfDigits;\n            maxIndex = index;\n      \
    \  }\n        if (sumOfDigits < minSum) {\n            minSum = sumOfDigits;\n\
    \            minIndex = index;\n        }\n        index++;\n    }\n    std::vector<long>\
    \ ans;\n    for (auto &i : nums) {\n        if (i == maxSum) {\n            ans.push_back(maxIndex);\n\
    \        } else if (i == minSum) {\n            ans.push_back(minIndex);\n   \
    \     } else {\n            ans.push_back(i);\n        }\n    }\n    return ans;",
  "    std::vector<long> sorted_nums;\n    long sum = 0;\n    for (long num : nums)\
    \ {\n        sum += num;\n        sorted_nums.push_back(sum);\n    }\n    std::sort(sorted_nums.begin(),\
    \ sorted_nums.end());\n    return sorted_nums;", "    std::vector<long> nums_copy\
    \ = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b){\n\
    \        return a + b < b;\n    });\n    return nums_copy;", "    std::vector<long>\
    \ nums_copy = nums;\n    long sum = 0;\n    for (long i : nums_copy) {\n     \
    \   sum += i;\n    }\n    std::vector<long> nums_sorted_by_sum;\n    for (long\
    \ i : nums_copy) {\n        if (sum == i) {\n            nums_sorted_by_sum.push_back(i);\n\
    \        }\n    }\n    std::vector<long> nums_sorted_by_index;\n    for (long\
    \ i : nums_copy) {\n        if (i < sum) {\n            nums_sorted_by_index.push_back(i);\n\
    \        }\n    }\n    return nums_sorted_by_sum;", "    std::vector<long> nums_copy;\n\
    \    nums_copy.assign(nums.begin(), nums.end());\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){\n        return a + b < b;\n    });\n \
    \   return nums_copy;", "    // Write your code here\n    std::vector<long> nums2;\n\
    \    long sum = 0;\n    for (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n\
    \    }\n    std::sort(nums2.begin(), nums2.end(), [sum](long a, long b) -> bool\
    \ {\n        return sum - a < sum - b;\n    });\n    return nums2;", "    std::vector<long>\
    \ sorted_nums;\n    long sum = 0;\n    for (long num : nums) {\n        sum +=\
    \ num;\n        sorted_nums.push_back(sum);\n    }\n    std::sort(sorted_nums.begin(),\
    \ sorted_nums.end());\n    return sorted_nums;", "    std::vector<long> nums_copy\
    \ = nums;\n    sort(nums_copy.begin(), nums_copy.end(), [](long a, long b){return\
    \ a+b<b;});\n    return nums_copy;", "    // Write your code here\n    long sum\
    \ = 0;\n    std::vector<long> sorted_nums;\n    for (long num : nums) {\n    \
    \    sum += num;\n        sorted_nums.push_back(sum);\n    }\n    std::sort(sorted_nums.begin(),\
    \ sorted_nums.end());\n    return sorted_nums;", "    std::vector<long> nums_copy\
    \ = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b){\n\
    \        return std::abs(a - b) < 10;\n    });\n    return nums_copy;", "    //\
    \ Write your code here\n    std::vector<long> nums2;\n    for (long i : nums)\
    \ {\n        long sum = 0;\n        while (i != 0) {\n            sum += i % 10;\n\
    \            i /= 10;\n        }\n        nums2.push_back(sum);\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end());\n    return nums2;", "    std::vector<long> nums2;\n    long sum\
    \ = 0;\n    for (long &num : nums) {\n        sum += num;\n        nums2.push_back(num);\n\
    \    }\n    std::sort(nums2.begin(), nums2.end(), [&sum](long &a, long &b){\n\
    \        return sum - a + b < sum - b + a;\n    });\n    return nums2;", "   \
    \ std::vector<long> sorted_nums;\n    long sum = 0;\n    for (auto num : nums)\
    \ {\n        sum += num;\n        sorted_nums.push_back(sum);\n    }\n    std::sort(sorted_nums.begin(),\
    \ sorted_nums.end());\n    return sorted_nums;", "    std::vector<long> numsSorted(nums.size());\n\
    \    long sum = 0;\n    for (long i : nums) {\n        sum += i;\n        numsSorted[sum\
    \ - i] = i;\n    }\n    return numsSorted;", "    std::vector<long> nums_copy\
    \ = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b){\n\
    \        return a + b < b;\n    });\n    return nums_copy;", "    std::vector<long>\
    \ nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long\
    \ a, long b){\n        return a + b < b;\n    });\n    return nums_copy;", " \
    \   std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(),\
    \ [](long a, long b) {\n        return a + b < b;\n    });\n    return nums_copy;",
  "    // Write your code here\n    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){return a+b<b;});\n    return nums_copy;",
  "    std::vector<long> nums_copy;\n    nums_copy.assign(nums.begin(), nums.end());\n\
    \    std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b){\n     \
    \   return std::abs(a - b) < 10;\n    });\n    return nums_copy;", "    // Write\
    \ your code here\n    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){return a+b<b;});\n    return nums_copy;",
  "    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(),\
    \ [](long a, long b){\n        return a + b < b;\n    });\n    return nums_copy;",
  "    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(),\
    \ [](long a, long b){return a+b<b;});\n    return nums_copy;", "    std::vector<long>\
    \ numsCopy = nums;\n    std::sort(numsCopy.begin(), numsCopy.end(), [](long a,\
    \ long b){return a+b<b;});\n    return numsCopy;", "    std::vector<long> result;\n\
    \    long sum = 0;\n    for (long num : nums) {\n        sum += num;\n       \
    \ result.push_back(sum);\n    }\n    std::sort(result.begin(), result.end());\n\
    \    return result;", "    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){\n        return a + b < b;\n    });\n \
    \   return nums_copy;", "    std::vector<long> nums_copy = nums;\n    long sum\
    \ = 0;\n    for (long i : nums_copy) {\n        sum += i;\n    }\n    long max_sum\
    \ = 0;\n    long max_index = 0;\n    for (long i : nums_copy) {\n        if (sum\
    \ == i) {\n            max_index = i;\n            max_sum = i;\n        }\n \
    \   }\n    std::vector<long> sorted_nums;\n    for (long i : nums_copy) {\n  \
    \      if (i == max_sum) {\n            sorted_nums.push_back(i);\n        }\n\
    \    }\n    return sorted_nums;", "    // Write your code here\n    std::vector<long>\
    \ nums2;\n    for (auto &i : nums)\n    {\n        long sum = 0;\n        while\
    \ (i != 0)\n        {\n            sum += i % 10;\n            i /= 10;\n    \
    \    }\n        nums2.push_back(sum);\n    }\n    std::sort(nums2.begin(), nums2.end());\n\
    \    return nums2;", "    std::vector<long> nums_copy = nums;\n    long sum =\
    \ 0;\n    for (long i : nums_copy) {\n        sum += i;\n    }\n    long max_sum\
    \ = 0;\n    for (long i : nums_copy) {\n        max_sum = std::max(max_sum, sum);\n\
    \        sum -= i;\n    }\n    std::vector<long> result;\n    for (long i : nums_copy)\
    \ {\n        if (sum == max_sum) {\n            result.push_back(i);\n       \
    \ }\n    }\n    return result;", "    std::vector<long> nums_copy(nums);\n   \
    \ std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b){\n        return\
    \ std::abs(a - b) < std::abs(a - b) * 10;\n    });\n    return nums_copy;", " \
    \   std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(),\
    \ [](long a, long b){\n        return a + b < b;\n    });\n    return nums_copy;",
  "    std::vector<long> nums_copy;\n    nums_copy.assign(nums.begin(), nums.end());\n\
    \    std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b){\n     \
    \   return a + b < b;\n    });\n    return nums_copy;", "    std::vector<long>\
    \ nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long\
    \ a, long b){\n        return a + b < b;\n    });\n    return nums_copy;", " \
    \   std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(),\
    \ [](long a, long b){\n        return std::abs(a - b) < std::abs(std::abs(a) -\
    \ std::abs(b));\n    });\n    return nums_copy;", "    std::vector<long> nums_copy\
    \ = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b)\
    \ {\n        return a + b < b;\n    });\n    return nums_copy;", "    // Write\
    \ your code here\n    std::vector<long> nums_sorted = nums;\n    std::sort(nums_sorted.begin(),\
    \ nums_sorted.end(), [](long a, long b){\n        return a + b < b;\n    });\n\
    \    return nums_sorted;", "    std::vector<long> numsSorted(nums.size());\n \
    \   for (size_t i = 0; i < nums.size(); i++) {\n        long sum = 0;\n      \
    \  for (size_t j = 0; j < nums.size(); j++) {\n            sum += nums[j];\n \
    \           if (sum == i) {\n                numsSorted[j] = nums[i];\n      \
    \      }\n        }\n    }\n    return numsSorted;", "    // Write your code here\n\
    \    std::vector<long> nums2;\n    long sum = 0;\n    for (long i : nums) {\n\
    \        sum += i;\n        nums2.push_back(i);\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end(), [&sum](long a, long b){return sum - a - b; });\n    return nums2;",
  "    // Write your code here\n    std::vector<long> nums_copy;\n    nums_copy.assign(nums.begin(),\
    \ nums.end());\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long\
    \ b){\n        return std::abs(a - b) < std::abs(std::abs(a) - std::abs(b));\n\
    \    });\n    return nums_copy;", "    std::vector<long> nums2;\n    long sum\
    \ = 0;\n    for (long &num : nums) {\n        sum += num;\n        nums2.push_back(sum);\n\
    \    }\n    std::sort(nums2.begin(), nums2.end());\n    std::vector<long> result;\n\
    \    for (long &num : nums2) {\n        result.push_back(num);\n    }\n    return\
    \ result;", "    std::vector<long> sorted_nums;\n    long sum = 0;\n    for (auto\
    \ &num : nums) {\n        sum += num;\n        sorted_nums.push_back(sum);\n \
    \   }\n    std::sort(sorted_nums.begin(), sorted_nums.end());\n    return sorted_nums;",
  "    std::vector<long> nums_copy;\n    nums_copy.assign(nums.begin(), nums.end());\n\
    \    std::vector<long> sorted_nums;\n    long sum = 0;\n    for (long num : nums_copy)\
    \ {\n        sum += num;\n        sorted_nums.push_back(sum);\n    }\n    long\
    \ max_sum = 0;\n    for (long num : nums_copy) {\n        max_sum = std::max(max_sum,\
    \ num);\n    }\n    long min_sum = 0;\n    for (long num : nums_copy) {\n    \
    \    min_sum = std::min(min_sum, num);\n    }\n    long min_sum_pos = 0;\n   \
    \ long max_sum_pos = 0;\n    for (long i = 0; i < nums.size(); i++) {\n      \
    \  long sum = 0;\n        for (long j = 0; j < nums.size(); j++) {\n         \
    \   sum += nums[j];\n            if (sum == max_sum) {\n                sorted_nums.push_back(i);\n\
    \                break;\n            }\n        }\n    }\n    long min_sum_neg\
    \ = 0;\n    long max_sum_neg = 0;\n    for (long i = 0; i < nums.size(); i++)\
    \ {\n        long sum = 0;\n        for (long j = 0; j < nums.size(); j++) {\n\
    \            sum += nums[j];\n            if (sum == min_sum) {\n            \
    \    sorted_nums.push_back(i);\n                break;\n            }\n      \
    \  }\n    }\n    long min_sum_neg2 = 0;\n    long max_sum_neg2 = 0;\n    for (long\
    \ i = 0; i < nums.size(); i++) {\n        long sum = 0;\n        for (long j =\
    \ 0; j < nums.size(); j++) {\n            sum += nums[j];\n            if (sum\
    \ == min_sum2) {\n                sorted_nums.push_back(i);\n                break;\n\
    \            }\n        }\n    }\n    long min_sum_neg3 = 0;\n    long max_sum_neg3\
    \ = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        long sum = 0;\n\
    \        for (long j = 0; j < nums.size(); j++) {\n            sum += nums[j];\n\
    \            if (sum == min_sum3) {\n                sorted_nums.push_back(i);\n\
    \                break;\n            }\n        }\n    }\n    long min_sum_neg4\
    \ = 0;\n    long max_sum_neg4 = 0;\n    for (long i = 0; i < nums.size(); i++)\
    \ {\n        long sum = 0;\n        for (long j = 0; j < nums.size(); j++) {\n\
    \            sum += nums[j];\n            if (sum == min_sum4) {\n           \
    \     sorted_nums.push_back(i);\n                break;\n            }\n     \
    \   }\n    }\n    long min_sum_neg5 = 0;\n    long max_sum_neg5 = 0;\n    for\
    \ (long i = 0; i < nums.size(); i++) {\n        long sum = 0;\n        for (long\
    \ j = 0; j < nums.size(); j++) {\n            sum += nums[j];\n            if\
    \ (sum == min_sum5) {\n                sorted_nums.push_back(i);\n           \
    \     break;\n            }\n        }\n    }\n    long min_sum_neg6 = 0;\n  \
    \  long max_sum_neg6 = 0;\n    for (long i = 0; i < nums.size(); i++) {\n    \
    \    long sum = 0;\n        for (long j = 0; j < ", "    std::vector<long> nums_copy\
    \ = nums;\n    long sum = 0;\n    for (long num : nums_copy) {\n        sum +=\
    \ num;\n    }\n    long max_sum = 0;\n    long max_index = 0;\n    for (long i\
    \ = 0; i < nums.size(); i++) {\n        long num = nums[i];\n        long digit\
    \ = num / 10;\n        long rest = num % 10;\n        if (sum - digit > max_sum)\
    \ {\n            max_sum = sum - digit;\n            max_index = i;\n        }\n\
    \        sum += rest;\n    }\n    nums_copy.swap(nums[max_index]);\n    return\
    \ nums_copy;", "    // Write your code here\n    std::vector<long> nums1;\n  \
    \  long sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum +=\
    \ nums[i];\n        nums1.push_back(nums[i]);\n    }\n    std::sort(nums1.begin(),\
    \ nums1.end(), [&sum](long a, long b){return sum - a + b < sum - b + a;});\n \
    \   return nums1;", "    std::vector<long> nums_copy(nums);\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){\n        return a + b < b;\n    });\n \
    \   return nums_copy;", "    std::vector<long> sorted_nums;\n    long sum = 0;\n\
    \    for (long num : nums) {\n        sum += num;\n        sorted_nums.push_back(sum);\n\
    \    }\n    std::sort(sorted_nums.begin(), sorted_nums.end());\n    return sorted_nums;",
  "    // Write your code here.\n    long sum = 0;\n    long max = 0;\n    long min\
    \ = 0;\n    long index = 0;\n    for(long i : nums) {\n        sum += i;\n   \
    \     if(sum > max) {\n            max = sum;\n        }\n        if(sum < min)\
    \ {\n            min = sum;\n        }\n    }\n    std::vector<long> ans;\n  \
    \  for(long i : nums) {\n        sum += i;\n        if(sum == max) {\n       \
    \     ans.push_back(i);\n        }\n        if(sum == min) {\n            ans.push_back(i);\n\
    \        }\n    }\n    return ans;", "    // Write your code here\n    long long\
    \ sum = 0;\n    std::vector<long> sorted_nums;\n    for(long long num : nums)\n\
    \    {\n        sum += num;\n        sorted_nums.push_back(sum);\n    }\n    for(long\
    \ long i = 0; i < nums.size(); i++)\n    {\n        for(long long j = i+1; j <\
    \ nums.size(); j++)\n        {\n            if(nums[i] + nums[j] < sorted_nums[j])\n\
    \            {\n                long long temp = sorted_nums[j];\n           \
    \     sorted_nums[j] = sorted_nums[i];\n                sorted_nums[i] = temp;\n\
    \            }\n        }\n    }\n    return sorted_nums;", "    std::vector<long>\
    \ nums_copy(nums);\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long\
    \ a, long b){return a+b<b;});\n    return nums_copy;", "    std::vector<long>\
    \ numsCopy(nums);\n    std::sort(numsCopy.begin(), numsCopy.end(), [](long a,\
    \ long b){\n        return a + b < b;\n    });\n    return numsCopy;", "    //\
    \ TODO: Write your code here\n    std::vector<long> result;\n    long sum = 0;\n\
    \    long max = 0;\n    long min = 0;\n    for (long i : nums) {\n        sum\
    \ += i;\n        if (sum > max) {\n            max = sum;\n        }\n       \
    \ if (sum < min) {\n            min = sum;\n        }\n    }\n    for (long i\
    \ : nums) {\n        if (sum == i) {\n            result.push_back(i);\n     \
    \   }\n    }\n    long temp;\n    for (long i : result) {\n        temp = i;\n\
    \        for (long j : result) {\n            if (j > i) {\n                temp\
    \ = j;\n            }\n        }\n        result.push_back(temp);\n    }\n   \
    \ result.push_back(max);\n    result.push_back(min);\n    return result;", " \
    \   std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(),\
    \ [](long a, long b) {\n        return std::abs(a - b) < 10;\n    });\n    return\
    \ nums_copy;", "    std::vector<long> nums_copy = nums;\n    sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){return a+b<b;});\n    return nums_copy;",
  "    std::vector<long> nums_copy(nums);\n    std::sort(nums_copy.begin(), nums_copy.end(),\
    \ [](long a, long b){\n        return a + b < b;\n    });\n    return nums_copy;",
  "    // Write your code here\n    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){return a+b<b+a;});\n    return nums_copy;",
  "    std::vector<long> nums_copy = nums;\n    long sum = 0;\n    for (long i : nums_copy)\
    \ {\n        sum += i;\n    }\n    long max_sum = 0;\n    for (long i : nums_copy)\
    \ {\n        max_sum = std::max(max_sum, sum);\n    }\n    std::vector<long> result;\n\
    \    for (long i : nums_copy) {\n        if (sum - i == max_sum) {\n         \
    \   result.push_back(i);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ sorted_nums(nums.size());\n    long sum = 0;\n    for (long &num : nums) {\n\
    \        sum += num;\n        sorted_nums[sum - num] = num;\n    }\n    return\
    \ sorted_nums;", "    // Write your code here\n    std::vector<long> nums2;\n\
    \    long sum = 0;\n    for(long i : nums){\n        sum += i;\n        nums2.push_back(i);\n\
    \    }\n    std::sort(nums2.begin(), nums2.end(), [&sum](long a, long b){return\
    \ sum - a - b < 0;});\n    return nums2;", "    std::vector<long> nums_copy;\n\
    \    for(long num : nums)\n        nums_copy.push_back(num);\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){return a+b<b;});\n    return nums_copy;",
  "    // Write your code here\n    std::vector<long> nums_sorted = nums;\n    std::sort(nums_sorted.begin(),\
    \ nums_sorted.end(), [](long a, long b) {\n        return a + b < b;\n    });\n\
    \    return nums_sorted;", "    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){return a+b<b;});\n    return nums_copy;",
  "    std::vector<long> numsSorted(nums.size());\n    long sum = 0;\n    for (long\
    \ i : nums) {\n        sum += i;\n        numsSorted[sum - i] = i;\n    }\n  \
    \  return numsSorted;", "    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){\n        return a + b < b;\n    });\n \
    \   return nums_copy;"]
stop_tokens:
- "\n}"

language: cpp
name: HumanEval_30_get_positive
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0)\n            positive.push_back(i);\n\
    \    }\n    return positive;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmptlmws083: /tmp/tmptlmws083.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0)\n            res.push_back(i);\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmppo7sdk9z: /tmp/tmppo7sdk9z.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0) res.push_back(i);\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = get_positive;\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2, (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10})))\
    \ == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3, (long)9,\
    \ (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp8aqm2ih8: /tmp/tmp8aqm2ih8.cpp:14: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0)\n            positive.push_back(i);\n\
    \    }\n    return positive;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmptlmws083: /tmp/tmptlmws083.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0) {\n            res.push_back(i);\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp9db96w5x: /tmp/tmp9db96w5x.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0) {\n            res.push_back(i);\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp9db96w5x: /tmp/tmp9db96w5x.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0)\n            positive.push_back(i);\n\
    \    }\n    return positive;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmptlmws083: /tmp/tmptlmws083.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0) {\n            res.push_back(i);\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp9db96w5x: /tmp/tmp9db96w5x.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ v;\n    for (long i : l) {\n        if (i >= 0)\n            v.push_back(i);\n\
    \    }\n    return v;\n}\nint main() {\n    auto candidate = get_positive;\n \
    \   assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpruu7re0p: /tmp/tmpruu7re0p.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0)\n            res.push_back(i);\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmppo7sdk9z: /tmp/tmppo7sdk9z.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i > 0)\n            res.push_back(i);\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0) res.push_back(i);\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = get_positive;\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2, (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10})))\
    \ == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3, (long)9,\
    \ (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp8aqm2ih8: /tmp/tmp8aqm2ih8.cpp:14: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0)\n            res.push_back(i);\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmppo7sdk9z: /tmp/tmppo7sdk9z.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for(long i = 0; i < l.size(); i++) {\n        if(l[i] > 0) {\n\
    \            positive.push_back(l[i]);\n        }\n    }\n    return positive;\n\
    }\nint main() {\n    auto candidate = get_positive;\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2, (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10})))\
    \ == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3, (long)9,\
    \ (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0) {\n            res.push_back(i);\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp9db96w5x: /tmp/tmp9db96w5x.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i > 0)\n            res.push_back(i);\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0)\n            res.push_back(i);\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmppo7sdk9z: /tmp/tmppo7sdk9z.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0) {\n            res.push_back(i);\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp9db96w5x: /tmp/tmp9db96w5x.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0) res.push_back(i);\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = get_positive;\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2, (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10})))\
    \ == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3, (long)9,\
    \ (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp8aqm2ih8: /tmp/tmp8aqm2ih8.cpp:14: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0)\n            res.push_back(i);\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmppo7sdk9z: /tmp/tmppo7sdk9z.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0)\n            positive.push_back(i);\n\
    \    }\n    return positive;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmptlmws083: /tmp/tmptlmws083.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0) {\n            res.push_back(i);\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp9db96w5x: /tmp/tmp9db96w5x.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0)\n            res.push_back(i);\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmppo7sdk9z: /tmp/tmppo7sdk9z.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0)\n            res.push_back(i);\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmppo7sdk9z: /tmp/tmppo7sdk9z.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0)\n            positive.push_back(i);\n\
    \    }\n    return positive;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmptlmws083: /tmp/tmptlmws083.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0)\n            res.push_back(i);\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmppo7sdk9z: /tmp/tmppo7sdk9z.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for(long i = 0; i < l.size(); i++) {\n        if(l[i] > 0) {\n\
    \            positive.push_back(l[i]);\n        }\n    }\n    return positive;\n\
    }\nint main() {\n    auto candidate = get_positive;\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2, (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10})))\
    \ == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3, (long)9,\
    \ (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077046
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ v;\n    for (long i : l) {\n        if (i > 0)\n            v.push_back(i);\n\
    \    }\n    return v;\n}\nint main() {\n    auto candidate = get_positive;\n \
    \   assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0) res.push_back(i);\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = get_positive;\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2, (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10})))\
    \ == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3, (long)9,\
    \ (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp8aqm2ih8: /tmp/tmp8aqm2ih8.cpp:14: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0)\n            res.push_back(i);\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmppo7sdk9z: /tmp/tmppo7sdk9z.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0)\n            res.push_back(i);\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmppo7sdk9z: /tmp/tmppo7sdk9z.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0) {\n            res.push_back(i);\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp9db96w5x: /tmp/tmp9db96w5x.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0)\n            res.push_back(i);\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmppo7sdk9z: /tmp/tmppo7sdk9z.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for(long i : l) {\n        if(i > 0) positive.push_back(i);\n\
    \    }\n    return positive;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0)\n            positive.push_back(i);\n\
    \    }\n    return positive;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmptlmws083: /tmp/tmptlmws083.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i > 0)\n            res.push_back(i);\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0) {\n            res.push_back(i);\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp9db96w5x: /tmp/tmp9db96w5x.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i > 0)\n            res.push_back(i);\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i > 0) res.push_back(i);\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = get_positive;\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2, (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10})))\
    \ == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3, (long)9,\
    \ (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ v;\n    for (long i : l) {\n        if (i >= 0) v.push_back(i);\n    }\n   \
    \ return v;\n}\nint main() {\n    auto candidate = get_positive;\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2, (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10})))\
    \ == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3, (long)9,\
    \ (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp7dfubz7a: /tmp/tmp7dfubz7a.cpp:14: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0)\n            res.push_back(i);\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmppo7sdk9z: /tmp/tmppo7sdk9z.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0) {\n            res.push_back(i);\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp9db96w5x: /tmp/tmp9db96w5x.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0)\n            res.push_back(i);\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmppo7sdk9z: /tmp/tmppo7sdk9z.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0)\n            positive.push_back(i);\n\
    \    }\n    return positive;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmptlmws083: /tmp/tmptlmws083.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i > 0) res.push_back(i);\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = get_positive;\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2, (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10})))\
    \ == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3, (long)9,\
    \ (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0)\n            positive.push_back(i);\n\
    \    }\n    return positive;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmptlmws083: /tmp/tmptlmws083.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0)\n            positive.push_back(i);\n\
    \    }\n    return positive;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmptlmws083: /tmp/tmptlmws083.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0)\n            res.push_back(i);\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmppo7sdk9z: /tmp/tmppo7sdk9z.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0) {\n            res.push_back(i);\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp9db96w5x: /tmp/tmp9db96w5x.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0) res.push_back(i);\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = get_positive;\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2, (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10})))\
    \ == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3, (long)9,\
    \ (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp8aqm2ih8: /tmp/tmp8aqm2ih8.cpp:14: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0) {\n            res.push_back(i);\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp9db96w5x: /tmp/tmp9db96w5x.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for(long i = 0; i < l.size(); i++) {\n        if(l[i] > 0) {\n\
    \            positive.push_back(l[i]);\n        }\n    }\n    return positive;\n\
    }\nint main() {\n    auto candidate = get_positive;\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2, (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10})))\
    \ == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3, (long)9,\
    \ (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0) {\n            res.push_back(i);\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp9db96w5x: /tmp/tmp9db96w5x.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0)\n            res.push_back(i);\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmppo7sdk9z: /tmp/tmppo7sdk9z.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for(long i : l) {\n        if(i>0) {\n            res.push_back(i);\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0)\n            res.push_back(i);\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmppo7sdk9z: /tmp/tmppo7sdk9z.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for(long i : l) {\n        if(i>0) {\n            res.push_back(i);\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) positive.push_back(i);\n\
    \    }\n    return positive;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpmfm2qsf7: /tmp/tmpmfm2qsf7.cpp:14: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0) {\n            res.push_back(i);\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp9db96w5x: /tmp/tmp9db96w5x.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    long long sum = 0;\n    for (long long i : l) {\n        if (i\
    \ >= 0) {\n            sum += i;\n            positive.push_back(i);\n       \
    \ }\n    }\n    return positive;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp8gr51933: /tmp/tmp8gr51933.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0)\n            res.push_back(i);\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmppo7sdk9z: /tmp/tmppo7sdk9z.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0)\n            positive.push_back(i);\n\
    \    }\n    return positive;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmptlmws083: /tmp/tmptlmws083.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0) res.push_back(i);\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = get_positive;\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2, (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10})))\
    \ == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3, (long)9,\
    \ (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp8aqm2ih8: /tmp/tmp8aqm2ih8.cpp:14: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0) res.push_back(i);\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = get_positive;\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2, (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10})))\
    \ == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3, (long)9,\
    \ (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp8aqm2ih8: /tmp/tmp8aqm2ih8.cpp:14: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0)\n            positive.push_back(i);\n\
    \    }\n    return positive;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmptlmws083: /tmp/tmptlmws083.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0)\n            res.push_back(i);\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmppo7sdk9z: /tmp/tmppo7sdk9z.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0) {\n            res.push_back(i);\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp9db96w5x: /tmp/tmp9db96w5x.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0)\n            positive.push_back(i);\n\
    \    }\n    return positive;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmptlmws083: /tmp/tmptlmws083.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for(long i : l) {\n        if(i>0) {\n            res.push_back(i);\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for(long i : l) {\n        if(i >= 0) positive.push_back(i);\n\
    \    }\n    return positive;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpajnwdy91: /tmp/tmpajnwdy91.cpp:14: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0) {\n            res.push_back(i);\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp9db96w5x: /tmp/tmp9db96w5x.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0)\n            positive.push_back(i);\n\
    \    }\n    return positive;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmptlmws083: /tmp/tmptlmws083.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0)\n            positive.push_back(i);\n\
    \    }\n    return positive;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmptlmws083: /tmp/tmptlmws083.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0) {\n            res.push_back(i);\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp9db96w5x: /tmp/tmp9db96w5x.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i > 0) res.push_back(i);\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = get_positive;\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2, (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10})))\
    \ == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3, (long)9,\
    \ (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0)\n            res.push_back(i);\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmppo7sdk9z: /tmp/tmppo7sdk9z.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0)\n            res.push_back(i);\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmppo7sdk9z: /tmp/tmppo7sdk9z.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0)\n            res.push_back(i);\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmppo7sdk9z: /tmp/tmppo7sdk9z.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ v;\n    for (long i : l) {\n        if (i >= 0) v.push_back(i);\n    }\n   \
    \ return v;\n}\nint main() {\n    auto candidate = get_positive;\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2, (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10})))\
    \ == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3, (long)9,\
    \ (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp7dfubz7a: /tmp/tmp7dfubz7a.cpp:14: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for(long i : l) {\n        if(i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpj73btp8l: /tmp/tmpj73btp8l.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for(long i = 0; i < l.size(); i++) {\n        if(l[i] > 0) {\n\
    \            positive.push_back(l[i]);\n        }\n    }\n    return positive;\n\
    }\nint main() {\n    auto candidate = get_positive;\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2, (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10})))\
    \ == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3, (long)9,\
    \ (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ v;\n    for (long i : l) {\n        if (i >= 0) {\n            v.push_back(i);\n\
    \        }\n    }\n    return v;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp_6g76pp6: /tmp/tmp_6g76pp6.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ v;\n    for (long i : l) {\n        if (i >= 0) {\n            v.push_back(i);\n\
    \        }\n    }\n    return v;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp_6g76pp6: /tmp/tmp_6g76pp6.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0) {\n            res.push_back(i);\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp9db96w5x: /tmp/tmp9db96w5x.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0)\n            positive.push_back(i);\n\
    \    }\n    return positive;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmptlmws083: /tmp/tmptlmws083.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for(long i = 0; i < l.size(); i++) {\n        if(l[i] > 0) {\n\
    \            positive.push_back(l[i]);\n        }\n    }\n    return positive;\n\
    }\nint main() {\n    auto candidate = get_positive;\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2, (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10})))\
    \ == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3, (long)9,\
    \ (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0) {\n            res.push_back(i);\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp9db96w5x: /tmp/tmp9db96w5x.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0) {\n            res.push_back(i);\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp9db96w5x: /tmp/tmp9db96w5x.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0)\n            positive.push_back(i);\n\
    \    }\n    return positive;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmptlmws083: /tmp/tmptlmws083.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0) {\n            res.push_back(i);\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp9db96w5x: /tmp/tmp9db96w5x.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i > 0)\n            res.push_back(i);\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ v;\n    for (long i : l) {\n        if (i >= 0)\n            v.push_back(i);\n\
    \    }\n    return v;\n}\nint main() {\n    auto candidate = get_positive;\n \
    \   assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpruu7re0p: /tmp/tmpruu7re0p.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for(long i : l) {\n        if(i > 0)\n            res.push_back(i);\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0)\n            positive.push_back(i);\n\
    \    }\n    return positive;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmptlmws083: /tmp/tmptlmws083.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0)\n            res.push_back(i);\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmppo7sdk9z: /tmp/tmppo7sdk9z.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0) res.push_back(i);\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = get_positive;\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2, (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10})))\
    \ == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3, (long)9,\
    \ (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp8aqm2ih8: /tmp/tmp8aqm2ih8.cpp:14: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0)\n            res.push_back(i);\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmppo7sdk9z: /tmp/tmppo7sdk9z.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0)\n            res.push_back(i);\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmppo7sdk9z: /tmp/tmppo7sdk9z.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0)\n            res.push_back(i);\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmppo7sdk9z: /tmp/tmppo7sdk9z.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ v;\n    for (long i : l) {\n        if (i >= 0) {\n            v.push_back(i);\n\
    \        }\n    }\n    return v;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp_6g76pp6: /tmp/tmp_6g76pp6.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0)\n            res.push_back(i);\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmppo7sdk9z: /tmp/tmppo7sdk9z.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for(long i : l) {\n        if(i>0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i > 0) res.push_back(i);\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = get_positive;\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2, (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10})))\
    \ == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3, (long)9,\
    \ (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i > 0)\n            res.push_back(i);\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0)\n            res.push_back(i);\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmppo7sdk9z: /tmp/tmppo7sdk9z.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0) res.push_back(i);\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = get_positive;\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2, (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10})))\
    \ == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3, (long)9,\
    \ (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp8aqm2ih8: /tmp/tmp8aqm2ih8.cpp:14: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0) res.push_back(i);\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = get_positive;\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2, (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10})))\
    \ == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3, (long)9,\
    \ (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp8aqm2ih8: /tmp/tmp8aqm2ih8.cpp:14: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i > 0) res.push_back(i);\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = get_positive;\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2, (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10})))\
    \ == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3, (long)9,\
    \ (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0) {\n            res.push_back(i);\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp9db96w5x: /tmp/tmp9db96w5x.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0)\n            positive.push_back(i);\n\
    \    }\n    return positive;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmptlmws083: /tmp/tmptlmws083.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0)\n            res.push_back(i);\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmppo7sdk9z: /tmp/tmppo7sdk9z.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0) res.push_back(i);\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = get_positive;\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2, (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5,\
    \ (long)6})));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10})))\
    \ == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3, (long)9,\
    \ (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp8aqm2ih8: /tmp/tmp8aqm2ih8.cpp:14: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0)\n            positive.push_back(i);\n\
    \    }\n    return positive;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmptlmws083: /tmp/tmptlmws083.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0)\n            res.push_back(i);\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmppo7sdk9z: /tmp/tmppo7sdk9z.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0)\n            positive.push_back(i);\n\
    \    }\n    return positive;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmptlmws083: /tmp/tmptlmws083.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i > 0)\n            res.push_back(i);\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0)\n            res.push_back(i);\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmppo7sdk9z: /tmp/tmppo7sdk9z.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0)\n            res.push_back(i);\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmppo7sdk9z: /tmp/tmppo7sdk9z.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0)\n            positive.push_back(i);\n\
    \    }\n    return positive;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmptlmws083: /tmp/tmptlmws083.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i > 0)\n            res.push_back(i);\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i > 0)\n            res.push_back(i);\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0)\n            positive.push_back(i);\n\
    \    }\n    return positive;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmptlmws083: /tmp/tmptlmws083.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0)\n            res.push_back(i);\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmppo7sdk9z: /tmp/tmppo7sdk9z.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0)\n            positive.push_back(i);\n\
    \    }\n    return positive;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmptlmws083: /tmp/tmptlmws083.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ positive;\n    for (long i : l) {\n        if (i >= 0) {\n            positive.push_back(i);\n\
    \        }\n    }\n    return positive;\n}\nint main() {\n    auto candidate =\
    \ get_positive;\n    assert(candidate((std::vector<long>({(long)-1, (long)-2,\
    \ (long)4, (long)5, (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)5,\
    \ (long)3, (long)2, (long)3, (long)3, (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmpgmolibt5: /tmp/tmpgmolibt5.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return only positive numbers\
    \ in the list.\nstd::vector<long> get_positive(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for (long i : l) {\n        if (i >= 0) {\n            res.push_back(i);\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = get_positive;\n\
    \    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)4, (long)5,\
    \ (long)6}))) == (std::vector<long>({(long)4, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,\
    \ (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,\
    \ (long)9, (long)123, (long)1})));\n    assert(candidate((std::vector<long>({(long)-1,\
    \ (long)-2}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n}\n"
  status: Exception
  stderr: 'tmp9db96w5x: /tmp/tmp9db96w5x.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123, (long)1,
    (long)-10}))) == (std::vector<long>({(long)5, (long)3, (long)2, (long)3, (long)3,
    (long)9, (long)123, (long)1}))'' failed.

    '
  stdout: ''
  timestamp: 1660077046

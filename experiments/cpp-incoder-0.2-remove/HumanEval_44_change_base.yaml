name: HumanEval_44_change_base
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Change numerical base of\
  \ input number x to base.\n// return string representation after the conversion.\n\
  // base numbers are less than 10.\nstd::string change_base(long x, long base) {\n"
tests: "}\nint main() {\n    auto candidate = change_base;\n    assert(candidate((8),\
  \ (3)) == (\"22\"));\n    assert(candidate((9), (3)) == (\"100\"));\n    assert(candidate((234),\
  \ (2)) == (\"11101010\"));\n    assert(candidate((16), (2)) == (\"10000\"));\n \
  \   assert(candidate((8), (2)) == (\"1000\"));\n    assert(candidate((7), (2)) ==\
  \ (\"111\"));\n    assert(candidate((2), (3)) == (\"2\"));\n    assert(candidate((3),\
  \ (4)) == (\"3\"));\n    assert(candidate((4), (5)) == (\"4\"));\n    assert(candidate((5),\
  \ (6)) == (\"5\"));\n    assert(candidate((6), (7)) == (\"6\"));\n    assert(candidate((7),\
  \ (8)) == (\"7\"));\n}\n"
completions: ["    std::string ans = \"\";\n    while (x > 0) {\n        int digit\
    \ = x % base;\n        ans += (char)(digit + '0');\n        x /= base;\n    }\n\
    \    return ans;", "    std::string ans = \"\";\n    long temp = 0;\n    while\
    \ (x > 0) {\n        temp = x % base;\n        ans = std::to_string(temp) + ans;\n\
    \        x = x / base;\n    }\n    return ans;", "    std::string ans = \"\";\n\
    \    long temp = x;\n    while (temp != 0) {\n        int digit = temp % base;\n\
    \        ans = std::to_string(digit) + ans;\n        temp = temp / base;\n   \
    \ }\n    return ans;", "    std::string ans = \"\";\n    long temp = 0;\n    while\
    \ (x > 0) {\n        temp = x % base;\n        ans = std::to_string(temp) + ans;\n\
    \        x = x / base;\n    }\n    return ans;", "    std::string s = std::to_string(x);\n\
    \    std::string result = \"\";\n    long pos = 0;\n    while (pos < s.size())\
    \ {\n        long digit = std::stoi(s.substr(pos, 1), nullptr, base);\n      \
    \  result += std::to_string(digit);\n        pos += 1;\n    }\n    return result;",
  "    std::string result;\n    long temp = x;\n    while (temp > 0) {\n        int\
    \ digit = temp % base;\n        temp = temp / base;\n        if (digit < 10)\n\
    \            result += std::to_string(digit);\n        else\n            result\
    \ += std::to_string(digit - 10) + std::to_string(10);\n    }\n    return result;",
  "    std::string ans = \"\";\n    while (x > 0) {\n        ans += (char)(x % base);\n\
    \        x /= base;\n    }\n    return ans;", "    std::string res;\n    while\
    \ (x > 0) {\n        res.push_back((x % base) + '0');\n        x /= base;\n  \
    \  }\n    res.push_back('0');\n    return res;", "    std::string ans = \"\";\n\
    \    while (x > 0) {\n        int digit = x % base;\n        ans = std::to_string(digit)\
    \ + ans;\n        x = x / base;\n    }\n    return ans;", "    std::string ans\
    \ = \"\";\n    long temp = 0;\n    while (x > 0) {\n        temp = x % base;\n\
    \        ans = std::to_string(temp) + ans;\n        x = x / base;\n    }\n   \
    \ return ans;", "    std::string res;\n    long tmp = x;\n    while (base > 0)\
    \ {\n        tmp = tmp / base;\n        res = std::to_string(tmp % base) + res;\n\
    \        base = base * 10;\n    }\n    return res;", "    std::string ans = \"\
    \";\n    long tmp = x;\n    while (base > 0) {\n        tmp = tmp / base;\n  \
    \      ans = std::to_string(tmp) + ans;\n        base--;\n    }\n    return ans;",
  "    std::string ans = \"\";\n    while (x > 0) {\n        ans += (char)(x % base);\n\
    \        x /= base;\n    }\n    return ans;", "    std::string res;\n    long\
    \ temp = x;\n    while (temp > 0) {\n        res.push_back((temp % base) + '0');\n\
    \        temp = temp / base;\n    }\n    res.push_back('0');\n    return res;",
  "    std::string ans = \"\";\n    long temp = 0;\n    while (x > 0) {\n        temp\
    \ = x % base;\n        ans += (char)(temp + '0');\n        x = x / base;\n   \
    \ }\n    return ans;", "    std::string res;\n    while (x > 0) {\n        res.push_back((x\
    \ % base) + '0');\n        x /= base;\n    }\n    res.push_back('0');\n    return\
    \ res;", "    std::string ans = \"\";\n    while (x > 0) {\n        ans += (char)(x\
    \ % base);\n        x /= base;\n    }\n    return ans;", "    std::string ans\
    \ = \"\";\n    long tmp = x;\n    while (base > 0) {\n        tmp = tmp / base;\n\
    \        ans = std::to_string(tmp) + ans;\n        base--;\n    }\n    while (base\
    \ < 0) {\n        tmp = tmp * base;\n        ans = std::to_string(tmp) + ans;\n\
    \        base++;\n    }\n    return ans;", "    std::string res;\n    while (x\
    \ > 0) {\n        res.push_back((x % base) + '0');\n        x /= base;\n    }\n\
    \    res.push_back('0');\n    res.back() = '\\0';\n    return res;", "    std::string\
    \ ans = \"\";\n    long n = x;\n    while (n > 0) {\n        int digit = n % base;\n\
    \        ans += (char)(digit + '0');\n        n /= base;\n    }\n    return ans;",
  "    std::string res;\n    while (x > 0) {\n        res.push_back((x % base) + '0');\n\
    \        x /= base;\n    }\n    res.push_back('0');\n    return res;", "    std::string\
    \ res;\n    long temp;\n    temp = x;\n    while (temp > 0) {\n        res +=\
    \ (char)(temp % base);\n        temp /= base;\n    }\n    return res;", "    std::string\
    \ res;\n    long tmp = x;\n    while (base > 0) {\n        res.push_back(tmp %\
    \ base);\n        tmp = tmp / base;\n        base--;\n    }\n    res.push_back(tmp);\n\
    \    return res;", "    std::string s = std::to_string(x);\n    std::string res\
    \ = \"\";\n    while (s.size() > 0) {\n        int digit = std::stoi(s.substr(0,\
    \ s.length() - 1));\n        int new_digit = digit / base;\n        res += std::to_string(new_digit);\n\
    \        s = s.substr(s.length() - 1);\n    }\n    return res;", "    std::string\
    \ ans = \"\";\n    long tmp = x;\n    while (base > 0) {\n        tmp = tmp /\
    \ base;\n        ans = std::to_string(tmp % base) + ans;\n        base--;\n  \
    \  }\n    return ans;", "    std::string ans = \"\";\n    long temp = 0;\n   \
    \ while (x > 0) {\n        temp = x % base;\n        ans = std::to_string(temp)\
    \ + ans;\n        x = x / base;\n    }\n    return ans;", "    std::string res;\n\
    \    while (x > 0) {\n        res.insert(res.end(), x % base);\n        x /= base;\n\
    \    }\n    return res;", "    std::string ans = \"\";\n    long temp = 0;\n \
    \   while (x > 0) {\n        temp = x % base;\n        ans = std::to_string(temp)\
    \ + ans;\n        x = x / base;\n    }\n    return ans;", "    std::string ans\
    \ = \"\";\n    long tmp = x;\n    while (base > 0) {\n        tmp = tmp / base;\n\
    \        ans = std::to_string(tmp % base) + ans;\n        base--;\n    }\n   \
    \ return ans;", "    std::string res;\n    while (x > 0) {\n        res.insert(res.begin(),\
    \ x % base);\n        x /= base;\n    }\n    return res;", "    std::string ans\
    \ = \"\";\n    long temp = x;\n    while (temp != 0) {\n        ans = std::to_string(temp\
    \ % base) + ans;\n        temp = temp / base;\n    }\n    return ans;", "    std::string\
    \ ans = \"\";\n    long tmp = x;\n    while (base > 0) {\n        tmp = tmp /\
    \ base;\n        ans = std::to_string(tmp % base) + ans;\n        base--;\n  \
    \  }\n    return ans;", "    std::string ans = \"\";\n    long temp = x;\n   \
    \ while (temp > 0) {\n        int rem = temp % base;\n        ans = to_string(rem)\
    \ + ans;\n        temp = temp / base;\n    }\n    return ans;", "    std::string\
    \ ans = \"\";\n    long temp = x;\n    while (temp != 0) {\n        temp = temp\
    \ / base;\n        ans = std::to_string(temp) + ans;\n    }\n    return ans;",
  "    std::string ans = \"\";\n    while (x > 0) {\n        ans += (char)(x % base);\n\
    \        x /= base;\n    }\n    return ans;", "    std::string ans = \"\";\n \
    \   long tmp = x;\n    while (base > 0) {\n        tmp = tmp / base;\n       \
    \ ans = std::to_string(tmp % base) + ans;\n        base--;\n    }\n    return\
    \ ans;", "    std::string ans = \"\";\n    while (x > 0) {\n        int rem =\
    \ x % base;\n        ans = std::to_string(rem) + ans;\n        x = x / base;\n\
    \    }\n    return ans;", "    std::string ans = \"\";\n    long temp = x;\n \
    \   while (temp != 0) {\n        ans += (temp % base);\n        temp /= base;\n\
    \    }\n    return ans;", "    std::string ans = \"\";\n    long temp = x;\n \
    \   while (temp != 0) {\n        int digit = temp % base;\n        ans = std::to_string(digit)\
    \ + ans;\n        temp = temp / base;\n    }\n    return ans;", "    std::string\
    \ res;\n    while (x > 0) {\n        res.push_back((x % base) + '0');\n      \
    \  x /= base;\n    }\n    res.push_back('0');\n    return res;", "    std::string\
    \ ans = \"\";\n    while (x > 0) {\n        ans += (char)(x % base);\n       \
    \ x /= base;\n    }\n    return ans;", "    std::string ans = \"\";\n    while\
    \ (x != 0) {\n        long r = x % base;\n        ans = std::to_string(r) + ans;\n\
    \        x = x / base;\n    }\n    return ans;", "    std::string ans = \"\";\n\
    \    long temp = x;\n    while (temp != 0) {\n        int rem = temp % base;\n\
    \        ans = to_string(rem) + ans;\n        temp = temp / base;\n    }\n   \
    \ return ans;", "    std::string ans = \"\";\n    long r = x;\n    while (base\
    \ > 0) {\n        r = r / base;\n        ans = std::to_string(r) + ans;\n    \
    \    base--;\n    }\n    return ans;", "    std::string s = std::to_string(x);\n\
    \    std::string res = \"\";\n    while (s.size() > 0) {\n        long r = std::stoi(s.substr(0,\
    \ s.size() - 1), nullptr, base);\n        res += std::to_string(r);\n        s.erase(0,\
    \ s.size() - 1);\n    }\n    return res;", "    std::string ans = \"\";\n    long\
    \ temp = 0;\n    while (x > 0) {\n        temp = x % base;\n        ans = std::to_string(temp)\
    \ + ans;\n        x = x / base;\n    }\n    return ans;", "    std::string ans\
    \ = \"\";\n    long temp = 0;\n    while (x > 0) {\n        temp = x % base;\n\
    \        ans = std::to_string(temp) + ans;\n        x = x / base;\n    }\n   \
    \ return ans;", "    std::string result;\n    while (x > 0) {\n        int digit\
    \ = x % base;\n        x /= base;\n        result += std::to_string(digit);\n\
    \    }\n    return result;", "    std::string ans = \"\";\n    long temp = x;\n\
    \    while (temp != 0) {\n        ans += (char)(temp % base);\n        temp /=\
    \ base;\n    }\n    return ans;", "    std::string res;\n    while (x > 0) {\n\
    \        res.push_back((x % base) + '0');\n        x /= base;\n    }\n    res.push_back('0');\n\
    \    return res;", "    std::string res;\n    while (x > 0) {\n        res.push_back((x\
    \ % base) + '0');\n        x /= base;\n    }\n    res.push_back('0');\n    return\
    \ res;", "    std::string ans = \"\";\n    long tmp = x;\n    while (base > 0)\
    \ {\n        tmp = tmp / base;\n        ans = std::to_string(tmp % base) + ans;\n\
    \        base--;\n    }\n    return ans;", "    std::string ans = \"\";\n    long\
    \ temp = 0;\n    while (x > 0) {\n        temp = x % base;\n        ans = std::to_string(temp)\
    \ + ans;\n        x = x / base;\n    }\n    return ans;", "    std::string ans\
    \ = \"\";\n    long tmp = x;\n    while (base > 0) {\n        tmp = tmp / base;\n\
    \        ans = std::to_string(tmp) + ans;\n        base--;\n    }\n    while (base\
    \ < 0) {\n        tmp = tmp * base;\n        ans = std::to_string(tmp) + ans;\n\
    \        base++;\n    }\n    return ans;", "    std::string ans = \"\";\n    long\
    \ rem = x % base;\n    long temp = x / base;\n    while (temp != 0) {\n      \
    \  ans += (char)(temp % 10 + '0');\n        temp /= 10;\n    }\n    ans += (char)(rem\
    \ + '0');\n    return ans;", "    std::string ans = \"\";\n    long temp = 0;\n\
    \    while (x != 0) {\n        temp = x % base;\n        ans = std::to_string(temp)\
    \ + ans;\n        x = x / base;\n    }\n    return ans;", "    std::string ans\
    \ = \"\";\n    long temp = x;\n    while (temp != 0) {\n        temp = temp /\
    \ base;\n        ans = std::to_string(temp) + ans;\n    }\n    return ans;", " \
    \   std::string ans = \"\";\n    long temp = x;\n    while (temp != 0) {\n   \
    \     int digit = temp % base;\n        ans = std::to_string(digit) + ans;\n \
    \       temp = temp / base;\n    }\n    return ans;", "    std::string s = std::to_string(x);\n\
    \    std::string ans = \"\";\n    while (s.size() > 0) {\n        int d = std::stoi(s.substr(0,\
    \ s.size() - 1));\n        long r = std::stoi(s.substr(s.size() - 1));\n     \
    \   long t = r / base;\n        long r = r - t * base;\n        ans += std::to_string(t);\n\
    \        s = std::to_string(r);\n    }\n    return ans;", "    std::string ans\
    \ = \"\";\n    while (x > 0) {\n        ans += (char)(x % base);\n        x /=\
    \ base;\n    }\n    return ans;", "    std::string ans = \"\";\n    while (x >\
    \ 0) {\n        ans += (char)(x % base);\n        x /= base;\n    }\n    return\
    \ ans;", "    std::string ans = \"\";\n    while (x > 0) {\n        ans = std::to_string(x%base)\
    \ + ans;\n        x /= base;\n    }\n    return ans;", "    std::string ans =\
    \ \"\";\n    long tmp = x;\n    while (base > 0) {\n        tmp = tmp / base;\n\
    \        ans = std::to_string(tmp) + ans;\n        base--;\n    }\n    return\
    \ ans;", "    std::string ans = \"\";\n    while (x > 0) {\n        int rem =\
    \ x % base;\n        ans = to_string(rem) + ans;\n        x = x / base;\n    }\n\
    \    return ans;", "    std::string ans = \"\";\n    long temp;\n    temp = x;\n\
    \    while (temp != 0) {\n        temp = temp / base;\n        ans = std::to_string(temp)\
    \ + ans;\n    }\n    return ans;", "    std::string ans = \"\";\n    long n =\
    \ x;\n    while (n > 0) {\n        int digit = n % base;\n        ans += digit;\n\
    \        n /= base;\n    }\n    return ans;", "    std::string ans = \"\";\n \
    \   while (x > 0) {\n        ans += (char)(x % base);\n        x /= base;\n  \
    \  }\n    return ans;", "    std::string res;\n    while (x != 0) {\n        res.insert(res.begin(),\
    \ x % base);\n        x /= base;\n    }\n    return res;", "    std::string ans\
    \ = \"\";\n    long rem = x;\n    while (x > 0) {\n        rem = rem % base;\n\
    \        ans = std::to_string(rem) + ans;\n        x /= base;\n    }\n    return\
    \ ans;", "    std::string ans = \"\";\n    while (x > 0) {\n        int digit\
    \ = x % base;\n        ans = std::to_string(digit) + ans;\n        x /= base;\n\
    \    }\n    return ans;", "    std::string ans = \"\";\n    while (x > 0) {\n\
    \        ans += (char)(x % base);\n        x /= base;\n    }\n    return ans;",
  "    std::string ans = \"\";\n    long tmp = x;\n    while (base > 0) {\n      \
    \  tmp = tmp / base;\n        ans = std::to_string(tmp % base) + ans;\n      \
    \  base--;\n    }\n    return ans;", "    std::string ans = \"\";\n    while (x\
    \ > 0) {\n        int r = x % base;\n        ans = std::to_string(r) + ans;\n\
    \        x = x / base;\n    }\n    return ans;", "    std::string ans = \"\";\n\
    \    long tmp = x;\n    while (base > 0) {\n        tmp = tmp / base;\n      \
    \  ans = std::to_string(tmp) + ans;\n        base--;\n    }\n    return ans;",
  "    std::string ans = \"\";\n    long tmp = x;\n    while (base > 0) {\n      \
    \  tmp = tmp / base;\n        ans = std::to_string(tmp) + ans;\n        base--;\n\
    \    }\n    while (base < 0) {\n        tmp = tmp * base;\n        ans = std::to_string(tmp)\
    \ + ans;\n        base++;\n    }\n    return ans;", "    std::string ans = \"\"\
    ;\n    while (x > 0) {\n        int r = x % base;\n        ans = std::to_string(r)\
    \ + ans;\n        x = x / base;\n    }\n    return ans;", "    std::string ans\
    \ = \"\";\n    while (x > 0) {\n        int rem = x % base;\n        ans = std::to_string(rem)\
    \ + ans;\n        x = x / base;\n    }\n    return ans;", "    std::string ans\
    \ = \"\";\n    while (x > 0) {\n        int digit = x % base;\n        ans +=\
    \ (char)(digit + '0');\n        x /= base;\n    }\n    return ans;", "    std::string\
    \ ans = \"\";\n    while (x > 0) {\n        int rem = x % base;\n        ans =\
    \ to_string(rem) + ans;\n        x = x / base;\n    }\n    return ans;", "   \
    \ std::string ans = \"\";\n    while (x > 0) {\n        ans += (char)(x % base);\n\
    \        x /= base;\n    }\n    return ans;", "    std::string ans = \"\";\n \
    \   while (x > 0) {\n        int rem = x % base;\n        ans = to_string(rem)\
    \ + ans;\n        x = x / base;\n    }\n    return ans;", "    std::string res;\n\
    \    while (x > 0) {\n        res.push_back((x % base) + '0');\n        x /= base;\n\
    \    }\n    res.push_back('0');\n    return res;", "    std::string s = std::to_string(x);\n\
    \    std::string res = \"\";\n    while (s.size() > 0) {\n        int digit =\
    \ s.find_first_not_of(\"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    );\n        if (digit == std::string::npos) {\n            digit = s.size();\n\
    \        }\n        res += s.substr(0, digit);\n        s = s.substr(digit);\n\
    \    }\n    while (s.size() > 0) {\n        int digit = s.find_first_of(\"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    );\n        if (digit == std::string::npos) {\n            digit = s.size();\n\
    \        }\n        res += s.substr(0, digit);\n        s = s.substr(digit);\n\
    \    }\n    while (s.size() > 0) {\n        int digit = s.find_first_not_of(\"\
    0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\");\n        if\
    \ (digit == std::string::npos) {\n            digit = s.size();\n        }\n \
    \       res += s.substr(0, digit);\n        s = s.substr(digit);\n    }\n    while\
    \ (s.size() > 0) {\n        int digit = s.find_first_of(\"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    );\n        if (digit == std::string::npos) {\n            digit = s.size();\n\
    \        }\n        res += s.substr(0, digit);\n        s = s.substr(digit);\n\
    \    }\n    while (s.size() > 0) {\n        int digit = s.find_first_not_of(\"\
    0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\");\n        if\
    \ (digit == std::string::npos) {\n            digit = s.size();\n        }\n \
    \       res += s.substr(0, digit);\n        s = s.substr(digit);\n    }\n    while\
    \ (s.size() > 0) {\n        int digit = s.find_first_of(\"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    );\n        if (digit == std::string::npos) {\n            digit = s.size();\n\
    \        }\n        res += s.substr(0, digit);\n        s = s.substr(digit);\n\
    \    }\n    while (s.size() > 0) {\n        int digit = s.find_first_not_of(\"\
    0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\");\n        if\
    \ (digit == std::string::npos) {\n            digit = s.size();\n        }\n \
    \       re", "    std::string ans = \"\";\n    long temp = 0;\n    while (x >\
    \ 0) {\n        temp = x % base;\n        ans = std::to_string(temp) + ans;\n\
    \        x = x / base;\n    }\n    return ans;", "    std::string ans = \"\";\n\
    \    while (x > 0) {\n        ans += (char)(x % base);\n        x /= base;\n \
    \   }\n    return ans;", "    std::string ans = \"\";\n    long temp = 0;\n  \
    \  temp = x;\n    while (temp > 0) {\n        ans += (temp % base);\n        temp\
    \ /= base;\n    }\n    return ans;", "    std::string ans = \"\";\n    while (x\
    \ > 0) {\n        int rem = x % base;\n        ans += (char)(rem + '0');\n   \
    \     x /= base;\n    }\n    return ans;", "    std::string ans = \"\";\n    long\
    \ temp;\n    while (x != 0) {\n        temp = x % base;\n        ans = std::to_string(temp)\
    \ + ans;\n        x = x / base;\n    }\n    return ans;", "    std::string ans\
    \ = \"\";\n    while (x > 0) {\n        ans += (char)(x % base);\n        x /=\
    \ base;\n    }\n    return ans;", "    std::string ans = \"\";\n    long tmp =\
    \ x;\n    while (base > 0) {\n        tmp = tmp / base;\n        ans = std::to_string(tmp\
    \ % base) + ans;\n        base--;\n    }\n    return ans;", "    std::string ans\
    \ = \"\";\n    while (x > 0) {\n        int digit = x % base;\n        ans = std::to_string(digit)\
    \ + ans;\n        x /= base;\n    }\n    return ans;", "    std::string ans =\
    \ \"\";\n    long tmp = x;\n    while (base > 0) {\n        tmp = tmp / base;\n\
    \        ans = std::to_string(tmp % base) + ans;\n        base--;\n    }\n   \
    \ return ans;", "    std::string ans = \"\";\n    while (x > 0) {\n        ans\
    \ = std::to_string(x % base) + ans;\n        x /= base;\n    }\n    return ans;",
  "    std::string ans = \"\";\n    long tmp = x;\n    while (base > 0) {\n      \
    \  tmp = tmp / base;\n        ans = std::to_string(tmp % base) + ans;\n      \
    \  base--;\n    }\n    return ans;", "    std::string ans = \"\";\n    long temp\
    \ = 0;\n    while (x > 0) {\n        temp = x % base;\n        ans = std::to_string(temp)\
    \ + ans;\n        x = x / base;\n    }\n    return ans;", "    std::string ans\
    \ = \"\";\n    long temp = 0;\n    while (x > 0) {\n        temp = x % base;\n\
    \        ans = std::to_string(temp) + ans;\n        x = x / base;\n    }\n   \
    \ return ans;", "    std::string res;\n    while (x > 0) {\n        res.push_back((x\
    \ % base) + '0');\n        x /= base;\n    }\n    res.push_back('0');\n    return\
    \ res;", "    std::string ans = \"\";\n    long temp = x;\n    while (temp !=\
    \ 0) {\n        int rem = temp % base;\n        ans = to_string(rem) + ans;\n\
    \        temp = temp / base;\n    }\n    return ans;", "    std::string ans =\
    \ \"\";\n    while (x > 0) {\n        ans += (char)(x % base);\n        x /= base;\n\
    \    }\n    return ans;", "    std::string ans = \"\";\n    long temp = 0;\n \
    \   while (x > 0) {\n        temp = x % base;\n        ans = std::to_string(temp)\
    \ + ans;\n        x = x / base;\n    }\n    return ans;", "    std::string ans\
    \ = \"\";\n    long tmp = x;\n    while (base > 0) {\n        tmp = tmp / base;\n\
    \        ans = std::to_string(tmp) + ans;\n        base--;\n    }\n    return\
    \ ans;", "    std::string res;\n    long temp;\n    while (x != 0) {\n       \
    \ temp = x % base;\n        res.push_back(to_string(temp));\n        x = x / base;\n\
    \    }\n    return res;", "    std::string ans = \"\";\n    while (x > 0) {\n\
    \        ans += (char)(x % base);\n        x /= base;\n    }\n    return ans;",
  "    std::string ans = \"\";\n    long tmp = x;\n    while (base > 0) {\n      \
    \  tmp = tmp / base;\n        ans = std::to_string(tmp) + ans;\n        base--;\n\
    \    }\n    return ans;", "    std::string ans = \"\";\n    while (x != 0) {\n\
    \        long r = x % base;\n        ans = std::to_string(r) + ans;\n        x\
    \ = x / base;\n    }\n    return ans;", "    std::string ans = \"\";\n    long\
    \ temp = 0;\n    while (x > 0) {\n        temp = x % base;\n        ans = std::to_string(temp)\
    \ + ans;\n        x = x / base;\n    }\n    return ans;", "    std::string s =\
    \ std::to_string(x);\n    std::string result = \"\";\n    long pos = 0;\n    while\
    \ (pos < s.size()) {\n        long digit = std::stoi(s.substr(pos, 1), nullptr,\
    \ base);\n        result += std::to_string(digit);\n        pos += 1;\n    }\n\
    \    return result;", "    std::string ans = \"\";\n    while (x > 0) {\n    \
    \    ans = std::to_string(x % base) + ans;\n        x /= base;\n    }\n    return\
    \ ans;", "    std::string ans = \"\";\n    while (x > 0) {\n        ans += (char)(x\
    \ % base);\n        x /= base;\n    }\n    return ans;", "    std::string ans\
    \ = \"\";\n    while (x > 0) {\n        ans += (char)(x % base);\n        x /=\
    \ base;\n    }\n    return ans;", "    std::string res;\n    while (x != 0) {\n\
    \        res.push_back((x % base) + '0');\n        x /= base;\n    }\n    res.push_back('0');\n\
    \    return res;", "    std::string ans = \"\";\n    long temp = x;\n    while\
    \ (temp != 0) {\n        int digit = temp % base;\n        ans = std::to_string(digit)\
    \ + ans;\n        temp = temp / base;\n    }\n    return ans;", "    std::string\
    \ ans = \"\";\n    long tmp = x;\n    while (base > 0) {\n        tmp = tmp /\
    \ base;\n        ans = std::to_string(tmp % base) + ans;\n        base = base\
    \ * 10;\n    }\n    return ans;", "    std::string ans = \"\";\n    long temp\
    \ = 0;\n    while (x > 0) {\n        temp = x % base;\n        ans = std::to_string(temp)\
    \ + ans;\n        x = x / base;\n    }\n    return ans;", "    std::string ans\
    \ = \"\";\n    while (x > 0) {\n        ans += (char)(x % base);\n        x /=\
    \ base;\n    }\n    return ans;", "    std::string ans = \"\";\n    long temp\
    \ = 0;\n    while (x > 0) {\n        temp = x % base;\n        ans = std::to_string(temp)\
    \ + ans;\n        x = x / base;\n    }\n    return ans;", "    std::string ans\
    \ = \"\";\n    long r = x;\n    while (base > 0) {\n        r = r / base;\n  \
    \      ans = std::to_string(r) + ans;\n        base--;\n    }\n    return ans;",
  "    std::string res;\n    long temp = x;\n    while (temp > 0) {\n        res.push_back((temp\
    \ % base) + '0');\n        temp = temp / base;\n    }\n    res.push_back('0');\n\
    \    return res;", "    std::string ans = \"\";\n    long temp = 0;\n    while\
    \ (x != 0) {\n        temp = x % base;\n        ans = std::to_string(temp) + ans;\n\
    \        x = x / base;\n    }\n    return ans;", "    std::string ans = \"\";\n\
    \    while (x > 0) {\n        int digit = x % base;\n        ans = std::to_string(digit)\
    \ + ans;\n        x = x / base;\n    }\n    return ans;", "    std::string res;\n\
    \    while (x > 0) {\n        res.insert(res.begin(), x % base);\n        x /=\
    \ base;\n    }\n    return res;", "    std::string res;\n    while (x != 0) {\n\
    \        res.push_back((x % base) + '0');\n        x /= base;\n    }\n    res.push_back('0');\n\
    \    return res;", "    std::string res;\n    while (x > 0) {\n        res.push_back((x\
    \ % base) + '0');\n        x /= base;\n    }\n    res.push_back('0');\n    return\
    \ res;", "    std::string ans = \"\";\n    while (x > 0) {\n        ans += (char)(x\
    \ % base);\n        x /= base;\n    }\n    return ans;", "    std::string res;\n\
    \    while (x > 0) {\n        res.push_back((x % base) + '0');\n        x /= base;\n\
    \    }\n    res.push_back('0');\n    return res;", "    std::string res;\n   \
    \ if (base == 10)\n        res = \"0\";\n    while (x > 0) {\n        int rem\
    \ = x % base;\n        res.insert(0, (char)(rem + '0'));\n        x /= base;\n\
    \    }\n    return res;", "    std::string ans = \"\";\n    while (x > 0) {\n\
    \        int digit = x % base;\n        ans += (char)(digit + '0');\n        x\
    \ /= base;\n    }\n    return ans;", "    std::string ans = \"\";\n    long temp\
    \ = 0;\n    while (x > 0) {\n        temp = x % base;\n        ans = std::to_string(temp)\
    \ + ans;\n        x = x / base;\n    }\n    return ans;", "    std::string ans\
    \ = \"\";\n    while (x > 0) {\n        ans += (char)(x % base);\n        x /=\
    \ base;\n    }\n    return ans;", "    std::string ans = \"\";\n    long temp\
    \ = x;\n    while (temp != 0) {\n        ans += (temp % base);\n        temp /=\
    \ base;\n    }\n    return ans;", "    std::string res;\n    while (x > 0) {\n\
    \        res.insert(res.begin(), x % base);\n        x /= base;\n    }\n    return\
    \ res;", "    std::string ans = \"\";\n    while (x != 0) {\n        long rem\
    \ = x % base;\n        ans = std::to_string(base) + ans;\n        x = rem;\n \
    \   }\n    return ans;", "    std::string res;\n    long tmp = x;\n    while (base\
    \ > 0) {\n        if (tmp % base == 0) {\n            res += tmp / base;\n   \
    \         tmp %= base;\n        }\n        base /= 10;\n    }\n    if (tmp !=\
    \ 0) {\n        res += tmp;\n    }\n    return res;", "    std::string s = std::to_string(x);\n\
    \    std::string res = \"\";\n    while (s.size() > 0) {\n        long digit =\
    \ std::stoi(s.substr(0, s.length() - 1));\n        long mod = pow(base, digit);\n\
    \        res += std::to_string(mod);\n        s = s.substr(s.length() - 1);\n\
    \    }\n    return res;", "    std::string ans = \"\";\n    long temp = x;\n \
    \   while (temp > 0) {\n        ans += (temp % base);\n        temp /= base;\n\
    \    }\n    return ans;", "    std::string ans = \"\";\n    while (x > 0) {\n\
    \        ans += (char)(x % base);\n        x /= base;\n    }\n    return ans;",
  "    std::string ans = \"\";\n    long tmp = x;\n    while (base > 0) {\n      \
    \  tmp = tmp / base;\n        ans = std::to_string(tmp % base) + ans;\n      \
    \  base--;\n    }\n    return ans;", "    std::string ans = \"\";\n    long temp\
    \ = 0;\n    temp = x;\n    while (temp != 0) {\n        temp = temp / base;\n\
    \        ans = std::to_string(temp) + ans;\n    }\n    return ans;", "    std::string\
    \ ans = \"\";\n    long tmp = x;\n    while (base > 0) {\n        tmp = tmp /\
    \ base;\n        ans = std::to_string(tmp % base) + ans;\n        base--;\n  \
    \  }\n    while (base < 0) {\n        tmp = tmp * base;\n        ans = std::to_string(tmp\
    \ % base) + ans;\n        base++;\n    }\n    return ans;", "    std::string ans\
    \ = \"\";\n    while (x > 0) {\n        long r = x % base;\n        ans = std::to_string(r)\
    \ + ans;\n        x = x / base;\n    }\n    return ans;", "    std::string ans\
    \ = \"\";\n    while (x > 0) {\n        int rem = x % base;\n        ans = std::to_string(rem)\
    \ + ans;\n        x = x / base;\n    }\n    return ans;", "    std::string ans\
    \ = \"\";\n    while (x > 0) {\n        ans += (char)(x % base);\n        x /=\
    \ base;\n    }\n    return ans;", "    std::string res;\n    long temp = x;\n\
    \    while (temp > 0) {\n        res.push_back(temp % base);\n        temp = temp\
    \ / base;\n    }\n    res.push_back('0');\n    while (res[res.size() - 1] == '0')\
    \ {\n        res.pop_back();\n    }\n    return res;", "    std::string ans =\
    \ \"\";\n    while (x != 0) {\n        ans += (char)(x % base);\n        x /=\
    \ base;\n    }\n    return ans;", "    std::string result;\n    while (x > 0)\
    \ {\n        int digit = x % base;\n        x /= base;\n        result += std::to_string(digit);\n\
    \    }\n    return result;", "    std::string ans = \"\";\n    while (x > 0) {\n\
    \        ans += (char)(x % base);\n        x /= base;\n    }\n    return ans;",
  "    std::string ans = \"\";\n    long rem = x % base;\n    long temp = x;\n   \
    \ while (temp != 0) {\n        temp = temp / base;\n        ans = std::to_string(temp)\
    \ + ans;\n    }\n    ans = std::to_string(rem) + ans;\n    return ans;", "   \
    \ std::string ans = \"\";\n    while (x > 0) {\n        int r = x % base;\n  \
    \      ans += (char) (r + '0');\n        x /= base;\n    }\n    return ans;",
  "    std::string ans = \"\";\n    long temp;\n    while (x != 0) {\n        temp\
    \ = x % base;\n        ans = std::to_string(temp) + ans;\n        x = x / base;\n\
    \    }\n    return ans;", "    std::string result;\n    long temp = x;\n    while\
    \ (temp > 0) {\n        int digit = temp % base;\n        temp = temp / base;\n\
    \        if (digit < 10)\n            result += std::to_string(digit);\n     \
    \   else\n            result += std::to_string(digit - 10) + 'A';\n    }\n   \
    \ return result;", "    std::string ans = \"\";\n    while (x > 0) {\n       \
    \ int digit = x % base;\n        ans += (char)(digit + '0');\n        x /= base;\n\
    \    }\n    return ans;", "    std::string ans = \"\";\n    while (x != 0) {\n\
    \        int digit = x % base;\n        ans = std::to_string(digit) + ans;\n \
    \       x = x / base;\n    }\n    return ans;", "    std::string result;\n   \
    \ long temp;\n    while (x > 0) {\n        temp = x % base;\n        result +=\
    \ std::to_string(temp);\n        x /= base;\n    }\n    if (x != 0) {\n      \
    \  result += std::to_string(x);\n    }\n    return result;", "    std::string\
    \ ans = \"\";\n    long temp = 0;\n    while (x > 0) {\n        temp = x % base;\n\
    \        ans = std::to_string(temp) + ans;\n        x = x / base;\n    }\n   \
    \ return ans;", "    std::string ans = \"\";\n    long temp = 0;\n    while (x\
    \ > 0) {\n        temp = x % base;\n        ans = std::to_string(temp) + ans;\n\
    \        x = x / base;\n    }\n    return ans;", "    std::string ans = \"\";\n\
    \    long temp = x;\n    while (temp > 0) {\n        int rem = temp % base;\n\
    \        ans = to_string(rem) + ans;\n        temp = temp / base;\n    }\n   \
    \ return ans;", "    std::string ans = \"\";\n    long temp;\n    while (x > 0)\
    \ {\n        temp = x % base;\n        ans += std::to_string(temp);\n        x\
    \ /= base;\n    }\n    return ans;", "    std::string res;\n    while (x > 0)\
    \ {\n        res.push_back((x % base) + '0');\n        x /= base;\n    }\n   \
    \ res.push_back('0');\n    return res;", "    std::string res;\n    long temp\
    \ = x;\n    while (temp > 0) {\n        res.push_back((temp % base) + '0');\n\
    \        temp = temp / base;\n    }\n    res.push_back('0');\n    return res;",
  "    std::string ans = \"\";\n    long temp = x;\n    while (temp != 0) {\n    \
    \    int rem = temp % base;\n        ans = std::to_string(rem) + ans;\n      \
    \  temp = temp / base;\n    }\n    return ans;", "    std::string res;\n    long\
    \ temp;\n    temp = x;\n    while (temp > 0) {\n        res += (temp % base);\n\
    \        temp /= base;\n    }\n    return res;", "    std::string result;\n  \
    \  long temp;\n    temp = x;\n    while (temp > 0) {\n        int rem = temp %\
    \ base;\n        temp = temp / base;\n        if (rem > 9) {\n            result\
    \ += (rem - 10) + 'A';\n        } else {\n            result += rem + '0';\n \
    \       }\n    }\n    return result;", "    std::string res;\n    long temp;\n\
    \    temp = x;\n    while (temp != 0) {\n        res += (temp % base);\n     \
    \   temp /= base;\n    }\n    return res;", "    std::string ans = \"\";\n   \
    \ while (x > 0) {\n        ans += (char)(x % base);\n        x /= base;\n    }\n\
    \    return ans;", "    std::string s = std::to_string(x);\n    std::string result\
    \ = \"\";\n    long sum = 0;\n    for (int i = 0; i < s.size(); i++) {\n     \
    \   sum += std::pow(base, i);\n    }\n    long temp = sum % base;\n    result\
    \ += s.substr(0, i);\n    result += std::to_string(temp);\n    return result;",
  "    std::string ans = \"\";\n    long temp = x;\n    while (temp != 0) {\n    \
    \    int digit = temp % base;\n        ans = std::to_string(digit) + ans;\n  \
    \      temp = temp / base;\n    }\n    return ans;", "    std::string res;\n \
    \   long temp = x;\n    while (temp > 0) {\n        res += (char)(temp % base);\n\
    \        temp /= base;\n    }\n    return res;", "    std::string ans = \"\";\n\
    \    long n = x;\n    while (n > 0) {\n        ans += n % base;\n        n /=\
    \ base;\n    }\n    return ans;", "    std::string ans = \"\";\n    while (x !=\
    \ 0) {\n        ans += (x % base);\n        x /= base;\n    }\n    return ans;",
  "    std::string s = std::to_string(x);\n    std::string result = \"\";\n    long\
    \ power = 1;\n    while (s.size() > 0) {\n        int digit = s[s.size() - 1]\
    \ - '0';\n        long tmp = power * digit;\n        result += std::to_string(tmp);\n\
    \        power /= base;\n    }\n    return result;", "    std::string ans = \"\
    \";\n    while (x > 0) {\n        int digit = x % base;\n        ans = std::to_string(digit)\
    \ + ans;\n        x = x / base;\n    }\n    return ans;", "    std::string ans\
    \ = \"\";\n    while (x != 0) {\n        long rem = x % base;\n        ans +=\
    \ (char)(rem + '0');\n        x = x / base;\n    }\n    return ans;", "    std::string\
    \ res;\n    while (x > 0) {\n        res.push_back((x % base) + '0');\n      \
    \  x /= base;\n    }\n    res.push_back('0');\n    return res;", "    std::string\
    \ ans = \"\";\n    while (x > 0) {\n        ans += (char)(x % base);\n       \
    \ x /= base;\n    }\n    return ans;", "    std::string ans = \"\";\n    while\
    \ (x > 0) {\n        ans += (char)(x % base);\n        x /= base;\n    }\n   \
    \ return ans;", "    std::string ans = \"\";\n    long temp = 0;\n    while (x\
    \ > 0) {\n        temp = x % base;\n        ans = std::to_string(temp) + ans;\n\
    \        x = x / base;\n    }\n    return ans;", "    std::string res;\n    long\
    \ temp;\n    temp = x;\n    while (temp > 0) {\n        res += (temp % base);\n\
    \        temp /= base;\n    }\n    return res;", "    std::string ans = \"\";\n\
    \    while (x > 0) {\n        ans += (char)(x % base);\n        x /= base;\n \
    \   }\n    return ans;", "    std::string ans = \"\";\n    long temp = 0;\n  \
    \  while (x != 0) {\n        temp = x % base;\n        ans = std::to_string(temp)\
    \ + ans;\n        x = x / base;\n    }\n    return ans;", "    std::string res;\n\
    \    while (x > 0) {\n        res.push_back((x % base) + '0');\n        x /= base;\n\
    \    }\n    res.push_back('0');\n    return res;", "    std::string ans = \"\"\
    ;\n    while (x > 0) {\n        ans += (char)(x % base);\n        x /= base;\n\
    \    }\n    return ans;", "    std::string ans = \"\";\n    long tmp = x;\n  \
    \  while (base > 0) {\n        tmp = tmp / base;\n        ans = std::to_string(tmp)\
    \ + ans;\n        base--;\n    }\n    return ans;", "    std::string ans = \"\"\
    ;\n    while (x > 0) {\n        int r = x % base;\n        ans = std::to_string(r)\
    \ + ans;\n        x /= base;\n    }\n    return ans;", "    std::string ans =\
    \ \"\";\n    while (x > 0) {\n        ans += (char)(x % base);\n        x /= base;\n\
    \    }\n    return ans;", "    std::string ans = \"\";\n    long tmp = x;\n  \
    \  while (base > 0) {\n        tmp = tmp / base;\n        ans = std::to_string(tmp)\
    \ + ans;\n        base--;\n    }\n    while (base < 0) {\n        tmp = tmp *\
    \ base;\n        ans = std::to_string(tmp) + ans;\n        base++;\n    }\n  \
    \  return ans;", "    std::string ans = \"\";\n    while (x != 0) {\n        int\
    \ digit = x % base;\n        ans = std::to_string(digit) + ans;\n        x /=\
    \ base;\n    }\n    return ans;", "    std::string res;\n    while (x > 0) {\n\
    \        res.push_back((x % base) + '0');\n        x /= base;\n    }\n    res.push_back('0');\n\
    \    return res;", "    std::string ans = \"\";\n    while (x != 0) {\n      \
    \  long rem = x % base;\n        ans = std::to_string(rem) + ans;\n        x =\
    \ x / base;\n    }\n    return ans;", "    std::string ans = \"\";\n    long tmp\
    \ = x;\n    while (base > 0) {\n        tmp = tmp / base;\n        ans = std::to_string(tmp\
    \ % base) + ans;\n        base--;\n    }\n    return ans;", "    std::string ans\
    \ = \"\";\n    while (x > 0) {\n        int rem = x % base;\n        ans = to_string(rem)\
    \ + ans;\n        x = x / base;\n    }\n    return ans;", "    std::string ans\
    \ = \"\";\n    long temp;\n    while (x > 0) {\n        temp = x % base;\n   \
    \     ans = std::to_string(temp) + ans;\n        x = x / base;\n    }\n    return\
    \ ans;", "    std::string res;\n    while (x > 0) {\n        res.push_back((x\
    \ % base) + '0');\n        x /= base;\n    }\n    res.push_back('0');\n    return\
    \ res;", "    std::string res;\n    while (x > 0) {\n        res.push_back((x\
    \ % base) + '0');\n        x /= base;\n    }\n    res.push_back('0');\n    return\
    \ res;", "    std::string ans = \"\";\n    long temp = 0;\n    while (x > 0) {\n\
    \        temp = x % base;\n        ans = std::to_string(temp) + ans;\n       \
    \ x = x / base;\n    }\n    return ans;", "    std::string res;\n    while (x\
    \ > 0) {\n        res.push_back((x % base) + '0');\n        x /= base;\n    }\n\
    \    res.push_back('0');\n    res.reverse();\n    return res;", "    std::string\
    \ ans = \"\";\n    long temp = x;\n    while (temp > 0) {\n        ans = std::to_string(temp\
    \ % base) + ans;\n        temp = temp / base;\n    }\n    return ans;", "    std::string\
    \ ans = \"\";\n    long temp = 0;\n    temp = x;\n    while (temp > 0) {\n   \
    \     temp = temp / base;\n        ans = std::to_string(temp) + ans;\n    }\n\
    \    return ans;", "    std::string ans = \"\";\n    long temp = x;\n    while\
    \ (temp > 0) {\n        int digit = temp % base;\n        ans += digit;\n    \
    \    temp /= base;\n    }\n    return ans;", "    std::string ans = \"\";\n  \
    \  while (x > 0) {\n        ans += (char)(x % base);\n        x /= base;\n   \
    \ }\n    return ans;", "    std::string ans = \"\";\n    long temp = x;\n    while\
    \ (temp != 0) {\n        temp = temp / base;\n        ans = std::to_string(temp)\
    \ + ans;\n    }\n    return ans;"]
stop_tokens:
- "\n}"

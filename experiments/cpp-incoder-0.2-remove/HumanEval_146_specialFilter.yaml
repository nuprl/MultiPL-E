name: HumanEval_146_specialFilter
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that takes\
  \ an array of numbers as input and returns \n// the number of elements in the array\
  \ that are greater than 10 and both \n// first and last digits of a number are odd\
  \ (1, 3, 5, 7, 9).\n// For example:\nlong specialFilter(std::vector<long> nums)\
  \ {\n"
tests: "}\nint main() {\n    auto candidate = specialFilter;\n    assert(candidate((std::vector<long>({(long)5,\
  \ (long)-2, (long)1, (long)-5}))) == (0));\n    assert(candidate((std::vector<long>({(long)15,\
  \ (long)-73, (long)14, (long)-15}))) == (1));\n    assert(candidate((std::vector<long>({(long)33,\
  \ (long)-2, (long)-3, (long)45, (long)21, (long)109}))) == (2));\n    assert(candidate((std::vector<long>({(long)43,\
  \ (long)-12, (long)93, (long)125, (long)121, (long)109}))) == (4));\n    assert(candidate((std::vector<long>({(long)71,\
  \ (long)-2, (long)-33, (long)75, (long)21, (long)19}))) == (3));\n    assert(candidate((std::vector<long>({(long)1})))\
  \ == (0));\n    assert(candidate((std::vector<long>())) == (0));\n}\n"
completions: []
stop_tokens:
- "\n}"

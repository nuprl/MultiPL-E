name: HumanEval_96_count_up_to
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Implement a function that\
  \ takes an non-negative integer and returns an array of the first n\n// integers\
  \ that are prime numbers and less than n.\n// for example:\nstd::vector<long> count_up_to(long\
  \ n) {\n"
tests: "}\nint main() {\n    auto candidate = count_up_to;\n    assert(candidate((5))\
  \ == (std::vector<long>({(long)2, (long)3})));\n    assert(candidate((6)) == (std::vector<long>({(long)2,\
  \ (long)3, (long)5})));\n    assert(candidate((7)) == (std::vector<long>({(long)2,\
  \ (long)3, (long)5})));\n    assert(candidate((10)) == (std::vector<long>({(long)2,\
  \ (long)3, (long)5, (long)7})));\n    assert(candidate((0)) == (std::vector<long>()));\n\
  \    assert(candidate((22)) == (std::vector<long>({(long)2, (long)3, (long)5, (long)7,\
  \ (long)11, (long)13, (long)17, (long)19})));\n    assert(candidate((1)) == (std::vector<long>()));\n\
  \    assert(candidate((18)) == (std::vector<long>({(long)2, (long)3, (long)5, (long)7,\
  \ (long)11, (long)13, (long)17})));\n    assert(candidate((47)) == (std::vector<long>({(long)2,\
  \ (long)3, (long)5, (long)7, (long)11, (long)13, (long)17, (long)19, (long)23, (long)29,\
  \ (long)31, (long)37, (long)41, (long)43})));\n    assert(candidate((101)) == (std::vector<long>({(long)2,\
  \ (long)3, (long)5, (long)7, (long)11, (long)13, (long)17, (long)19, (long)23, (long)29,\
  \ (long)31, (long)37, (long)41, (long)43, (long)47, (long)53, (long)59, (long)61,\
  \ (long)67, (long)71, (long)73, (long)79, (long)83, (long)89, (long)97})));\n}\n"
completions: ["  std::vector<long> primes;\n  primes.push_back(0);\n  long i = 1;\n\
    \  while (i < n) {\n    if (primes.back() <= i) {\n      primes.push_back(i);\n\
    \    }\n    i++;\n  }\n  return primes;", "    std::vector<long> primes;\n   \
    \ long i = 2;\n    while (i < n) {\n        if (n % i == 0) {\n            primes.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    return primes;", " \
    \   std::vector<long> primes;\n    primes.push_back(0);\n    long i = 1;\n   \
    \ while (i < n) {\n        if (primes.back() <= i && primes.back() + 1 < i) {\n\
    \            primes.push_back(i);\n            i += 1;\n        }\n        i +=\
    \ 2;\n    }\n    return primes;", "    std::vector<long> primes;\n    primes.push_back(0);\n\
    \    primes.push_back(1);\n    long i = 2;\n    while (i < n) {\n        if (primes.find(i)\
    \ != primes.end()) {\n            primes.push_back(i);\n        }\n        i++;\n\
    \    }\n    return primes;", "    std::vector<long> primes;\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    ", "    std::vector<long>\
    \ primes;\n    primes.push_back(n);\n    long i = 2;\n    while (i < n) {\n  \
    \      if (primes.count(i) == 0) {\n            primes.push_back(i);\n       \
    \     long j = 2;\n            while (j < i) {\n                if (i % j == 0)\
    \ {\n                    break;\n                }\n                j++;\n   \
    \         }\n            if (j == i) {\n                i++;\n            }\n\
    \        }\n        i++;\n    }\n    return primes;", "    std::vector<long> primes;\n\
    \    primes.push_back(n);\n    long i = 2;\n    while (i < n) {\n        if (primes.count(i)\
    \ == 0) {\n            primes.push_back(i);\n            while (i < n && primes.count(i)\
    \ == 0) {\n                i++;\n            }\n        }\n        i++;\n    }\n\
    \    return primes;", "    std::vector<long> primes;\n    primes.push_back(n);\n\
    \    long i = 2;\n    while (i < n) {\n        if (primes.count(i) == 0) {\n \
    \           primes.push_back(i);\n        }\n        i++;\n    }\n    return primes;",
  "    std::vector<long> primes;\n    primes.push_back(n);\n    long i = 2;\n    while\
    \ (i < n) {\n        if (primes.count(i) == 0) {\n            primes.push_back(i);\n\
    \            while (i < n && primes.count(i) == 0) {\n                i++;\n \
    \           }\n        }\n        i++;\n    }\n    return primes;", "    std::vector<long>\
    \ primes;\n    primes.push_back(n);\n    long i = 2;\n    while (i < n) {\n  \
    \      if (primes.count(i) == 0) {\n            primes.push_back(i);\n       \
    \ }\n        i++;\n    }\n    return primes;", "    std::vector<long> primes;\n\
    \    primes.push_back(0);\n    long count = 1;\n    long i = 2;\n    while (count\
    \ < n) {\n        if (primes.find(i) != primes.end()) {\n            count++;\n\
    \        } else {\n            primes.push_back(i);\n            count++;\n  \
    \      }\n        i++;\n    }\n    return primes;", "    std::vector<long> primes;\n\
    \    primes.push_back(0);\n    long counter = 1;\n    while (counter <= n) {\n\
    \        bool is_prime = true;\n        for (long i = 2; i <= counter; i++) {\n\
    \            if (counter % i == 0) {\n                is_prime = false;\n    \
    \            break;\n            }\n        }\n        if (is_prime) {\n     \
    \       primes.push_back(counter);\n        }\n        counter++;\n    }\n   \
    \ return primes;", "    std::vector<long> primes;\n    primes.push_back(n);\n\
    \    long i = 2;\n    while(i <= n) {\n        for(long j = 2; j <= i/2; ++j)\
    \ {\n            if(i%j == 0) {\n                break;\n            }\n     \
    \   }\n        if(j > i/2) {\n            primes.push_back(i);\n        }\n  \
    \      ++i;\n    }\n    return primes;", "    std::vector<long> primes;\n    primes.reserve(n);\n\
    \    long i = 2;\n    while (i < n) {\n        if (primes.count(i) == 0) {\n \
    \           primes.push_back(i);\n            i += 2;\n        }\n        else\
    \ {\n            i += 2;\n        }\n    }\n    return primes;", "    std::vector<long>\
    \ primes;\n    primes.push_back(n);\n    long i = 2;\n    while (i < n) {\n  \
    \      if (primes.count(i) == 0) {\n            primes.push_back(i);\n       \
    \     long j = 2;\n            while (j < i) {\n                if (i % j == 0)\
    \ {\n                    break;\n                }\n                j++;\n   \
    \         }\n        }\n        i++;\n    }\n    return primes;", "    std::vector<long>\
    \ primes;\n    primes.push_back(n);\n    long i = 2;\n    while (i < n) {\n  \
    \      if (primes.count(i) == 0) {\n            primes.push_back(i);\n       \
    \     while (i < n && primes.count(i) == 0) {\n                i++;\n        \
    \    }\n        }\n        i++;\n    }\n    return primes;", "    std::vector<long>\
    \ primes;\n    primes.push_back(n);\n    long i = 2;\n    while (i < n) {\n  \
    \      if (primes.count(i) == 0) {\n            primes.push_back(i);\n       \
    \ }\n        i += 2;\n    }\n    return primes;", "    std::vector<long> primes;\n\
    \    primes.reserve(n);\n    for (long i = 0; i <= n; i++) {\n        if (primes.empty()\
    \ || primes.back() <= i) {\n            primes.push_back(i);\n        }\n    \
    \    else {\n            long j = i;\n            while (j > 1) {\n          \
    \      if (primes.back() % j == 0) {\n                    break;\n           \
    \     }\n                j--;\n            }\n            if (j > 1) {\n     \
    \           primes.push_back(j);\n            }\n        }\n    }\n    return\
    \ primes;", "    std::vector<long> primes;\n    primes.push_back(n);\n    long\
    \ i = 2;\n    while (i < n) {\n        if (primes.count(i) == 0) {\n         \
    \   primes.push_back(i);\n        }\n        i++;\n    }\n    return primes;",
  "    std::vector<long> primes;\n    primes.push_back(0);\n    for (long i = 2; i\
    \ <= n; i++) {\n        if (primes.back() <= i) {\n            primes.push_back(i);\n\
    \        }\n    }\n    return primes;", "    std::vector<long> primes;\n    primes.push_back(0);\n\
    \    primes.push_back(n);\n    long counter = 1;\n    long i = 2;\n    while (i\
    \ < n) {\n        if (primes.find(i) == primes.end()) {\n            primes.push_back(i);\n\
    \            counter++;\n        }\n        i++;\n    }\n    return primes;",
  "    std::vector<long> primes;\n    primes.push_back(0);\n    primes.push_back(1);\n\
    \    long i = 2;\n    while (i < n) {\n        if (primes.count(i) == 0) {\n \
    \           primes.push_back(i);\n            i += 2;\n        }\n    }\n    return\
    \ primes;", "    std::vector<long> primes;\n    primes.push_back(n);\n    long\
    \ i = 2;\n    while (i < n) {\n        if (primes.count(i) == 0) {\n         \
    \   primes.push_back(i);\n            i += 1;\n        }\n        else {\n   \
    \         i += 1;\n        }\n    }\n    return primes;", "    std::vector<long>\
    \ primes;\n    primes.push_back(n);\n    long i = 2;\n    while (i < n) {\n  \
    \      if (primes.count(i) == 0) {\n            primes.push_back(i);\n       \
    \     while (i < n && primes.count(i) == 0) {\n                i++;\n        \
    \    }\n        }\n        i++;\n    }\n    return primes;", "  std::vector<long>\
    \ result;\n  long i = 2;\n  while (i <= n) {\n    bool is_prime = true;\n    for\
    \ (long j = 2; j < i; j++) {\n      if (i % j == 0) {\n        is_prime = false;\n\
    \        break;\n      }\n    }\n    if (is_prime) {\n      result.push_back(i);\n\
    \    }\n    i++;\n  }\n  return result;", "    std::vector<long> primes;\n   \
    \ primes.push_back(0);\n    primes.push_back(n);\n    long counter = 2;\n    long\
    \ limit = (long) sqrt(n);\n    while (counter < limit) {\n        if (primes[counter]\
    \ == 0) {\n            primes[counter] = counter;\n            counter++;\n  \
    \      }\n        else {\n            counter++;\n        }\n    }\n    return\
    \ primes;", "    std::vector<long> primes;\n    primes.push_back(0);\n    long\
    \ i = 2;\n    while(i < n) {\n        if(primes.count(i) == 0) {\n           \
    \ primes.push_back(i);\n            for(long j = i*i; j < n; j += i) {\n     \
    \           primes.push_back(j);\n            }\n        }\n        ++i;\n   \
    \ }\n    return primes;", "    std::vector<long> primes;\n    primes.push_back(0);\n\
    \    primes.push_back(1);\n    primes.push_back(2);\n    primes.push_back(3);\n\
    \    primes.push_back(5);\n    primes.push_back(7);\n    primes.push_back(11);\n\
    \    primes.push_back(13);\n    primes.push_back(17);\n    primes.push_back(19);\n\
    \    primes.push_back(23);\n    primes.push_back(29);\n    primes.push_back(31);\n\
    \    primes.push_back(37);\n    primes.push_back(41);\n    primes.push_back(43);\n\
    \    primes.push_back(47);\n    primes.push_back(53);\n    primes.push_back(59);\n\
    \    primes.push_back(61);\n    primes.push_back(67);\n    primes.push_back(71);\n\
    \    primes.push_back(73);\n    primes.push_back(79);\n    primes.push_back(83);\n\
    \    primes.push_back(89);\n    primes.push_back(97);\n    primes.push_back(101);\n\
    \    primes.push_back(103);\n    primes.push_back(107);\n    primes.push_back(109);\n\
    \    primes.push_back(113);\n    primes.push_back(127);\n    primes.push_back(131);\n\
    \    primes.push_back(137);\n    primes.push_back(139);\n    primes.push_back(143);\n\
    \    primes.push_back(147);\n    primes.push_back(151);\n    primes.push_back(157);\n\
    \    primes.push_back(163);\n    primes.push_back(167);\n    primes.push_back(173);\n\
    \    primes.push_back(179);\n    primes.push_back(181);\n    primes.push_back(191);\n\
    \    primes.push_back(193);\n    primes.push_back(197);\n    primes.push_back(199);\n\
    \    primes.push_back(211);\n    primes.push_back(223);\n    primes.push_back(227);\n\
    \    primes.push_back(229);\n    primes.push_back(233);\n    primes.push_back(239);\n\
    \    primes.push_back(241);\n    primes.push_back(251);\n    primes.push_back(257);\n\
    \    primes.push_back(263);\n    primes.push_back(269);\n    primes.push_back(271);\n\
    \    primes.push_back(277);\n    primes.push_back(281);\n    primes.push_back(283);\n\
    \    primes.push_back(293);\n    primes.push_back(307);\n    primes.push_back(311);\n\
    \    primes.push_back(313;\n    primes.push_back(317);\n    primes.push_back(331);\n\
    \    primes.push_back(337);\n    primes.push_back(347);\n    primes.push_back(349);\n\
    \    primes.", "    std::vector<long> primes;\n    primes.push_back(0);\n    long\
    \ i = 1;\n    while (i < n) {\n        if (primes.back() <= i) {\n           \
    \ primes.push_back(i);\n            while (i < n && primes.back() <= i) {\n  \
    \              i++;\n            }\n        }\n        i++;\n    }\n    return\
    \ primes;", "  std::vector<long> primes;\n  primes.push_back(n);\n  for (long\
    \ i = 2; i <= n; i++) {\n    while (n % i == 0) {\n      primes.push_back(i);\n\
    \      n /= i;\n    }\n  }\n  return primes;", "    std::vector<long> primes;\n\
    \    primes.push_back(0);\n    long i = 1;\n    while (i <= n) {\n        long\
    \ count = 0;\n        for (long j = 2; j < i; j++) {\n            if (i % j ==\
    \ 0) {\n                count++;\n                break;\n            }\n    \
    \    }\n        if (count == 0) {\n            primes.push_back(i);\n        }\n\
    \        i++;\n    }\n    return primes;", "    std::vector<long> primes;\n  \
    \  primes.push_back(0);\n    long counter = 1;\n    while (counter < n) {\n  \
    \      bool is_prime = true;\n        for (long i = 0; i < primes.size(); i++)\
    \ {\n            if (primes[i] == counter) {\n                is_prime = false;\n\
    \                break;\n            }\n        }\n        if (is_prime) {\n \
    \           primes.push_back(counter);\n            counter++;\n        }\n  \
    \  }\n    return primes;", "    std::vector<long> primes;\n    primes.push_back(n);\n\
    \    long i = 2;\n    long j = 0;\n    while (i < n) {\n        if (primes[j]\
    \ == 0) {\n            primes.push_back(i);\n            while (primes[j] != 0)\
    \ {\n                j++;\n            }\n        }\n        i++;\n    }\n   \
    \ return primes;", "    std::vector<long> primes;\n    primes.push_back(0);\n\
    \    primes.push_back(1);\n    long i = 2;\n    while (i <= n) {\n        if (primes.count(i)\
    \ == 0) {\n            primes.push_back(i);\n            while (primes.count(i\
    \ * i) == 0) {\n                i++;\n            }\n        }\n        i++;\n\
    \    }\n    return primes;", "    std::vector<long> primes;\n    long i = 2;\n\
    \    while (i < n) {\n        if (primes.find(i) == primes.end()) {\n        \
    \    primes.push_back(i);\n            while (i < n && primes.find(i) == primes.end())\
    \ {\n                i++;\n            }\n        }\n        i++;\n    }\n   \
    \ return primes;", "  std::vector<long> primes;\n  primes.push_back(0);\n  for\
    \ (long i = 2; i < n; i++) {\n    if (primes.back() <= i) {\n      primes.push_back(i);\n\
    \    }\n  }\n  return primes;", "    std::vector<long> primes;\n    primes.push_back(n);\n\
    \    long i = 2;\n    while (i < n) {\n        if (primes.count(i) == 0) {\n \
    \           primes.push_back(i);\n            while (i < n && primes.count(i)\
    \ == 0) {\n                i++;\n            }\n        }\n        i++;\n    }\n\
    \    return primes;", "    std::vector<long> primes;\n    primes.push_back(n);\n\
    \    long i = 2;\n    while (i < n) {\n        if (primes.count(i) == 0) {\n \
    \           primes.push_back(i);\n        }\n        i++;\n    }\n    return primes;",
  "    std::vector<long> primes;\n    primes.push_back(n);\n    long i = 2;\n    while(i\
    \ < n) {\n        if(primes.count(i) == 0) {\n            primes.push_back(i);\n\
    \            for(long j = 2; j < i; ++j) {\n                if(i % j == 0) {\n\
    \                    break;\n                }\n            }\n        }\n   \
    \     ++i;\n    }\n    return primes;", "    std::vector<long> primes;\n    primes.push_back(0);\n\
    \    long i = 2;\n    while (i < n) {\n        if (primes.count(i) == 0) {\n \
    \           primes.push_back(i);\n        }\n        i += 2;\n    }\n    return\
    \ primes;", "    std::vector<long> primes;\n    primes.push_back(0);\n    for\
    \ (long i = 2; i < n; i++) {\n        if (primes.back() <= i && primes.back()\
    \ + 1 < i) {\n            primes.push_back(i);\n        }\n    }\n    return primes;",
  "    std::vector<long> primes;\n    primes.push_back(n);\n    long i = 2;\n    while\
    \ (i < n) {\n        if (primes.count(i) == 0) {\n            primes.push_back(i);\n\
    \        }\n        i++;\n    }\n    return primes;", "    std::vector<long> primes;\n\
    \    primes.push_back(0);\n    primes.push_back(n);\n    long counter = 1;\n \
    \   long prime = 2;\n    while (counter < n) {\n        while (prime * prime <=\
    \ counter) {\n            primes.push_back(prime);\n            counter += 1;\n\
    \        }\n        prime += 1;\n    }\n    return primes;", "  std::vector<long>\
    \ primes;\n  primes.push_back(0);\n  for (long i = 2; i < n; i++) {\n    while\
    \ (primes.back() <= i && primes.back() + i <= n) {\n      primes.push_back(primes.back()\
    \ + i);\n    }\n  }\n  return primes;", "  std::vector<long> primes;\n  primes.push_back(0);\n\
    \  for (long i = 2; i <= n; i++) {\n    if (primes.back() <= i && primes.back()\
    \ + i <= n) {\n      primes.push_back(i);\n    }\n  }\n  return primes;", "  \
    \  std::vector<long> primes;\n    primes.push_back(0);\n    primes.push_back(n);\n\
    \    long counter = 2;\n    long counter2 = 2;\n    long counter3 = 1;\n    long\
    \ counter4 = 1;\n    long counter5 = 1;\n    long counter6 = 1;\n    long counter7\
    \ = 1;\n    long counter8 = 1;\n    long counter9 = 1;\n    long counter10 = 1;\n\
    \    long counter11 = 1;\n    long counter12 = 1;\n    long counter13 = 1;\n \
    \   long counter14 = 1;\n    long counter15 = 1;\n    long counter16 = 1;\n  \
    \  long counter17 = 1;\n    long counter18 = 1;\n    long counter19 = 1;\n   \
    \ long counter20 = 1;\n    long counter21 = 1;\n    long counter22 = 1;\n    long\
    \ counter23 = 1;\n    long counter24 = 1;\n    long counter25 = 1;\n    long counter26\
    \ = 1;\n    long counter27 = 1;\n    long counter28 = 1;\n    long counter29 =\
    \ 1;\n    long counter30 = 1;\n    long counter31 = 1;\n    long counter32 = 1;\n\
    \    long counter33 = 1;\n    long counter34 = 1;\n    long counter35 = 1;\n \
    \   long counter36 = 1;\n    long counter37 = 1;\n    long counter38 = 1;\n  \
    \  long counter39 = 1;\n    long counter40 = 1;\n    long counter41 = 1;\n   \
    \ long counter42 = 1;\n    long counter43 = 1;\n    long counter44 = 1;\n    long\
    \ counter45 = 1;\n    long counter46 = 1;\n    long counter47 = 1;\n    long counter48\
    \ = 1;\n    long counter49 = 1;\n    long counter50 = 1;\n    long counter51 =\
    \ 1;\n    long counter52 = 1;\n    long counter53 = 1;\n    long counter54 = 1;\n\
    \    long counter55 = 1;\n    long counter56 = 1;\n    long counter57 = 1;\n \
    \   long counter58 = 1;\n    long counter59 = 1;\n    long counter60 = 1;\n  \
    \  long counter61 = 1;\n    long counter62 = 1;\n    long counter63 = 1;\n   \
    \ long counter64 = 1;\n    long counter65 = 1;\n    long counter66 = 1;\n    long\
    \ counter67 = 1;\n    long counter68 = 1;\n    long counter69 = 1;\n    long counter70\
    \ = 1;\n    long counter71 = 1;\n    long counter72 = 1;\n    long counter73 =\
    \ 1;\n    long counter74 = 1;\n    long counter75 = 1;\n    long counter76 = 1;\n\
    \    long counter77 = 1;\n    long counter78 = 1;\n    long counter79 = 1;\n \
    \   long counter80 = 1;\n    long counter81 = 1;\n    ", "    std::vector<long>\
    \ primes;\n    primes.push_back(0);\n    long counter = 1;\n    while (counter\
    \ < n) {\n        bool is_prime = true;\n        for (long i = 0; i < primes.size();\
    \ i++) {\n            if (n % primes[i] == 0) {\n                is_prime = false;\n\
    \                break;\n            }\n        }\n        if (is_prime) {\n \
    \           primes.push_back(counter);\n            counter++;\n        }\n  \
    \  }\n    return primes;", "    std::vector<long> primes;\n    primes.push_back(n);\n\
    \    long i = 2;\n    while (i < n) {\n        if (primes.count(i) == 0) {\n \
    \           primes.push_back(i);\n        }\n        i++;\n    }\n    return primes;",
  "    std::vector<long> primes;\n    primes.push_back(n);\n    long i = 2;\n    long\
    \ j = 1;\n    while (i < n) {\n        while (j < i) {\n            if (i % j\
    \ == 0) {\n                break;\n            }\n            j++;\n        }\n\
    \        if (j == i) {\n            primes.push_back(i);\n        }\n        i++;\n\
    \    }\n    return primes;", "  std::vector<long> primes;\n  primes.push_back(n);\n\
    \  for (long i = 2; i <= n; i++) {\n    while (n % i == 0) {\n      primes.push_back(i);\n\
    \      n /= i;\n    }\n  }\n  return primes;", "    std::vector<long> primes;\n\
    \    primes.push_back(n);\n    long i = 2;\n    while (i < n) {\n        if (primes.count(i)\
    \ == 0) {\n            primes.push_back(i);\n            while (i < n) {\n   \
    \             if (n % i == 0) {\n                    primes.push_back(i);\n  \
    \                  break;\n                }\n                i += 1;\n      \
    \      }\n        }\n        i += 1;\n    }\n    return primes;", "    std::vector<long>\
    \ primes;\n    primes.push_back(n);\n    long i = 2;\n    while (i < n) {\n  \
    \      if (primes.count(i) == 0) {\n            primes.push_back(i);\n       \
    \     while (i < n && primes.count(i) == 0) {\n                i++;\n        \
    \    }\n        }\n        i++;\n    }\n    return primes;", "    std::vector<long>\
    \ primes;\n    primes.push_back(0);\n    long count = 1;\n    long i = 2;\n  \
    \  while (i <= n) {\n        if (primes.find(i) == primes.end()) {\n         \
    \   primes.push_back(i);\n            while (primes.find(i) != primes.end()) {\n\
    \                ++i;\n            }\n            ++count;\n        }\n      \
    \  ++i;\n    }\n    return primes;", "    std::vector<long> primes;\n    primes.push_back(0);\n\
    \    primes.push_back(1);\n    long i = 2;\n    while (i <= n) {\n        if (primes.find(i)\
    \ == primes.end()) {\n            primes.push_back(i);\n            i += 2;\n\
    \        }\n        i++;\n    }\n    return primes;", "    std::vector<long> primes;\n\
    \    primes.push_back(n);\n    long i = 2;\n    while (i < n) {\n        if (primes.count(i)\
    \ == 0) {\n            primes.push_back(i);\n            i += 2;\n        }\n\
    \        else {\n            i += 1;\n        }\n    }\n    return primes;", " \
    \   std::vector<long> primes;\n    primes.push_back(n);\n    long i = 2;\n   \
    \ while (i < n) {\n        if (primes.count(i) == 0) {\n            primes.push_back(i);\n\
    \        }\n        i++;\n    }\n    return primes;", "    std::vector<long> primes;\n\
    \    primes.push_back(n);\n    long i = 2;\n    while (i < n) {\n        if (primes.count(i)\
    \ == 0) {\n            primes.push_back(i);\n            long j = 2;\n       \
    \     while (j < i) {\n                if (i % j == 0) {\n                   \
    \ break;\n                }\n                j++;\n            }\n           \
    \ if (j == i) {\n                i++;\n            }\n        }\n        i++;\n\
    \    }\n    return primes;", "  std::vector<long> primes;\n  for (long i = 2;\
    \ i <= n; i++) {\n    if (primes.count(i) == 0) {\n      primes.push_back(i);\n\
    \      for (long j = i * i; j < n; j += i) {\n        primes.push_back(j);\n \
    \     }\n    }\n  }\n  return primes;", "    std::vector<long> primes;\n    primes.push_back(0);\n\
    \    long counter = 2;\n    long limit = (long) sqrt(n);\n    while (counter <=\
    \ limit) {\n        if (n % counter == 0) {\n            primes.push_back(counter);\n\
    \            counter += 2;\n        }\n        counter += 2;\n    }\n    return\
    \ primes;", "  std::vector<long> result;\n  long i = 2;\n  while (i <= n) {\n\
    \    if (is_prime(i)) {\n      result.push_back(i);\n      i += 2;\n    }\n  \
    \  i += 1;\n  }\n  return result;", "    std::vector<long> primes;\n    primes.push_back(0);\n\
    \    long i = 2;\n    while (i <= n) {\n        if (primes.find(i) != primes.end())\
    \ {\n            primes.push_back(i);\n        }\n        i++;\n    }\n    return\
    \ primes;", "    std::vector<long> primes;\n    primes.push_back(n);\n    long\
    \ i = 2;\n    while (i < n) {\n        if (primes.count(i) == 0) {\n         \
    \   primes.push_back(i);\n        }\n        i++;\n    }\n    return primes;",
  "    std::vector<long> primes;\n    primes.push_back(0);\n    long i = 2;\n    while\
    \ (i < n) {\n        if (primes.find(i) == primes.end()) {\n            primes.push_back(i);\n\
    \            while (i < n && primes.find(i) == primes.end()) {\n             \
    \   i++;\n            }\n        }\n        i++;\n    }\n    return primes;",
  "    std::vector<long> primes;\n    primes.push_back(0);\n    long i = 2;\n    while\
    \ (i <= n) {\n        if (primes.find(i) != primes.end()) {\n            primes.push_back(i);\n\
    \        }\n        i++;\n    }\n    return primes;", "    std::vector<long> primes;\n\
    \    primes.push_back(0);\n    primes.push_back(n);\n    long i = 2;\n    while\
    \ (i < n) {\n        if (primes.back() % i == 0) {\n            primes.push_back(i);\n\
    \        }\n        i++;\n    }\n    return primes;", "  std::vector<long> primes;\n\
    \  primes.push_back(n);\n  long counter = 1;\n  while (counter <= n) {\n    bool\
    \ is_prime = true;\n    for (long i = 2; i <= counter; ++i) {\n      if (counter\
    \ % i == 0) {\n        is_prime = false;\n        break;\n      }\n    }\n   \
    \ if (is_prime) {\n      primes.push_back(counter);\n    }\n    counter++;\n \
    \ }\n  return primes;", "  std::vector<long> primes;\n  primes.push_back(n);\n\
    \  for (long i = 2; i <= n; i++) {\n    if (primes.find(i) == primes.end()) {\n\
    \      primes.push_back(i);\n    }\n  }\n  return primes;", "    std::vector<long>\
    \ primes;\n    primes.push_back(n);\n    long i = 2;\n    while (i < n) {\n  \
    \      if (primes.count(i) == 0) {\n            primes.push_back(i);\n       \
    \     while (i < n && primes.count(i) == 0) {\n                i++;\n        \
    \    }\n        }\n        i++;\n    }\n    return primes;", "    std::vector<long>\
    \ primes;\n    primes.push_back(n);\n    long i = 2;\n    while (i < n) {\n  \
    \      if (primes.count(i) == 0) {\n            primes.push_back(i);\n       \
    \     while (i < n && primes.count(i) == 0) {\n                i++;\n        \
    \    }\n        }\n        i++;\n    }\n    return primes;", "    std::vector<long>\
    \ primes;\n    primes.push_back(n);\n    long i = 2;\n    while (i < n) {\n  \
    \      if (primes.count(i) == 0) {\n            primes.push_back(i);\n       \
    \     long j = 2;\n            while (j < i) {\n                if (i % j == 0)\
    \ {\n                    break;\n                }\n                j++;\n   \
    \         }\n        }\n        i++;\n    }\n    return primes;", "    std::vector<long>\
    \ primes;\n    primes.push_back(0);\n    primes.push_back(1);\n    long i = 2;\n\
    \    while(i < n) {\n        if(primes.find(i) == primes.end()) {\n          \
    \  primes.push_back(i);\n            i += 2;\n        }\n        i += 1;\n   \
    \ }\n    return primes;", "    std::vector<long> primes;\n    primes.push_back(n);\n\
    \    long i = 2;\n    long counter = 1;\n    while (counter < n) {\n        if\
    \ (primes.count(i) == 0) {\n            primes.push_back(i);\n            counter++;\n\
    \        }\n        i++;\n    }\n    return primes;", "    std::vector<long> primes;\n\
    \    primes.push_back(0);\n    primes.push_back(n);\n    long count = 2;\n   \
    \ long i = 2;\n    while (i < n) {\n        if (primes.at(i) == 0) {\n       \
    \     primes.at(i) = count;\n            count++;\n        }\n        i++;\n \
    \   }\n    return primes;", "    std::vector<long> primes;\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    ", "    std::vector<long>\
    \ primes;\n    primes.reserve(n);\n    for (long i = 1; i <= n; ++i) {\n     \
    \   if (primes.empty() || primes.back() <= i) {\n            primes.push_back(i);\n\
    \        }\n        for (long j = 2; j < i; ++j) {\n            if (i % j == 0)\
    \ {\n                break;\n            }\n        }\n        if (j == i) {\n\
    \            primes.push_back(i);\n        }\n    }\n    return primes;", "  \
    \  std::vector<long> primes;\n    primes.push_back(0);\n    primes.push_back(1);\n\
    \    primes.push_back(2);\n    primes.push_back(3);\n    primes.push_back(5);\n\
    \    primes.push_back(7);\n    primes.push_back(11);\n    primes.push_back(13);\n\
    \    primes.push_back(17);\n    primes.push_back(19);\n    primes.push_back(23);\n\
    \    primes.push_back(29);\n    primes.push_back(31);\n    primes.push_back(37);\n\
    \    primes.push_back(41);\n    primes.push_back(43);\n    primes.push_back(47);\n\
    \    primes.push_back(53);\n    primes.push_back(59);\n    primes.push_back(61);\n\
    \    primes.push_back(67);\n    primes.push_back(71);\n    primes.push_back(73);\n\
    \    primes.push_back(79);\n    primes.push_back(83);\n    primes.push_back(89);\n\
    \    primes.push_back(97);\n    primes.push_back(101);\n    primes.push_back(103);\n\
    \    primes.push_back(107);\n    primes.push_back(109);\n    primes.push_back(113);\n\
    \    primes.push_back(127);\n    primes.push_back(131);\n    primes.push_back(137);\n\
    \    primes.push_back(139);\n    primes.push_back(143);\n    primes.push_back(147);\n\
    \    primes.push_back(151);\n    primes.push_back(157);\n    primes.push_back(163);\n\
    \    primes.push_back(167);\n    primes.push_back(173);\n    primes.push_back(179);\n\
    \    primes.push_back(181);\n    primes.push_back(191);\n    primes.push_back(193);\n\
    \    primes.push_back(197);\n    primes.push_back(199);\n    primes.push_back(211);\n\
    \    primes.push_back(223);\n    primes.push_back(227);\n    primes.push_back(229);\n\
    \    primes.push_back(233);\n    primes.push_back(239);\n    primes.push_back(241);\n\
    \    primes.push_back(251);\n    primes.push_back(257);\n    primes.push_back(263);\n\
    \    primes.push_back(269);\n    primes.push_back(271);\n    primes.push_back(277);\n\
    \    primes.push_back(281);\n    primes.push_back(283);\n    primes.push_back(293);\n\
    \    primes.push_back(307);\n    primes.push_back(311);\n    primes.push_back(313;\n\
    \    primes.push_back(317);\n    primes.push_back(331);\n    primes.push_back(337);\n\
    \    primes.push_back(347);\n    primes.push_back(349);\n    primes.", "  std::vector<long>\
    \ primes;\n  primes.push_back(0);\n  for (long i = 2; i < n; i++) {\n    if (primes.back()\
    \ <= i) {\n      primes.push_back(i);\n    }\n  }\n  return primes;", "  std::vector<long>\
    \ primes;\n  primes.push_back(0);\n  for (long i = 2; i < n; i++) {\n    if (primes.back()\
    \ <= i && primes.back() + 1 < i) {\n      primes.push_back(i);\n    }\n  }\n \
    \ return primes;", "    std::vector<long> primes;\n    primes.reserve(n);\n  \
    \  for (long i = 2; i <= n; ++i) {\n        if (primes.count(i) == 0) {\n    \
    \        primes.push_back(i);\n        }\n        for (long j = 2; i * j <= n;\
    \ ++j) {\n            if (n % j == 0) {\n                break;\n            }\n\
    \            if (primes.count(i * j) == 0) {\n                primes.push_back(i\
    \ * j);\n            }\n        }\n    }\n    return primes;", "    std::vector<long>\
    \ primes;\n    primes.reserve(n);\n    for (long i = 1; i <= n; ++i) {\n     \
    \   if (primes.empty() || primes.back() <= i) {\n            primes.push_back(i);\n\
    \        }\n        else if (primes.back() == i) {\n            primes.push_back(i);\n\
    \        }\n        else {\n            long j = primes.back();\n            while\
    \ (j + 1 < i) {\n                j++;\n                if (i % j == 0) {\n   \
    \                 break;\n                }\n            }\n            if (j\
    \ + 1 < i) {\n                primes.push_back(i);\n            }\n        }\n\
    \    }\n    return primes;", "  std::vector<long> primes;\n  primes.push_back(n);\n\
    \  long i = 2;\n  while (i < n) {\n    if (primes.count(i) == 0) {\n      primes.push_back(i);\n\
    \      for (int j = i * i; j < n; j += i) {\n        primes.push_back(j);\n  \
    \    }\n    }\n    ++i;\n  }\n  return primes;", "    std::vector<long> primes;\n\
    \    long i = 2;\n    while (i <= n) {\n        if (is_prime(i)) {\n         \
    \   primes.push_back(i);\n            i += 2;\n        }\n        else {\n   \
    \         i += 3;\n        }\n    }\n    return primes;", "  std::vector<long>\
    \ primes;\n  primes.reserve(n);\n  for (long i = 2; i < n; ++i) {\n    if (primes.count(i)\
    \ == 0) {\n      primes.push_back(i);\n      for (long j = i * i; j < n; j +=\
    \ i) {\n        primes.push_back(j);\n      }\n    }\n  }\n  return primes;",
  "    std::vector<long> primes;\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    long i = 2;\n    while (i <= n) {\n        if (primes.back() <= i) {\n  \
    \          primes.push_back(i);\n            while (primes.back() <= n && primes.back()\
    \ % i == 0) {\n                primes.push_back(i++);\n            }\n       \
    \ }\n        i++;\n    }\n    return primes;", "    std::vector<long> primes;\n\
    \    primes.push_back(n);\n    long i = 2;\n    while (i < n) {\n        if (primes.count(i)\
    \ == 0) {\n            primes.push_back(i);\n            while (i < n && primes.count(i)\
    \ == 0) {\n                i++;\n            }\n        }\n        i++;\n    }\n\
    \    return primes;", "    std::vector<long> primes;\n    primes.push_back(n);\n\
    \    long i = 2;\n    while (i < n) {\n        if (primes.count(i) == 0) {\n \
    \           primes.push_back(i);\n        }\n        i++;\n    }\n    return primes;",
  "    std::vector<long> primes;\n    primes.push_back(0);\n    for (long i = 1; i\
    \ < n; i++) {\n        if (primes.back() <= i && primes.back() + i <= n) {\n \
    \           primes.push_back(i + primes.back());\n        }\n    }\n    return\
    \ primes;", "    std::vector<long> primes;\n    primes.push_back(n);\n    long\
    \ i = 2;\n    while (i < n) {\n        if (primes.count(i) == 0) {\n         \
    \   primes.push_back(i);\n            while (i < n && primes.count(i) == 0) {\n\
    \                i++;\n            }\n        }\n        i++;\n    }\n    return\
    \ primes;", "  std::vector<long> primes;\n  primes.push_back(n);\n  for (long\
    \ i = 2; i < n; i++) {\n    while (n % i == 0) {\n      primes.push_back(i);\n\
    \      n /= i;\n    }\n  }\n  return primes;", "    std::vector<long> primes;\n\
    \    primes.push_back(0);\n    long i = 1;\n    while (i <= n) {\n        if (primes.back()\
    \ <= i) {\n            primes.push_back(i);\n        }\n        i++;\n    }\n\
    \    return primes;", "    std::vector<long> primes;\n    primes.push_back(n);\n\
    \    long counter = 1;\n    while (counter <= n) {\n        bool flag = true;\n\
    \        for (long i = 0; i < primes.size(); i++) {\n            if (primes[i]\
    \ == counter) {\n                flag = false;\n                break;\n     \
    \       }\n        }\n        if (flag) {\n            primes.push_back(counter);\n\
    \        }\n        counter++;\n    }\n    return primes;", "  std::vector<long>\
    \ primes;\n  primes.push_back(0);\n  long i = 1;\n  while (i <= n) {\n    if (primes.back()\
    \ <= i && primes.back() + i <= n) {\n      primes.push_back(i);\n    }\n    i++;\n\
    \  }\n  return primes;", "  std::vector<long> primes;\n  for (long i = 0; i <=\
    \ n; i++) {\n    if (is_prime(i)) {\n      primes.push_back(i);\n    }\n  }\n\
    \  return primes;", "  std::vector<long> primes;\n  primes.push_back(0);\n  primes.push_back(0);\n\
    \  primes.push_back(0);\n  primes.push_back(0);\n  primes.push_back(0);\n  primes.push_back(0);\n\
    \  primes.push_back(0);\n  primes.push_back(0);\n  primes.push_back(0);\n  primes.push_back(0);\n\
    \  primes.push_back(0);\n  primes.push_back(0);\n  primes.push_back(0);\n  primes.push_back(0);\n\
    \  primes.push_back(0);\n  primes.push_back(0);\n  primes.push_back(0);\n  primes.push_back(0);\n\
    \  primes.push_back(0);\n  primes.push_back(0);\n  primes.push_back(0);\n  primes.push_back(0);\n\
    \  primes.push_back(0);\n  primes.push_back(0);\n  primes.push_back(0);\n  primes.push_back(0);\n\
    \  primes.push_back(0);\n  primes.push_back(0);\n  primes.push_back(0);\n  primes.push_back(0);\n\
    \  primes.push_back(0);\n  primes.push_back(0);\n  primes.push_back(0);\n  primes.push_back(0);\n\
    \  primes.push_back(0);\n  primes.push_back(0);\n  primes.push_back(0);\n  primes.push_back(0);\n\
    \  primes.push_back(0);\n  primes.push_back(0);\n  primes.push_back(0);\n  primes.push_back(0);\n\
    \  primes.push_back(0);\n  primes.push_back(0);\n  primes.push_back(0);\n  primes.push_back(0);\n\
    \  primes.push_back(0);\n  primes.push_back(0);\n  primes.push_back(0);\n  primes.push_back(0);\n\
    \  primes.push_back(0);\n  primes.push_back(0);\n  primes.push_back(0);\n  primes.push_back(0);\n\
    \  primes.push_back(0);\n  primes.push_back(0);\n  primes.push_back(0);\n  primes.push_back(0);\n\
    \  primes.push_back(0);\n  primes.push_back(0);\n  primes.push_back(0);\n  primes.push_back(0);\n\
    \  primes.push_back(0);\n  primes.push_back(0);\n  primes.push_back(0);\n  primes.push_back(0);\n\
    \  primes.push_back(0);\n  primes.push_back(0);\n  primes.push_back(0);\n  primes.push_back(0);\n\
    \  primes.push_back(0);\n  primes.push_back(0);\n  primes.push_back(0);\n  primes.push_back(0);\n\
    \  primes.push_back(0);\n  primes.push_back(0);\n  primes.push_back(0);\n  primes.push_back(0);\n\
    \  primes.push_back(0);\n  primes.push_back(0);\n  primes.push_back(0);\n  primes.push_back(0);\n\
    \  primes.push_back(0);\n  primes.push_back(0);\n  prime", "    std::vector<long>\
    \ primes;\n    primes.push_back(0);\n    long i = 2;\n    while (i <= n) {\n \
    \       if (primes.count(i) == 0) {\n            primes.push_back(i);\n      \
    \      while (primes.back() <= n && primes.back() % i == 0) {\n              \
    \  primes.push_back(primes.back() + 1);\n            }\n        }\n        i++;\n\
    \    }\n    return primes;", "    std::vector<long> primes;\n    primes.push_back(0);\n\
    \    primes.push_back(1);\n    long i = 2;\n    while (i <= n) {\n        if (primes.count(i)\
    \ == 0) {\n            primes.push_back(i);\n            i += 2;\n        }\n\
    \        i += 1;\n    }\n    return primes;", "    std::vector<long> primes;\n\
    \    primes.push_back(n);\n    long i = 2;\n    while (i < n) {\n        if (primes.count(i)\
    \ == 0) {\n            primes.push_back(i);\n            while (i < n && primes.count(i)\
    \ == 0) {\n                i++;\n            }\n        }\n        i++;\n    }\n\
    \    return primes;", "  std::vector<long> primes;\n  primes.reserve(n);\n  for\
    \ (long i = 2; i <= n; i++) {\n    if (primes.empty() || primes.back() <= i) {\n\
    \      primes.push_back(i);\n    } else {\n      long j = i;\n      while (j >\
    \ 1) {\n        if (primes.back() % j == 0) {\n          break;\n        }\n \
    \       j--;\n      }\n      if (j == 1) {\n        primes.push_back(i);\n   \
    \   }\n    }\n  }\n  return primes;", "  std::vector<long> primes;\n  primes.push_back(0);\n\
    \  for (long i = 1; i <= n; i++) {\n    if (primes.back() <= i && primes.back()\
    \ + i <= n) {\n      primes.push_back(i);\n    }\n  }\n  return primes;", "  \
    \  std::vector<long> primes;\n    primes.push_back(n);\n    long i = 2;\n    while\
    \ (i < n) {\n        if (primes.count(i) == 0) {\n            primes.push_back(i);\n\
    \        }\n        i += 2;\n    }\n    return primes;", "    std::vector<long>\
    \ primes;\n    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    ", "    std::vector<long> primes;\n    primes.push_back(n);\n    long i =\
    \ 2;\n    while (i < n) {\n        if (primes.count(i) == 0) {\n            primes.push_back(i);\n\
    \        }\n        i++;\n    }\n    return primes;", "  std::vector<long> primes;\n\
    \  primes.push_back(n);\n  for (long i = 2; i <= n; i++) {\n    while (n % i ==\
    \ 0) {\n      primes.push_back(i);\n      n /= i;\n    }\n  }\n  return primes;",
  "    std::vector<long> primes;\n    primes.push_back(n);\n    long i = 2;\n    while\
    \ (i < n) {\n        if (primes.count(i) == 0) {\n            primes.push_back(i);\n\
    \            long j = 2;\n            while (j < i) {\n                if (i %\
    \ j == 0) {\n                    break;\n                }\n                j++;\n\
    \            }\n        }\n        i++;\n    }\n    return primes;", "    std::vector<long>\
    \ primes;\n    primes.reserve(n);\n    long i = 2;\n    while (i <= n) {\n   \
    \     if (primes.find(i) == primes.end()) {\n            primes.push_back(i);\n\
    \            i++;\n        }\n        else {\n            i++;\n        }\n  \
    \  }\n    return primes;", "    std::vector<long> primes;\n    primes.push_back(0);\n\
    \    long i = 1;\n    while (i <= n) {\n        bool is_prime = true;\n      \
    \  for (long j = 2; j < i; j++) {\n            if (i % j == 0) {\n           \
    \     is_prime = false;\n                break;\n            }\n        }\n  \
    \      if (is_prime) {\n            primes.push_back(i);\n            i++;\n \
    \       }\n    }\n    return primes;", "    std::vector<long> primes;\n    primes.push_back(0);\n\
    \    primes.push_back(n);\n    long i = 2;\n    while (i < n) {\n        if (primes.count(i)\
    \ == 0) {\n            primes.push_back(i);\n            while (i < n && primes.count(i)\
    \ == 0) {\n                i++;\n            }\n        }\n        i++;\n    }\n\
    \    return primes;", "    std::vector<long> primes;\n    primes.push_back(0);\n\
    \    primes.push_back(n);\n    long i = 2;\n    while (i < n) {\n        if (primes.count(i)\
    \ == 0) {\n            primes.push_back(i);\n            long j = 2;\n       \
    \     while (j < i) {\n                if (i % j == 0) {\n                   \
    \ break;\n                }\n                j++;\n            }\n        }\n\
    \        i++;\n    }\n    return primes;", "    std::vector<long> primes;\n  \
    \  long i = 2;\n    while (i <= n) {\n        if (is_prime(i)) {\n           \
    \ primes.push_back(i);\n            i += 2;\n        }\n        i += 1;\n    }\n\
    \    return primes;", "    std::vector<long> primes;\n    primes.push_back(n);\n\
    \    long i = 2;\n    while (i < n) {\n        if (primes.count(i) == 0) {\n \
    \           primes.push_back(i);\n            while (i < n && primes.count(i)\
    \ == 0) {\n                i++;\n            }\n        }\n        i++;\n    }\n\
    \    return primes;", "    std::vector<long> primes;\n    primes.push_back(0);\n\
    \    primes.push_back(1);\n    long i = 2;\n    while(i <= n) {\n        for(long\
    \ j = 2; j <= i/2; ++j) {\n            if(i%j == 0) {\n                break;\n\
    \            }\n        }\n        if(j > i/2) {\n            primes.push_back(i);\n\
    \        }\n        ++i;\n    }\n    return primes;", "    std::vector<long> primes;\n\
    \    primes.push_back(n);\n    long i = 2;\n    while (i < n) {\n        if (primes.count(i)\
    \ == 0) {\n            primes.push_back(i);\n            i += 2;\n        }\n\
    \        i += 1;\n    }\n    return primes;", "    std::vector<long> primes;\n\
    \    primes.push_back(0);\n    primes.push_back(1);\n    primes.push_back(2);\n\
    \    long i = 2;\n    while (i < n) {\n        if (primes.find(i) != primes.end())\
    \ {\n            primes.push_back(i);\n        }\n        i++;\n    }\n    return\
    \ primes;", "  std::vector<long> primes;\n  primes.push_back(n);\n  for (long\
    \ i = 2; i < n; i++) {\n    while (n % i == 0) {\n      primes.push_back(i);\n\
    \      n /= i;\n    }\n  }\n  return primes;", "    std::vector<long> primes;\n\
    \    primes.push_back(0);\n    long i = 2;\n    while (i <= n) {\n        if (primes.back()\
    \ <= i) {\n            primes.push_back(i);\n        }\n        i++;\n    }\n\
    \    return primes;", "    std::vector<long> primes;\n    primes.reserve(n);\n\
    \    for (long i = 1; i <= n; ++i) {\n        if (primes.empty() || primes.back()\
    \ <= i) {\n            primes.push_back(i);\n        }\n        for (long j =\
    \ 2; j <= i / 2; ++j) {\n            if (i % j == 0) {\n                break;\n\
    \            }\n        }\n        if (j == i / 2) {\n            primes.push_back(i);\n\
    \        }\n    }\n    return primes;", "    std::vector<long> primes;\n    primes.reserve(n);\n\
    \    for (long i = 0; i <= n; i++) {\n        long count = 0;\n        for (long\
    \ j = i; j < n; j += i) {\n            if (j % i == 0) {\n                count++;\n\
    \                break;\n            }\n        }\n        if (count == 0) {\n\
    \            primes.push_back(i);\n        }\n    }\n    return primes;", "  \
    \  std::vector<long> primes;\n    primes.push_back(0);\n    primes.push_back(1);\n\
    \    long i = 2;\n    while (i < n) {\n        if (primes.count(i) == 0) {\n \
    \           primes.push_back(i);\n            for (long j = i * i; j < n; j +=\
    \ i) {\n                primes.push_back(j);\n            }\n        }\n     \
    \   i++;\n    }\n    return primes;", "    std::vector<long> primes;\n    primes.push_back(0);\n\
    \    primes.push_back(1);\n    long i = 2;\n    while (i < n) {\n        if (primes.count(i)\
    \ == 0) {\n            primes.push_back(i);\n        }\n        i++;\n    }\n\
    \    return primes;", "    std::vector<long> primes;\n    primes.push_back(0);\n\
    \    long i = 1;\n    while (i < n) {\n        bool is_prime = true;\n       \
    \ for (long j = 2; j < i; j++) {\n            if (i % j == 0) {\n            \
    \    is_prime = false;\n                break;\n            }\n        }\n   \
    \     if (is_prime) {\n            primes.push_back(i);\n        }\n        i++;\n\
    \    }\n    return primes;", "    std::vector<long> primes;\n    primes.push_back(n);\n\
    \    long i = 2;\n    while (i < n) {\n        if (primes.count(i) == 0) {\n \
    \           primes.push_back(i);\n        }\n        i++;\n    }\n    return primes;",
  "  std::vector<long> primes;\n  primes.push_back(0);\n  long i = 2;\n  while (i\
    \ < n) {\n    if (primes.count(i) == 0) {\n      primes.push_back(i);\n      for\
    \ (int j = i * i; j < n; j += i) {\n        primes.push_back(j);\n      }\n  \
    \  }\n    i++;\n  }\n  return primes;", "  std::vector<long> primes;\n  primes.push_back(0);\n\
    \  long i = 1;\n  while (i <= n) {\n    long j = 0;\n    while (j < i) {\n   \
    \   if (i % primes[j] == 0) {\n        break;\n      }\n      j++;\n    }\n  \
    \  if (j == i) {\n      primes.push_back(i);\n      i++;\n    }\n  }\n  return\
    \ primes;", "    std::vector<long> primes;\n    primes.push_back(0);\n    for\
    \ (long i = 2; i < n; i++) {\n        bool is_prime = true;\n        for (long\
    \ j : primes) {\n            if (i % j == 0) {\n                is_prime = false;\n\
    \                break;\n            }\n        }\n        if (is_prime) {\n \
    \           primes.push_back(i);\n        }\n    }\n    return primes;", "   \
    \ std::vector<long> primes;\n    primes.push_back(n);\n    long i = 2;\n    while\
    \ (i < n) {\n        if (primes.count(i) == 0) {\n            primes.push_back(i);\n\
    \        }\n        i++;\n    }\n    return primes;", "  std::vector<long> primes;\n\
    \  primes.push_back(n);\n  long i = 2;\n  while (i < n) {\n    if (primes.count(i)\
    \ == 0) {\n      primes.push_back(i);\n      for (int j = i * i; j < n; j += i)\
    \ {\n        primes.push_back(j);\n      }\n    }\n    i++;\n  }\n  return primes;",
  "    std::vector<long> primes;\n    long counter = 1;\n    long limit = n;\n   \
    \ bool prime = true;\n    while (counter < limit) {\n        if (limit % counter\
    \ == 0) {\n            prime = false;\n            break;\n        }\n       \
    \ counter++;\n    }\n    if (prime) {\n        primes.push_back(counter);\n  \
    \  }\n    while (counter <= limit) {\n        if (limit % counter == 0) {\n  \
    \          prime = true;\n            break;\n        }\n        counter++;\n\
    \    }\n    if (prime) {\n        primes.push_back(counter);\n    }\n    return\
    \ primes;", "    std::vector<long> primes;\n    primes.push_back(0);\n    primes.push_back(n);\n\
    \    long counter = 1;\n    while (counter < n) {\n        bool flag = false;\n\
    \        for (long i = 0; i < primes.size(); i++) {\n            if (primes[i]\
    \ == counter) {\n                flag = true;\n                break;\n      \
    \      }\n        }\n        if (!flag) {\n            primes.push_back(counter);\n\
    \        }\n        counter++;\n    }\n    return primes;", "    std::vector<long>\
    \ primes;\n    long i = 2;\n    while (i <= n) {\n        if (primes.find(i) ==\
    \ primes.end()) {\n            primes.push_back(i);\n            i++;\n      \
    \  }\n        else {\n            i++;\n        }\n    }\n    return primes;",
  "    std::vector<long> primes;\n    primes.push_back(n);\n    long i = 2;\n    while\
    \ (i < n) {\n        if (primes.count(i) == 0) {\n            primes.push_back(i);\n\
    \            while (i < n && primes.count(i) == 0) {\n                i++;\n \
    \           }\n        }\n        i++;\n    }\n    return primes;", "  std::vector<long>\
    \ primes;\n  primes.push_back(0);\n  for (long i = 2; i <= n; i++) {\n    bool\
    \ is_prime = true;\n    for (long j : primes) {\n      if (i % j == 0) {\n   \
    \     is_prime = false;\n        break;\n      }\n    }\n    if (is_prime) {\n\
    \      primes.push_back(i);\n    }\n  }\n  return primes;", "    std::vector<long>\
    \ primes;\n    primes.push_back(0);\n    for (long i = 2; i <= n; i++) {\n   \
    \     if (primes.back() <= i) {\n            primes.push_back(i);\n        }\n\
    \    }\n    return primes;", "    std::vector<long> primes;\n    primes.push_back(n);\n\
    \    long i = 2;\n    while (i < n) {\n        if (primes.count(i) == 0) {\n \
    \           primes.push_back(i);\n            i += 2;\n        }\n        else\
    \ {\n            i += 2;\n        }\n    }\n    return primes;", "    std::vector<long>\
    \ primes;\n    long i = 2;\n    while(i <= n) {\n        for(long j = 2; j < i;\
    \ j++) {\n            if(i%j == 0) {\n                break;\n            }\n\
    \        }\n        if(j == i) {\n            primes.push_back(i);\n        }\n\
    \        i++;\n    }\n    return primes;", "  std::vector<long> primes;\n  primes.push_back(0);\n\
    \  for (long i = 2; i < n; i++) {\n    if (primes.back() <= i) {\n      primes.push_back(i);\n\
    \    }\n  }\n  return primes;", "  std::vector<long> primes;\n  primes.reserve(n);\n\
    \  for (long i = 1; i <= n; i++) {\n    if (primes.empty() || primes.back() <=\
    \ i) {\n      primes.push_back(i);\n    } else {\n      long j = i;\n      while\
    \ (j > 1) {\n        if (primes.back() % j == 0) {\n          break;\n       \
    \ }\n        primes.push_back(j);\n        j /= i;\n      }\n    }\n  }\n  return\
    \ primes;", "  std::vector<long> primes;\n  primes.push_back(n);\n  for (long\
    \ i = 2; i < n; i++) {\n    while (n % i == 0) {\n      primes.push_back(i);\n\
    \      n /= i;\n    }\n  }\n  return primes;", "    std::vector<long> primes;\n\
    \    primes.reserve(n);\n    for (long i = 2; i < n; ++i) {\n        if (primes.count(i)\
    \ == 0) {\n            primes.push_back(i);\n        }\n        for (long j =\
    \ 2; j < i; ++j) {\n            if (i % j == 0) {\n                break;\n  \
    \          }\n        }\n        if (j == i) {\n            primes.push_back(i);\n\
    \        }\n    }\n    return primes;", "    std::vector<long> primes;\n    primes.push_back(n);\n\
    \    long i = 2;\n    while (i < n) {\n        if (primes.count(i) == 0) {\n \
    \           primes.push_back(i);\n            while (i < n && primes.count(i)\
    \ == 0) {\n                i++;\n            }\n        }\n        i++;\n    }\n\
    \    return primes;", "    std::vector<long> primes;\n    primes.push_back(n);\n\
    \    long i = 2;\n    while (i < n) {\n        if (primes.count(i) == 0) {\n \
    \           primes.push_back(i);\n            i += 2;\n        }\n        else\
    \ {\n            i += 2;\n        }\n    }\n    return primes;", "    std::vector<long>\
    \ primes;\n    primes.push_back(n);\n    long i = 2;\n    while (i < n) {\n  \
    \      if (primes.count(i) == 0) {\n            primes.push_back(i);\n       \
    \     i += 2;\n        }\n        else {\n            i += 1;\n        }\n   \
    \ }\n    return primes;", "    std::vector<long> primes;\n    primes.push_back(0);\n\
    \    primes.push_back(1);\n    long i = 2;\n    while (i < n) {\n        if (primes.back()\
    \ <= i) {\n            primes.push_back(i);\n        }\n        i++;\n    }\n\
    \    return primes;", "    std::vector<long> primes;\n    primes.push_back(0);\n\
    \    primes.push_back(1);\n    long i = 2;\n    while (i < n) {\n        if (primes.find(i)\
    \ != primes.end()) {\n            primes.push_back(i);\n        }\n        i++;\n\
    \    }\n    return primes;", "  std::vector<long> primes;\n  primes.push_back(0);\n\
    \  primes.push_back(n);\n  long counter = 2;\n  while (counter < n) {\n    for\
    \ (long i = 2; i < counter; i++) {\n      if (counter % i == 0) {\n        counter\
    \ = counter + 1;\n        primes.push_back(counter);\n      }\n    }\n    counter++;\n\
    \  }\n  return primes;", "    std::vector<long> primes;\n    primes.push_back(n);\n\
    \    long i = 2;\n    while (i < n) {\n        if (primes.count(i) == 0) {\n \
    \           primes.push_back(i);\n            while (i < n && primes.count(i)\
    \ == 0) {\n                i++;\n            }\n        }\n        i++;\n    }\n\
    \    return primes;", "    std::vector<long> primes;\n    primes.push_back(n);\n\
    \    long i = 2;\n    while (i < n) {\n        if (primes.count(i) == 0) {\n \
    \           primes.push_back(i);\n        }\n        i++;\n    }\n    return primes;",
  "    std::vector<long> primes;\n    primes.push_back(n);\n    long i = 2;\n    while(i\
    \ < n) {\n        if(primes.count(i) == 0) {\n            primes.push_back(i);\n\
    \            for(long j = i*i; j < n; j += i) {\n                primes.push_back(j);\n\
    \            }\n        }\n        i++;\n    }\n    return primes;", "    std::vector<long>\
    \ primes;\n    primes.push_back(n);\n    long i = 2;\n    while (i < n) {\n  \
    \      if (primes.count(i) == 0) {\n            primes.push_back(i);\n       \
    \     long j = 2;\n            while (j < i) {\n                if (i % j == 0)\
    \ {\n                    break;\n                }\n                j++;\n   \
    \         }\n            if (j == i) {\n                i++;\n            }\n\
    \        }\n        i++;\n    }\n    return primes;", "    std::vector<long> primes;\n\
    \    primes.push_back(0);\n    primes.push_back(1);\n    long i = 2;\n    while\
    \ (i < n) {\n        if (primes.count(i) == 0) {\n            primes.push_back(i);\n\
    \            while (primes.count(i) == 0) {\n                i++;\n          \
    \  }\n        }\n        i++;\n    }\n    return primes;", "    std::vector<long>\
    \ primes;\n    primes.push_back(0);\n    primes.push_back(n);\n    long counter\
    \ = 2;\n    long limit = (long) sqrt(n);\n    while (counter <= limit) {\n   \
    \     if (primes[counter] == 0) {\n            for (long i = counter * counter;\
    \ i <= n; i += counter) {\n                primes.push_back(i);\n            }\n\
    \        }\n        counter++;\n    }\n    return primes;", "    std::vector<long>\
    \ primes;\n    primes.push_back(n);\n    long i = 2;\n    while (i < n) {\n  \
    \      if (primes.count(i) == 0) {\n            primes.push_back(i);\n       \
    \     long j = 2;\n            while (j < i) {\n                if (i % j == 0)\
    \ {\n                    break;\n                }\n                j++;\n   \
    \         }\n        }\n        i++;\n    }\n    return primes;", "    std::vector<long>\
    \ primes;\n    primes.push_back(n);\n    long i = 2;\n    while (i < n) {\n  \
    \      if (primes.count(i) == 0) {\n            primes.push_back(i);\n       \
    \     while (i < n && primes.count(i) == 0) {\n                i++;\n        \
    \    }\n        }\n        i++;\n    }\n    return primes;", "    std::vector<long>\
    \ primes;\n    primes.push_back(n);\n    long counter = 1;\n    while (counter\
    \ < n) {\n        bool flag = true;\n        for (long i = 0; i < primes.size();\
    \ i++) {\n            if (n % primes[i] == 0) {\n                flag = false;\n\
    \                break;\n            }\n        }\n        if (flag) {\n     \
    \       primes.push_back(counter);\n        }\n        counter++;\n    }\n   \
    \ return primes;", "    std::vector<long> primes;\n    primes.push_back(n);\n\
    \    long i = 2;\n    while (i < n) {\n        if (primes.count(i) == 0) {\n \
    \           primes.push_back(i);\n            while (i < n) {\n              \
    \  if (n % i == 0) {\n                    primes.push_back(i);\n             \
    \       break;\n                }\n                i += 1;\n            }\n  \
    \      }\n        i += 1;\n    }\n    return primes;", "    std::vector<long>\
    \ primes;\n    primes.push_back(n);\n    long i = 2;\n    while (i < n) {\n  \
    \      if (primes.count(i) == 0) {\n            primes.push_back(i);\n       \
    \     while (i < n && primes.count(i) == 0) {\n                i++;\n        \
    \    }\n        }\n        i++;\n    }\n    return primes;", "    std::vector<long>\
    \ primes;\n    primes.push_back(0);\n    primes.push_back(1);\n    long i = 2;\n\
    \    while (i < n) {\n        if (primes.find(i) == primes.end()) {\n        \
    \    primes.push_back(i);\n            i += 2;\n        }\n    }\n    return primes;",
  "    std::vector<long> primes;\n    primes.push_back(n);\n    long counter = 2;\n\
    \    while (counter <= n) {\n        if (primes.count(counter) == 0) {\n     \
    \       primes.push_back(counter);\n        }\n        counter++;\n    }\n   \
    \ return primes;", "  std::vector<long> primes;\n  primes.push_back(n);\n  long\
    \ i = 2;\n  while (i < n) {\n    if (primes.count(i) == 0) {\n      primes.push_back(i);\n\
    \      for (int j = i * i; j < n; j += i) {\n        primes.push_back(j);\n  \
    \    }\n    }\n    i++;\n  }\n  return primes;", "    std::vector<long> primes;\n\
    \    primes.push_back(n);\n    long i = 2;\n    while (i < n) {\n        if (primes.count(i)\
    \ == 0) {\n            primes.push_back(i);\n            while (i < n && primes.count(i)\
    \ == 0) {\n                i++;\n            }\n        }\n        i++;\n    }\n\
    \    return primes;", "    std::vector<long> primes;\n    primes.push_back(n);\n\
    \    long i = 2;\n    while (i < n) {\n        if (primes.count(i) == 0) {\n \
    \           primes.push_back(i);\n        }\n        i += 2;\n    }\n    return\
    \ primes;", "  std::vector<long> primes;\n  primes.push_back(0);\n  long i = 1;\n\
    \  while (i < n) {\n    if (primes.back() <= i && primes.back() + 1 < i) {\n \
    \     primes.push_back(i);\n    }\n    i++;\n  }\n  return primes;", "    std::vector<long>\
    \ primes;\n    primes.push_back(n);\n    long i = 2;\n    while (i < n) {\n  \
    \      if (primes.count(i) == 0) {\n            primes.push_back(i);\n       \
    \     while (i < n && primes.count(i) == 0) {\n                i++;\n        \
    \    }\n        }\n        i++;\n    }\n    return primes;", "  std::vector<long>\
    \ primes;\n  primes.push_back(n);\n  for (long i = 2; i < n; ++i) {\n    while\
    \ (n % i == 0) {\n      primes.push_back(i);\n      n /= i;\n    }\n  }\n  return\
    \ primes;", "    std::vector<long> primes;\n    primes.reserve(n);\n    long i\
    \ = 2;\n    while (i <= n) {\n        if (primes.empty() || primes.back() <= i)\
    \ {\n            primes.push_back(i);\n            while (!primes.empty() && primes.back()\
    \ <= i && primes.back() % i == 0) {\n                primes.pop_back();\n    \
    \        }\n        }\n        i++;\n    }\n    return primes;", "    std::vector<long>\
    \ primes;\n    primes.push_back(0);\n    primes.push_back(n);\n    long counter\
    \ = 1;\n    long i = 2;\n    while(i < n) {\n        if(primes.count(i) == 0)\
    \ {\n            primes.push_back(i);\n            counter++;\n        }\n   \
    \     i++;\n    }\n    return primes;", "  std::vector<long> result;\n  long i\
    \ = 2;\n  while (i <= n) {\n    if (is_prime(i)) {\n      result.push_back(i);\n\
    \    }\n    ++i;\n  }\n  return result;", "    std::vector<long> primes;\n   \
    \ primes.push_back(0);\n    long i = 2;\n    while (i < n) {\n        if (primes.count(i)\
    \ == 0) {\n            primes.push_back(i);\n            long j = 2;\n       \
    \     while (j < i) {\n                if (i % j == 0) {\n                   \
    \ break;\n                }\n                j++;\n            }\n           \
    \ if (j == i) {\n                primes.push_back(i);\n            }\n       \
    \ }\n        i++;\n    }\n    return primes;", "    std::vector<long> primes;\n\
    \    primes.push_back(n);\n    long i = 2;\n    while (i < n) {\n        if (primes.count(i)\
    \ == 0) {\n            primes.push_back(i);\n        }\n        i++;\n    }\n\
    \    return primes;", "  std::vector<long> primes;\n  primes.push_back(n);\n \
    \ for (long i = 2; i < n; i++) {\n    while (n % i == 0) {\n      primes.push_back(i);\n\
    \      n /= i;\n    }\n  }\n  return primes;", "    std::vector<long> primes;\n\
    \    primes.push_back(n);\n    long i = 2;\n    long j = 0;\n    while (i < n)\
    \ {\n        if (primes[j] == 0) {\n            primes.push_back(i);\n       \
    \     j++;\n        }\n        i++;\n    }\n    return primes;", "    std::vector<long>\
    \ primes;\n    primes.push_back(0);\n    primes.push_back(1);\n    long i = 2;\n\
    \    while (i < n) {\n        if (primes.back() <= i && primes.back() + 1 < i)\
    \ {\n            primes.push_back(i);\n        }\n        i++;\n    }\n    return\
    \ primes;", "    std::vector<long> primes;\n    primes.push_back(0);\n    primes.push_back(n);\n\
    \    long i = 2;\n    while (i < n) {\n        if (primes.count(i) == 0) {\n \
    \           primes.push_back(i);\n        }\n        i++;\n    }\n    return primes;",
  "    std::vector<long> primes;\n    primes.push_back(n);\n    long i = 2;\n    while\
    \ (i < n) {\n        if (primes.count(i) == 0) {\n            primes.push_back(i);\n\
    \            while (i < n && primes.count(i) == 0) {\n                i++;\n \
    \           }\n        }\n        i++;\n    }\n    return primes;", "    std::vector<long>\
    \ primes;\n    primes.push_back(n);\n    long i = 2;\n    while (i < n) {\n  \
    \      if (primes.count(i) == 0) {\n            primes.push_back(i);\n       \
    \ }\n        i++;\n    }\n    return primes;", "    std::vector<long> primes;\n\
    \    primes.push_back(0);\n    primes.push_back(1);\n    long i = 2;\n    while\
    \ (i < n) {\n        if (primes.find(i) != primes.end()) {\n            primes.push_back(i);\n\
    \        }\n        i++;\n    }\n    return primes;", "    std::vector<long> primes;\n\
    \    primes.push_back(0);\n    long i = 1;\n    while (i <= n) {\n        if (primes.back()\
    \ <= i) {\n            primes.push_back(i);\n        }\n        i++;\n    }\n\
    \    return primes;", "    std::vector<long> primes;\n    long i = 2;\n    while\
    \ (i <= n) {\n        if (is_prime(i)) {\n            primes.push_back(i);\n \
    \           i += 2;\n        }\n        i++;\n    }\n    return primes;", "  \
    \  std::vector<long> primes;\n    primes.push_back(0);\n    primes.push_back(1);\n\
    \    primes.push_back(2);\n    primes.push_back(3);\n    primes.push_back(5);\n\
    \    primes.push_back(7);\n    primes.push_back(11);\n    primes.push_back(13);\n\
    \    primes.push_back(17);\n    primes.push_back(19);\n    primes.push_back(23);\n\
    \    primes.push_back(29);\n    primes.push_back(31);\n    primes.push_back(37);\n\
    \    primes.push_back(43);\n    primes.push_back(47);\n    primes.push_back(53);\n\
    \    primes.push_back(59);\n    primes.push_back(61);\n    primes.push_back(67);\n\
    \    primes.push_back(71);\n    primes.push_back(73);\n    primes.push_back(79);\n\
    \    primes.push_back(83);\n    primes.push_back(89);\n    primes.push_back(97);\n\
    \    primes.push_back(101);\n    primes.push_back(103);\n    primes.push_back(107);\n\
    \    primes.push_back(109);\n    primes.push_back(113);\n    primes.push_back(127);\n\
    \    primes.push_back(131);\n    primes.push_back(137);\n    primes.push_back(139);\n\
    \    primes.push_back(143);\n    primes.push_back(147);\n    primes.push_back(151);\n\
    \    primes.push_back(157);\n    primes.push_back(163);\n    primes.push_back(167);\n\
    \    primes.push_back(173);\n    primes.push_back(179);\n    primes.push_back(181);\n\
    \    primes.push_back(191);\n    primes.push_back(193);\n    primes.push_back(197);\n\
    \    primes.push_back(199);\n    primes.push_back(203);\n    primes.push_back(207);\n\
    \    primes.push_back(211);\n    primes.push_back(213);\n    primes.push_back(217);\n\
    \    primes.push_back(223);\n    primes.push_back(227);\n    primes.push_back(229);\n\
    \    primes.push_back(233);\n    primes.push_back(239);\n    primes.push_back(241);\n\
    \    primes.push_back(251);\n    primes.push_back(257);\n    primes.push_back(263);\n\
    \    primes.push_back(269);\n    primes.push_back(271);\n    primes.push_back(277);\n\
    \    primes.push_back(281);\n    primes.push_back(283);\n    primes.push_back(293);\n\
    \    primes.push_back(307);\n    primes.push_back(311);\n    primes.push_back(313;\n\
    \    primes.push_back(317);\n    primes.push_back(331);\n    primes.", "    std::vector<long>\
    \ primes;\n    primes.push_back(0);\n    for (long i = 2; i <= n; i++) {\n   \
    \     if (primes.back() <= i) {\n            primes.push_back(i);\n        }\n\
    \    }\n    return primes;", "    std::vector<long> primes;\n    primes.push_back(0);\n\
    \    primes.push_back(1);\n    long i = 2;\n    while (i < n) {\n        if (primes.find(i)\
    \ == primes.end()) {\n            primes.push_back(i);\n            i++;\n   \
    \     }\n    }\n    return primes;", "  std::vector<long> primes;\n  primes.push_back(0);\n\
    \  for (long i = 2; i <= n; i++) {\n    while (primes.back() <= i && primes.back()\
    \ + i <= n) {\n      primes.push_back(primes.back() + i);\n    }\n  }\n  return\
    \ primes;", "  std::vector<long> primes;\n  primes.push_back(0);\n  for (long\
    \ i = 1; i < n; i++) {\n    if (primes.back() <= i && primes.back() + 1 < i) {\n\
    \      primes.push_back(i);\n    }\n  }\n  return primes;", "    std::vector<long>\
    \ primes;\n    primes.push_back(0);\n    long i = 1;\n    while (i <= n) {\n \
    \       if (primes.back() <= i && primes.back() + i <= n) {\n            primes.push_back(i\
    \ + primes.back());\n        }\n        i++;\n    }\n    return primes;", "  std::vector<long>\
    \ primes;\n  primes.push_back(n);\n  for (long i = 2; i <= n; i++) {\n    while\
    \ (n % i == 0) {\n      primes.push_back(i);\n      n /= i;\n    }\n  }\n  return\
    \ primes;", "  std::vector<long> primes;\n  primes.reserve(n);\n  for (long i\
    \ = 1; i <= n; i++) {\n    if (primes.empty() || primes.back() <= i) {\n     \
    \ primes.push_back(i);\n    }\n    for (long j = 2; j <= i / j; j++) {\n     \
    \ if (i % j == 0) {\n        break;\n      }\n    }\n    if (j > i / j) {\n  \
    \    primes.push_back(i);\n    }\n  }\n  return primes;", "    std::vector<long>\
    \ primes;\n    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    primes.push_back(0);\n    primes.push_back(0);\n    primes.push_back(0);\n\
    \    ", "    std::vector<long> primes;\n    primes.push_back(0);\n    long i =\
    \ 2;\n    while (i <= n) {\n        if (primes.count(i) == 0) {\n            primes.push_back(i);\n\
    \            i += 2;\n        }\n        else {\n            i += 1;\n       \
    \ }\n    }\n    return primes;", "  std::vector<long> primes;\n  primes.push_back(n);\n\
    \  for (long i = 2; i <= n; i++) {\n    while (n % i == 0) {\n      primes.push_back(i);\n\
    \      n /= i;\n    }\n  }\n  return primes;", "    std::vector<long> primes;\n\
    \    primes.push_back(n);\n    long i = 2;\n    while (i < n) {\n        if (primes.count(i)\
    \ == 0) {\n            primes.push_back(i);\n        }\n        i++;\n    }\n\
    \    return primes;", "    std::vector<long> primes;\n    primes.push_back(0);\n\
    \    primes.push_back(n);\n    long i = 2;\n    while (i < n) {\n        if (primes.back()\
    \ % i == 0) {\n            primes.push_back(i);\n        }\n        i++;\n   \
    \ }\n    return primes;", "    std::vector<long> primes;\n    primes.push_back(0);\n\
    \    primes.push_back(1);\n    long i = 2;\n    while (i < n) {\n        if (primes.find(i)\
    \ == primes.end()) {\n            primes.push_back(i);\n            i += 2;\n\
    \        }\n    }\n    return primes;", "    std::vector<long> primes;\n    primes.push_back(0);\n\
    \    primes.push_back(n);\n    long counter = 2;\n    while (counter < n) {\n\
    \        if (primes[counter] == 0) {\n            primes[counter] = counter;\n\
    \            counter++;\n        }\n        else {\n            long counter2\
    \ = counter;\n            while (counter2 != 0) {\n                if (primes[counter2]\
    \ % counter2 == 0) {\n                    counter2++;\n                }\n   \
    \             else {\n                    break;\n                }\n        \
    \    }\n            counter++;\n        }\n    }\n    return primes;", "    std::vector<long>\
    \ primes;\n    primes.push_back(0);\n    primes.push_back(n);\n    long i = 2;\n\
    \    while (i < n) {\n        if (primes.count(i) == 0) {\n            primes.push_back(i);\n\
    \        }\n        i++;\n    }\n    return primes;", "    std::vector<long> primes;\n\
    \    primes.push_back(0);\n    primes.push_back(n);\n    std::vector<long> primes_upto(n);\n\
    \    primes_upto[0] = primes[0];\n    long counter = 2;\n    long i = 1;\n   \
    \ while (counter < n) {\n        if (primes_upto[i] <= n) {\n            primes_upto[i]\
    \ = primes[i];\n            counter++;\n        }\n        i++;\n    }\n    return\
    \ primes_upto;", "    std::vector<long> primes;\n    primes.push_back(0);\n  \
    \  primes.push_back(1);\n    long i = 2;\n    while (i < n) {\n        if (primes.count(i)\
    \ == 0) {\n            primes.push_back(i);\n            while (primes.count(i)\
    \ == 0) {\n                i++;\n            }\n        }\n        i++;\n    }\n\
    \    return primes;", "    std::vector<long> primes;\n    primes.push_back(0);\n\
    \    primes.push_back(1);\n    long i = 2;\n    while (i < n) {\n        if (primes.find(i)\
    \ != primes.end()) {\n            primes.push_back(i);\n        }\n        else\
    \ {\n            i++;\n        }\n    }\n    return primes;", "    std::vector<long>\
    \ primes;\n    primes.push_back(n);\n    long i = 2;\n    while (i < n) {\n  \
    \      if (primes.count(i) == 0) {\n            primes.push_back(i);\n       \
    \ }\n        i++;\n    }\n    return primes;", "    std::vector<long> primes;\n\
    \    long i = 2;\n    while (i <= n) {\n        if (primes.count(i) == 0) {\n\
    \            primes.push_back(i);\n            while (i <= n && primes.count(i)\
    \ == 0) {\n                i++;\n            }\n        }\n        i++;\n    }\n\
    \    return primes;", "    std::vector<long> primes;\n    primes.push_back(n);\n\
    \    long i = 2;\n    while (i < n) {\n        if (primes.count(i) == 0) {\n \
    \           primes.push_back(i);\n        }\n        i++;\n    }\n    return primes;",
  "    std::vector<long> primes;\n    primes.push_back(0);\n    primes.push_back(n);\n\
    \    long counter = 2;\n    while (counter < n) {\n        long next_prime = counter;\n\
    \        while (next_prime < n) {\n            if (primes[next_prime] == 0) {\n\
    \                primes[next_prime] = counter;\n                counter++;\n \
    \               break;\n            }\n            next_prime++;\n        }\n\
    \    }\n    return primes;"]
stop_tokens:
- "\n}"

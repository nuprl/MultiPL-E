name: HumanEval_81_numerical_letter_grade
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// It is the last week of the\
  \ semester and the teacher has to give the grades\n// to students. The teacher has\
  \ been making her own algorithm for grading.\n// The only problem is, she has lost\
  \ the code she used for grading.\n// She has given you a list of GPAs for some students\
  \ and you have to write \n// a function that can output a list of letter grades\
  \ using the following table:\n// GPA       |    Letter grade\n// 4.0           \
  \     A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0    \
  \            B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0\
  \                C+\n// > 1.7                C\n// > 1.3                C-\n// >\
  \ 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n\
  // 0.0                E\n// Example:\nstd::vector<std::string> numerical_letter_grade(std::vector<float>\
  \ grades) {\n"
tests: "}\nint main() {\n    auto candidate = numerical_letter_grade;\n    assert(candidate((std::vector<float>({(float)4.0,\
  \ (float)3, (float)1.7, (float)2, (float)3.5}))) == (std::vector<std::string>({(std::string)\"\
  A+\", (std::string)\"B\", (std::string)\"C-\", (std::string)\"C\", (std::string)\"\
  A-\"})));\n    assert(candidate((std::vector<float>({(float)1.2}))) == (std::vector<std::string>({(std::string)\"\
  D+\"})));\n    assert(candidate((std::vector<float>({(float)0.5}))) == (std::vector<std::string>({(std::string)\"\
  D-\"})));\n    assert(candidate((std::vector<float>({(float)0.0}))) == (std::vector<std::string>({(std::string)\"\
  E\"})));\n    assert(candidate((std::vector<float>({(float)1.0, (float)0.3, (float)1.5,\
  \ (float)2.8, (float)3.3}))) == (std::vector<std::string>({(std::string)\"D\", (std::string)\"\
  D-\", (std::string)\"C-\", (std::string)\"B\", (std::string)\"B+\"})));\n    assert(candidate((std::vector<float>({(float)0.0,\
  \ (float)0.7}))) == (std::vector<std::string>({(std::string)\"E\", (std::string)\"\
  D-\"})));\n}\n"
completions: ["    std::vector<std::string> letter_grade;\n    float sum = 0;\n  \
    \  for (float grade : grades) {\n        sum += grade;\n    }\n    float average\
    \ = sum / grades.size();\n    for (float grade : grades) {\n        letter_grade.push_back(std::to_string(grade\
    \ - average));\n    }\n    return letter_grade;", "    std::vector<std::string>\
    \ letter_grades;\n    for(float g : grades) {\n        if(g > 3.0) {\n       \
    \     letter_grades.push_back(\"A+\");\n        }\n        else if(g > 2.7) {\n\
    \            letter_grades.push_back(\"A\");\n        }\n        else if(g > 2.3)\
    \ {\n            letter_grades.push_back(\"A-\");\n        }\n        else if(g\
    \ > 2.0) {\n            letter_grades.push_back(\"B+\");\n        }\n        else\
    \ if(g > 1.7) {\n            letter_grades.push_back(\"B\");\n        }\n    \
    \    else if(g > 1.3) {\n            letter_grades.push_back(\"B-\");\n      \
    \  }\n        else if(g > 1.0) {\n            letter_grades.push_back(\"C+\");\n\
    \        }\n        else if(g > 0.7) {\n            letter_grades.push_back(\"\
    C\");\n        }\n        else if(g > 0.3) {\n            letter_grades.push_back(\"\
    C-\");\n        }\n        else if(g > 0.0) {\n            letter_grades.push_back(\"\
    D+\");\n        }\n        else if(g > -0.7) {\n            letter_grades.push_back(\"\
    D\");\n        }\n        else if(g > -0.3) {\n            letter_grades.push_back(\"\
    D-\");\n        }\n        else {\n            letter_grades.push_back(\"E\");\n\
    \        }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grade;\n\
    \    for(float grade : grades) {\n        if(grade >= 4.0 && grade < 5.0) {\n\
    \            letter_grade.push_back(\"A+\");\n        } else if(grade >= 3.7 &&\
    \ grade < 4.0) {\n            letter_grade.push_back(\"A\");\n        } else if(grade\
    \ >= 3.3 && grade < 3.7) {\n            letter_grade.push_back(\"A-\");\n    \
    \    } else if(grade >= 3.0 && grade < 3.3) {\n            letter_grade.push_back(\"\
    B+\");\n        } else if(grade >= 2.7 && grade < 3.0) {\n            letter_grade.push_back(\"\
    B\");\n        } else if(grade >= 2.3 && grade < 2.7) {\n            letter_grade.push_back(\"\
    B-\");\n        } else if(grade >= 2.0 && grade < 2.3) {\n            letter_grade.push_back(\"\
    C+\");\n        } else if(grade >= 1.7 && grade < 2.0) {\n            letter_grade.push_back(\"\
    C\");\n        } else if(grade >= 1.3 && grade < 1.7) {\n            letter_grade.push_back(\"\
    C-\");\n        } else if(grade >= 1.0 && grade < 1.3) {\n            letter_grade.push_back(\"\
    D+\");\n        } else if(grade >= 0.7 && grade < 1.0) {\n            letter_grade.push_back(\"\
    D\");\n        } else if(grade >= 0.0 && grade < 0.7) {\n            letter_grade.push_back(\"\
    D-\");\n        } else {\n            letter_grade.push_back(\"E\");\n       \
    \ }\n    }\n    return letter_grade;", "    std::vector<std::string> letter_grade;\n\
    \    for(float g : grades) {\n        if(g >= 4.0) {\n            letter_grade.push_back(\"\
    A+\");\n        } else if(g > 3.7) {\n            letter_grade.push_back(\"A\"\
    );\n        } else if(g > 3.3) {\n            letter_grade.push_back(\"A-\");\n\
    \        } else if(g > 3.0) {\n            letter_grade.push_back(\"B+\");\n \
    \       } else if(g > 2.7) {\n            letter_grade.push_back(\"B\");\n   \
    \     } else if(g > 2.3) {\n            letter_grade.push_back(\"B-\");\n    \
    \    } else if(g > 2.0) {\n            letter_grade.push_back(\"C+\");\n     \
    \   } else if(g > 1.7) {\n            letter_grade.push_back(\"C\");\n       \
    \ } else if(g > 1.3) {\n            letter_grade.push_back(\"C-\");\n        }\
    \ else if(g > 1.0) {\n            letter_grade.push_back(\"D+\");\n        } else\
    \ if(g > 0.7) {\n            letter_grade.push_back(\"D\");\n        } else if(g\
    \ > 0.0) {\n            letter_grade.push_back(\"D-\");\n        } else {\n  \
    \          letter_grade.push_back(\"E\");\n        }\n    }\n    return letter_grade;",
  "    std::vector<std::string> letter_grades;\n    assert(grades.size() == 12);\n\
    \    letter_grades.push_back(\"A+\");\n    letter_grades.push_back(\"A\");\n \
    \   letter_grades.push_back(\"A-\");\n    letter_grades.push_back(\"B+\");\n \
    \   letter_grades.push_back(\"B\");\n    letter_grades.push_back(\"B-\");\n  \
    \  letter_grades.push_back(\"C+\");\n    letter_grades.push_back(\"C\");\n   \
    \ letter_grades.push_back(\"C-\");\n    letter_grades.push_back(\"D+\");\n   \
    \ letter_grades.push_back(\"D\");\n    letter_grades.push_back(\"D-\");\n    letter_grades.push_back(\"\
    E\");\n    for(int i = 0; i < grades.size(); i++) {\n        if(grades[i] >= 3.7)\
    \ {\n            letter_grades.push_back(\"A+\");\n        }\n        else if(grades[i]\
    \ >= 3.3) {\n            letter_grades.push_back(\"A\");\n        }\n        else\
    \ if(grades[i] >= 3.0) {\n            letter_grades.push_back(\"A-\");\n     \
    \   }\n        else if(grades[i] >= 2.7) {\n            letter_grades.push_back(\"\
    B+\");\n        }\n        else if(grades[i] >= 2.3) {\n            letter_grades.push_back(\"\
    B\");\n        }\n        else if(grades[i] >= 2.0) {\n            letter_grades.push_back(\"\
    B-\");\n        }\n        else if(grades[i] >= 1.7) {\n            letter_grades.push_back(\"\
    C+\");\n        }\n        else if(grades[i] >= 1.3) {\n            letter_grades.push_back(\"\
    C\");\n        }\n        else if(grades[i] >= 1.0) {\n            letter_grades.push_back(\"\
    C-\");\n        }\n        else if(grades[i] >= 0.7) {\n            letter_grades.push_back(\"\
    D+\");\n        }\n        else if(grades[i] >= 0.3) {\n            letter_grades.push_back(\"\
    D\");\n        }\n        else if(grades[i] >= 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        }\n        else {\n            letter_grades.push_back(\"E\");\n\
    \        }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grade;\n\
    \    assert(grades.size() == 12);\n    for(int i = 0; i < 12; ++i) {\n       \
    \ if(grades[i] >= 4.0 && grades[i] <= 5.0) {\n            letter_grade.push_back(\"\
    A+\");\n        } else if(grades[i] >= 3.7 && grades[i] <= 4.0) {\n          \
    \  letter_grade.push_back(\"A\");\n        } else if(grades[i] >= 3.3 && grades[i]\
    \ <= 3.7) {\n            letter_grade.push_back(\"A-\");\n        } else if(grades[i]\
    \ >= 3.0 && grades[i] <= 3.3) {\n            letter_grade.push_back(\"B+\");\n\
    \        } else if(grades[i] >= 2.7 && grades[i] <= 3.0) {\n            letter_grade.push_back(\"\
    B\");\n        } else if(grades[i] >= 2.3 && grades[i] <= 2.7) {\n           \
    \ letter_grade.push_back(\"B-\");\n        } else if(grades[i] >= 2.0 && grades[i]\
    \ <= 2.3) {\n            letter_grade.push_back(\"C+\");\n        } else if(grades[i]\
    \ >= 1.7 && grades[i] <= 2.0) {\n            letter_grade.push_back(\"C\");\n\
    \        } else if(grades[i] >= 1.3 && grades[i] <= 1.7) {\n            letter_grade.push_back(\"\
    C-\");\n        } else if(grades[i] >= 1.0 && grades[i] <= 1.3) {\n          \
    \  letter_grade.push_back(\"D+\");\n        } else if(grades[i] >= 0.7 && grades[i]\
    \ <= 1.0) {\n            letter_grade.push_back(\"D\");\n        } else if(grades[i]\
    \ >= 0.0 && grades[i] <= 0.7) {\n            letter_grade.push_back(\"D-\");\n\
    \        } else {\n            letter_grade.push_back(\"E\");\n        }\n   \
    \ }\n    return letter_grade;", "    std::vector<std::string> letter_grades;\n\
    \    for (float grade : grades) {\n        letter_grades.push_back(std::to_string(grade\
    \ > 3.7 ? \"A+\" : (grade > 3.3 ? \"A-\" : (grade > 3.0 ? \"B+\" : grade > 2.7\
    \ ? \"B\" : grade > 2.3 ? \"B-\" : grade > 2.0 ? \"C+\" : grade > 1.7 ? \"C\"\
    \ : grade > 1.3 ? \"C-\" : grade > 1.0 ? \"D+\" : grade > 0.7 ? \"D\" : grade\
    \ > 0.0 ? \"D-\" : \"E\")));\n    }\n    return letter_grades;", "    std::vector<std::string>\
    \ letter_grade;\n    for(auto &grade : grades) {\n        if(grade >= 4.0) {\n\
    \            letter_grade.push_back(\"A+\");\n        } else if(grade >= 3.7)\
    \ {\n            letter_grade.push_back(\"A\");\n        } else if(grade >= 3.3)\
    \ {\n            letter_grade.push_back(\"A-\");\n        } else if(grade >= 3.0)\
    \ {\n            letter_grade.push_back(\"B+\");\n        } else if(grade >= 2.7)\
    \ {\n            letter_grade.push_back(\"B\");\n        } else if(grade >= 2.3)\
    \ {\n            letter_grade.push_back(\"B-\");\n        } else if(grade >= 2.0)\
    \ {\n            letter_grade.push_back(\"C+\");\n        } else if(grade >= 1.7)\
    \ {\n            letter_grade.push_back(\"C\");\n        } else if(grade >= 1.3)\
    \ {\n            letter_grade.push_back(\"C-\");\n        } else if(grade >= 1.0)\
    \ {\n            letter_grade.push_back(\"D+\");\n        } else if(grade >= 0.7)\
    \ {\n            letter_grade.push_back(\"D\");\n        } else if(grade >= 0.0)\
    \ {\n            letter_grade.push_back(\"D-\");\n        } else {\n         \
    \   letter_grade.push_back(\"E\");\n        }\n    }\n    return letter_grade;",
  "    std::vector<std::string> letter_grades;\n    for(float grade : grades) {\n\
    \        std::string letter_grade;\n        if(grade >= 4.0) {\n            letter_grade\
    \ = \"A+\";\n        } else if(grade > 3.7) {\n            letter_grade = \"A\"\
    ;\n        } else if(grade > 3.3) {\n            letter_grade = \"A-\";\n    \
    \    } else if(grade > 3.0) {\n            letter_grade = \"B+\";\n        } else\
    \ if(grade > 2.7) {\n            letter_grade = \"B\";\n        } else if(grade\
    \ > 2.3) {\n            letter_grade = \"B-\";\n        } else if(grade > 2.0)\
    \ {\n            letter_grade = \"C+\";\n        } else if(grade > 1.7) {\n  \
    \          letter_grade = \"C\";\n        } else if(grade > 1.3) {\n         \
    \   letter_grade = \"C-\";\n        } else if(grade > 1.0) {\n            letter_grade\
    \ = \"D+\";\n        } else if(grade > 0.7) {\n            letter_grade = \"D\"\
    ;\n        } else if(grade > 0.0) {\n            letter_grade = \"D-\";\n    \
    \    } else {\n            letter_grade = \"E\";\n        }\n        letter_grades.push_back(letter_grade);\n\
    \    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    assert(grades.size() == 12);\n    float sum = 0;\n    for (float g : grades)\
    \ {\n        sum += g;\n    }\n    float average = sum / grades.size();\n    float\
    \ gpa = average;\n    float letter_grade;\n    if (gpa >= 4.0) {\n        letter_grade\
    \ = \"A+\";\n    } else if (gpa > 3.7) {\n        letter_grade = \"A\";\n    }\
    \ else if (gpa > 3.3) {\n        letter_grade = \"A-\";\n    } else if (gpa >\
    \ 3.0) {\n        letter_grade = \"B+\";\n    } else if (gpa > 2.7) {\n      \
    \  letter_grade = \"B\";\n    } else if (gpa > 2.3) {\n        letter_grade =\
    \ \"B-\";\n    } else if (gpa > 2.0) {\n        letter_grade = \"C+\";\n    }\
    \ else if (gpa > 1.7) {\n        letter_grade = \"C\";\n    } else if (gpa > 1.3)\
    \ {\n        letter_grade = \"C-\";\n    } else if (gpa > 1.0) {\n        letter_grade\
    \ = \"D+\";\n    } else if (gpa > 0.7) {\n        letter_grade = \"D\";\n    }\
    \ else if (gpa > 0.0) {\n        letter_grade = \"D-\";\n    } else {\n      \
    \  letter_grade = \"E\";\n    }\n    letter_grades.push_back(letter_grade);\n\
    \    return letter_grades;", "    std::vector<std::string> letter_grades;\n  \
    \  for(auto &grade : grades) {\n        if(grade >= 4.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(grade > 3.7) {\n            letter_grades.push_back(\"\
    A\");\n        } else if(grade > 3.3) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if(grade > 3.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(grade > 2.7) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(grade > 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(grade > 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(grade > 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(grade > 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(grade > 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(grade > 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else if(grade > 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", '    // Your code goes here', "    std::vector<std::string>\
    \ letter_grades;\n    for(float grade : grades) {\n        if(grade >= 4.0) {\n\
    \            letter_grades.push_back(\"A+\");\n        } else if(grade > 3.7)\
    \ {\n            letter_grades.push_back(\"A\");\n        } else if(grade > 3.3)\
    \ {\n            letter_grades.push_back(\"A-\");\n        } else if(grade > 3.0)\
    \ {\n            letter_grades.push_back(\"B+\");\n        } else if(grade > 2.7)\
    \ {\n            letter_grades.push_back(\"B\");\n        } else if(grade > 2.3)\
    \ {\n            letter_grades.push_back(\"B-\");\n        } else if(grade > 2.0)\
    \ {\n            letter_grades.push_back(\"C+\");\n        } else if(grade > 1.7)\
    \ {\n            letter_grades.push_back(\"C\");\n        } else if(grade > 1.3)\
    \ {\n            letter_grades.push_back(\"C-\");\n        } else if(grade > 1.0)\
    \ {\n            letter_grades.push_back(\"D+\");\n        } else if(grade > 0.7)\
    \ {\n            letter_grades.push_back(\"D\");\n        } else if(grade > 0.0)\
    \ {\n            letter_grades.push_back(\"D-\");\n        } else {\n        \
    \    letter_grades.push_back(\"E\");\n        }\n    }\n    return letter_grades;",
  "    std::vector<std::string> letter_grade;\n    float sum = 0;\n    for (float\
    \ grade : grades) {\n        sum += grade;\n    }\n    float average = sum / grades.size();\n\
    \    for (float grade : grades) {\n        if (grade >= average) {\n         \
    \   letter_grade.push_back(\"A+\");\n        } else if (grade >= average - 0.2)\
    \ {\n            letter_grade.push_back(\"A\");\n        } else if (grade >= average\
    \ - 0.1) {\n            letter_grade.push_back(\"A-\");\n        } else if (grade\
    \ >= average + 0.1) {\n            letter_grade.push_back(\"B+\");\n        }\
    \ else if (grade >= average + 0.2) {\n            letter_grade.push_back(\"B\"\
    );\n        } else if (grade >= average + 0.3) {\n            letter_grade.push_back(\"\
    B-\");\n        } else if (grade >= average + 0.4) {\n            letter_grade.push_back(\"\
    C+\");\n        } else if (grade >= average + 0.5) {\n            letter_grade.push_back(\"\
    C\");\n        } else if (grade >= average + 0.6) {\n            letter_grade.push_back(\"\
    C-\");\n        } else if (grade >= average + 0.7) {\n            letter_grade.push_back(\"\
    D+\");\n        } else if (grade >= average + 0.8) {\n            letter_grade.push_back(\"\
    D\");\n        } else if (grade >= average + 0.9) {\n            letter_grade.push_back(\"\
    D-\");\n        } else {\n            letter_grade.push_back(\"E\");\n       \
    \ }\n    }\n    return letter_grade;", "    std::vector<std::string> letter_grades;\n\
    \    for(float g : grades) {\n        if(g > 3.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(g > 2.7) {\n            letter_grades.push_back(\"C\"\
    );\n        } else if(g > 2.3) {\n            letter_grades.push_back(\"B-\");\n\
    \        } else if(g > 2.0) {\n            letter_grades.push_back(\"B-\");\n\
    \        } else if(g > 1.7) {\n            letter_grades.push_back(\"C\");\n \
    \       } else if(g > 1.3) {\n            letter_grades.push_back(\"C-\");\n \
    \       } else if(g > 1.0) {\n            letter_grades.push_back(\"C-\");\n \
    \       } else if(g > 0.7) {\n            letter_grades.push_back(\"D\");\n  \
    \      } else if(g > 0.6) {\n            letter_grades.push_back(\"D\");\n   \
    \     } else if(g > 0.5) {\n            letter_grades.push_back(\"D\");\n    \
    \    } else if(g > 0.4) {\n            letter_grades.push_back(\"D\");\n     \
    \   } else if(g > 0.3) {\n            letter_grades.push_back(\"D\");\n      \
    \  } else if(g > 0.2) {\n            letter_grades.push_back(\"D\");\n       \
    \ } else if(g > 0.1) {\n            letter_grades.push_back(\"D\");\n        }\
    \ else if(g > 0.0) {\n            letter_grades.push_back(\"D\");\n        } else\
    \ if(g > 0.0) {\n            letter_grades.push_back(\"E\");\n        } else {\n\
    \            letter_grades.push_back(\"F\");\n        }\n    }\n    return letter_grades;",
  "    std::vector<std::string> letter_grades;\n    for(float g : grades) {\n    \
    \    if(g > 3.0) {\n            letter_grades.push_back(\"D+\");\n        }\n\
    \        else if(g > 2.7) {\n            letter_grades.push_back(\"D\");\n   \
    \     }\n        else if(g > 1.7) {\n            letter_grades.push_back(\"C\"\
    );\n        }\n        else if(g > 1.0) {\n            letter_grades.push_back(\"\
    C\");\n        }\n        else if(g > 0.7) {\n            letter_grades.push_back(\"\
    B\");\n        }\n        else if(g > 0.3) {\n            letter_grades.push_back(\"\
    B\");\n        }\n        else if(g > 0.0) {\n            letter_grades.push_back(\"\
    A\");\n        }\n        else if(g > -0.7) {\n            letter_grades.push_back(\"\
    A\");\n        }\n        else if(g > -0.3) {\n            letter_grades.push_back(\"\
    A\");\n        }\n        else if(g > -0.0) {\n            letter_grades.push_back(\"\
    A\");\n        }\n        else if(g > -3.0) {\n            letter_grades.push_back(\"\
    A\");\n        }\n        else if(g > -2.7) {\n            letter_grades.push_back(\"\
    A\");\n        }\n        else if(g > -1.7) {\n            letter_grades.push_back(\"\
    A\");\n        }\n        else if(g > -1.0) {\n            letter_grades.push_back(\"\
    A\");\n        }\n        else if(g > -3.0) {\n            letter_grades.push_back(\"\
    A\");\n        }\n        else if(g > -2.7) {\n            letter_grades.push_back(\"\
    A\");\n        }\n        else if(g > -1.7) {\n            letter_grades.push_back(\"\
    A\");\n        }\n        else if(g > -1.0) {\n            letter_grades.push_back(\"\
    A\");\n        }\n        else if(g > -3.0) {\n            letter_grades.push_back(\"\
    A\");\n        }\n        else if(g > -2.7) {\n            letter_grades.push_back(\"\
    A\");\n        }\n        else if(g > -1.7) {\n            letter_grades.push_back(\"\
    A\");\n        }\n        else if(g > -1.0) {\n            letter_grades.push_back(\"\
    A\");\n        }\n        else if(g > -3.0) {\n            letter_grades.push_back(\"\
    A\");\n        }\n        else if(g > -2.7) {\n            letter_grades.push_back(\"\
    A\");\n        }\n        else if(g > -1.7) {\n            letter_grades.push_back(\"\
    A\");\n        }\n        else if(g > -1.0) {\n            letter_grades.push_back(\"\
    A\");\n        }\n        else if(g > -3.0) {\n            letter_grades.push_back(\"\
    A\");\n        }\n", "    std::vector<std::string> letter_grade;\n    for(float\
    \ grade : grades) {\n        if(grade >= 4.0) {\n            letter_grade.push_back(\"\
    A+\");\n        } else if(grade >= 3.7) {\n            letter_grade.push_back(\"\
    A\");\n        } else if(grade >= 3.3) {\n            letter_grade.push_back(\"\
    A-\");\n        } else if(grade >= 3.0) {\n            letter_grade.push_back(\"\
    B+\");\n        } else if(grade >= 2.7) {\n            letter_grade.push_back(\"\
    B\");\n        } else if(grade >= 2.3) {\n            letter_grade.push_back(\"\
    B-\");\n        } else if(grade >= 2.0) {\n            letter_grade.push_back(\"\
    C+\");\n        } else if(grade >= 1.7) {\n            letter_grade.push_back(\"\
    C\");\n        } else if(grade >= 1.3) {\n            letter_grade.push_back(\"\
    C-\");\n        } else if(grade >= 1.0) {\n            letter_grade.push_back(\"\
    D+\");\n        } else if(grade >= 0.7) {\n            letter_grade.push_back(\"\
    D\");\n        } else if(grade >= 0.0) {\n            letter_grade.push_back(\"\
    D-\");\n        } else {\n            letter_grade.push_back(\"E\");\n       \
    \ }\n    }\n    return letter_grade;", "    std::vector<std::string> letter_grades;\n\
    \    for(float g : grades) {\n        if(g > 3.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(g > 2.7) {\n            letter_grades.push_back(\"A\"\
    );\n        } else if(g > 2.3) {\n            letter_grades.push_back(\"A-\");\n\
    \        } else if(g > 2.0) {\n            letter_grades.push_back(\"B+\");\n\
    \        } else if(g > 1.7) {\n            letter_grades.push_back(\"B\");\n \
    \       } else if(g > 1.3) {\n            letter_grades.push_back(\"B-\");\n \
    \       } else if(g > 1.0) {\n            letter_grades.push_back(\"C+\");\n \
    \       } else if(g > 0.7) {\n            letter_grades.push_back(\"C\");\n  \
    \      } else if(g > 0.3) {\n            letter_grades.push_back(\"C-\");\n  \
    \      } else if(g > 0.0) {\n            letter_grades.push_back(\"D+\");\n  \
    \      } else if(g > -0.7) {\n            letter_grades.push_back(\"D\");\n  \
    \      } else if(g > -0.3) {\n            letter_grades.push_back(\"D-\");\n \
    \       } else if(g > -1.0) {\n            letter_grades.push_back(\"E\");\n \
    \       }\n    }\n    return letter_grades;", '    // Your code here', "    std::vector<std::string>\
    \ letter_grades;\n    for(float g : grades) {\n        if(g > 3.0) {\n       \
    \     letter_grades.push_back(\"A+\");\n        }\n        else if(g > 2.7) {\n\
    \            letter_grades.push_back(\"A\");\n        }\n        else if(g > 2.3)\
    \ {\n            letter_grades.push_back(\"A-\");\n        }\n        else if(g\
    \ > 2.0) {\n            letter_grades.push_back(\"B+\");\n        }\n        else\
    \ if(g > 1.7) {\n            letter_grades.push_back(\"B\");\n        }\n    \
    \    else if(g > 1.3) {\n            letter_grades.push_back(\"B-\");\n      \
    \  }\n        else if(g > 1.0) {\n            letter_grades.push_back(\"C+\");\n\
    \        }\n        else if(g > 0.7) {\n            letter_grades.push_back(\"\
    C\");\n        }\n        else if(g > 0.3) {\n            letter_grades.push_back(\"\
    C-\");\n        }\n        else if(g > 0.0) {\n            letter_grades.push_back(\"\
    D+\");\n        }\n        else if(g > -0.7) {\n            letter_grades.push_back(\"\
    D\");\n        }\n        else if(g > -0.3) {\n            letter_grades.push_back(\"\
    D-\");\n        }\n        else {\n            letter_grades.push_back(\"E\");\n\
    \        }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grade;\n\
    \    for(float g : grades) {\n        if(g < 3.0) {\n            letter_grade.push_back(\"\
    A+\");\n        } else if(g < 3.7) {\n            letter_grade.push_back(\"A\"\
    );\n        } else if(g < 4.0) {\n            letter_grade.push_back(\"A-\");\n\
    \        } else if(g < 4.7) {\n            letter_grade.push_back(\"B+\");\n \
    \       } else if(g < 5.0) {\n            letter_grade.push_back(\"B\");\n   \
    \     } else if(g < 5.7) {\n            letter_grade.push_back(\"B-\");\n    \
    \    } else if(g < 6.0) {\n            letter_grade.push_back(\"C+\");\n     \
    \   } else if(g < 6.7) {\n            letter_grade.push_back(\"C\");\n       \
    \ } else if(g < 7.0) {\n            letter_grade.push_back(\"C-\");\n        }\
    \ else if(g < 7.7) {\n            letter_grade.push_back(\"D+\");\n        } else\
    \ if(g < 8.0) {\n            letter_grade.push_back(\"D\");\n        } else if(g\
    \ < 8.7) {\n            letter_grade.push_back(\"D-\");\n        } else if(g <\
    \ 9.0) {\n            letter_grade.push_back(\"E\");\n        } else {\n     \
    \       letter_grade.push_back(\"F\");\n        }\n    }\n    return letter_grade;",
  "    std::vector<std::string> letter_grades;\n    for(int i = 0; i < grades.size();\
    \ i++) {\n        if(grades[i] >= 4.0 && grades[i] <= 4.7) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(grades[i] >= 3.7 && grades[i] <= 3.3) {\n          \
    \  letter_grades.push_back(\"A\");\n        } else if(grades[i] >= 3.3 && grades[i]\
    \ <= 3.0) {\n            letter_grades.push_back(\"A-\");\n        } else if(grades[i]\
    \ >= 3.0 && grades[i] <= 2.7) {\n            letter_grades.push_back(\"B+\");\n\
    \        } else if(grades[i] >= 2.7 && grades[i] <= 2.3) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(grades[i] >= 2.3 && grades[i] <= 2.0) {\n           \
    \ letter_grades.push_back(\"B-\");\n        } else if(grades[i] >= 2.0 && grades[i]\
    \ <= 1.7) {\n            letter_grades.push_back(\"C+\");\n        } else if(grades[i]\
    \ >= 1.7 && grades[i] <= 1.3) {\n            letter_grades.push_back(\"C\");\n\
    \        } else if(grades[i] >= 1.3 && grades[i] <= 1.0) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(grades[i] >= 1.0 && grades[i] <= 0.7) {\n          \
    \  letter_grades.push_back(\"D+\");\n        } else if(grades[i] >= 0.7 && grades[i]\
    \ <= 0.0) {\n            letter_grades.push_back(\"D\");\n        } else {\n \
    \           letter_grades.push_back(\"D-\");\n        }\n    }\n    return letter_grades;",
  "    std::vector<std::string> letter_grades;\n    assert(grades.size() == 12);\n\
    \    letter_grades.push_back(\"A+\");\n    letter_grades.push_back(\"A\");\n \
    \   letter_grades.push_back(\"A-\");\n    letter_grades.push_back(\"B+\");\n \
    \   letter_grades.push_back(\"B\");\n    letter_grades.push_back(\"B-\");\n  \
    \  letter_grades.push_back(\"C+\");\n    letter_grades.push_back(\"C\");\n   \
    \ letter_grades.push_back(\"C-\");\n    letter_grades.push_back(\"D+\");\n   \
    \ letter_grades.push_back(\"D\");\n    letter_grades.push_back(\"D-\");\n    letter_grades.push_back(\"\
    E\");\n    for(float g : grades) {\n        if(g > 3.0) {\n            letter_grades.push_back(\"\
    A+\");\n        }\n        else if(g > 2.7) {\n            letter_grades.push_back(\"\
    A\");\n        }\n        else if(g > 2.3) {\n            letter_grades.push_back(\"\
    A-\");\n        }\n        else if(g > 2.0) {\n            letter_grades.push_back(\"\
    B+\");\n        }\n        else if(g > 1.7) {\n            letter_grades.push_back(\"\
    B\");\n        }\n        else if(g > 1.3) {\n            letter_grades.push_back(\"\
    B-\");\n        }\n        else if(g > 1.0) {\n            letter_grades.push_back(\"\
    C+\");\n        }\n        else if(g > 0.7) {\n            letter_grades.push_back(\"\
    C\");\n        }\n        else if(g > 0.3) {\n            letter_grades.push_back(\"\
    C-\");\n        }\n        else if(g > 0.0) {\n            letter_grades.push_back(\"\
    D+\");\n        }\n        else if(g > 0.0) {\n            letter_grades.push_back(\"\
    D\");\n        }\n        else if(g > 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        }\n        else {\n            letter_grades.push_back(\"E\");\n\
    \        }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grade;\n\
    \    float sum = 0;\n    for (float grade : grades) {\n        sum += grade;\n\
    \    }\n    float average = sum / grades.size();\n    for (float grade : grades)\
    \ {\n        if (grade >= average) {\n            letter_grade.push_back(\"A+\"\
    );\n        } else if (grade >= average - 0.2) {\n            letter_grade.push_back(\"\
    A\");\n        } else if (grade >= average - 0.1) {\n            letter_grade.push_back(\"\
    A-\");\n        } else if (grade >= average - 0.05) {\n            letter_grade.push_back(\"\
    B+\");\n        } else if (grade >= average - 0.02) {\n            letter_grade.push_back(\"\
    B\");\n        } else if (grade >= average - 0.01) {\n            letter_grade.push_back(\"\
    B-\");\n        } else if (grade >= average - 0.005) {\n            letter_grade.push_back(\"\
    C+\");\n        } else if (grade >= average - 0.002) {\n            letter_grade.push_back(\"\
    C\");\n        } else if (grade >= average - 0.001) {\n            letter_grade.push_back(\"\
    C-\");\n        } else if (grade >= average - 0.0001) {\n            letter_grade.push_back(\"\
    D+\");\n        } else if (grade >= average - 0.00005) {\n            letter_grade.push_back(\"\
    D\");\n        } else if (grade >= average - 0.00002) {\n            letter_grade.push_back(\"\
    D-\");\n        } else if (grade >= average - 0.00001) {\n            letter_grade.push_back(\"\
    E\");\n        } else {\n            letter_grade.push_back(\"F\");\n        }\n\
    \    }\n    return letter_grade;", "    std::vector<std::string> letter_grades;\n\
    \    for(float g : grades) {\n        if(g > 3.0 && g < 3.7) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(g > 3.7 && g < 3.3) {\n            letter_grades.push_back(\"\
    A\");\n        } else if(g > 3.3 && g < 3.0) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if(g > 3.0 && g < 2.7) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(g > 2.7 && g < 2.3) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(g > 2.3 && g < 2.0) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(g > 2.0 && g < 1.7) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(g > 1.7 && g < 1.3) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(g > 1.3 && g < 1.0) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(g > 1.0 && g < 0.7) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(g > 0.7 && g < 0.0) {\n            letter_grades.push_back(\"\
    D\");\n        } else {\n            letter_grades.push_back(\"D-\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for (float g : grades) {\n        if (g > 3.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if (g > 2.7) {\n            letter_grades.push_back(\"\
    A\");\n        } else if (g > 2.3) {\n            letter_grades.push_back(\"A-\"\
    );\n        } else if (g > 2.0) {\n            letter_grades.push_back(\"B+\"\
    );\n        } else if (g > 1.7) {\n            letter_grades.push_back(\"B\");\n\
    \        } else if (g > 1.3) {\n            letter_grades.push_back(\"B-\");\n\
    \        } else if (g > 1.0) {\n            letter_grades.push_back(\"C+\");\n\
    \        } else if (g > 0.7) {\n            letter_grades.push_back(\"C\");\n\
    \        } else if (g > 0.3) {\n            letter_grades.push_back(\"C-\");\n\
    \        } else if (g > 0.0) {\n            letter_grades.push_back(\"D+\");\n\
    \        } else if (g > -0.7) {\n            letter_grades.push_back(\"D\");\n\
    \        } else if (g > -0.3) {\n            letter_grades.push_back(\"D-\");\n\
    \        } else if (g > -0.0) {\n            letter_grades.push_back(\"E\");\n\
    \        } else {\n            letter_grades.push_back(\"F\");\n        }\n  \
    \  }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float grade : grades) {\n        if(grade >= 4.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(grade >= 3.7) {\n            letter_grades.push_back(\"\
    A\");\n        } else if(grade >= 3.3) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if(grade >= 3.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(grade >= 2.7) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(grade >= 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(grade >= 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(grade >= 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(grade >= 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(grade >= 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(grade >= 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else if(grade >= 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(auto &grade : grades) {\n        auto letter_grade = std::to_string(grade);\n\
    \        letter_grades.push_back(letter_grade);\n    }\n    return letter_grades;",
  "    std::vector<std::string> letter_grades;\n    for(int i = 0; i < grades.size();\
    \ i++) {\n        if(grades[i] >= 4.0 && grades[i] <= 4.7) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(grades[i] >= 3.7 && grades[i] <= 3.9) {\n          \
    \  letter_grades.push_back(\"A\");\n        } else if(grades[i] >= 3.3 && grades[i]\
    \ <= 3.7) {\n            letter_grades.push_back(\"A-\");\n        } else if(grades[i]\
    \ >= 3.0 && grades[i] <= 3.3) {\n            letter_grades.push_back(\"B+\");\n\
    \        } else if(grades[i] >= 2.7 && grades[i] <= 2.9) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(grades[i] >= 2.3 && grades[i] <= 2.7) {\n           \
    \ letter_grades.push_back(\"B-\");\n        } else if(grades[i] >= 2.0 && grades[i]\
    \ <= 2.3) {\n            letter_grades.push_back(\"C+\");\n        } else if(grades[i]\
    \ >= 1.7 && grades[i] <= 1.9) {\n            letter_grades.push_back(\"C\");\n\
    \        } else if(grades[i] >= 1.3 && grades[i] <= 1.7) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(grades[i] >= 1.0 && grades[i] <= 1.3) {\n          \
    \  letter_grades.push_back(\"D+\");\n        } else if(grades[i] >= 0.7 && grades[i]\
    \ <= 1.0) {\n            letter_grades.push_back(\"D\");\n        } else if(grades[i]\
    \ >= 0.0 && grades[i] <= 0.7) {\n            letter_grades.push_back(\"D-\");\n\
    \        } else {\n            letter_grades.push_back(\"E\");\n        }\n  \
    \  }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for (float g : grades) {\n        if (g > 3.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if (g > 2.7) {\n            letter_grades.push_back(\"\
    A\");\n        } else if (g > 2.3) {\n            letter_grades.push_back(\"A-\"\
    );\n        } else if (g > 2.0) {\n            letter_grades.push_back(\"B+\"\
    );\n        } else if (g > 1.7) {\n            letter_grades.push_back(\"B\");\n\
    \        } else if (g > 1.3) {\n            letter_grades.push_back(\"B-\");\n\
    \        } else if (g > 1.0) {\n            letter_grades.push_back(\"C+\");\n\
    \        } else if (g > 0.7) {\n            letter_grades.push_back(\"C\");\n\
    \        } else if (g > 0.3) {\n            letter_grades.push_back(\"C-\");\n\
    \        } else if (g > 0.0) {\n            letter_grades.push_back(\"D+\");\n\
    \        } else if (g > 0.0) {\n            letter_grades.push_back(\"D\");\n\
    \        } else if (g > 0.0) {\n            letter_grades.push_back(\"D-\");\n\
    \        } else if (g > 0.0) {\n            letter_grades.push_back(\"E\");\n\
    \        }\n    }\n    return letter_grades;", '    // Your code here', '    //
    Your code goes here', "    std::vector<std::string> letter_grades;\n    for(float\
    \ g : grades) {\n        if(g > 3.0) {\n            letter_grades.push_back(\"\
    A+\");\n        }\n        else if(g > 2.7) {\n            letter_grades.push_back(\"\
    A\");\n        }\n        else if(g > 2.3) {\n            letter_grades.push_back(\"\
    A-\");\n        }\n        else if(g > 2.0) {\n            letter_grades.push_back(\"\
    B+\");\n        }\n        else if(g > 1.7) {\n            letter_grades.push_back(\"\
    B\");\n        }\n        else if(g > 1.3) {\n            letter_grades.push_back(\"\
    B-\");\n        }\n        else if(g > 1.0) {\n            letter_grades.push_back(\"\
    C+\");\n        }\n        else if(g > 0.7) {\n            letter_grades.push_back(\"\
    C\");\n        }\n        else if(g > 0.3) {\n            letter_grades.push_back(\"\
    C-\");\n        }\n        else if(g > 0.0) {\n            letter_grades.push_back(\"\
    D+\");\n        }\n        else if(g > 0.0) {\n            letter_grades.push_back(\"\
    D\");\n        }\n        else {\n            letter_grades.push_back(\"D-\");\n\
    \        }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(auto &grade : grades) {\n        if(grade >= 4.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(grade > 3.7) {\n            letter_grades.push_back(\"\
    A\");\n        } else if(grade > 3.3) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if(grade > 3.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(grade > 2.7) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(grade > 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(grade > 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(grade > 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(grade > 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(grade > 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(grade > 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else if(grade > 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grade;\n\
    \    for(auto &grade: grades) {\n        if(grade >= 4.0) {\n            letter_grade.push_back(\"\
    A+\");\n        } else if(grade > 3.7) {\n            letter_grade.push_back(\"\
    A\");\n        } else if(grade > 3.3) {\n            letter_grade.push_back(\"\
    A-\");\n        } else if(grade > 3.0) {\n            letter_grade.push_back(\"\
    B+\");\n        } else if(grade > 2.7) {\n            letter_grade.push_back(\"\
    B\");\n        } else if(grade > 2.3) {\n            letter_grade.push_back(\"\
    B-\");\n        } else if(grade > 2.0) {\n            letter_grade.push_back(\"\
    C+\");\n        } else if(grade > 1.7) {\n            letter_grade.push_back(\"\
    C\");\n        } else if(grade > 1.3) {\n            letter_grade.push_back(\"\
    C-\");\n        } else if(grade > 1.0) {\n            letter_grade.push_back(\"\
    D+\");\n        } else if(grade > 0.7) {\n            letter_grade.push_back(\"\
    D\");\n        } else if(grade > 0.0) {\n            letter_grade.push_back(\"\
    D-\");\n        } else {\n            letter_grade.push_back(\"E\");\n       \
    \ }\n    }\n    return letter_grade;", "    std::vector<std::string> letter_grades;\n\
    \    for(auto &grade : grades) {\n        if(grade >= 4.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(grade >= 3.7) {\n            letter_grades.push_back(\"\
    A\");\n        } else if(grade >= 3.3) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if(grade >= 3.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(grade >= 2.7) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(grade >= 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(grade >= 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(grade >= 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(grade >= 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(grade >= 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(grade >= 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else if(grade >= 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float g : grades) {\n        if(g > 3.0 && g < 3.7) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(g > 3.7 && g < 3.3) {\n            letter_grades.push_back(\"\
    A\");\n        } else if(g > 3.3 && g < 3.0) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if(g > 3.0 && g < 2.7) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(g > 2.7 && g < 2.3) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(g > 2.3 && g < 2.0) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(g > 2.0 && g < 1.7) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(g > 1.7 && g < 1.3) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(g > 1.3 && g < 1.0) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(g > 1.0 && g < 0.7) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(g > 0.7 && g < 0.0) {\n            letter_grades.push_back(\"\
    D\");\n        } else {\n            letter_grades.push_back(\"D-\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grade;\n\
    \    assert(grades.size() == 12);\n    float gpa = grades[4];\n    float min_gpa\
    \ = grades[0];\n    float max_gpa = grades[grades.size() - 1];\n    float diff\
    \ = max_gpa - min_gpa;\n    float gpa_diff = gpa - min_gpa;\n    float gpa_diff2\
    \ = gpa_diff * gpa_diff;\n    float gpa_diff3 = gpa_diff2 * gpa_diff;\n    float\
    \ gpa_diff4 = gpa_diff3 * gpa_diff;\n    float gpa_diff5 = gpa_diff4 * gpa_diff;\n\
    \    float gpa_diff6 = gpa_diff5 * gpa_diff;\n    float gpa_diff7 = gpa_diff6\
    \ * gpa_diff;\n    float gpa_diff8 = gpa_diff7 * gpa_diff;\n    float gpa_diff9\
    \ = gpa_diff8 * gpa_diff;\n    float gpa_diff10 = gpa_diff9 * gpa_diff;\n    float\
    \ gpa_diff11 = gpa_diff10 * gpa_diff;\n    float gpa_diff12 = gpa_diff11 * gpa_diff;\n\
    \    float gpa_diff13 = gpa_diff12 * gpa_diff;\n    float gpa_diff14 = gpa_diff13\
    \ * gpa_diff;\n    float gpa_diff15 = gpa_diff14 * gpa_diff;\n    float gpa_diff16\
    \ = gpa_diff15 * gpa_diff;\n    float gpa_diff17 = gpa_diff16 * gpa_diff;\n  \
    \  float gpa_diff18 = gpa_diff17 * gpa_diff;\n    float gpa_diff19 = gpa_diff18\
    \ * gpa_diff;\n    float gpa_diff20 = gpa_diff19 * gpa_diff;\n    float gpa_diff21\
    \ = gpa_diff20 * gpa_diff;\n    float gpa_diff22 = gpa_diff21 * gpa_diff;\n  \
    \  float gpa_diff23 = gpa_diff22 * gpa_diff;\n    float gpa_diff24 = gpa_diff23\
    \ * gpa_diff;\n    float gpa_diff25 = gpa_diff24 * gpa_diff;\n    float gpa_diff26\
    \ = gpa_diff25 * gpa_diff;\n    float gpa_diff27 = gpa_diff26 * gpa_diff;\n  \
    \  float gpa_diff28 = gpa_diff27 * gpa_diff;\n    float gpa_diff29 = gpa_diff28\
    \ * gpa_diff;\n    float ", "    std::vector<std::string> letter_grade;\n    assert(grades.size()\
    \ == 12);\n    for(int i = 0; i < 12; i++) {\n        if(grades[i] >= 4.0 && grades[i]\
    \ < 3.7) {\n            letter_grade.push_back(\"A+\");\n        } else if(grades[i]\
    \ >= 3.7 && grades[i] < 3.3) {\n            letter_grade.push_back(\"A\");\n \
    \       } else if(grades[i] >= 3.3 && grades[i] < 3.0) {\n            letter_grade.push_back(\"\
    A-\");\n        } else if(grades[i] >= 3.0 && grades[i] < 2.7) {\n           \
    \ letter_grade.push_back(\"B+\");\n        } else if(grades[i] >= 2.7 && grades[i]\
    \ < 2.3) {\n            letter_grade.push_back(\"B\");\n        } else if(grades[i]\
    \ >= 2.3 && grades[i] < 2.0) {\n            letter_grade.push_back(\"B-\");\n\
    \        } else if(grades[i] >= 2.0 && grades[i] < 1.7) {\n            letter_grade.push_back(\"\
    C+\");\n        } else if(grades[i] >= 1.7 && grades[i] < 1.3) {\n           \
    \ letter_grade.push_back(\"C\");\n        } else if(grades[i] >= 1.3 && grades[i]\
    \ < 1.0) {\n            letter_grade.push_back(\"C-\");\n        } else if(grades[i]\
    \ >= 1.0 && grades[i] < 0.7) {\n            letter_grade.push_back(\"D+\");\n\
    \        } else if(grades[i] >= 0.7 && grades[i] < 0.0) {\n            letter_grade.push_back(\"\
    D\");\n        } else {\n            letter_grade.push_back(\"D-\");\n       \
    \ }\n    }\n    return letter_grade;", "    std::vector<std::string> letter_grade;\n\
    \    for(float g : grades) {\n        if(g > 3.0 && g < 3.7) {\n            letter_grade.push_back(\"\
    A+\");\n        } else if(g > 3.7 && g < 3.3) {\n            letter_grade.push_back(\"\
    A\");\n        } else if(g > 3.3 && g < 3.0) {\n            letter_grade.push_back(\"\
    A-\");\n        } else if(g > 3.0 && g < 2.7) {\n            letter_grade.push_back(\"\
    B+\");\n        } else if(g > 2.7 && g < 2.3) {\n            letter_grade.push_back(\"\
    B\");\n        } else if(g > 2.3 && g < 2.0) {\n            letter_grade.push_back(\"\
    B-\");\n        } else if(g > 2.0 && g < 1.7) {\n            letter_grade.push_back(\"\
    C+\");\n        } else if(g > 1.7 && g < 1.3) {\n            letter_grade.push_back(\"\
    C\");\n        } else if(g > 1.3 && g < 1.0) {\n            letter_grade.push_back(\"\
    C-\");\n        } else if(g > 1.0 && g < 0.7) {\n            letter_grade.push_back(\"\
    D+\");\n        } else if(g > 0.7 && g < 0.0) {\n            letter_grade.push_back(\"\
    D\");\n        } else {\n            letter_grade.push_back(\"D-\");\n       \
    \ }\n    }\n    return letter_grade;", "    std::vector<std::string> letter_grades;\n\
    \    assert(grades.size() == 12);\n    letter_grades.push_back(\"A+\");\n    letter_grades.push_back(\"\
    A\");\n    letter_grades.push_back(\"A-\");\n    letter_grades.push_back(\"B+\"\
    );\n    letter_grades.push_back(\"B\");\n    letter_grades.push_back(\"B-\");\n\
    \    letter_grades.push_back(\"C+\");\n    letter_grades.push_back(\"C\");\n \
    \   letter_grades.push_back(\"C-\");\n    letter_grades.push_back(\"D+\");\n \
    \   letter_grades.push_back(\"D\");\n    letter_grades.push_back(\"D-\");\n  \
    \  letter_grades.push_back(\"E\");\n    for(auto &grade : grades) {\n        if(grade\
    \ >= 4.0) {\n            letter_grades.push_back(\"A+\");\n        }\n       \
    \ else if(grade > 3.7) {\n            letter_grades.push_back(\"A\");\n      \
    \  }\n        else if(grade > 3.3) {\n            letter_grades.push_back(\"A-\"\
    );\n        }\n        else if(grade > 3.0) {\n            letter_grades.push_back(\"\
    B+\");\n        }\n        else if(grade > 2.7) {\n            letter_grades.push_back(\"\
    B\");\n        }\n        else if(grade > 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        }\n        else if(grade > 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        }\n        else if(grade > 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        }\n        else if(grade > 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        }\n        else if(grade > 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        }\n        else if(grade > 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        }\n        else if(grade > 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        }\n        else {\n            letter_grades.push_back(\"E\");\n\
    \        }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float grade : grades) {\n        if(grade >= 4.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(grade >= 3.7) {\n            letter_grades.push_back(\"\
    A\");\n        } else if(grade >= 3.3) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if(grade >= 3.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(grade >= 2.7) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(grade >= 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(grade >= 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(grade >= 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(grade >= 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(grade >= 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(grade >= 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else if(grade >= 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grade;\n\
    \    for(float g : grades) {\n        if(g > 3.0)\n            letter_grade.push_back(\"\
    A+\");\n        else if(g > 2.7)\n            letter_grade.push_back(\"A\");\n\
    \        else if(g > 2.3)\n            letter_grade.push_back(\"A-\");\n     \
    \   else if(g > 2.0)\n            letter_grade.push_back(\"B+\");\n        else\
    \ if(g > 1.7)\n            letter_grade.push_back(\"B\");\n        else if(g >\
    \ 1.3)\n            letter_grade.push_back(\"B-\");\n        else if(g > 1.0)\n\
    \            letter_grade.push_back(\"C+\");\n        else if(g > 0.7)\n     \
    \       letter_grade.push_back(\"C\");\n        else if(g > 0.3)\n           \
    \ letter_grade.push_back(\"C-\");\n        else if(g > 0.0)\n            letter_grade.push_back(\"\
    D+\");\n        else if(g > -0.3)\n            letter_grade.push_back(\"D\");\n\
    \        else if(g > -0.7)\n            letter_grade.push_back(\"D-\");\n    \
    \    else\n            letter_grade.push_back(\"E\");\n    }\n    return letter_grade;",
  "    std::vector<std::string> letter_grades;\n    for(float grade : grades) {\n\
    \        if(grade >= 4.0 && grade <= 4.7) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(grade >= 3.7 && grade <= 4.0) {\n            letter_grades.push_back(\"\
    A\");\n        } else if(grade >= 3.3 && grade <= 3.7) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if(grade >= 3.0 && grade <= 3.3) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(grade >= 2.7 && grade <= 3.0) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(grade >= 2.3 && grade <= 2.7) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(grade >= 2.0 && grade <= 2.3) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(grade >= 1.7 && grade <= 2.0) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(grade >= 1.3 && grade <= 1.7) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(grade >= 1.0 && grade <= 1.3) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(grade >= 0.7 && grade <= 1.0) {\n            letter_grades.push_back(\"\
    D\");\n        } else if(grade >= 0.0 && grade <= 0.7) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    assert(grades.size() == 12);\n    float sum = 0;\n    for (float grade :\
    \ grades) {\n        sum += grade;\n    }\n    float average = sum / grades.size();\n\
    \    float gpa = average * 4;\n    float gpa_1 = average * 3.7;\n    float gpa_2\
    \ = average * 3.3;\n    float gpa_3 = average * 3;\n    float gpa_4 = average\
    \ * 2.7;\n    float gpa_5 = average * 2.3;\n    float gpa_6 = average * 2;\n \
    \   float gpa_7 = average * 1.7;\n    float gpa_8 = average * 1.3;\n    float\
    \ gpa_9 = average * 1;\n    float gpa_10 = average * 0.7;\n    float gpa_11 =\
    \ average * 0;\n    float gpa_12 = average * 0;\n    float gpa_13 = average *\
    \ 0;\n    float gpa_14 = average * 0;\n    float gpa_15 = average * 0;\n    float\
    \ gpa_16 = average * 0;\n    float gpa_17 = average * 0;\n    float gpa_18 = average\
    \ * 0;\n    float gpa_19 = average * 0;\n    float gpa_20 = average * 0;\n   \
    \ float gpa_21 = average * 0;\n    float gpa_22 = average * 0;\n    float gpa_23\
    \ = average * 0;\n    float gpa_24 = average * 0;\n    float gpa_25 = average\
    \ * 0;\n    float gpa_26 = average * 0;\n    float gpa_27 = average * 0;\n   \
    \ float gpa_28 = average * 0;\n    float gpa_29 = average * 0;\n    float gpa_30\
    \ = average * 0;\n    float gpa_31 = average * 0;\n    float gpa_32 = average\
    \ * 0;\n    float gpa_33 = average * 0;\n    float gpa_34 = average * 0;\n   \
    \ float gpa_35 = average * 0;\n    float gpa_36 = average * 0;\n    float gpa_37\
    \ = average * 0;\n    float gpa_38 = average * 0;\n    float gpa_39 = average\
    \ * 0;\n    float gpa_40 = average * 0;\n    float gpa_41 = average * 0;\n   \
    \ float gpa_42 = average * 0;\n    float gpa_43 = average * 0;\n    float gpa_44\
    \ = average * 0;\n    float gpa_45 = average * 0;\n    float gpa_46 = average\
    \ * 0;\n    float gpa_47", "    std::vector<std::string> letter_grades;\n    assert(grades.size()\
    \ == 12);\n    letter_grades.push_back(\"A+\");\n    letter_grades.push_back(\"\
    A\");\n    letter_grades.push_back(\"A-\");\n    letter_grades.push_back(\"B+\"\
    );\n    letter_grades.push_back(\"B\");\n    letter_grades.push_back(\"B-\");\n\
    \    letter_grades.push_back(\"C+\");\n    letter_grades.push_back(\"C\");\n \
    \   letter_grades.push_back(\"C-\");\n    letter_grades.push_back(\"D+\");\n \
    \   letter_grades.push_back(\"D\");\n    letter_grades.push_back(\"D-\");\n  \
    \  letter_grades.push_back(\"E\");\n    for(float g : grades) {\n        if(g\
    \ > 3.7) {\n            letter_grades.push_back(\"A+\");\n        }\n        else\
    \ if(g > 3.3) {\n            letter_grades.push_back(\"A\");\n        }\n    \
    \    else if(g > 3) {\n            letter_grades.push_back(\"A-\");\n        }\n\
    \        else if(g > 2.7) {\n            letter_grades.push_back(\"B+\");\n  \
    \      }\n        else if(g > 2.3) {\n            letter_grades.push_back(\"B\"\
    );\n        }\n        else if(g > 2) {\n            letter_grades.push_back(\"\
    B-\");\n        }\n        else if(g > 1.7) {\n            letter_grades.push_back(\"\
    C+\");\n        }\n        else if(g > 1.3) {\n            letter_grades.push_back(\"\
    C\");\n        }\n        else if(g > 1) {\n            letter_grades.push_back(\"\
    C-\");\n        }\n        else if(g > 0.7) {\n            letter_grades.push_back(\"\
    D+\");\n        }\n        else if(g > 0) {\n            letter_grades.push_back(\"\
    D\");\n        }\n        else {\n            letter_grades.push_back(\"D-\");\n\
    \        }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    assert(grades.size() % 2 == 0);\n    for (int i = 0; i < grades.size(); i\
    \ += 2) {\n        letter_grades.push_back(std::to_string(grades[i]) + \"+\");\n\
    \    }\n    for (int i = grades.size(); i > 0; i -= 2) {\n        letter_grades.push_back(std::to_string(grades[i])\
    \ + \"-\");\n    }\n    letter_grades.push_back(std::to_string(grades[0]) + \"\
    -\");\n    return letter_grades;", "    std::vector<std::string> letter_grade;\n\
    \    for(auto &grade: grades) {\n        if(grade >= 4.0 && grade < 3.7) {\n \
    \           letter_grade.push_back(\"A+\");\n        } else if(grade >= 3.7 &&\
    \ grade < 3.3) {\n            letter_grade.push_back(\"A\");\n        } else if(grade\
    \ >= 3.3 && grade < 3.0) {\n            letter_grade.push_back(\"A-\");\n    \
    \    } else if(grade >= 3.0 && grade < 2.7) {\n            letter_grade.push_back(\"\
    B+\");\n        } else if(grade >= 2.7 && grade < 2.3) {\n            letter_grade.push_back(\"\
    B\");\n        } else if(grade >= 2.3 && grade < 2.0) {\n            letter_grade.push_back(\"\
    B-\");\n        } else if(grade >= 2.0 && grade < 1.7) {\n            letter_grade.push_back(\"\
    C+\");\n        } else if(grade >= 1.7 && grade < 1.3) {\n            letter_grade.push_back(\"\
    C\");\n        } else if(grade >= 1.3 && grade < 1.0) {\n            letter_grade.push_back(\"\
    C-\");\n        } else if(grade >= 1.0 && grade < 0.7) {\n            letter_grade.push_back(\"\
    D+\");\n        } else if(grade >= 0.7 && grade < 0.0) {\n            letter_grade.push_back(\"\
    D\");\n        } else {\n            letter_grade.push_back(\"D-\");\n       \
    \ }\n    }\n    return letter_grade;", "    std::vector<std::string> letter_grades;\n\
    \    for(float g : grades) {\n        letter_grades.push_back(std::to_string((int)g));\n\
    \    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float g : grades) {\n        if(g > 3.0) {\n            letter_grades.push_back(\"\
    A+\");\n        }\n        else if(g > 2.7) {\n            letter_grades.push_back(\"\
    A\");\n        }\n        else if(g > 2.3) {\n            letter_grades.push_back(\"\
    A-\");\n        }\n        else if(g > 2.0) {\n            letter_grades.push_back(\"\
    B+\");\n        }\n        else if(g > 1.7) {\n            letter_grades.push_back(\"\
    B\");\n        }\n        else if(g > 1.3) {\n            letter_grades.push_back(\"\
    B-\");\n        }\n        else if(g > 1.0) {\n            letter_grades.push_back(\"\
    C+\");\n        }\n        else if(g > 0.7) {\n            letter_grades.push_back(\"\
    C\");\n        }\n        else if(g > 0.3) {\n            letter_grades.push_back(\"\
    C-\");\n        }\n        else if(g > 0.0) {\n            letter_grades.push_back(\"\
    D+\");\n        }\n        else if(g > 0.0) {\n            letter_grades.push_back(\"\
    D\");\n        }\n        else if(g > 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        }\n        else if(g > 0.0) {\n            letter_grades.push_back(\"\
    E\");\n        }\n        else {\n            letter_grades.push_back(\"F\");\n\
    \        }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    assert(grades.size() == 12);\n    letter_grades.push_back(\"A+\");\n    letter_grades.push_back(\"\
    A\");\n    letter_grades.push_back(\"A-\");\n    letter_grades.push_back(\"B+\"\
    );\n    letter_grades.push_back(\"B\");\n    letter_grades.push_back(\"B-\");\n\
    \    letter_grades.push_back(\"C+\");\n    letter_grades.push_back(\"C\");\n \
    \   letter_grades.push_back(\"C-\");\n    letter_grades.push_back(\"D+\");\n \
    \   letter_grades.push_back(\"D\");\n    letter_grades.push_back(\"D-\");\n  \
    \  letter_grades.push_back(\"E\");\n    return letter_grades;", "    std::vector<std::string>\
    \ letter_grades;\n    \n    // Write your code here\n    \n    return letter_grades;",
  "    std::vector<std::string> letter_grade;\n    for(int i = 0; i < grades.size();\
    \ i++) {\n        if(grades[i] >= 4.0 && grades[i] <= 3.7) {\n            letter_grade.push_back(\"\
    A+\");\n        } else if(grades[i] >= 3.7 && grades[i] <= 3.3) {\n          \
    \  letter_grade.push_back(\"A\");\n        } else if(grades[i] >= 3.3 && grades[i]\
    \ <= 3.0) {\n            letter_grade.push_back(\"A-\");\n        } else if(grades[i]\
    \ >= 3.0 && grades[i] <= 2.7) {\n            letter_grade.push_back(\"B+\");\n\
    \        } else if(grades[i] >= 2.7 && grades[i] <= 2.3) {\n            letter_grade.push_back(\"\
    B\");\n        } else if(grades[i] >= 2.3 && grades[i] <= 2.0) {\n           \
    \ letter_grade.push_back(\"B-\");\n        } else if(grades[i] >= 2.0 && grades[i]\
    \ <= 1.7) {\n            letter_grade.push_back(\"C+\");\n        } else if(grades[i]\
    \ >= 1.7 && grades[i] <= 1.3) {\n            letter_grade.push_back(\"C\");\n\
    \        } else if(grades[i] >= 1.3 && grades[i] <= 1.0) {\n            letter_grade.push_back(\"\
    C-\");\n        } else if(grades[i] >= 1.0 && grades[i] <= 0.7) {\n          \
    \  letter_grade.push_back(\"D+\");\n        } else if(grades[i] >= 0.7 && grades[i]\
    \ <= 0.0) {\n            letter_grade.push_back(\"D\");\n        } else {\n  \
    \          letter_grade.push_back(\"D-\");\n        }\n    }\n    return letter_grade;",
  "    std::vector<std::string> letter_grade;\n    for (float g : grades) {\n    \
    \    if (g >= 4.0 && g < 5.0) {\n            letter_grade.push_back(\"A+\");\n\
    \        } else if (g >= 3.7 && g < 4.0) {\n            letter_grade.push_back(\"\
    A\");\n        } else if (g >= 3.3 && g < 3.7) {\n            letter_grade.push_back(\"\
    A-\");\n        } else if (g >= 3.0 && g < 3.3) {\n            letter_grade.push_back(\"\
    B+\");\n        } else if (g >= 2.7 && g < 3.0) {\n            letter_grade.push_back(\"\
    B\");\n        } else if (g >= 2.3 && g < 2.7) {\n            letter_grade.push_back(\"\
    B-\");\n        } else if (g >= 2.0 && g < 2.3) {\n            letter_grade.push_back(\"\
    C+\");\n        } else if (g >= 1.7 && g < 2.0) {\n            letter_grade.push_back(\"\
    C\");\n        } else if (g >= 1.3 && g < 1.7) {\n            letter_grade.push_back(\"\
    C-\");\n        } else if (g >= 1.0 && g < 1.3) {\n            letter_grade.push_back(\"\
    D+\");\n        } else if (g >= 0.7 && g < 1.0) {\n            letter_grade.push_back(\"\
    D\");\n        } else if (g >= 0.0 && g < 0.7) {\n            letter_grade.push_back(\"\
    D-\");\n        } else {\n            letter_grade.push_back(\"E\");\n       \
    \ }\n    }\n    return letter_grade;", "    std::vector<std::string> letter_grade;\n\
    \    for(auto &grade : grades) {\n        if(grade >= 4.0) {\n            letter_grade.push_back(\"\
    A+\");\n        } else if(grade > 3.7) {\n            letter_grade.push_back(\"\
    A\");\n        } else if(grade > 3.3) {\n            letter_grade.push_back(\"\
    A-\");\n        } else if(grade > 3.0) {\n            letter_grade.push_back(\"\
    B+\");\n        } else if(grade > 2.7) {\n            letter_grade.push_back(\"\
    B\");\n        } else if(grade > 2.3) {\n            letter_grade.push_back(\"\
    B-\");\n        } else if(grade > 2.0) {\n            letter_grade.push_back(\"\
    C+\");\n        } else if(grade > 1.7) {\n            letter_grade.push_back(\"\
    C\");\n        } else if(grade > 1.3) {\n            letter_grade.push_back(\"\
    C-\");\n        } else if(grade > 1.0) {\n            letter_grade.push_back(\"\
    D+\");\n        } else if(grade > 0.7) {\n            letter_grade.push_back(\"\
    D\");\n        } else if(grade > 0.0) {\n            letter_grade.push_back(\"\
    D-\");\n        } else {\n            letter_grade.push_back(\"E\");\n       \
    \ }\n    }\n    return letter_grade;", "    std::vector<std::string> letter_grades;\n\
    \    for(float g : grades) {\n        if(g > 3.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(g > 2.7) {\n            letter_grades.push_back(\"C\"\
    );\n        } else if(g > 2.3) {\n            letter_grades.push_back(\"B-\");\n\
    \        } else if(g > 2.0) {\n            letter_grades.push_back(\"B-\");\n\
    \        } else if(g > 1.7) {\n            letter_grades.push_back(\"C\");\n \
    \       } else if(g > 1.3) {\n            letter_grades.push_back(\"C-\");\n \
    \       } else if(g > 1.0) {\n            letter_grades.push_back(\"D+\");\n \
    \       } else if(g > 0.7) {\n            letter_grades.push_back(\"D\");\n  \
    \      } else if(g > 0.0) {\n            letter_grades.push_back(\"D-\");\n  \
    \      } else {\n            letter_grades.push_back(\"E\");\n        }\n    }\n\
    \    return letter_grades;", "    std::vector<std::string> letter_grade;\n   \
    \ for (float grade : grades) {\n        if (grade >= 4.0) {\n            letter_grade.push_back(\"\
    A+\");\n        } else if (grade > 3.7) {\n            letter_grade.push_back(\"\
    A\");\n        } else if (grade > 3.3) {\n            letter_grade.push_back(\"\
    A-\");\n        } else if (grade > 3.0) {\n            letter_grade.push_back(\"\
    B+\");\n        } else if (grade > 2.7) {\n            letter_grade.push_back(\"\
    B\");\n        } else if (grade > 2.3) {\n            letter_grade.push_back(\"\
    B-\");\n        } else if (grade > 2.0) {\n            letter_grade.push_back(\"\
    C+\");\n        } else if (grade > 1.7) {\n            letter_grade.push_back(\"\
    C\");\n        } else if (grade > 1.3) {\n            letter_grade.push_back(\"\
    C-\");\n        } else if (grade > 1.0) {\n            letter_grade.push_back(\"\
    D+\");\n        } else if (grade > 0.7) {\n            letter_grade.push_back(\"\
    D\");\n        } else if (grade > 0.0) {\n            letter_grade.push_back(\"\
    D-\");\n        } else {\n            letter_grade.push_back(\"E\");\n       \
    \ }\n    }\n    return letter_grade;", "    std::vector<std::string> letter_grade;\n\
    \    for (float grade : grades) {\n        if (grade >= 4.0) {\n            letter_grade.push_back(\"\
    A+\");\n        } else if (grade > 3.7) {\n            letter_grade.push_back(\"\
    A\");\n        } else if (grade > 3.3) {\n            letter_grade.push_back(\"\
    A-\");\n        } else if (grade > 3.0) {\n            letter_grade.push_back(\"\
    B+\");\n        } else if (grade > 2.7) {\n            letter_grade.push_back(\"\
    B\");\n        } else if (grade > 2.3) {\n            letter_grade.push_back(\"\
    B-\");\n        } else if (grade > 2.0) {\n            letter_grade.push_back(\"\
    C+\");\n        } else if (grade > 1.7) {\n            letter_grade.push_back(\"\
    C\");\n        } else if (grade > 1.3) {\n            letter_grade.push_back(\"\
    C-\");\n        } else if (grade > 1.0) {\n            letter_grade.push_back(\"\
    D+\");\n        } else if (grade > 0.7) {\n            letter_grade.push_back(\"\
    D\");\n        } else if (grade > 0.0) {\n            letter_grade.push_back(\"\
    D-\");\n        } else {\n            letter_grade.push_back(\"E\");\n       \
    \ }\n    }\n    return letter_grade;", "    std::vector<std::string> letter_grades;\n\
    \    for(auto grade : grades) {\n        if(grade >= 4.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(grade >= 3.7) {\n            letter_grades.push_back(\"\
    A\");\n        } else if(grade >= 3.3) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if(grade >= 3.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(grade >= 2.7) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(grade >= 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(grade >= 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(grade >= 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(grade >= 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(grade >= 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(grade >= 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else if(grade >= 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    assert(grades.size() == 12);\n    letter_grades.push_back(\"A+\");\n    letter_grades.push_back(\"\
    A\");\n    letter_grades.push_back(\"A-\");\n    letter_grades.push_back(\"B+\"\
    );\n    letter_grades.push_back(\"B\");\n    letter_grades.push_back(\"B-\");\n\
    \    letter_grades.push_back(\"C+\");\n    letter_grades.push_back(\"C\");\n \
    \   letter_grades.push_back(\"C-\");\n    letter_grades.push_back(\"D+\");\n \
    \   letter_grades.push_back(\"D\");\n    letter_grades.push_back(\"D-\");\n  \
    \  letter_grades.push_back(\"E\");\n    return letter_grades;", "    std::vector<std::string>\
    \ letter_grade;\n    for(int i = 0; i < grades.size(); i++) {\n        if(grades[i]\
    \ >= 4.0 && grades[i] <= 3.7) {\n            letter_grade.push_back(\"A+\");\n\
    \        } else if(grades[i] >= 3.7 && grades[i] <= 3.3) {\n            letter_grade.push_back(\"\
    A\");\n        } else if(grades[i] >= 3.3 && grades[i] <= 3.0) {\n           \
    \ letter_grade.push_back(\"A-\");\n        } else if(grades[i] >= 3.0 && grades[i]\
    \ <= 2.7) {\n            letter_grade.push_back(\"B+\");\n        } else if(grades[i]\
    \ >= 2.7 && grades[i] <= 2.3) {\n            letter_grade.push_back(\"B\");\n\
    \        } else if(grades[i] >= 2.3 && grades[i] <= 2.0) {\n            letter_grade.push_back(\"\
    B-\");\n        } else if(grades[i] >= 2.0 && grades[i] <= 1.7) {\n          \
    \  letter_grade.push_back(\"C+\");\n        } else if(grades[i] >= 1.7 && grades[i]\
    \ <= 1.3) {\n            letter_grade.push_back(\"C\");\n        } else if(grades[i]\
    \ >= 1.3 && grades[i] <= 1.0) {\n            letter_grade.push_back(\"C-\");\n\
    \        } else if(grades[i] >= 1.0 && grades[i] <= 0.7) {\n            letter_grade.push_back(\"\
    D+\");\n        } else if(grades[i] >= 0.7 && grades[i] <= 0.0) {\n          \
    \  letter_grade.push_back(\"D\");\n        } else {\n            letter_grade.push_back(\"\
    D-\");\n        }\n    }\n    return letter_grade;", "    std::vector<std::string>\
    \ letter_grade;\n    for(float g : grades) {\n        if(g > 3.0 && g < 3.7) {\n\
    \            letter_grade.push_back(\"A+\");\n        } else if(g > 3.7 && g <\
    \ 3.3) {\n            letter_grade.push_back(\"A\");\n        } else if(g > 3.3\
    \ && g < 3.0) {\n            letter_grade.push_back(\"A-\");\n        } else if(g\
    \ > 3.0 && g < 2.7) {\n            letter_grade.push_back(\"B+\");\n        }\
    \ else if(g > 2.7 && g < 2.3) {\n            letter_grade.push_back(\"B\");\n\
    \        } else if(g > 2.3 && g < 2.0) {\n            letter_grade.push_back(\"\
    B-\");\n        } else if(g > 2.0 && g < 1.7) {\n            letter_grade.push_back(\"\
    C+\");\n        } else if(g > 1.7 && g < 1.3) {\n            letter_grade.push_back(\"\
    C\");\n        } else if(g > 1.3 && g < 1.0) {\n            letter_grade.push_back(\"\
    C-\");\n        } else if(g > 1.0 && g < 0.7) {\n            letter_grade.push_back(\"\
    D+\");\n        } else if(g > 0.7 && g < 0.0) {\n            letter_grade.push_back(\"\
    D\");\n        } else {\n            letter_grade.push_back(\"D-\");\n       \
    \ }\n    }\n    return letter_grade;", "    std::vector<std::string> letter_grade;\n\
    \    for(float g : grades) {\n        if(g > 3.0) {\n            letter_grade.push_back(\"\
    A+\");\n        } else if(g > 2.7) {\n            letter_grade.push_back(\"A\"\
    );\n        } else if(g > 2.3) {\n            letter_grade.push_back(\"A-\");\n\
    \        } else if(g > 2.0) {\n            letter_grade.push_back(\"B+\");\n \
    \       } else if(g > 1.7) {\n            letter_grade.push_back(\"B\");\n   \
    \     } else if(g > 1.3) {\n            letter_grade.push_back(\"B-\");\n    \
    \    } else if(g > 1.0) {\n            letter_grade.push_back(\"C+\");\n     \
    \   } else if(g > 0.7) {\n            letter_grade.push_back(\"C\");\n       \
    \ } else if(g > 0.3) {\n            letter_grade.push_back(\"C-\");\n        }\
    \ else if(g > 0.0) {\n            letter_grade.push_back(\"D+\");\n        } else\
    \ if(g > -0.7) {\n            letter_grade.push_back(\"D\");\n        } else if(g\
    \ > -0.3) {\n            letter_grade.push_back(\"D-\");\n        } else if(g\
    \ > -0.0) {\n            letter_grade.push_back(\"E\");\n        } else {\n  \
    \          letter_grade.push_back(\"F\");\n        }\n    }\n    return letter_grade;",
  "    std::vector<std::string> letter_grade;\n    for(float g : grades) {\n     \
    \   if(g > 3.0 && g < 3.7) {\n            letter_grade.push_back(\"A+\");\n  \
    \      } else if(g > 3.7 && g < 3.3) {\n            letter_grade.push_back(\"\
    A\");\n        } else if(g > 3.3 && g < 3.0) {\n            letter_grade.push_back(\"\
    A-\");\n        } else if(g > 3.0 && g < 2.7) {\n            letter_grade.push_back(\"\
    B+\");\n        } else if(g > 2.7 && g < 2.3) {\n            letter_grade.push_back(\"\
    B\");\n        } else if(g > 2.3 && g < 2.0) {\n            letter_grade.push_back(\"\
    B-\");\n        } else if(g > 2.0 && g < 1.7) {\n            letter_grade.push_back(\"\
    C+\");\n        } else if(g > 1.7 && g < 1.3) {\n            letter_grade.push_back(\"\
    C\");\n        } else if(g > 1.3 && g < 1.0) {\n            letter_grade.push_back(\"\
    C-\");\n        } else if(g > 1.0 && g < 0.7) {\n            letter_grade.push_back(\"\
    D+\");\n        } else if(g > 0.7 && g < 0.0) {\n            letter_grade.push_back(\"\
    D\");\n        } else {\n            letter_grade.push_back(\"D-\");\n       \
    \ }\n    }\n    return letter_grade;", "    std::vector<std::string> letter_grades;\n\
    \    for(float grade : grades) {\n        if(grade >= 4.0 && grade <= 4.7) {\n\
    \            letter_grades.push_back(\"A+\");\n        } else if(grade > 3.7 &&\
    \ grade <= 4.0) {\n            letter_grades.push_back(\"A\");\n        } else\
    \ if(grade > 3.3 && grade <= 3.7) {\n            letter_grades.push_back(\"A-\"\
    );\n        } else if(grade > 3.0 && grade <= 3.3) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(grade > 2.7 && grade <= 3.0) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(grade > 2.3 && grade <= 2.7) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(grade > 2.0 && grade <= 2.3) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(grade > 1.7 && grade <= 2.0) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(grade > 1.3 && grade <= 1.7) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(grade > 1.0 && grade <= 1.3) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(grade > 0.7 && grade <= 1.0) {\n            letter_grades.push_back(\"\
    D\");\n        } else if(grade > 0.0 && grade <= 0.7) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for (float g : grades) {\n        if (g > 3.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if (g > 2.7) {\n            letter_grades.push_back(\"\
    A\");\n        } else if (g > 2.3) {\n            letter_grades.push_back(\"A-\"\
    );\n        } else if (g > 2.0) {\n            letter_grades.push_back(\"B+\"\
    );\n        } else if (g > 1.7) {\n            letter_grades.push_back(\"B\");\n\
    \        } else if (g > 1.3) {\n            letter_grades.push_back(\"B-\");\n\
    \        } else if (g > 1.0) {\n            letter_grades.push_back(\"C+\");\n\
    \        } else if (g > 0.7) {\n            letter_grades.push_back(\"C\");\n\
    \        } else if (g > 0.3) {\n            letter_grades.push_back(\"C-\");\n\
    \        } else if (g > 0.0) {\n            letter_grades.push_back(\"D+\");\n\
    \        } else if (g > 0.0) {\n            letter_grades.push_back(\"D\");\n\
    \        } else if (g > 0.0) {\n            letter_grades.push_back(\"D-\");\n\
    \        } else {\n            letter_grades.push_back(\"E\");\n        }\n  \
    \  }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for (float g : grades) {\n        if (g > 3.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if (g > 2.7) {\n            letter_grades.push_back(\"\
    A\");\n        } else if (g > 2.3) {\n            letter_grades.push_back(\"A-\"\
    );\n        } else if (g > 2.0) {\n            letter_grades.push_back(\"B+\"\
    );\n        } else if (g > 1.7) {\n            letter_grades.push_back(\"B\");\n\
    \        } else if (g > 1.3) {\n            letter_grades.push_back(\"B-\");\n\
    \        } else if (g > 1.0) {\n            letter_grades.push_back(\"C+\");\n\
    \        } else if (g > 0.7) {\n            letter_grades.push_back(\"C\");\n\
    \        } else if (g > 0.3) {\n            letter_grades.push_back(\"C-\");\n\
    \        } else if (g > 0.0) {\n            letter_grades.push_back(\"D+\");\n\
    \        } else if (g > -0.7) {\n            letter_grades.push_back(\"D\");\n\
    \        } else if (g > -0.3) {\n            letter_grades.push_back(\"D-\");\n\
    \        } else if (g > -1.0) {\n            letter_grades.push_back(\"E\");\n\
    \        } else {\n            letter_grades.push_back(\"F\");\n        }\n  \
    \  }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    assert(grades.size() == 12);\n    for(size_t i = 0; i < grades.size(); i++)\
    \ {\n        float gpa = grades[i];\n        float letterGrade;\n        if(gpa\
    \ > 3.0) {\n            letterGrade = 'A+';\n        } else if(gpa > 2.7) {\n\
    \            letterGrade = 'A';\n        } else if(gpa > 2.3) {\n            letterGrade\
    \ = 'A-';\n        } else if(gpa > 2.0) {\n            letterGrade = 'B+';\n \
    \       } else if(gpa > 1.7) {\n            letterGrade = 'B';\n        } else\
    \ if(gpa > 1.3) {\n            letterGrade = 'B-';\n        } else if(gpa > 1.0)\
    \ {\n            letterGrade = 'C+';\n        } else if(gpa > 0.7) {\n       \
    \     letterGrade = 'C';\n        } else if(gpa > 0.3) {\n            letterGrade\
    \ = 'C-';\n        } else if(gpa > 0.0) {\n            letterGrade = 'D+';\n \
    \       } else if(gpa > 0.0) {\n            letterGrade = 'D';\n        } else\
    \ if(gpa > 0.0) {\n            letterGrade = 'D-';\n        } else {\n       \
    \     letterGrade = 'E';\n        }\n        letter_grades.push_back(letterGrade);\n\
    \    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float g : grades) {\n        if(g > 3.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(g > 2.7) {\n            letter_grades.push_back(\"A\"\
    );\n        } else if(g > 2.3) {\n            letter_grades.push_back(\"A-\");\n\
    \        } else if(g > 2.0) {\n            letter_grades.push_back(\"B+\");\n\
    \        } else if(g > 1.7) {\n            letter_grades.push_back(\"B\");\n \
    \       } else if(g > 1.3) {\n            letter_grades.push_back(\"B-\");\n \
    \       } else if(g > 1.0) {\n            letter_grades.push_back(\"C+\");\n \
    \       } else if(g > 0.7) {\n            letter_grades.push_back(\"C\");\n  \
    \      } else if(g > 0.3) {\n            letter_grades.push_back(\"C-\");\n  \
    \      } else if(g > 0.0) {\n            letter_grades.push_back(\"D+\");\n  \
    \      } else if(g > 0.0) {\n            letter_grades.push_back(\"D\");\n   \
    \     } else if(g > 0.0) {\n            letter_grades.push_back(\"D-\");\n   \
    \     } else {\n            letter_grades.push_back(\"E\");\n        }\n    }\n\
    \    return letter_grades;", "    std::vector<std::string> letter_grade;\n   \
    \ for (float grade : grades) {\n        if (grade >= 4.0) {\n            letter_grade.push_back(\"\
    A+\");\n        } else if (grade > 3.7) {\n            letter_grade.push_back(\"\
    A\");\n        } else if (grade > 3.3) {\n            letter_grade.push_back(\"\
    A-\");\n        } else if (grade > 3.0) {\n            letter_grade.push_back(\"\
    B+\");\n        } else if (grade > 2.7) {\n            letter_grade.push_back(\"\
    B\");\n        } else if (grade > 2.3) {\n            letter_grade.push_back(\"\
    B-\");\n        } else if (grade > 2.0) {\n            letter_grade.push_back(\"\
    C+\");\n        } else if (grade > 1.7) {\n            letter_grade.push_back(\"\
    C\");\n        } else if (grade > 1.3) {\n            letter_grade.push_back(\"\
    C-\");\n        } else if (grade > 1.0) {\n            letter_grade.push_back(\"\
    D+\");\n        } else if (grade > 0.7) {\n            letter_grade.push_back(\"\
    D\");\n        } else if (grade > 0.0) {\n            letter_grade.push_back(\"\
    D-\");\n        } else {\n            letter_grade.push_back(\"E\");\n       \
    \ }\n    }\n    return letter_grade;", "    std::vector<std::string> letter_grade;\n\
    \    for(float g : grades) {\n        if(g > 3.0 && g < 3.7) {\n            letter_grade.push_back(\"\
    A+\");\n        } else if(g > 3.7 && g < 3.3) {\n            letter_grade.push_back(\"\
    A\");\n        } else if(g > 3.3 && g < 3.0) {\n            letter_grade.push_back(\"\
    A-\");\n        } else if(g > 3.0 && g < 2.7) {\n            letter_grade.push_back(\"\
    B+\");\n        } else if(g > 2.7 && g < 2.3) {\n            letter_grade.push_back(\"\
    B\");\n        } else if(g > 2.3 && g < 2.0) {\n            letter_grade.push_back(\"\
    B-\");\n        } else if(g > 2.0 && g < 1.7) {\n            letter_grade.push_back(\"\
    C+\");\n        } else if(g > 1.7 && g < 1.3) {\n            letter_grade.push_back(\"\
    C\");\n        } else if(g > 1.3 && g < 1.0) {\n            letter_grade.push_back(\"\
    C-\");\n        } else if(g > 1.0 && g < 0.7) {\n            letter_grade.push_back(\"\
    D+\");\n        } else if(g > 0.7 && g < 0.0) {\n            letter_grade.push_back(\"\
    D\");\n        } else {\n            letter_grade.push_back(\"D-\");\n       \
    \ }\n    }\n    return letter_grade;", "    // Write your code here\n    std::vector<std::string>\
    \ letter_grade;\n    for(int i=0;i<grades.size();i++){\n        if(grades[i]>3.0){\n\
    \            letter_grade.push_back(\"D+\");\n        }\n        else if(grades[i]>2.7){\n\
    \            letter_grade.push_back(\"D\");\n        }\n        else if(grades[i]>2.3){\n\
    \            letter_grade.push_back(\"D-\");\n        }\n        else if(grades[i]>2.0){\n\
    \            letter_grade.push_back(\"C+\");\n        }\n        else if(grades[i]>1.7){\n\
    \            letter_grade.push_back(\"C\");\n        }\n        else if(grades[i]>1.3){\n\
    \            letter_grade.push_back(\"C-\");\n        }\n        else if(grades[i]>1.0){\n\
    \            letter_grade.push_back(\"B+\");\n        }\n        else if(grades[i]>0.7){\n\
    \            letter_grade.push_back(\"B\");\n        }\n        else if(grades[i]>0.0){\n\
    \            letter_grade.push_back(\"B-\");\n        }\n        else if(grades[i]>0.0){\n\
    \            letter_grade.push_back(\"A+\");\n        }\n        else if(grades[i]>0.0){\n\
    \            letter_grade.push_back(\"A\");\n        }\n        else if(grades[i]>0.0){\n\
    \            letter_grade.push_back(\"A-\");\n        }\n        else if(grades[i]>0.0){\n\
    \            letter_grade.push_back(\"F\");\n        }\n        else if(grades[i]>0.0){\n\
    \            letter_grade.push_back(\"E\");\n        }\n        else{\n      \
    \      letter_grade.push_back(\"F\");\n        }\n    }\n    return letter_grade;",
  '    // Your code goes here', '    // Your code goes here', "    std::vector<std::string>\
    \ letter_grades;\n    for(float grade : grades) {\n        if(grade >= 4.0 &&\
    \ grade < 5.0) {\n            letter_grades.push_back(\"A+\");\n        } else\
    \ if(grade >= 3.7 && grade < 4.0) {\n            letter_grades.push_back(\"A\"\
    );\n        } else if(grade >= 3.3 && grade < 3.7) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if(grade >= 3.0 && grade < 3.3) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(grade >= 2.7 && grade < 3.0) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(grade >= 2.3 && grade < 2.7) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(grade >= 2.0 && grade < 2.3) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(grade >= 1.7 && grade < 2.0) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(grade >= 1.3 && grade < 1.7) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(grade >= 1.0 && grade < 1.3) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(grade >= 0.7 && grade < 1.0) {\n            letter_grades.push_back(\"\
    D\");\n        } else if(grade >= 0.0 && grade < 0.7) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(int i = 0; i < grades.size(); i++) {\n        if(grades[i] >= 3.0) {\n\
    \            letter_grades.push_back(\"A+\");\n        } else if(grades[i] >=\
    \ 3.3) {\n            letter_grades.push_back(\"A\");\n        } else if(grades[i]\
    \ >= 3.7) {\n            letter_grades.push_back(\"A-\");\n        } else if(grades[i]\
    \ >= 4.0) {\n            letter_grades.push_back(\"B+\");\n        } else if(grades[i]\
    \ >= 4.3) {\n            letter_grades.push_back(\"B\");\n        } else if(grades[i]\
    \ >= 4.7) {\n            letter_grades.push_back(\"B-\");\n        } else if(grades[i]\
    \ >= 5.0) {\n            letter_grades.push_back(\"C+\");\n        } else if(grades[i]\
    \ >= 5.3) {\n            letter_grades.push_back(\"C\");\n        } else if(grades[i]\
    \ >= 5.7) {\n            letter_grades.push_back(\"C-\");\n        } else if(grades[i]\
    \ >= 6.0) {\n            letter_grades.push_back(\"D+\");\n        } else if(grades[i]\
    \ >= 6.3) {\n            letter_grades.push_back(\"D\");\n        } else if(grades[i]\
    \ >= 6.7) {\n            letter_grades.push_back(\"D-\");\n        } else if(grades[i]\
    \ >= 7.0) {\n            letter_grades.push_back(\"E\");\n        } else {\n \
    \           letter_grades.push_back(\"F\");\n        }\n    }\n    return letter_grades;",
  "    std::vector<std::string> letter_grades;\n    for(float g : grades) {\n    \
    \    letter_grades.push_back(std::to_string((int)g));\n    }\n    return letter_grades;",
  "    std::vector<std::string> letter_grades;\n    for(float grade : grades) {\n\
    \        if(grade > 3.0) {\n            letter_grades.push_back(\"A+\");\n   \
    \     } else if(grade > 2.7) {\n            letter_grades.push_back(\"A\");\n\
    \        } else if(grade > 2.3) {\n            letter_grades.push_back(\"A-\"\
    );\n        } else if(grade > 2.0) {\n            letter_grades.push_back(\"B+\"\
    );\n        } else if(grade > 1.7) {\n            letter_grades.push_back(\"B\"\
    );\n        } else if(grade > 1.3) {\n            letter_grades.push_back(\"B-\"\
    );\n        } else if(grade > 1.0) {\n            letter_grades.push_back(\"C+\"\
    );\n        } else if(grade > 0.7) {\n            letter_grades.push_back(\"C\"\
    );\n        } else if(grade > 0.2) {\n            letter_grades.push_back(\"C-\"\
    );\n        } else if(grade > 0.0) {\n            letter_grades.push_back(\"D+\"\
    );\n        } else if(grade > -0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else if(grade > -0.2) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grade;\n\
    \    for(int i = 0; i < grades.size(); i++) {\n        if(grades[i] >= 4.0) {\n\
    \            letter_grade.push_back(\"A+\");\n        } else if(grades[i] >= 3.7)\
    \ {\n            letter_grade.push_back(\"A\");\n        } else if(grades[i] >=\
    \ 3.3) {\n            letter_grade.push_back(\"A-\");\n        } else if(grades[i]\
    \ >= 3.0) {\n            letter_grade.push_back(\"B+\");\n        } else if(grades[i]\
    \ >= 2.7) {\n            letter_grade.push_back(\"B\");\n        } else if(grades[i]\
    \ >= 2.3) {\n            letter_grade.push_back(\"B-\");\n        } else if(grades[i]\
    \ >= 2.0) {\n            letter_grade.push_back(\"C+\");\n        } else if(grades[i]\
    \ >= 1.7) {\n            letter_grade.push_back(\"C\");\n        } else if(grades[i]\
    \ >= 1.3) {\n            letter_grade.push_back(\"C-\");\n        } else if(grades[i]\
    \ >= 1.0) {\n            letter_grade.push_back(\"D+\");\n        } else if(grades[i]\
    \ >= 0.7) {\n            letter_grade.push_back(\"D\");\n        } else if(grades[i]\
    \ >= 0.0) {\n            letter_grade.push_back(\"D-\");\n        } else {\n \
    \           letter_grade.push_back(\"E\");\n        }\n    }\n    return letter_grade;",
  "    std::vector<std::string> letter_grades;\n    assert(grades.size() == 12);\n\
    \    letter_grades.push_back(\"A+\");\n    letter_grades.push_back(\"A\");\n \
    \   letter_grades.push_back(\"A-\");\n    letter_grades.push_back(\"B+\");\n \
    \   letter_grades.push_back(\"B\");\n    letter_grades.push_back(\"B-\");\n  \
    \  letter_grades.push_back(\"C+\");\n    letter_grades.push_back(\"C\");\n   \
    \ letter_grades.push_back(\"C-\");\n    letter_grades.push_back(\"D+\");\n   \
    \ letter_grades.push_back(\"D\");\n    letter_grades.push_back(\"D-\");\n    letter_grades.push_back(\"\
    E\");\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(int i = 0; i < grades.size(); i++) {\n        if(grades[i] >= 3.0) {\n\
    \            letter_grades.push_back(\"A+\");\n        }\n        else if(grades[i]\
    \ >= 3.3) {\n            letter_grades.push_back(\"A\");\n        }\n        else\
    \ if(grades[i] >= 3.7) {\n            letter_grades.push_back(\"A-\");\n     \
    \   }\n        else if(grades[i] >= 4.0) {\n            letter_grades.push_back(\"\
    B+\");\n        }\n        else if(grades[i] >= 4.3) {\n            letter_grades.push_back(\"\
    B\");\n        }\n        else if(grades[i] >= 4.7) {\n            letter_grades.push_back(\"\
    B-\");\n        }\n        else if(grades[i] >= 5.0) {\n            letter_grades.push_back(\"\
    C+\");\n        }\n        else if(grades[i] >= 5.3) {\n            letter_grades.push_back(\"\
    C\");\n        }\n        else if(grades[i] >= 5.7) {\n            letter_grades.push_back(\"\
    C-\");\n        }\n        else if(grades[i] >= 6.0) {\n            letter_grades.push_back(\"\
    D+\");\n        }\n        else if(grades[i] >= 6.3) {\n            letter_grades.push_back(\"\
    D\");\n        }\n        else if(grades[i] >= 6.7) {\n            letter_grades.push_back(\"\
    D-\");\n        }\n        else if(grades[i] >= 7.0) {\n            letter_grades.push_back(\"\
    E\");\n        }\n        else {\n            letter_grades.push_back(\"F\");\n\
    \        }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float grade : grades) {\n        if(grade >= 4.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(grade > 3.7) {\n            letter_grades.push_back(\"\
    A\");\n        } else if(grade > 3.3) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if(grade > 3.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(grade > 2.7) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(grade > 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(grade > 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(grade > 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(grade > 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(grade > 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(grade > 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else if(grade > 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grade;\n\
    \    for (float grade : grades) {\n        if (grade >= 4.0) {\n            letter_grade.push_back(\"\
    A+\");\n        } else if (grade > 3.7) {\n            letter_grade.push_back(\"\
    A\");\n        } else if (grade > 3.3) {\n            letter_grade.push_back(\"\
    A-\");\n        } else if (grade > 3.0) {\n            letter_grade.push_back(\"\
    B+\");\n        } else if (grade > 2.7) {\n            letter_grade.push_back(\"\
    B\");\n        } else if (grade > 2.3) {\n            letter_grade.push_back(\"\
    B-\");\n        } else if (grade > 2.0) {\n            letter_grade.push_back(\"\
    C+\");\n        } else if (grade > 1.7) {\n            letter_grade.push_back(\"\
    C\");\n        } else if (grade > 1.3) {\n            letter_grade.push_back(\"\
    C-\");\n        } else if (grade > 1.0) {\n            letter_grade.push_back(\"\
    D+\");\n        } else if (grade > 0.7) {\n            letter_grade.push_back(\"\
    D\");\n        } else if (grade > 0.0) {\n            letter_grade.push_back(\"\
    D-\");\n        } else {\n            letter_grade.push_back(\"E\");\n       \
    \ }\n    }\n    return letter_grade;", '    // Your code goes here', "    std::vector<std::string>\
    \ letter_grade;\n    assert(grades.size() == 12);\n    for(auto &grade : grades)\
    \ {\n        if(grade > 3.0) {\n            letter_grade.push_back(\"A+\");\n\
    \        } else if(grade > 2.7) {\n            letter_grade.push_back(\"A\");\n\
    \        } else if(grade > 2.3) {\n            letter_grade.push_back(\"A-\");\n\
    \        } else if(grade > 2.0) {\n            letter_grade.push_back(\"B+\");\n\
    \        } else if(grade > 1.7) {\n            letter_grade.push_back(\"B\");\n\
    \        } else if(grade > 1.3) {\n            letter_grade.push_back(\"B-\");\n\
    \        } else if(grade > 1.0) {\n            letter_grade.push_back(\"C+\");\n\
    \        } else if(grade > 0.7) {\n            letter_grade.push_back(\"C\");\n\
    \        } else if(grade > 0.2) {\n            letter_grade.push_back(\"C-\");\n\
    \        } else if(grade > 0.0) {\n            letter_grade.push_back(\"D+\");\n\
    \        } else if(grade > -0.2) {\n            letter_grade.push_back(\"D\");\n\
    \        } else if(grade > -0.7) {\n            letter_grade.push_back(\"D-\"\
    );\n        } else if(grade > -1.0) {\n            letter_grade.push_back(\"E\"\
    );\n        } else {\n            letter_grade.push_back(\"F\");\n        }\n\
    \    }\n    return letter_grade;", "    std::vector<std::string> letter_grade;\n\
    \    for(int i = 0; i < grades.size(); i++) {\n        if(grades[i] >= 4.0 &&\
    \ grades[i] <= 3.7) {\n            letter_grade.push_back(\"A+\");\n        }\
    \ else if(grades[i] >= 3.7 && grades[i] <= 3.3) {\n            letter_grade.push_back(\"\
    A\");\n        } else if(grades[i] >= 3.3 && grades[i] <= 3.0) {\n           \
    \ letter_grade.push_back(\"A-\");\n        } else if(grades[i] >= 3.0 && grades[i]\
    \ <= 2.7) {\n            letter_grade.push_back(\"B+\");\n        } else if(grades[i]\
    \ >= 2.7 && grades[i] <= 2.3) {\n            letter_grade.push_back(\"B\");\n\
    \        } else if(grades[i] >= 2.3 && grades[i] <= 2.0) {\n            letter_grade.push_back(\"\
    B-\");\n        } else if(grades[i] >= 2.0 && grades[i] <= 1.7) {\n          \
    \  letter_grade.push_back(\"C+\");\n        } else if(grades[i] >= 1.7 && grades[i]\
    \ <= 1.3) {\n            letter_grade.push_back(\"C\");\n        } else if(grades[i]\
    \ >= 1.3 && grades[i] <= 1.0) {\n            letter_grade.push_back(\"C-\");\n\
    \        } else if(grades[i] >= 1.0 && grades[i] <= 0.7) {\n            letter_grade.push_back(\"\
    D+\");\n        } else if(grades[i] >= 0.7 && grades[i] <= 0.0) {\n          \
    \  letter_grade.push_back(\"D\");\n        } else {\n            letter_grade.push_back(\"\
    D-\");\n        }\n    }\n    return letter_grade;", "    // Write your code here\n\
    \    std::vector<std::string> letter_grades;\n    for(float g : grades) {\n  \
    \      if(g > 3.0)\n            letter_grades.push_back(\"A+\");\n        else\
    \ if(g > 2.7)\n            letter_grades.push_back(\"A\");\n        else if(g\
    \ > 2.3)\n            letter_grades.push_back(\"A-\");\n        else if(g > 2.0)\n\
    \            letter_grades.push_back(\"B+\");\n        else if(g > 1.7)\n    \
    \        letter_grades.push_back(\"B\");\n        else if(g > 1.3)\n         \
    \   letter_grades.push_back(\"B-\");\n        else if(g > 1.0)\n            letter_grades.push_back(\"\
    C+\");\n        else if(g > 0.7)\n            letter_grades.push_back(\"C\");\n\
    \        else if(g > 0.3)\n            letter_grades.push_back(\"C-\");\n    \
    \    else if(g > 0.0)\n            letter_grades.push_back(\"D+\");\n        else\
    \ if(g > -0.3)\n            letter_grades.push_back(\"D\");\n        else if(g\
    \ > -0.7)\n            letter_grades.push_back(\"D-\");\n        else\n      \
    \      letter_grades.push_back(\"E\");\n    }\n    return letter_grades;", " \
    \   std::vector<std::string> letter_grades;\n    for(float g : grades) {\n   \
    \     if(g > 3.0) {\n            letter_grades.push_back(\"A+\");\n        } else\
    \ if(g > 2.7) {\n            letter_grades.push_back(\"A\");\n        } else if(g\
    \ > 2.3) {\n            letter_grades.push_back(\"A-\");\n        } else if(g\
    \ > 2.0) {\n            letter_grades.push_back(\"B+\");\n        } else if(g\
    \ > 1.7) {\n            letter_grades.push_back(\"B\");\n        } else if(g >\
    \ 1.3) {\n            letter_grades.push_back(\"B-\");\n        } else if(g >\
    \ 1.0) {\n            letter_grades.push_back(\"C+\");\n        } else if(g >\
    \ 0.7) {\n            letter_grades.push_back(\"C\");\n        } else if(g > 0.3)\
    \ {\n            letter_grades.push_back(\"C-\");\n        } else if(g > 0.0)\
    \ {\n            letter_grades.push_back(\"D+\");\n        } else if(g > -0.7)\
    \ {\n            letter_grades.push_back(\"D\");\n        } else if(g > -0.3)\
    \ {\n            letter_grades.push_back(\"D-\");\n        } else {\n        \
    \    letter_grades.push_back(\"E\");\n        }\n    }\n    return letter_grades;",
  "    std::vector<std::string> letter_grade;\n    for(int i = 0; i < grades.size();\
    \ i++) {\n        if(grades[i] >= 4.0 && grades[i] <= 3.7) {\n            letter_grade.push_back(\"\
    A+\");\n        } else if(grades[i] >= 3.7 && grades[i] <= 3.3) {\n          \
    \  letter_grade.push_back(\"A\");\n        } else if(grades[i] >= 3.3 && grades[i]\
    \ <= 3.0) {\n            letter_grade.push_back(\"A-\");\n        } else if(grades[i]\
    \ >= 3.0 && grades[i] <= 2.7) {\n            letter_grade.push_back(\"B+\");\n\
    \        } else if(grades[i] >= 2.7 && grades[i] <= 2.3) {\n            letter_grade.push_back(\"\
    B\");\n        } else if(grades[i] >= 2.3 && grades[i] <= 2.0) {\n           \
    \ letter_grade.push_back(\"B-\");\n        } else if(grades[i] >= 2.0 && grades[i]\
    \ <= 1.7) {\n            letter_grade.push_back(\"C+\");\n        } else if(grades[i]\
    \ >= 1.7 && grades[i] <= 1.3) {\n            letter_grade.push_back(\"C\");\n\
    \        } else if(grades[i] >= 1.3 && grades[i] <= 1.0) {\n            letter_grade.push_back(\"\
    C-\");\n        } else if(grades[i] >= 1.0 && grades[i] <= 0.7) {\n          \
    \  letter_grade.push_back(\"D+\");\n        } else if(grades[i] >= 0.7 && grades[i]\
    \ <= 0.0) {\n            letter_grade.push_back(\"D\");\n        } else {\n  \
    \          letter_grade.push_back(\"D-\");\n        }\n    }\n    return letter_grade;",
  "    std::vector<std::string> letter_grade;\n    float sum = 0;\n    for (float\
    \ g : grades) {\n        sum += g;\n    }\n    float average = sum / grades.size();\n\
    \    for (float g : grades) {\n        if (g > average) {\n            letter_grade.push_back(\"\
    A+\");\n        } else if (g > average - 0.1) {\n            letter_grade.push_back(\"\
    A\");\n        } else if (g > average - 0.01) {\n            letter_grade.push_back(\"\
    A-\");\n        } else if (g > average - 0.001) {\n            letter_grade.push_back(\"\
    B+\");\n        } else if (g > average - 0.0001) {\n            letter_grade.push_back(\"\
    B\");\n        } else if (g > average - 0.00001) {\n            letter_grade.push_back(\"\
    B-\");\n        } else if (g > average - 0.000001) {\n            letter_grade.push_back(\"\
    C+\");\n        } else if (g > average - 0.0000001) {\n            letter_grade.push_back(\"\
    C\");\n        } else if (g > average - 0.00000001) {\n            letter_grade.push_back(\"\
    C-\");\n        } else if (g > average - 0.000000001) {\n            letter_grade.push_back(\"\
    D+\");\n        } else if (g > average - 0.0000000001) {\n            letter_grade.push_back(\"\
    D\");\n        } else if (g > average - 0.00000000001) {\n            letter_grade.push_back(\"\
    D-\");\n        } else if (g > average - 0.000000000001) {\n            letter_grade.push_back(\"\
    E\");\n        } else {\n            letter_grade.push_back(\"F\");\n        }\n\
    \    }\n    return letter_grade;", "    std::vector<std::string> letter_grades;\n\
    \    for(int i = 0; i < grades.size(); i++) {\n        if(grades[i] >= 4.0 &&\
    \ grades[i] <= 3.7) {\n            letter_grades.push_back(\"A+\");\n        }\
    \ else if(grades[i] >= 3.3 && grades[i] <= 3.0) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if(grades[i] >= 2.7 && grades[i] <= 2.3) {\n          \
    \  letter_grades.push_back(\"B+\");\n        } else if(grades[i] >= 2.0 && grades[i]\
    \ <= 1.7) {\n            letter_grades.push_back(\"B\");\n        } else if(grades[i]\
    \ >= 1.3 && grades[i] <= 1.0) {\n            letter_grades.push_back(\"B-\");\n\
    \        } else if(grades[i] >= 0.7 && grades[i] <= 0.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(grades[i] >= 0.0 && grades[i] <= 0.0) {\n          \
    \  letter_grades.push_back(\"C\");\n        } else if(grades[i] >= 0.0) {\n  \
    \          letter_grades.push_back(\"D+\");\n        } else if(grades[i] >= 0.0)\
    \ {\n            letter_grades.push_back(\"D\");\n        } else {\n         \
    \   letter_grades.push_back(\"E\");\n        }\n    }\n    return letter_grades;",
  "    std::vector<std::string> letter_grade;\n    for(float g : grades) {\n     \
    \   if(g > 3.0 && g < 3.7) {\n            letter_grade.push_back(\"A+\");\n  \
    \      } else if(g > 3.7 && g < 3.3) {\n            letter_grade.push_back(\"\
    A\");\n        } else if(g > 3.3 && g < 3.0) {\n            letter_grade.push_back(\"\
    A-\");\n        } else if(g > 3.0 && g < 2.7) {\n            letter_grade.push_back(\"\
    B+\");\n        } else if(g > 2.7 && g < 2.3) {\n            letter_grade.push_back(\"\
    B\");\n        } else if(g > 2.3 && g < 2.0) {\n            letter_grade.push_back(\"\
    B-\");\n        } else if(g > 2.0 && g < 1.7) {\n            letter_grade.push_back(\"\
    C+\");\n        } else if(g > 1.7 && g < 1.3) {\n            letter_grade.push_back(\"\
    C\");\n        } else if(g > 1.3 && g < 1.0) {\n            letter_grade.push_back(\"\
    C-\");\n        } else if(g > 1.0 && g < 0.7) {\n            letter_grade.push_back(\"\
    D+\");\n        } else if(g > 0.7 && g < 0.0) {\n            letter_grade.push_back(\"\
    D\");\n        } else {\n            letter_grade.push_back(\"D-\");\n       \
    \ }\n    }\n    return letter_grade;", "    std::vector<std::string> letter_grades;\n\
    \    for(int i = 0; i < grades.size(); i++) {\n        if(grades[i] >= 4.0 &&\
    \ grades[i] <= 3.7) {\n            letter_grades.push_back(\"A+\");\n        }\
    \ else if(grades[i] >= 3.7 && grades[i] <= 3.3) {\n            letter_grades.push_back(\"\
    A\");\n        } else if(grades[i] >= 3.3 && grades[i] <= 3.0) {\n           \
    \ letter_grades.push_back(\"A-\");\n        } else if(grades[i] >= 3.0 && grades[i]\
    \ <= 2.7) {\n            letter_grades.push_back(\"B+\");\n        } else if(grades[i]\
    \ >= 2.7 && grades[i] <= 2.3) {\n            letter_grades.push_back(\"B\");\n\
    \        } else if(grades[i] >= 2.3 && grades[i] <= 2.0) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(grades[i] >= 2.0 && grades[i] <= 1.7) {\n          \
    \  letter_grades.push_back(\"C+\");\n        } else if(grades[i] >= 1.7 && grades[i]\
    \ <= 1.3) {\n            letter_grades.push_back(\"C\");\n        } else if(grades[i]\
    \ >= 1.3 && grades[i] <= 1.0) {\n            letter_grades.push_back(\"C-\");\n\
    \        } else if(grades[i] >= 1.0 && grades[i] <= 0.7) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(grades[i] >= 0.7 && grades[i] <= 0.0) {\n          \
    \  letter_grades.push_back(\"D\");\n        } else {\n            letter_grades.push_back(\"\
    D-\");\n        }\n    }\n    return letter_grades;", "    std::vector<std::string>\
    \ letter_grades;\n    assert(grades.size() == 12);\n    letter_grades.push_back(\"\
    A+\");\n    letter_grades.push_back(\"A\");\n    letter_grades.push_back(\"A-\"\
    );\n    letter_grades.push_back(\"B+\");\n    letter_grades.push_back(\"B\");\n\
    \    letter_grades.push_back(\"B-\");\n    letter_grades.push_back(\"C+\");\n\
    \    letter_grades.push_back(\"C\");\n    letter_grades.push_back(\"C-\");\n \
    \   letter_grades.push_back(\"D+\");\n    letter_grades.push_back(\"D\");\n  \
    \  letter_grades.push_back(\"D-\");\n    letter_grades.push_back(\"E\");\n   \
    \ for(float grade : grades) {\n        if(grade > 3.7) {\n            letter_grades.push_back(\"\
    A+\");\n        }\n        else if(grade > 3.3) {\n            letter_grades.push_back(\"\
    A\");\n        }\n        else if(grade > 3) {\n            letter_grades.push_back(\"\
    A-\");\n        }\n        else if(grade > 2.7) {\n            letter_grades.push_back(\"\
    B+\");\n        }\n        else if(grade > 2.3) {\n            letter_grades.push_back(\"\
    B\");\n        }\n        else if(grade > 2) {\n            letter_grades.push_back(\"\
    B-\");\n        }\n        else if(grade > 1.7) {\n            letter_grades.push_back(\"\
    C+\");\n        }\n        else if(grade > 1.3) {\n            letter_grades.push_back(\"\
    C\");\n        }\n        else if(grade > 1) {\n            letter_grades.push_back(\"\
    C-\");\n        }\n        else if(grade > 0.7) {\n            letter_grades.push_back(\"\
    D+\");\n        }\n        else if(grade > 0.3) {\n            letter_grades.push_back(\"\
    D\");\n        }\n        else if(grade > 0) {\n            letter_grades.push_back(\"\
    D-\");\n        }\n        else {\n            letter_grades.push_back(\"E\");\n\
    \        }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grade;\n\
    \    assert(grades.size() == 12);\n    letter_grade.push_back(\"A+\");\n    letter_grade.push_back(\"\
    A\");\n    letter_grade.push_back(\"A-\");\n    letter_grade.push_back(\"B+\"\
    );\n    letter_grade.push_back(\"B\");\n    letter_grade.push_back(\"B-\");\n\
    \    letter_grade.push_back(\"C+\");\n    letter_grade.push_back(\"C\");\n   \
    \ letter_grade.push_back(\"C-\");\n    letter_grade.push_back(\"D+\");\n    letter_grade.push_back(\"\
    D\");\n    letter_grade.push_back(\"D-\");\n    letter_grade.push_back(\"E\");\n\
    \    return letter_grade;", "    std::vector<std::string> letter_grades;\n   \
    \ for(float g : grades) {\n        if(g >= 4.0 && g < 5.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(g > 3.7 && g < 4.0) {\n            letter_grades.push_back(\"\
    A\");\n        } else if(g > 3.3 && g < 3.7) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if(g > 3.0 && g < 3.3) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(g > 2.7 && g < 3.0) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(g > 2.3 && g < 2.7) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(g > 2.0 && g < 2.3) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(g > 1.7 && g < 2.0) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(g > 1.3 && g < 1.7) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(g > 1.0 && g < 1.3) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(g > 0.7 && g < 1.0) {\n            letter_grades.push_back(\"\
    D\");\n        } else if(g > 0.0 && g < 0.7) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for (float grade : grades) {\n        if (grade >= 4.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if (grade >= 3.7) {\n            letter_grades.push_back(\"\
    A\");\n        } else if (grade >= 3.3) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if (grade >= 3.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if (grade >= 2.7) {\n            letter_grades.push_back(\"\
    B\");\n        } else if (grade >= 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (grade >= 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if (grade >= 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if (grade >= 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if (grade >= 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if (grade >= 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else if (grade >= 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(int i = 0; i < grades.size(); i++) {\n        if(grades[i] >= 4.0 &&\
    \ grades[i] <= 3.7) {\n            letter_grades.push_back(\"A+\");\n        }\
    \ else if(grades[i] >= 3.7 && grades[i] <= 3.3) {\n            letter_grades.push_back(\"\
    A\");\n        } else if(grades[i] >= 3.3 && grades[i] <= 3.0) {\n           \
    \ letter_grades.push_back(\"A-\");\n        } else if(grades[i] >= 3.0 && grades[i]\
    \ <= 2.7) {\n            letter_grades.push_back(\"B+\");\n        } else if(grades[i]\
    \ >= 2.7 && grades[i] <= 2.3) {\n            letter_grades.push_back(\"B\");\n\
    \        } else if(grades[i] >= 2.3 && grades[i] <= 2.0) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(grades[i] >= 2.0 && grades[i] <= 1.7) {\n          \
    \  letter_grades.push_back(\"C+\");\n        } else if(grades[i] >= 1.7 && grades[i]\
    \ <= 1.3) {\n            letter_grades.push_back(\"C\");\n        } else if(grades[i]\
    \ >= 1.3 && grades[i] <= 1.0) {\n            letter_grades.push_back(\"C-\");\n\
    \        } else if(grades[i] >= 1.0 && grades[i] <= 0.7) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(grades[i] >= 0.7 && grades[i] <= 0.0) {\n          \
    \  letter_grades.push_back(\"D\");\n        } else {\n            letter_grades.push_back(\"\
    D-\");\n        }\n    }\n    return letter_grades;", "    std::vector<std::string>\
    \ letter_grades;\n    for(float grade : grades) {\n        letter_grades.push_back(std::to_string(grade));\n\
    \    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for (float g : grades) {\n        if (g > 3.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if (g > 2.7) {\n            letter_grades.push_back(\"\
    A\");\n        } else if (g > 2.3) {\n            letter_grades.push_back(\"A-\"\
    );\n        } else if (g > 2.0) {\n            letter_grades.push_back(\"B+\"\
    );\n        } else if (g > 1.7) {\n            letter_grades.push_back(\"B\");\n\
    \        } else if (g > 1.3) {\n            letter_grades.push_back(\"B-\");\n\
    \        } else if (g > 1.0) {\n            letter_grades.push_back(\"C+\");\n\
    \        } else if (g > 0.7) {\n            letter_grades.push_back(\"C\");\n\
    \        } else if (g > 0.3) {\n            letter_grades.push_back(\"C-\");\n\
    \        } else if (g > 0.0) {\n            letter_grades.push_back(\"D+\");\n\
    \        } else if (g > 0.0) {\n            letter_grades.push_back(\"D\");\n\
    \        } else if (g > 0.0) {\n            letter_grades.push_back(\"D-\");\n\
    \        } else if (g > 0.0) {\n            letter_grades.push_back(\"E\");\n\
    \        }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(auto &grade : grades) {\n        letter_grades.push_back(std::to_string(grade));\n\
    \    }\n    return letter_grades;", "    std::vector<std::string> letter_grade;\n\
    \    assert(grades.size() == 12);\n    float sum = 0;\n    for (float grade :\
    \ grades) {\n        sum += grade;\n    }\n    float average = sum / grades.size();\n\
    \    for (float grade : grades) {\n        if (grade >= average) {\n         \
    \   letter_grade.push_back(\"A+\");\n        } else if (grade >= average - 0.2)\
    \ {\n            letter_grade.push_back(\"A\");\n        } else if (grade >= average\
    \ - 0.1) {\n            letter_grade.push_back(\"A-\");\n        } else if (grade\
    \ >= average - 0.05) {\n            letter_grade.push_back(\"B+\");\n        }\
    \ else if (grade >= average - 0.02) {\n            letter_grade.push_back(\"B\"\
    );\n        } else if (grade >= average - 0.005) {\n            letter_grade.push_back(\"\
    B-\");\n        } else if (grade >= average - 0.001) {\n            letter_grade.push_back(\"\
    C+\");\n        } else if (grade >= average - 0.0001) {\n            letter_grade.push_back(\"\
    C\");\n        } else if (grade >= average - 0.00001) {\n            letter_grade.push_back(\"\
    C-\");\n        } else if (grade >= average - 0.000001) {\n            letter_grade.push_back(\"\
    D+\");\n        } else if (grade >= average - 0.0000001) {\n            letter_grade.push_back(\"\
    D\");\n        } else if (grade >= average - 0.00000001) {\n            letter_grade.push_back(\"\
    D-\");\n        } else {\n            letter_grade.push_back(\"E\");\n       \
    \ }\n    }\n    return letter_grade;", "    std::vector<std::string> letter_grades;\n\
    \    for(float grade : grades) {\n        if(grade > 3.0 && grade < 3.7) {\n \
    \           letter_grades.push_back(\"A+\");\n        } else if(grade > 3.7 &&\
    \ grade < 3.3) {\n            letter_grades.push_back(\"A\");\n        } else\
    \ if(grade > 3.3 && grade < 3.0) {\n            letter_grades.push_back(\"A-\"\
    );\n        } else if(grade > 3.0 && grade < 2.7) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(grade > 2.7 && grade < 2.3) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(grade > 2.3 && grade < 2.0) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(grade > 2.0 && grade < 1.7) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(grade > 1.7 && grade < 1.3) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(grade > 1.3 && grade < 1.0) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(grade > 1.0 && grade < 0.7) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(grade > 0.7 && grade < 0.0) {\n            letter_grades.push_back(\"\
    D\");\n        } else {\n            letter_grades.push_back(\"D-\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float g : grades) {\n        if(g > 3.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(g > 2.7) {\n            letter_grades.push_back(\"A\"\
    );\n        } else if(g > 2.3) {\n            letter_grades.push_back(\"A-\");\n\
    \        } else if(g > 2.0) {\n            letter_grades.push_back(\"B+\");\n\
    \        } else if(g > 1.7) {\n            letter_grades.push_back(\"B\");\n \
    \       } else if(g > 1.3) {\n            letter_grades.push_back(\"B-\");\n \
    \       } else if(g > 1.0) {\n            letter_grades.push_back(\"C+\");\n \
    \       } else if(g > 0.7) {\n            letter_grades.push_back(\"C\");\n  \
    \      } else if(g > 0.3) {\n            letter_grades.push_back(\"C-\");\n  \
    \      } else if(g > 0.0) {\n            letter_grades.push_back(\"D+\");\n  \
    \      } else if(g > 0.0) {\n            letter_grades.push_back(\"D\");\n   \
    \     } else {\n            letter_grades.push_back(\"D-\");\n        }\n    }\n\
    \    return letter_grades;", "    std::vector<std::string> letter_grade;\n   \
    \ for(float g : grades) {\n        if(g > 3.0) {\n            letter_grade.push_back(\"\
    A+\");\n        }\n        else if(g > 2.7) {\n            letter_grade.push_back(\"\
    A\");\n        }\n        else if(g > 2.3) {\n            letter_grade.push_back(\"\
    A-\");\n        }\n        else if(g > 2.0) {\n            letter_grade.push_back(\"\
    B+\");\n        }\n        else if(g > 1.7) {\n            letter_grade.push_back(\"\
    B\");\n        }\n        else if(g > 1.3) {\n            letter_grade.push_back(\"\
    B-\");\n        }\n        else if(g > 1.0) {\n            letter_grade.push_back(\"\
    C+\");\n        }\n        else if(g > 0.7) {\n            letter_grade.push_back(\"\
    C\");\n        }\n        else if(g > 0.3) {\n            letter_grade.push_back(\"\
    C-\");\n        }\n        else if(g > 0.0) {\n            letter_grade.push_back(\"\
    D+\");\n        }\n        else if(g > 0.0) {\n            letter_grade.push_back(\"\
    D\");\n        }\n        else {\n            letter_grade.push_back(\"D-\");\n\
    \        }\n    }\n    return letter_grade;", "    std::vector<std::string> letter_grades;\n\
    \    \n    // Write your code here\n    \n    return letter_grades;", "    std::vector<std::string>\
    \ letter_grades;\n    for(int i = 0; i < grades.size(); i++) {\n        if(grades[i]\
    \ >= 4.0 && grades[i] <= 3.7) {\n            letter_grades.push_back(\"A+\");\n\
    \        } else if(grades[i] >= 3.7 && grades[i] <= 3.3) {\n            letter_grades.push_back(\"\
    A\");\n        } else if(grades[i] >= 3.3 && grades[i] <= 3.0) {\n           \
    \ letter_grades.push_back(\"A-\");\n        } else if(grades[i] >= 3.0 && grades[i]\
    \ <= 2.7) {\n            letter_grades.push_back(\"B+\");\n        } else if(grades[i]\
    \ >= 2.7 && grades[i] <= 2.3) {\n            letter_grades.push_back(\"B\");\n\
    \        } else if(grades[i] >= 2.3 && grades[i] <= 2.0) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(grades[i] >= 2.0 && grades[i] <= 1.7) {\n          \
    \  letter_grades.push_back(\"C+\");\n        } else if(grades[i] >= 1.7 && grades[i]\
    \ <= 1.3) {\n            letter_grades.push_back(\"C\");\n        } else if(grades[i]\
    \ >= 1.3 && grades[i] <= 1.0) {\n            letter_grades.push_back(\"C-\");\n\
    \        } else if(grades[i] >= 1.0 && grades[i] <= 0.7) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(grades[i] >= 0.7 && grades[i] <= 0.0) {\n          \
    \  letter_grades.push_back(\"D\");\n        } else {\n            letter_grades.push_back(\"\
    D-\");\n        }\n    }\n    return letter_grades;", "    std::vector<std::string>\
    \ letter_grades;\n    for(float grade : grades) {\n        if(grade >= 4.0) {\n\
    \            letter_grades.push_back(\"A+\");\n        } else if(grade >= 3.7)\
    \ {\n            letter_grades.push_back(\"A\");\n        } else if(grade >= 3.3)\
    \ {\n            letter_grades.push_back(\"A-\");\n        } else if(grade >=\
    \ 3.0) {\n            letter_grades.push_back(\"B+\");\n        } else if(grade\
    \ >= 2.7) {\n            letter_grades.push_back(\"B\");\n        } else if(grade\
    \ >= 2.3) {\n            letter_grades.push_back(\"B-\");\n        } else if(grade\
    \ >= 2.0) {\n            letter_grades.push_back(\"C+\");\n        } else if(grade\
    \ >= 1.7) {\n            letter_grades.push_back(\"C\");\n        } else if(grade\
    \ >= 1.3) {\n            letter_grades.push_back(\"C-\");\n        } else if(grade\
    \ >= 1.0) {\n            letter_grades.push_back(\"D+\");\n        } else if(grade\
    \ >= 0.7) {\n            letter_grades.push_back(\"D\");\n        } else if(grade\
    \ >= 0.0) {\n            letter_grades.push_back(\"D-\");\n        } else {\n\
    \            letter_grades.push_back(\"E\");\n        }\n    }\n    return letter_grades;",
  "    std::vector<std::string> letter_grade;\n    for(float g : grades) {\n     \
    \   if(g > 3.0 && g < 3.7) {\n            letter_grade.push_back(\"A+\");\n  \
    \      } else if(g > 3.7 && g < 3.3) {\n            letter_grade.push_back(\"\
    A\");\n        } else if(g > 3.3 && g < 3.0) {\n            letter_grade.push_back(\"\
    A-\");\n        } else if(g > 3.0 && g < 2.7) {\n            letter_grade.push_back(\"\
    B+\");\n        } else if(g > 2.7 && g < 2.3) {\n            letter_grade.push_back(\"\
    B\");\n        } else if(g > 2.3 && g < 2.0) {\n            letter_grade.push_back(\"\
    B-\");\n        } else if(g > 2.0 && g < 1.7) {\n            letter_grade.push_back(\"\
    C+\");\n        } else if(g > 1.7 && g < 1.3) {\n            letter_grade.push_back(\"\
    C\");\n        } else if(g > 1.3 && g < 1.0) {\n            letter_grade.push_back(\"\
    C-\");\n        } else if(g > 1.0 && g < 0.7) {\n            letter_grade.push_back(\"\
    D+\");\n        } else if(g > 0.7 && g < 0.0) {\n            letter_grade.push_back(\"\
    D\");\n        } else {\n            letter_grade.push_back(\"D-\");\n       \
    \ }\n    }\n    return letter_grade;", "    std::vector<std::string> letter_grades;\n\
    \    for(auto &grade : grades) {\n        if(grade >= 4.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(grade > 3.7) {\n            letter_grades.push_back(\"\
    A\");\n        } else if(grade > 3.3) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if(grade > 3.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(grade > 2.7) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(grade > 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(grade > 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(grade > 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(grade > 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(grade > 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(grade > 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else if(grade > 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float g : grades) {\n        if(g > 3.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(g > 2.7) {\n            letter_grades.push_back(\"A\"\
    );\n        } else if(g > 2.3) {\n            letter_grades.push_back(\"A-\");\n\
    \        } else if(g > 2.0) {\n            letter_grades.push_back(\"B+\");\n\
    \        } else if(g > 1.7) {\n            letter_grades.push_back(\"B\");\n \
    \       } else if(g > 1.3) {\n            letter_grades.push_back(\"B-\");\n \
    \       } else if(g > 1.0) {\n            letter_grades.push_back(\"C+\");\n \
    \       } else if(g > 0.7) {\n            letter_grades.push_back(\"C\");\n  \
    \      } else if(g > 0.3) {\n            letter_grades.push_back(\"C-\");\n  \
    \      } else if(g > 0.0) {\n            letter_grades.push_back(\"D+\");\n  \
    \      } else if(g > -0.7) {\n            letter_grades.push_back(\"D\");\n  \
    \      } else if(g > -0.3) {\n            letter_grades.push_back(\"D-\");\n \
    \       } else if(g > -1.0) {\n            letter_grades.push_back(\"E\");\n \
    \       } else {\n            letter_grades.push_back(\"F\");\n        }\n   \
    \ }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float g : grades) {\n        if(g > 3.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(g > 2.7) {\n            letter_grades.push_back(\"A\"\
    );\n        } else if(g > 2.3) {\n            letter_grades.push_back(\"A-\");\n\
    \        } else if(g > 2.0) {\n            letter_grades.push_back(\"B+\");\n\
    \        } else if(g > 1.7) {\n            letter_grades.push_back(\"B\");\n \
    \       } else if(g > 1.3) {\n            letter_grades.push_back(\"B-\");\n \
    \       } else if(g > 1.0) {\n            letter_grades.push_back(\"C+\");\n \
    \       } else if(g > 0.7) {\n            letter_grades.push_back(\"C\");\n  \
    \      } else if(g > 0.3) {\n            letter_grades.push_back(\"C-\");\n  \
    \      } else if(g > 0.0) {\n            letter_grades.push_back(\"D+\");\n  \
    \      } else if(g > -0.7) {\n            letter_grades.push_back(\"D\");\n  \
    \      } else if(g > -0.3) {\n            letter_grades.push_back(\"D-\");\n \
    \       } else if(g > -1.0) {\n            letter_grades.push_back(\"E\");\n \
    \       } else {\n            letter_grades.push_back(\"F\");\n        }\n   \
    \ }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float g : grades) {\n        if(g > 3.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(g > 2.7) {\n            letter_grades.push_back(\"A\"\
    );\n        } else if(g > 2.3) {\n            letter_grades.push_back(\"A-\");\n\
    \        } else if(g > 2.0) {\n            letter_grades.push_back(\"B+\");\n\
    \        } else if(g > 1.7) {\n            letter_grades.push_back(\"B\");\n \
    \       } else if(g > 1.3) {\n            letter_grades.push_back(\"B-\");\n \
    \       } else if(g > 1.0) {\n            letter_grades.push_back(\"C+\");\n \
    \       } else if(g > 0.7) {\n            letter_grades.push_back(\"C\");\n  \
    \      } else if(g > 0.3) {\n            letter_grades.push_back(\"C-\");\n  \
    \      } else if(g > 0.0) {\n            letter_grades.push_back(\"D+\");\n  \
    \      } else if(g > 0.0) {\n            letter_grades.push_back(\"D\");\n   \
    \     } else {\n            letter_grades.push_back(\"D-\");\n        }\n    }\n\
    \    return letter_grades;", '    // Your code goes here', '    // Your code here',
  '    // Your code goes here', "    std::vector<std::string> letter_grades;\n   \
    \ assert(grades.size() == 12);\n    letter_grades.push_back(\"A+\");\n    letter_grades.push_back(\"\
    A\");\n    letter_grades.push_back(\"A-\");\n    letter_grades.push_back(\"B+\"\
    );\n    letter_grades.push_back(\"B\");\n    letter_grades.push_back(\"B-\");\n\
    \    letter_grades.push_back(\"C+\");\n    letter_grades.push_back(\"C\");\n \
    \   letter_grades.push_back(\"C-\");\n    letter_grades.push_back(\"D+\");\n \
    \   letter_grades.push_back(\"D\");\n    letter_grades.push_back(\"D-\");\n  \
    \  letter_grades.push_back(\"E\");\n    return letter_grades;", "    std::vector<std::string>\
    \ letter_grades;\n    for(float g : grades) {\n        letter_grades.push_back(g\
    \ < 3.0 ? \"A+\" : (g < 3.7 ? \"A\" : (g < 3.3 ? \"A-\" : (g < 3.0 ? \"B+\" :\
    \ g < 3.7 ? \"B\" : g < 3.3 ? \"B-\" : (g < 3.0 ? \"C+\" : g < 3.7 ? \"C\" : g\
    \ < 3.3 ? \"C-\" : (g < 3.0 ? \"D+\" : g < 3.7 ? \"D\" : g < 3.3 ? \"D-\" : (g\
    \ < 3.0 ? \"E\" : \"\")))));\n    }\n    return letter_grades;", "    std::vector<std::string>\
    \ letter_grades;\n    for(float grade : grades) {\n        if(grade >= 4.0) {\n\
    \            letter_grades.push_back(\"A+\");\n        } else if(grade > 3.7)\
    \ {\n            letter_grades.push_back(\"A\");\n        } else if(grade > 3.3)\
    \ {\n            letter_grades.push_back(\"A-\");\n        } else if(grade > 3.0)\
    \ {\n            letter_grades.push_back(\"B+\");\n        } else if(grade > 2.7)\
    \ {\n            letter_grades.push_back(\"B\");\n        } else if(grade > 2.3)\
    \ {\n            letter_grades.push_back(\"B-\");\n        } else if(grade > 2.0)\
    \ {\n            letter_grades.push_back(\"C+\");\n        } else if(grade > 1.7)\
    \ {\n            letter_grades.push_back(\"C\");\n        } else if(grade > 1.3)\
    \ {\n            letter_grades.push_back(\"C-\");\n        } else if(grade > 1.0)\
    \ {\n            letter_grades.push_back(\"D+\");\n        } else if(grade > 0.7)\
    \ {\n            letter_grades.push_back(\"D\");\n        } else if(grade > 0.0)\
    \ {\n            letter_grades.push_back(\"D-\");\n        } else {\n        \
    \    letter_grades.push_back(\"E\");\n        }\n    }\n    return letter_grades;",
  "    std::vector<std::string> letter_grades;\n    for(float g : grades) {\n    \
    \    if(g > 3.0)\n            letter_grades.push_back(\"A+\");\n        else if(g\
    \ > 2.7)\n            letter_grades.push_back(\"A\");\n        else if(g > 2.3)\n\
    \            letter_grades.push_back(\"A-\");\n        else if(g > 2.0)\n    \
    \        letter_grades.push_back(\"B+\");\n        else if(g > 1.7)\n        \
    \    letter_grades.push_back(\"B\");\n        else if(g > 1.3)\n            letter_grades.push_back(\"\
    B-\");\n        else if(g > 1.0)\n            letter_grades.push_back(\"C+\");\n\
    \        else if(g > 0.7)\n            letter_grades.push_back(\"C\");\n     \
    \   else if(g > 0.3)\n            letter_grades.push_back(\"C-\");\n        else\
    \ if(g > 0.0)\n            letter_grades.push_back(\"D+\");\n        else if(g\
    \ > -0.3)\n            letter_grades.push_back(\"D\");\n        else\n       \
    \     letter_grades.push_back(\"D-\");\n    }\n    return letter_grades;", " \
    \   std::vector<std::string> letter_grade;\n    assert(grades.size() == 12);\n\
    \    letter_grade.push_back(\"A+\");\n    letter_grade.push_back(\"A\");\n   \
    \ letter_grade.push_back(\"A-\");\n    letter_grade.push_back(\"B+\");\n    letter_grade.push_back(\"\
    B\");\n    letter_grade.push_back(\"B-\");\n    letter_grade.push_back(\"C+\"\
    );\n    letter_grade.push_back(\"C\");\n    letter_grade.push_back(\"C-\");\n\
    \    letter_grade.push_back(\"D+\");\n    letter_grade.push_back(\"D\");\n   \
    \ letter_grade.push_back(\"D-\");\n    letter_grade.push_back(\"E\");\n    for(float\
    \ g : grades) {\n        auto it = std::find(letter_grade.begin(), letter_grade.end(),\
    \ g);\n        if(it != letter_grade.end()) {\n            letter_grade.erase(it);\n\
    \        }\n    }\n    return letter_grade;", "    std::vector<std::string> letter_grades;\n\
    \    for(auto &grade : grades) {\n        if(grade >= 4.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(grade >= 3.7) {\n            letter_grades.push_back(\"\
    A\");\n        } else if(grade >= 3.3) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if(grade >= 3.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(grade >= 2.7) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(grade >= 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(grade >= 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(grade >= 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(grade >= 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(grade >= 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(grade >= 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else if(grade >= 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grade;\n\
    \    for(int i = 0; i < grades.size(); i++) {\n        if(grades[i] >= 4.0) {\n\
    \            letter_grade.push_back(\"A+\");\n        } else if(grades[i] >= 3.7)\
    \ {\n            letter_grade.push_back(\"A\");\n        } else if(grades[i] >=\
    \ 3.3) {\n            letter_grade.push_back(\"A-\");\n        } else if(grades[i]\
    \ >= 3.0) {\n            letter_grade.push_back(\"B+\");\n        } else if(grades[i]\
    \ >= 2.7) {\n            letter_grade.push_back(\"B\");\n        } else if(grades[i]\
    \ >= 2.3) {\n            letter_grade.push_back(\"B-\");\n        } else if(grades[i]\
    \ >= 2.0) {\n            letter_grade.push_back(\"C+\");\n        } else if(grades[i]\
    \ >= 1.7) {\n            letter_grade.push_back(\"C\");\n        } else if(grades[i]\
    \ >= 1.3) {\n            letter_grade.push_back(\"C-\");\n        } else if(grades[i]\
    \ >= 1.0) {\n            letter_grade.push_back(\"D+\");\n        } else if(grades[i]\
    \ >= 0.7) {\n            letter_grade.push_back(\"D\");\n        } else if(grades[i]\
    \ >= 0.0) {\n            letter_grade.push_back(\"D-\");\n        } else {\n \
    \           letter_grade.push_back(\"E\");\n        }\n    }\n    return letter_grade;",
  "    std::vector<std::string> letter_grades;\n    for (float grade : grades) {\n\
    \        if (grade > 3.0) {\n            letter_grades.push_back(\"A+\");\n  \
    \      } else if (grade > 2.7) {\n            letter_grades.push_back(\"A\");\n\
    \        } else if (grade > 2.3) {\n            letter_grades.push_back(\"A-\"\
    );\n        } else if (grade > 2.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if (grade > 1.7) {\n            letter_grades.push_back(\"\
    B\");\n        } else if (grade > 1.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (grade > 1.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if (grade > 0.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if (grade > 0.2) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if (grade > 0.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if (grade > -0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else if (grade > -0.2) {\n            letter_grades.push_back(\"\
    D-\");\n        } else if (grade > -0.0) {\n            letter_grades.push_back(\"\
    E\");\n        } else {\n            letter_grades.push_back(\"F\");\n       \
    \ }\n    }\n    return letter_grades;", "    // Your code goes here\n    std::vector<std::string>\
    \ letter_grades;\n    for(int i = 0; i < grades.size(); i++) {\n        if(grades[i]\
    \ >= 4.0 && grades[i] <= 3.7) {\n            letter_grades.push_back(\"A+\");\n\
    \        } else if(grades[i] >= 3.7 && grades[i] <= 3.3) {\n            letter_grades.push_back(\"\
    A\");\n        } else if(grades[i] >= 3.3 && grades[i] <= 3.0) {\n           \
    \ letter_grades.push_back(\"A-\");\n        } else if(grades[i] >= 3.0 && grades[i]\
    \ <= 2.7) {\n            letter_grades.push_back(\"B+\");\n        } else if(grades[i]\
    \ >= 2.7 && grades[i] <= 2.3) {\n            letter_grades.push_back(\"B\");\n\
    \        } else if(grades[i] >= 2.3 && grades[i] <= 2.0) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(grades[i] >= 2.0 && grades[i] <= 1.7) {\n          \
    \  letter_grades.push_back(\"C+\");\n        } else if(grades[i] >= 1.7 && grades[i]\
    \ <= 1.3) {\n            letter_grades.push_back(\"C\");\n        } else if(grades[i]\
    \ >= 1.3 && grades[i] <= 1.0) {\n            letter_grades.push_back(\"C-\");\n\
    \        } else if(grades[i] >= 1.0 && grades[i] <= 0.7) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(grades[i] >= 0.7 && grades[i] <= 0.0) {\n          \
    \  letter_grades.push_back(\"D\");\n        } else {\n            letter_grades.push_back(\"\
    D-\");\n        }\n    }\n    return letter_grades;", "    std::vector<std::string>\
    \ letter_grades;\n    for(float grade : grades) {\n        if(grade > 3.7) {\n\
    \            letter_grades.push_back(\"A+\");\n        } else if(grade > 3.3)\
    \ {\n            letter_grades.push_back(\"A-\");\n        } else if(grade > 3)\
    \ {\n            letter_grades.push_back(\"B+\");\n        } else if(grade > 2.7)\
    \ {\n            letter_grades.push_back(\"B\");\n        } else if(grade > 2.3)\
    \ {\n            letter_grades.push_back(\"B-\");\n        } else if(grade > 2)\
    \ {\n            letter_grades.push_back(\"C+\");\n        } else if(grade > 1.7)\
    \ {\n            letter_grades.push_back(\"C\");\n        } else if(grade > 1.3)\
    \ {\n            letter_grades.push_back(\"C-\");\n        } else if(grade > 1)\
    \ {\n            letter_grades.push_back(\"D+\");\n        } else if(grade > 0.7)\
    \ {\n            letter_grades.push_back(\"D\");\n        } else if(grade > 0)\
    \ {\n            letter_grades.push_back(\"D-\");\n        } else {\n        \
    \    letter_grades.push_back(\"E\");\n        }\n    }\n    return letter_grades;",
  "    std::vector<std::string> letter_grades;\n    for(auto &grade : grades) {\n\
    \        if(grade >= 4.0) {\n            letter_grades.push_back(\"A+\");\n  \
    \      } else if(grade >= 3.7) {\n            letter_grades.push_back(\"A\");\n\
    \        } else if(grade >= 3.3) {\n            letter_grades.push_back(\"A-\"\
    );\n        } else if(grade >= 3.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(grade >= 2.7) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(grade >= 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(grade >= 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(grade >= 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(grade >= 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(grade >= 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(grade >= 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else if(grade >= 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float g : grades) {\n        if(g > 3.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(g > 2.7) {\n            letter_grades.push_back(\"D\"\
    );\n        } else if(g > 2.3) {\n            letter_grades.push_back(\"D-\");\n\
    \        } else if(g > 2.0) {\n            letter_grades.push_back(\"C+\");\n\
    \        } else if(g > 1.7) {\n            letter_grades.push_back(\"C\");\n \
    \       } else if(g > 1.3) {\n            letter_grades.push_back(\"C-\");\n \
    \       } else if(g > 1.0) {\n            letter_grades.push_back(\"B+\");\n \
    \       } else if(g > 0.7) {\n            letter_grades.push_back(\"B\");\n  \
    \      } else if(g > 0.3) {\n            letter_grades.push_back(\"B-\");\n  \
    \      } else if(g > 0.0) {\n            letter_grades.push_back(\"A+\");\n  \
    \      } else if(g > -0.7) {\n            letter_grades.push_back(\"A\");\n  \
    \      } else if(g > -0.3) {\n            letter_grades.push_back(\"A-\");\n \
    \       } else if(g > -0.0) {\n            letter_grades.push_back(\"F\");\n \
    \       } else {\n            letter_grades.push_back(\"E\");\n        }\n   \
    \ }\n    return letter_grades;", "    std::vector<std::string> letter_grade;\n\
    \    for(int i = 0; i < grades.size(); i++) {\n        if(grades[i] >= 4.0 &&\
    \ grades[i] <= 3.7) {\n            letter_grade.push_back(\"A+\");\n        }\
    \ else if(grades[i] >= 3.3 && grades[i] <= 3.0) {\n            letter_grade.push_back(\"\
    A\");\n        } else if(grades[i] >= 2.7 && grades[i] <= 2.3) {\n           \
    \ letter_grade.push_back(\"A-\");\n        } else if(grades[i] >= 1.7 && grades[i]\
    \ <= 1.3) {\n            letter_grade.push_back(\"B+\");\n        } else if(grades[i]\
    \ >= 1.0 && grades[i] <= 0.7) {\n            letter_grade.push_back(\"B\");\n\
    \        } else if(grades[i] >= 0.7 && grades[i] <= 0.0) {\n            letter_grade.push_back(\"\
    B-\");\n        } else if(grades[i] == 0.0) {\n            letter_grade.push_back(\"\
    E\");\n        } else {\n            letter_grade.push_back(\"C\");\n        }\n\
    \    }\n    return letter_grade;", "    std::vector<std::string> letter_grades;\n\
    \    for(float g : grades) {\n        if(g < 3.0) {\n            letter_grades.push_back(\"\
    E\");\n        }\n        else if(g < 3.3) {\n            letter_grades.push_back(\"\
    D-\");\n        }\n        else if(g < 3.7) {\n            letter_grades.push_back(\"\
    D+\");\n        }\n        else if(g < 4.0) {\n            letter_grades.push_back(\"\
    B-\");\n        }\n        else if(g < 4.3) {\n            letter_grades.push_back(\"\
    B+\");\n        }\n        else if(g < 4.7) {\n            letter_grades.push_back(\"\
    B\");\n        }\n        else if(g < 5.0) {\n            letter_grades.push_back(\"\
    A-\");\n        }\n        else if(g < 5.3) {\n            letter_grades.push_back(\"\
    A+\");\n        }\n        else if(g < 5.7) {\n            letter_grades.push_back(\"\
    A\");\n        }\n        else if(g < 6.0) {\n            letter_grades.push_back(\"\
    A+\");\n        }\n        else if(g < 6.3) {\n            letter_grades.push_back(\"\
    A\");\n        }\n        else if(g < 6.7) {\n            letter_grades.push_back(\"\
    A\");\n        }\n        else if(g < 7.0) {\n            letter_grades.push_back(\"\
    A+\");\n        }\n        else if(g < 7.3) {\n            letter_grades.push_back(\"\
    A\");\n        }\n        else if(g < 7.7) {\n            letter_grades.push_back(\"\
    A\");\n        }\n        else if(g < 8.0) {\n            letter_grades.push_back(\"\
    A+\");\n        }\n        else if(g < 8.3) {\n            letter_grades.push_back(\"\
    A\");\n        }\n        else if(g < 8.7) {\n            letter_grades.push_back(\"\
    A\");\n        }\n        else if(g < 9.0) {\n            letter_grades.push_back(\"\
    A+\");\n        }\n        else if(g < 9.3) {\n            letter_grades.push_back(\"\
    A\");\n        }\n        else if(g < 9.7) {\n            letter_grades.push_back(\"\
    A\");\n        }\n        else if(g < 10.0) {\n            letter_grades.push_back(\"\
    A+\");\n        }\n        else if(g < 10.3) {\n            letter_grades.push_back(\"\
    A\");\n        }\n        else if(g < 10.7) {\n            letter_grades.push_back(\"\
    A\");\n        }\n        else if(g < 11.0) {\n            letter_grades.push_back(\"\
    A+\");\n        }\n        else if(g < 11.3) {\n            letter_grades.push_back(\"\
    A\");\n        }\n", "    std::vector<std::string> letter_grades;\n    for(int\
    \ i = 0; i < grades.size(); i++) {\n        if(grades[i] >= 4.0 && grades[i] <=\
    \ 4.7) {\n            letter_grades.push_back(\"A+\");\n        } else if(grades[i]\
    \ >= 3.7 && grades[i] <= 3.9) {\n            letter_grades.push_back(\"A\");\n\
    \        } else if(grades[i] >= 3.3 && grades[i] <= 3.7) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if(grades[i] >= 3.0 && grades[i] <= 3.3) {\n          \
    \  letter_grades.push_back(\"B+\");\n        } else if(grades[i] >= 2.7 && grades[i]\
    \ <= 2.9) {\n            letter_grades.push_back(\"B\");\n        } else if(grades[i]\
    \ >= 2.3 && grades[i] <= 2.7) {\n            letter_grades.push_back(\"B-\");\n\
    \        } else if(grades[i] >= 2.0 && grades[i] <= 2.3) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(grades[i] >= 1.7 && grades[i] <= 1.9) {\n          \
    \  letter_grades.push_back(\"C\");\n        } else if(grades[i] >= 1.3 && grades[i]\
    \ <= 1.7) {\n            letter_grades.push_back(\"C-\");\n        } else if(grades[i]\
    \ >= 1.0 && grades[i] <= 1.3) {\n            letter_grades.push_back(\"D+\");\n\
    \        } else if(grades[i] >= 0.7 && grades[i] <= 1.0) {\n            letter_grades.push_back(\"\
    D\");\n        } else if(grades[i] >= 0.0 && grades[i] <= 0.7) {\n           \
    \ letter_grades.push_back(\"D-\");\n        } else {\n            letter_grades.push_back(\"\
    E\");\n        }\n    }\n    return letter_grades;", "    std::vector<std::string>\
    \ letter_grades;\n    for(auto &grade : grades) {\n        if(grade >= 4.0 &&\
    \ grade < 5.0) {\n            letter_grades.push_back(\"A+\");\n        } else\
    \ if(grade >= 3.7 && grade < 4.0) {\n            letter_grades.push_back(\"A\"\
    );\n        } else if(grade >= 3.3 && grade < 3.7) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if(grade >= 3.0 && grade < 3.3) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(grade >= 2.7 && grade < 3.0) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(grade >= 2.3 && grade < 2.7) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(grade >= 2.0 && grade < 2.3) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(grade >= 1.7 && grade < 2.0) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(grade >= 1.3 && grade < 1.7) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(grade >= 1.0 && grade < 1.3) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(grade >= 0.7 && grade < 1.0) {\n            letter_grades.push_back(\"\
    D\");\n        } else if(grade >= 0.0 && grade < 0.7) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for (float g : grades) {\n        if (g >= 4.0 && g < 5.0) {\n          \
    \  letter_grades.push_back(\"A+\");\n        } else if (g >= 3.7 && g < 4.0) {\n\
    \            letter_grades.push_back(\"A\");\n        } else if (g >= 3.3 && g\
    \ < 3.7) {\n            letter_grades.push_back(\"A-\");\n        } else if (g\
    \ >= 3.0 && g < 3.3) {\n            letter_grades.push_back(\"B+\");\n       \
    \ } else if (g >= 2.7 && g < 3.0) {\n            letter_grades.push_back(\"B\"\
    );\n        } else if (g >= 2.3 && g < 2.7) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (g >= 2.0 && g < 2.3) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if (g >= 1.7 && g < 2.0) {\n            letter_grades.push_back(\"\
    C\");\n        } else if (g >= 1.3 && g < 1.7) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if (g >= 1.0 && g < 1.3) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if (g >= 0.7 && g < 1.0) {\n            letter_grades.push_back(\"\
    D\");\n        } else if (g >= 0.0 && g < 0.7) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grade;\n\
    \    for(float g : grades) {\n        if(g < 3.0)\n            letter_grade.push_back(\"\
    D-\");\n        else if(g < 3.7)\n            letter_grade.push_back(\"D+\");\n\
    \        else if(g < 4.0)\n            letter_grade.push_back(\"D\");\n      \
    \  else if(g < 4.7)\n            letter_grade.push_back(\"D+\");\n        else\
    \ if(g < 5.0)\n            letter_grade.push_back(\"D\");\n        else if(g <\
    \ 5.7)\n            letter_grade.push_back(\"D+\");\n        else if(g < 6.0)\n\
    \            letter_grade.push_back(\"D\");\n        else if(g < 6.7)\n      \
    \      letter_grade.push_back(\"D+\");\n        else if(g < 7.0)\n           \
    \ letter_grade.push_back(\"D\");\n        else if(g < 7.7)\n            letter_grade.push_back(\"\
    D+\");\n        else if(g < 8.0)\n            letter_grade.push_back(\"D\");\n\
    \        else if(g < 8.7)\n            letter_grade.push_back(\"D+\");\n     \
    \   else if(g < 9.0)\n            letter_grade.push_back(\"D\");\n        else\
    \ if(g < 9.7)\n            letter_grade.push_back(\"D+\");\n        else if(g\
    \ < 10.0)\n            letter_grade.push_back(\"D\");\n        else if(g < 10.7)\n\
    \            letter_grade.push_back(\"D+\");\n        else if(g < 11.0)\n    \
    \        letter_grade.push_back(\"D\");\n        else if(g < 11.7)\n         \
    \   letter_grade.push_back(\"D+\");\n        else if(g < 12.0)\n            letter_grade.push_back(\"\
    D\");\n        else if(g < 12.7)\n            letter_grade.push_back(\"D+\");\n\
    \        else if(g < 13.0)\n            letter_grade.push_back(\"D\");\n     \
    \   else if(g < 13.7)\n            letter_grade.push_back(\"D+\");\n        else\
    \ if(g < 14.0)\n            letter_grade.push_back(\"D\");\n        else if(g\
    \ < 14.7)\n            letter_grade.push_back(\"D+\");\n        else if(g < 15.0)\n\
    \            letter_grade.push_back(\"D\");\n        else if(g < 15.7)\n     \
    \       letter_grade.push_back(\"D+\");\n        else if(g < 16.0)\n         \
    \   letter_grade.push_back(\"D\");\n        else if(g < 16.7)\n            letter_grade.push_back(\"\
    D+\");\n        else if(g < 17.0)\n            letter_grade.push_back(\"D\");\n\
    \        else if(g < 17.7)\n            letter_grade.push_back(\"D+\");\n    \
    \    else if(", "    std::vector<std::string> letter_grades;\n    for(float g\
    \ : grades) {\n        auto it = std::find(std::begin(letter_grades), std::end(letter_grades),\
    \ 'E');\n        if(it == std::end(letter_grades)) {\n            letter_grades.push_back(\"\
    E\");\n        } else {\n            auto gpa = std::abs(g);\n            auto\
    \ letter = std::to_string((gpa >= 4.0) ? gpa-4.0 : gpa);\n            auto it\
    \ = std::find(std::begin(letter_grades), std::end(letter_grades), letter);\n \
    \           if(it == std::end(letter_grades)) {\n                letter_grades.push_back(letter);\n\
    \            } else {\n                auto gpa = std::abs(g);\n             \
    \   auto letter = std::to_string((gpa >= 3.7) ? gpa-3.7 : gpa);\n            \
    \    auto it = std::find(std::begin(letter_grades), std::end(letter_grades), letter);\n\
    \                if(it == std::end(letter_grades)) {\n                    letter_grades.push_back(letter);\n\
    \                } else {\n                    auto gpa = std::abs(g);\n     \
    \               auto letter = std::to_string((gpa >= 3.3) ? gpa-3.3 : gpa);\n\
    \                    auto it = std::find(std::begin(letter_grades), std::end(letter_grades),\
    \ letter);\n                    if(it == std::end(letter_grades)) {\n        \
    \                letter_grades.push_back(letter);\n                    } else\
    \ {\n                        auto gpa = std::abs(g);\n                       \
    \ auto letter = std::to_string((gpa >= 3.0) ? gpa-3.0 : gpa);\n              \
    \          auto it = std::find(std::begin(letter_grades), std::end(letter_grades),\
    \ letter);\n                        if(it == std::end(letter_grades)) {\n    \
    \                        letter_grades.push_back(letter);\n                  \
    \      } else {\n                            auto gpa = std::abs(g);\n       \
    \                     auto letter = std::to_string((gpa >= 2.7) ? gpa-2.7 : gpa);\n\
    \                            auto it = std::find(std::begin(letter_grades), std::end(letter_grades),\
    \ letter);\n                            if(it == std::end(letter_grades)) {\n\
    \                                letter_grades.push_back(letter);\n          \
    \                  } else {\n                                auto gpa = std::abs(g);\n\
    \                                auto letter = std::to_string((gpa >= 2.3) ? gpa-2.3\
    \ : gpa);\n                                auto it = std::find(std::begin(letter_grades),\
    \ std::end(letter_grades), letter);\n                                if(it ==\
    \ std::end(letter_grades)) {\n                                    letter_grades.push_back(letter);\n\
    \                                } else {\n                                  \
    \  auto gpa = std::abs(g);\n                                    auto letter =\
    \ std::to_string((gpa >= 2.0) ? gpa-2.0 : gpa);\n                            \
    \        auto it = ", "    std::vector<std::string> letter_grades;\n    for(float\
    \ grade : grades) {\n        if(grade >= 4.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(grade > 3.7) {\n            letter_grades.push_back(\"\
    A\");\n        } else if(grade > 3.3) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if(grade > 3.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(grade > 2.7) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(grade > 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(grade > 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(grade > 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(grade > 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(grade > 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(grade > 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else if(grade > 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", '    // Your code here', "    std::vector<std::string>\
    \ letter_grade;\n    for(auto &grade : grades) {\n        if(grade >= 4.0) {\n\
    \            letter_grade.push_back(\"A+\");\n        } else if(grade >= 3.7)\
    \ {\n            letter_grade.push_back(\"A\");\n        } else if(grade >= 3.3)\
    \ {\n            letter_grade.push_back(\"A-\");\n        } else if(grade >= 3.0)\
    \ {\n            letter_grade.push_back(\"B+\");\n        } else if(grade >= 2.7)\
    \ {\n            letter_grade.push_back(\"B\");\n        } else if(grade >= 2.3)\
    \ {\n            letter_grade.push_back(\"B-\");\n        } else if(grade >= 2.0)\
    \ {\n            letter_grade.push_back(\"C+\");\n        } else if(grade >= 1.7)\
    \ {\n            letter_grade.push_back(\"C\");\n        } else if(grade >= 1.3)\
    \ {\n            letter_grade.push_back(\"C-\");\n        } else if(grade >= 1.0)\
    \ {\n            letter_grade.push_back(\"D+\");\n        } else if(grade >= 0.7)\
    \ {\n            letter_grade.push_back(\"D\");\n        } else if(grade >= 0.0)\
    \ {\n            letter_grade.push_back(\"D-\");\n        } else {\n         \
    \   letter_grade.push_back(\"E\");\n        }\n    }\n    return letter_grade;",
  '    // Your code goes here', "    // Write your code here\n    std::vector<std::string>\
    \ letter_grade;\n    for(float grade : grades) {\n        if(grade >= 4.0 && grade\
    \ <= 4.7) {\n            letter_grade.push_back(\"A+\");\n        } else if(grade\
    \ >= 3.7 && grade <= 3.3) {\n            letter_grade.push_back(\"A\");\n    \
    \    } else if(grade >= 3.3 && grade <= 3.0) {\n            letter_grade.push_back(\"\
    A-\");\n        } else if(grade >= 2.7 && grade <= 2.3) {\n            letter_grade.push_back(\"\
    B+\");\n        } else if(grade >= 2.3 && grade <= 2.0) {\n            letter_grade.push_back(\"\
    B\");\n        } else if(grade >= 2.0 && grade <= 1.7) {\n            letter_grade.push_back(\"\
    B-\");\n        } else if(grade >= 1.7 && grade <= 1.3) {\n            letter_grade.push_back(\"\
    C+\");\n        } else if(grade >= 1.3 && grade <= 1.0) {\n            letter_grade.push_back(\"\
    C\");\n        } else if(grade >= 1.0 && grade <= 0.7) {\n            letter_grade.push_back(\"\
    C-\");\n        } else if(grade >= 0.7 && grade <= 0.0) {\n            letter_grade.push_back(\"\
    D+\");\n        } else if(grade >= 0.0) {\n            letter_grade.push_back(\"\
    D\");\n        } else {\n            letter_grade.push_back(\"E\");\n        }\n\
    \    }\n    return letter_grade;", '    // Your code here', "    std::vector<std::string>\
    \ letter_grades;\n    for(auto &grade : grades) {\n        if(grade >= 4.0) {\n\
    \            letter_grades.push_back(\"A+\");\n        } else if(grade > 3.7)\
    \ {\n            letter_grades.push_back(\"A\");\n        } else if(grade > 3.3)\
    \ {\n            letter_grades.push_back(\"A-\");\n        } else if(grade > 3.0)\
    \ {\n            letter_grades.push_back(\"B+\");\n        } else if(grade > 2.7)\
    \ {\n            letter_grades.push_back(\"B\");\n        } else if(grade > 2.3)\
    \ {\n            letter_grades.push_back(\"B-\");\n        } else if(grade > 2.0)\
    \ {\n            letter_grades.push_back(\"C+\");\n        } else if(grade > 1.7)\
    \ {\n            letter_grades.push_back(\"C\");\n        } else if(grade > 1.3)\
    \ {\n            letter_grades.push_back(\"C-\");\n        } else if(grade > 1.0)\
    \ {\n            letter_grades.push_back(\"D+\");\n        } else if(grade > 0.7)\
    \ {\n            letter_grades.push_back(\"D\");\n        } else if(grade > 0.0)\
    \ {\n            letter_grades.push_back(\"D-\");\n        } else {\n        \
    \    letter_grades.push_back(\"E\");\n        }\n    }\n    return letter_grades;",
  "    // Your code goes here\n    std::vector<std::string> letter_grades;\n    for(float\
    \ grade : grades) {\n        if(grade >= 4.0)\n            letter_grades.push_back(\"\
    A+\");\n        else if(grade > 3.7 && grade < 4.0)\n            letter_grades.push_back(\"\
    A\");\n        else if(grade > 3.3 && grade < 3.7)\n            letter_grades.push_back(\"\
    A-\");\n        else if(grade > 3.0 && grade < 3.3)\n            letter_grades.push_back(\"\
    B+\");\n        else if(grade > 2.7 && grade < 3.0)\n            letter_grades.push_back(\"\
    B\");\n        else if(grade > 2.3 && grade < 2.7)\n            letter_grades.push_back(\"\
    B-\");\n        else if(grade > 2.0 && grade < 2.3)\n            letter_grades.push_back(\"\
    C+\");\n        else if(grade > 1.7 && grade < 2.0)\n            letter_grades.push_back(\"\
    C\");\n        else if(grade > 1.3 && grade < 1.7)\n            letter_grades.push_back(\"\
    C-\");\n        else if(grade > 1.0 && grade < 1.3)\n            letter_grades.push_back(\"\
    D+\");\n        else if(grade > 0.7 && grade < 1.0)\n            letter_grades.push_back(\"\
    D\");\n        else if(grade > 0.0 && grade < 0.7)\n            letter_grades.push_back(\"\
    D-\");\n        else\n            letter_grades.push_back(\"E\");\n    }\n   \
    \ return letter_grades;", "    std::vector<std::string> letter_grades;\n    for(float\
    \ g : grades) {\n        if(g > 3.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(g > 2.7) {\n            letter_grades.push_back(\"A\"\
    );\n        } else if(g > 2.3) {\n            letter_grades.push_back(\"A-\");\n\
    \        } else if(g > 2.0) {\n            letter_grades.push_back(\"B+\");\n\
    \        } else if(g > 1.7) {\n            letter_grades.push_back(\"B\");\n \
    \       } else if(g > 1.3) {\n            letter_grades.push_back(\"B-\");\n \
    \       } else if(g > 1.0) {\n            letter_grades.push_back(\"C+\");\n \
    \       } else if(g > 0.7) {\n            letter_grades.push_back(\"C\");\n  \
    \      } else if(g > 0.3) {\n            letter_grades.push_back(\"C-\");\n  \
    \      } else if(g > 0.0) {\n            letter_grades.push_back(\"D+\");\n  \
    \      } else if(g > -0.7) {\n            letter_grades.push_back(\"D\");\n  \
    \      } else if(g > -0.3) {\n            letter_grades.push_back(\"D-\");\n \
    \       } else if(g > -1.0) {\n            letter_grades.push_back(\"E\");\n \
    \       } else {\n            letter_grades.push_back(\"F\");\n        }\n   \
    \ }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    assert(grades.size() == 12);\n    letter_grades.push_back(\"A+\");\n    letter_grades.push_back(\"\
    A\");\n    letter_grades.push_back(\"A-\");\n    letter_grades.push_back(\"B+\"\
    );\n    letter_grades.push_back(\"B\");\n    letter_grades.push_back(\"B-\");\n\
    \    letter_grades.push_back(\"C+\");\n    letter_grades.push_back(\"C\");\n \
    \   letter_grades.push_back(\"C-\");\n    letter_grades.push_back(\"D+\");\n \
    \   letter_grades.push_back(\"D\");\n    letter_grades.push_back(\"D-\");\n  \
    \  letter_grades.push_back(\"E\");\n    return letter_grades;", '    // Your code
    goes here', "    std::vector<std::string> letter_grade;\n    for(float g : grades)\
    \ {\n        if(g > 3.0)\n            letter_grade.push_back(\"A+\");\n      \
    \  else if(g > 2.7)\n            letter_grade.push_back(\"A\");\n        else\
    \ if(g > 2.3)\n            letter_grade.push_back(\"A-\");\n        else if(g\
    \ > 2.0)\n            letter_grade.push_back(\"B+\");\n        else if(g > 1.7)\n\
    \            letter_grade.push_back(\"B\");\n        else if(g > 1.3)\n      \
    \      letter_grade.push_back(\"B-\");\n        else if(g > 1.0)\n           \
    \ letter_grade.push_back(\"C+\");\n        else if(g > 0.7)\n            letter_grade.push_back(\"\
    C\");\n        else if(g > 0.3)\n            letter_grade.push_back(\"C-\");\n\
    \        else if(g > 0.0)\n            letter_grade.push_back(\"D+\");\n     \
    \   else if(g > -0.3)\n            letter_grade.push_back(\"D\");\n        else\
    \ if(g > -0.7)\n            letter_grade.push_back(\"D-\");\n        else\n  \
    \          letter_grade.push_back(\"E\");\n    }\n    return letter_grade;", '    //
    Your code goes here', "    std::vector<std::string> letter_grades;\n    for(float\
    \ g : grades) {\n        if(g > 3.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(g > 2.7) {\n            letter_grades.push_back(\"A\"\
    );\n        } else if(g > 2.3) {\n            letter_grades.push_back(\"A-\");\n\
    \        } else if(g > 2.0) {\n            letter_grades.push_back(\"B+\");\n\
    \        } else if(g > 1.7) {\n            letter_grades.push_back(\"B\");\n \
    \       } else if(g > 1.3) {\n            letter_grades.push_back(\"B-\");\n \
    \       } else if(g > 1.0) {\n            letter_grades.push_back(\"C+\");\n \
    \       } else if(g > 0.7) {\n            letter_grades.push_back(\"C\");\n  \
    \      } else if(g > 0.3) {\n            letter_grades.push_back(\"C-\");\n  \
    \      } else if(g > 0.0) {\n            letter_grades.push_back(\"D+\");\n  \
    \      } else if(g > 0.0) {\n            letter_grades.push_back(\"D\");\n   \
    \     } else {\n            letter_grades.push_back(\"E\");\n        }\n    }\n\
    \    return letter_grades;", "    std::vector<std::string> letter_grades;\n  \
    \  for(float g : grades) {\n        if(g > 3.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(g > 2.7) {\n            letter_grades.push_back(\"D\"\
    );\n        } else if(g > 2.3) {\n            letter_grades.push_back(\"D-\");\n\
    \        } else if(g > 2.0) {\n            letter_grades.push_back(\"C+\");\n\
    \        } else if(g > 1.7) {\n            letter_grades.push_back(\"C\");\n \
    \       } else if(g > 1.3) {\n            letter_grades.push_back(\"C-\");\n \
    \       } else if(g > 1.0) {\n            letter_grades.push_back(\"B+\");\n \
    \       } else if(g > 0.7) {\n            letter_grades.push_back(\"B\");\n  \
    \      } else if(g > 0.3) {\n            letter_grades.push_back(\"B-\");\n  \
    \      } else if(g > 0.0) {\n            letter_grades.push_back(\"A+\");\n  \
    \      } else if(g > -0.7) {\n            letter_grades.push_back(\"A\");\n  \
    \      } else if(g > -0.3) {\n            letter_grades.push_back(\"A-\");\n \
    \       } else if(g > -0.0) {\n            letter_grades.push_back(\"A\");\n \
    \       } else {\n            letter_grades.push_back(\"E\");\n        }\n   \
    \ }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(auto &grade : grades) {\n        if(grade > 3.0) {\n            letter_grades.push_back(\"\
    A+\");\n        }\n        else if(grade > 2.7) {\n            letter_grades.push_back(\"\
    A\");\n        }\n        else if(grade > 2.3) {\n            letter_grades.push_back(\"\
    A-\");\n        }\n        else if(grade > 2.0) {\n            letter_grades.push_back(\"\
    B+\");\n        }\n        else if(grade > 1.7) {\n            letter_grades.push_back(\"\
    B\");\n        }\n        else if(grade > 1.3) {\n            letter_grades.push_back(\"\
    B-\");\n        }\n        else if(grade > 1.0) {\n            letter_grades.push_back(\"\
    C+\");\n        }\n        else if(grade > 0.7) {\n            letter_grades.push_back(\"\
    C\");\n        }\n        else if(grade > 0.2) {\n            letter_grades.push_back(\"\
    C-\");\n        }\n        else if(grade > 0.0) {\n            letter_grades.push_back(\"\
    D+\");\n        }\n        else if(grade > -0.7) {\n            letter_grades.push_back(\"\
    D\");\n        }\n        else if(grade > -0.2) {\n            letter_grades.push_back(\"\
    D-\");\n        }\n        else {\n            letter_grades.push_back(\"E\");\n\
    \        }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grade;\n\
    \    for(auto &grade : grades) {\n        if(grade >= 4.0) {\n            letter_grade.push_back(\"\
    A+\");\n        } else if(grade > 3.7) {\n            letter_grade.push_back(\"\
    A\");\n        } else if(grade > 3.3) {\n            letter_grade.push_back(\"\
    A-\");\n        } else if(grade > 3.0) {\n            letter_grade.push_back(\"\
    B+\");\n        } else if(grade > 2.7) {\n            letter_grade.push_back(\"\
    B\");\n        } else if(grade > 2.3) {\n            letter_grade.push_back(\"\
    B-\");\n        } else if(grade > 2.0) {\n            letter_grade.push_back(\"\
    C+\");\n        } else if(grade > 1.7) {\n            letter_grade.push_back(\"\
    C\");\n        } else if(grade > 1.3) {\n            letter_grade.push_back(\"\
    C-\");\n        } else if(grade > 1.0) {\n            letter_grade.push_back(\"\
    D+\");\n        } else if(grade > 0.7) {\n            letter_grade.push_back(\"\
    D\");\n        } else if(grade > 0.0) {\n            letter_grade.push_back(\"\
    D-\");\n        } else {\n            letter_grade.push_back(\"E\");\n       \
    \ }\n    }\n    return letter_grade;", "    std::vector<std::string> letter_grades;\n\
    \    for (float g : grades) {\n        if (g > 3.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if (g > 2.7) {\n            letter_grades.push_back(\"\
    A\");\n        } else if (g > 2.3) {\n            letter_grades.push_back(\"A-\"\
    );\n        } else if (g > 2.0) {\n            letter_grades.push_back(\"B+\"\
    );\n        } else if (g > 1.7) {\n            letter_grades.push_back(\"B\");\n\
    \        } else if (g > 1.3) {\n            letter_grades.push_back(\"B-\");\n\
    \        } else if (g > 1.0) {\n            letter_grades.push_back(\"C+\");\n\
    \        } else if (g > 0.7) {\n            letter_grades.push_back(\"C\");\n\
    \        } else if (g > 0.3) {\n            letter_grades.push_back(\"C-\");\n\
    \        } else if (g > 0.0) {\n            letter_grades.push_back(\"D+\");\n\
    \        } else if (g > 0.0) {\n            letter_grades.push_back(\"D\");\n\
    \        } else if (g > 0.0) {\n            letter_grades.push_back(\"D-\");\n\
    \        } else {\n            letter_grades.push_back(\"E\");\n        }\n  \
    \  }\n    return letter_grades;", "    std::vector<std::string> letter_grade;\n\
    \    for(int i = 0; i < grades.size(); i++) {\n        if(grades[i] >= 4.0 &&\
    \ grades[i] <= 3.7) {\n            letter_grade.push_back(\"A+\");\n        }\
    \ else if(grades[i] >= 3.3 && grades[i] <= 3.0) {\n            letter_grade.push_back(\"\
    A-\");\n        } else if(grades[i] >= 2.7 && grades[i] <= 2.3) {\n          \
    \  letter_grade.push_back(\"B+\");\n        } else if(grades[i] >= 2.0 && grades[i]\
    \ <= 1.7) {\n            letter_grade.push_back(\"B\");\n        } else if(grades[i]\
    \ >= 1.7 && grades[i] <= 1.3) {\n            letter_grade.push_back(\"B-\");\n\
    \        } else if(grades[i] >= 1.0 && grades[i] <= 0.7) {\n            letter_grade.push_back(\"\
    C+\");\n        } else if(grades[i] >= 0.7 && grades[i] <= 0.0) {\n          \
    \  letter_grade.push_back(\"C\");\n        } else if(grades[i] >= 0.0) {\n   \
    \         letter_grade.push_back(\"D+\");\n        } else if(grades[i] <= 0.0)\
    \ {\n            letter_grade.push_back(\"D\");\n        } else {\n          \
    \  letter_grade.push_back(\"E\");\n        }\n    }\n    return letter_grade;",
  "    std::vector<std::string> letter_grades;\n    for(float g : grades) {\n    \
    \    if(g > 3.0 && g < 3.7) {\n            letter_grades.push_back(\"A+\");\n\
    \        } else if(g > 3.7 && g < 3.3) {\n            letter_grades.push_back(\"\
    A\");\n        } else if(g > 3.3 && g < 3.0) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if(g > 3.0 && g < 2.7) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(g > 2.7 && g < 2.3) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(g > 2.3 && g < 2.0) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(g > 2.0 && g < 1.7) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(g > 1.7 && g < 1.3) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(g > 1.3 && g < 1.0) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(g > 1.0 && g < 0.7) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(g > 0.7 && g < 0.0) {\n            letter_grades.push_back(\"\
    D\");\n        } else {\n            letter_grades.push_back(\"D-\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    assert(grades.size() == 12);\n    for(auto grade : grades) {\n        if(grade\
    \ >= 4.0) {\n            letter_grades.push_back(\"A+\");\n        } else if(grade\
    \ > 3.7) {\n            letter_grades.push_back(\"A\");\n        } else if(grade\
    \ > 3.3) {\n            letter_grades.push_back(\"A-\");\n        } else if(grade\
    \ > 3.0) {\n            letter_grades.push_back(\"B+\");\n        } else if(grade\
    \ > 2.7) {\n            letter_grades.push_back(\"B\");\n        } else if(grade\
    \ > 2.3) {\n            letter_grades.push_back(\"B-\");\n        } else if(grade\
    \ > 2.0) {\n            letter_grades.push_back(\"C+\");\n        } else if(grade\
    \ > 1.7) {\n            letter_grades.push_back(\"C\");\n        } else if(grade\
    \ > 1.3) {\n            letter_grades.push_back(\"C-\");\n        } else if(grade\
    \ > 1.0) {\n            letter_grades.push_back(\"D+\");\n        } else if(grade\
    \ > 0.7) {\n            letter_grades.push_back(\"D\");\n        } else if(grade\
    \ > 0.0) {\n            letter_grades.push_back(\"D-\");\n        } else {\n \
    \           letter_grades.push_back(\"E\");\n        }\n    }\n    return letter_grades;",
  "    std::vector<std::string> letter_grades;\n    for(int i = 0; i < grades.size();\
    \ i++) {\n        if(grades[i] >= 4.0 && grades[i] <= 3.7) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(grades[i] >= 3.7 && grades[i] <= 3.3) {\n          \
    \  letter_grades.push_back(\"A\");\n        } else if(grades[i] >= 3.3 && grades[i]\
    \ <= 3.0) {\n            letter_grades.push_back(\"A-\");\n        } else if(grades[i]\
    \ >= 3.0 && grades[i] <= 2.7) {\n            letter_grades.push_back(\"B+\");\n\
    \        } else if(grades[i] >= 2.7 && grades[i] <= 2.3) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(grades[i] >= 2.3 && grades[i] <= 2.0) {\n           \
    \ letter_grades.push_back(\"B-\");\n        } else if(grades[i] >= 2.0 && grades[i]\
    \ <= 1.7) {\n            letter_grades.push_back(\"C+\");\n        } else if(grades[i]\
    \ >= 1.7 && grades[i] <= 1.3) {\n            letter_grades.push_back(\"C\");\n\
    \        } else if(grades[i] >= 1.3 && grades[i] <= 1.0) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(grades[i] >= 1.0 && grades[i] <= 0.7) {\n          \
    \  letter_grades.push_back(\"D+\");\n        } else if(grades[i] >= 0.7 && grades[i]\
    \ <= 0.0) {\n            letter_grades.push_back(\"D\");\n        } else {\n \
    \           letter_grades.push_back(\"D-\");\n        }\n    }\n    return letter_grades;",
  "    std::vector<std::string> letter_grades;\n    for(auto grade : grades) {\n \
    \       if(grade >= 4.0) {\n            letter_grades.push_back(\"A+\");\n   \
    \     } else if(grade > 3.7 && grade < 4.0) {\n            letter_grades.push_back(\"\
    A\");\n        } else if(grade > 3.3 && grade < 3.7) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if(grade > 3.0 && grade < 3.3) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(grade > 2.7 && grade < 3.0) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(grade > 2.3 && grade < 2.7) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(grade > 2.0 && grade < 2.3) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(grade > 1.7 && grade < 2.0) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(grade > 1.3 && grade < 1.7) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(grade > 1.0 && grade < 1.3) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(grade > 0.7 && grade < 1.0) {\n            letter_grades.push_back(\"\
    D\");\n        } else if(grade > 0.0 && grade < 0.7) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", '    // Your code here', "    std::vector<std::string>\
    \ letter_grades;\n    for(float grade : grades) {\n        if(grade >= 4.0 &&\
    \ grade < 3.7) {\n            letter_grades.push_back(\"A+\");\n        } else\
    \ if(grade >= 3.7 && grade < 3.3) {\n            letter_grades.push_back(\"A\"\
    );\n        } else if(grade >= 3.3 && grade < 3.0) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if(grade >= 3.0 && grade < 2.7) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(grade >= 2.7 && grade < 2.3) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(grade >= 2.3 && grade < 2.0) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(grade >= 2.0 && grade < 1.7) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(grade >= 1.7 && grade < 1.3) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(grade >= 1.3 && grade < 1.0) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(grade >= 1.0 && grade < 0.7) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(grade >= 0.7 && grade < 0.0) {\n            letter_grades.push_back(\"\
    D\");\n        } else {\n            letter_grades.push_back(\"D-\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grade;\n\
    \    assert(grades.size() == 12);\n    for(float g : grades) {\n        if(g >\
    \ 3.0) {\n            letter_grade.push_back(\"D+\");\n        } else if(g > 2.7)\
    \ {\n            letter_grade.push_back(\"D\");\n        } else if(g > 2.3) {\n\
    \            letter_grade.push_back(\"D-\");\n        } else if(g > 2.0) {\n \
    \           letter_grade.push_back(\"C+\");\n        } else if(g > 1.7) {\n  \
    \          letter_grade.push_back(\"C\");\n        } else if(g > 1.3) {\n    \
    \        letter_grade.push_back(\"C-\");\n        } else if(g > 1.0) {\n     \
    \       letter_grade.push_back(\"B+\");\n        } else if(g > 0.7) {\n      \
    \      letter_grade.push_back(\"B\");\n        } else if(g > 0.3) {\n        \
    \    letter_grade.push_back(\"B-\");\n        } else if(g > 0.0) {\n         \
    \   letter_grade.push_back(\"A+\");\n        } else if(g > -0.7) {\n         \
    \   letter_grade.push_back(\"A\");\n        } else if(g > -0.3) {\n          \
    \  letter_grade.push_back(\"A-\");\n        } else if(g > -0.0) {\n          \
    \  letter_grade.push_back(\"A\");\n        } else {\n            letter_grade.push_back(\"\
    E\");\n        }\n    }\n    return letter_grade;", "    std::vector<std::string>\
    \ letter_grade;\n    for (float g : grades) {\n        if (g > 3.0 && g < 3.7)\
    \ {\n            letter_grade.push_back(\"A+\");\n        } else if (g > 3.7 &&\
    \ g < 3.3) {\n            letter_grade.push_back(\"A\");\n        } else if (g\
    \ > 3.3 && g < 3.0) {\n            letter_grade.push_back(\"A-\");\n        }\
    \ else if (g > 3.0 && g < 2.7) {\n            letter_grade.push_back(\"B+\");\n\
    \        } else if (g > 2.7 && g < 2.3) {\n            letter_grade.push_back(\"\
    B\");\n        } else if (g > 2.3 && g < 2.0) {\n            letter_grade.push_back(\"\
    B-\");\n        } else if (g > 2.0 && g < 1.7) {\n            letter_grade.push_back(\"\
    C+\");\n        } else if (g > 1.7 && g < 1.3) {\n            letter_grade.push_back(\"\
    C\");\n        } else if (g > 1.3 && g < 1.0) {\n            letter_grade.push_back(\"\
    C-\");\n        } else if (g > 1.0 && g < 0.7) {\n            letter_grade.push_back(\"\
    D+\");\n        } else if (g > 0.7 && g < 0.0) {\n            letter_grade.push_back(\"\
    D\");\n        } else if (g > 0.0) {\n            letter_grade.push_back(\"D-\"\
    );\n        } else {\n            letter_grade.push_back(\"E\");\n        }\n\
    \    }\n    return letter_grade;", "    std::vector<std::string> letter_grades;\n\
    \    for(float g : grades) {\n        if(g < 3.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(g < 3.7) {\n            letter_grades.push_back(\"A\"\
    );\n        } else if(g < 4.0) {\n            letter_grades.push_back(\"A-\");\n\
    \        } else if(g < 4.7) {\n            letter_grades.push_back(\"B+\");\n\
    \        } else if(g < 5.0) {\n            letter_grades.push_back(\"B\");\n \
    \       } else if(g < 5.7) {\n            letter_grades.push_back(\"B-\");\n \
    \       } else if(g < 6.0) {\n            letter_grades.push_back(\"C+\");\n \
    \       } else if(g < 6.7) {\n            letter_grades.push_back(\"C\");\n  \
    \      } else if(g < 7.0) {\n            letter_grades.push_back(\"C-\");\n  \
    \      } else if(g < 7.7) {\n            letter_grades.push_back(\"D+\");\n  \
    \      } else if(g < 8.0) {\n            letter_grades.push_back(\"D\");\n   \
    \     } else if(g < 8.7) {\n            letter_grades.push_back(\"D-\");\n   \
    \     } else if(g < 9.0) {\n            letter_grades.push_back(\"E\");\n    \
    \    } else {\n            letter_grades.push_back(\"F\");\n        }\n    }\n\
    \    return letter_grades;", "    std::vector<std::string> letter_grades;\n  \
    \  for (float grade : grades) {\n        letter_grades.push_back(std::to_string(grade));\n\
    \    }\n    return letter_grades;", "    std::vector<std::string> letter_grade;\n\
    \    for(int i = 0; i < grades.size(); i++) {\n        if(grades[i] >= 4.0) {\n\
    \            letter_grade.push_back(\"A+\");\n        }\n        else if(grades[i]\
    \ >= 3.7) {\n            letter_grade.push_back(\"A\");\n        }\n        else\
    \ if(grades[i] >= 3.3) {\n            letter_grade.push_back(\"A-\");\n      \
    \  }\n        else if(grades[i] >= 3.0) {\n            letter_grade.push_back(\"\
    B+\");\n        }\n        else if(grades[i] >= 2.7) {\n            letter_grade.push_back(\"\
    B\");\n        }\n        else if(grades[i] >= 2.3) {\n            letter_grade.push_back(\"\
    B-\");\n        }\n        else if(grades[i] >= 2.0) {\n            letter_grade.push_back(\"\
    C+\");\n        }\n        else if(grades[i] >= 1.7) {\n            letter_grade.push_back(\"\
    C\");\n        }\n        else if(grades[i] >= 1.3) {\n            letter_grade.push_back(\"\
    C-\");\n        }\n        else if(grades[i] >= 1.0) {\n            letter_grade.push_back(\"\
    D+\");\n        }\n        else if(grades[i] >= 0.7) {\n            letter_grade.push_back(\"\
    D\");\n        }\n        else {\n            letter_grade.push_back(\"D-\");\n\
    \        }\n    }\n    return letter_grade;", "    std::vector<std::string> letter_grades;\n\
    \    for(int i = 0; i < grades.size(); i++) {\n        if(grades[i] >= 4.0 &&\
    \ grades[i] <= 3.7) {\n            letter_grades.push_back(\"A+\");\n        }\
    \ else if(grades[i] >= 3.3 && grades[i] <= 3.0) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if(grades[i] >= 2.7 && grades[i] <= 2.3) {\n          \
    \  letter_grades.push_back(\"B+\");\n        } else if(grades[i] >= 2.0 && grades[i]\
    \ <= 1.7) {\n            letter_grades.push_back(\"B\");\n        } else if(grades[i]\
    \ >= 1.3 && grades[i] <= 1.0) {\n            letter_grades.push_back(\"B-\");\n\
    \        } else if(grades[i] >= 0.7 && grades[i] <= 0.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(grades[i] >= 0.0) {\n            letter_grades.push_back(\"\
    C\");\n        } else {\n            letter_grades.push_back(\"D-\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(auto &grade : grades) {\n        if(grade > 3.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(grade > 2.7) {\n            letter_grades.push_back(\"\
    A\");\n        } else if(grade > 2.3) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if(grade > 2.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(grade > 1.7) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(grade > 1.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(grade > 1.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(grade > 0.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(grade > 0.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(grade > 0.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(grade > 0.0) {\n            letter_grades.push_back(\"\
    D\");\n        } else {\n            letter_grades.push_back(\"D-\");\n      \
    \  }\n    }\n    return letter_grades;", '    // Your code goes here', "    std::vector<std::string>\
    \ letter_grades;\n    for(float g : grades) {\n        if(g > 3.0) {\n       \
    \     letter_grades.push_back(\"D+\");\n        } else if(g > 2.7) {\n       \
    \     letter_grades.push_back(\"D\");\n        } else if(g > 2.3) {\n        \
    \    letter_grades.push_back(\"D-\");\n        } else if(g > 2.0) {\n        \
    \    letter_grades.push_back(\"C+\");\n        } else if(g > 1.7) {\n        \
    \    letter_grades.push_back(\"C\");\n        } else if(g > 1.3) {\n         \
    \   letter_grades.push_back(\"C-\");\n        } else if(g > 1.0) {\n         \
    \   letter_grades.push_back(\"B+\");\n        } else if(g > 0.7) {\n         \
    \   letter_grades.push_back(\"B\");\n        } else if(g > 0.3) {\n          \
    \  letter_grades.push_back(\"B-\");\n        } else if(g > 0.0) {\n          \
    \  letter_grades.push_back(\"A+\");\n        } else if(g > -0.7) {\n         \
    \   letter_grades.push_back(\"A\");\n        } else if(g > -0.3) {\n         \
    \   letter_grades.push_back(\"A-\");\n        } else if(g > -0.0) {\n        \
    \    letter_grades.push_back(\"A\");\n        } else {\n            letter_grades.push_back(\"\
    E\");\n        }\n    }\n    return letter_grades;", "    std::vector<std::string>\
    \ letter_grades;\n    for(auto &grade : grades) {\n        if(grade >= 4.0) {\n\
    \            letter_grades.push_back(\"A+\");\n        } else if(grade > 3.7)\
    \ {\n            letter_grades.push_back(\"A\");\n        } else if(grade > 3.3)\
    \ {\n            letter_grades.push_back(\"A-\");\n        } else if(grade > 3.0)\
    \ {\n            letter_grades.push_back(\"B+\");\n        } else if(grade > 2.7)\
    \ {\n            letter_grades.push_back(\"B\");\n        } else if(grade > 2.3)\
    \ {\n            letter_grades.push_back(\"B-\");\n        } else if(grade > 2.0)\
    \ {\n            letter_grades.push_back(\"C+\");\n        } else if(grade > 1.7)\
    \ {\n            letter_grades.push_back(\"C\");\n        } else if(grade > 1.3)\
    \ {\n            letter_grades.push_back(\"C-\");\n        } else if(grade > 1.0)\
    \ {\n            letter_grades.push_back(\"D+\");\n        } else if(grade > 0.7)\
    \ {\n            letter_grades.push_back(\"D\");\n        } else if(grade > 0.0)\
    \ {\n            letter_grades.push_back(\"D-\");\n        } else {\n        \
    \    letter_grades.push_back(\"E\");\n        }\n    }\n    return letter_grades;",
  '    // Your code goes here', "    std::vector<std::string> letter_grade;\n    for(float\
    \ grade : grades) {\n        if(grade >= 4.0 && grade < 5.0) {\n            letter_grade.push_back(\"\
    A+\");\n        } else if(grade >= 3.7 && grade < 4.0) {\n            letter_grade.push_back(\"\
    A\");\n        } else if(grade >= 3.3 && grade < 3.7) {\n            letter_grade.push_back(\"\
    A-\");\n        } else if(grade >= 3.0 && grade < 3.3) {\n            letter_grade.push_back(\"\
    B+\");\n        } else if(grade >= 2.7 && grade < 3.0) {\n            letter_grade.push_back(\"\
    B\");\n        } else if(grade >= 2.3 && grade < 2.7) {\n            letter_grade.push_back(\"\
    B-\");\n        } else if(grade >= 2.0 && grade < 2.3) {\n            letter_grade.push_back(\"\
    C+\");\n        } else if(grade >= 1.7 && grade < 2.0) {\n            letter_grade.push_back(\"\
    C\");\n        } else if(grade >= 1.3 && grade < 1.7) {\n            letter_grade.push_back(\"\
    C-\");\n        } else if(grade >= 1.0 && grade < 1.3) {\n            letter_grade.push_back(\"\
    D+\");\n        } else if(grade >= 0.7 && grade < 1.0) {\n            letter_grade.push_back(\"\
    D\");\n        } else if(grade >= 0.0 && grade < 0.7) {\n            letter_grade.push_back(\"\
    D-\");\n        } else {\n            letter_grade.push_back(\"E\");\n       \
    \ }\n    }\n    return letter_grade;", "    std::vector<std::string> letter_grade;\n\
    \    for(int i = 0; i < grades.size(); i++) {\n        if(grades[i] >= 4.0) {\n\
    \            letter_grade.push_back(\"A+\");\n        } else if(grades[i] >= 3.7)\
    \ {\n            letter_grade.push_back(\"A\");\n        } else if(grades[i] >=\
    \ 3.3) {\n            letter_grade.push_back(\"A-\");\n        } else if(grades[i]\
    \ >= 3.0) {\n            letter_grade.push_back(\"B+\");\n        } else if(grades[i]\
    \ >= 2.7) {\n            letter_grade.push_back(\"B\");\n        } else if(grades[i]\
    \ >= 2.3) {\n            letter_grade.push_back(\"B-\");\n        } else if(grades[i]\
    \ >= 2.0) {\n            letter_grade.push_back(\"C+\");\n        } else if(grades[i]\
    \ >= 1.7) {\n            letter_grade.push_back(\"C\");\n        } else if(grades[i]\
    \ >= 1.3) {\n            letter_grade.push_back(\"C-\");\n        } else if(grades[i]\
    \ >= 1.0) {\n            letter_grade.push_back(\"D+\");\n        } else if(grades[i]\
    \ >= 0.7) {\n            letter_grade.push_back(\"D\");\n        } else if(grades[i]\
    \ >= 0.0) {\n            letter_grade.push_back(\"D-\");\n        } else {\n \
    \           letter_grade.push_back(\"E\");\n        }\n    }\n    return letter_grade;",
  '    // Your code here', "    std::vector<std::string> letter_grade;\n    for(float\
    \ grade : grades) {\n        if(grade >= 4.0) {\n            letter_grade.push_back(\"\
    A+\");\n        } else if(grade > 3.7) {\n            letter_grade.push_back(\"\
    A\");\n        } else if(grade > 3.3) {\n            letter_grade.push_back(\"\
    A-\");\n        } else if(grade > 3.0) {\n            letter_grade.push_back(\"\
    B+\");\n        } else if(grade > 2.7) {\n            letter_grade.push_back(\"\
    B\");\n        } else if(grade > 2.3) {\n            letter_grade.push_back(\"\
    B-\");\n        } else if(grade > 2.0) {\n            letter_grade.push_back(\"\
    C+\");\n        } else if(grade > 1.7) {\n            letter_grade.push_back(\"\
    C\");\n        } else if(grade > 1.3) {\n            letter_grade.push_back(\"\
    C-\");\n        } else if(grade > 1.0) {\n            letter_grade.push_back(\"\
    D+\");\n        } else if(grade > 0.7) {\n            letter_grade.push_back(\"\
    D\");\n        } else if(grade > 0.0) {\n            letter_grade.push_back(\"\
    D-\");\n        } else {\n            letter_grade.push_back(\"E\");\n       \
    \ }\n    }\n    return letter_grade;", "    std::vector<std::string> letter_grade;\n\
    \    for(int i = 0; i < grades.size(); i++) {\n        if(grades[i] >= 4.0) {\n\
    \            letter_grade.push_back(\"A+\");\n        } else if(grades[i] >= 3.7)\
    \ {\n            letter_grade.push_back(\"A\");\n        } else if(grades[i] >=\
    \ 3.3) {\n            letter_grade.push_back(\"A-\");\n        } else if(grades[i]\
    \ >= 3.0) {\n            letter_grade.push_back(\"B+\");\n        } else if(grades[i]\
    \ >= 2.7) {\n            letter_grade.push_back(\"B\");\n        } else if(grades[i]\
    \ >= 2.3) {\n            letter_grade.push_back(\"B-\");\n        } else if(grades[i]\
    \ >= 2.0) {\n            letter_grade.push_back(\"C+\");\n        } else if(grades[i]\
    \ >= 1.7) {\n            letter_grade.push_back(\"C\");\n        } else if(grades[i]\
    \ >= 1.3) {\n            letter_grade.push_back(\"C-\");\n        } else if(grades[i]\
    \ >= 1.0) {\n            letter_grade.push_back(\"D+\");\n        } else if(grades[i]\
    \ >= 0.7) {\n            letter_grade.push_back(\"D\");\n        } else if(grades[i]\
    \ >= 0.0) {\n            letter_grade.push_back(\"D-\");\n        } else {\n \
    \           letter_grade.push_back(\"E\");\n        }\n    }\n    return letter_grade;",
  "    std::vector<std::string> letter_grades;\n    for(float g : grades) {\n    \
    \    if(g > 3.0) {\n            letter_grades.push_back(\"D+\");\n        } else\
    \ if(g > 2.7) {\n            letter_grades.push_back(\"D\");\n        } else if(g\
    \ > 2.3) {\n            letter_grades.push_back(\"D-\");\n        } else if(g\
    \ > 2.0) {\n            letter_grades.push_back(\"C+\");\n        } else if(g\
    \ > 1.7) {\n            letter_grades.push_back(\"C\");\n        } else if(g >\
    \ 1.3) {\n            letter_grades.push_back(\"C-\");\n        } else if(g >\
    \ 1.0) {\n            letter_grades.push_back(\"B+\");\n        } else if(g >\
    \ 0.7) {\n            letter_grades.push_back(\"B\");\n        } else if(g > 0.3)\
    \ {\n            letter_grades.push_back(\"B-\");\n        } else if(g > 0.0)\
    \ {\n            letter_grades.push_back(\"A+\");\n        } else if(g > -0.7)\
    \ {\n            letter_grades.push_back(\"A\");\n        } else if(g > -0.3)\
    \ {\n            letter_grades.push_back(\"A-\");\n        } else if(g > -0.0)\
    \ {\n            letter_grades.push_back(\"A\");\n        } else {\n         \
    \   letter_grades.push_back(\"E\");\n        }\n    }\n    return letter_grades;",
  "    std::vector<std::string> letter_grades;\n    for(auto &grade : grades) {\n\
    \        if(grade >= 4.0) {\n            letter_grades.push_back(\"A+\");\n  \
    \      } else if(grade > 3.7) {\n            letter_grades.push_back(\"A\");\n\
    \        } else if(grade > 3.3) {\n            letter_grades.push_back(\"A-\"\
    );\n        } else if(grade > 3.0) {\n            letter_grades.push_back(\"B+\"\
    );\n        } else if(grade > 2.7) {\n            letter_grades.push_back(\"B\"\
    );\n        } else if(grade > 2.3) {\n            letter_grades.push_back(\"B-\"\
    );\n        } else if(grade > 2.0) {\n            letter_grades.push_back(\"C+\"\
    );\n        } else if(grade > 1.7) {\n            letter_grades.push_back(\"C\"\
    );\n        } else if(grade > 1.3) {\n            letter_grades.push_back(\"C-\"\
    );\n        } else if(grade > 1.0) {\n            letter_grades.push_back(\"D+\"\
    );\n        } else if(grade > 0.7) {\n            letter_grades.push_back(\"D\"\
    );\n        } else if(grade > 0.0) {\n            letter_grades.push_back(\"D-\"\
    );\n        } else {\n            letter_grades.push_back(\"E\");\n        }\n\
    \    }\n    return letter_grades;", "    std::vector<std::string> letter_grade;\n\
    \    for(float grade : grades) {\n        if(grade >= 4.0) {\n            letter_grade.push_back(\"\
    A+\");\n        } else if(grade > 3.7) {\n            letter_grade.push_back(\"\
    A\");\n        } else if(grade > 3.3) {\n            letter_grade.push_back(\"\
    A-\");\n        } else if(grade > 3.0) {\n            letter_grade.push_back(\"\
    B+\");\n        } else if(grade > 2.7) {\n            letter_grade.push_back(\"\
    B\");\n        } else if(grade > 2.3) {\n            letter_grade.push_back(\"\
    B-\");\n        } else if(grade > 2.0) {\n            letter_grade.push_back(\"\
    C+\");\n        } else if(grade > 1.7) {\n            letter_grade.push_back(\"\
    C\");\n        } else if(grade > 1.3) {\n            letter_grade.push_back(\"\
    C-\");\n        } else if(grade > 1.0) {\n            letter_grade.push_back(\"\
    D+\");\n        } else if(grade > 0.7) {\n            letter_grade.push_back(\"\
    D\");\n        } else if(grade > 0.0) {\n            letter_grade.push_back(\"\
    D-\");\n        } else {\n            letter_grade.push_back(\"E\");\n       \
    \ }\n    }\n    return letter_grade;", "    std::vector<std::string> letter_grade;\n\
    \    for(int i = 0; i < grades.size(); i++) {\n        if(grades[i] >= 4.0 &&\
    \ grades[i] < 5.0) {\n            letter_grade.push_back(\"A+\");\n        } else\
    \ if(grades[i] >= 3.7 && grades[i] < 4.0) {\n            letter_grade.push_back(\"\
    A\");\n        } else if(grades[i] >= 3.3 && grades[i] < 3.7) {\n            letter_grade.push_back(\"\
    A-\");\n        } else if(grades[i] >= 3.0 && grades[i] < 3.3) {\n           \
    \ letter_grade.push_back(\"B+\");\n        } else if(grades[i] >= 2.7 && grades[i]\
    \ < 3.0) {\n            letter_grade.push_back(\"B\");\n        } else if(grades[i]\
    \ >= 2.3 && grades[i] < 2.7) {\n            letter_grade.push_back(\"B-\");\n\
    \        } else if(grades[i] >= 2.0 && grades[i] < 2.3) {\n            letter_grade.push_back(\"\
    C+\");\n        } else if(grades[i] >= 1.7 && grades[i] < 2.0) {\n           \
    \ letter_grade.push_back(\"C\");\n        } else if(grades[i] >= 1.3 && grades[i]\
    \ < 1.7) {\n            letter_grade.push_back(\"C-\");\n        } else if(grades[i]\
    \ >= 1.0 && grades[i] < 1.3) {\n            letter_grade.push_back(\"D+\");\n\
    \        } else if(grades[i] >= 0.7 && grades[i] < 1.0) {\n            letter_grade.push_back(\"\
    D\");\n        } else if(grades[i] >= 0.0 && grades[i] < 0.7) {\n            letter_grade.push_back(\"\
    D-\");\n        } else {\n            letter_grade.push_back(\"E\");\n       \
    \ }\n    }\n    return letter_grade;", "    std::vector<std::string> letter_grades;\n\
    \    for(float g : grades) {\n        if(g > 3.0 && g < 3.7) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(g > 3.7 && g < 3.3) {\n            letter_grades.push_back(\"\
    A\");\n        } else if(g > 3.3 && g < 3.0) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if(g > 3.0 && g < 2.7) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(g > 2.7 && g < 2.3) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(g > 2.3 && g < 2.0) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(g > 2.0 && g < 1.7) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(g > 1.7 && g < 1.3) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(g > 1.3 && g < 1.0) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(g > 1.0 && g < 0.7) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(g > 0.7 && g < 0.0) {\n            letter_grades.push_back(\"\
    D\");\n        } else {\n            letter_grades.push_back(\"D-\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float g : grades) {\n        if(g > 3.0) {\n            letter_grades.push_back(\"\
    D+\");\n        }\n        else if(g > 2.7) {\n            letter_grades.push_back(\"\
    D\");\n        }\n        else if(g > 2.3) {\n            letter_grades.push_back(\"\
    D-\");\n        }\n        else if(g > 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        }\n        else if(g > 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        }\n        else if(g > 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        }\n        else if(g > 1.0) {\n            letter_grades.push_back(\"\
    B+\");\n        }\n        else if(g > 0.7) {\n            letter_grades.push_back(\"\
    B\");\n        }\n        else if(g > 0.3) {\n            letter_grades.push_back(\"\
    B-\");\n        }\n        else if(g > 0.0) {\n            letter_grades.push_back(\"\
    A+\");\n        }\n        else if(g > -0.7) {\n            letter_grades.push_back(\"\
    A\");\n        }\n        else if(g > -0.3) {\n            letter_grades.push_back(\"\
    A-\");\n        }\n        else {\n            letter_grades.push_back(\"E\");\n\
    \        }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    assert(grades.size() == 12);\n    letter_grades.push_back(\"A+\");\n    letter_grades.push_back(\"\
    A\");\n    letter_grades.push_back(\"A-\");\n    letter_grades.push_back(\"B+\"\
    );\n    letter_grades.push_back(\"B\");\n    letter_grades.push_back(\"B-\");\n\
    \    letter_grades.push_back(\"C+\");\n    letter_grades.push_back(\"C\");\n \
    \   letter_grades.push_back(\"C-\");\n    letter_grades.push_back(\"D+\");\n \
    \   letter_grades.push_back(\"D\");\n    letter_grades.push_back(\"D-\");\n  \
    \  letter_grades.push_back(\"E\");\n    return letter_grades;", "    std::vector<std::string>\
    \ letter_grade;\n    for(int i = 0; i < grades.size(); i++) {\n        if(grades[i]\
    \ >= 4.0 && grades[i] <= 3.7) {\n            letter_grade.push_back(\"A+\");\n\
    \        } else if(grades[i] >= 3.7 && grades[i] <= 3.3) {\n            letter_grade.push_back(\"\
    A\");\n        } else if(grades[i] >= 3.3 && grades[i] <= 3.0) {\n           \
    \ letter_grade.push_back(\"A-\");\n        } else if(grades[i] >= 3.0 && grades[i]\
    \ <= 2.7) {\n            letter_grade.push_back(\"B+\");\n        } else if(grades[i]\
    \ >= 2.7 && grades[i] <= 2.3) {\n            letter_grade.push_back(\"B\");\n\
    \        } else if(grades[i] >= 2.3 && grades[i] <= 2.0) {\n            letter_grade.push_back(\"\
    B-\");\n        } else if(grades[i] >= 2.0 && grades[i] <= 1.7) {\n          \
    \  letter_grade.push_back(\"C+\");\n        } else if(grades[i] >= 1.7 && grades[i]\
    \ <= 1.3) {\n            letter_grade.push_back(\"C\");\n        } else if(grades[i]\
    \ >= 1.3 && grades[i] <= 1.0) {\n            letter_grade.push_back(\"C-\");\n\
    \        } else if(grades[i] >= 1.0 && grades[i] <= 0.7) {\n            letter_grade.push_back(\"\
    D+\");\n        } else if(grades[i] >= 0.7 && grades[i] <= 0.0) {\n          \
    \  letter_grade.push_back(\"D\");\n        } else {\n            letter_grade.push_back(\"\
    D-\");\n        }\n    }\n    return letter_grade;", "    std::vector<std::string>\
    \ letter_grades;\n    for (float grade : grades) {\n        if (grade >= 4.0)\
    \ {\n            letter_grades.push_back(\"A+\");\n        } else if (grade >\
    \ 3.7) {\n            letter_grades.push_back(\"A\");\n        } else if (grade\
    \ > 3.3) {\n            letter_grades.push_back(\"A-\");\n        } else if (grade\
    \ > 3.0) {\n            letter_grades.push_back(\"B+\");\n        } else if (grade\
    \ > 2.7) {\n            letter_grades.push_back(\"B\");\n        } else if (grade\
    \ > 2.3) {\n            letter_grades.push_back(\"B-\");\n        } else if (grade\
    \ > 2.0) {\n            letter_grades.push_back(\"C+\");\n        } else if (grade\
    \ > 1.7) {\n            letter_grades.push_back(\"C\");\n        } else if (grade\
    \ > 1.3) {\n            letter_grades.push_back(\"C-\");\n        } else if (grade\
    \ > 1.0) {\n            letter_grades.push_back(\"D+\");\n        } else if (grade\
    \ > 0.7) {\n            letter_grades.push_back(\"D\");\n        } else if (grade\
    \ > 0.0) {\n            letter_grades.push_back(\"D-\");\n        } else {\n \
    \           letter_grades.push_back(\"E\");\n        }\n    }\n    return letter_grades;",
  "    std::vector<std::string> letter_grades;\n    for(auto grade : grades) {\n \
    \       letter_grades.push_back(std::to_string(grade));\n    }\n    return letter_grades;",
  "    std::vector<std::string> letter_grades;\n    for(auto grade : grades) {\n \
    \       if(grade > 3.0) {\n            letter_grades.push_back(\"A+\");\n    \
    \    } else if(grade > 2.7) {\n            letter_grades.push_back(\"A\");\n \
    \       } else if(grade > 2.3) {\n            letter_grades.push_back(\"A-\");\n\
    \        } else if(grade > 2.0) {\n            letter_grades.push_back(\"B+\"\
    );\n        } else if(grade > 1.7) {\n            letter_grades.push_back(\"B\"\
    );\n        } else if(grade > 1.3) {\n            letter_grades.push_back(\"B-\"\
    );\n        } else if(grade > 1.0) {\n            letter_grades.push_back(\"C+\"\
    );\n        } else if(grade > 0.7) {\n            letter_grades.push_back(\"C\"\
    );\n        } else if(grade > 0.3) {\n            letter_grades.push_back(\"C-\"\
    );\n        } else if(grade > 0.0) {\n            letter_grades.push_back(\"D+\"\
    );\n        } else if(grade > 0.0) {\n            letter_grades.push_back(\"D\"\
    );\n        } else {\n            letter_grades.push_back(\"D-\");\n        }\n\
    \    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(auto &grade : grades) {\n        if(grade > 3.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(grade > 2.7) {\n            letter_grades.push_back(\"\
    A\");\n        } else if(grade > 2.3) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if(grade > 2.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(grade > 1.7) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(grade > 1.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(grade > 1.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(grade > 0.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(grade > 0.2) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(grade > 0.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(grade > -0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else if(grade > -0.2) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    assert(grades.size() == 12);\n    letter_grades.push_back(\"A+\");\n    letter_grades.push_back(\"\
    A\");\n    letter_grades.push_back(\"A-\");\n    letter_grades.push_back(\"B+\"\
    );\n    letter_grades.push_back(\"B\");\n    letter_grades.push_back(\"B-\");\n\
    \    letter_grades.push_back(\"C+\");\n    letter_grades.push_back(\"C\");\n \
    \   letter_grades.push_back(\"C-\");\n    letter_grades.push_back(\"D+\");\n \
    \   letter_grades.push_back(\"D\");\n    letter_grades.push_back(\"D-\");\n  \
    \  letter_grades.push_back(\"E\");\n    return letter_grades;", "    std::vector<std::string>\
    \ letter_grades;\n    for(float grade : grades) {\n        if(grade >= 4.0) {\n\
    \            letter_grades.push_back(\"A+\");\n        } else if(grade >= 3.7)\
    \ {\n            letter_grades.push_back(\"A\");\n        } else if(grade >= 3.3)\
    \ {\n            letter_grades.push_back(\"A-\");\n        } else if(grade >=\
    \ 3.0) {\n            letter_grades.push_back(\"B+\");\n        } else if(grade\
    \ >= 2.7) {\n            letter_grades.push_back(\"B\");\n        } else if(grade\
    \ >= 2.3) {\n            letter_grades.push_back(\"B-\");\n        } else if(grade\
    \ >= 2.0) {\n            letter_grades.push_back(\"C+\");\n        } else if(grade\
    \ >= 1.7) {\n            letter_grades.push_back(\"C\");\n        } else if(grade\
    \ >= 1.3) {\n            letter_grades.push_back(\"C-\");\n        } else if(grade\
    \ >= 1.0) {\n            letter_grades.push_back(\"D+\");\n        } else if(grade\
    \ >= 0.7) {\n            letter_grades.push_back(\"D\");\n        } else if(grade\
    \ >= 0.0) {\n            letter_grades.push_back(\"D-\");\n        } else {\n\
    \            letter_grades.push_back(\"E\");\n        }\n    }\n    return letter_grades;",
  "    std::vector<std::string> letter_grades;\n    for (float g : grades) {\n   \
    \     if (g > 3.0) {\n            letter_grades.push_back(\"A+\");\n        }\
    \ else if (g > 2.7) {\n            letter_grades.push_back(\"A\");\n        }\
    \ else if (g > 2.3) {\n            letter_grades.push_back(\"A-\");\n        }\
    \ else if (g > 2.0) {\n            letter_grades.push_back(\"B+\");\n        }\
    \ else if (g > 1.7) {\n            letter_grades.push_back(\"B\");\n        }\
    \ else if (g > 1.3) {\n            letter_grades.push_back(\"B-\");\n        }\
    \ else if (g > 1.0) {\n            letter_grades.push_back(\"C+\");\n        }\
    \ else if (g > 0.7) {\n            letter_grades.push_back(\"C\");\n        }\
    \ else if (g > 0.3) {\n            letter_grades.push_back(\"C-\");\n        }\
    \ else if (g > 0.0) {\n            letter_grades.push_back(\"D+\");\n        }\
    \ else if (g > -0.7) {\n            letter_grades.push_back(\"D\");\n        }\
    \ else if (g > -0.3) {\n            letter_grades.push_back(\"D-\");\n       \
    \ } else if (g > -1.0) {\n            letter_grades.push_back(\"E\");\n      \
    \  } else {\n            letter_grades.push_back(\"F\");\n        }\n    }\n \
    \   return letter_grades;", "    std::vector<std::string> letter_grade;\n    for(auto\
    \ &grade : grades) {\n        if(grade >= 4.0) {\n            letter_grade.push_back(\"\
    A+\");\n        } else if(grade > 3.7) {\n            letter_grade.push_back(\"\
    A\");\n        } else if(grade > 3.3) {\n            letter_grade.push_back(\"\
    A-\");\n        } else if(grade > 3.0) {\n            letter_grade.push_back(\"\
    B+\");\n        } else if(grade > 2.7) {\n            letter_grade.push_back(\"\
    B\");\n        } else if(grade > 2.3) {\n            letter_grade.push_back(\"\
    B-\");\n        } else if(grade > 2.0) {\n            letter_grade.push_back(\"\
    C+\");\n        } else if(grade > 1.7) {\n            letter_grade.push_back(\"\
    C\");\n        } else if(grade > 1.3) {\n            letter_grade.push_back(\"\
    C-\");\n        } else if(grade > 1.0) {\n            letter_grade.push_back(\"\
    D+\");\n        } else if(grade > 0.7) {\n            letter_grade.push_back(\"\
    D\");\n        } else if(grade > 0.0) {\n            letter_grade.push_back(\"\
    D-\");\n        } else {\n            letter_grade.push_back(\"E\");\n       \
    \ }\n    }\n    return letter_grade;", "    std::vector<std::string> letter_grades;\n\
    \    for(float g : grades) {\n        if(g > 3.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(g > 2.7) {\n            letter_grades.push_back(\"A\"\
    );\n        } else if(g > 2.3) {\n            letter_grades.push_back(\"A-\");\n\
    \        } else if(g > 2.0) {\n            letter_grades.push_back(\"B+\");\n\
    \        } else if(g > 1.7) {\n            letter_grades.push_back(\"B\");\n \
    \       } else if(g > 1.3) {\n            letter_grades.push_back(\"B-\");\n \
    \       } else if(g > 1.0) {\n            letter_grades.push_back(\"C+\");\n \
    \       } else if(g > 0.7) {\n            letter_grades.push_back(\"C\");\n  \
    \      } else if(g > 0.3) {\n            letter_grades.push_back(\"C-\");\n  \
    \      } else if(g > 0.0) {\n            letter_grades.push_back(\"D+\");\n  \
    \      } else if(g > -0.7) {\n            letter_grades.push_back(\"D\");\n  \
    \      } else if(g > -0.3) {\n            letter_grades.push_back(\"D-\");\n \
    \       } else if(g > -0.0) {\n            letter_grades.push_back(\"E\");\n \
    \       } else {\n            letter_grades.push_back(\"F\");\n        }\n   \
    \ }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float grade : grades) {\n        if(grade >= 4.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(grade >= 3.7) {\n            letter_grades.push_back(\"\
    A\");\n        } else if(grade >= 3.3) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if(grade >= 3.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(grade >= 2.7) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(grade >= 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(grade >= 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(grade >= 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(grade >= 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(grade >= 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(grade >= 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else if(grade >= 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float grade : grades) {\n        if(grade >= 4.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(grade > 3.7) {\n            letter_grades.push_back(\"\
    A\");\n        } else if(grade > 3.3) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if(grade > 3.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(grade > 2.7) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(grade > 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(grade > 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(grade > 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(grade > 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(grade > 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(grade > 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else if(grade > 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    assert(grades.size() == 12);\n    letter_grades.push_back(\"A+\");\n    letter_grades.push_back(\"\
    A\");\n    letter_grades.push_back(\"A-\");\n    letter_grades.push_back(\"B+\"\
    );\n    letter_grades.push_back(\"B\");\n    letter_grades.push_back(\"B-\");\n\
    \    letter_grades.push_back(\"C+\");\n    letter_grades.push_back(\"C\");\n \
    \   letter_grades.push_back(\"C-\");\n    letter_grades.push_back(\"D+\");\n \
    \   letter_grades.push_back(\"D\");\n    letter_grades.push_back(\"D-\");\n  \
    \  letter_grades.push_back(\"E\");\n    for(float g : grades) {\n        if(g\
    \ > 3.7) {\n            letter_grades.push_back(\"A+\");\n        } else if(g\
    \ > 3.3) {\n            letter_grades.push_back(\"A\");\n        } else if(g >\
    \ 3) {\n            letter_grades.push_back(\"A-\");\n        } else if(g > 2.7)\
    \ {\n            letter_grades.push_back(\"B+\");\n        } else if(g > 2.3)\
    \ {\n            letter_grades.push_back(\"B\");\n        } else if(g > 2) {\n\
    \            letter_grades.push_back(\"B-\");\n        } else if(g > 1.7) {\n\
    \            letter_grades.push_back(\"C+\");\n        } else if(g > 1.3) {\n\
    \            letter_grades.push_back(\"C\");\n        } else if(g > 1) {\n   \
    \         letter_grades.push_back(\"C-\");\n        } else if(g > 0.7) {\n   \
    \         letter_grades.push_back(\"D+\");\n        } else if(g > 0) {\n     \
    \       letter_grades.push_back(\"D\");\n        } else {\n            letter_grades.push_back(\"\
    D-\");\n        }\n    }\n    return letter_grades;", '    // Your code goes here',
  "    std::vector<std::string> letter_grades;\n    for (float grade : grades) {\n\
    \        if (grade >= 4.0) {\n            letter_grades.push_back(\"A+\");\n \
    \       } else if (grade > 3.7) {\n            letter_grades.push_back(\"A\");\n\
    \        } else if (grade > 3.3) {\n            letter_grades.push_back(\"A-\"\
    );\n        } else if (grade > 3.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if (grade > 2.7) {\n            letter_grades.push_back(\"\
    B\");\n        } else if (grade > 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (grade > 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if (grade > 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if (grade > 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if (grade > 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if (grade > 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else if (grade > 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", '    // Your code goes here', "    std::vector<std::string>\
    \ letter_grades;\n    \n    assert(grades.size() == 12);\n    \n    float sum\
    \ = 0;\n    for (float grade : grades) {\n        sum += grade;\n    }\n    \n\
    \    float average = sum / grades.size();\n    \n    float min_grade = std::numeric_limits<float>::max();\n\
    \    float max_grade = std::numeric_limits<float>::min();\n    \n    for (float\
    \ grade : grades) {\n        if (grade < min_grade) {\n            min_grade =\
    \ grade;\n        }\n        if (grade > max_grade) {\n            max_grade =\
    \ grade;\n        }\n    }\n    \n    float min_grade_percentage = min_grade /\
    \ average;\n    float max_grade_percentage = max_grade / average;\n    \n    float\
    \ grade_percentage_diff = max_grade_percentage - min_grade_percentage;\n    \n\
    \    float grade_percentage_diff_percentage = grade_percentage_diff / max_grade;\n\
    \    \n    float grade_percentage_diff_percentage_percentage = grade_percentage_diff_percentage\
    \ / min_grade;\n    \n    float grade_percentage_diff_percentage_percentage_percentage\
    \ = grade_percentage_diff_percentage_percentage * 100;\n    \n    float grade_percentage_diff_percentage_percentage_percentage_percentage\
    \ = grade_percentage_diff_percentage_percentage_percentage_percentage / 100;\n\
    \    \n    float grade_percentage_diff_percentage_percentage_percentage_percentage_percentage\
    \ = grade_percentage_diff_percentage_percentage_percentage_percentage_percentage\
    \ * 100;\n    \n    float grade_percentage_diff_percentage_percentage_percentage_percentage_percentage_percentage\
    \ = grade_percentage_diff_percentage_percentage_percentage_percentage_percentage_percentage\
    \ / 100;\n    \n    float grade_percentage_diff_percentage_percentage_percentage_percentage_percentage_percentage_percentage\
    \ = grade_percentage_diff_percentage_percentage_percentage_percentage_percentage_percentage_percentage_percentage\
    \ * 100;\n    \n    float grade_percentage_diff_percentage_percentage_percentage_percentage_percentage_percentage_percentage_percentage\
    \ = grade_percentage_diff_percentage_percentage_percentage_percentage_percentage_percentage_percentage_percentage\
    \ / 100;\n    \n    float grade_percentage_diff_percentage_percentage_percentage_percentage_percentage_percentage_percentage_percentage_percentage\
    \ = grade_percentage_diff_percentage_percentage_percentage_percentage_percentage_percentage_percentage_percentage_percentage\
    \ * 100;\n    \n    float grade_percentage_diff_percentage_percentage_percentage_percentage"]
stop_tokens:
- "\n}"

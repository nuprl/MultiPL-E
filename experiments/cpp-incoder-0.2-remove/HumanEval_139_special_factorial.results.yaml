language: cpp
name: HumanEval_139_special_factorial
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    long temp;\n    long i;\n    for (i = 1; i <=\
    \ n; i++) {\n        temp = fact * i;\n        fact = temp;\n    }\n    return\
    \ fact;\n}\nint main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: Exception
  stderr: 'tmpf5mohybp: /tmp/tmpf5mohybp.cpp:21: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (int i = 1; i <= n; i++) {\n        fact *=\
    \ i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmpirw7v2on: /tmp/tmpirw7v2on.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    long temp;\n    long i;\n    for (i = 1; i <=\
    \ n; i++) {\n        temp = fact * i;\n        fact = temp;\n    }\n    return\
    \ fact;\n}\nint main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: Exception
  stderr: 'tmpf5mohybp: /tmp/tmpf5mohybp.cpp:21: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    long i;\n    for (i = 1; i <= n; i++) {\n    \
    \    fact *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate\
    \ = special_factorial;\n    assert(candidate((4)) == (288));\n    assert(candidate((5))\
    \ == (34560));\n    assert(candidate((7)) == (125411328000));\n    assert(candidate((1))\
    \ == (1));\n}\n"
  status: Exception
  stderr: 'tmpwu2zqh54: /tmp/tmpwu2zqh54.cpp:19: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    if (n == 0)\n        return 1;\n    long result = 1;\n    for (long\
    \ i = 1; i <= n; i++)\n        result *= i;\n    return result;\n}\nint main()\
    \ {\n    auto candidate = special_factorial;\n    assert(candidate((4)) == (288));\n\
    \    assert(candidate((5)) == (34560));\n    assert(candidate((7)) == (125411328000));\n\
    \    assert(candidate((1)) == (1));\n}\n"
  status: Exception
  stderr: 'tmpcyozuurw: /tmp/tmpcyozuurw.cpp:19: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    long temp;\n    for (long i = 1; i <= n; i++)\
    \ {\n        temp = fact * i;\n        fact = temp;\n    }\n    return fact;\n\
    }\nint main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: Exception
  stderr: 'tmp0fi_vjt4: /tmp/tmp0fi_vjt4.cpp:20: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008945
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for(long i = 1; i <= n; i++) {\n        fact *=\
    \ i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmplk07ahbr: /tmp/tmplk07ahbr.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    long i;\n    for (i = 1; i <= n; i++) {\n    \
    \    fact *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate\
    \ = special_factorial;\n    assert(candidate((4)) == (288));\n    assert(candidate((5))\
    \ == (34560));\n    assert(candidate((7)) == (125411328000));\n    assert(candidate((1))\
    \ == (1));\n}\n"
  status: Exception
  stderr: 'tmpwu2zqh54: /tmp/tmpwu2zqh54.cpp:19: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    long i = 1;\n    while (i <= n) {\n        fact\
    \ *= i;\n        i++;\n    }\n    return fact;\n}\nint main() {\n    auto candidate\
    \ = special_factorial;\n    assert(candidate((4)) == (288));\n    assert(candidate((5))\
    \ == (34560));\n    assert(candidate((7)) == (125411328000));\n    assert(candidate((1))\
    \ == (1));\n}\n"
  status: Exception
  stderr: 'tmp38m4in28: /tmp/tmp38m4in28.cpp:20: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    if (n == 0 || n == 1) {\n        return 1;\n    }\n    long result\
    \ = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n   \
    \ return result;\n}\nint main() {\n    auto candidate = special_factorial;\n \
    \   assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmpy6eq2g3j: /tmp/tmpy6eq2g3j.cpp:21: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long factorial = 1;\n    for (long i = 1; i <= n; i++) {\n       \
    \ factorial *= i;\n    }\n    return factorial;\n}\nint main() {\n    auto candidate\
    \ = special_factorial;\n    assert(candidate((4)) == (288));\n    assert(candidate((5))\
    \ == (34560));\n    assert(candidate((7)) == (125411328000));\n    assert(candidate((1))\
    \ == (1));\n}\n"
  status: Exception
  stderr: 'tmpnpkdou3d: /tmp/tmpnpkdou3d.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    long temp;\n    for(long i = 1; i <= n; i++) {\n\
    \        temp = fact * i;\n        fact = temp;\n    }\n    return fact;\n}\n\
    int main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: Exception
  stderr: 'tmp_nkz1g10: /tmp/tmp_nkz1g10.cpp:20: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (int i = 1; i <= n; i++) {\n        fact *=\
    \ i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmpirw7v2on: /tmp/tmpirw7v2on.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long factorial = 1;\n    for (long i = 1; i <= n; i++) {\n       \
    \ factorial *= i;\n    }\n    return factorial;\n}\nint main() {\n    auto candidate\
    \ = special_factorial;\n    assert(candidate((4)) == (288));\n    assert(candidate((5))\
    \ == (34560));\n    assert(candidate((7)) == (125411328000));\n    assert(candidate((1))\
    \ == (1));\n}\n"
  status: Exception
  stderr: 'tmpnpkdou3d: /tmp/tmpnpkdou3d.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (int i = 1; i <= n; i++) {\n        fact *=\
    \ i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmpirw7v2on: /tmp/tmpirw7v2on.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    if (n == 0)\n        return 1;\n    return n * special_factorial(n\
    \ - 1);\n}\nint main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: Exception
  stderr: 'tmp7_x78hpz: /tmp/tmp7_x78hpz.cpp:16: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008945
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    if (n == 0 || n == 1) {\n        return 1;\n    }\n    return n *\
    \ special_factorial(n - 1);\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmp8fi9e3wb: /tmp/tmp8fi9e3wb.cpp:17: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    long i = 1;\n    while (i <= n) {\n        fact\
    \ *= i;\n        i++;\n    }\n    return fact;\n}\nint main() {\n    auto candidate\
    \ = special_factorial;\n    assert(candidate((4)) == (288));\n    assert(candidate((5))\
    \ == (34560));\n    assert(candidate((7)) == (125411328000));\n    assert(candidate((1))\
    \ == (1));\n}\n"
  status: Exception
  stderr: 'tmp38m4in28: /tmp/tmp38m4in28.cpp:20: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    if (n == 0 || n == 1)\n        return 1;\n    long result = 1;\n \
    \   for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: Exception
  stderr: 'tmpmi0uqakh: /tmp/tmpmi0uqakh.cpp:20: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    if (n == 0)\n        return 1;\n    long result = 1;\n    for (long\
    \ i = 1; i <= n; i++)\n        result *= i;\n    return result;\n}\nint main()\
    \ {\n    auto candidate = special_factorial;\n    assert(candidate((4)) == (288));\n\
    \    assert(candidate((5)) == (34560));\n    assert(candidate((7)) == (125411328000));\n\
    \    assert(candidate((1)) == (1));\n}\n"
  status: Exception
  stderr: 'tmpcyozuurw: /tmp/tmpcyozuurw.cpp:19: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    long i = 1;\n    while (i <= n) {\n        fact\
    \ *= i;\n        i++;\n    }\n    return fact;\n}\nint main() {\n    auto candidate\
    \ = special_factorial;\n    assert(candidate((4)) == (288));\n    assert(candidate((5))\
    \ == (34560));\n    assert(candidate((7)) == (125411328000));\n    assert(candidate((1))\
    \ == (1));\n}\n"
  status: Exception
  stderr: 'tmp38m4in28: /tmp/tmp38m4in28.cpp:20: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    long temp;\n    for(long i = 1; i <= n; i++) {\n\
    \        temp = fact * i;\n        fact = temp;\n    }\n    return fact;\n}\n\
    int main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: Exception
  stderr: 'tmp_nkz1g10: /tmp/tmp_nkz1g10.cpp:20: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (int i = 1; i <= n; i++) {\n        fact *=\
    \ i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmpirw7v2on: /tmp/tmpirw7v2on.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long factorial = 1;\n    long counter = 1;\n    while (counter <=\
    \ n) {\n        factorial *= counter;\n        counter++;\n    }\n    return factorial;\n\
    }\nint main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: Exception
  stderr: 'tmp65doxtdr: /tmp/tmp65doxtdr.cpp:20: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008945
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (int i = 1; i <= n; i++) {\n        fact *=\
    \ i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmpirw7v2on: /tmp/tmpirw7v2on.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long factorial = 1;\n    for (int i = 1; i <= n; i++) {\n        factorial\
    \ *= i;\n    }\n    return factorial;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmpxrtsbnb2: /tmp/tmpxrtsbnb2.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008893
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (int i = 1; i <= n; i++) {\n        fact *=\
    \ i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmpirw7v2on: /tmp/tmpirw7v2on.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (int i = 1; i <= n; i++) {\n        fact *=\
    \ i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmpirw7v2on: /tmp/tmpirw7v2on.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    if (n == 0)\n        return 1;\n    long factorial = 1;\n    for (long\
    \ i = 1; i <= n; i++)\n        factorial *= i;\n    return factorial;\n}\nint\
    \ main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: Exception
  stderr: 'tmpv2prhtfn: /tmp/tmpv2prhtfn.cpp:19: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (int i = 1; i <= n; i++) {\n        fact *=\
    \ i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmpirw7v2on: /tmp/tmpirw7v2on.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    long temp;\n    while (n > 1) {\n        temp\
    \ = fact;\n        fact = fact * (n - 1);\n        n = n - 2;\n    }\n    return\
    \ temp;\n}\nint main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: Exception
  stderr: 'tmp7tmocanu: /tmp/tmp7tmocanu.cpp:21: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    long i;\n    for (i = 1; i <= n; i++) {\n    \
    \    fact *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate\
    \ = special_factorial;\n    assert(candidate((4)) == (288));\n    assert(candidate((5))\
    \ == (34560));\n    assert(candidate((7)) == (125411328000));\n    assert(candidate((1))\
    \ == (1));\n}\n"
  status: Exception
  stderr: 'tmpwu2zqh54: /tmp/tmpwu2zqh54.cpp:19: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    long i;\n    for (i = 1; i <= n; i++) {\n    \
    \    fact *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate\
    \ = special_factorial;\n    assert(candidate((4)) == (288));\n    assert(candidate((5))\
    \ == (34560));\n    assert(candidate((7)) == (125411328000));\n    assert(candidate((1))\
    \ == (1));\n}\n"
  status: Exception
  stderr: 'tmpwu2zqh54: /tmp/tmpwu2zqh54.cpp:19: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    if (n == 0)\n        return 1;\n    long result = 1;\n    while (n\
    \ > 1) {\n        result *= n;\n        n--;\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: Exception
  stderr: 'tmpnej4k5u6: /tmp/tmpnej4k5u6.cpp:21: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008945
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (int i = 1; i <= n; i++) {\n        fact *=\
    \ i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmpirw7v2on: /tmp/tmpirw7v2on.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    if (n <= 1)\n        return 1;\n    long res = special_factorial(n\
    \ - 1);\n    return res * n;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmpivuczem_: /tmp/tmpivuczem_.cpp:17: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008945
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    if (n == 0 || n == 1) {\n        return 1;\n    }\n    long result\
    \ = special_factorial(n - 1) * n;\n    return result;\n}\nint main() {\n    auto\
    \ candidate = special_factorial;\n    assert(candidate((4)) == (288));\n    assert(candidate((5))\
    \ == (34560));\n    assert(candidate((7)) == (125411328000));\n    assert(candidate((1))\
    \ == (1));\n}\n"
  status: Exception
  stderr: 'tmpyxgpe6sk: /tmp/tmpyxgpe6sk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    long i = 1;\n    while (i <= n) {\n        fact\
    \ *= i;\n        i++;\n    }\n    return fact;\n}\nint main() {\n    auto candidate\
    \ = special_factorial;\n    assert(candidate((4)) == (288));\n    assert(candidate((5))\
    \ == (34560));\n    assert(candidate((7)) == (125411328000));\n    assert(candidate((1))\
    \ == (1));\n}\n"
  status: Exception
  stderr: 'tmp38m4in28: /tmp/tmp38m4in28.cpp:20: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    long i = 1;\n    while (i <= n) {\n        fact\
    \ *= i;\n        i++;\n    }\n    return fact;\n}\nint main() {\n    auto candidate\
    \ = special_factorial;\n    assert(candidate((4)) == (288));\n    assert(candidate((5))\
    \ == (34560));\n    assert(candidate((7)) == (125411328000));\n    assert(candidate((1))\
    \ == (1));\n}\n"
  status: Exception
  stderr: 'tmp38m4in28: /tmp/tmp38m4in28.cpp:20: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    long i;\n    for (i = 1; i <= n; i++) {\n    \
    \    fact *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate\
    \ = special_factorial;\n    assert(candidate((4)) == (288));\n    assert(candidate((5))\
    \ == (34560));\n    assert(candidate((7)) == (125411328000));\n    assert(candidate((1))\
    \ == (1));\n}\n"
  status: Exception
  stderr: 'tmpwu2zqh54: /tmp/tmpwu2zqh54.cpp:19: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    if (n == 0)\n        return 1;\n    long result = 1;\n    for (long\
    \ i = 1; i <= n; i++)\n        result *= i;\n    return result;\n}\nint main()\
    \ {\n    auto candidate = special_factorial;\n    assert(candidate((4)) == (288));\n\
    \    assert(candidate((5)) == (34560));\n    assert(candidate((7)) == (125411328000));\n\
    \    assert(candidate((1)) == (1));\n}\n"
  status: Exception
  stderr: 'tmpcyozuurw: /tmp/tmpcyozuurw.cpp:19: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    long i;\n    for (i = 1; i <= n; i++) {\n    \
    \    fact *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate\
    \ = special_factorial;\n    assert(candidate((4)) == (288));\n    assert(candidate((5))\
    \ == (34560));\n    assert(candidate((7)) == (125411328000));\n    assert(candidate((1))\
    \ == (1));\n}\n"
  status: Exception
  stderr: 'tmpwu2zqh54: /tmp/tmpwu2zqh54.cpp:19: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (int i = 1; i <= n; i++) {\n        fact *=\
    \ i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmpirw7v2on: /tmp/tmpirw7v2on.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    long temp;\n    for(long i = 1; i <= n; i++) {\n\
    \        temp = fact * i;\n        fact = temp;\n    }\n    return fact;\n}\n\
    int main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: Exception
  stderr: 'tmp_nkz1g10: /tmp/tmp_nkz1g10.cpp:20: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    long temp;\n    long i;\n    for (i = 1; i <=\
    \ n; i++) {\n        temp = fact * i;\n        fact = temp;\n    }\n    return\
    \ fact;\n}\nint main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: Exception
  stderr: 'tmpf5mohybp: /tmp/tmpf5mohybp.cpp:21: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long factorial = 1;\n    for (int i = 1; i <= n; i++) {\n        factorial\
    \ *= i;\n    }\n    return factorial;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmpxrtsbnb2: /tmp/tmpxrtsbnb2.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008893
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    if (n == 0)\n        return 1;\n    return n * special_factorial(n\
    \ - 1);\n}\nint main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: Exception
  stderr: 'tmp7_x78hpz: /tmp/tmp7_x78hpz.cpp:16: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008945
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    long temp;\n    long i;\n    for (i = 1; i <=\
    \ n; i++) {\n        temp = fact * i;\n        fact = temp;\n    }\n    return\
    \ fact;\n}\nint main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: Exception
  stderr: 'tmpf5mohybp: /tmp/tmpf5mohybp.cpp:21: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    if (n == 0 || n == 1)\n        return 1;\n    return n * special_factorial(n\
    \ - 1);\n}\nint main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: Exception
  stderr: 'tmpazhxtbwd: /tmp/tmpazhxtbwd.cpp:16: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    if (n == 0)\n        return 1;\n    long result = 1;\n    for (long\
    \ i = 1; i <= n; i++)\n        result *= i;\n    return result;\n}\nint main()\
    \ {\n    auto candidate = special_factorial;\n    assert(candidate((4)) == (288));\n\
    \    assert(candidate((5)) == (34560));\n    assert(candidate((7)) == (125411328000));\n\
    \    assert(candidate((1)) == (1));\n}\n"
  status: Exception
  stderr: 'tmpcyozuurw: /tmp/tmpcyozuurw.cpp:19: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (int i = 1; i <= n; i++) {\n        fact *=\
    \ i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmpirw7v2on: /tmp/tmpirw7v2on.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    long i;\n    for (i = 1; i <= n; i++) {\n    \
    \    fact *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate\
    \ = special_factorial;\n    assert(candidate((4)) == (288));\n    assert(candidate((5))\
    \ == (34560));\n    assert(candidate((7)) == (125411328000));\n    assert(candidate((1))\
    \ == (1));\n}\n"
  status: Exception
  stderr: 'tmpwu2zqh54: /tmp/tmpwu2zqh54.cpp:19: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    long i = 1;\n    while (i <= n) {\n        fact\
    \ *= i;\n        i++;\n    }\n    return fact;\n}\nint main() {\n    auto candidate\
    \ = special_factorial;\n    assert(candidate((4)) == (288));\n    assert(candidate((5))\
    \ == (34560));\n    assert(candidate((7)) == (125411328000));\n    assert(candidate((1))\
    \ == (1));\n}\n"
  status: Exception
  stderr: 'tmp38m4in28: /tmp/tmp38m4in28.cpp:20: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    if (n == 0)\n        return 1;\n    long result = 1;\n    for (int\
    \ i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: Exception
  stderr: 'tmpcijul9_j: /tmp/tmpcijul9_j.cpp:20: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008945
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    if (n == 0)\n        return 1;\n    return n * special_factorial(n\
    \ - 1);\n}\nint main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: Exception
  stderr: 'tmp7_x78hpz: /tmp/tmp7_x78hpz.cpp:16: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008945
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for(long i = 2; i <= n; i++) {\n        fact *=\
    \ i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmpji42wdeh: /tmp/tmpji42wdeh.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008945
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    if (n == 0 || n == 1) {\n        return 1;\n    }\n    long res =\
    \ special_factorial(n - 1) * n;\n    return res;\n}\nint main() {\n    auto candidate\
    \ = special_factorial;\n    assert(candidate((4)) == (288));\n    assert(candidate((5))\
    \ == (34560));\n    assert(candidate((7)) == (125411328000));\n    assert(candidate((1))\
    \ == (1));\n}\n"
  status: Exception
  stderr: 'tmp1f4j1p0i: /tmp/tmp1f4j1p0i.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008946
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    long i = 1;\n    while (i <= n) {\n        fact\
    \ *= i;\n        i++;\n    }\n    return fact;\n}\nint main() {\n    auto candidate\
    \ = special_factorial;\n    assert(candidate((4)) == (288));\n    assert(candidate((5))\
    \ == (34560));\n    assert(candidate((7)) == (125411328000));\n    assert(candidate((1))\
    \ == (1));\n}\n"
  status: Exception
  stderr: 'tmp38m4in28: /tmp/tmp38m4in28.cpp:20: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (int i = 1; i <= n; i++) {\n        fact *=\
    \ i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmpirw7v2on: /tmp/tmpirw7v2on.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (int i = 1; i <= n; i++) {\n        fact *=\
    \ i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmpirw7v2on: /tmp/tmpirw7v2on.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (int i = 1; i <= n; i++) {\n        fact *=\
    \ i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmpirw7v2on: /tmp/tmpirw7v2on.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    long i = 1;\n    while (i <= n) {\n        fact\
    \ *= i;\n        i++;\n    }\n    return fact;\n}\nint main() {\n    auto candidate\
    \ = special_factorial;\n    assert(candidate((4)) == (288));\n    assert(candidate((5))\
    \ == (34560));\n    assert(candidate((7)) == (125411328000));\n    assert(candidate((1))\
    \ == (1));\n}\n"
  status: Exception
  stderr: 'tmp38m4in28: /tmp/tmp38m4in28.cpp:20: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for(long i = 1; i <= n; i++) {\n        fact *=\
    \ i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmplk07ahbr: /tmp/tmplk07ahbr.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (int i = 1; i <= n; i++) {\n        fact *=\
    \ i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmpirw7v2on: /tmp/tmpirw7v2on.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    long temp = n;\n    while (temp > 1) {\n     \
    \   fact *= temp--;\n    }\n    return fact;\n}\nint main() {\n    auto candidate\
    \ = special_factorial;\n    assert(candidate((4)) == (288));\n    assert(candidate((5))\
    \ == (34560));\n    assert(candidate((7)) == (125411328000));\n    assert(candidate((1))\
    \ == (1));\n}\n"
  status: Exception
  stderr: 'tmp9ldvt2g_: /tmp/tmp9ldvt2g_.cpp:19: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008946
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    long i = 1;\n    while (i <= n) {\n        fact\
    \ *= i;\n        i++;\n    }\n    return fact;\n}\nint main() {\n    auto candidate\
    \ = special_factorial;\n    assert(candidate((4)) == (288));\n    assert(candidate((5))\
    \ == (34560));\n    assert(candidate((7)) == (125411328000));\n    assert(candidate((1))\
    \ == (1));\n}\n"
  status: Exception
  stderr: 'tmp38m4in28: /tmp/tmp38m4in28.cpp:20: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (int i = 1; i <= n; i++) {\n        fact *=\
    \ i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmpirw7v2on: /tmp/tmpirw7v2on.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    long i = 1;\n    while (i <= n) {\n        fact\
    \ *= i;\n        i++;\n    }\n    return fact;\n}\nint main() {\n    auto candidate\
    \ = special_factorial;\n    assert(candidate((4)) == (288));\n    assert(candidate((5))\
    \ == (34560));\n    assert(candidate((7)) == (125411328000));\n    assert(candidate((1))\
    \ == (1));\n}\n"
  status: Exception
  stderr: 'tmp38m4in28: /tmp/tmp38m4in28.cpp:20: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    long temp = 1;\n    while (n > 1) {\n        temp\
    \ = temp * n;\n        fact = fact * temp;\n        n--;\n    }\n    return fact;\n\
    }\nint main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: Exception
  stderr: 'tmp03y7zz__: /tmp/tmp03y7zz__.cpp:21: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008946
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    long temp;\n    long i;\n    for (i = 1; i <=\
    \ n; i++) {\n        temp = fact * i;\n        fact = temp;\n    }\n    return\
    \ fact;\n}\nint main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: Exception
  stderr: 'tmpf5mohybp: /tmp/tmpf5mohybp.cpp:21: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    long i;\n    for (i = 1; i <= n; i++) {\n    \
    \    fact *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate\
    \ = special_factorial;\n    assert(candidate((4)) == (288));\n    assert(candidate((5))\
    \ == (34560));\n    assert(candidate((7)) == (125411328000));\n    assert(candidate((1))\
    \ == (1));\n}\n"
  status: Exception
  stderr: 'tmpwu2zqh54: /tmp/tmpwu2zqh54.cpp:19: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for(long i = 1; i <= n; i++) {\n        fact *=\
    \ i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmplk07ahbr: /tmp/tmplk07ahbr.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long factorial = 1;\n    for (long i = 1; i <= n; i++) {\n       \
    \ factorial *= i;\n    }\n    return factorial;\n}\nint main() {\n    auto candidate\
    \ = special_factorial;\n    assert(candidate((4)) == (288));\n    assert(candidate((5))\
    \ == (34560));\n    assert(candidate((7)) == (125411328000));\n    assert(candidate((1))\
    \ == (1));\n}\n"
  status: Exception
  stderr: 'tmpnpkdou3d: /tmp/tmpnpkdou3d.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (int i = 1; i <= n; i++) {\n        fact *=\
    \ i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmpirw7v2on: /tmp/tmpirw7v2on.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    long i;\n    for (i = 1; i <= n; i++) {\n    \
    \    fact *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate\
    \ = special_factorial;\n    assert(candidate((4)) == (288));\n    assert(candidate((5))\
    \ == (34560));\n    assert(candidate((7)) == (125411328000));\n    assert(candidate((1))\
    \ == (1));\n}\n"
  status: Exception
  stderr: 'tmpwu2zqh54: /tmp/tmpwu2zqh54.cpp:19: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    long i = 1;\n    while (i <= n) {\n        fact\
    \ *= i;\n        i++;\n    }\n    return fact;\n}\nint main() {\n    auto candidate\
    \ = special_factorial;\n    assert(candidate((4)) == (288));\n    assert(candidate((5))\
    \ == (34560));\n    assert(candidate((7)) == (125411328000));\n    assert(candidate((1))\
    \ == (1));\n}\n"
  status: Exception
  stderr: 'tmp38m4in28: /tmp/tmp38m4in28.cpp:20: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (int i = 1; i <= n; i++) {\n        fact *=\
    \ i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmpirw7v2on: /tmp/tmpirw7v2on.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    if (n == 0)\n        return 1;\n    long result = 1;\n    for (long\
    \ i = 1; i <= n; i++)\n        result *= i;\n    return result;\n}\nint main()\
    \ {\n    auto candidate = special_factorial;\n    assert(candidate((4)) == (288));\n\
    \    assert(candidate((5)) == (34560));\n    assert(candidate((7)) == (125411328000));\n\
    \    assert(candidate((1)) == (1));\n}\n"
  status: Exception
  stderr: 'tmpcyozuurw: /tmp/tmpcyozuurw.cpp:19: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    if (n == 0 || n == 1) {\n        return 1;\n    }\n    return n *\
    \ special_factorial(n - 1);\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmp8fi9e3wb: /tmp/tmp8fi9e3wb.cpp:17: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long factorial = 1;\n    long i;\n    for (i = 1; i <= n; i++) {\n\
    \        factorial *= i;\n    }\n    return factorial;\n}\nint main() {\n    auto\
    \ candidate = special_factorial;\n    assert(candidate((4)) == (288));\n    assert(candidate((5))\
    \ == (34560));\n    assert(candidate((7)) == (125411328000));\n    assert(candidate((1))\
    \ == (1));\n}\n"
  status: Exception
  stderr: 'tmpi_u74kma: /tmp/tmpi_u74kma.cpp:19: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008946
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for(long i = 1; i <= n; i++) {\n        fact *=\
    \ i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmplk07ahbr: /tmp/tmplk07ahbr.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    if (n == 0 || n == 1)\n        return 1;\n    return n * special_factorial(n\
    \ - 1);\n}\nint main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: Exception
  stderr: 'tmpazhxtbwd: /tmp/tmpazhxtbwd.cpp:16: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long factorial = 1;\n    long i = 1;\n    while (i <= n) {\n     \
    \   factorial *= i;\n        i++;\n    }\n    return factorial;\n}\nint main()\
    \ {\n    auto candidate = special_factorial;\n    assert(candidate((4)) == (288));\n\
    \    assert(candidate((5)) == (34560));\n    assert(candidate((7)) == (125411328000));\n\
    \    assert(candidate((1)) == (1));\n}\n"
  status: Exception
  stderr: 'tmpmcuzqts_: /tmp/tmpmcuzqts_.cpp:20: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008946
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    long temp = n;\n    while (temp > 1) {\n     \
    \   fact *= temp;\n        temp--;\n    }\n    return fact;\n}\nint main() {\n\
    \    auto candidate = special_factorial;\n    assert(candidate((4)) == (288));\n\
    \    assert(candidate((5)) == (34560));\n    assert(candidate((7)) == (125411328000));\n\
    \    assert(candidate((1)) == (1));\n}\n"
  status: Exception
  stderr: 'tmply7j0hir: /tmp/tmply7j0hir.cpp:20: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    long temp;\n    while(n>1) {\n        temp = fact;\n\
    \        fact = fact * n;\n        n = n - 1;\n    }\n    return fact;\n}\nint\
    \ main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: Exception
  stderr: 'tmpycbj0c4e: /tmp/tmpycbj0c4e.cpp:21: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008946
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    if (n == 0)\n        return 1;\n    long result = 1;\n    while (n\
    \ > 0) {\n        result *= n;\n        n--;\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: Exception
  stderr: 'tmppcxpf3bb: /tmp/tmppcxpf3bb.cpp:21: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    long temp = n;\n    while (temp > 1) {\n     \
    \   fact = fact * (temp - 1);\n        temp--;\n    }\n    return fact;\n}\nint\
    \ main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: Exception
  stderr: 'tmp849r3bqk: /tmp/tmp849r3bqk.cpp:20: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    long temp;\n    for(long i = 1; i <= n; i++) {\n\
    \        temp = fact * i;\n        fact = temp;\n    }\n    return fact;\n}\n\
    int main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: Exception
  stderr: 'tmp_nkz1g10: /tmp/tmp_nkz1g10.cpp:20: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    long temp = n;\n    while (temp > 1) {\n     \
    \   fact *= temp--;\n    }\n    return fact;\n}\nint main() {\n    auto candidate\
    \ = special_factorial;\n    assert(candidate((4)) == (288));\n    assert(candidate((5))\
    \ == (34560));\n    assert(candidate((7)) == (125411328000));\n    assert(candidate((1))\
    \ == (1));\n}\n"
  status: Exception
  stderr: 'tmp9ldvt2g_: /tmp/tmp9ldvt2g_.cpp:19: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008946
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (int i = 1; i <= n; i++) {\n        fact *=\
    \ i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmpirw7v2on: /tmp/tmpirw7v2on.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    if (n == 0)\n        return 1;\n    long result = 1;\n    for (long\
    \ i = 1; i <= n; i++)\n        result *= i;\n    return result;\n}\nint main()\
    \ {\n    auto candidate = special_factorial;\n    assert(candidate((4)) == (288));\n\
    \    assert(candidate((5)) == (34560));\n    assert(candidate((7)) == (125411328000));\n\
    \    assert(candidate((1)) == (1));\n}\n"
  status: Exception
  stderr: 'tmpcyozuurw: /tmp/tmpcyozuurw.cpp:19: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    long i;\n    for (i = 1; i <= n; i++) {\n    \
    \    fact *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate\
    \ = special_factorial;\n    assert(candidate((4)) == (288));\n    assert(candidate((5))\
    \ == (34560));\n    assert(candidate((7)) == (125411328000));\n    assert(candidate((1))\
    \ == (1));\n}\n"
  status: Exception
  stderr: 'tmpwu2zqh54: /tmp/tmpwu2zqh54.cpp:19: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    long temp = 1;\n    long i;\n    for (i = 1; i\
    \ <= n; i++) {\n        fact = fact * i;\n    }\n    return fact;\n}\nint main()\
    \ {\n    auto candidate = special_factorial;\n    assert(candidate((4)) == (288));\n\
    \    assert(candidate((5)) == (34560));\n    assert(candidate((7)) == (125411328000));\n\
    \    assert(candidate((1)) == (1));\n}\n"
  status: Exception
  stderr: 'tmpke3m4fyu: /tmp/tmpke3m4fyu.cpp:20: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008946
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long factorial = 1;\n    for (int i = 1; i <= n; i++) {\n        factorial\
    \ *= i;\n    }\n    return factorial;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmpxrtsbnb2: /tmp/tmpxrtsbnb2.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008893
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    long i = 1;\n    while (i <= n) {\n        fact\
    \ *= i;\n        i++;\n    }\n    return fact;\n}\nint main() {\n    auto candidate\
    \ = special_factorial;\n    assert(candidate((4)) == (288));\n    assert(candidate((5))\
    \ == (34560));\n    assert(candidate((7)) == (125411328000));\n    assert(candidate((1))\
    \ == (1));\n}\n"
  status: Exception
  stderr: 'tmp38m4in28: /tmp/tmp38m4in28.cpp:20: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    long i;\n    for (i = 1; i <= n; i++) {\n    \
    \    fact *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate\
    \ = special_factorial;\n    assert(candidate((4)) == (288));\n    assert(candidate((5))\
    \ == (34560));\n    assert(candidate((7)) == (125411328000));\n    assert(candidate((1))\
    \ == (1));\n}\n"
  status: Exception
  stderr: 'tmpwu2zqh54: /tmp/tmpwu2zqh54.cpp:19: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    if (n == 0 || n == 1)\n        return 1;\n    long result = 1;\n \
    \   for (long i = 2; i <= n; i++)\n        result *= i;\n    return result;\n\
    }\nint main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: Exception
  stderr: 'tmpp2zc0l34: /tmp/tmpp2zc0l34.cpp:19: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long factorial = 1;\n    long i;\n    for (i = 1; i <= n; i++) {\n\
    \        factorial *= i;\n    }\n    return factorial;\n}\nint main() {\n    auto\
    \ candidate = special_factorial;\n    assert(candidate((4)) == (288));\n    assert(candidate((5))\
    \ == (34560));\n    assert(candidate((7)) == (125411328000));\n    assert(candidate((1))\
    \ == (1));\n}\n"
  status: Exception
  stderr: 'tmpi_u74kma: /tmp/tmpi_u74kma.cpp:19: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008946
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    long temp = n;\n    while (temp > 1) {\n     \
    \   fact *= temp;\n        temp--;\n    }\n    return fact;\n}\nint main() {\n\
    \    auto candidate = special_factorial;\n    assert(candidate((4)) == (288));\n\
    \    assert(candidate((5)) == (34560));\n    assert(candidate((7)) == (125411328000));\n\
    \    assert(candidate((1)) == (1));\n}\n"
  status: Exception
  stderr: 'tmply7j0hir: /tmp/tmply7j0hir.cpp:20: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    long i;\n    for (i = 1; i <= n; i++) {\n    \
    \    fact *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate\
    \ = special_factorial;\n    assert(candidate((4)) == (288));\n    assert(candidate((5))\
    \ == (34560));\n    assert(candidate((7)) == (125411328000));\n    assert(candidate((1))\
    \ == (1));\n}\n"
  status: Exception
  stderr: 'tmpwu2zqh54: /tmp/tmpwu2zqh54.cpp:19: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (int i = 1; i <= n; i++) {\n        fact *=\
    \ i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmpirw7v2on: /tmp/tmpirw7v2on.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    long i = 1;\n    while (i <= n) {\n        fact\
    \ *= i;\n        i++;\n    }\n    return fact;\n}\nint main() {\n    auto candidate\
    \ = special_factorial;\n    assert(candidate((4)) == (288));\n    assert(candidate((5))\
    \ == (34560));\n    assert(candidate((7)) == (125411328000));\n    assert(candidate((1))\
    \ == (1));\n}\n"
  status: Exception
  stderr: 'tmp38m4in28: /tmp/tmp38m4in28.cpp:20: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    long i;\n    for (i = 1; i <= n; i++) {\n    \
    \    fact *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate\
    \ = special_factorial;\n    assert(candidate((4)) == (288));\n    assert(candidate((5))\
    \ == (34560));\n    assert(candidate((7)) == (125411328000));\n    assert(candidate((1))\
    \ == (1));\n}\n"
  status: Exception
  stderr: 'tmpwu2zqh54: /tmp/tmpwu2zqh54.cpp:19: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    long temp;\n    for (long i = 1; i <= n; i++)\
    \ {\n        temp = fact * i;\n        fact = temp;\n    }\n    return fact;\n\
    }\nint main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: Exception
  stderr: 'tmp0fi_vjt4: /tmp/tmp0fi_vjt4.cpp:20: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008945
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    long i = 1;\n    while (i <= n) {\n        fact\
    \ *= i;\n        i++;\n    }\n    return fact;\n}\nint main() {\n    auto candidate\
    \ = special_factorial;\n    assert(candidate((4)) == (288));\n    assert(candidate((5))\
    \ == (34560));\n    assert(candidate((7)) == (125411328000));\n    assert(candidate((1))\
    \ == (1));\n}\n"
  status: Exception
  stderr: 'tmp38m4in28: /tmp/tmp38m4in28.cpp:20: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    long i;\n    for (i = 1; i <= n; i++) {\n    \
    \    fact *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate\
    \ = special_factorial;\n    assert(candidate((4)) == (288));\n    assert(candidate((5))\
    \ == (34560));\n    assert(candidate((7)) == (125411328000));\n    assert(candidate((1))\
    \ == (1));\n}\n"
  status: Exception
  stderr: 'tmpwu2zqh54: /tmp/tmpwu2zqh54.cpp:19: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for(long i = 1; i <= n; i++) {\n        fact =\
    \ fact * i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmpkhoxyg17: /tmp/tmpkhoxyg17.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for(long i = 1; i <= n; i++) {\n        fact *=\
    \ i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmplk07ahbr: /tmp/tmplk07ahbr.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long factorial = 1;\n    long i = 1;\n    while (i <= n) {\n     \
    \   factorial *= i;\n        i++;\n    }\n    return factorial;\n}\nint main()\
    \ {\n    auto candidate = special_factorial;\n    assert(candidate((4)) == (288));\n\
    \    assert(candidate((5)) == (34560));\n    assert(candidate((7)) == (125411328000));\n\
    \    assert(candidate((1)) == (1));\n}\n"
  status: Exception
  stderr: 'tmpmcuzqts_: /tmp/tmpmcuzqts_.cpp:20: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008946
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    long temp = 1;\n    long i = 1;\n    while (i\
    \ <= n) {\n        fact = fact * i;\n        temp = temp * i;\n        i++;\n\
    \    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmpf4m7qbgc: /tmp/tmpf4m7qbgc.cpp:22: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    long i;\n    for (i = 1; i <= n; i++) {\n    \
    \    fact *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate\
    \ = special_factorial;\n    assert(candidate((4)) == (288));\n    assert(candidate((5))\
    \ == (34560));\n    assert(candidate((7)) == (125411328000));\n    assert(candidate((1))\
    \ == (1));\n}\n"
  status: Exception
  stderr: 'tmpwu2zqh54: /tmp/tmpwu2zqh54.cpp:19: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    long temp;\n    for(long i = 1; i <= n; i++) {\n\
    \        temp = fact * i;\n        fact = temp;\n    }\n    return fact;\n}\n\
    int main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: Exception
  stderr: 'tmp_nkz1g10: /tmp/tmp_nkz1g10.cpp:20: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    if (n == 0 || n == 1)\n        return 1;\n    long fact = 1;\n   \
    \ for (long i = 1; i <= n; i++) {\n        fact *= i;\n    }\n    return fact;\n\
    }\nint main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: Exception
  stderr: 'tmp0qt7wn6f: /tmp/tmp0qt7wn6f.cpp:20: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    long i = 1;\n    while (i <= n) {\n        fact\
    \ *= i;\n        i++;\n    }\n    return fact;\n}\nint main() {\n    auto candidate\
    \ = special_factorial;\n    assert(candidate((4)) == (288));\n    assert(candidate((5))\
    \ == (34560));\n    assert(candidate((7)) == (125411328000));\n    assert(candidate((1))\
    \ == (1));\n}\n"
  status: Exception
  stderr: 'tmp38m4in28: /tmp/tmp38m4in28.cpp:20: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for(long i = 1; i <= n; i++) {\n        fact *=\
    \ i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmplk07ahbr: /tmp/tmplk07ahbr.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (int i = 1; i <= n; i++) {\n        fact *=\
    \ i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmpirw7v2on: /tmp/tmpirw7v2on.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    long temp = 1;\n    long i = 1;\n    while(i<=n)\
    \ {\n        fact = fact * i;\n        temp = temp * i;\n        i++;\n    }\n\
    \    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmpgpc9gb5b: /tmp/tmpgpc9gb5b.cpp:22: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (int i = 1; i <= n; i++) {\n        fact *=\
    \ i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmpirw7v2on: /tmp/tmpirw7v2on.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (int i = 1; i <= n; i++) {\n        fact *=\
    \ i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmpirw7v2on: /tmp/tmpirw7v2on.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    if (n == 0) return 1;\n    return n * special_factorial(n - 1);\n\
    }\nint main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: Exception
  stderr: 'tmpkqm428o7: /tmp/tmpkqm428o7.cpp:15: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    long i;\n    for (i = 1; i <= n; i++) {\n    \
    \    fact *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate\
    \ = special_factorial;\n    assert(candidate((4)) == (288));\n    assert(candidate((5))\
    \ == (34560));\n    assert(candidate((7)) == (125411328000));\n    assert(candidate((1))\
    \ == (1));\n}\n"
  status: Exception
  stderr: 'tmpwu2zqh54: /tmp/tmpwu2zqh54.cpp:19: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (int i = 1; i <= n; i++) {\n        fact *=\
    \ i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmpirw7v2on: /tmp/tmpirw7v2on.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    long temp;\n    for (long i = 1; i <= n; i++)\
    \ {\n        temp = fact * i;\n        fact = temp;\n    }\n    return fact;\n\
    }\nint main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: Exception
  stderr: 'tmp0fi_vjt4: /tmp/tmp0fi_vjt4.cpp:20: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008945
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    if (n == 0)\n        return 1;\n    long res = special_factorial(n\
    \ - 1);\n    return res * n;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmploqkdnyi: /tmp/tmploqkdnyi.cpp:17: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    long i = 1;\n    while (i <= n) {\n        fact\
    \ *= i;\n        i++;\n    }\n    return fact;\n}\nint main() {\n    auto candidate\
    \ = special_factorial;\n    assert(candidate((4)) == (288));\n    assert(candidate((5))\
    \ == (34560));\n    assert(candidate((7)) == (125411328000));\n    assert(candidate((1))\
    \ == (1));\n}\n"
  status: Exception
  stderr: 'tmp38m4in28: /tmp/tmp38m4in28.cpp:20: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    if (n == 0)\n        return 1;\n    long result = 1;\n    for (long\
    \ i = 1; i <= n; i++)\n        result *= i;\n    return result;\n}\nint main()\
    \ {\n    auto candidate = special_factorial;\n    assert(candidate((4)) == (288));\n\
    \    assert(candidate((5)) == (34560));\n    assert(candidate((7)) == (125411328000));\n\
    \    assert(candidate((1)) == (1));\n}\n"
  status: Exception
  stderr: 'tmpcyozuurw: /tmp/tmpcyozuurw.cpp:19: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for(long i = 1; i <= n; i++) {\n        fact *=\
    \ i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmplk07ahbr: /tmp/tmplk07ahbr.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    if (n == 0 || n == 1) {\n        return 1;\n    }\n    return n *\
    \ special_factorial(n - 1);\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmp8fi9e3wb: /tmp/tmp8fi9e3wb.cpp:17: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (int i = 1; i <= n; i++) {\n        fact *=\
    \ i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmpirw7v2on: /tmp/tmpirw7v2on.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    if (n == 0)\n        return 1;\n    long result = 1;\n    for (long\
    \ i = 1; i <= n; i++)\n        result *= i;\n    return result;\n}\nint main()\
    \ {\n    auto candidate = special_factorial;\n    assert(candidate((4)) == (288));\n\
    \    assert(candidate((5)) == (34560));\n    assert(candidate((7)) == (125411328000));\n\
    \    assert(candidate((1)) == (1));\n}\n"
  status: Exception
  stderr: 'tmpcyozuurw: /tmp/tmpcyozuurw.cpp:19: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    long temp = 1;\n    long counter = 1;\n    while\
    \ (n > 0) {\n        fact = fact * temp;\n        temp = counter;\n        counter\
    \ = counter + 1;\n        n = n - 1;\n    }\n    return fact;\n}\nint main() {\n\
    \    auto candidate = special_factorial;\n    assert(candidate((4)) == (288));\n\
    \    assert(candidate((5)) == (34560));\n    assert(candidate((7)) == (125411328000));\n\
    \    assert(candidate((1)) == (1));\n}\n"
  status: Exception
  stderr: 'tmpuqgxexu2: /tmp/tmpuqgxexu2.cpp:23: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008946
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact\
    \ *= i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmputhsdbdk: /tmp/tmputhsdbdk.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long fact = 1;\n    for(long i = 2; i <= n; i++) {\n        fact *=\
    \ i;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: Exception
  stderr: 'tmpji42wdeh: /tmp/tmpji42wdeh.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008945
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// The function will receive an integer as input\
    \ and should return the special\n// factorial of this integer.\nlong special_factorial(long\
    \ n) {\n    long factorial = 1;\n    for (long i = 1; i <= n; i++) {\n       \
    \ factorial *= i;\n    }\n    return factorial;\n}\nint main() {\n    auto candidate\
    \ = special_factorial;\n    assert(candidate((4)) == (288));\n    assert(candidate((5))\
    \ == (34560));\n    assert(candidate((7)) == (125411328000));\n    assert(candidate((1))\
    \ == (1));\n}\n"
  status: Exception
  stderr: 'tmpnpkdou3d: /tmp/tmpnpkdou3d.cpp:18: int main(): Assertion `candidate((4))
    == (288)'' failed.

    '
  stdout: ''
  timestamp: 1660008944

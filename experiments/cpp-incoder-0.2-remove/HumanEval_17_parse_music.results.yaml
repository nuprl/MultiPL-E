language: cpp
name: HumanEval_17_parse_music
results:
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Your code goes here\n    std::vector<long> beats;\n    std::string note;\n \
    \   long beat = 0;\n    long note_count = 0;\n    long note_length = 0;\n    long\
    \ note_length2 = 0;\n    long note_length3 = 0;\n    long note_length4 = 0;\n\
    \    long note_length5 = 0;\n    long note_length6 = 0;\n    long note_length7\
    \ = 0;\n    long note_length8 = 0;\n    long note_length9 = 0;\n    long note_length10\
    \ = 0;\n    long note_length11 = 0;\n    long note_length12 = 0;\n    long note_length13\
    \ = 0;\n    long note_length14 = 0;\n    long note_length15 = 0;\n    long note_length16\
    \ = 0;\n    long note_length17 = 0;\n    long note_length18 = 0;\n    long note_length19\
    \ = 0;\n    long note_length20 = 0;\n    long note_length21 = 0;\n    long note_length22\
    \ = 0;\n    long note_length23 = 0;\n    long note_length24 = 0;\n    long note_length25\
    \ = 0;\n    long note_length26 = 0;\n    long note_length27 = 0;\n    long note_length28\
    \ = 0;\n    long note_length29 = 0;\n    long note_length30 = 0;\n    long note_length31\
    \ = 0;\n    long note_length32 = 0;\n    long note_length33 = 0;\n    long note_length34\
    \ = 0;\n    long note_length35 = 0;\n    long note_length36 = 0;\n    long note_length37\
    \ = 0;\n    long note_length38 = 0;\n    long note_length39 = 0;\n    long note_length40\
    \ = 0;\n    long note_length41 = 0;\n    long note_length42 = 0;\n    long note_length43\
    \ = 0;\n    long note_length44 = 0;\n    long note_length45 = 0;\n    long note_length46\
    \ = 0;\n    long note_length47 = 0;\n    long note_length48 = 0;\n    long note_length49\
    \ = 0;\n    long note_length50 = 0;\n    long note_length51 = 0;\n    long note_length52\
    \ = 0;\n    long note_length53 = 0;\n    long note_length54 = 0;\n    long note_length55\
    \ = 0;\n    long note_length56 = 0;\n    long note_length57 = 0;\n    long note_length58\
    \ = 0;\n    long note_length59 = 0;\n    long note_length60 = 0;\n    long note_length61\
    \ = 0;\n    long note_length62 = 0;\n    long note_length63 = 0;\n    long note_length64\
    \ = 0;\n    long note_length65 = 0;\n    long note_length66 = 0;\n    long note_length67\
    \ = 0;\n    long note_length68 = 0;\n    long note_length69 = 0;\n    long note_length70\n\
    }\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"\
    )) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo99gqunx.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpo99gqunx.cpp:86:1: error: expected initializer before \u2018}\u2019\
    \ token\n   86 | }\n      | ^\n/tmp/tmpo99gqunx.cpp:86:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    long last_note = 0;\n    long last_note_beat = 0;\n    long last_note_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat = 0;\n    long last_note_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat = 0;\n    long last_note_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat = 0;\n\
    \    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat = 0;\n \
    \   long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat = 0;\n\
    \    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_\n}\nint main() {\n    auto candidate = parse_music;\n\
    \    assert(candidate((\"\")) == (std::vector<long>()));\n    assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \   assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1, (long)1,\
    \ (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\")) == (std::vector<long>({(long)2,\
    \ (long)2, (long)1, (long)1, (long)4, (long)4, (long)4, (long)4})));\n    assert(candidate((\"\
    o| .| o| .| o o| o o|\")) == (std::vector<long>({(long)2, (long)1, (long)2, (long)1,\
    \ (long)4, (long)2, (long)4, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0po2xlp1.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp0po2xlp1.cpp:30:10: error: redeclaration of \u2018long int last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\u2019\
    \n   30 |     long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp0po2xlp1.cpp:29:10: note: \u2018long int last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\u2019\
    \ previously declared here\n   29 |     long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp0po2xlp1.cpp:33:10: error: redeclaration of \u2018long int last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\u2019\
    \n   33 |     long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp0po2xlp1.cpp:32:10: note: \u2018long int last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\u2019\
    \ previously declared here\n   32 |     long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp0po2xlp1.cpp:36:1: error: expected initializer before \u2018}\u2019 token\n\
    \   36 | }\n      | ^\n/tmp/tmp0po2xlp1.cpp:36:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long note_count = 0;\n\
    \    for (auto c : music_string) {\n        if (c == 'o') {\n            beat_count\
    \ += 4;\n            beats.push_back(beat);\n            beat = 0;\n         \
    \   note_count = 0;\n        } else if (c == 'o|') {\n            beat_count +=\
    \ 2;\n            beats.push_back(beat);\n            beat = 0;\n            note_count\
    \ = 0;\n        } else if (c == '.|') {\n            beat_count += 1;\n      \
    \      beats.push_back(beat);\n            beat = 0;\n            note_count =\
    \ 0;\n        } else if (c == '|') {\n            beat_count += 1;\n         \
    \   beats.push_back(beat);\n            beat = 0;\n            note_count = 0;\n\
    \        } else if (c == '.') {\n            beat_count += 1;\n            beats.push_back(beat);\n\
    \            beat = 0;\n            note_count = 0;\n        } else {\n      \
    \      beat += 1;\n            note_count += 1;\n        }\n    }\n    return\
    \ beats;\n}\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\
    \")) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpa8ypalaj.cpp:21:25: warning: multi-character character constant\
    \ [-Wmultichar]\n   21 |         } else if (c == 'o|') {\n      |            \
    \             ^~~~\n/tmp/tmpa8ypalaj.cpp:26:25: warning: multi-character character\
    \ constant [-Wmultichar]\n   26 |         } else if (c == '.|') {\n      |   \
    \                      ^~~~\n/tmp/tmpa8ypalaj.cpp: In function \u2018std::vector<long\
    \ int> parse_music(std::string)\u2019:\n/tmp/tmpa8ypalaj.cpp:17:13: error: \u2018\
    beat_count\u2019 was not declared in this scope\n   17 |             beat_count\
    \ += 4;\n      |             ^~~~~~~~~~\n/tmp/tmpa8ypalaj.cpp:22:13: error: \u2018\
    beat_count\u2019 was not declared in this scope\n   22 |             beat_count\
    \ += 2;\n      |             ^~~~~~~~~~\n/tmp/tmpa8ypalaj.cpp:27:13: error: \u2018\
    beat_count\u2019 was not declared in this scope\n   27 |             beat_count\
    \ += 1;\n      |             ^~~~~~~~~~\n/tmp/tmpa8ypalaj.cpp:32:13: error: \u2018\
    beat_count\u2019 was not declared in this scope\n   32 |             beat_count\
    \ += 1;\n      |             ^~~~~~~~~~\n/tmp/tmpa8ypalaj.cpp:37:13: error: \u2018\
    beat_count\u2019 was not declared in this scope\n   37 |             beat_count\
    \ += 1;\n      |             ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660129737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long current_beat = 0;\n\
    \    long current_note = 0;\n    long current_note_length = 0;\n    long current_note_length_in_bpm\
    \ = 1;\n    long current_note_length_in_octave = 1;\n    long current_note_length_in_notes\
    \ = 1;\n    long current_note_length_in_notes_per_beat = 1;\n    long current_note_length_in_notes_per_octave\
    \ = 1;\n    long current_note_length_in_notes_per_note = 1;\n    long current_note_length_in_notes_per_notes_per_beat\
    \ = 1;\n    long current_note_length_in_notes_per_notes_per_octave = 1;\n    long\
    \ current_note_length_in_notes_per_notes_per_beat = 1;\n    long current_note_length_in_notes_per_notes_per_octave\
    \ = 1;\n    long current_note_length_in_notes_per_notes_per_beat = 1;\n    long\
    \ current_note_length_in_notes_per_notes_per_octave = 1;\n    long current_note_length_in_notes_per_notes_per_beat\
    \ = 1;\n    long current_note_length_in_notes_per_notes_per_octave = 1;\n    long\
    \ current_note_length_in_notes_per_notes_per_beat = 1;\n    long current_note_length_in_notes_per_notes_per_octave\
    \ = 1;\n    long current_note_length_in_notes_per_notes_per_beat = 1;\n    long\
    \ current_note_length_in_notes_per_notes_per_octave = 1;\n    long current_note_length_in_notes_per_notes_per_beat\
    \ = 1;\n    long current_note_length_in_notes_per_notes_per_octave = 1;\n    long\
    \ current_note_length_in_notes_per_notes_per_beat = 1;\n    long current_note_length_in_notes_per_notes_per_octave\
    \ = 1;\n    long current_note_length_in_notes_per_notes_per_beat = 1;\n    long\
    \ current_note_length_in_notes_per_notes_per_octave = 1;\n    long current_note_length_in_notes_per_notes_per_beat\
    \ = 1;\n    long current_note_length_in_notes_per_notes_per_octave = 1;\n    long\
    \ current_note_length_in_notes_per_notes_per_beat = 1;\n    long current_note_length_in_notes_per_notes_per_octave\
    \ = 1;\n    long current_note_length_in_notes_per_notes_per_beat = 1;\n    long\
    \ current_note_length_in_notes_per_notes_per_octave = 1;\n    long current_note_length_in_notes_per_notes_per_beat\
    \ = 1;\n    long current_note_length_in_notes_per_notes_per_octave = 1;\n    long\
    \ current_note_length_in_notes_per_notes_per_beat = 1;\n    long current_note_length_in_notes_per_notes_per_octave\
    \ = 1;\n    long current_note_length_in_notes_per_notes_per_beat = 1;\n    long\
    \ current_note_length_in_notes_per_notes_per_octave = 1;\n    long current_note_length_in_\n\
    }\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"\
    )) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp3nnx_zz.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpp3nnx_zz.cpp:25:10: error: redeclaration of \u2018long int current_note_length_in_notes_per_notes_per_beat\u2019\
    \n   25 |     long current_note_length_in_notes_per_notes_per_beat = 1;\n    \
    \  |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpp3nnx_zz.cpp:23:10:\
    \ note: \u2018long int current_note_length_in_notes_per_notes_per_beat\u2019 previously\
    \ declared here\n   23 |     long current_note_length_in_notes_per_notes_per_beat\
    \ = 1;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpp3nnx_zz.cpp:26:10:\
    \ error: redeclaration of \u2018long int current_note_length_in_notes_per_notes_per_octave\u2019\
    \n   26 |     long current_note_length_in_notes_per_notes_per_octave = 1;\n  \
    \    |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpp3nnx_zz.cpp:24:10:\
    \ note: \u2018long int current_note_length_in_notes_per_notes_per_octave\u2019\
    \ previously declared here\n   24 |     long current_note_length_in_notes_per_notes_per_octave\
    \ = 1;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpp3nnx_zz.cpp:27:10:\
    \ error: redeclaration of \u2018long int current_note_length_in_notes_per_notes_per_beat\u2019\
    \n   27 |     long current_note_length_in_notes_per_notes_per_beat = 1;\n    \
    \  |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpp3nnx_zz.cpp:23:10:\
    \ note: \u2018long int current_note_length_in_notes_per_notes_per_beat\u2019 previously\
    \ declared here\n   23 |     long current_note_length_in_notes_per_notes_per_beat\
    \ = 1;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpp3nnx_zz.cpp:28:10:\
    \ error: redeclaration of \u2018long int current_note_length_in_notes_per_notes_per_octave\u2019\
    \n   28 |     long current_note_length_in_notes_per_notes_per_octave = 1;\n  \
    \    |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpp3nnx_zz.cpp:24:10:\
    \ note: \u2018long int current_note_length_in_notes_per_notes_per_octave\u2019\
    \ previously declared here\n   24 |     long current_note_length_in_notes_p"
  stdout: ''
  timestamp: 1660129737
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long current_beat = 0;\n\
    \    long current_note = 0;\n    long current_note_length = 0;\n    long current_note_length2\
    \ = 0;\n    long current_note_length3 = 0;\n    long current_note_length4 = 0;\n\
    \    long current_note_length5 = 0;\n    long current_note_length6 = 0;\n    long\
    \ current_note_length7 = 0;\n    long current_note_length8 = 0;\n    long current_note_length9\
    \ = 0;\n    long current_note_length10 = 0;\n    long current_note_length11 =\
    \ 0;\n    long current_note_length12 = 0;\n    long current_note_length13 = 0;\n\
    \    long current_note_length14 = 0;\n    long current_note_length15 = 0;\n  \
    \  long current_note_length16 = 0;\n    long current_note_length17 = 0;\n    long\
    \ current_note_length18 = 0;\n    long current_note_length19 = 0;\n    long current_note_length20\
    \ = 0;\n    long current_note_length21 = 0;\n    long current_note_length22 =\
    \ 0;\n    long current_note_length23 = 0;\n    long current_note_length24 = 0;\n\
    \    long current_note_length25 = 0;\n    long current_note_length26 = 0;\n  \
    \  long current_note_length27 = 0;\n    long current_note_length28 = 0;\n    long\
    \ current_note_length29 = 0;\n    long current_note_length30 = 0;\n    long current_note_length31\
    \ = 0;\n    long current_note_length32 = 0;\n    long current_note_length33 =\
    \ 0;\n    long current_note_length34 = 0;\n    long current_note_length35 = 0;\n\
    \    long current_note_length36 = 0;\n    long current_note_length37 = 0;\n  \
    \  long current_note_length38 = 0;\n    long current_note_length39 = 0;\n    long\
    \ current_note_length40 = 0;\n    long current_note_length41 = 0;\n    long current_note_length42\
    \ = 0;\n    long current_note_length43 = 0;\n    long current_note_length44 =\
    \ 0;\n    long current_note_length45 = 0;\n    long current_note_length46 = 0;\n\
    \    long current_note_length47 = 0;\n    long current_note_length48 = 0;\n  \
    \  long current_note_length49 = 0;\n    long current_note_length50 = 0;\n    long\
    \ current_note_length51 = 0;\n    long current_note_length52 = 0;\n    long current_note_length53\
    \ = 0;\n    long current_note_length54 = 0;\n    long current_note_length55 =\
    \ 0;\n    long current_note_length56 = 0;\n    long current_note_length57 = 0;\n\
    \    long current_note_length58 = 0;\n    long current_note_length59 = 0;\n  \
    \  long current_note_length60 = 0;\n    long current_note_length61 = 0;\n\n}\n\
    int main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"))\
    \ == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: Exception
  stderr: 'tmpt3bebbui: /tmp/tmpt3bebbui.cpp:81: int main(): Assertion `candidate((""))
    == (std::vector<long>())'' failed.

    '
  stdout: ''
  timestamp: 1660129738
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    bool is_note = false;\n    bool is_last_note = false;\n    for (char c :\
    \ music_string) {\n        if (c == 'o') {\n            is_note = true;\n    \
    \        beat = 0;\n            last_beat = 0;\n            note = \"\";\n   \
    \         is_last_note = false;\n        } else if (c == '|') {\n            is_note\
    \ = true;\n            beat = 0;\n            last_beat = 0;\n            note\
    \ = \"\";\n            is_last_note = true;\n        } else if (c == ',') {\n\
    \            beats.push_back(beat);\n            beat = 0;\n            last_beat\
    \ = 0;\n            note = \"\";\n            is_last_note = false;\n        }\
    \ else if (is_note) {\n            if (c == '.') {\n                beat += 1;\n\
    \                note += \".\";\n            } else if (c == '|') {\n        \
    \        beat += 1;\n                note += \"|\";\n            } else if (c\
    \ == 'o') {\n                beat += 1;\n                note += \"o\";\n    \
    \        } else if (c == 'o|') {\n                beat += 1;\n               \
    \ note += \"o|\";\n            } else {\n                note += c;\n        \
    \    }\n            is_note = false;\n        } else if (is_last_note) {\n   \
    \         if (c == '.') {\n                beat += 1;\n                last_beat\
    \ += 1;\n            } else if (c == '|') {\n                beat += 1;\n    \
    \            last_beat += 1;\n            } else if (c == 'o') {\n           \
    \     beat += 1;\n                last_beat += 1;\n            } else if (c ==\
    \ 'o|') {\n                beat += 1;\n                last_beat += 1;\n     \
    \       } else {\n                last_beat += 1;\n            }\n           \
    \ is_last_note = false;\n        } else {\n            note += c;\n        }\n\
    \    }\n    beats.push_back(beat);\n    return beats;\n}\nint main() {\n    auto\
    \ candidate = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n\
    \    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: Exception
  stderr: 'tmpjf9r_m8i: /tmp/tmpjf9r_m8i.cpp:79: int main(): Assertion `candidate((""))
    == (std::vector<long>())'' failed.

    '
  stdout: ''
  timestamp: 1660129738
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Your code goes here\n    std::vector<long> beats;\n    std::string note;\n \
    \   long beat = 0;\n    long beats = 0;\n    long notes = 0;\n    long note =\
    \ 0;\n    long notes_total = 0;\n    long notes_half = 0;\n    long notes_quarter\
    \ = 0;\n    long notes_whole = 0;\n    long notes_total = 0;\n    long notes_half\
    \ = 0;\n    long notes_quarter = 0;\n    long notes_whole = 0;\n    long notes_total\
    \ = 0;\n    long notes_half = 0;\n    long notes_quarter = 0;\n    long notes_whole\
    \ = 0;\n    long notes_total = 0;\n    long notes_half = 0;\n    long notes_quarter\
    \ = 0;\n    long notes_whole = 0;\n    long notes_total = 0;\n    long notes_half\
    \ = 0;\n    long notes_quarter = 0;\n    long notes_whole = 0;\n    long notes_total\
    \ = 0;\n    long notes_half = 0;\n    long notes_quarter = 0;\n    long notes_whole\
    \ = 0;\n    long notes_total = 0;\n    long notes_half = 0;\n    long notes_quarter\
    \ = 0;\n    long notes_whole = 0;\n    long notes_total = 0;\n    long notes_half\
    \ = 0;\n    long notes_quarter = 0;\n    long notes_whole = 0;\n    long notes_total\
    \ = 0;\n    long notes_half = 0;\n    long notes_quarter = 0;\n    long notes_whole\
    \ = 0;\n    long notes_total = 0;\n    long notes_half = 0;\n    long notes_quarter\
    \ = 0;\n    long notes_whole = 0;\n    long notes_total = 0;\n    long notes_half\
    \ = 0;\n    long notes_quarter = 0;\n    long notes_whole = 0;\n    long notes_total\
    \ = 0;\n    long notes_half = 0;\n    long notes_quarter = 0;\n    long notes_whole\
    \ = 0;\n    long notes_total = 0;\n    long notes_half = 0;\n    long notes_quarter\
    \ = 0;\n    long notes_whole = 0;\n    long notes_total = 0;\n    long notes_half\
    \ = 0;\n    long notes_quarter = 0;\n    long notes_whole = 0;\n    long notes_total\
    \ = 0;\n    long notes_half = 0;\n    long notes_quarter = 0;\n    long notes_whole\
    \ = 0;\n    long notes_total = 0;\n    long notes_half = 0;\n    long notes_quarter\
    \ = 0;\n    long notes_whole = 0;\n    long notes_total = 0;\n    long note\n\
    }\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"\
    )) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5ep2xnmm.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp5ep2xnmm.cpp:15:10: error: conflicting declaration \u2018long int beats\u2019\
    \n   15 |     long beats = 0;\n      |          ^~~~~\n/tmp/tmp5ep2xnmm.cpp:12:23:\
    \ note: previous declaration as \u2018std::vector<long int> beats\u2019\n   12\
    \ |     std::vector<long> beats;\n      |                       ^~~~~\n/tmp/tmp5ep2xnmm.cpp:17:10:\
    \ error: conflicting declaration \u2018long int note\u2019\n   17 |     long note\
    \ = 0;\n      |          ^~~~\n/tmp/tmp5ep2xnmm.cpp:13:17: note: previous declaration\
    \ as \u2018std::string note\u2019\n   13 |     std::string note;\n      |    \
    \             ^~~~\n/tmp/tmp5ep2xnmm.cpp:22:10: error: redeclaration of \u2018\
    long int notes_total\u2019\n   22 |     long notes_total = 0;\n      |       \
    \   ^~~~~~~~~~~\n/tmp/tmp5ep2xnmm.cpp:18:10: note: \u2018long int notes_total\u2019\
    \ previously declared here\n   18 |     long notes_total = 0;\n      |       \
    \   ^~~~~~~~~~~\n/tmp/tmp5ep2xnmm.cpp:23:10: error: redeclaration of \u2018long\
    \ int notes_half\u2019\n   23 |     long notes_half = 0;\n      |          ^~~~~~~~~~\n\
    /tmp/tmp5ep2xnmm.cpp:19:10: note: \u2018long int notes_half\u2019 previously declared\
    \ here\n   19 |     long notes_half = 0;\n      |          ^~~~~~~~~~\n/tmp/tmp5ep2xnmm.cpp:24:10:\
    \ error: redeclaration of \u2018long int notes_quarter\u2019\n   24 |     long\
    \ notes_quarter = 0;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp5ep2xnmm.cpp:20:10:\
    \ note: \u2018long int notes_quarter\u2019 previously declared here\n   20 | \
    \    long notes_quarter = 0;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp5ep2xnmm.cpp:25:10:\
    \ error: redeclaration of \u2018long int notes_whole\u2019\n   25 |     long notes_whole\
    \ = 0;\n      |          ^~~~~~~~~~~\n/tmp/tmp5ep2xnmm.cpp:21:10: note: \u2018\
    long int notes_whole\u2019 previously declared here\n   21 |     long notes_whole\
    \ = 0;\n      |          ^~~~~~~~~~~\n/tmp/tmp5ep2xnmm.cpp:26:10: error: redeclaration\
    \ of \u2018long int notes_total\u2019\n   26 |     long notes_total = 0;\n   \
    \   |          ^~~~~~~~~~~\n/tmp/tmp5ep2xnmm.cpp:18:10: note: \u2018long int notes_total\u2019\
    \ previously declared her"
  stdout: ''
  timestamp: 1660129737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    long last_note = 0;\n    long note_count = 0;\n    long note_length = 0;\n\
    \    long note_length_count = 0;\n    long note_length_index = 0;\n    long note_length_index2\
    \ = 0;\n    long note_length_index3 = 0;\n    long note_length_index4 = 0;\n \
    \   long note_length_index5 = 0;\n    long note_length_index6 = 0;\n    long note_length_index7\
    \ = 0;\n    long note_length_index8 = 0;\n    long note_length_index9 = 0;\n \
    \   long note_length_index10 = 0;\n    long note_length_index11 = 0;\n    long\
    \ note_length_index12 = 0;\n    long note_length_index13 = 0;\n    long note_length_index14\
    \ = 0;\n    long note_length_index15 = 0;\n    long note_length_index16 = 0;\n\
    \    long note_length_index17 = 0;\n    long note_length_index18 = 0;\n    long\
    \ note_length_index19 = 0;\n    long note_length_index20 = 0;\n    long note_length_index21\
    \ = 0;\n    long note_length_index22 = 0;\n    long note_length_index23 = 0;\n\
    \    long note_length_index24 = 0;\n    long note_length_index25 = 0;\n    long\
    \ note_length_index26 = 0;\n    long note_length_index27 = 0;\n    long note_length_index28\
    \ = 0;\n    long note_length_index29 = 0;\n    long note_length_index30 = 0;\n\
    \    long note_length_index31 = 0;\n    long note_length_index32 = 0;\n    long\
    \ note_length_index33 = 0;\n    long note_length_index34 = 0;\n    long note_length_index35\
    \ = 0;\n    long note_length_index36 = 0;\n    long note_length_index37 = 0;\n\
    \    long note_length_index38 = 0;\n    long note_length_index39 = 0;\n    long\
    \ note_length_index40 = 0;\n    long note_length_index41 = 0;\n    long note_length_index42\
    \ = 0;\n    long note_length_index43 = 0;\n    long note_length_index44 = 0;\n\
    \    long note_length_index45 = 0;\n    long note_length_index46 = 0;\n    long\
    \ note_length_index47 = 0;\n    long note_length_index48 = 0;\n    long note_length_index49\
    \ = 0;\n    long note_length_index50 = 0;\n    long note_length_index51 = 0;\n\
    \    long note_length_index52 = 0;\n    long note_length_index53 = 0;\n    long\
    \ note_length_index54 = 0;\n    long note_length_index55 = 0;\n    long note_length_index56\
    \ = 0;\n    long note_length_index57 = 0;\n    long note_length_index58 = 0;\n\
    \    long note_length_index\n}\nint main() {\n    auto candidate = parse_music;\n\
    \    assert(candidate((\"\")) == (std::vector<long>()));\n    assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \   assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1, (long)1,\
    \ (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\")) == (std::vector<long>({(long)2,\
    \ (long)2, (long)1, (long)1, (long)4, (long)4, (long)4, (long)4})));\n    assert(candidate((\"\
    o| .| o| .| o o| o o|\")) == (std::vector<long>({(long)2, (long)1, (long)2, (long)1,\
    \ (long)4, (long)2, (long)4, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6vyg_0_l.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp6vyg_0_l.cpp:78:1: error: expected initializer before \u2018}\u2019\
    \ token\n   78 | }\n      | ^\n/tmp/tmp6vyg_0_l.cpp:78:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129737
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    bool is_note = false;\n    for (char c : music_string) {\n        if (c ==\
    \ 'o') {\n            note = note.empty() ? \"o\" : note + \"|\";\n          \
    \  is_note = true;\n            beat = 0;\n            last_beat = 0;\n      \
    \  } else if (c == '|') {\n            note = note.empty() ? \".|\" : note + \"\
    o\";\n            is_note = false;\n            beat = 0;\n            last_beat\
    \ = 0;\n        } else if (is_note) {\n            beat += 1;\n            last_beat\
    \ = beat;\n        }\n    }\n    beats.push_back(last_beat);\n    return beats;\n\
    }\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"\
    )) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: Exception
  stderr: 'tmp_mpjenf4: /tmp/tmp_mpjenf4.cpp:37: int main(): Assertion `candidate((""))
    == (std::vector<long>())'' failed.

    '
  stdout: ''
  timestamp: 1660129737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    long last_note = 0;\n    long last_note_beat = 0;\n    long note_length =\
    \ 0;\n    long note_length_in_bpm = 48;\n    long note_length_in_beats = note_length_in_bpm\
    \ / 60;\n    long note_length_in_seconds = note_length_in_beats * 60;\n    long\
    \ note_length_in_milliseconds = note_length_in_seconds * 1000;\n    long note_length_in_ticks\
    \ = note_length_in_milliseconds / 1000;\n    long note_length_in_ticks_rounded\
    \ = (note_length_in_ticks + 1) / 2;\n    long note_length_in_ticks_rounded_down\
    \ = note_length_in_ticks_rounded - 1;\n    long note_length_in_ticks_rounded_up\
    \ = note_length_in_ticks_rounded + 1;\n    long note_length_in_ticks_rounded_down_in_bpm\
    \ = note_length_in_ticks_rounded_down * 60;\n    long note_length_in_ticks_rounded_up_in_bpm\
    \ = note_length_in_ticks_rounded_up * 60;\n    long note_length_in_ticks_rounded_down_in_beats\
    \ = note_length_in_ticks_rounded_down / 60;\n    long note_length_in_ticks_rounded_up_in_beats\
    \ = note_length_in_ticks_rounded_up / 60;\n    long note_length_in_ticks_rounded_down_in_seconds\
    \ = note_length_in_ticks_rounded_down * 60;\n    long note_length_in_ticks_rounded_up_in_seconds\
    \ = note_length_in_ticks_rounded_up * 60;\n    long note_length_in_ticks_rounded_down_in_milliseconds\
    \ = note_length_in_ticks_rounded_down * 1000;\n    long note_length_in_ticks_rounded_up_in_milliseconds\
    \ = note_length_in_ticks_rounded_up * 1000;\n    long note_length_in_ticks_rounded_down_in_ticks\
    \ = note_length_in_ticks_rounded_down / 1000;\n    long note_length_in_ticks_rounded_up_in_ticks\
    \ = note_length_in_ticks_rounded_up / 1000;\n    long note_length_in_ticks_rounded_down_in_ticks_rounded\
    \ = note_length_in_ticks_rounded_down / 2;\n    long note_length_in_ticks_rounded_up_in_ticks_rounded\
    \ = note_length_in_ticks_rounded_up / 2;\n    long note_length_in_ticks_rounded_down_in_ticks_rounded_down\
    \ = note_length_in_ticks_rounded_down - 1;\n    long note_length_in_ticks_rounded_up_in_ticks_rounded_up\
    \ = note_length_in_\n}\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\
    \")) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp618zpdu5.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp618zpdu5.cpp:39:64: error: \u2018note_length_in_\u2019 was not declared\
    \ in this scope; did you mean \u2018note_length_in_bpm\u2019?\n   39 |     long\
    \ note_length_in_ticks_rounded_up_in_ticks_rounded_up = note_length_in_\n    \
    \  |                                                                ^~~~~~~~~~~~~~~\n\
    \      |                                                                note_length_in_bpm\n\
    /tmp/tmp618zpdu5.cpp:40:1: warning: no return statement in function returning\
    \ non-void [-Wreturn-type]\n   40 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660129737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    long last_note = 0;\n    long last_note_beat = 0;\n    long note_length =\
    \ 0;\n    long note_length2 = 0;\n    long note_length3 = 0;\n    long note_length4\
    \ = 0;\n    long note_length5 = 0;\n    long note_length6 = 0;\n    long note_length7\
    \ = 0;\n    long note_length8 = 0;\n    long note_length9 = 0;\n    long note_length10\
    \ = 0;\n    long note_length11 = 0;\n    long note_length12 = 0;\n    long note_length13\
    \ = 0;\n    long note_length14 = 0;\n    long note_length15 = 0;\n    long note_length16\
    \ = 0;\n    long note_length17 = 0;\n    long note_length18 = 0;\n    long note_length19\
    \ = 0;\n    long note_length20 = 0;\n    long note_length21 = 0;\n    long note_length22\
    \ = 0;\n    long note_length23 = 0;\n    long note_length24 = 0;\n    long note_length25\
    \ = 0;\n    long note_length26 = 0;\n    long note_length27 = 0;\n    long note_length28\
    \ = 0;\n    long note_length29 = 0;\n    long note_length30 = 0;\n    long note_length31\
    \ = 0;\n    long note_length32 = 0;\n    long note_length33 = 0;\n    long note_length34\
    \ = 0;\n    long note_length35 = 0;\n    long note_length36 = 0;\n    long note_length37\
    \ = 0;\n    long note_length38 = 0;\n    long note_length39 = 0;\n    long note_length40\
    \ = 0;\n    long note_length41 = 0;\n    long note_length42 = 0;\n    long note_length43\
    \ = 0;\n    long note_length44 = 0;\n    long note_length45 = 0;\n    long note_length46\
    \ = 0;\n    long note_length47 = 0;\n    long note_length48 = 0;\n    long note_length49\
    \ = 0;\n    long note_length50 = 0;\n    long note_length51 = 0;\n    long note_length52\
    \ = 0;\n    long note_length53 = 0;\n    long note_length54 = 0;\n    long note_length55\
    \ = 0;\n    long note_length56 = 0;\n    long note_length57 = 0;\n    long note_length58\
    \ = 0;\n    long note_length59 = 0;\n    long note_length60 = 0;\n    long note_length61\
    \ = 0;\n    long note_length62 = 0;\n    long note_length63 = 0;\n    long note_length64\
    \ = 0;\n    long note_length65 = 0;\n    long note_length66 = 0;\n    long note_length67\
    \ = 0;\n    long note_length68 = 0;\n    long note_length69\n}\nint main() {\n\
    \    auto candidate = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n\
    \    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp15oe946b.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp15oe946b.cpp:86:1: error: expected initializer before \u2018}\u2019\
    \ token\n   86 | }\n      | ^\n/tmp/tmp15oe946b.cpp:86:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Your code here\n    std::vector<long> beats;\n    std::string note;\n    long\
    \ beat = 0;\n    long beats = 0;\n    long notes = 0;\n    long note = 0;\n  \
    \  long note_count = 0;\n    long note_length = 0;\n    long note_length_count\
    \ = 0;\n    long note_length = 0;\n    long note_length_count2 = 0;\n    long\
    \ note_length2 = 0;\n    long note_length_count3 = 0;\n    long note_length3 =\
    \ 0;\n    long note_length_count4 = 0;\n    long note_length4 = 0;\n    long note_length_count5\
    \ = 0;\n    long note_length5 = 0;\n    long note_length_count6 = 0;\n    long\
    \ note_length6 = 0;\n    long note_length_count7 = 0;\n    long note_length7 =\
    \ 0;\n    long note_length_count8 = 0;\n    long note_length8 = 0;\n    long note_length_count9\
    \ = 0;\n    long note_length9 = 0;\n    long note_length_count10 = 0;\n    long\
    \ note_length10 = 0;\n    long note_length_count11 = 0;\n    long note_length11\
    \ = 0;\n    long note_length_count12 = 0;\n    long note_length12 = 0;\n    long\
    \ note_length_count13 = 0;\n    long note_length13 = 0;\n    long note_length_count14\
    \ = 0;\n    long note_length14 = 0;\n    long note_length_count15 = 0;\n    long\
    \ note_length15 = 0;\n    long note_length_count16 = 0;\n    long note_length16\
    \ = 0;\n    long note_length_count17 = 0;\n    long note_length17 = 0;\n    long\
    \ note_length_count18 = 0;\n    long note_length18 = 0;\n    long note_length_count19\
    \ = 0;\n    long note_length19 = 0;\n    long note_length_count20 = 0;\n    long\
    \ note_length20 = 0;\n    long note_length_count21 = 0;\n    long note_length21\
    \ = 0;\n    long note_length_count22 = 0;\n    long note_length22 = 0;\n    long\
    \ note_length_count23 = 0;\n    long note_length23 = 0;\n    long note_length_count24\
    \ = 0;\n    long note_length24 = 0;\n    long note_length_count25 = 0;\n    long\
    \ note_length25 = 0;\n    long note_length_count26 = 0;\n    long note_length26\
    \ = 0;\n    long note_length_count27 = 0;\n    long note_length27 = 0;\n    long\
    \ note_length_count28 = 0;\n    long note_length28 = 0;\n    long note_length_count29\
    \ = 0;\n    long note_length29 = 0;\n    long note_length_count30 = 0;\n    long\
    \ note_length30 = 0;\n    long note_length_count31 = 0;\n    long note_length31\
    \ = 0;\n    long note_length_count32 = 0;\n\n}\nint main() {\n    auto candidate\
    \ = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n  \
    \  assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4,\
    \ (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpj3i6e967.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpj3i6e967.cpp:15:10: error: conflicting declaration \u2018long int beats\u2019\
    \n   15 |     long beats = 0;\n      |          ^~~~~\n/tmp/tmpj3i6e967.cpp:12:23:\
    \ note: previous declaration as \u2018std::vector<long int> beats\u2019\n   12\
    \ |     std::vector<long> beats;\n      |                       ^~~~~\n/tmp/tmpj3i6e967.cpp:17:10:\
    \ error: conflicting declaration \u2018long int note\u2019\n   17 |     long note\
    \ = 0;\n      |          ^~~~\n/tmp/tmpj3i6e967.cpp:13:17: note: previous declaration\
    \ as \u2018std::string note\u2019\n   13 |     std::string note;\n      |    \
    \             ^~~~\n/tmp/tmpj3i6e967.cpp:21:10: error: redeclaration of \u2018\
    long int note_length\u2019\n   21 |     long note_length = 0;\n      |       \
    \   ^~~~~~~~~~~\n/tmp/tmpj3i6e967.cpp:19:10: note: \u2018long int note_length\u2019\
    \ previously declared here\n   19 |     long note_length = 0;\n      |       \
    \   ^~~~~~~~~~~\n/tmp/tmpj3i6e967.cpp:84:1: warning: no return statement in function\
    \ returning non-void [-Wreturn-type]\n   84 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660129737
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long current_beat = 0;\n\
    \    long current_note = 0;\n    long current_note_length = 0;\n    long current_note_length2\
    \ = 0;\n    long current_note_length3 = 0;\n    long current_note_length4 = 0;\n\
    \    long current_note_length5 = 0;\n    long current_note_length6 = 0;\n    long\
    \ current_note_length7 = 0;\n    long current_note_length8 = 0;\n    long current_note_length9\
    \ = 0;\n    long current_note_length10 = 0;\n    long current_note_length11 =\
    \ 0;\n    long current_note_length12 = 0;\n    long current_note_length13 = 0;\n\
    \    long current_note_length14 = 0;\n    long current_note_length15 = 0;\n  \
    \  long current_note_length16 = 0;\n    long current_note_length17 = 0;\n    long\
    \ current_note_length18 = 0;\n    long current_note_length19 = 0;\n    long current_note_length20\
    \ = 0;\n    long current_note_length21 = 0;\n    long current_note_length22 =\
    \ 0;\n    long current_note_length23 = 0;\n    long current_note_length24 = 0;\n\
    \    long current_note_length25 = 0;\n    long current_note_length26 = 0;\n  \
    \  long current_note_length27 = 0;\n    long current_note_length28 = 0;\n    long\
    \ current_note_length29 = 0;\n    long current_note_length30 = 0;\n    long current_note_length31\
    \ = 0;\n    long current_note_length32 = 0;\n    long current_note_length33 =\
    \ 0;\n    long current_note_length34 = 0;\n    long current_note_length35 = 0;\n\
    \    long current_note_length36 = 0;\n    long current_note_length37 = 0;\n  \
    \  long current_note_length38 = 0;\n    long current_note_length39 = 0;\n    long\
    \ current_note_length40 = 0;\n    long current_note_length41 = 0;\n    long current_note_length42\
    \ = 0;\n    long current_note_length43 = 0;\n    long current_note_length44 =\
    \ 0;\n    long current_note_length45 = 0;\n    long current_note_length46 = 0;\n\
    \    long current_note_length47 = 0;\n    long current_note_length48 = 0;\n  \
    \  long current_note_length49 = 0;\n    long current_note_length50 = 0;\n    long\
    \ current_note_length51 = 0;\n    long current_note_length52 = 0;\n    long current_note_length53\
    \ = 0;\n    long current_note_length54 = 0;\n    long current_note_length55 =\
    \ 0;\n    long current_note_length56 = 0;\n    long current_note_length57 = 0;\n\
    \    long current_note_length58 = 0;\n    long current_note_length59 = 0;\n  \
    \  long current_note_length60 = 0;\n    long current_note_length61 = 0;\n\n}\n\
    int main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"))\
    \ == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: Exception
  stderr: 'tmpt3bebbui: /tmp/tmpt3bebbui.cpp:81: int main(): Assertion `candidate((""))
    == (std::vector<long>())'' failed.

    '
  stdout: ''
  timestamp: 1660129738
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Your code goes here\n    std::vector<long> beats;\n    std::string note;\n \
    \   long beat = 0;\n    long rest = 0;\n    long rests = 0;\n    long rests_index\
    \ = 0;\n    long rests_index2 = 0;\n    long rests_index3 = 0;\n    long rests_index4\
    \ = 0;\n    long rests_index5 = 0;\n    long rests_index6 = 0;\n    long rests_index7\
    \ = 0;\n    long rests_index8 = 0;\n    long rests_index9 = 0;\n    long rests_index10\
    \ = 0;\n    long rests_index11 = 0;\n    long rests_index12 = 0;\n    long rests_index13\
    \ = 0;\n    long rests_index14 = 0;\n    long rests_index15 = 0;\n    long rests_index16\
    \ = 0;\n    long rests_index17 = 0;\n    long rests_index18 = 0;\n    long rests_index19\
    \ = 0;\n    long rests_index20 = 0;\n    long rests_index21 = 0;\n    long rests_index22\
    \ = 0;\n    long rests_index23 = 0;\n    long rests_index24 = 0;\n    long rests_index25\
    \ = 0;\n    long rests_index26 = 0;\n    long rests_index27 = 0;\n    long rests_index28\
    \ = 0;\n    long rests_index29 = 0;\n    long rests_index30 = 0;\n    long rests_index31\
    \ = 0;\n    long rests_index32 = 0;\n    long rests_index33 = 0;\n    long rests_index34\
    \ = 0;\n    long rests_index35 = 0;\n    long rests_index36 = 0;\n    long rests_index37\
    \ = 0;\n    long rests_index38 = 0;\n    long rests_index39 = 0;\n    long rests_index40\
    \ = 0;\n    long rests_index41 = 0;\n    long rests_index42 = 0;\n    long rests_index43\
    \ = 0;\n    long rests_index44 = 0;\n    long rests_index45 = 0;\n    long rests_index46\
    \ = 0;\n    long rests_index47 = 0;\n    long rests_index48 = 0;\n    long rests_index49\
    \ = 0;\n    long rests_index50 = 0;\n    long rests_index51 = 0;\n    long rests_index52\
    \ = 0;\n    long rests_index53 = 0;\n    long rests_index54 = 0;\n    long rests_index55\
    \ = 0;\n    long rests_index56 = 0;\n    long rests_index57 = 0;\n    long rests_index58\
    \ = 0;\n    long rests_index59 = 0;\n    long rests_index60 = 0;\n    long rests_\n\
    }\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"\
    )) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmposam3umi.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmposam3umi.cpp:78:1: error: expected initializer before \u2018}\u2019\
    \ token\n   78 | }\n      | ^\n/tmp/tmposam3umi.cpp:78:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129737
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long note_count = 0;\n\
    \    bool is_note = false;\n    for (char c : music_string) {\n        if (c ==\
    \ 'o') {\n            is_note = true;\n            note_count = 0;\n         \
    \   beat = 0;\n            note = \"\";\n        } else if (c == '|') {\n    \
    \        is_note = true;\n            note_count = 0;\n            beat = 0;\n\
    \            note = \"\";\n        } else if (c == ' ') {\n            if (is_note)\
    \ {\n                beats.push_back(beat);\n                beat += note_count;\n\
    \                note_count = 0;\n                is_note = false;\n         \
    \   }\n        } else {\n            note += c;\n            note_count += 1;\n\
    \        }\n    }\n    if (is_note) {\n        beats.push_back(beat);\n    }\n\
    \    return beats;\n}\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\
    \")) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: Exception
  stderr: 'tmpzhntylmg: /tmp/tmpzhntylmg.cpp:47: int main(): Assertion `candidate(("o
    o o o")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4}))'' failed.

    '
  stdout: ''
  timestamp: 1660129737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    long beat = 0;\n    long note = 0;\n    long last_note = 0;\n  \
    \  long last_beat = 0;\n    long last_beats = 0;\n    long last_beats_half = 0;\n\
    \    long last_beats_quarter = 0;\n    long last_beats_whole = 0;\n    long last_beats_total\
    \ = 0;\n    long last_beats_total2 = 0;\n    long last_beats_total3 = 0;\n   \
    \ long last_beats_total4 = 0;\n    long last_beats_total5 = 0;\n    long last_beats_total6\
    \ = 0;\n    long last_beats_total7 = 0;\n    long last_beats_total8 = 0;\n   \
    \ long last_beats_total9 = 0;\n    long last_beats_total10 = 0;\n    long last_beats_total11\
    \ = 0;\n    long last_beats_total12 = 0;\n    long last_beats_total13 = 0;\n \
    \   long last_beats_total14 = 0;\n    long last_beats_total15 = 0;\n    long last_beats_total16\
    \ = 0;\n    long last_beats_total17 = 0;\n    long last_beats_total18 = 0;\n \
    \   long last_beats_total19 = 0;\n    long last_beats_total20 = 0;\n    long last_beats_total21\
    \ = 0;\n    long last_beats_total22 = 0;\n    long last_beats_total23 = 0;\n \
    \   long last_beats_total24 = 0;\n    long last_beats_total25 = 0;\n    long last_beats_total26\
    \ = 0;\n    long last_beats_total27 = 0;\n    long last_beats_total28 = 0;\n \
    \   long last_beats_total29 = 0;\n    long last_beats_total30 = 0;\n    long last_beats_total31\
    \ = 0;\n    long last_beats_total32 = 0;\n    long last_beats_total33 = 0;\n \
    \   long last_beats_total34 = 0;\n    long last_beats_total35 = 0;\n    long last_beats_total36\
    \ = 0;\n    long last_beats_total37 = 0;\n    long last_beats_total38 = 0;\n \
    \   long last_beats_total39 = 0;\n    long last_beats_total40 = 0;\n    long last_beats_total41\
    \ = 0;\n    long last_beats_total42 = 0;\n    long last_beats_total43 = 0;\n \
    \   long last_beats_total44 = 0;\n    long last_beats_total45 = 0;\n    long last_beats_total46\
    \ = 0;\n    long last_beats_total47 = 0;\n    long last_beats_total48 = 0;\n \
    \   long last_beats_total49 = 0;\n    long last_beats_total50 = 0;\n    long last_beats_total51\n\
    }\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"\
    )) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpoj_8u4j5.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpoj_8u4j5.cpp:71:1: error: expected initializer before \u2018}\u2019\
    \ token\n   71 | }\n      | ^\n/tmp/tmpoj_8u4j5.cpp:71:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Your code here\n    std::vector<long> beats;\n    std::string note;\n    long\
    \ beat = 0;\n    long beats = 0;\n    long notes = 0;\n    long note = 0;\n  \
    \  long notes_beat = 0;\n    long notes_beats = 0;\n    long notes_beats_note\
    \ = 0;\n    long notes_beats_notes = 0;\n    long notes_beats_notes_beat = 0;\n\
    \    long notes_beats_notes_beats = 0;\n    long notes_beats_notes_beats_note\
    \ = 0;\n    long notes_beats_notes_beats_notes = 0;\n    long notes_beats_notes_beats_notes_beat\
    \ = 0;\n    long notes_beats_notes_beats_notes_beats = 0;\n    long notes_beats_notes_beats_notes_beats_note\
    \ = 0;\n    long notes_beats_notes_beats_notes_beats_notes = 0;\n    long notes_beats_notes_beats_notes_beats_notes_beat\
    \ = 0;\n    long notes_beats_notes_beats_notes_beats_notes_beats = 0;\n    long\
    \ notes_beats_notes_beats_notes_beats_notes_beats_note = 0;\n    long notes_beats_notes_beats_notes_beats_notes_beats_notes\
    \ = 0;\n    long notes_beats_notes_beats_notes_beats_notes_beats_notes_beat =\
    \ 0;\n    long notes_beats_notes_beats_notes_beats_notes_beats_notes_beats = 0;\n\
    \    long notes_beats_notes_beats_notes_beats_notes_beats_notes_beat = 0;\n  \
    \  long notes_beats_notes_beats_notes_beats_notes_beats_notes_beats = 0;\n   \
    \ long notes_beats_notes_beats_notes_beats_notes_beats_notes_beats_note = 0;\n\
    \    long notes_beats_notes_beats_notes_beats_notes_beats_notes_beats_notes =\
    \ 0;\n    long notes_beats_notes_beats_notes_beats_notes_beats_notes_beats_note\
    \ = 0;\n    long notes_beats_notes_beats_notes_beats_notes_beats_notes_beats_notes\
    \ = 0;\n    long notes_beats_notes_beats_notes_beats_notes_beats_notes_beats_notes_beat\
    \ = 0;\n    long notes_beats_notes_beats_notes_beats_notes_beats_notes_beats_notes_beats\
    \ = 0;\n    long notes_beat\n}\nint main() {\n    auto candidate = parse_music;\n\
    \    assert(candidate((\"\")) == (std::vector<long>()));\n    assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \   assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1, (long)1,\
    \ (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\")) == (std::vector<long>({(long)2,\
    \ (long)2, (long)1, (long)1, (long)4, (long)4, (long)4, (long)4})));\n    assert(candidate((\"\
    o| .| o| .| o o| o o|\")) == (std::vector<long>({(long)2, (long)1, (long)2, (long)1,\
    \ (long)4, (long)2, (long)4, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzwaq81go.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpzwaq81go.cpp:15:10: error: conflicting declaration \u2018long int beats\u2019\
    \n   15 |     long beats = 0;\n      |          ^~~~~\n/tmp/tmpzwaq81go.cpp:12:23:\
    \ note: previous declaration as \u2018std::vector<long int> beats\u2019\n   12\
    \ |     std::vector<long> beats;\n      |                       ^~~~~\n/tmp/tmpzwaq81go.cpp:17:10:\
    \ error: conflicting declaration \u2018long int note\u2019\n   17 |     long note\
    \ = 0;\n      |          ^~~~\n/tmp/tmpzwaq81go.cpp:13:17: note: previous declaration\
    \ as \u2018std::string note\u2019\n   13 |     std::string note;\n      |    \
    \             ^~~~\n/tmp/tmpzwaq81go.cpp:36:10: error: redeclaration of \u2018\
    long int notes_beats_notes_beats_notes_beats_notes_beats_notes_beat\u2019\n  \
    \ 36 |     long notes_beats_notes_beats_notes_beats_notes_beats_notes_beat = 0;\n\
    \      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpzwaq81go.cpp:34:10: note: \u2018long int notes_beats_notes_beats_notes_beats_notes_beats_notes_beat\u2019\
    \ previously declared here\n   34 |     long notes_beats_notes_beats_notes_beats_notes_beats_notes_beat\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpzwaq81go.cpp:37:10: error: redeclaration of \u2018long int notes_beats_notes_beats_notes_beats_notes_beats_notes_beats\u2019\
    \n   37 |     long notes_beats_notes_beats_notes_beats_notes_beats_notes_beats\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpzwaq81go.cpp:35:10: note: \u2018long int notes_beats_notes_beats_notes_beats_notes_beats_notes_beats\u2019\
    \ previously declared here\n   35 |     long notes_beats_notes_beats_notes_beats_notes_beats_notes_beats\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpzwaq81go.cpp:40:10: error: redeclaration of \u2018long int notes_beats_notes_beats_notes_beats_notes_beats_notes_beats_note\u2019\
    \n   40 |     long notes_beats_notes_beats_notes_beats_notes_beats_notes_beats_note\
    \ = 0;\n      |          ^~~~~~~~"
  stdout: ''
  timestamp: 1660129737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long beats = 0;\n   \
    \ long notes = 0;\n    long note = 0;\n    long notes_length = 0;\n    long note_length\
    \ = 0;\n    long note_length2 = 0;\n    long note_length3 = 0;\n    long note_length4\
    \ = 0;\n    long note_length5 = 0;\n    long note_length6 = 0;\n    long note_length7\
    \ = 0;\n    long note_length8 = 0;\n    long note_length9 = 0;\n    long note_length10\
    \ = 0;\n    long note_length11 = 0;\n    long note_length12 = 0;\n    long note_length13\
    \ = 0;\n    long note_length14 = 0;\n    long note_length15 = 0;\n    long note_length16\
    \ = 0;\n    long note_length17 = 0;\n    long note_length18 = 0;\n    long note_length19\
    \ = 0;\n    long note_length20 = 0;\n    long note_length21 = 0;\n    long note_length22\
    \ = 0;\n    long note_length23 = 0;\n    long note_length24 = 0;\n    long note_length25\
    \ = 0;\n    long note_length26 = 0;\n    long note_length27 = 0;\n    long note_length28\
    \ = 0;\n    long note_length29 = 0;\n    long note_length30 = 0;\n    long note_length31\
    \ = 0;\n    long note_length32 = 0;\n    long note_length33 = 0;\n    long note_length34\
    \ = 0;\n    long note_length35 = 0;\n    long note_length36 = 0;\n    long note_length37\
    \ = 0;\n    long note_length38 = 0;\n    long note_length39 = 0;\n    long note_length40\
    \ = 0;\n    long note_length41 = 0;\n    long note_length42 = 0;\n    long note_length43\
    \ = 0;\n    long note_length44 = 0;\n    long note_length45 = 0;\n    long note_length46\
    \ = 0;\n    long note_length47 = 0;\n    long note_length48 = 0;\n    long note_length49\
    \ = 0;\n    long note_length50 = 0;\n    long note_length51 = 0;\n    long note_length52\
    \ = 0;\n    long note_length53 = 0;\n    long note_length54 = 0;\n    long note_length55\
    \ = 0;\n    long note_length56 = 0;\n    long note_length57 = 0;\n    long note_length58\
    \ = 0;\n    long note_length59 = 0;\n    long note_length60 = 0;\n    long note_length61\
    \ = 0;\n    long note_length62 = 0;\n    long note_length63 = 0;\n    long note_length64\
    \ = 0;\n    long note_length65 = 0;\n    long note_length66 = 0;\n    long note_length67\
    \ = 0;\n    long note_length68 = 0;\n    long \n}\nint main() {\n    auto candidate\
    \ = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n  \
    \  assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4,\
    \ (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpewfmox6p.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpewfmox6p.cpp:14:10: error: conflicting declaration \u2018long int beats\u2019\
    \n   14 |     long beats = 0;\n      |          ^~~~~\n/tmp/tmpewfmox6p.cpp:11:23:\
    \ note: previous declaration as \u2018std::vector<long int> beats\u2019\n   11\
    \ |     std::vector<long> beats;\n      |                       ^~~~~\n/tmp/tmpewfmox6p.cpp:16:10:\
    \ error: conflicting declaration \u2018long int note\u2019\n   16 |     long note\
    \ = 0;\n      |          ^~~~\n/tmp/tmpewfmox6p.cpp:12:17: note: previous declaration\
    \ as \u2018std::string note\u2019\n   12 |     std::string note;\n      |    \
    \             ^~~~\n/tmp/tmpewfmox6p.cpp:87:1: error: expected unqualified-id\
    \ before \u2018}\u2019 token\n   87 | }\n      | ^\n/tmp/tmpewfmox6p.cpp:87:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Your code goes here\n    std::vector<long> beats;\n    std::string note;\n \
    \   long beat = 0;\n    long beats = 0;\n    long last_beat = 0;\n    long last_beats\
    \ = 0;\n    long last_note = 0;\n    long last_notes = 0;\n    long last_notes_beat\
    \ = 0;\n    long last_notes_beats = 0;\n    long last_notes_beats_beat = 0;\n\
    \    long last_notes_beats_beats = 0;\n    long last_notes_beats_beats_beat =\
    \ 0;\n    long last_notes_beats_beats_beats = 0;\n    long last_notes_beats_beats_beats_beat\
    \ = 0;\n    long last_notes_beats_beats_beats_beats = 0;\n    long last_notes_beats_beats_beats_beats_beat\
    \ = 0;\n    long last_notes_beats_beats_beats_beats_beats = 0;\n    long last_notes_beats_beats_beats_beats_beats_beat\
    \ = 0;\n    long last_notes_beats_beats_beats_beats_beats_beats = 0;\n    long\
    \ last_notes_beats_beats_beats_beats_beats_beat = 0;\n    long last_notes_beats_beats_beats_beats_beats_beats\
    \ = 0;\n    long last_notes_beats_beats_beats_beats_beats_beat = 0;\n    long\
    \ last_notes_beats_beats_beats_beats_beats_beats = 0;\n    long last_notes_beats_beats_beats_beats_beats_beats_beat\
    \ = 0;\n    long last_notes_beats_beats_beats_beats_beats_beats = 0;\n    long\
    \ last_notes_beats_beats_beats_beats_beats_beats = 0;\n    long last_notes_beats_beats_beats_beats_beats_beats_beat\
    \ = 0;\n    long last_notes_beats_beats_beats_beats_beats_beats_beats = 0;\n \
    \   long last_notes_beats_beats_beats_beats_beats_beats_beat = 0;\n    long last_notes_beats_beats_beats_beats_beats_beats_beats\
    \ = 0;\n    long last_notes_beats_beats_beats_beats_beats_beats_beat = 0;\n  \
    \  long last_notes_beats_beats_beats_beats_beats_beats_beats = 0;\n    long last_notes_beats_beats_beats_beats_beats_beats_beats\
    \ = 0;\n    long last_notes_beats_beats_beats_beats_beats_beats_beats_beat = 0;\n\
    \    long last_notes_beats_beats_beats_beats_beat\n}\nint main() {\n    auto candidate\
    \ = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n  \
    \  assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4,\
    \ (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0wuhw8_b.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp0wuhw8_b.cpp:15:10: error: conflicting declaration \u2018long int beats\u2019\
    \n   15 |     long beats = 0;\n      |          ^~~~~\n/tmp/tmp0wuhw8_b.cpp:12:23:\
    \ note: previous declaration as \u2018std::vector<long int> beats\u2019\n   12\
    \ |     std::vector<long> beats;\n      |                       ^~~~~\n/tmp/tmp0wuhw8_b.cpp:32:10:\
    \ error: redeclaration of \u2018long int last_notes_beats_beats_beats_beats_beats_beat\u2019\
    \n   32 |     long last_notes_beats_beats_beats_beats_beats_beat = 0;\n      |\
    \          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp0wuhw8_b.cpp:30:10:\
    \ note: \u2018long int last_notes_beats_beats_beats_beats_beats_beat\u2019 previously\
    \ declared here\n   30 |     long last_notes_beats_beats_beats_beats_beats_beat\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp0wuhw8_b.cpp:33:10:\
    \ error: redeclaration of \u2018long int last_notes_beats_beats_beats_beats_beats_beats\u2019\
    \n   33 |     long last_notes_beats_beats_beats_beats_beats_beats = 0;\n     \
    \ |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp0wuhw8_b.cpp:31:10:\
    \ note: \u2018long int last_notes_beats_beats_beats_beats_beats_beats\u2019 previously\
    \ declared here\n   31 |     long last_notes_beats_beats_beats_beats_beats_beats\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp0wuhw8_b.cpp:34:10:\
    \ error: redeclaration of \u2018long int last_notes_beats_beats_beats_beats_beats_beat\u2019\
    \n   34 |     long last_notes_beats_beats_beats_beats_beats_beat = 0;\n      |\
    \          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp0wuhw8_b.cpp:30:10:\
    \ note: \u2018long int last_notes_beats_beats_beats_beats_beats_beat\u2019 previously\
    \ declared here\n   30 |     long last_notes_beats_beats_beats_beats_beats_beat\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp0wuhw8_b.cpp:35:10:\
    \ error: redeclaration of \u2018long int last_notes_beats_beats_beats_beats_beats_beats\u2019\
    \n   35 |     long last_notes_beats_beats_beats_beats_beats_b"
  stdout: ''
  timestamp: 1660129737
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long note_count = 0;\n\
    \    for (char c : music_string) {\n        if (c == 'o') {\n            note_count++;\n\
    \            beat = 0;\n            note = c;\n        } else if (c == '|') {\n\
    \            note_count++;\n            beat = 0;\n            note = c;\n   \
    \     } else if (c == ' ') {\n            beats.push_back(beat);\n           \
    \ beat = 0;\n            note_count = 0;\n        } else if (c == '.') {\n   \
    \         note_count++;\n            beat = 0;\n            note = c;\n      \
    \  } else {\n            beat += 1;\n        }\n    }\n    beats.push_back(beat);\n\
    \    return beats;\n}\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\
    \")) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: Exception
  stderr: 'tmpmpmvjgqp: /tmp/tmpmpmvjgqp.cpp:41: int main(): Assertion `candidate((""))
    == (std::vector<long>())'' failed.

    '
  stdout: ''
  timestamp: 1660129738
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long beats = 0;\n   \
    \ long last_beat = 0;\n    bool is_note = false;\n    for (char c : music_string)\
    \ {\n        if (c == 'o') {\n            is_note = true;\n            beat =\
    \ 0;\n            beats = 0;\n            last_beat = 0;\n            note = \"\
    \";\n        } else if (c == '|') {\n            is_note = true;\n           \
    \ beat = 0;\n            beats = 0;\n            last_beat = 0;\n            note\
    \ = \"\";\n        } else if (c == ' ') {\n            is_note = false;\n    \
    \        beat = 0;\n            beats = 0;\n            last_beat = 0;\n     \
    \       note = \"\";\n        } else if (is_note) {\n            note += c;\n\
    \        } else {\n            beat += 1;\n            beats += 1;\n         \
    \   last_beat = beat;\n        }\n    }\n    beats.push_back(beats);\n    return\
    \ beats;\n}\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\
    \")) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_0tggbmm.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp_0tggbmm.cpp:14:10: error: conflicting declaration \u2018long int beats\u2019\
    \n   14 |     long beats = 0;\n      |          ^~~~~\n/tmp/tmp_0tggbmm.cpp:11:23:\
    \ note: previous declaration as \u2018std::vector<long int> beats\u2019\n   11\
    \ |     std::vector<long> beats;\n      |                       ^~~~~\n/tmp/tmp_0tggbmm.cpp:21:21:\
    \ error: no match for \u2018operator=\u2019 (operand types are \u2018std::vector<long\
    \ int>\u2019 and \u2018int\u2019)\n   21 |             beats = 0;\n      |   \
    \                  ^\nIn file included from /usr/include/c++/9/vector:72,\n  \
    \               from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp_0tggbmm.cpp:2:\n/usr/include/c++/9/bits/vector.tcc:198:5:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(const\
    \ std::vector<_Tp, _Alloc>&) [with _Tp = long int; _Alloc = std::allocator<long\
    \ int>]\u2019\n  198 |     vector<_Tp, _Alloc>::\n      |     ^~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/vector.tcc:199:42: note:   no known conversion for argument\
    \ 1 from \u2018int\u2019 to \u2018const std::vector<long int>&\u2019\n  199 |\
    \     operator=(const vector<_Tp, _Alloc>& __x)\n      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n\
    In file included from /usr/include/c++/9/vector:67,\n                 from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp_0tggbmm.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:706:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(std::vector<_Tp,\
    \ _Alloc>&&) [with _Tp = long int; _Alloc = std::allocator<long int>]\u2019\n\
    \  706 |       operat"
  stdout: ''
  timestamp: 1660129737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    long last_note = 0;\n    long note_count = 0;\n    long note_length = 0;\n\
    \    long note_length_count = 0;\n    long note_length_index = 0;\n    long note_length_index2\
    \ = 0;\n    long note_length_index3 = 0;\n    long note_length_index4 = 0;\n \
    \   long note_length_index5 = 0;\n    long note_length_index6 = 0;\n    long note_length_index7\
    \ = 0;\n    long note_length_index8 = 0;\n    long note_length_index9 = 0;\n \
    \   long note_length_index10 = 0;\n    long note_length_index11 = 0;\n    long\
    \ note_length_index12 = 0;\n    long note_length_index13 = 0;\n    long note_length_index14\
    \ = 0;\n    long note_length_index15 = 0;\n    long note_length_index16 = 0;\n\
    \    long note_length_index17 = 0;\n    long note_length_index18 = 0;\n    long\
    \ note_length_index19 = 0;\n    long note_length_index20 = 0;\n    long note_length_index21\
    \ = 0;\n    long note_length_index22 = 0;\n    long note_length_index23 = 0;\n\
    \    long note_length_index24 = 0;\n    long note_length_index25 = 0;\n    long\
    \ note_length_index26 = 0;\n    long note_length_index27 = 0;\n    long note_length_index28\
    \ = 0;\n    long note_length_index29 = 0;\n    long note_length_index30 = 0;\n\
    \    long note_length_index31 = 0;\n    long note_length_index32 = 0;\n    long\
    \ note_length_index33 = 0;\n    long note_length_index34 = 0;\n    long note_length_index35\
    \ = 0;\n    long note_length_index36 = 0;\n    long note_length_index37 = 0;\n\
    \    long note_length_index38 = 0;\n    long note_length_index39 = 0;\n    long\
    \ note_length_index40 = 0;\n    long note_length_index41 = 0;\n    long note_length_index42\
    \ = 0;\n    long note_length_index43 = 0;\n    long note_length_index44 = 0;\n\
    \    long note_length_index45 = 0;\n    long note_length_index46 = 0;\n    long\
    \ note_length_index47 = 0;\n    long note_length_index48 = 0;\n    long note_length_index49\
    \ = 0;\n    long note_length_index50 = 0;\n    long note_length_index51 = 0;\n\
    \    long note_length_index52 = 0;\n    long note_length_index53 = 0;\n    long\
    \ note_length_index54 = 0;\n    long note_length_index55 = 0;\n    long note_length_index56\
    \ = 0;\n    long note_length_index57 = 0;\n    long note_length_index58 = 0;\n\
    \    long note_length_index\n}\nint main() {\n    auto candidate = parse_music;\n\
    \    assert(candidate((\"\")) == (std::vector<long>()));\n    assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \   assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1, (long)1,\
    \ (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\")) == (std::vector<long>({(long)2,\
    \ (long)2, (long)1, (long)1, (long)4, (long)4, (long)4, (long)4})));\n    assert(candidate((\"\
    o| .| o| .| o o| o o|\")) == (std::vector<long>({(long)2, (long)1, (long)2, (long)1,\
    \ (long)4, (long)2, (long)4, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6vyg_0_l.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp6vyg_0_l.cpp:78:1: error: expected initializer before \u2018}\u2019\
    \ token\n   78 | }\n      | ^\n/tmp/tmp6vyg_0_l.cpp:78:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Your code goes here\n    std::vector<long> beats;\n    std::string note;\n \
    \   long beat = 0;\n    long beats = 0;\n    long notes = 0;\n    long last_note\
    \ = 0;\n    long last_beat = 0;\n    long last_beats = 0;\n    long last_notes\
    \ = 0;\n    long last_last_note = 0;\n    long last_last_beat = 0;\n    long last_last_beats\
    \ = 0;\n    long last_last_notes = 0;\n    long last_last_last_note = 0;\n   \
    \ long last_last_last_beat = 0;\n    long last_last_last_beats = 0;\n    long\
    \ last_last_last_notes = 0;\n    long last_last_last_last_note = 0;\n    long\
    \ last_last_last_last_beat = 0;\n    long last_last_last_last_beats = 0;\n   \
    \ long last_last_last_last_notes = 0;\n    long last_last_last_last_last_note\
    \ = 0;\n    long last_last_last_last_last_beat = 0;\n    long last_last_last_last_last_beats\
    \ = 0;\n    long last_last_last_last_last_notes = 0;\n    long last_last_last_last_last_last_note\
    \ = 0;\n    long last_last_last_last_last_last_beat = 0;\n    long last_last_last_last_last_last_beats\
    \ = 0;\n    long last_last_last_last_last_last_notes = 0;\n    long last_last_last_last_last_last_last_note\
    \ = 0;\n    long last_last_last_last_last_last_last_beat = 0;\n    long last_last_last_last_last_last_last_beats\
    \ = 0;\n    long last_last_last_last_last_last_last_notes = 0;\n    long last_last_last_last_last_last_last_last_note\
    \ = 0;\n    long last_last_last_last_last_last_last_last_beat = 0;\n    long last_last_last_last_last_last_last_last_beats\
    \ = 0;\n    long last_last_last_last_last_last_last_last_notes = 0;\n    long\
    \ last_last_last_last_last_last_last_last_last_note = 0;\n    long last_last_last_last_last_last_last_last_last_beat\
    \ = 0;\n    long last_last_last_last_last_last_last_last_last_beats = 0;\n   \
    \ long last_last_last_last_last_last_last_last_last_notes = 0;\n    long last_last_last_last_last_last_last_last_last_last_note\
    \ = 0;\n    long last_last_last_last_last_last_last_last_last_last_beat = 0;\n\
    \    long last_last_last_last_last_last_last_last_last_last_beats = 0;\n    long\
    \ last_last_last_last_last_last_last_last_last_last_notes = 0;\n    long last_last_last_last_last_last_last_last_last_last_last_note\
    \ = 0;\n    long last_last_last_last_last_last_last_last_last_last_last_beat =\
    \ 0;\n    long last_last_last_last_last_last_last_last_last_last_last_beats =\
    \ 0;\n    long last_last_last_last_last_last_last_last_last_\n}\nint main() {\n\
    \    auto candidate = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n\
    \    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgeb0dyf6.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpgeb0dyf6.cpp:15:10: error: conflicting declaration \u2018long int beats\u2019\
    \n   15 |     long beats = 0;\n      |          ^~~~~\n/tmp/tmpgeb0dyf6.cpp:12:23:\
    \ note: previous declaration as \u2018std::vector<long int> beats\u2019\n   12\
    \ |     std::vector<long> beats;\n      |                       ^~~~~\n/tmp/tmpgeb0dyf6.cpp:61:1:\
    \ error: expected initializer before \u2018}\u2019 token\n   61 | }\n      | ^\n\
    /tmp/tmpgeb0dyf6.cpp:61:1: warning: no return statement in function returning\
    \ non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long beats = 0;\n   \
    \ long notes = 0;\n    long note = 0;\n    long note_count = 0;\n    long note_length\
    \ = 0;\n    long note_length_count = 0;\n    long note_length = 0;\n    long note_length_count2\
    \ = 0;\n    long note_length2 = 0;\n    long note_length_count3 = 0;\n    long\
    \ note_length3 = 0;\n    long note_length_count4 = 0;\n    long note_length4 =\
    \ 0;\n    long note_length_count5 = 0;\n    long note_length5 = 0;\n    long note_length_count6\
    \ = 0;\n    long note_length6 = 0;\n    long note_length_count7 = 0;\n    long\
    \ note_length7 = 0;\n    long note_length_count8 = 0;\n    long note_length8 =\
    \ 0;\n    long note_length_count9 = 0;\n    long note_length9 = 0;\n    long note_length_count10\
    \ = 0;\n    long note_length10 = 0;\n    long note_length_count11 = 0;\n    long\
    \ note_length11 = 0;\n    long note_length_count12 = 0;\n    long note_length12\
    \ = 0;\n    long note_length_count13 = 0;\n    long note_length13 = 0;\n    long\
    \ note_length_count14 = 0;\n    long note_length14 = 0;\n    long note_length_count15\
    \ = 0;\n    long note_length15 = 0;\n    long note_length_count16 = 0;\n    long\
    \ note_length16 = 0;\n    long note_length_count17 = 0;\n    long note_length17\
    \ = 0;\n    long note_length_count18 = 0;\n    long note_length18 = 0;\n    long\
    \ note_length_count19 = 0;\n    long note_length19 = 0;\n    long note_length_count20\
    \ = 0;\n    long note_length20 = 0;\n    long note_length_count21 = 0;\n    long\
    \ note_length21 = 0;\n    long note_length_count22 = 0;\n    long note_length22\
    \ = 0;\n    long note_length_count23 = 0;\n    long note_length23 = 0;\n    long\
    \ note_length_count24 = 0;\n    long note_length24 = 0;\n    long note_length_count25\
    \ = 0;\n    long note_length25 = 0;\n    long note_length_count26 = 0;\n    long\
    \ note_length26 = 0;\n    long note_length_count27 = 0;\n    long note_length27\
    \ = 0;\n    long note_length_count28 = 0;\n    long note_length28 = 0;\n    long\
    \ note_length_count29 = 0;\n    long note_length29 = 0;\n    long note_length_count30\
    \ = 0;\n    long note_length30 = 0;\n    long note_length_count31 = 0;\n    long\
    \ note_length31 = 0;\n    long note_length_count32 = 0;\n    long note_length32\n\
    }\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"\
    )) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqr3pcnst.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpqr3pcnst.cpp:14:10: error: conflicting declaration \u2018long int beats\u2019\
    \n   14 |     long beats = 0;\n      |          ^~~~~\n/tmp/tmpqr3pcnst.cpp:11:23:\
    \ note: previous declaration as \u2018std::vector<long int> beats\u2019\n   11\
    \ |     std::vector<long> beats;\n      |                       ^~~~~\n/tmp/tmpqr3pcnst.cpp:16:10:\
    \ error: conflicting declaration \u2018long int note\u2019\n   16 |     long note\
    \ = 0;\n      |          ^~~~\n/tmp/tmpqr3pcnst.cpp:12:17: note: previous declaration\
    \ as \u2018std::string note\u2019\n   12 |     std::string note;\n      |    \
    \             ^~~~\n/tmp/tmpqr3pcnst.cpp:20:10: error: redeclaration of \u2018\
    long int note_length\u2019\n   20 |     long note_length = 0;\n      |       \
    \   ^~~~~~~~~~~\n/tmp/tmpqr3pcnst.cpp:18:10: note: \u2018long int note_length\u2019\
    \ previously declared here\n   18 |     long note_length = 0;\n      |       \
    \   ^~~~~~~~~~~\n/tmp/tmpqr3pcnst.cpp:83:1: error: expected initializer before\
    \ \u2018}\u2019 token\n   83 | }\n      | ^\n/tmp/tmpqr3pcnst.cpp:83:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long rest = 0;\n    long\
    \ rests = 0;\n    long rests_index = 0;\n    long rests_index2 = 0;\n    long\
    \ rests_index3 = 0;\n    long rests_index4 = 0;\n    long rests_index5 = 0;\n\
    \    long rests_index6 = 0;\n    long rests_index7 = 0;\n    long rests_index8\
    \ = 0;\n    long rests_index9 = 0;\n    long rests_index10 = 0;\n    long rests_index11\
    \ = 0;\n    long rests_index12 = 0;\n    long rests_index13 = 0;\n    long rests_index14\
    \ = 0;\n    long rests_index15 = 0;\n    long rests_index16 = 0;\n    long rests_index17\
    \ = 0;\n    long rests_index18 = 0;\n    long rests_index19 = 0;\n    long rests_index20\
    \ = 0;\n    long rests_index21 = 0;\n    long rests_index22 = 0;\n    long rests_index23\
    \ = 0;\n    long rests_index24 = 0;\n    long rests_index25 = 0;\n    long rests_index26\
    \ = 0;\n    long rests_index27 = 0;\n    long rests_index28 = 0;\n    long rests_index29\
    \ = 0;\n    long rests_index30 = 0;\n    long rests_index31 = 0;\n    long rests_index32\
    \ = 0;\n    long rests_index33 = 0;\n    long rests_index34 = 0;\n    long rests_index35\
    \ = 0;\n    long rests_index36 = 0;\n    long rests_index37 = 0;\n    long rests_index38\
    \ = 0;\n    long rests_index39 = 0;\n    long rests_index40 = 0;\n    long rests_index41\
    \ = 0;\n    long rests_index42 = 0;\n    long rests_index43 = 0;\n    long rests_index44\
    \ = 0;\n    long rests_index45 = 0;\n    long rests_index46 = 0;\n    long rests_index47\
    \ = 0;\n    long rests_index48 = 0;\n    long rests_index49 = 0;\n    long rests_index50\
    \ = 0;\n    long rests_index51 = 0;\n    long rests_index52 = 0;\n    long rests_index53\
    \ = 0;\n    long rests_index54 = 0;\n    long rests_index55 = 0;\n    long rests_index56\
    \ = 0;\n    long rests_index57 = 0;\n    long rests_index58 = 0;\n    long rests_index59\
    \ = 0;\n    long rests_index60 = 0;\n    long rests_index61 = 0;\n    long \n\
    }\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"\
    )) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvmw8tbkr.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpvmw8tbkr.cpp:78:1: error: expected unqualified-id before \u2018}\u2019\
    \ token\n   78 | }\n      | ^\n/tmp/tmpvmw8tbkr.cpp:78:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129737
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long note_count = 0;\n\
    \    long note_length = 0;\n    long note_length_count = 0;\n    long note_length_index\
    \ = 0;\n    long note_length_index2 = 0;\n    long note_length_index3 = 0;\n \
    \   long note_length_index4 = 0;\n    long note_length_index5 = 0;\n    long note_length_index6\
    \ = 0;\n    long note_length_index7 = 0;\n    long note_length_index8 = 0;\n \
    \   long note_length_index9 = 0;\n    long note_length_index10 = 0;\n    long\
    \ note_length_index11 = 0;\n    long note_length_index12 = 0;\n    long note_length_index13\
    \ = 0;\n    long note_length_index14 = 0;\n    long note_length_index15 = 0;\n\
    \    long note_length_index16 = 0;\n    long note_length_index17 = 0;\n    long\
    \ note_length_index18 = 0;\n    long note_length_index19 = 0;\n    long note_length_index20\
    \ = 0;\n    long note_length_index21 = 0;\n    long note_length_index22 = 0;\n\
    \    long note_length_index23 = 0;\n    long note_length_index24 = 0;\n    long\
    \ note_length_index25 = 0;\n    long note_length_index26 = 0;\n    long note_length_index27\
    \ = 0;\n    long note_length_index28 = 0;\n    long note_length_index29 = 0;\n\
    \    long note_length_index30 = 0;\n    long note_length_index31 = 0;\n    long\
    \ note_length_index32 = 0;\n    long note_length_index33 = 0;\n    long note_length_index34\
    \ = 0;\n    long note_length_index35 = 0;\n    long note_length_index36 = 0;\n\
    \    long note_length_index37 = 0;\n    long note_length_index38 = 0;\n    long\
    \ note_length_index39 = 0;\n    long note_length_index40 = 0;\n    long note_length_index41\
    \ = 0;\n    long note_length_index42 = 0;\n    long note_length_index43 = 0;\n\
    \    long note_length_index44 = 0;\n    long note_length_index45 = 0;\n    long\
    \ note_length_index46 = 0;\n    long note_length_index47 = 0;\n    long note_length_index48\
    \ = 0;\n    long note_length_index49 = 0;\n    long note_length_index50 = 0;\n\
    \    long note_length_index51 = 0;\n    long note_length_index52 = 0;\n    long\
    \ note_length_index53 = 0;\n    long note_length_index54 = 0;\n    long note_length_index55\
    \ = 0;\n    long note_length_index56 = 0;\n    long note_length_index57 = 0;\n\
    \    long note_length_index58 = 0;\n    long note_length_index59 = 0;\n    long\
    \ note_length_index60 = 0;\n    \n}\nint main() {\n    auto candidate = parse_music;\n\
    \    assert(candidate((\"\")) == (std::vector<long>()));\n    assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \   assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1, (long)1,\
    \ (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\")) == (std::vector<long>({(long)2,\
    \ (long)2, (long)1, (long)1, (long)4, (long)4, (long)4, (long)4})));\n    assert(candidate((\"\
    o| .| o| .| o o| o o|\")) == (std::vector<long>({(long)2, (long)1, (long)2, (long)1,\
    \ (long)4, (long)2, (long)4, (long)2})));\n}\n"
  status: Exception
  stderr: 'tmpimx1ccse: /tmp/tmpimx1ccse.cpp:81: int main(): Assertion `candidate((""))
    == (std::vector<long>())'' failed.

    '
  stdout: ''
  timestamp: 1660129738
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long note_count = 0;\n\
    \    for (char c : music_string) {\n        if (c == 'o') {\n            beat\
    \ += 4;\n            note_count += 4;\n        } else if (c == 'o|') {\n     \
    \       beat += 2;\n            note_count += 2;\n        } else if (c == '.|')\
    \ {\n            beat += 1;\n            note_count += 1;\n        } else {\n\
    \            note = c;\n            beat += note_count;\n            note_count\
    \ += 1;\n        }\n        beats.push_back(beat);\n    }\n    return beats;\n\
    }\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"\
    )) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: Exception
  stderr: 'tmp0nkno501: /tmp/tmp0nkno501.cpp:37: int main(): Assertion `candidate(("o
    o o o")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4}))'' failed.

    '
  stdout: ''
  timestamp: 1660129738
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Your code here\n    std::vector<long> beats;\n    long beat = 0;\n    long note\
    \ = 0;\n    long last_note = 0;\n    long last_beat = 0;\n    long last_beats\
    \ = 0;\n    long last_beats_half = 0;\n    long last_beats_quarter = 0;\n    long\
    \ last_beats_whole = 0;\n    long last_beats_total = 0;\n    long last_beats_total2\
    \ = 0;\n    long last_beats_total3 = 0;\n    long last_beats_total4 = 0;\n   \
    \ long last_beats_total5 = 0;\n    long last_beats_total6 = 0;\n    long last_beats_total7\
    \ = 0;\n    long last_beats_total8 = 0;\n    long last_beats_total9 = 0;\n   \
    \ long last_beats_total10 = 0;\n    long last_beats_total11 = 0;\n    long last_beats_total12\
    \ = 0;\n    long last_beats_total13 = 0;\n    long last_beats_total14 = 0;\n \
    \   long last_beats_total15 = 0;\n    long last_beats_total16 = 0;\n    long last_beats_total17\
    \ = 0;\n    long last_beats_total18 = 0;\n    long last_beats_total19 = 0;\n \
    \   long last_beats_total20 = 0;\n    long last_beats_total21 = 0;\n    long last_beats_total22\
    \ = 0;\n    long last_beats_total23 = 0;\n    long last_beats_total24 = 0;\n \
    \   long last_beats_total25 = 0;\n    long last_beats_total26 = 0;\n    long last_beats_total27\
    \ = 0;\n    long last_beats_total28 = 0;\n    long last_beats_total29 = 0;\n \
    \   long last_beats_total30 = 0;\n    long last_beats_total31 = 0;\n    long last_beats_total32\
    \ = 0;\n    long last_beats_total33 = 0;\n    long last_beats_total34 = 0;\n \
    \   long last_beats_total35 = 0;\n    long last_beats_total36 = 0;\n    long last_beats_total37\
    \ = 0;\n    long last_beats_total38 = 0;\n    long last_beats_total39 = 0;\n \
    \   long last_beats_total40 = 0;\n    long last_beats_total41 = 0;\n    long last_beats_total42\
    \ = 0;\n    long last_beats_total43 = 0;\n    long last_beats_total44 = 0;\n \
    \   long last_beats_total45 = 0;\n    long last_beats_total46 = 0;\n    long last_beats_total47\
    \ = 0;\n    long last_beats_total48 = 0;\n    long last_beats_total49 = 0;\n \
    \   long last_beats_total50 = 0;\n    long \n}\nint main() {\n    auto candidate\
    \ = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n  \
    \  assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4,\
    \ (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzp5wh463.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpzp5wh463.cpp:72:1: error: expected unqualified-id before \u2018}\u2019\
    \ token\n   72 | }\n      | ^\n/tmp/tmpzp5wh463.cpp:72:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    long beats_counter = 0;\n    long current_beat = 0;\n    long current_note\
    \ = 0;\n    long current_note_length = 0;\n    long current_note_length_in_bpm\
    \ = -1;\n    long current_note_length_in_beats = -1;\n    long current_note_length_in_seconds\
    \ = -1;\n    long current_note_length_in_minutes = -1;\n    long current_note_length_in_hours\
    \ = -1;\n    long current_note_length_in_days = -1;\n    long current_note_length_in_weeks\
    \ = -1;\n    long current_note_length_in_months = -1;\n    long current_note_length_in_years\
    \ = -1;\n    long current_note_length_in_centuries = -1;\n    long current_note_length_in_milleniums\
    \ = -1;\n    long current_note_length_in_thousands = -1;\n    long current_note_length_in_tens\
    \ = -1;\n    long current_note_length_in_hundreds = -1;\n    long current_note_length_in_thousands_hundreds\
    \ = -1;\n    long current_note_length_in_tens_hundreds = -1;\n    long current_note_length_in_hundreds_thousands\
    \ = -1;\n    long current_note_length_in_tens_thousands = -1;\n    long current_note_length_in_hundreds_thousands_hundreds\
    \ = -1;\n    long current_note_length_in_tens_thousands_hundreds_thousands = -1;\n\
    \    long current_note_length_in_hundreds_thousands_hundreds_thousands_hundreds\
    \ = -1;\n    long current_note_length_in_tens_thousands_hundreds_thousands_hundreds_thousands\
    \ = -1;\n    long current_note_length_in_hundreds_thousands_hundreds_thousands_hundreds_thousands_hundreds\
    \ = -1;\n    long current_note_length_in_tens_thousands_hundreds_thousands_hundreds_thousands_hundreds_thousands\
    \ = -1;\n    long current_note_length_in_hundreds_thousands_hundreds_thousands_hundreds_thousands_hundreds_thousands_hundreds\
    \ = -1;\n    long current_note_length_in_tens_thousands_hundreds_thousands_hundreds_thousands_hundreds_thousands_hundreds_thousands_hundreds_thousands\
    \ = -1;\n    long current_note_length_in_hundreds_thousands_hundreds_thousands_hundreds_thousands_hundreds_thousands_hundreds_thousands_hundreds_thousands_hundreds_thousands_hundreds\
    \ = -1;\n    long current_note_length_in_tens_\n}\nint main() {\n    auto candidate\
    \ = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n  \
    \  assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4,\
    \ (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppzojzdnx.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmppzojzdnx.cpp:44:1: error: expected initializer before \u2018}\u2019\
    \ token\n   44 | }\n      | ^\n/tmp/tmppzojzdnx.cpp:44:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129737
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    long last_note = 0;\n    long last_note_length = 0;\n    bool last_note_end\
    \ = false;\n    bool last_note_start = false;\n    bool last_note_middle = false;\n\
    \    for (char c : music_string) {\n        if (c == 'o') {\n            if (last_note_end)\
    \ {\n                beats.push_back(beat);\n                beat = 0;\n     \
    \       }\n            last_note_end = false;\n            last_note_start = true;\n\
    \            last_note_middle = false;\n            last_note = 0;\n         \
    \   last_note_length = 0;\n        } else if (c == '|') {\n            if (last_note_end)\
    \ {\n                beats.push_back(beat);\n                beat = 0;\n     \
    \       }\n            last_note_end = true;\n            last_note_start = false;\n\
    \            last_note_middle = true;\n            last_note = 0;\n          \
    \  last_note_length = 0;\n        } else if (c == '.') {\n            if (last_note_end)\
    \ {\n                beats.push_back(beat);\n                beat = 0;\n     \
    \       }\n            last_note_end = true;\n            last_note_start = false;\n\
    \            last_note_middle = false;\n            last_note = 0;\n         \
    \   last_note_length = 0;\n        } else if (c == '.') {\n            if (last_note_end)\
    \ {\n                beats.push_back(beat);\n                beat = 0;\n     \
    \       }\n            last_note_end = true;\n            last_note_start = false;\n\
    \            last_note_middle = false;\n            last_note = 0;\n         \
    \   last_note_length = 0;\n        } else {\n            if (last_note_end) {\n\
    \                beats.push_back(beat);\n                beat = 0;\n         \
    \   }\n            last_note_end = false;\n            last_note_start = false;\n\
    \            last_note_middle = false;\n            last_note = 0;\n         \
    \   last_note_length = 0;\n        }\n        beat += 1;\n        last_note_length\
    \ += 1;\n        last_note_end |= (c == '.');\n        last_note_start |= (c ==\
    \ 'o');\n        last_note_middle |= (c == '|');\n        last_note += 1;\n  \
    \  }\n    if (last_note_end) {\n        beats.push_back(beat);\n    }\n    return\
    \ beats;\n}\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\
    \")) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: Exception
  stderr: 'tmpqxauxlop: /tmp/tmpqxauxlop.cpp:87: int main(): Assertion `candidate(("o
    o o o")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4}))'' failed.

    '
  stdout: ''
  timestamp: 1660129737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Write your code here\n    std::vector<long> beats;\n    long beats_counter =\
    \ 0;\n    long current_beat = 0;\n    long current_note = 0;\n    long current_note_length\
    \ = 0;\n    long current_note_length2 = 0;\n    long current_note_length3 = 0;\n\
    \    long current_note_length4 = 0;\n    long current_note_length5 = 0;\n    long\
    \ current_note_length6 = 0;\n    long current_note_length7 = 0;\n    long current_note_length8\
    \ = 0;\n    long current_note_length9 = 0;\n    long current_note_length10 = 0;\n\
    \    long current_note_length11 = 0;\n    long current_note_length12 = 0;\n  \
    \  long current_note_length13 = 0;\n    long current_note_length14 = 0;\n    long\
    \ current_note_length15 = 0;\n    long current_note_length16 = 0;\n    long current_note_length17\
    \ = 0;\n    long current_note_length18 = 0;\n    long current_note_length19 =\
    \ 0;\n    long current_note_length20 = 0;\n    long current_note_length21 = 0;\n\
    \    long current_note_length22 = 0;\n    long current_note_length23 = 0;\n  \
    \  long current_note_length24 = 0;\n    long current_note_length25 = 0;\n    long\
    \ current_note_length26 = 0;\n    long current_note_length27 = 0;\n    long current_note_length28\
    \ = 0;\n    long current_note_length29 = 0;\n    long current_note_length30 =\
    \ 0;\n    long current_note_length31 = 0;\n    long current_note_length32 = 0;\n\
    \    long current_note_length33 = 0;\n    long current_note_length34 = 0;\n  \
    \  long current_note_length35 = 0;\n    long current_note_length36 = 0;\n    long\
    \ current_note_length37 = 0;\n    long current_note_length38 = 0;\n    long current_note_length39\
    \ = 0;\n    long current_note_length40 = 0;\n    long current_note_length41 =\
    \ 0;\n    long current_note_length42 = 0;\n    long current_note_length43 = 0;\n\
    \    long current_note_length44 = 0;\n    long current_note_length45 = 0;\n  \
    \  long current_note_length46 = 0;\n    long current_note_length47 = 0;\n    long\
    \ current_note_length48 = 0;\n    long current_note_length49 = 0;\n    long current_note_length50\
    \ = 0;\n    long current_note_length51 = 0;\n    long current_note_length52 =\
    \ 0;\n    long current_note_length53 = 0;\n    long current_note_length54 = 0;\n\
    \    long current_note_length55 = 0;\n    long current_note_length56 = 0;\n  \
    \  long current_note_length57 = 0;\n    long current_note_length58 = 0;\n    long\
    \ current_note_length59 = 0;\n    long current_note_length60 = 0;\n    long current_note_length61\n\
    }\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"\
    )) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_fznrt1t.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp_fznrt1t.cpp:77:1: error: expected initializer before \u2018}\u2019\
    \ token\n   77 | }\n      | ^\n/tmp/tmp_fznrt1t.cpp:77:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    long beats_counter = 0;\n    long current_beat = 0;\n    long current_note\
    \ = 0;\n    long current_note_length = 0;\n    long current_note_length2 = 0;\n\
    \    long current_note_length3 = 0;\n    long current_note_length4 = 0;\n    long\
    \ current_note_length5 = 0;\n    long current_note_length6 = 0;\n    long current_note_length7\
    \ = 0;\n    long current_note_length8 = 0;\n    long current_note_length9 = 0;\n\
    \    long current_note_length10 = 0;\n    long current_note_length11 = 0;\n  \
    \  long current_note_length12 = 0;\n    long current_note_length13 = 0;\n    long\
    \ current_note_length14 = 0;\n    long current_note_length15 = 0;\n    long current_note_length16\
    \ = 0;\n    long current_note_length17 = 0;\n    long current_note_length18 =\
    \ 0;\n    long current_note_length19 = 0;\n    long current_note_length20 = 0;\n\
    \    long current_note_length21 = 0;\n    long current_note_length22 = 0;\n  \
    \  long current_note_length23 = 0;\n    long current_note_length24 = 0;\n    long\
    \ current_note_length25 = 0;\n    long current_note_length26 = 0;\n    long current_note_length27\
    \ = 0;\n    long current_note_length28 = 0;\n    long current_note_length29 =\
    \ 0;\n    long current_note_length30 = 0;\n    long current_note_length31 = 0;\n\
    \    long current_note_length32 = 0;\n    long current_note_length33 = 0;\n  \
    \  long current_note_length34 = 0;\n    long current_note_length35 = 0;\n    long\
    \ current_note_length36 = 0;\n    long current_note_length37 = 0;\n    long current_note_length38\
    \ = 0;\n    long current_note_length39 = 0;\n    long current_note_length40 =\
    \ 0;\n    long current_note_length41 = 0;\n    long current_note_length42 = 0;\n\
    \    long current_note_length43 = 0;\n    long current_note_length44 = 0;\n  \
    \  long current_note_length45 = 0;\n    long current_note_length46 = 0;\n    long\
    \ current_note_length47 = 0;\n    long current_note_length48 = 0;\n    long current_note_length49\
    \ = 0;\n    long current_note_length50 = 0;\n    long current_note_length51 =\
    \ 0;\n    long current_note_length52 = 0;\n    long current_note_length53 = 0;\n\
    \    long current_note_length54 = 0;\n    long current_note_length55 = 0;\n  \
    \  long current_note_length56 = 0;\n    long current_note_length57 = 0;\n    long\
    \ current_note_length58 = 0;\n    long current_note_length59 = 0;\n    long current_note_length60\
    \ = 0;\n    long current_note_length61 = 0;\n    long current_\n}\nint main()\
    \ {\n    auto candidate = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n\
    \    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqov3rcrj.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpqov3rcrj.cpp:77:1: error: expected initializer before \u2018}\u2019\
    \ token\n   77 | }\n      | ^\n/tmp/tmpqov3rcrj.cpp:77:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    long beats_sum = 0;\n    long beats_sum2 = 0;\n    long beats_sum3\
    \ = 0;\n    long beats_sum4 = 0;\n    long beats_sum5 = 0;\n    long beats_sum6\
    \ = 0;\n    long beats_sum7 = 0;\n    long beats_sum8 = 0;\n    long beats_sum9\
    \ = 0;\n    long beats_sum10 = 0;\n    long beats_sum11 = 0;\n    long beats_sum12\
    \ = 0;\n    long beats_sum13 = 0;\n    long beats_sum14 = 0;\n    long beats_sum15\
    \ = 0;\n    long beats_sum16 = 0;\n    long beats_sum17 = 0;\n    long beats_sum18\
    \ = 0;\n    long beats_sum19 = 0;\n    long beats_sum20 = 0;\n    long beats_sum21\
    \ = 0;\n    long beats_sum22 = 0;\n    long beats_sum23 = 0;\n    long beats_sum24\
    \ = 0;\n    long beats_sum25 = 0;\n    long beats_sum26 = 0;\n    long beats_sum27\
    \ = 0;\n    long beats_sum28 = 0;\n    long beats_sum29 = 0;\n    long beats_sum30\
    \ = 0;\n    long beats_sum31 = 0;\n    long beats_sum32 = 0;\n    long beats_sum33\
    \ = 0;\n    long beats_sum34 = 0;\n    long beats_sum35 = 0;\n    long beats_sum36\
    \ = 0;\n    long beats_sum37 = 0;\n    long beats_sum38 = 0;\n    long beats_sum39\
    \ = 0;\n    long beats_sum40 = 0;\n    long beats_sum41 = 0;\n    long beats_sum42\
    \ = 0;\n    long beats_sum43 = 0;\n    long beats_sum44 = 0;\n    long beats_sum45\
    \ = 0;\n    long beats_sum46 = 0;\n    long beats_sum47 = 0;\n    long beats_sum48\
    \ = 0;\n    long beats_sum49 = 0;\n    long beats_sum50 = 0;\n    long beats_sum51\
    \ = 0;\n    long beats_sum52 = 0;\n    long beats_sum53 = 0;\n    long beats_sum54\
    \ = 0;\n    long beats_sum55 = 0;\n    long beats_sum56 = 0;\n    long beats_sum57\
    \ = 0;\n    long beats_sum58 = 0;\n    long beats_sum59 = 0;\n    long beats_sum60\
    \ = 0;\n    long beats_sum61 = 0;\n    long beats_sum62 = 0;\n    long beats_sum63\
    \ = 0;\n    long beats_sum64\n}\nint main() {\n    auto candidate = parse_music;\n\
    \    assert(candidate((\"\")) == (std::vector<long>()));\n    assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \   assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1, (long)1,\
    \ (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\")) == (std::vector<long>({(long)2,\
    \ (long)2, (long)1, (long)1, (long)4, (long)4, (long)4, (long)4})));\n    assert(candidate((\"\
    o| .| o| .| o o| o o|\")) == (std::vector<long>({(long)2, (long)1, (long)2, (long)1,\
    \ (long)4, (long)2, (long)4, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2z0u308x.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp2z0u308x.cpp:76:1: error: expected initializer before \u2018}\u2019\
    \ token\n   76 | }\n      | ^\n/tmp/tmp2z0u308x.cpp:76:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long beats = 0;\n   \
    \ long notes = 0;\n    long note = 0;\n    long note_count = 0;\n    long note_length\
    \ = 0;\n    long note_length_count = 0;\n    long note_length = 0;\n    long note_length_count2\
    \ = 0;\n    long note_length2 = 0;\n    long note_length_count3 = 0;\n    long\
    \ note_length3 = 0;\n    long note_length_count4 = 0;\n    long note_length4 =\
    \ 0;\n    long note_length_count5 = 0;\n    long note_length5 = 0;\n    long note_length_count6\
    \ = 0;\n    long note_length6 = 0;\n    long note_length_count7 = 0;\n    long\
    \ note_length7 = 0;\n    long note_length_count8 = 0;\n    long note_length8 =\
    \ 0;\n    long note_length_count9 = 0;\n    long note_length9 = 0;\n    long note_length_count10\
    \ = 0;\n    long note_length10 = 0;\n    long note_length_count11 = 0;\n    long\
    \ note_length11 = 0;\n    long note_length_count12 = 0;\n    long note_length12\
    \ = 0;\n    long note_length_count13 = 0;\n    long note_length13 = 0;\n    long\
    \ note_length_count14 = 0;\n    long note_length14 = 0;\n    long note_length_count15\
    \ = 0;\n    long note_length15 = 0;\n    long note_length_count16 = 0;\n    long\
    \ note_length16 = 0;\n    long note_length_count17 = 0;\n    long note_length17\
    \ = 0;\n    long note_length_count18 = 0;\n    long note_length18 = 0;\n    long\
    \ note_length_count19 = 0;\n    long note_length19 = 0;\n    long note_length_count20\
    \ = 0;\n    long note_length20 = 0;\n    long note_length_count21 = 0;\n    long\
    \ note_length21 = 0;\n    long note_length_count22 = 0;\n    long note_length22\
    \ = 0;\n    long note_length_count23 = 0;\n    long note_length23 = 0;\n    long\
    \ note_length_count24 = 0;\n    long note_length24 = 0;\n    long note_length_count25\
    \ = 0;\n    long note_length25 = 0;\n    long note_length_count26 = 0;\n    long\
    \ note_length26 = 0;\n    long note_length_count27 = 0;\n    long note_length27\
    \ = 0;\n    long note_length_count28 = 0;\n    long note_length28 = 0;\n    long\
    \ note_length_count29 = 0;\n    long note_length29 = 0;\n    long note_length_count30\
    \ = 0;\n    long note_length30 = 0;\n    long note_length_count31 = 0;\n    long\
    \ note_length31 = 0;\n    long note_length_count32 = 0;\n    long note_length32\n\
    }\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"\
    )) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqr3pcnst.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpqr3pcnst.cpp:14:10: error: conflicting declaration \u2018long int beats\u2019\
    \n   14 |     long beats = 0;\n      |          ^~~~~\n/tmp/tmpqr3pcnst.cpp:11:23:\
    \ note: previous declaration as \u2018std::vector<long int> beats\u2019\n   11\
    \ |     std::vector<long> beats;\n      |                       ^~~~~\n/tmp/tmpqr3pcnst.cpp:16:10:\
    \ error: conflicting declaration \u2018long int note\u2019\n   16 |     long note\
    \ = 0;\n      |          ^~~~\n/tmp/tmpqr3pcnst.cpp:12:17: note: previous declaration\
    \ as \u2018std::string note\u2019\n   12 |     std::string note;\n      |    \
    \             ^~~~\n/tmp/tmpqr3pcnst.cpp:20:10: error: redeclaration of \u2018\
    long int note_length\u2019\n   20 |     long note_length = 0;\n      |       \
    \   ^~~~~~~~~~~\n/tmp/tmpqr3pcnst.cpp:18:10: note: \u2018long int note_length\u2019\
    \ previously declared here\n   18 |     long note_length = 0;\n      |       \
    \   ^~~~~~~~~~~\n/tmp/tmpqr3pcnst.cpp:83:1: error: expected initializer before\
    \ \u2018}\u2019 token\n   83 | }\n      | ^\n/tmp/tmpqr3pcnst.cpp:83:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Your code here\n    std::vector<long> beats;\n    std::string note;\n    long\
    \ beat = 0;\n    long beats = 0;\n    long notes = 0;\n    long last_note = 0;\n\
    \    long last_beat = 0;\n    long last_beats = 0;\n    long last_notes = 0;\n\
    \    long last_last_note = 0;\n    long last_last_beat = 0;\n    long last_last_beats\
    \ = 0;\n    long last_last_notes = 0;\n    long last_last_last_note = 0;\n   \
    \ long last_last_last_beat = 0;\n    long last_last_last_beats = 0;\n    long\
    \ last_last_last_notes = 0;\n    long last_last_last_last_note = 0;\n    long\
    \ last_last_last_last_beat = 0;\n    long last_last_last_last_beats = 0;\n   \
    \ long last_last_last_last_notes = 0;\n    long last_last_last_last_last_note\
    \ = 0;\n    long last_last_last_last_last_beat = 0;\n    long last_last_last_last_last_beats\
    \ = 0;\n    long last_last_last_last_last_notes = 0;\n    long last_last_last_last_last_last_note\
    \ = 0;\n    long last_last_last_last_last_last_beat = 0;\n    long last_last_last_last_last_last_beats\
    \ = 0;\n    long last_last_last_last_last_last_notes = 0;\n    long last_last_last_last_last_last_last_note\
    \ = 0;\n    long last_last_last_last_last_last_last_beat = 0;\n    long last_last_last_last_last_last_last_beats\
    \ = 0;\n    long last_last_last_last_last_last_last_notes = 0;\n    long last_last_last_last_last_last_last_last_note\
    \ = 0;\n    long last_last_last_last_last_last_last_last_beat = 0;\n    long last_last_last_last_last_last_last_last_beats\
    \ = 0;\n    long last_last_last_last_last_last_last_last_notes = 0;\n    long\
    \ last_last_last_last_last_last_last_last_last_note = 0;\n    long last_last_last_last_last_last_last_last_last_beat\
    \ = 0;\n    long last_last_last_last_last_last_last_last_last_beats = 0;\n   \
    \ long last_last_last_last_last_last_last_last_last_notes = 0;\n    long last_last_last_last_last_last_last_last_last_last_note\
    \ = 0;\n    long last_last_last_last_last_last_last_last_last_last_beat = 0;\n\
    \    long last_last_last_last_last_last_last_last_last_last_beats = 0;\n    long\
    \ last_last_last_last_last_last_last_last_last_last_notes = 0;\n    long last_last_last_last_last_last_last_last_last_last_last_note\
    \ = 0;\n    long last_last_last_last_last_last_last_last_last_last_last_beat =\
    \ 0;\n    long last_last_last_last_last_last_last_last_last_last_last_beats =\
    \ 0;\n    long last_last_last_last_last_last_last_last_last_last_\n}\nint main()\
    \ {\n    auto candidate = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n\
    \    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptkpyb8fb.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmptkpyb8fb.cpp:15:10: error: conflicting declaration \u2018long int beats\u2019\
    \n   15 |     long beats = 0;\n      |          ^~~~~\n/tmp/tmptkpyb8fb.cpp:12:23:\
    \ note: previous declaration as \u2018std::vector<long int> beats\u2019\n   12\
    \ |     std::vector<long> beats;\n      |                       ^~~~~\n/tmp/tmptkpyb8fb.cpp:61:1:\
    \ error: expected initializer before \u2018}\u2019 token\n   61 | }\n      | ^\n\
    /tmp/tmptkpyb8fb.cpp:61:1: warning: no return statement in function returning\
    \ non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long beats = 0;\n   \
    \ long last_beat = 0;\n    long last_beats = 0;\n    long last_note = 0;\n   \
    \ long last_notes = 0;\n    long last_notes_beat = 0;\n    long last_notes_beats\
    \ = 0;\n    long last_notes_beats_beat = 0;\n    long last_notes_beats_beats =\
    \ 0;\n    long last_notes_beats_beats_beat = 0;\n    long last_notes_beats_beats_beats\
    \ = 0;\n    long last_notes_beats_beats_beats_beat = 0;\n    long last_notes_beats_beats_beats_beats\
    \ = 0;\n    long last_notes_beats_beats_beats_beats_beat = 0;\n    long last_notes_beats_beats_beats_beats_beats\
    \ = 0;\n    long last_notes_beats_beats_beats_beats_beats_beat = 0;\n    long\
    \ last_notes_beats_beats_beats_beats_beats_beats = 0;\n    long last_notes_beats_beats_beats_beats_beats_beats\
    \ = 0;\n    long last_notes_beats_beats_beats_beats_beats_beats_beat = 0;\n  \
    \  long last_notes_beats_beats_beats_beats_beats_beats = 0;\n    long last_notes_beats_beats_beats_beats_beats_beats_beat\
    \ = 0;\n    long last_notes_beats_beats_beats_beats_beats_beats_beats = 0;\n \
    \   long last_notes_beats_beats_beats_beats_beats_beats_beats = 0;\n    long last_notes_beats_beats_beats_beats_beats_beats_beat\
    \ = 0;\n    long last_notes_beats_beats_beats_beats_beats_beats_beats = 0;\n \
    \   long last_notes_beats_beats_beats_beats_beats_beats_beats = 0;\n    long last_notes_beats_beats_beats_beats_beats_beats_beats_beat\
    \ = 0;\n    long last_notes_beats_beats_beats_beats_beats_beats_beats_beats =\
    \ 0;\n    long last_notes_beats_beats_beats_beats_beats_beats_beats_beat = 0;\n\
    \    long last_notes_beats_beats_beats_beats_beats_beats_beats_beats = 0;\n  \
    \  long last_notes_beats_beats_beats_beats_beats_beats_beats_beats_beat = 0;\n\
    \    long last_notes_beats_beats_beats_beats_beats_beats_beats_beats_beat\n}\n\
    int main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"))\
    \ == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphi31uzbn.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmphi31uzbn.cpp:14:10: error: conflicting declaration \u2018long int beats\u2019\
    \n   14 |     long beats = 0;\n      |          ^~~~~\n/tmp/tmphi31uzbn.cpp:11:23:\
    \ note: previous declaration as \u2018std::vector<long int> beats\u2019\n   11\
    \ |     std::vector<long> beats;\n      |                       ^~~~~\n/tmp/tmphi31uzbn.cpp:31:10:\
    \ error: redeclaration of \u2018long int last_notes_beats_beats_beats_beats_beats_beats\u2019\
    \n   31 |     long last_notes_beats_beats_beats_beats_beats_beats = 0;\n     \
    \ |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphi31uzbn.cpp:30:10:\
    \ note: \u2018long int last_notes_beats_beats_beats_beats_beats_beats\u2019 previously\
    \ declared here\n   30 |     long last_notes_beats_beats_beats_beats_beats_beats\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphi31uzbn.cpp:33:10:\
    \ error: redeclaration of \u2018long int last_notes_beats_beats_beats_beats_beats_beats\u2019\
    \n   33 |     long last_notes_beats_beats_beats_beats_beats_beats = 0;\n     \
    \ |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphi31uzbn.cpp:30:10:\
    \ note: \u2018long int last_notes_beats_beats_beats_beats_beats_beats\u2019 previously\
    \ declared here\n   30 |     long last_notes_beats_beats_beats_beats_beats_beats\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphi31uzbn.cpp:34:10:\
    \ error: redeclaration of \u2018long int last_notes_beats_beats_beats_beats_beats_beats_beat\u2019\
    \n   34 |     long last_notes_beats_beats_beats_beats_beats_beats_beat = 0;\n\
    \      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphi31uzbn.cpp:32:10:\
    \ note: \u2018long int last_notes_beats_beats_beats_beats_beats_beats_beat\u2019\
    \ previously declared here\n   32 |     long last_notes_beats_beats_beats_beats_beats_beats_beat\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphi31uzbn.cpp:36:10: error: redeclaration of \u2018long int last_notes_beats_beats_beats_beats_beats_beats_beats\u2019\
    \n   36 |    "
  stdout: ''
  timestamp: 1660129737
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long note_count = 0;\n\
    \    long note_length = 0;\n    long note_lengths[4] = { 1, 1, 2, 1 };\n    for\
    \ (char c : music_string) {\n        if (c == 'o') {\n            note = note_count;\n\
    \            beat = 0;\n            note_length = 0;\n            note_lengths[note_count]\
    \ = note_length;\n            note_count += 1;\n        } else if (c == '|') {\n\
    \            note = note_count;\n            beat = 0;\n            note_length\
    \ = 0;\n            note_lengths[note_count] = note_length;\n            note_count\
    \ += 1;\n        } else if (c == '.') {\n            note = note_count;\n    \
    \        beat = 0;\n            note_length = 0;\n            note_lengths[note_count]\
    \ = note_length;\n            note_count += 1;\n        } else {\n           \
    \ beat += 1;\n            note_length += 1;\n        }\n    }\n    beats.push_back(beat);\n\
    \    return beats;\n}\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\
    \")) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: Exception
  stderr: 'tmpj1pc46un: /tmp/tmpj1pc46un.cpp:46: int main(): Assertion `candidate((""))
    == (std::vector<long>())'' failed.

    '
  stdout: ''
  timestamp: 1660129738
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long beats = 0;\n   \
    \ long last_beat = 0;\n    long last_beats = 0;\n    long last_note = 0;\n   \
    \ long last_notes = 0;\n    long last_notes_beat = 0;\n    long last_notes_beats\
    \ = 0;\n    long last_notes_note = 0;\n    long last_notes_notes = 0;\n    long\
    \ last_notes_notes_beat = 0;\n    long last_notes_notes_beats = 0;\n    long last_notes_notes_note\
    \ = 0;\n    long last_notes_notes_notes = 0;\n    long last_notes_notes_notes_beat\
    \ = 0;\n    long last_notes_notes_notes_beats = 0;\n    long last_notes_notes_notes_note\
    \ = 0;\n    long last_notes_notes_notes_notes = 0;\n    long last_notes_notes_notes_notes_beat\
    \ = 0;\n    long last_notes_notes_notes_notes_beats = 0;\n    long last_notes_notes_notes_notes_note\
    \ = 0;\n    long last_notes_notes_notes_notes_notes = 0;\n    long last_notes_notes_notes_notes_notes_beat\
    \ = 0;\n    long last_notes_notes_notes_notes_notes_beats = 0;\n    long last_notes_notes_notes_notes_notes_note\
    \ = 0;\n    long last_notes_notes_notes_notes_notes_notes = 0;\n    long last_notes_notes_notes_notes_notes_notes_beat\
    \ = 0;\n    long last_notes_notes_notes_notes_notes_notes_beats = 0;\n    long\
    \ last_notes_notes_notes_notes_notes_notes_note = 0;\n    long last_notes_notes_notes_notes_notes_notes_notes\
    \ = 0;\n    long last_notes_notes_notes_notes_notes_notes_notes_beat = 0;\n  \
    \  long last_notes_notes_notes_notes_notes_notes_notes_beats = 0;\n    long last_notes_notes_notes_notes_notes_notes_notes_note\
    \ = 0;\n    long last_notes_notes_notes_notes_notes_notes_notes_notes = 0;\n \
    \   long last_notes_notes_notes_notes_notes_notes_notes_notes_beat = 0;\n    long\
    \ last_notes_notes_notes_notes_notes_notes_notes_notes_beats = 0;\n    long last_notes_notes_notes_notes_notes_notes_notes_notes_note\
    \ = 0;\n    long last_notes_notes_note\n}\nint main() {\n    auto candidate =\
    \ parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n    assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \   assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1, (long)1,\
    \ (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\")) == (std::vector<long>({(long)2,\
    \ (long)2, (long)1, (long)1, (long)4, (long)4, (long)4, (long)4})));\n    assert(candidate((\"\
    o| .| o| .| o o| o o|\")) == (std::vector<long>({(long)2, (long)1, (long)2, (long)1,\
    \ (long)4, (long)2, (long)4, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2j8l9lmu.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp2j8l9lmu.cpp:14:10: error: conflicting declaration \u2018long int beats\u2019\
    \n   14 |     long beats = 0;\n      |          ^~~~~\n/tmp/tmp2j8l9lmu.cpp:11:23:\
    \ note: previous declaration as \u2018std::vector<long int> beats\u2019\n   11\
    \ |     std::vector<long> beats;\n      |                       ^~~~~\n/tmp/tmp2j8l9lmu.cpp:51:1:\
    \ error: expected initializer before \u2018}\u2019 token\n   51 | }\n      | ^\n\
    /tmp/tmp2j8l9lmu.cpp:51:1: warning: no return statement in function returning\
    \ non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Your code goes here\n    std::vector<long> beats;\n    long beat = 0;\n    long\
    \ note = 0;\n    long last_note = 0;\n    long last_beat = 0;\n    long last_beat2\
    \ = 0;\n    long last_beat3 = 0;\n    long last_beat4 = 0;\n    long last_beat5\
    \ = 0;\n    long last_beat6 = 0;\n    long last_beat7 = 0;\n    long last_beat8\
    \ = 0;\n    long last_beat9 = 0;\n    long last_beat10 = 0;\n    long last_beat11\
    \ = 0;\n    long last_beat12 = 0;\n    long last_beat13 = 0;\n    long last_beat14\
    \ = 0;\n    long last_beat15 = 0;\n    long last_beat16 = 0;\n    long last_beat17\
    \ = 0;\n    long last_beat18 = 0;\n    long last_beat19 = 0;\n    long last_beat20\
    \ = 0;\n    long last_beat21 = 0;\n    long last_beat22 = 0;\n    long last_beat23\
    \ = 0;\n    long last_beat24 = 0;\n    long last_beat25 = 0;\n    long last_beat26\
    \ = 0;\n    long last_beat27 = 0;\n    long last_beat28 = 0;\n    long last_beat29\
    \ = 0;\n    long last_beat30 = 0;\n    long last_beat31 = 0;\n    long last_beat32\
    \ = 0;\n    long last_beat33 = 0;\n    long last_beat34 = 0;\n    long last_beat35\
    \ = 0;\n    long last_beat36 = 0;\n    long last_beat37 = 0;\n    long last_beat38\
    \ = 0;\n    long last_beat39 = 0;\n    long last_beat40 = 0;\n    long last_beat41\
    \ = 0;\n    long last_beat42 = 0;\n    long last_beat43 = 0;\n    long last_beat44\
    \ = 0;\n    long last_beat45 = 0;\n    long last_beat46 = 0;\n    long last_beat47\
    \ = 0;\n    long last_beat48 = 0;\n    long last_beat49 = 0;\n    long last_beat50\
    \ = 0;\n    long last_beat51 = 0;\n    long last_beat52 = 0;\n    long last_beat53\
    \ = 0;\n    long last_beat54 = 0;\n    long last_beat55 = 0;\n    long last_beat56\
    \ = 0;\n    long last_beat57 = 0;\n    long last_beat58 = 0;\n    long last_beat59\
    \ = 0;\n    long last_beat60 = 0;\n    long last_beat61 = 0;\n    long last_beat62\
    \ = 0;\n    long last_beat63 = 0;\n    long last_beat64 = 0;\n    long last_beat65\
    \ = 0;\n    long last_beat66 = 0;\n    long last_beat67 = 0;\n    long last_beat68\
    \ = 0;\n    long last_beat69 = 0;\n    long last_beat70\n}\nint main() {\n   \
    \ auto candidate = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n\
    \    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpycvoqt1s.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpycvoqt1s.cpp:86:1: error: expected initializer before \u2018}\u2019\
    \ token\n   86 | }\n      | ^\n/tmp/tmpycvoqt1s.cpp:86:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    long last_note = 0;\n    for (char c : music_string) {\n        if (c ==\
    \ 'o') {\n            note = note.empty() ? \"w\" : note;\n            beats.push_back(beat);\n\
    \            beat = 0;\n            last_note = note;\n            last_beat =\
    \ beat;\n        } else if (c == 'o|') {\n            note = note.empty() ? \"\
    w\" : note;\n            beats.push_back(beat);\n            beat = 0;\n     \
    \       last_note = note;\n            last_beat = beat;\n        } else if (c\
    \ == '.|') {\n            note = note.empty() ? \"w\" : note;\n            beats.push_back(beat);\n\
    \            beat = 0;\n            last_note = note;\n            last_beat =\
    \ beat;\n        } else if (c == '|') {\n            note = note.empty() ? \"\
    w\" : note;\n            beats.push_back(beat);\n            beat = 0;\n     \
    \       last_note = note;\n            last_beat = beat;\n        } else if (c\
    \ == '|.') {\n            note = note.empty() ? \"w\" : note;\n            beats.push_back(beat);\n\
    \            beat = 0;\n            last_note = note;\n            last_beat =\
    \ beat;\n        } else if (c == '|.o') {\n            note = note.empty() ? \"\
    w\" : note;\n            beats.push_back(beat);\n            beat = 0;\n     \
    \       last_note = note;\n            last_beat = beat;\n        } else if (c\
    \ == '|.o|') {\n            note = note.empty() ? \"w\" : note;\n            beats.push_back(beat);\n\
    \            beat = 0;\n            last_note = note;\n            last_beat =\
    \ beat;\n        } else if (c == '|.o|.') {\n            note = note.empty() ?\
    \ \"w\" : note;\n            beats.push_back(beat);\n            beat = 0;\n \
    \           last_note = note;\n            last_beat = beat;\n        } else if\
    \ (c == '|.o|.o') {\n            note = note.empty() ? \"w\" : note;\n       \
    \     beats.push_back(beat);\n            beat = 0;\n            last_note = note;\n\
    \            last_beat = beat;\n        } else if (c == '|.o|.o|') {\n       \
    \     note = note.empty() ? \"w\" : note;\n            beats.push_back(beat);\n\
    \            beat = 0;\n            last_note = note;\n            last_beat =\
    \ beat;\n        } else if (c == '|.o|.o|.') {\n            note = note.empty()\
    \ ? \"w\" : note;\n            beats.push_back(beat\n}\nint main() {\n    auto\
    \ candidate = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n\
    \    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfwbohyp7.cpp:23:25: warning: multi-character character constant\
    \ [-Wmultichar]\n   23 |         } else if (c == 'o|') {\n      |            \
    \             ^~~~\n/tmp/tmpfwbohyp7.cpp:29:25: warning: multi-character character\
    \ constant [-Wmultichar]\n   29 |         } else if (c == '.|') {\n      |   \
    \                      ^~~~\n/tmp/tmpfwbohyp7.cpp:41:25: warning: multi-character\
    \ character constant [-Wmultichar]\n   41 |         } else if (c == '|.') {\n\
    \      |                         ^~~~\n/tmp/tmpfwbohyp7.cpp:47:25: warning: multi-character\
    \ character constant [-Wmultichar]\n   47 |         } else if (c == '|.o') {\n\
    \      |                         ^~~~~\n/tmp/tmpfwbohyp7.cpp:53:25: warning: multi-character\
    \ character constant [-Wmultichar]\n   53 |         } else if (c == '|.o|') {\n\
    \      |                         ^~~~~~\n/tmp/tmpfwbohyp7.cpp:59:25: warning:\
    \ character constant too long for its type\n   59 |         } else if (c == '|.o|.')\
    \ {\n      |                         ^~~~~~~\n/tmp/tmpfwbohyp7.cpp:65:25: warning:\
    \ character constant too long for its type\n   65 |         } else if (c == '|.o|.o')\
    \ {\n      |                         ^~~~~~~~\n/tmp/tmpfwbohyp7.cpp:71:25: warning:\
    \ character constant too long for its type\n   71 |         } else if (c == '|.o|.o|')\
    \ {\n      |                         ^~~~~~~~~\n/tmp/tmpfwbohyp7.cpp:77:25: warning:\
    \ character constant too long for its type\n   77 |         } else if (c == '|.o|.o|.')\
    \ {\n      |                         ^~~~~~~~~~\n/tmp/tmpfwbohyp7.cpp: In function\
    \ \u2018std::vector<long int> parse_music(std::string)\u2019:\n/tmp/tmpfwbohyp7.cpp:21:25:\
    \ error: cannot convert \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018long int\u2019 in assignment\n   21 |             last_note = note;\n\
    \      |                         ^~~~\n      |                         |\n   \
    \   |                         std::string {aka std::__cxx11::basic_string<char>}\n\
    /tmp/tmpfwbohyp7.cpp:27:25: error: cannot convert \u2018std::string\u2019 {aka\
    \ \u2018std::__cxx11::basic_string<char>\u2019} to \u2018long int\u2019 in assignment\n\
    \ "
  stdout: ''
  timestamp: 1660129737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    long last_note = 0;\n    long last_note_beat = 0;\n    long last_note_beat_time\
    \ = 0;\n    long last_note_beat_time_diff = 0;\n    long last_note_beat_time_diff_time\
    \ = 0;\n    long last_note_beat_time_diff_time_time = 0;\n    long last_note_beat_time_diff_time_time_time\
    \ = 0;\n    long last_note_beat_time_diff_time_time_time_time = 0;\n    long last_note_beat_time_diff_time_time_time_time_time\
    \ = 0;\n    long last_note_beat_time_diff_time_time_time_time_time_time = 0;\n\
    \    long last_note_beat_time_diff_time_time_time_time_time_time_time = 0;\n \
    \   long last_note_beat_time_diff_time_time_time_time_time_time_time_time = 0;\n\
    \    long last_note_beat_time_diff_time_time_time_time_time_time_time_time_time\
    \ = 0;\n    long last_note_beat_time_diff_time_time_time_time_time_time_time_time_time_time\
    \ = 0;\n    long last_note_beat_time_diff_time_time_time_time_time_time_time_time_time_time_time\
    \ = 0;\n    long last_note_beat_time_diff_time_time_time_time_time_time_time_time_time_time_time_time\
    \ = 0;\n    long last_note_beat_time_diff_time_time_time_time_time_time_time_time_time_time_time_time_time\
    \ = 0;\n    long last_note_beat_time_diff_time_time_time_time_time_time_time_time_time_time_time_time_time_time\
    \ = 0;\n    long last_note_beat_time_diff_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time\
    \ = 0;\n    long last_note_beat_time_diff_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time\
    \ = 0;\n    long last_note_beat_time_diff_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time\
    \ = 0;\n    long last_note_beat_time_diff_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time\
    \ = 0;\n    long last_note_beat_time_diff_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time\
    \ = 0;\n    long last_note_beat_time_diff_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time\
    \ = 0;\n    long last_note_beat_time_diff_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time\
    \ = 0;\n    long last_note_beat_time_diff_time_time_time_time_time_time_time_time_time_time_time_time_time_time_\n\
    }\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"\
    )) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp941oezb1.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp941oezb1.cpp:36:10: error: redeclaration of \u2018long int last_note_beat_time_diff_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time\u2019\
    \n   36 |     long last_note_beat_time_diff_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp941oezb1.cpp:35:10: note: \u2018long int last_note_beat_time_diff_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time\u2019\
    \ previously declared here\n   35 |     long last_note_beat_time_diff_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp941oezb1.cpp:38:10: error: redeclaration of \u2018long int last_note_beat_time_diff_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time\u2019\
    \n   38 |     long last_note_beat_time_diff_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp941oezb1.cpp:37:10: note: \u2018long int last_note_beat_time_diff_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time\u2019\
    \ previously declared here\n   37 |     long last_note_beat_time_diff_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp941oezb1.cpp:41:1: error: expected initializer before \u2018}\u2019 token\n\
    \   41 | }\n      | ^\n/tmp/tmp941oezb1.cpp:41:1: warning: no return statement\
    \ in function returnin"
  stdout: ''
  timestamp: 1660129737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long beats = 0;\n   \
    \ long notes = 0;\n    long note = 0;\n    long notes_beat = 0;\n    long notes_beats\
    \ = 0;\n    long notes_beats_note = 0;\n    long notes_beats_notes = 0;\n    long\
    \ notes_beats_notes_beat = 0;\n    long notes_beats_notes_beats = 0;\n    long\
    \ notes_beats_notes_beats_note = 0;\n    long notes_beats_notes_beats_notes =\
    \ 0;\n    long notes_beats_notes_beats_notes_beat = 0;\n    long notes_beats_notes_beats_notes_beats\
    \ = 0;\n    long notes_beats_notes_beats_notes_beats_note = 0;\n    long notes_beats_notes_beats_notes_beats_notes\
    \ = 0;\n    long notes_beats_notes_beats_notes_beats_notes_beat = 0;\n    long\
    \ notes_beats_notes_beats_notes_beats_notes_beats = 0;\n    long notes_beats_notes_beats_notes_beats_notes_beats_note\
    \ = 0;\n    long notes_beats_notes_beats_notes_beats_notes_beats_notes = 0;\n\
    \    long notes_beats_notes_beats_notes_beats_notes_beats_notes_beat = 0;\n  \
    \  long notes_beats_notes_beats_notes_beats_notes_beats_notes_beats = 0;\n   \
    \ long notes_beats_notes_beats_notes_beats_notes_beats_notes_beats_note = 0;\n\
    \    long notes_beats_notes_beats_notes_beats_notes_beats_notes_beats_notes =\
    \ 0;\n    long notes_beats_notes_beats_notes_beats_notes_beats_notes_beats_notes_beat\
    \ = 0;\n    long notes_beats_notes_beats_notes_beats_notes_beats_notes_beats_notes_beats\
    \ = 0;\n    long notes_beats_notes_beats_notes_beats_notes_beats_notes_beats_notes_beats_note\
    \ = 0;\n    long notes_beats_notes_beats_notes_beats_notes_beats_notes_beats_notes_beats_notes\
    \ = 0;\n    long notes_beats_notes_beats_notes_beats_notes_beats_notes_beats_notes_beats_notes_beat\
    \ = 0;\n    long notes_beats_notes_beats_notes_beats_notes_beat\n}\nint main()\
    \ {\n    auto candidate = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n\
    \    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpehot_6ii.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpehot_6ii.cpp:14:10: error: conflicting declaration \u2018long int beats\u2019\
    \n   14 |     long beats = 0;\n      |          ^~~~~\n/tmp/tmpehot_6ii.cpp:11:23:\
    \ note: previous declaration as \u2018std::vector<long int> beats\u2019\n   11\
    \ |     std::vector<long> beats;\n      |                       ^~~~~\n/tmp/tmpehot_6ii.cpp:16:10:\
    \ error: conflicting declaration \u2018long int note\u2019\n   16 |     long note\
    \ = 0;\n      |          ^~~~\n/tmp/tmpehot_6ii.cpp:12:17: note: previous declaration\
    \ as \u2018std::string note\u2019\n   12 |     std::string note;\n      |    \
    \             ^~~~\n/tmp/tmpehot_6ii.cpp:43:1: error: expected initializer before\
    \ \u2018}\u2019 token\n   43 | }\n      | ^\n/tmp/tmpehot_6ii.cpp:43:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long beats = 0;\n   \
    \ long notes = 0;\n    long note = 0;\n    long note_count = 0;\n    long note_length\
    \ = 0;\n    long note_length_count = 0;\n    long note_length = 0;\n    long note_length_count2\
    \ = 0;\n    long note_length2 = 0;\n    long note_length_count3 = 0;\n    long\
    \ note_length3 = 0;\n    long note_length_count4 = 0;\n    long note_length4 =\
    \ 0;\n    long note_length_count5 = 0;\n    long note_length5 = 0;\n    long note_length_count6\
    \ = 0;\n    long note_length6 = 0;\n    long note_length_count7 = 0;\n    long\
    \ note_length7 = 0;\n    long note_length_count8 = 0;\n    long note_length8 =\
    \ 0;\n    long note_length_count9 = 0;\n    long note_length9 = 0;\n    long note_length_count10\
    \ = 0;\n    long note_length10 = 0;\n    long note_length_count11 = 0;\n    long\
    \ note_length11 = 0;\n    long note_length_count12 = 0;\n    long note_length12\
    \ = 0;\n    long note_length_count13 = 0;\n    long note_length13 = 0;\n    long\
    \ note_length_count14 = 0;\n    long note_length14 = 0;\n    long note_length_count15\
    \ = 0;\n    long note_length15 = 0;\n    long note_length_count16 = 0;\n    long\
    \ note_length16 = 0;\n    long note_length_count17 = 0;\n    long note_length17\
    \ = 0;\n    long note_length_count18 = 0;\n    long note_length18 = 0;\n    long\
    \ note_length_count19 = 0;\n    long note_length19 = 0;\n    long note_length_count20\
    \ = 0;\n    long note_length20 = 0;\n    long note_length_count21 = 0;\n    long\
    \ note_length21 = 0;\n    long note_length_count22 = 0;\n    long note_length22\
    \ = 0;\n    long note_length_count23 = 0;\n    long note_length23 = 0;\n    long\
    \ note_length_count24 = 0;\n    long note_length24 = 0;\n    long note_length_count25\
    \ = 0;\n    long note_length25 = 0;\n    long note_length_count26 = 0;\n    long\
    \ note_length26 = 0;\n    long note_length_count27 = 0;\n    long note_length27\
    \ = 0;\n    long note_length_count28 = 0;\n    long note_length28 = 0;\n    long\
    \ note_length_count29 = 0;\n    long note_length29 = 0;\n    long note_length_count30\
    \ = 0;\n    long note_length30 = 0;\n    long note_length_count31 = 0;\n    long\
    \ note_length31 = 0;\n    long note_length_count32 = 0;\n    long note_length32\n\
    }\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"\
    )) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqr3pcnst.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpqr3pcnst.cpp:14:10: error: conflicting declaration \u2018long int beats\u2019\
    \n   14 |     long beats = 0;\n      |          ^~~~~\n/tmp/tmpqr3pcnst.cpp:11:23:\
    \ note: previous declaration as \u2018std::vector<long int> beats\u2019\n   11\
    \ |     std::vector<long> beats;\n      |                       ^~~~~\n/tmp/tmpqr3pcnst.cpp:16:10:\
    \ error: conflicting declaration \u2018long int note\u2019\n   16 |     long note\
    \ = 0;\n      |          ^~~~\n/tmp/tmpqr3pcnst.cpp:12:17: note: previous declaration\
    \ as \u2018std::string note\u2019\n   12 |     std::string note;\n      |    \
    \             ^~~~\n/tmp/tmpqr3pcnst.cpp:20:10: error: redeclaration of \u2018\
    long int note_length\u2019\n   20 |     long note_length = 0;\n      |       \
    \   ^~~~~~~~~~~\n/tmp/tmpqr3pcnst.cpp:18:10: note: \u2018long int note_length\u2019\
    \ previously declared here\n   18 |     long note_length = 0;\n      |       \
    \   ^~~~~~~~~~~\n/tmp/tmpqr3pcnst.cpp:83:1: error: expected initializer before\
    \ \u2018}\u2019 token\n   83 | }\n      | ^\n/tmp/tmpqr3pcnst.cpp:83:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    long beat = 0;\n    long note = 0;\n    long last_note = 0;\n  \
    \  long last_beat = 0;\n    long last_beat2 = 0;\n    long last_beat3 = 0;\n \
    \   long last_beat4 = 0;\n    long last_beat5 = 0;\n    long last_beat6 = 0;\n\
    \    long last_beat7 = 0;\n    long last_beat8 = 0;\n    long last_beat9 = 0;\n\
    \    long last_beat10 = 0;\n    long last_beat11 = 0;\n    long last_beat12 =\
    \ 0;\n    long last_beat13 = 0;\n    long last_beat14 = 0;\n    long last_beat15\
    \ = 0;\n    long last_beat16 = 0;\n    long last_beat17 = 0;\n    long last_beat18\
    \ = 0;\n    long last_beat19 = 0;\n    long last_beat20 = 0;\n    long last_beat21\
    \ = 0;\n    long last_beat22 = 0;\n    long last_beat23 = 0;\n    long last_beat24\
    \ = 0;\n    long last_beat25 = 0;\n    long last_beat26 = 0;\n    long last_beat27\
    \ = 0;\n    long last_beat28 = 0;\n    long last_beat29 = 0;\n    long last_beat30\
    \ = 0;\n    long last_beat31 = 0;\n    long last_beat32 = 0;\n    long last_beat33\
    \ = 0;\n    long last_beat34 = 0;\n    long last_beat35 = 0;\n    long last_beat36\
    \ = 0;\n    long last_beat37 = 0;\n    long last_beat38 = 0;\n    long last_beat39\
    \ = 0;\n    long last_beat40 = 0;\n    long last_beat41 = 0;\n    long last_beat42\
    \ = 0;\n    long last_beat43 = 0;\n    long last_beat44 = 0;\n    long last_beat45\
    \ = 0;\n    long last_beat46 = 0;\n    long last_beat47 = 0;\n    long last_beat48\
    \ = 0;\n    long last_beat49 = 0;\n    long last_beat50 = 0;\n    long last_beat51\
    \ = 0;\n    long last_beat52 = 0;\n    long last_beat53 = 0;\n    long last_beat54\
    \ = 0;\n    long last_beat55 = 0;\n    long last_beat56 = 0;\n    long last_beat57\
    \ = 0;\n    long last_beat58 = 0;\n    long last_beat59 = 0;\n    long last_beat60\
    \ = 0;\n    long last_beat61 = 0;\n    long last_beat62 = 0;\n    long last_beat63\
    \ = 0;\n    long last_beat64 = 0;\n    long last_beat65 = 0;\n    long last_beat66\
    \ = 0;\n    long last_beat67 = 0;\n    long last_beat68 = 0;\n    long last_beat69\
    \ = 0;\n    long last_beat70 = 0;\n    long last_beat\n}\nint main() {\n    auto\
    \ candidate = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n\
    \    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8kiuxtk4.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp8kiuxtk4.cpp:86:1: error: expected initializer before \u2018}\u2019\
    \ token\n   86 | }\n      | ^\n/tmp/tmp8kiuxtk4.cpp:86:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    long last_note = 0;\n    long last_note_length = 0;\n    long note_length\
    \ = 0;\n    long note_length_to_beat = 0;\n    long note_length_to_beat_length\
    \ = 0;\n    long note_length_to_beat_length_length = 0;\n    long note_length_to_beat_length_length_length\
    \ = 0;\n    long note_length_to_beat_length_length_length_length = 0;\n    long\
    \ note_length_to_beat_length_length_length_length_length = 0;\n    long note_length_to_beat_length_length_length_length_length_length\
    \ = 0;\n    long note_length_to_beat_length_length_length_length_length_length_length\
    \ = 0;\n    long note_length_to_beat_length_length_length_length_length_length_length\
    \ = 0;\n    long note_length_to_beat_length_length_length_length_length_length_length\
    \ = 0;\n    long note_length_to_beat_length_length_length_length_length_length_length_length\
    \ = 0;\n    long note_length_to_beat_length_length_length_length_length_length_length_length\
    \ = 0;\n    long note_length_to_beat_length_length_length_length_length_length_length_length\
    \ = 0;\n    long note_length_to_beat_length_length_length_length_length_length_length_length_length\
    \ = 0;\n    long note_length_to_beat_length_length_length_length_length_length_length_length\
    \ = 0;\n    long note_length_to_beat_length_length_length_length_length_length_length_length\
    \ = 0;\n    long note_length_to_beat_length_length_length_length_length_length_length_length_length\
    \ = 0;\n    long note_length_to_beat_length_length_length_length_length_length_length_length_length\
    \ = 0;\n    long note_length_to_beat_length_length_length_length_length_length_length_length_length\
    \ = 0;\n    long note_length_to_beat_length_length_length_length_length_length_length_length_length_length\
    \ = 0;\n    long note_length_to_beat_length_length_length_length_length_length_length_length_length_length\
    \ = 0;\n    long note_length_to_beat_length_length_length_length_length_length_length_length_length\
    \ = 0;\n    long note_length_to_beat_length_length_length_length_length_length_length_length_length\
    \ = 0;\n    long note_length_to_beat_length_length_length_length_length_length_length_length_length\
    \ = 0;\n    long note_length_to_beat_length_length_length_length_length_length_length_length_length_length\
    \ = 0;\n    long note_length_to_beat_length_length_length_length_length_length_length_length_length_length\
    \ = 0;\n    long note_length_to_beat_length_length_length_length_length_length_length_length_length_length\
    \ = 0;\n    long note_length_to_beat_length_length_length_length_length_length_length_length_length_length\
    \ = 0;\n    long note_length_to_beat_length_length_length_length_length_length_length_\n\
    }\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"\
    )) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl2smmppr.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpl2smmppr.cpp:26:10: error: redeclaration of \u2018long int note_length_to_beat_length_length_length_length_length_length_length\u2019\
    \n   26 |     long note_length_to_beat_length_length_length_length_length_length_length\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpl2smmppr.cpp:25:10: note: \u2018long int note_length_to_beat_length_length_length_length_length_length_length\u2019\
    \ previously declared here\n   25 |     long note_length_to_beat_length_length_length_length_length_length_length\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpl2smmppr.cpp:27:10: error: redeclaration of \u2018long int note_length_to_beat_length_length_length_length_length_length_length\u2019\
    \n   27 |     long note_length_to_beat_length_length_length_length_length_length_length\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpl2smmppr.cpp:25:10: note: \u2018long int note_length_to_beat_length_length_length_length_length_length_length\u2019\
    \ previously declared here\n   25 |     long note_length_to_beat_length_length_length_length_length_length_length\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpl2smmppr.cpp:29:10: error: redeclaration of \u2018long int note_length_to_beat_length_length_length_length_length_length_length_length\u2019\
    \n   29 |     long note_length_to_beat_length_length_length_length_length_length_length_length\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpl2smmppr.cpp:28:10: note: \u2018long int note_length_to_beat_length_length_length_length_length_length_length_length\u2019\
    \ previously declared here\n   28 |     long note_length_to_beat_length_length_length_length_length_length_length_length\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpl2smmppr.cp"
  stdout: ''
  timestamp: 1660129737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    long last_note = 0;\n    long note_count = 0;\n    long note_length = 0;\n\
    \    long note_length_count = 0;\n    long note_length_index = 0;\n    long note_length_index2\
    \ = 0;\n    long note_length_index3 = 0;\n    long note_length_index4 = 0;\n \
    \   long note_length_index5 = 0;\n    long note_length_index6 = 0;\n    long note_length_index7\
    \ = 0;\n    long note_length_index8 = 0;\n    long note_length_index9 = 0;\n \
    \   long note_length_index10 = 0;\n    long note_length_index11 = 0;\n    long\
    \ note_length_index12 = 0;\n    long note_length_index13 = 0;\n    long note_length_index14\
    \ = 0;\n    long note_length_index15 = 0;\n    long note_length_index16 = 0;\n\
    \    long note_length_index17 = 0;\n    long note_length_index18 = 0;\n    long\
    \ note_length_index19 = 0;\n    long note_length_index20 = 0;\n    long note_length_index21\
    \ = 0;\n    long note_length_index22 = 0;\n    long note_length_index23 = 0;\n\
    \    long note_length_index24 = 0;\n    long note_length_index25 = 0;\n    long\
    \ note_length_index26 = 0;\n    long note_length_index27 = 0;\n    long note_length_index28\
    \ = 0;\n    long note_length_index29 = 0;\n    long note_length_index30 = 0;\n\
    \    long note_length_index31 = 0;\n    long note_length_index32 = 0;\n    long\
    \ note_length_index33 = 0;\n    long note_length_index34 = 0;\n    long note_length_index35\
    \ = 0;\n    long note_length_index36 = 0;\n    long note_length_index37 = 0;\n\
    \    long note_length_index38 = 0;\n    long note_length_index39 = 0;\n    long\
    \ note_length_index40 = 0;\n    long note_length_index41 = 0;\n    long note_length_index42\
    \ = 0;\n    long note_length_index43 = 0;\n    long note_length_index44 = 0;\n\
    \    long note_length_index45 = 0;\n    long note_length_index46 = 0;\n    long\
    \ note_length_index47 = 0;\n    long note_length_index48 = 0;\n    long note_length_index49\
    \ = 0;\n    long note_length_index50 = 0;\n    long note_length_index51 = 0;\n\
    \    long note_length_index52 = 0;\n    long note_length_index53 = 0;\n    long\
    \ note_length_index54 = 0;\n    long note_length_index55 = 0;\n    long note_length_index56\
    \ = 0;\n    long note_length_index57 = 0;\n    long note_length_index58 = 0;\n\
    \    long note_length_index\n}\nint main() {\n    auto candidate = parse_music;\n\
    \    assert(candidate((\"\")) == (std::vector<long>()));\n    assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \   assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1, (long)1,\
    \ (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\")) == (std::vector<long>({(long)2,\
    \ (long)2, (long)1, (long)1, (long)4, (long)4, (long)4, (long)4})));\n    assert(candidate((\"\
    o| .| o| .| o o| o o|\")) == (std::vector<long>({(long)2, (long)1, (long)2, (long)1,\
    \ (long)4, (long)2, (long)4, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6vyg_0_l.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp6vyg_0_l.cpp:78:1: error: expected initializer before \u2018}\u2019\
    \ token\n   78 | }\n      | ^\n/tmp/tmp6vyg_0_l.cpp:78:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Write your code here\n    std::vector<long> beats;\n    std::string note;\n\
    \    long beat = 0;\n    long note_count = 0;\n    long note_length = 0;\n   \
    \ long note_length_count = 0;\n    long note_length_index = 0;\n    long note_length_index2\
    \ = 0;\n    long note_length_index3 = 0;\n    long note_length_index4 = 0;\n \
    \   long note_length_index5 = 0;\n    long note_length_index6 = 0;\n    long note_length_index7\
    \ = 0;\n    long note_length_index8 = 0;\n    long note_length_index9 = 0;\n \
    \   long note_length_index10 = 0;\n    long note_length_index11 = 0;\n    long\
    \ note_length_index12 = 0;\n    long note_length_index13 = 0;\n    long note_length_index14\
    \ = 0;\n    long note_length_index15 = 0;\n    long note_length_index16 = 0;\n\
    \    long note_length_index17 = 0;\n    long note_length_index18 = 0;\n    long\
    \ note_length_index19 = 0;\n    long note_length_index20 = 0;\n    long note_length_index21\
    \ = 0;\n    long note_length_index22 = 0;\n    long note_length_index23 = 0;\n\
    \    long note_length_index24 = 0;\n    long note_length_index25 = 0;\n    long\
    \ note_length_index26 = 0;\n    long note_length_index27 = 0;\n    long note_length_index28\
    \ = 0;\n    long note_length_index29 = 0;\n    long note_length_index30 = 0;\n\
    \    long note_length_index31 = 0;\n    long note_length_index32 = 0;\n    long\
    \ note_length_index33 = 0;\n    long note_length_index34 = 0;\n    long note_length_index35\
    \ = 0;\n    long note_length_index36 = 0;\n    long note_length_index37 = 0;\n\
    \    long note_length_index38 = 0;\n    long note_length_index39 = 0;\n    long\
    \ note_length_index40 = 0;\n    long note_length_index41 = 0;\n    long note_length_index42\
    \ = 0;\n    long note_length_index43 = 0;\n    long note_length_index44 = 0;\n\
    \    long note_length_index45 = 0;\n    long note_length_index46 = 0;\n    long\
    \ note_length_index47 = 0;\n    long note_length_index48 = 0;\n    long note_length_index49\
    \ = 0;\n    long note_length_index50 = 0;\n    long note_length_index51 = 0;\n\
    \    long note_length_index52 = 0;\n    long note_length_index53 = 0;\n    long\
    \ note_length_index54 = 0;\n    long note_length_index55 = 0;\n    long note_length_index56\
    \ = 0;\n    long note_length_index57 = 0;\n    long note_length_index58 = 0;\n\
    \    long note_length_index59 = 0;\n    long note_length\n}\nint main() {\n  \
    \  auto candidate = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n\
    \    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpg994t3gt.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpg994t3gt.cpp:78:1: error: expected initializer before \u2018}\u2019\
    \ token\n   78 | }\n      | ^\n/tmp/tmpg994t3gt.cpp:78:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long beats = 0;\n   \
    \ long last_beat = 0;\n    long last_beats = 0;\n    long last_note = 0;\n   \
    \ long last_notes = 0;\n    long last_notes_beat = 0;\n    long last_notes_beats\
    \ = 0;\n    long last_notes_beats_beat = 0;\n    long last_notes_beats_beats =\
    \ 0;\n    long last_notes_beats_beats_beat = 0;\n    long last_notes_beats_beats_beats\
    \ = 0;\n    long last_notes_beats_beats_beats_beat = 0;\n    long last_notes_beats_beats_beats_beats\
    \ = 0;\n    long last_notes_beats_beats_beats_beats_beat = 0;\n    long last_notes_beats_beats_beats_beats_beats\
    \ = 0;\n    long last_notes_beats_beats_beats_beats_beats_beat = 0;\n    long\
    \ last_notes_beats_beats_beats_beats_beats_beats = 0;\n    long last_notes_beats_beats_beats_beats_beats_beat\
    \ = 0;\n    long last_notes_beats_beats_beats_beats_beats_beats = 0;\n    long\
    \ last_notes_beats_beats_beats_beats_beats_beat = 0;\n    long last_notes_beats_beats_beats_beats_beats_beats\
    \ = 0;\n    long last_notes_beats_beats_beats_beats_beats_beats_beat = 0;\n  \
    \  long last_notes_beats_beats_beats_beats_beats_beats_beat = 0;\n    long last_notes_beats_beats_beats_beats_beats_beats_beat\
    \ = 0;\n    long last_notes_beats_beats_beats_beats_beats_beats_beats = 0;\n \
    \   long last_notes_beats_beats_beats_beats_beats_beats_beats = 0;\n    long last_notes_beats_beats_beats_beats_beats_beats_beat\
    \ = 0;\n    long last_notes_beats_beats_beats_beats_beats_beats_beats = 0;\n \
    \   long last_notes_beats_beats_beats_beats_beats_beats_beat = 0;\n    long last_notes_beats_beats_beats_beats_beats_beats_beats\
    \ = 0;\n    long last_notes_beats_beats_beats_beats_beats_beats_beat = 0;\n  \
    \  long last_notes_beats_beats_beats_beats_beats_beats_beats = 0;\n    long last_notes_beats_beats_beats_beats_beats_beats_beat\n\
    }\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"\
    )) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn8_clph9.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpn8_clph9.cpp:14:10: error: conflicting declaration \u2018long int beats\u2019\
    \n   14 |     long beats = 0;\n      |          ^~~~~\n/tmp/tmpn8_clph9.cpp:11:23:\
    \ note: previous declaration as \u2018std::vector<long int> beats\u2019\n   11\
    \ |     std::vector<long> beats;\n      |                       ^~~~~\n/tmp/tmpn8_clph9.cpp:31:10:\
    \ error: redeclaration of \u2018long int last_notes_beats_beats_beats_beats_beats_beat\u2019\
    \n   31 |     long last_notes_beats_beats_beats_beats_beats_beat = 0;\n      |\
    \          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpn8_clph9.cpp:29:10:\
    \ note: \u2018long int last_notes_beats_beats_beats_beats_beats_beat\u2019 previously\
    \ declared here\n   29 |     long last_notes_beats_beats_beats_beats_beats_beat\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpn8_clph9.cpp:32:10:\
    \ error: redeclaration of \u2018long int last_notes_beats_beats_beats_beats_beats_beats\u2019\
    \n   32 |     long last_notes_beats_beats_beats_beats_beats_beats = 0;\n     \
    \ |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpn8_clph9.cpp:30:10:\
    \ note: \u2018long int last_notes_beats_beats_beats_beats_beats_beats\u2019 previously\
    \ declared here\n   30 |     long last_notes_beats_beats_beats_beats_beats_beats\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpn8_clph9.cpp:33:10:\
    \ error: redeclaration of \u2018long int last_notes_beats_beats_beats_beats_beats_beat\u2019\
    \n   33 |     long last_notes_beats_beats_beats_beats_beats_beat = 0;\n      |\
    \          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpn8_clph9.cpp:29:10:\
    \ note: \u2018long int last_notes_beats_beats_beats_beats_beats_beat\u2019 previously\
    \ declared here\n   29 |     long last_notes_beats_beats_beats_beats_beats_beat\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpn8_clph9.cpp:34:10:\
    \ error: redeclaration of \u2018long int last_notes_beats_beats_beats_beats_beats_beats\u2019\
    \n   34 |     long last_notes_beats_beats_beats_beats_beats_b"
  stdout: ''
  timestamp: 1660129737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    long beats_counter = 0;\n    long current_beat = 0;\n    long current_note\
    \ = 0;\n    long current_note_length = 0;\n    long current_note_length_in_beats\
    \ = 0;\n    long current_note_length_in_beats_counter = 0;\n    long current_note_length_in_beats_counter_counter\
    \ = 0;\n    long current_note_length_in_beats_counter_counter_counter = 0;\n \
    \   long current_note_length_in_beats_counter_counter_counter_counter = 0;\n \
    \   long current_note_length_in_beats_counter_counter_counter_counter_counter\
    \ = 0;\n    long current_note_length_in_beats_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long current_note_length_in_beats_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long current_note_length_in_beats_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long current_note_length_in_beats_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long current_note_length_in_beats_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long current_note_length_in_beats_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long current_note_length_in_beats_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long current_note_length_in_beats_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long current_note_length_in_beats_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long current_note_length_in_beats_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long current_note_length_in_beats_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long current_note_length_in_beats_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long current_note_length_in_beats_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long current_note_length_in_beats_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long current_note_length_in_beats_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long current_note_length_in_beats_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long current_note_length_in_beats_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long current_note_length_in_beats_counter_counter_\n}\nint main()\
    \ {\n    auto candidate = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n\
    \    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp42zi9r6x.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp42zi9r6x.cpp:31:10: error: redeclaration of \u2018long int current_note_length_in_beats_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\u2019\
    \n   31 |     long current_note_length_in_beats_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp42zi9r6x.cpp:30:10: note: \u2018long int current_note_length_in_beats_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\u2019\
    \ previously declared here\n   30 |     long current_note_length_in_beats_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp42zi9r6x.cpp:32:10: error: redeclaration of \u2018long int current_note_length_in_beats_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\u2019\
    \n   32 |     long current_note_length_in_beats_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp42zi9r6x.cpp:30:10: note: \u2018long int current_note_length_in_beats_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\u2019\
    \ previously declared here\n   30 |     long current_note_length_in_beats_counter_counter_counter_c"
  stdout: ''
  timestamp: 1660129737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    long last_note = 0;\n    long last_note_beat = 0;\n    long note_length =\
    \ 0;\n    long note_length_in_beats = 0;\n    long note_length_in_beats_after_last_note\
    \ = 0;\n    long note_length_in_beats_after_last_note_beat = 0;\n    long note_length_in_beats_after_last_note_beat_after_last_note\
    \ = 0;\n    long note_length_in_beats_after_last_note_beat_after_last_note_beat\
    \ = 0;\n    long note_length_in_beats_after_last_note_beat_after_last_note_beat_after_last_note\
    \ = 0;\n    long note_length_in_beats_after_last_note_beat_after_last_note_beat_after_last_note_beat\
    \ = 0;\n    long note_length_in_beats_after_last_note_beat_after_last_note_beat_after_last_note_beat_after_last_note\
    \ = 0;\n    long note_length_in_beats_after_last_note_beat_after_last_note_beat_after_last_note_beat_after_last_note_beat\
    \ = 0;\n    long note_length_in_beats_after_last_note_beat_after_last_note_beat_after_last_note_beat_after_last_note_beat_after_last_note\
    \ = 0;\n    long note_length_in_beats_after_last_note_beat_after_last_note_beat_after_last_note_beat_after_last_note_beat_after_last_note_beat\
    \ = 0;\n    long note_length_in_beats_after_last_note_beat_after_last_note_beat_after_last_note_beat_after_last_note_beat_after_last_note_beat_after_last_note\
    \ = 0;\n    long note_length_in_beats_after_last_note_beat_after_last_note_beat_after_last_note_beat_after_last_note_beat_after_last_note_beat_after_last_note_beat\
    \ = 0;\n    long note_length_in_beats_after_last_note_beat_after_last_note_beat_after_last_note_beat_after_last_note_beat_after_last_note_beat_after_last_note_beat_after_last_note\
    \ = 0;\n    long note_length_in_beats_after_last_note_beat_after_last_note_beat_after_last_note_beat_after_last_note_beat_after_last_note_beat_after_last_note_beat_after_last_note_beat_after_last_note\
    \ = 0;\n    long note_length_in_beats_after_last_note_beat_after_last_note_beat_after_last_note_beat_after_last_note_beat_after_last_note_beat_after_last_note_beat_after_last_note_beat_after_last_note\
    \ = 0;\n    long note_length_in_beats_after_last_note_beat_after_last_note_beat_after_last_note_beat_after_last_note_be\n\
    }\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"\
    )) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6vbzdg8u.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp6vbzdg8u.cpp:33:10: error: redeclaration of \u2018long int note_length_in_beats_after_last_note_beat_after_last_note_beat_after_last_note_beat_after_last_note_beat_after_last_note_beat_after_last_note_beat_after_last_note_beat_after_last_note\u2019\
    \n   33 |     long note_length_in_beats_after_last_note_beat_after_last_note_beat_after_last_note_beat_after_last_note_beat_after_last_note_beat_after_last_note_beat_after_last_note_beat_after_last_note\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp6vbzdg8u.cpp:32:10: note: \u2018long int note_length_in_beats_after_last_note_beat_after_last_note_beat_after_last_note_beat_after_last_note_beat_after_last_note_beat_after_last_note_beat_after_last_note_beat_after_last_note\u2019\
    \ previously declared here\n   32 |     long note_length_in_beats_after_last_note_beat_after_last_note_beat_after_last_note_beat_after_last_note_beat_after_last_note_beat_after_last_note_beat_after_last_note_beat_after_last_note\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp6vbzdg8u.cpp:35:1: error: expected initializer before \u2018}\u2019 token\n\
    \   35 | }\n      | ^\n/tmp/tmp6vbzdg8u.cpp:35:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Your code here\n    std::vector<long> beats;\n    std::string note;\n    long\
    \ beat = 0;\n    long beats = 0;\n    long notes = 0;\n    long note = 0;\n  \
    \  long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n\
    \    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note =\
    \ 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note\
    \ = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long\
    \ note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n  \
    \  long note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n\
    \    long note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes =\
    \ 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes\
    \ = 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n    long\
    \ notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n  \
    \  long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n\
    \    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note =\
    \ 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note\
    \ = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long\
    \ note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n  \
    \  long note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n\
    \    long note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes =\
    \ 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes\
    \ = 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n    long\
    \ notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n  \
    \  long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n\
    \    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note =\
    \ 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note\
    \ = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long\
    \ note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n\n\
    }\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"\
    )) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpq07lyv0w.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpq07lyv0w.cpp:15:10: error: conflicting declaration \u2018long int beats\u2019\
    \n   15 |     long beats = 0;\n      |          ^~~~~\n/tmp/tmpq07lyv0w.cpp:12:23:\
    \ note: previous declaration as \u2018std::vector<long int> beats\u2019\n   12\
    \ |     std::vector<long> beats;\n      |                       ^~~~~\n/tmp/tmpq07lyv0w.cpp:17:10:\
    \ error: conflicting declaration \u2018long int note\u2019\n   17 |     long note\
    \ = 0;\n      |          ^~~~\n/tmp/tmpq07lyv0w.cpp:13:17: note: previous declaration\
    \ as \u2018std::string note\u2019\n   13 |     std::string note;\n      |    \
    \             ^~~~\n/tmp/tmpq07lyv0w.cpp:18:10: error: redeclaration of \u2018\
    long int notes\u2019\n   18 |     long notes = 0;\n      |          ^~~~~\n/tmp/tmpq07lyv0w.cpp:16:10:\
    \ note: \u2018long int notes\u2019 previously declared here\n   16 |     long\
    \ notes = 0;\n      |          ^~~~~\n/tmp/tmpq07lyv0w.cpp:19:10: error: conflicting\
    \ declaration \u2018long int note\u2019\n   19 |     long note = 0;\n      | \
    \         ^~~~\n/tmp/tmpq07lyv0w.cpp:13:17: note: previous declaration as \u2018\
    std::string note\u2019\n   13 |     std::string note;\n      |               \
    \  ^~~~\n/tmp/tmpq07lyv0w.cpp:20:10: error: redeclaration of \u2018long int notes\u2019\
    \n   20 |     long notes = 0;\n      |          ^~~~~\n/tmp/tmpq07lyv0w.cpp:16:10:\
    \ note: \u2018long int notes\u2019 previously declared here\n   16 |     long\
    \ notes = 0;\n      |          ^~~~~\n/tmp/tmpq07lyv0w.cpp:21:10: error: conflicting\
    \ declaration \u2018long int note\u2019\n   21 |     long note = 0;\n      | \
    \         ^~~~\n/tmp/tmpq07lyv0w.cpp:13:17: note: previous declaration as \u2018\
    std::string note\u2019\n   13 |     std::string note;\n      |               \
    \  ^~~~\n/tmp/tmpq07lyv0w.cpp:22:10: error: redeclaration of \u2018long int notes\u2019\
    \n   22 |     long notes = 0;\n      |          ^~~~~\n/tmp/tmpq07lyv0w.cpp:16:10:\
    \ note: \u2018long int notes\u2019 previously declared here\n   16 |     long\
    \ notes = 0;\n      |          ^~~~~\n/tmp/tmpq07lyv0w.cpp:23:10: error: conflicting\
    \ declaration \u2018long int note\u2019\n   23 |     long"
  stdout: ''
  timestamp: 1660129737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Your code goes here\n    std::vector<long> beats;\n    std::string note;\n \
    \   long beat = 0;\n    long note_count = 0;\n    long note_length = 0;\n    long\
    \ note_length_count = 0;\n    long note_length_index = 0;\n    long note_length_index2\
    \ = 0;\n    long note_length_index3 = 0;\n    long note_length_index4 = 0;\n \
    \   long note_length_index5 = 0;\n    long note_length_index6 = 0;\n    long note_length_index7\
    \ = 0;\n    long note_length_index8 = 0;\n    long note_length_index9 = 0;\n \
    \   long note_length_index10 = 0;\n    long note_length_index11 = 0;\n    long\
    \ note_length_index12 = 0;\n    long note_length_index13 = 0;\n    long note_length_index14\
    \ = 0;\n    long note_length_index15 = 0;\n    long note_length_index16 = 0;\n\
    \    long note_length_index17 = 0;\n    long note_length_index18 = 0;\n    long\
    \ note_length_index19 = 0;\n    long note_length_index20 = 0;\n    long note_length_index21\
    \ = 0;\n    long note_length_index22 = 0;\n    long note_length_index23 = 0;\n\
    \    long note_length_index24 = 0;\n    long note_length_index25 = 0;\n    long\
    \ note_length_index26 = 0;\n    long note_length_index27 = 0;\n    long note_length_index28\
    \ = 0;\n    long note_length_index29 = 0;\n    long note_length_index30 = 0;\n\
    \    long note_length_index31 = 0;\n    long note_length_index32 = 0;\n    long\
    \ note_length_index33 = 0;\n    long note_length_index34 = 0;\n    long note_length_index35\
    \ = 0;\n    long note_length_index36 = 0;\n    long note_length_index37 = 0;\n\
    \    long note_length_index38 = 0;\n    long note_length_index39 = 0;\n    long\
    \ note_length_index40 = 0;\n    long note_length_index41 = 0;\n    long note_length_index42\
    \ = 0;\n    long note_length_index43 = 0;\n    long note_length_index44 = 0;\n\
    \    long note_length_index45 = 0;\n    long note_length_index46 = 0;\n    long\
    \ note_length_index47 = 0;\n    long note_length_index48 = 0;\n    long note_length_index49\
    \ = 0;\n    long note_length_index50 = 0;\n    long note_length_index51 = 0;\n\
    \    long note_length_index52 = 0;\n    long note_length_index53 = 0;\n    long\
    \ note_length_index54 = 0;\n    long note_length_index55 = 0;\n    long note_length_index56\
    \ = 0;\n    long note_length_index57 = 0;\n    long note_length_index58 = 0;\n\
    \    long note_length_index59 = 0;\n    long note_\n}\nint main() {\n    auto\
    \ candidate = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n\
    \    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4wlxwkoy.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp4wlxwkoy.cpp:78:1: error: expected initializer before \u2018}\u2019\
    \ token\n   78 | }\n      | ^\n/tmp/tmp4wlxwkoy.cpp:78:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129740
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long beats = 0;\n   \
    \ long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n\
    \    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note =\
    \ 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note\
    \ = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long\
    \ note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n  \
    \  long note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n\
    \    long note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes =\
    \ 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes\
    \ = 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n    long\
    \ notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n  \
    \  long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n\
    \    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note =\
    \ 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note\
    \ = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long\
    \ note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n  \
    \  long note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n\
    \    long note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes =\
    \ 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes\
    \ = 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n    long\
    \ notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n  \
    \  long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n\
    \    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note =\
    \ 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note\
    \ = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long\
    \ note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n  \
    \  long note = 0;\n    long notes = 0;\n    long note = 0;\n\n}\nint main() {\n\
    \    auto candidate = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n\
    \    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsui_xy4v.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpsui_xy4v.cpp:14:10: error: conflicting declaration \u2018long int beats\u2019\
    \n   14 |     long beats = 0;\n      |          ^~~~~\n/tmp/tmpsui_xy4v.cpp:11:23:\
    \ note: previous declaration as \u2018std::vector<long int> beats\u2019\n   11\
    \ |     std::vector<long> beats;\n      |                       ^~~~~\n/tmp/tmpsui_xy4v.cpp:16:10:\
    \ error: conflicting declaration \u2018long int note\u2019\n   16 |     long note\
    \ = 0;\n      |          ^~~~\n/tmp/tmpsui_xy4v.cpp:12:17: note: previous declaration\
    \ as \u2018std::string note\u2019\n   12 |     std::string note;\n      |    \
    \             ^~~~\n/tmp/tmpsui_xy4v.cpp:17:10: error: redeclaration of \u2018\
    long int notes\u2019\n   17 |     long notes = 0;\n      |          ^~~~~\n/tmp/tmpsui_xy4v.cpp:15:10:\
    \ note: \u2018long int notes\u2019 previously declared here\n   15 |     long\
    \ notes = 0;\n      |          ^~~~~\n/tmp/tmpsui_xy4v.cpp:18:10: error: conflicting\
    \ declaration \u2018long int note\u2019\n   18 |     long note = 0;\n      | \
    \         ^~~~\n/tmp/tmpsui_xy4v.cpp:12:17: note: previous declaration as \u2018\
    std::string note\u2019\n   12 |     std::string note;\n      |               \
    \  ^~~~\n/tmp/tmpsui_xy4v.cpp:19:10: error: redeclaration of \u2018long int notes\u2019\
    \n   19 |     long notes = 0;\n      |          ^~~~~\n/tmp/tmpsui_xy4v.cpp:15:10:\
    \ note: \u2018long int notes\u2019 previously declared here\n   15 |     long\
    \ notes = 0;\n      |          ^~~~~\n/tmp/tmpsui_xy4v.cpp:20:10: error: conflicting\
    \ declaration \u2018long int note\u2019\n   20 |     long note = 0;\n      | \
    \         ^~~~\n/tmp/tmpsui_xy4v.cpp:12:17: note: previous declaration as \u2018\
    std::string note\u2019\n   12 |     std::string note;\n      |               \
    \  ^~~~\n/tmp/tmpsui_xy4v.cpp:21:10: error: redeclaration of \u2018long int notes\u2019\
    \n   21 |     long notes = 0;\n      |          ^~~~~\n/tmp/tmpsui_xy4v.cpp:15:10:\
    \ note: \u2018long int notes\u2019 previously declared here\n   15 |     long\
    \ notes = 0;\n      |          ^~~~~\n/tmp/tmpsui_xy4v.cpp:22:10: error: conflicting\
    \ declaration \u2018long int note\u2019\n   22 |     long"
  stdout: ''
  timestamp: 1660129740
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long beats = 0;\n   \
    \ long notes = 0;\n    long note = 0;\n    long notes_length = 0;\n    long note_length\
    \ = 0;\n    long note_length2 = 0;\n    long note_length3 = 0;\n    long note_length4\
    \ = 0;\n    long note_length5 = 0;\n    long note_length6 = 0;\n    long note_length7\
    \ = 0;\n    long note_length8 = 0;\n    long note_length9 = 0;\n    long note_length10\
    \ = 0;\n    long note_length11 = 0;\n    long note_length12 = 0;\n    long note_length13\
    \ = 0;\n    long note_length14 = 0;\n    long note_length15 = 0;\n    long note_length16\
    \ = 0;\n    long note_length17 = 0;\n    long note_length18 = 0;\n    long note_length19\
    \ = 0;\n    long note_length20 = 0;\n    long note_length21 = 0;\n    long note_length22\
    \ = 0;\n    long note_length23 = 0;\n    long note_length24 = 0;\n    long note_length25\
    \ = 0;\n    long note_length26 = 0;\n    long note_length27 = 0;\n    long note_length28\
    \ = 0;\n    long note_length29 = 0;\n    long note_length30 = 0;\n    long note_length31\
    \ = 0;\n    long note_length32 = 0;\n    long note_length33 = 0;\n    long note_length34\
    \ = 0;\n    long note_length35 = 0;\n    long note_length36 = 0;\n    long note_length37\
    \ = 0;\n    long note_length38 = 0;\n    long note_length39 = 0;\n    long note_length40\
    \ = 0;\n    long note_length41 = 0;\n    long note_length42 = 0;\n    long note_length43\
    \ = 0;\n    long note_length44 = 0;\n    long note_length45 = 0;\n    long note_length46\
    \ = 0;\n    long note_length47 = 0;\n    long note_length48 = 0;\n    long note_length49\
    \ = 0;\n    long note_length50 = 0;\n    long note_length51 = 0;\n    long note_length52\
    \ = 0;\n    long note_length53 = 0;\n    long note_length54 = 0;\n    long note_length55\
    \ = 0;\n    long note_length56 = 0;\n    long note_length57 = 0;\n    long note_length58\
    \ = 0;\n    long note_length59 = 0;\n    long note_length60 = 0;\n    long note_length61\
    \ = 0;\n    long note_length62 = 0;\n    long note_length63 = 0;\n    long note_length64\
    \ = 0;\n    long note_length65 = 0;\n    long note_length66 = 0;\n    long note_length67\
    \ = 0;\n    long note_length68 = 0;\n    long \n}\nint main() {\n    auto candidate\
    \ = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n  \
    \  assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4,\
    \ (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpewfmox6p.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpewfmox6p.cpp:14:10: error: conflicting declaration \u2018long int beats\u2019\
    \n   14 |     long beats = 0;\n      |          ^~~~~\n/tmp/tmpewfmox6p.cpp:11:23:\
    \ note: previous declaration as \u2018std::vector<long int> beats\u2019\n   11\
    \ |     std::vector<long> beats;\n      |                       ^~~~~\n/tmp/tmpewfmox6p.cpp:16:10:\
    \ error: conflicting declaration \u2018long int note\u2019\n   16 |     long note\
    \ = 0;\n      |          ^~~~\n/tmp/tmpewfmox6p.cpp:12:17: note: previous declaration\
    \ as \u2018std::string note\u2019\n   12 |     std::string note;\n      |    \
    \             ^~~~\n/tmp/tmpewfmox6p.cpp:87:1: error: expected unqualified-id\
    \ before \u2018}\u2019 token\n   87 | }\n      | ^\n/tmp/tmpewfmox6p.cpp:87:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    long beat = 0;\n    long note = 0;\n    long last_note = 0;\n  \
    \  long last_beat = 0;\n    long last_beats = 0;\n    long last_beats_after_note\
    \ = 0;\n    long last_beats_after_notes = 0;\n    long last_beats_after_notes_after_note\
    \ = 0;\n    long last_beats_after_notes_after_notes = 0;\n    long last_beats_after_notes_after_notes_after_note\
    \ = 0;\n    long last_beats_after_notes_after_notes_after_notes = 0;\n    long\
    \ last_beats_after_notes_after_notes_after_notes_after_note = 0;\n    long last_beats_after_notes_after_notes_after_notes_after_notes\
    \ = 0;\n    long last_beats_after_notes_after_notes_after_notes_after_notes_after_note\
    \ = 0;\n    long last_beats_after_notes_after_notes_after_notes_after_notes_after_notes\
    \ = 0;\n    long last_beats_after_notes_after_notes_after_notes_after_notes_after_notes_after_note\
    \ = 0;\n    long last_beats_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes\
    \ = 0;\n    long last_beats_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_note\
    \ = 0;\n    long last_beats_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes\
    \ = 0;\n    long last_beats_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_note\
    \ = 0;\n    long last_beats_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes\
    \ = 0;\n    long last_beats_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_note\
    \ = 0;\n    long last_beats_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_note\
    \ = 0;\n    long last_beats_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_\n\
    }\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"\
    )) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkxejcyv3.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpkxejcyv3.cpp:36:1: error: expected initializer before \u2018}\u2019\
    \ token\n   36 | }\n      | ^\n/tmp/tmpkxejcyv3.cpp:36:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129739
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    long beat = 0;\n    long note = 0;\n    long last_note = 0;\n  \
    \  long last_beat = 0;\n    long last_beat_type = 0;\n    long last_beat_type2\
    \ = 0;\n    long last_beat_type3 = 0;\n    long last_beat_type4 = 0;\n    long\
    \ last_beat_type5 = 0;\n    long last_beat_type6 = 0;\n    long last_beat_type7\
    \ = 0;\n    long last_beat_type8 = 0;\n    long last_beat_type9 = 0;\n    long\
    \ last_beat_type10 = 0;\n    long last_beat_type11 = 0;\n    long last_beat_type12\
    \ = 0;\n    long last_beat_type13 = 0;\n    long last_beat_type14 = 0;\n    long\
    \ last_beat_type15 = 0;\n    long last_beat_type16 = 0;\n    long last_beat_type17\
    \ = 0;\n    long last_beat_type18 = 0;\n    long last_beat_type19 = 0;\n    long\
    \ last_beat_type20 = 0;\n    long last_beat_type21 = 0;\n    long last_beat_type22\
    \ = 0;\n    long last_beat_type23 = 0;\n    long last_beat_type24 = 0;\n    long\
    \ last_beat_type25 = 0;\n    long last_beat_type26 = 0;\n    long last_beat_type27\
    \ = 0;\n    long last_beat_type28 = 0;\n    long last_beat_type29 = 0;\n    long\
    \ last_beat_type30 = 0;\n    long last_beat_type31 = 0;\n    long last_beat_type32\
    \ = 0;\n    long last_beat_type33 = 0;\n    long last_beat_type34 = 0;\n    long\
    \ last_beat_type35 = 0;\n    long last_beat_type36 = 0;\n    long last_beat_type37\
    \ = 0;\n    long last_beat_type38 = 0;\n    long last_beat_type39 = 0;\n    long\
    \ last_beat_type40 = 0;\n    long last_beat_type41 = 0;\n    long last_beat_type42\
    \ = 0;\n    long last_beat_type43 = 0;\n    long last_beat_type44 = 0;\n    long\
    \ last_beat_type45 = 0;\n    long last_beat_type46 = 0;\n    long last_beat_type47\
    \ = 0;\n    long last_beat_type48 = 0;\n    long last_beat_type49 = 0;\n    long\
    \ last_beat_type50 = 0;\n    long last_beat_type51 = 0;\n    long last_beat_type52\
    \ = 0;\n    long last_beat_type53 = 0;\n    long last_beat_type54 = 0;\n    long\
    \ last_beat_type55 = 0;\n    long last_beat_type56 = 0;\n    long last_beat_type57\
    \ = 0;\n    long last_beat_type58 = 0;\n    long last_beat_type59 = 0;\n    long\
    \ last_beat_type60 = 0;\n    long last_beat_type61 = 0;\n\n}\nint main() {\n \
    \   auto candidate = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n\
    \    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: Exception
  stderr: 'tmpd2l095_f: /tmp/tmpd2l095_f.cpp:81: int main(): Assertion `candidate((""))
    == (std::vector<long>())'' failed.

    '
  stdout: ''
  timestamp: 1660129740
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    long beat = 0;\n    long note = 0;\n    long last_note = 0;\n  \
    \  long last_beat = 0;\n    long last_beats = 0;\n    long last_beats_sum = 0;\n\
    \    long last_beats_count = 0;\n    long last_beats_count_sum = 0;\n    long\
    \ last_beats_count_count = 0;\n    long last_beats_count_count_sum = 0;\n    long\
    \ last_beats_count_count_count = 0;\n    long last_beats_count_count_count_sum\
    \ = 0;\n    long last_beats_count_count_count_count = 0;\n    long last_beats_count_count_count_count_sum\
    \ = 0;\n    long last_beats_count_count_count_count_count = 0;\n    long last_beats_count_count_count_count_count_sum\
    \ = 0;\n    long last_beats_count_count_count_count_count_count_count = 0;\n \
    \   long last_beats_count_count_count_count_count_count_count_sum = 0;\n    long\
    \ last_beats_count_count_count_count_count_count_count_count = 0;\n    long last_beats_count_count_count_count_count_count_count_sum\
    \ = 0;\n    long last_beats_count_count_count_count_count_count_count_count =\
    \ 0;\n    long last_beats_count_count_count_count_count_count_count_sum = 0;\n\
    \    long last_beats_count_count_count_count_count_count_count_count_count = 0;\n\
    \    long last_beats_count_count_count_count_count_count_count_count_sum = 0;\n\
    \    long last_beats_count_count_count_count_count_count_count_count_count_count\
    \ = 0;\n    long last_beats_count_count_count_count_count_count_count_count_count_sum\
    \ = 0;\n    long last_beats_count_count_count_count_count_count_count_count_count_count\
    \ = 0;\n    long last_beats_count_count_count_count_count_count_count_count_count_sum\
    \ = 0;\n    long last_beats_count_count_count_count_count_count_count_count_count_count\
    \ = 0;\n    long last_beats_count_count_count_count_count_count_count_count_count_sum\
    \ = 0;\n    long last_beats_count_count_count_count_count_count_count_count_count_count_count_count\
    \ = 0;\n    long last_beats_count_count_count_count_count_count_count_count_count_count_count_sum\
    \ = 0;\n    long last_beats_count_count_count_count_count_count_count_count_count_count_count_count\
    \ = 0;\n    long last_beats_count_count_count_count_count_count_count_count_count_count_sum\
    \ = 0;\n    long last_beats_count_count_count_count_count_count_count_count_count_count_count\
    \ = 0;\n    long last_beats_count_count_count_count_count_count_count_count_count_count_count_sum\
    \ = 0;\n    long last_beats_count_count_count_count_count_count_count_count_count_count_count_count_count\
    \ = 0;\n    long last_beats_count_count_count_count_count_count_count_count_count_count_count_count_sum\
    \ = 0;\n    long last_beats_\n}\nint main() {\n    auto candidate = parse_music;\n\
    \    assert(candidate((\"\")) == (std::vector<long>()));\n    assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \   assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1, (long)1,\
    \ (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\")) == (std::vector<long>({(long)2,\
    \ (long)2, (long)1, (long)1, (long)4, (long)4, (long)4, (long)4})));\n    assert(candidate((\"\
    o| .| o| .| o o| o o|\")) == (std::vector<long>({(long)2, (long)1, (long)2, (long)1,\
    \ (long)4, (long)2, (long)4, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsrlgknou.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpsrlgknou.cpp:31:10: error: redeclaration of \u2018long int last_beats_count_count_count_count_count_count_count_sum\u2019\
    \n   31 |     long last_beats_count_count_count_count_count_count_count_sum =\
    \ 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpsrlgknou.cpp:29:10: note: \u2018long int last_beats_count_count_count_count_count_count_count_sum\u2019\
    \ previously declared here\n   29 |     long last_beats_count_count_count_count_count_count_count_sum\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpsrlgknou.cpp:32:10: error: redeclaration of \u2018long int last_beats_count_count_count_count_count_count_count_count\u2019\
    \n   32 |     long last_beats_count_count_count_count_count_count_count_count\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpsrlgknou.cpp:30:10: note: \u2018long int last_beats_count_count_count_count_count_count_count_count\u2019\
    \ previously declared here\n   30 |     long last_beats_count_count_count_count_count_count_count_count\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpsrlgknou.cpp:33:10: error: redeclaration of \u2018long int last_beats_count_count_count_count_count_count_count_sum\u2019\
    \n   33 |     long last_beats_count_count_count_count_count_count_count_sum =\
    \ 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpsrlgknou.cpp:29:10: note: \u2018long int last_beats_count_count_count_count_count_count_count_sum\u2019\
    \ previously declared here\n   29 |     long last_beats_count_count_count_count_count_count_count_sum\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpsrlgknou.cpp:38:10: error: redeclaration of \u2018long int last_beats_count_count_count_count_count_count_count_count_count_count\u2019\
    \n   38 |     long last_beats_count_count_count_count_count_count_count_count_count_count\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~"
  stdout: ''
  timestamp: 1660129740
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long beats = 0;\n   \
    \ long last_beat = 0;\n    long last_beats = 0;\n    long last_note = 0;\n   \
    \ long last_notes = 0;\n    long last_notes_beat = 0;\n    long last_notes_beats\
    \ = 0;\n    long last_notes_beats_beat = 0;\n    long last_notes_beats_beats =\
    \ 0;\n    long last_notes_beats_beats_beat = 0;\n    long last_notes_beats_beats_beats\
    \ = 0;\n    long last_notes_beats_beats_beats_beat = 0;\n    long last_notes_beats_beats_beats_beats\
    \ = 0;\n    long last_notes_beats_beats_beats_beats_beat = 0;\n    long last_notes_beats_beats_beats_beats_beats\
    \ = 0;\n    long last_notes_beats_beats_beats_beats_beats_beat = 0;\n    long\
    \ last_notes_beats_beats_beats_beats_beats_beats = 0;\n    long last_notes_beats_beats_beats_beats_beats_beat\
    \ = 0;\n    long last_notes_beats_beats_beats_beats_beats_beats = 0;\n    long\
    \ last_notes_beats_beats_beats_beats_beats_beat = 0;\n    long last_notes_beats_beats_beats_beats_beats_beats\
    \ = 0;\n    long last_notes_beats_beats_beats_beats_beats_beats_beat = 0;\n  \
    \  long last_notes_beats_beats_beats_beats_beats_beats_beats = 0;\n    long last_notes_beats_beats_beats_beats_beats_beats_beat\
    \ = 0;\n    long last_notes_beats_beats_beats_beats_beats_beats_beats = 0;\n \
    \   long last_notes_beats_beats_beats_beats_beats_beats_beat = 0;\n    long last_notes_beats_beats_beats_beats_beats_beats_beats\
    \ = 0;\n    long last_notes_beats_beats_beats_beats_beats_beats_beats_beat = 0;\n\
    \    long last_notes_beats_beats_beats_beats_beats_beats_beats_beat = 0;\n   \
    \ long last_notes_beats_beats_beats_beats_beats_beats_beats_beat = 0;\n    long\
    \ last_notes_beats_beats_beats_beats_beats_beats_beats_beats = 0;\n    long last_notes_beats_beats_beats_beats_beats_beats_beats_beats_beat\
    \ = 0;\n    long last_notes_beat\n}\nint main() {\n    auto candidate = parse_music;\n\
    \    assert(candidate((\"\")) == (std::vector<long>()));\n    assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \   assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1, (long)1,\
    \ (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\")) == (std::vector<long>({(long)2,\
    \ (long)2, (long)1, (long)1, (long)4, (long)4, (long)4, (long)4})));\n    assert(candidate((\"\
    o| .| o| .| o o| o o|\")) == (std::vector<long>({(long)2, (long)1, (long)2, (long)1,\
    \ (long)4, (long)2, (long)4, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkyonzg38.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpkyonzg38.cpp:14:10: error: conflicting declaration \u2018long int beats\u2019\
    \n   14 |     long beats = 0;\n      |          ^~~~~\n/tmp/tmpkyonzg38.cpp:11:23:\
    \ note: previous declaration as \u2018std::vector<long int> beats\u2019\n   11\
    \ |     std::vector<long> beats;\n      |                       ^~~~~\n/tmp/tmpkyonzg38.cpp:31:10:\
    \ error: redeclaration of \u2018long int last_notes_beats_beats_beats_beats_beats_beat\u2019\
    \n   31 |     long last_notes_beats_beats_beats_beats_beats_beat = 0;\n      |\
    \          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpkyonzg38.cpp:29:10:\
    \ note: \u2018long int last_notes_beats_beats_beats_beats_beats_beat\u2019 previously\
    \ declared here\n   29 |     long last_notes_beats_beats_beats_beats_beats_beat\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpkyonzg38.cpp:32:10:\
    \ error: redeclaration of \u2018long int last_notes_beats_beats_beats_beats_beats_beats\u2019\
    \n   32 |     long last_notes_beats_beats_beats_beats_beats_beats = 0;\n     \
    \ |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpkyonzg38.cpp:30:10:\
    \ note: \u2018long int last_notes_beats_beats_beats_beats_beats_beats\u2019 previously\
    \ declared here\n   30 |     long last_notes_beats_beats_beats_beats_beats_beats\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpkyonzg38.cpp:33:10:\
    \ error: redeclaration of \u2018long int last_notes_beats_beats_beats_beats_beats_beat\u2019\
    \n   33 |     long last_notes_beats_beats_beats_beats_beats_beat = 0;\n      |\
    \          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpkyonzg38.cpp:29:10:\
    \ note: \u2018long int last_notes_beats_beats_beats_beats_beats_beat\u2019 previously\
    \ declared here\n   29 |     long last_notes_beats_beats_beats_beats_beats_beat\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpkyonzg38.cpp:34:10:\
    \ error: redeclaration of \u2018long int last_notes_beats_beats_beats_beats_beats_beats\u2019\
    \n   34 |     long last_notes_beats_beats_beats_beats_beats_b"
  stdout: ''
  timestamp: 1660129740
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    long last_note = 0;\n    bool is_note = false;\n    bool is_last_note = false;\n\
    \    bool is_last_beat = false;\n    for (char c : music_string) {\n        if\
    \ (c == 'o') {\n            note = note.empty() ? \"o\" : note + \"o\";\n    \
    \        beats.push_back(beat);\n            beat = 0;\n            is_note =\
    \ true;\n            is_last_note = false;\n            is_last_beat = false;\n\
    \        } else if (c == 'o|') {\n            note = note.empty() ? \"o|\" : note\
    \ + \"o|\";\n            beats.push_back(beat);\n            beat = 0;\n     \
    \       is_note = true;\n            is_last_note = false;\n            is_last_beat\
    \ = false;\n        } else if (c == '.|') {\n            note = note.empty() ?\
    \ \".|\" : note + \".|\";\n            beats.push_back(beat);\n            beat\
    \ = 0;\n            is_note = true;\n            is_last_note = false;\n     \
    \       is_last_beat = false;\n        } else if (is_note) {\n            if (c\
    \ == '|') {\n                is_last_note = true;\n            } else if (c ==\
    \ '-') {\n                is_last_beat = true;\n            } else {\n       \
    \         note += c;\n            }\n            is_note = false;\n        } else\
    \ if (is_last_note) {\n            if (c == '|') {\n                is_last_note\
    \ = false;\n            } else if (c == '-') {\n                is_last_beat =\
    \ false;\n            } else {\n                note += c;\n            }\n  \
    \          is_last_note = false;\n        } else if (is_last_beat) {\n       \
    \     if (c == '-') {\n                is_last_beat = false;\n            } else\
    \ {\n                beat += c;\n            }\n            is_last_beat = false;\n\
    \        } else {\n            note += c;\n        }\n    }\n    return beats;\n\
    }\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"\
    )) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: Exception
  stderr: 'tmpwwjelu68: /tmp/tmpwwjelu68.cpp:75: int main(): Assertion `candidate(("o
    o o o")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4}))'' failed.

    '
  stdout: ''
  timestamp: 1660129741
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Your code goes here\n    std::vector<long> beats;\n    long beat = 0;\n    long\
    \ beats = 0;\n    long note = 0;\n    long notes = 0;\n    long notes_last = 0;\n\
    \    long notes_lasts = 0;\n    long notes_lasts_half = 0;\n    long notes_lasts_quarter\
    \ = 0;\n    long notes_lasts_whole = 0;\n    long notes_lasts_whole_half = 0;\n\
    \    long notes_lasts_whole_quarter = 0;\n    long notes_lasts_whole_whole = 0;\n\
    \    long notes_lasts_whole_whole_half = 0;\n    long notes_lasts_whole_whole_quarter\
    \ = 0;\n    long notes_lasts_whole_whole_whole = 0;\n    long notes_lasts_whole_whole_whole_half\
    \ = 0;\n    long notes_lasts_whole_whole_whole_quarter = 0;\n    long notes_lasts_whole_whole_whole_whole\
    \ = 0;\n    long notes_lasts_whole_whole_whole_whole_half = 0;\n    long notes_lasts_whole_whole_whole_whole_quarter\
    \ = 0;\n    long notes_lasts_whole_whole_whole_whole_whole = 0;\n    long notes_lasts_whole_whole_whole_whole_whole_half\
    \ = 0;\n    long notes_lasts_whole_whole_whole_whole_whole_quarter = 0;\n    long\
    \ notes_lasts_whole_whole_whole_whole_whole_whole = 0;\n    long notes_lasts_whole_whole_whole_whole_whole_half\
    \ = 0;\n    long notes_lasts_whole_whole_whole_whole_whole_quarter = 0;\n    long\
    \ notes_lasts_whole_whole_whole_whole_whole_whole = 0;\n    long notes_lasts_whole_whole_whole_whole_whole_whole_half\
    \ = 0;\n    long notes_lasts_whole_whole_whole_whole_whole_whole_quarter = 0;\n\
    \    long notes_lasts_whole_whole_whole_whole_whole_whole_whole = 0;\n    long\
    \ notes_lasts_whole_whole_whole_whole_whole_whole_half = 0;\n    long notes_lasts_whole_whole_whole_whole_whole_whole_quarter\
    \ = 0;\n    long notes_lasts_whole_whole_whole_whole_whole_whole_whole = 0;\n\
    \    long notes_lasts_whole_whole_whole_whole_whole_whole_half = 0;\n\n}\nint\
    \ main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\")) ==\
    \ (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0hmiore4.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp0hmiore4.cpp:14:10: error: conflicting declaration \u2018long int beats\u2019\
    \n   14 |     long beats = 0;\n      |          ^~~~~\n/tmp/tmp0hmiore4.cpp:12:23:\
    \ note: previous declaration as \u2018std::vector<long int> beats\u2019\n   12\
    \ |     std::vector<long> beats;\n      |                       ^~~~~\n/tmp/tmp0hmiore4.cpp:37:10:\
    \ error: redeclaration of \u2018long int notes_lasts_whole_whole_whole_whole_whole_half\u2019\
    \n   37 |     long notes_lasts_whole_whole_whole_whole_whole_half = 0;\n     \
    \ |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp0hmiore4.cpp:34:10:\
    \ note: \u2018long int notes_lasts_whole_whole_whole_whole_whole_half\u2019 previously\
    \ declared here\n   34 |     long notes_lasts_whole_whole_whole_whole_whole_half\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp0hmiore4.cpp:38:10:\
    \ error: redeclaration of \u2018long int notes_lasts_whole_whole_whole_whole_whole_quarter\u2019\
    \n   38 |     long notes_lasts_whole_whole_whole_whole_whole_quarter = 0;\n  \
    \    |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp0hmiore4.cpp:35:10:\
    \ note: \u2018long int notes_lasts_whole_whole_whole_whole_whole_quarter\u2019\
    \ previously declared here\n   35 |     long notes_lasts_whole_whole_whole_whole_whole_quarter\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp0hmiore4.cpp:39:10:\
    \ error: redeclaration of \u2018long int notes_lasts_whole_whole_whole_whole_whole_whole\u2019\
    \n   39 |     long notes_lasts_whole_whole_whole_whole_whole_whole = 0;\n    \
    \  |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp0hmiore4.cpp:36:10:\
    \ note: \u2018long int notes_lasts_whole_whole_whole_whole_whole_whole\u2019 previously\
    \ declared here\n   36 |     long notes_lasts_whole_whole_whole_whole_whole_whole\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp0hmiore4.cpp:43:10:\
    \ error: redeclaration of \u2018long int notes_lasts_whole_whole_whole_whole_whole_whole_half\u2019\
    \n   43 |     long "
  stdout: ''
  timestamp: 1660129740
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long beats = 0;\n   \
    \ long notes = 0;\n    long note = 0;\n    long note_length = 0;\n    long note_length2\
    \ = 0;\n    long note_length3 = 0;\n    long note_length4 = 0;\n    long note_length5\
    \ = 0;\n    long note_length6 = 0;\n    long note_length7 = 0;\n    long note_length8\
    \ = 0;\n    long note_length9 = 0;\n    long note_length10 = 0;\n    long note_length11\
    \ = 0;\n    long note_length12 = 0;\n    long note_length13 = 0;\n    long note_length14\
    \ = 0;\n    long note_length15 = 0;\n    long note_length16 = 0;\n    long note_length17\
    \ = 0;\n    long note_length18 = 0;\n    long note_length19 = 0;\n    long note_length20\
    \ = 0;\n    long note_length21 = 0;\n    long note_length22 = 0;\n    long note_length23\
    \ = 0;\n    long note_length24 = 0;\n    long note_length25 = 0;\n    long note_length26\
    \ = 0;\n    long note_length27 = 0;\n    long note_length28 = 0;\n    long note_length29\
    \ = 0;\n    long note_length30 = 0;\n    long note_length31 = 0;\n    long note_length32\
    \ = 0;\n    long note_length33 = 0;\n    long note_length34 = 0;\n    long note_length35\
    \ = 0;\n    long note_length36 = 0;\n    long note_length37 = 0;\n    long note_length38\
    \ = 0;\n    long note_length39 = 0;\n    long note_length40 = 0;\n    long note_length41\
    \ = 0;\n    long note_length42 = 0;\n    long note_length43 = 0;\n    long note_length44\
    \ = 0;\n    long note_length45 = 0;\n    long note_length46 = 0;\n    long note_length47\
    \ = 0;\n    long note_length48 = 0;\n    long note_length49 = 0;\n    long note_length50\
    \ = 0;\n    long note_length51 = 0;\n    long note_length52 = 0;\n    long note_length53\
    \ = 0;\n    long note_length54 = 0;\n    long note_length55 = 0;\n    long note_length56\
    \ = 0;\n    long note_length57 = 0;\n    long note_length58 = 0;\n    long note_length59\
    \ = 0;\n    long note_length60 = 0;\n    long note_length61 = 0;\n    long note_length62\
    \ = 0;\n    long note_length63 = 0;\n    long note_length64 = 0;\n    long note_length65\
    \ = 0;\n    long note_length66 = 0;\n    long note_length67 = 0;\n    long note_length68\
    \ = 0;\n    long note_length69 = 0;\n    long \n}\nint main() {\n    auto candidate\
    \ = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n  \
    \  assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4,\
    \ (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1u6ms817.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp1u6ms817.cpp:14:10: error: conflicting declaration \u2018long int beats\u2019\
    \n   14 |     long beats = 0;\n      |          ^~~~~\n/tmp/tmp1u6ms817.cpp:11:23:\
    \ note: previous declaration as \u2018std::vector<long int> beats\u2019\n   11\
    \ |     std::vector<long> beats;\n      |                       ^~~~~\n/tmp/tmp1u6ms817.cpp:16:10:\
    \ error: conflicting declaration \u2018long int note\u2019\n   16 |     long note\
    \ = 0;\n      |          ^~~~\n/tmp/tmp1u6ms817.cpp:12:17: note: previous declaration\
    \ as \u2018std::string note\u2019\n   12 |     std::string note;\n      |    \
    \             ^~~~\n/tmp/tmp1u6ms817.cpp:87:1: error: expected unqualified-id\
    \ before \u2018}\u2019 token\n   87 | }\n      | ^\n/tmp/tmp1u6ms817.cpp:87:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129740
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    long beat = 0;\n    long note = 0;\n    long last_note = 0;\n  \
    \  long last_beat = 0;\n    long last_beats = 0;\n    long last_beats_total =\
    \ 0;\n    long last_beats_total2 = 0;\n    long last_beats_total3 = 0;\n    long\
    \ last_beats_total4 = 0;\n    long last_beats_total5 = 0;\n    long last_beats_total6\
    \ = 0;\n    long last_beats_total7 = 0;\n    long last_beats_total8 = 0;\n   \
    \ long last_beats_total9 = 0;\n    long last_beats_total10 = 0;\n    long last_beats_total11\
    \ = 0;\n    long last_beats_total12 = 0;\n    long last_beats_total13 = 0;\n \
    \   long last_beats_total14 = 0;\n    long last_beats_total15 = 0;\n    long last_beats_total16\
    \ = 0;\n    long last_beats_total17 = 0;\n    long last_beats_total18 = 0;\n \
    \   long last_beats_total19 = 0;\n    long last_beats_total20 = 0;\n    long last_beats_total21\
    \ = 0;\n    long last_beats_total22 = 0;\n    long last_beats_total23 = 0;\n \
    \   long last_beats_total24 = 0;\n    long last_beats_total25 = 0;\n    long last_beats_total26\
    \ = 0;\n    long last_beats_total27 = 0;\n    long last_beats_total28 = 0;\n \
    \   long last_beats_total29 = 0;\n    long last_beats_total30 = 0;\n    long last_beats_total31\
    \ = 0;\n    long last_beats_total32 = 0;\n    long last_beats_total33 = 0;\n \
    \   long last_beats_total34 = 0;\n    long last_beats_total35 = 0;\n    long last_beats_total36\
    \ = 0;\n    long last_beats_total37 = 0;\n    long last_beats_total38 = 0;\n \
    \   long last_beats_total39 = 0;\n    long last_beats_total40 = 0;\n    long last_beats_total41\
    \ = 0;\n    long last_beats_total42 = 0;\n    long last_beats_total43 = 0;\n \
    \   long last_beats_total44 = 0;\n    long last_beats_total45 = 0;\n    long last_beats_total46\
    \ = 0;\n    long last_beats_total47 = 0;\n    long last_beats_total48 = 0;\n \
    \   long last_beats_total49 = 0;\n    long last_beats_total50 = 0;\n    long last_beats_total51\
    \ = 0;\n    long last_beats_total52 = 0;\n    long last_beats_total53 = 0;\n \
    \   long last_beats_\n}\nint main() {\n    auto candidate = parse_music;\n   \
    \ assert(candidate((\"\")) == (std::vector<long>()));\n    assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \   assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1, (long)1,\
    \ (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\")) == (std::vector<long>({(long)2,\
    \ (long)2, (long)1, (long)1, (long)4, (long)4, (long)4, (long)4})));\n    assert(candidate((\"\
    o| .| o| .| o o| o o|\")) == (std::vector<long>({(long)2, (long)1, (long)2, (long)1,\
    \ (long)4, (long)2, (long)4, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvmbd0cre.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpvmbd0cre.cpp:71:1: error: expected initializer before \u2018}\u2019\
    \ token\n   71 | }\n      | ^\n/tmp/tmpvmbd0cre.cpp:71:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129740
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Your code here\n    std::vector<long> beats;\n    long beat = 0;\n    long note\
    \ = 0;\n    long last_note = 0;\n    long last_beat = 0;\n    long last_beat2\
    \ = 0;\n    long last_beat3 = 0;\n    long last_beat4 = 0;\n    long last_beat5\
    \ = 0;\n    long last_beat6 = 0;\n    long last_beat7 = 0;\n    long last_beat8\
    \ = 0;\n    long last_beat9 = 0;\n    long last_beat10 = 0;\n    long last_beat11\
    \ = 0;\n    long last_beat12 = 0;\n    long last_beat13 = 0;\n    long last_beat14\
    \ = 0;\n    long last_beat15 = 0;\n    long last_beat16 = 0;\n    long last_beat17\
    \ = 0;\n    long last_beat18 = 0;\n    long last_beat19 = 0;\n    long last_beat20\
    \ = 0;\n    long last_beat21 = 0;\n    long last_beat22 = 0;\n    long last_beat23\
    \ = 0;\n    long last_beat24 = 0;\n    long last_beat25 = 0;\n    long last_beat26\
    \ = 0;\n    long last_beat27 = 0;\n    long last_beat28 = 0;\n    long last_beat29\
    \ = 0;\n    long last_beat30 = 0;\n    long last_beat31 = 0;\n    long last_beat32\
    \ = 0;\n    long last_beat33 = 0;\n    long last_beat34 = 0;\n    long last_beat35\
    \ = 0;\n    long last_beat36 = 0;\n    long last_beat37 = 0;\n    long last_beat38\
    \ = 0;\n    long last_beat39 = 0;\n    long last_beat40 = 0;\n    long last_beat41\
    \ = 0;\n    long last_beat42 = 0;\n    long last_beat43 = 0;\n    long last_beat44\
    \ = 0;\n    long last_beat45 = 0;\n    long last_beat46 = 0;\n    long last_beat47\
    \ = 0;\n    long last_beat48 = 0;\n    long last_beat49 = 0;\n    long last_beat50\
    \ = 0;\n    long last_beat51 = 0;\n    long last_beat52 = 0;\n    long last_beat53\
    \ = 0;\n    long last_beat54 = 0;\n    long last_beat55 = 0;\n    long last_beat56\
    \ = 0;\n    long last_beat57 = 0;\n    long last_beat58 = 0;\n    long last_beat59\
    \ = 0;\n    long last_beat60 = 0;\n    long last_beat61 = 0;\n    long last_beat62\
    \ = 0;\n    long last_beat63 = 0;\n    long last_beat64 = 0;\n    long last_beat65\
    \ = 0;\n    long last_beat66 = 0;\n    long last_beat67 = 0;\n    long last_beat68\
    \ = 0;\n    long last_beat69 = 0;\n    long last_beat70 = 0;\n}\nint main() {\n\
    \    auto candidate = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n\
    \    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: Exception
  stderr: 'tmp222j762r: /tmp/tmp222j762r.cpp:89: int main(): Assertion `candidate((""))
    == (std::vector<long>())'' failed.

    '
  stdout: ''
  timestamp: 1660129741
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Your code goes here\n    std::vector<long> beats;\n    std::string temp;\n \
    \   long beat = 0;\n    long last_beat = 0;\n    long last_note = 0;\n    long\
    \ note = 0;\n    long last_note_index = 0;\n    long last_note_index2 = 0;\n \
    \   long last_note_index3 = 0;\n    long last_note_index4 = 0;\n    long last_note_index5\
    \ = 0;\n    long last_note_index6 = 0;\n    long last_note_index7 = 0;\n    long\
    \ last_note_index8 = 0;\n    long last_note_index9 = 0;\n    long last_note_index10\
    \ = 0;\n    long last_note_index11 = 0;\n    long last_note_index12 = 0;\n   \
    \ long last_note_index13 = 0;\n    long last_note_index14 = 0;\n    long last_note_index15\
    \ = 0;\n    long last_note_index16 = 0;\n    long last_note_index17 = 0;\n   \
    \ long last_note_index18 = 0;\n    long last_note_index19 = 0;\n    long last_note_index20\
    \ = 0;\n    long last_note_index21 = 0;\n    long last_note_index22 = 0;\n   \
    \ long last_note_index23 = 0;\n    long last_note_index24 = 0;\n    long last_note_index25\
    \ = 0;\n    long last_note_index26 = 0;\n    long last_note_index27 = 0;\n   \
    \ long last_note_index28 = 0;\n    long last_note_index29 = 0;\n    long last_note_index30\
    \ = 0;\n    long last_note_index31 = 0;\n    long last_note_index32 = 0;\n   \
    \ long last_note_index33 = 0;\n    long last_note_index34 = 0;\n    long last_note_index35\
    \ = 0;\n    long last_note_index36 = 0;\n    long last_note_index37 = 0;\n   \
    \ long last_note_index38 = 0;\n    long last_note_index39 = 0;\n    long last_note_index40\
    \ = 0;\n    long last_note_index41 = 0;\n    long last_note_index42 = 0;\n   \
    \ long last_note_index43 = 0;\n    long last_note_index44 = 0;\n    long last_note_index45\
    \ = 0;\n    long last_note_index46 = 0;\n    long last_note_index47 = 0;\n   \
    \ long last_note_index48 = 0;\n    long last_note_index49 = 0;\n    long last_note_index50\
    \ = 0;\n    long last_note_index51 = 0;\n    long last_note_index52 = 0;\n   \
    \ long last_note_index53 = 0;\n    long last_note_index54 = 0;\n    long last_note_index55\
    \ = 0;\n    long last_note_index56 = 0;\n    long last_note_index57 = 0;\n   \
    \ long last_note_index58 = 0;\n    long last_note_index59 = 0;\n    long last_note_index\n\
    }\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"\
    )) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpygmfhy11.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpygmfhy11.cpp:78:1: error: expected initializer before \u2018}\u2019\
    \ token\n   78 | }\n      | ^\n/tmp/tmpygmfhy11.cpp:78:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129740
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Your code here\n    std::vector<long> beats;\n    std::string note;\n    long\
    \ beat = 0;\n    long note_count = 0;\n    long note_length = 0;\n    long note_length_count\
    \ = 0;\n    long note_length_index = 0;\n    long note_length_index2 = 0;\n  \
    \  long note_length_index3 = 0;\n    long note_length_index4 = 0;\n    long note_length_index5\
    \ = 0;\n    long note_length_index6 = 0;\n    long note_length_index7 = 0;\n \
    \   long note_length_index8 = 0;\n    long note_length_index9 = 0;\n    long note_length_index10\
    \ = 0;\n    long note_length_index11 = 0;\n    long note_length_index12 = 0;\n\
    \    long note_length_index13 = 0;\n    long note_length_index14 = 0;\n    long\
    \ note_length_index15 = 0;\n    long note_length_index16 = 0;\n    long note_length_index17\
    \ = 0;\n    long note_length_index18 = 0;\n    long note_length_index19 = 0;\n\
    \    long note_length_index20 = 0;\n    long note_length_index21 = 0;\n    long\
    \ note_length_index22 = 0;\n    long note_length_index23 = 0;\n    long note_length_index24\
    \ = 0;\n    long note_length_index25 = 0;\n    long note_length_index26 = 0;\n\
    \    long note_length_index27 = 0;\n    long note_length_index28 = 0;\n    long\
    \ note_length_index29 = 0;\n    long note_length_index30 = 0;\n    long note_length_index31\
    \ = 0;\n    long note_length_index32 = 0;\n    long note_length_index33 = 0;\n\
    \    long note_length_index34 = 0;\n    long note_length_index35 = 0;\n    long\
    \ note_length_index36 = 0;\n    long note_length_index37 = 0;\n    long note_length_index38\
    \ = 0;\n    long note_length_index39 = 0;\n    long note_length_index40 = 0;\n\
    \    long note_length_index41 = 0;\n    long note_length_index42 = 0;\n    long\
    \ note_length_index43 = 0;\n    long note_length_index44 = 0;\n    long note_length_index45\
    \ = 0;\n    long note_length_index46 = 0;\n    long note_length_index47 = 0;\n\
    \    long note_length_index48 = 0;\n    long note_length_index49 = 0;\n    long\
    \ note_length_index50 = 0;\n    long note_length_index51 = 0;\n    long note_length_index52\
    \ = 0;\n    long note_length_index53 = 0;\n    long note_length_index54 = 0;\n\
    \    long note_length_index55 = 0;\n    long note_length_index56 = 0;\n    long\
    \ note_length_index57 = 0;\n    long note_length_index58 = 0;\n    long note_length_index59\
    \ = 0;\n    long note_length\n}\nint main() {\n    auto candidate = parse_music;\n\
    \    assert(candidate((\"\")) == (std::vector<long>()));\n    assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \   assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1, (long)1,\
    \ (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\")) == (std::vector<long>({(long)2,\
    \ (long)2, (long)1, (long)1, (long)4, (long)4, (long)4, (long)4})));\n    assert(candidate((\"\
    o| .| o| .| o o| o o|\")) == (std::vector<long>({(long)2, (long)1, (long)2, (long)1,\
    \ (long)4, (long)2, (long)4, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6780nv5a.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp6780nv5a.cpp:78:1: error: expected initializer before \u2018}\u2019\
    \ token\n   78 | }\n      | ^\n/tmp/tmp6780nv5a.cpp:78:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129740
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    bool is_note = false;\n    bool is_last_note = false;\n    for (char c :\
    \ music_string) {\n        if (c == 'o') {\n            is_note = true;\n    \
    \        beat = 0;\n            last_beat = 0;\n        }\n        else if (c\
    \ == '|') {\n            is_note = true;\n            beat = 0;\n            last_beat\
    \ = 0;\n        }\n        else if (c == ' ') {\n            is_last_note = true;\n\
    \        }\n        else if (c == '.') {\n            is_last_note = true;\n \
    \       }\n        else if (is_note) {\n            beat += 1;\n        }\n  \
    \      else if (is_last_note) {\n            beats.push_back(beat - last_beat);\n\
    \            is_last_note = false;\n        }\n    }\n    return beats;\n}\nint\
    \ main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\")) ==\
    \ (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: Exception
  stderr: 'tmpqim0cptm: /tmp/tmpqim0cptm.cpp:47: int main(): Assertion `candidate(("o
    o o o")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4}))'' failed.

    '
  stdout: ''
  timestamp: 1660129740
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    bool last_note = false;\n    for (char c : music_string) {\n        if (c\
    \ == '|') {\n            note = note.empty() ? \"o\" : note;\n            beats.push_back(beat);\n\
    \            beat = 0;\n            last_note = false;\n            last_beat\
    \ = 0;\n            continue;\n        }\n        if (c == 'o') {\n          \
    \  note = note.empty() ? \"o\" : note;\n            beats.push_back(beat);\n \
    \           beat = 0;\n            last_note = false;\n            last_beat =\
    \ 0;\n            continue;\n        }\n        if (c == '.') {\n            note\
    \ = note.empty() ? \"o\" : note;\n            beats.push_back(beat);\n       \
    \     beat = 0;\n            last_note = false;\n            last_beat = 0;\n\
    \            continue;\n        }\n        if (c == 'o|') {\n            note\
    \ = note.empty() ? \"o\" : note;\n            beats.push_back(beat);\n       \
    \     beat = 0;\n            last_note = false;\n            last_beat = 0;\n\
    \            continue;\n        }\n        if (c == '.|') {\n            note\
    \ = note.empty() ? \"o\" : note;\n            beats.push_back(beat);\n       \
    \     beat = 0;\n            last_note = false;\n            last_beat = 0;\n\
    \            continue;\n        }\n        if (c == '|') {\n            note =\
    \ note.empty() ? \"o\" : note;\n            beats.push_back(beat);\n         \
    \   beat = 0;\n            last_note = false;\n            last_beat = 0;\n  \
    \          continue;\n        }\n        if (c == 'o') {\n            note = note.empty()\
    \ ? \"o\" : note;\n            beats.push_back(beat);\n            beat = 0;\n\
    \            last_note = false;\n            last_beat = 0;\n            continue;\n\
    \        }\n        if (c == '.') {\n            note = note.empty() ? \"o\" :\
    \ note;\n            beats.push_back(beat);\n            beat = 0;\n         \
    \   last_note = false;\n            last_beat = 0;\n            continue;\n  \
    \      }\n        if (c == 'o|') {\n            note = note.empty() ? \"o\" :\
    \ note;\n            beats.push_back(beat);\n            beat = 0;\n         \
    \   last_note = false;\n            last_beat = 0;\n            continue;\n  \
    \      }\n        if (c == '.|') {\n            note = note.empty() ? \"o\" :\
    \ note;\n            beats.push_back(beat);\n            beat = 0;\n         \
    \   last_note = false;\n            last_beat = 0;\n            continue;\n  \
    \      }\n        if (c == '|') {\n            note = note.empty() ? \"o\" : note;\n\
    \            beats.push_back(beat);\n            beat = 0;\n            last_note\
    \ = false;\n            last_beat = 0;\n            continue;\n}\nint main() {\n\
    \    auto candidate = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n\
    \    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpabr8bzr6.cpp:41:18: warning: multi-character character constant\
    \ [-Wmultichar]\n   41 |         if (c == 'o|') {\n      |                  ^~~~\n\
    /tmp/tmpabr8bzr6.cpp:49:18: warning: multi-character character constant [-Wmultichar]\n\
    \   49 |         if (c == '.|') {\n      |                  ^~~~\n/tmp/tmpabr8bzr6.cpp:81:18:\
    \ warning: multi-character character constant [-Wmultichar]\n   81 |         if\
    \ (c == 'o|') {\n      |                  ^~~~\n/tmp/tmpabr8bzr6.cpp:89:18: warning:\
    \ multi-character character constant [-Wmultichar]\n   89 |         if (c == '.|')\
    \ {\n      |                  ^~~~\n/tmp/tmpabr8bzr6.cpp: In function \u2018std::vector<long\
    \ int> parse_music(std::string)\u2019:\n/tmp/tmpabr8bzr6.cpp:105:12: error: a\
    \ function-definition is not allowed here before \u2018{\u2019 token\n  105 |\
    \ int main() {\n      |            ^\n/tmp/tmpabr8bzr6.cpp:112:1: error: expected\
    \ \u2018}\u2019 at end of input\n  112 | }\n      | ^\n/tmp/tmpabr8bzr6.cpp:16:33:\
    \ note: to match this \u2018{\u2019\n   16 |     for (char c : music_string) {\n\
    \      |                                 ^\n/tmp/tmpabr8bzr6.cpp:112:1: error:\
    \ expected \u2018}\u2019 at end of input\n  112 | }\n      | ^\n/tmp/tmpabr8bzr6.cpp:10:57:\
    \ note: to match this \u2018{\u2019\n   10 | std::vector<long> parse_music(std::string\
    \ music_string) {\n      |                                                   \
    \      ^\n/tmp/tmpabr8bzr6.cpp:112:1: warning: no return statement in function\
    \ returning non-void [-Wreturn-type]\n  112 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660129740
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    long last_note = 0;\n    long last_note_beat = 0;\n    long last_note_beat_time\
    \ = 0;\n    long last_note_beat_time_diff = 0;\n    long last_note_beat_time_diff_time\
    \ = 0;\n    long last_note_beat_time_diff_time_time = 0;\n    long last_note_beat_time_diff_time_time_time\
    \ = 0;\n    long last_note_beat_time_diff_time_time_time_time = 0;\n    long last_note_beat_time_diff_time_time_time_time_time\
    \ = 0;\n    long last_note_beat_time_diff_time_time_time_time_time_time = 0;\n\
    \    long last_note_beat_time_diff_time_time_time_time_time_time_time = 0;\n \
    \   long last_note_beat_time_diff_time_time_time_time_time_time_time_time = 0;\n\
    \    long last_note_beat_time_diff_time_time_time_time_time_time_time_time_time\
    \ = 0;\n    long last_note_beat_time_diff_time_time_time_time_time_time_time_time_time\
    \ = 0;\n    long last_note_beat_time_diff_time_time_time_time_time_time_time_time_time_time\
    \ = 0;\n    long last_note_beat_time_diff_time_time_time_time_time_time_time_time_time_time_time\
    \ = 0;\n    long last_note_beat_time_diff_time_time_time_time_time_time_time_time_time_time_time_time\
    \ = 0;\n    long last_note_beat_time_diff_time_time_time_time_time_time_time_time_time_time_time_time\
    \ = 0;\n    long last_note_beat_time_diff_time_time_time_time_time_time_time_time_time_time_time_time_time\
    \ = 0;\n    long last_note_beat_time_diff_time_time_time_time_time_time_time_time_time_time_time_time_time\
    \ = 0;\n    long last_note_beat_time_diff_time_time_time_time_time_time_time_time_time_time_time_time_time_time\
    \ = 0;\n    long last_note_beat_time_diff_time_time_time_time_time_time_time_time_time_time_time_time_time_time\
    \ = 0;\n    long last_note_beat_time_diff_time_time_time_time_time_time_time_time_time_time_time_time_time_time\
    \ = 0;\n    long last_note_beat_time_diff_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time\
    \ = 0;\n    long last_note_beat_time_diff_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time\
    \ = 0;\n    long last_note_beat_time_diff_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time\
    \ = 0;\n    long last_note_beat_time_diff_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time\n\
    }\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"\
    )) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3u96moc1.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp3u96moc1.cpp:28:10: error: redeclaration of \u2018long int last_note_beat_time_diff_time_time_time_time_time_time_time_time_time\u2019\
    \n   28 |     long last_note_beat_time_diff_time_time_time_time_time_time_time_time_time\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp3u96moc1.cpp:27:10: note: \u2018long int last_note_beat_time_diff_time_time_time_time_time_time_time_time_time\u2019\
    \ previously declared here\n   27 |     long last_note_beat_time_diff_time_time_time_time_time_time_time_time_time\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp3u96moc1.cpp:32:10: error: redeclaration of \u2018long int last_note_beat_time_diff_time_time_time_time_time_time_time_time_time_time_time_time\u2019\
    \n   32 |     long last_note_beat_time_diff_time_time_time_time_time_time_time_time_time_time_time_time\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp3u96moc1.cpp:31:10: note: \u2018long int last_note_beat_time_diff_time_time_time_time_time_time_time_time_time_time_time_time\u2019\
    \ previously declared here\n   31 |     long last_note_beat_time_diff_time_time_time_time_time_time_time_time_time_time_time_time\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp3u96moc1.cpp:34:10: error: redeclaration of \u2018long int last_note_beat_time_diff_time_time_time_time_time_time_time_time_time_time_time_time_time\u2019\
    \n   34 |     long last_note_beat_time_diff_time_time_time_time_time_time_time_time_time_time_time_time_time\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp3u96moc1.cpp:33:10: note: \u2018long int last_note_beat_time_diff_time_time_time_time_time_time_time_time_time_time_time_time_time\u2019\
    \ previously declared here\n   33 |     long last_note_beat_time_diff_time_time_"
  stdout: ''
  timestamp: 1660129740
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Your code goes here\n    std::vector<long> beats;\n    long beat = 0;\n    long\
    \ beats = 0;\n    long note = 0;\n    long notes = 0;\n    long notes_total =\
    \ 0;\n    long note_total = 0;\n    long note_total_beat = 0;\n    long note_total_beats\
    \ = 0;\n    long note_total_beats_total = 0;\n    long note_total_beats_total2\
    \ = 0;\n    long note_total_beats_total3 = 0;\n    long note_total_beats_total4\
    \ = 0;\n    long note_total_beats_total5 = 0;\n    long note_total_beats_total6\
    \ = 0;\n    long note_total_beats_total7 = 0;\n    long note_total_beats_total8\
    \ = 0;\n    long note_total_beats_total9 = 0;\n    long note_total_beats_total10\
    \ = 0;\n    long note_total_beats_total11 = 0;\n    long note_total_beats_total12\
    \ = 0;\n    long note_total_beats_total13 = 0;\n    long note_total_beats_total14\
    \ = 0;\n    long note_total_beats_total15 = 0;\n    long note_total_beats_total16\
    \ = 0;\n    long note_total_beats_total17 = 0;\n    long note_total_beats_total18\
    \ = 0;\n    long note_total_beats_total19 = 0;\n    long note_total_beats_total20\
    \ = 0;\n    long note_total_beats_total21 = 0;\n    long note_total_beats_total22\
    \ = 0;\n    long note_total_beats_total23 = 0;\n    long note_total_beats_total24\
    \ = 0;\n    long note_total_beats_total25 = 0;\n    long note_total_beats_total26\
    \ = 0;\n    long note_total_beats_total27 = 0;\n    long note_total_beats_total28\
    \ = 0;\n    long note_total_beats_total29 = 0;\n    long note_total_beats_total30\
    \ = 0;\n    long note_total_beats_total31 = 0;\n    long note_total_beats_total32\
    \ = 0;\n    long note_total_beats_total33 = 0;\n    long note_total_beats_total34\
    \ = 0;\n    long note_total_beats_total35 = 0;\n    long note_total_beats_total36\
    \ = 0;\n    long note_total_beats_total37 = 0;\n    long note_total_beats_total38\
    \ = 0;\n    long note_total_beats_total39 = 0;\n    long note_total_beats_total40\
    \ = 0;\n    long note_total_beats_total41 = 0;\n    long note_total_beats_total42\
    \ = 0;\n    long note_total_beats_total43 = 0;\n    long note_total_beats_total44\
    \ = 0;\n    long note_total_beats_total45 = 0;\n    long note_total_beats_total\n\
    }\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"\
    )) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpiboasbck.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpiboasbck.cpp:14:10: error: conflicting declaration \u2018long int beats\u2019\
    \n   14 |     long beats = 0;\n      |          ^~~~~\n/tmp/tmpiboasbck.cpp:12:23:\
    \ note: previous declaration as \u2018std::vector<long int> beats\u2019\n   12\
    \ |     std::vector<long> beats;\n      |                       ^~~~~\n/tmp/tmpiboasbck.cpp:67:1:\
    \ error: expected initializer before \u2018}\u2019 token\n   67 | }\n      | ^\n\
    /tmp/tmpiboasbck.cpp:67:1: warning: no return statement in function returning\
    \ non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129740
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Your code goes here\n    std::vector<long> beats;\n    long note = 0;\n    long\
    \ beat = 0;\n    long last_beat = 0;\n    long last_note = 0;\n    long last_note_count\
    \ = 0;\n    long last_note_duration = 0;\n    long note_duration = 0;\n    long\
    \ note_duration2 = 0;\n    long note_duration3 = 0;\n    long note_duration4 =\
    \ 0;\n    long note_duration5 = 0;\n    long note_duration6 = 0;\n    long note_duration7\
    \ = 0;\n    long note_duration8 = 0;\n    long note_duration9 = 0;\n    long note_duration10\
    \ = 0;\n    long note_duration11 = 0;\n    long note_duration12 = 0;\n    long\
    \ note_duration13 = 0;\n    long note_duration14 = 0;\n    long note_duration15\
    \ = 0;\n    long note_duration16 = 0;\n    long note_duration17 = 0;\n    long\
    \ note_duration18 = 0;\n    long note_duration19 = 0;\n    long note_duration20\
    \ = 0;\n    long note_duration21 = 0;\n    long note_duration22 = 0;\n    long\
    \ note_duration23 = 0;\n    long note_duration24 = 0;\n    long note_duration25\
    \ = 0;\n    long note_duration26 = 0;\n    long note_duration27 = 0;\n    long\
    \ note_duration28 = 0;\n    long note_duration29 = 0;\n    long note_duration30\
    \ = 0;\n    long note_duration31 = 0;\n    long note_duration32 = 0;\n    long\
    \ note_duration33 = 0;\n    long note_duration34 = 0;\n    long note_duration35\
    \ = 0;\n    long note_duration36 = 0;\n    long note_duration37 = 0;\n    long\
    \ note_duration38 = 0;\n    long note_duration39 = 0;\n    long note_duration40\
    \ = 0;\n    long note_duration41 = 0;\n    long note_duration42 = 0;\n    long\
    \ note_duration43 = 0;\n    long note_duration44 = 0;\n    long note_duration45\
    \ = 0;\n    long note_duration46 = 0;\n    long note_duration47 = 0;\n    long\
    \ note_duration48 = 0;\n    long note_duration49 = 0;\n    long note_duration50\
    \ = 0;\n    long note_duration51 = 0;\n    long note_duration52 = 0;\n    long\
    \ note_duration53 = 0;\n    long note_duration54 = 0;\n    long note_duration55\
    \ = 0;\n    long note_duration56 = 0;\n    long note_duration57 = 0;\n    long\
    \ note_duration58 = 0;\n    long note_duration59 = 0;\n    long note_duration60\
    \ = 0;\n    long note_duration61 = 0;\n    long note_duration62 = 0;\n    long\
    \ note_duration63 = 0;\n    long note_duration64 = 0;\n    long note_duration65\
    \ = 0;\n    long note_duration66 = 0;\n    long note_duration67 = 0;\n}\nint main()\
    \ {\n    auto candidate = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n\
    \    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: Exception
  stderr: 'tmpeml_5bir: /tmp/tmpeml_5bir.cpp:89: int main(): Assertion `candidate((""))
    == (std::vector<long>())'' failed.

    '
  stdout: ''
  timestamp: 1660129741
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Write your code here\n    std::vector<long> beats;\n    std::string note;\n\
    \    long beat = 0;\n    long note_count = 0;\n    long note_length = 0;\n   \
    \ long note_length_count = 0;\n    long note_length_index = 0;\n    long note_length_index2\
    \ = 0;\n    long note_length_index3 = 0;\n    long note_length_index4 = 0;\n \
    \   long note_length_index5 = 0;\n    long note_length_index6 = 0;\n    long note_length_index7\
    \ = 0;\n    long note_length_index8 = 0;\n    long note_length_index9 = 0;\n \
    \   long note_length_index10 = 0;\n    long note_length_index11 = 0;\n    long\
    \ note_length_index12 = 0;\n    long note_length_index13 = 0;\n    long note_length_index14\
    \ = 0;\n    long note_length_index15 = 0;\n    long note_length_index16 = 0;\n\
    \    long note_length_index17 = 0;\n    long note_length_index18 = 0;\n    long\
    \ note_length_index19 = 0;\n    long note_length_index20 = 0;\n    long note_length_index21\
    \ = 0;\n    long note_length_index22 = 0;\n    long note_length_index23 = 0;\n\
    \    long note_length_index24 = 0;\n    long note_length_index25 = 0;\n    long\
    \ note_length_index26 = 0;\n    long note_length_index27 = 0;\n    long note_length_index28\
    \ = 0;\n    long note_length_index29 = 0;\n    long note_length_index30 = 0;\n\
    \    long note_length_index31 = 0;\n    long note_length_index32 = 0;\n    long\
    \ note_length_index33 = 0;\n    long note_length_index34 = 0;\n    long note_length_index35\
    \ = 0;\n    long note_length_index36 = 0;\n    long note_length_index37 = 0;\n\
    \    long note_length_index38 = 0;\n    long note_length_index39 = 0;\n    long\
    \ note_length_index40 = 0;\n    long note_length_index41 = 0;\n    long note_length_index42\
    \ = 0;\n    long note_length_index43 = 0;\n    long note_length_index44 = 0;\n\
    \    long note_length_index45 = 0;\n    long note_length_index46 = 0;\n    long\
    \ note_length_index47 = 0;\n    long note_length_index48 = 0;\n    long note_length_index49\
    \ = 0;\n    long note_length_index50 = 0;\n    long note_length_index51 = 0;\n\
    \    long note_length_index52 = 0;\n    long note_length_index53 = 0;\n    long\
    \ note_length_index54 = 0;\n    long note_length_index55 = 0;\n    long note_length_index56\
    \ = 0;\n    long note_length_index57 = 0;\n    long note_length_index58 = 0;\n\
    \    long note_length_index59 = 0;\n    long note_length\n}\nint main() {\n  \
    \  auto candidate = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n\
    \    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpg994t3gt.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpg994t3gt.cpp:78:1: error: expected initializer before \u2018}\u2019\
    \ token\n   78 | }\n      | ^\n/tmp/tmpg994t3gt.cpp:78:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Your code here\n    std::vector<long> beats;\n    std::string note;\n    long\
    \ beat = 0;\n    long last_beat = 0;\n    long last_note = 0;\n    long last_note_beat\
    \ = 0;\n    long last_note_beat_time = 0;\n    long last_note_beat_time_time =\
    \ 0;\n    long last_note_beat_time_time_time = 0;\n    long last_note_beat_time_time_time_time\
    \ = 0;\n    long last_note_beat_time_time_time_time_time = 0;\n    long last_note_beat_time_time_time_time_time_time\
    \ = 0;\n    long last_note_beat_time_time_time_time_time_time_time = 0;\n    long\
    \ last_note_beat_time_time_time_time_time_time_time_time = 0;\n    long last_note_beat_time_time_time_time_time_time_time_time_time\
    \ = 0;\n    long last_note_beat_time_time_time_time_time_time_time_time_time_time\
    \ = 0;\n    long last_note_beat_time_time_time_time_time_time_time_time_time_time_time\
    \ = 0;\n    long last_note_beat_time_time_time_time_time_time_time_time_time_time_time\
    \ = 0;\n    long last_note_beat_time_time_time_time_time_time_time_time_time_time_time_time\
    \ = 0;\n    long last_note_beat_time_time_time_time_time_time_time_time_time_time_time_time\
    \ = 0;\n    long last_note_beat_time_time_time_time_time_time_time_time_time_time_time_time_time\
    \ = 0;\n    long last_note_beat_time_time_time_time_time_time_time_time_time_time_time_time_time\
    \ = 0;\n    long last_note_beat_time_time_time_time_time_time_time_time_time_time_time_time_time_time\
    \ = 0;\n    long last_note_beat_time_time_time_time_time_time_time_time_time_time_time_time_time_time\
    \ = 0;\n    long last_note_beat_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time\
    \ = 0;\n    long last_note_beat_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time\
    \ = 0;\n    long last_note_beat_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time\
    \ = 0;\n    long last_note_beat_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time\
    \ = 0;\n    long last_note_beat_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time\
    \ = 0;\n    long last_note_beat_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time\
    \ = 0;\n    long last_note_beat_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time\
    \ = 0;\n    long last_note_beat_\n}\nint main() {\n    auto candidate = parse_music;\n\
    \    assert(candidate((\"\")) == (std::vector<long>()));\n    assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \   assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1, (long)1,\
    \ (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\")) == (std::vector<long>({(long)2,\
    \ (long)2, (long)1, (long)1, (long)4, (long)4, (long)4, (long)4})));\n    assert(candidate((\"\
    o| .| o| .| o o| o o|\")) == (std::vector<long>({(long)2, (long)1, (long)2, (long)1,\
    \ (long)4, (long)2, (long)4, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpol0fni7e.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpol0fni7e.cpp:29:10: error: redeclaration of \u2018long int last_note_beat_time_time_time_time_time_time_time_time_time_time_time\u2019\
    \n   29 |     long last_note_beat_time_time_time_time_time_time_time_time_time_time_time\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpol0fni7e.cpp:28:10: note: \u2018long int last_note_beat_time_time_time_time_time_time_time_time_time_time_time\u2019\
    \ previously declared here\n   28 |     long last_note_beat_time_time_time_time_time_time_time_time_time_time_time\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpol0fni7e.cpp:31:10: error: redeclaration of \u2018long int last_note_beat_time_time_time_time_time_time_time_time_time_time_time_time\u2019\
    \n   31 |     long last_note_beat_time_time_time_time_time_time_time_time_time_time_time_time\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpol0fni7e.cpp:30:10: note: \u2018long int last_note_beat_time_time_time_time_time_time_time_time_time_time_time_time\u2019\
    \ previously declared here\n   30 |     long last_note_beat_time_time_time_time_time_time_time_time_time_time_time_time\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpol0fni7e.cpp:33:10: error: redeclaration of \u2018long int last_note_beat_time_time_time_time_time_time_time_time_time_time_time_time_time\u2019\
    \n   33 |     long last_note_beat_time_time_time_time_time_time_time_time_time_time_time_time_time\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpol0fni7e.cpp:32:10: note: \u2018long int last_note_beat_time_time_time_time_time_time_time_time_time_time_time_time_time\u2019\
    \ previously declared here\n   32 |     long last_note_beat_time_time_time_time_time_time_time_time_time_time_time_time_time\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
  stdout: ''
  timestamp: 1660129740
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    long last_note = 0;\n    long note_length = 0;\n    long note_length2 = 0;\n\
    \    long note_length3 = 0;\n    long note_length4 = 0;\n    long note_length5\
    \ = 0;\n    long note_length6 = 0;\n    long note_length7 = 0;\n    long note_length8\
    \ = 0;\n    long note_length9 = 0;\n    long note_length10 = 0;\n    long note_length11\
    \ = 0;\n    long note_length12 = 0;\n    long note_length13 = 0;\n    long note_length14\
    \ = 0;\n    long note_length15 = 0;\n    long note_length16 = 0;\n    long note_length17\
    \ = 0;\n    long note_length18 = 0;\n    long note_length19 = 0;\n    long note_length20\
    \ = 0;\n    long note_length21 = 0;\n    long note_length22 = 0;\n    long note_length23\
    \ = 0;\n    long note_length24 = 0;\n    long note_length25 = 0;\n    long note_length26\
    \ = 0;\n    long note_length27 = 0;\n    long note_length28 = 0;\n    long note_length29\
    \ = 0;\n    long note_length30 = 0;\n    long note_length31 = 0;\n    long note_length32\
    \ = 0;\n    long note_length33 = 0;\n    long note_length34 = 0;\n    long note_length35\
    \ = 0;\n    long note_length36 = 0;\n    long note_length37 = 0;\n    long note_length38\
    \ = 0;\n    long note_length39 = 0;\n    long note_length40 = 0;\n    long note_length41\
    \ = 0;\n    long note_length42 = 0;\n    long note_length43 = 0;\n    long note_length44\
    \ = 0;\n    long note_length45 = 0;\n    long note_length46 = 0;\n    long note_length47\
    \ = 0;\n    long note_length48 = 0;\n    long note_length49 = 0;\n    long note_length50\
    \ = 0;\n    long note_length51 = 0;\n    long note_length52 = 0;\n    long note_length53\
    \ = 0;\n    long note_length54 = 0;\n    long note_length55 = 0;\n    long note_length56\
    \ = 0;\n    long note_length57 = 0;\n    long note_length58 = 0;\n    long note_length59\
    \ = 0;\n    long note_length60 = 0;\n    long note_length61 = 0;\n    long note_length62\
    \ = 0;\n    long note_length63 = 0;\n    long note_length64 = 0;\n    long note_length65\
    \ = 0;\n    long note_length66 = 0;\n    long note_length67 = 0;\n    long note_length68\
    \ = 0;\n    long note_length69 = 0;\n    long note_length70\n}\nint main() {\n\
    \    auto candidate = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n\
    \    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4_6sxv0n.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp4_6sxv0n.cpp:86:1: error: expected initializer before \u2018}\u2019\
    \ token\n   86 | }\n      | ^\n/tmp/tmp4_6sxv0n.cpp:86:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129740
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    long last_note = 0;\n    long last_note_length = 0;\n    long note_length\
    \ = 0;\n    long note_length2 = 0;\n    long note_length3 = 0;\n    long note_length4\
    \ = 0;\n    long note_length5 = 0;\n    long note_length6 = 0;\n    long note_length7\
    \ = 0;\n    long note_length8 = 0;\n    long note_length9 = 0;\n    long note_length10\
    \ = 0;\n    long note_length11 = 0;\n    long note_length12 = 0;\n    long note_length13\
    \ = 0;\n    long note_length14 = 0;\n    long note_length15 = 0;\n    long note_length16\
    \ = 0;\n    long note_length17 = 0;\n    long note_length18 = 0;\n    long note_length19\
    \ = 0;\n    long note_length20 = 0;\n    long note_length21 = 0;\n    long note_length22\
    \ = 0;\n    long note_length23 = 0;\n    long note_length24 = 0;\n    long note_length25\
    \ = 0;\n    long note_length26 = 0;\n    long note_length27 = 0;\n    long note_length28\
    \ = 0;\n    long note_length29 = 0;\n    long note_length30 = 0;\n    long note_length31\
    \ = 0;\n    long note_length32 = 0;\n    long note_length33 = 0;\n    long note_length34\
    \ = 0;\n    long note_length35 = 0;\n    long note_length36 = 0;\n    long note_length37\
    \ = 0;\n    long note_length38 = 0;\n    long note_length39 = 0;\n    long note_length40\
    \ = 0;\n    long note_length41 = 0;\n    long note_length42 = 0;\n    long note_length43\
    \ = 0;\n    long note_length44 = 0;\n    long note_length45 = 0;\n    long note_length46\
    \ = 0;\n    long note_length47 = 0;\n    long note_length48 = 0;\n    long note_length49\
    \ = 0;\n    long note_length50 = 0;\n    long note_length51 = 0;\n    long note_length52\
    \ = 0;\n    long note_length53 = 0;\n    long note_length54 = 0;\n    long note_length55\
    \ = 0;\n    long note_length56 = 0;\n    long note_length57 = 0;\n    long note_length58\
    \ = 0;\n    long note_length59 = 0;\n    long note_length60 = 0;\n    long note_length61\
    \ = 0;\n    long note_length62 = 0;\n    long note_length63 = 0;\n    long note_length64\
    \ = 0;\n    long note_length65 = 0;\n    long note_length66 = 0;\n    long note_length67\
    \ = 0;\n    long note_length68 = 0;\n    long note_length69\n}\nint main() {\n\
    \    auto candidate = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n\
    \    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5ca2lzns.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp5ca2lzns.cpp:86:1: error: expected initializer before \u2018}\u2019\
    \ token\n   86 | }\n      | ^\n/tmp/tmp5ca2lzns.cpp:86:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129740
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Write your code here\n    std::vector<long> beats;\n    long beat = 0;\n   \
    \ long note = 0;\n    long last_note = 0;\n    long last_beat = 0;\n    long last_beats\
    \ = 0;\n    long last_beats_cnt = 0;\n    long last_beats_cnt_cnt = 0;\n    long\
    \ last_beats_cnt_cnt_cnt = 0;\n    long last_beats_cnt_cnt_cnt_cnt = 0;\n    long\
    \ last_beats_cnt_cnt_cnt_cnt_cnt = 0;\n    long last_beats_cnt_cnt_cnt_cnt_cnt_cnt\
    \ = 0;\n    long last_beats_cnt_cnt_cnt_cnt_cnt_cnt_cnt = 0;\n    long last_beats_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt\
    \ = 0;\n    long last_beats_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt = 0;\n    long\
    \ last_beats_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt = 0;\n    long last_beats_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt\
    \ = 0;\n    long last_beats_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt =\
    \ 0;\n    long last_beats_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt\
    \ = 0;\n    long last_beats_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt\
    \ = 0;\n    long last_beats_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt\
    \ = 0;\n    long last_beats_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt\
    \ = 0;\n    long last_beats_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt\
    \ = 0;\n    long last_beats_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt\
    \ = 0;\n    long last_beats_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt\
    \ = 0;\n    long last_beats_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt\
    \ = 0;\n    long last_beats_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt\
    \ = 0;\n    long last_beats_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt\
    \ = 0;\n    long last_beats_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt\
    \ = 0;\n    long last_beats_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt\
    \ = 0;\n    long last_beats_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt\
    \ = 0;\n    long last_beats_cnt_cnt_\n}\nint main() {\n    auto candidate = parse_music;\n\
    \    assert(candidate((\"\")) == (std::vector<long>()));\n    assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \   assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1, (long)1,\
    \ (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\")) == (std::vector<long>({(long)2,\
    \ (long)2, (long)1, (long)1, (long)4, (long)4, (long)4, (long)4})));\n    assert(candidate((\"\
    o| .| o| .| o o| o o|\")) == (std::vector<long>({(long)2, (long)1, (long)2, (long)1,\
    \ (long)4, (long)2, (long)4, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfljdcxd1.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpfljdcxd1.cpp:31:10: error: redeclaration of \u2018long int last_beats_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt\u2019\
    \n   31 |     long last_beats_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpfljdcxd1.cpp:30:10: note: \u2018long int last_beats_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt\u2019\
    \ previously declared here\n   30 |     long last_beats_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpfljdcxd1.cpp:34:10: error: redeclaration of \u2018long int last_beats_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt\u2019\
    \n   34 |     long last_beats_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpfljdcxd1.cpp:33:10: note: \u2018long int last_beats_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt\u2019\
    \ previously declared here\n   33 |     long last_beats_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpfljdcxd1.cpp:37:10: error: redeclaration of \u2018long int last_beats_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt\u2019\
    \n   37 |     long last_beats_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpfljdcxd1.cpp:36:10: note: \u2018long int last_beats_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt\u2019\
    \ previously declared here\n   36 |     long last_beats_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpfljdcxd1.cpp:39:1"
  stdout: ''
  timestamp: 1660129740
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    long last_note = 0;\n    long last_note_beat = 0;\n    long note_duration\
    \ = 0;\n    long note_duration2 = 0;\n    long note_duration3 = 0;\n    long note_duration4\
    \ = 0;\n    long note_duration5 = 0;\n    long note_duration6 = 0;\n    long note_duration7\
    \ = 0;\n    long note_duration8 = 0;\n    long note_duration9 = 0;\n    long note_duration10\
    \ = 0;\n    long note_duration11 = 0;\n    long note_duration12 = 0;\n    long\
    \ note_duration13 = 0;\n    long note_duration14 = 0;\n    long note_duration15\
    \ = 0;\n    long note_duration16 = 0;\n    long note_duration17 = 0;\n    long\
    \ note_duration18 = 0;\n    long note_duration19 = 0;\n    long note_duration20\
    \ = 0;\n    long note_duration21 = 0;\n    long note_duration22 = 0;\n    long\
    \ note_duration23 = 0;\n    long note_duration24 = 0;\n    long note_duration25\
    \ = 0;\n    long note_duration26 = 0;\n    long note_duration27 = 0;\n    long\
    \ note_duration28 = 0;\n    long note_duration29 = 0;\n    long note_duration30\
    \ = 0;\n    long note_duration31 = 0;\n    long note_duration32 = 0;\n    long\
    \ note_duration33 = 0;\n    long note_duration34 = 0;\n    long note_duration35\
    \ = 0;\n    long note_duration36 = 0;\n    long note_duration37 = 0;\n    long\
    \ note_duration38 = 0;\n    long note_duration39 = 0;\n    long note_duration40\
    \ = 0;\n    long note_duration41 = 0;\n    long note_duration42 = 0;\n    long\
    \ note_duration43 = 0;\n    long note_duration44 = 0;\n    long note_duration45\
    \ = 0;\n    long note_duration46 = 0;\n    long note_duration47 = 0;\n    long\
    \ note_duration48 = 0;\n    long note_duration49 = 0;\n    long note_duration50\
    \ = 0;\n    long note_duration51 = 0;\n    long note_duration52 = 0;\n    long\
    \ note_duration53 = 0;\n    long note_duration54 = 0;\n    long note_duration55\
    \ = 0;\n    long note_duration56 = 0;\n    long note_duration57 = 0;\n    long\
    \ note_duration58 = 0;\n    long note_duration59 = 0;\n    long note_duration60\
    \ = 0;\n    long note_duration61 = 0;\n    long note_duration62 = 0;\n    long\
    \ note_duration63 = 0;\n    long note_duration64 = 0;\n    long note_duration65\
    \ = 0;\n    long note_duration66 = 0;\n    long note_duration67 = 0;\n    long\
    \ note_duration68 = 0;\n    long note_duration69\n}\nint main() {\n    auto candidate\
    \ = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n  \
    \  assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4,\
    \ (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6axpnjdf.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp6axpnjdf.cpp:86:1: error: expected initializer before \u2018}\u2019\
    \ token\n   86 | }\n      | ^\n/tmp/tmp6axpnjdf.cpp:86:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129740
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Your code goes here\n    std::vector<long> beats;\n    std::string note;\n \
    \   long beat = 0;\n    long note_count = 0;\n    long last_note_count = 0;\n\
    \    long last_beat = 0;\n    long last_note = 0;\n    long last_note_beat = 0;\n\
    \    long last_note_beat_count = 0;\n    long last_note_beat_count_count = 0;\n\
    \    long last_note_beat_count_count_count = 0;\n    long last_note_beat_count_count_count_count\
    \ = 0;\n    long last_note_beat_count_count_count_count_count = 0;\n    long last_note_beat_count_count_count_count_count_count\
    \ = 0;\n    long last_note_beat_count_count_count_count_count_count_count = 0;\n\
    \    long last_note_beat_count_count_count_count_count_count_count_count = 0;\n\
    \    long last_note_beat_count_count_count_count_count_count_count_count_count_count\
    \ = 0;\n    long last_note_beat_count_count_count_count_count_count_count_count_count_count_count_count\
    \ = 0;\n    long last_note_beat_count_count_count_count_count_count_count_count_count_count_count_count_count\
    \ = 0;\n    long last_note_beat_count_count_count_count_count_count_count_count_count_count_count_count_count_count\
    \ = 0;\n    long last_note_beat_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count\
    \ = 0;\n    long last_note_beat_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count\
    \ = 0;\n    long last_note_beat_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count\
    \ = 0;\n    long last_note_beat_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count\
    \ = 0;\n    long last_note_beat_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count\
    \ = 0;\n    long last_note_beat_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count\
    \ = 0;\n    long last_note_beat_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count\
    \ = 0;\n    long last_note_beat_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count\
    \ = 0;\n    long last_note_beat_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count\
    \ = 0;\n    long last_note_beat_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count\
    \ = 0;\n    long last_note_beat_count_count_count_count_count_count_count_count_\n\
    }\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"\
    )) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpheb0vtyw.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpheb0vtyw.cpp:39:10: error: redeclaration of \u2018long int last_note_beat_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count\u2019\
    \n   39 |     long last_note_beat_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpheb0vtyw.cpp:38:10: note: \u2018long int last_note_beat_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count\u2019\
    \ previously declared here\n   38 |     long last_note_beat_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpheb0vtyw.cpp:43:1: error: expected initializer before \u2018}\u2019 token\n\
    \   43 | }\n      | ^\n/tmp/tmpheb0vtyw.cpp:43:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129740
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Your code here\n    std::vector<long> beats;\n    std::string note;\n    long\
    \ beat = 0;\n    long notes = 0;\n    long last_notes = 0;\n    long last_beat\
    \ = 0;\n    long last_note = 0;\n    long last_beats = 0;\n    long last_notes\
    \ = 0;\n    long last_beat = 0;\n    long last_note = 0;\n    long last_beats\
    \ = 0;\n    long last_notes = 0;\n    long last_beat = 0;\n    long last_note\
    \ = 0;\n    long last_beats = 0;\n    long last_notes = 0;\n    long last_beat\
    \ = 0;\n    long last_note = 0;\n    long last_beats = 0;\n    long last_notes\
    \ = 0;\n    long last_beat = 0;\n    long last_note = 0;\n    long last_beats\
    \ = 0;\n    long last_notes = 0;\n    long last_beat = 0;\n    long last_note\
    \ = 0;\n    long last_beats = 0;\n    long last_notes = 0;\n    long last_beat\
    \ = 0;\n    long last_note = 0;\n    long last_beats = 0;\n    long last_notes\
    \ = 0;\n    long last_beat = 0;\n    long last_note = 0;\n    long last_beats\
    \ = 0;\n    long last_notes = 0;\n    long last_beat = 0;\n    long last_note\
    \ = 0;\n    long last_beats = 0;\n    long last_notes = 0;\n    long last_beat\
    \ = 0;\n    long last_note = 0;\n    long last_beats = 0;\n    long last_notes\
    \ = 0;\n    long last_beat = 0;\n    long last_note = 0;\n    long last_beats\
    \ = 0;\n    long last_notes = 0;\n    long last_beat = 0;\n    long last_note\
    \ = 0;\n    long last_beats = 0;\n    long last_notes = 0;\n    long last_beat\
    \ = 0;\n    long last_note = 0;\n    long last_beats = 0;\n    long last_notes\
    \ = 0;\n    long last_beat = 0;\n    long last_note = 0;\n    long last_beats\
    \ = 0;\n    long last_notes = 0;\n    long last_beat = 0;\n    long last_note\
    \ = 0;\n    long last_beats = 0;\n    long last_notes = 0;\n    long last_beat\
    \ = 0;\n    long last_note = 0;\n    long last_beats = 0;\n    long last_notes\
    \ = 0;\n    long last_beat = 0;\n    long last_note = 0;\n    long last_beats\
    \ = 0;\n    long last_notes = 0;\n    long last_beat = 0;\n    long last_note\
    \ = 0;\n    long last_beats = 0;\n    long last_notes = 0;\n    long last_beat\
    \ = 0;\n    long last_note = 0;\n    long last_beats = 0;\n    long last_notes\
    \ = 0;\n    long last_beat = 0;\n    long last_note = 0;\n    long last_beats\
    \ = 0;\n    long last_notes = 0;\n}\nint main() {\n    auto candidate = parse_music;\n\
    \    assert(candidate((\"\")) == (std::vector<long>()));\n    assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \   assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1, (long)1,\
    \ (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\")) == (std::vector<long>({(long)2,\
    \ (long)2, (long)1, (long)1, (long)4, (long)4, (long)4, (long)4})));\n    assert(candidate((\"\
    o| .| o| .| o o| o o|\")) == (std::vector<long>({(long)2, (long)1, (long)2, (long)1,\
    \ (long)4, (long)2, (long)4, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1k4up1po.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp1k4up1po.cpp:20:10: error: redeclaration of \u2018long int last_notes\u2019\
    \n   20 |     long last_notes = 0;\n      |          ^~~~~~~~~~\n/tmp/tmp1k4up1po.cpp:16:10:\
    \ note: \u2018long int last_notes\u2019 previously declared here\n   16 |    \
    \ long last_notes = 0;\n      |          ^~~~~~~~~~\n/tmp/tmp1k4up1po.cpp:21:10:\
    \ error: redeclaration of \u2018long int last_beat\u2019\n   21 |     long last_beat\
    \ = 0;\n      |          ^~~~~~~~~\n/tmp/tmp1k4up1po.cpp:17:10: note: \u2018long\
    \ int last_beat\u2019 previously declared here\n   17 |     long last_beat = 0;\n\
    \      |          ^~~~~~~~~\n/tmp/tmp1k4up1po.cpp:22:10: error: redeclaration\
    \ of \u2018long int last_note\u2019\n   22 |     long last_note = 0;\n      |\
    \          ^~~~~~~~~\n/tmp/tmp1k4up1po.cpp:18:10: note: \u2018long int last_note\u2019\
    \ previously declared here\n   18 |     long last_note = 0;\n      |         \
    \ ^~~~~~~~~\n/tmp/tmp1k4up1po.cpp:23:10: error: redeclaration of \u2018long int\
    \ last_beats\u2019\n   23 |     long last_beats = 0;\n      |          ^~~~~~~~~~\n\
    /tmp/tmp1k4up1po.cpp:19:10: note: \u2018long int last_beats\u2019 previously declared\
    \ here\n   19 |     long last_beats = 0;\n      |          ^~~~~~~~~~\n/tmp/tmp1k4up1po.cpp:24:10:\
    \ error: redeclaration of \u2018long int last_notes\u2019\n   24 |     long last_notes\
    \ = 0;\n      |          ^~~~~~~~~~\n/tmp/tmp1k4up1po.cpp:16:10: note: \u2018\
    long int last_notes\u2019 previously declared here\n   16 |     long last_notes\
    \ = 0;\n      |          ^~~~~~~~~~\n/tmp/tmp1k4up1po.cpp:25:10: error: redeclaration\
    \ of \u2018long int last_beat\u2019\n   25 |     long last_beat = 0;\n      |\
    \          ^~~~~~~~~\n/tmp/tmp1k4up1po.cpp:17:10: note: \u2018long int last_beat\u2019\
    \ previously declared here\n   17 |     long last_beat = 0;\n      |         \
    \ ^~~~~~~~~\n/tmp/tmp1k4up1po.cpp:26:10: error: redeclaration of \u2018long int\
    \ last_note\u2019\n   26 |     long last_note = 0;\n      |          ^~~~~~~~~\n\
    /tmp/tmp1k4up1po.cpp:18:10: note: \u2018long int last_note\u2019 previously declared\
    \ here\n   18 |     long last_note = 0;\n      |         "
  stdout: ''
  timestamp: 1660129740
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    long last_note = 0;\n    long last_note_beat = 0;\n    long last_note_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat = 0;\n    long last_note_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat = 0;\n    long last_note_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat = 0;\n\
    \    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat = 0;\n \
    \   long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat = 0;\n  \
    \  long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat = 0;\n\
    \    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_be\n}\nint\
    \ main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\")) ==\
    \ (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5vjwlu_a.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp5vjwlu_a.cpp:26:10: error: redeclaration of \u2018long int last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\u2019\
    \n   26 |     long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp5vjwlu_a.cpp:25:10: note: \u2018long int last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\u2019\
    \ previously declared here\n   25 |     long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp5vjwlu_a.cpp:29:10: error: redeclaration of \u2018long int last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\u2019\
    \n   29 |     long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp5vjwlu_a.cpp:28:10: note: \u2018long int last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\u2019\
    \ previously declared here\n   28 |     long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp5vjwlu_a.cpp:30:10: error: redeclaration of \u2018long int last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\u2019\
    \n   30 |     long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp5vjwlu_a.cpp:28:10: note: \u2018long int last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\u2019\
    \ previously declared here\n   28 |     long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp5vjwlu_a.cpp:33:10: error: redeclaration of \u2018long int last_note_beat_beat_beat_beat_beat_beat"
  stdout: ''
  timestamp: 1660129740
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long beats = 0;\n   \
    \ long notes = 0;\n    long note = 0;\n    long notes_beat = 0;\n    long notes_beats\
    \ = 0;\n    long notes_beats_beat = 0;\n    long notes_beats_beats = 0;\n    long\
    \ notes_beats_beats_beat = 0;\n    long notes_beats_beats_beats_beat = 0;\n  \
    \  long notes_beats_beats_beats_beats_beat = 0;\n    long notes_beats_beats_beats_beats_beats_beat\
    \ = 0;\n    long notes_beats_beats_beats_beats_beats_beats_beat = 0;\n    long\
    \ notes_beats_beats_beats_beats_beats_beats_beats_beat = 0;\n    long notes_beats_beats_beats_beats_beats_beats_beats_beats_beat\
    \ = 0;\n    long notes_beats_beats_beats_beats_beats_beats_beats_beats_beat =\
    \ 0;\n    long notes_beats_beats_beats_beats_beats_beats_beats_beats_beat = 0;\n\
    \    long notes_beats_beats_beats_beats_beats_beats_beats_beats_beat = 0;\n  \
    \  long notes_beats_beats_beats_beats_beats_beats_beats_beats_beats_beat = 0;\n\
    \    long notes_beats_beats_beats_beats_beats_beats_beats_beats_beats_beat = 0;\n\
    \    long notes_beats_beats_beats_beats_beats_beats_beats_beats_beats_beat = 0;\n\
    \    long notes_beats_beats_beats_beats_beats_beats_beats_beats_beats_beat = 0;\n\
    \    long notes_beats_beats_beats_beats_beats_beats_beats_beats_beats_beat = 0;\n\
    \    long notes_beats_beats_beats_beats_beats_beats_beats_beats_beats_beat = 0;\n\
    \    long notes_beats_beats_beats_beats_beats_beats_beats_beats_beats_beat = 0;\n\
    \    long notes_beats_beats_beats_beats_beats_beats_beats_beats_beats_beat = 0;\n\
    \    long notes_beats_beats_beats_beats_beats_beats_beats_beats_beats_beat = 0;\n\
    \    long notes_beats_beats_beats_beats_beats_beats_beats_beats_beats_beat = 0;\n\
    \    long notes_beats_beats_beats_\n}\nint main() {\n    auto candidate = parse_music;\n\
    \    assert(candidate((\"\")) == (std::vector<long>()));\n    assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \   assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1, (long)1,\
    \ (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\")) == (std::vector<long>({(long)2,\
    \ (long)2, (long)1, (long)1, (long)4, (long)4, (long)4, (long)4})));\n    assert(candidate((\"\
    o| .| o| .| o o| o o|\")) == (std::vector<long>({(long)2, (long)1, (long)2, (long)1,\
    \ (long)4, (long)2, (long)4, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpilartfo8.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpilartfo8.cpp:14:10: error: conflicting declaration \u2018long int beats\u2019\
    \n   14 |     long beats = 0;\n      |          ^~~~~\n/tmp/tmpilartfo8.cpp:11:23:\
    \ note: previous declaration as \u2018std::vector<long int> beats\u2019\n   11\
    \ |     std::vector<long> beats;\n      |                       ^~~~~\n/tmp/tmpilartfo8.cpp:16:10:\
    \ error: conflicting declaration \u2018long int note\u2019\n   16 |     long note\
    \ = 0;\n      |          ^~~~\n/tmp/tmpilartfo8.cpp:12:17: note: previous declaration\
    \ as \u2018std::string note\u2019\n   12 |     std::string note;\n      |    \
    \             ^~~~\n/tmp/tmpilartfo8.cpp:28:10: error: redeclaration of \u2018\
    long int notes_beats_beats_beats_beats_beats_beats_beats_beats_beat\u2019\n  \
    \ 28 |     long notes_beats_beats_beats_beats_beats_beats_beats_beats_beat = 0;\n\
    \      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpilartfo8.cpp:27:10: note: \u2018long int notes_beats_beats_beats_beats_beats_beats_beats_beats_beat\u2019\
    \ previously declared here\n   27 |     long notes_beats_beats_beats_beats_beats_beats_beats_beats_beat\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpilartfo8.cpp:29:10: error: redeclaration of \u2018long int notes_beats_beats_beats_beats_beats_beats_beats_beats_beat\u2019\
    \n   29 |     long notes_beats_beats_beats_beats_beats_beats_beats_beats_beat\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpilartfo8.cpp:27:10: note: \u2018long int notes_beats_beats_beats_beats_beats_beats_beats_beats_beat\u2019\
    \ previously declared here\n   27 |     long notes_beats_beats_beats_beats_beats_beats_beats_beats_beat\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpilartfo8.cpp:30:10: error: redeclaration of \u2018long int notes_beats_beats_beats_beats_beats_beats_beats_beats_beat\u2019\
    \n   30 |     long notes_beats_beats_beats_beats_beats_beats_beats_beats_beat\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~"
  stdout: ''
  timestamp: 1660129740
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Your code here\n    std::vector<long> beats;\n    std::string note;\n    long\
    \ beat = 0;\n    long beats = 0;\n    long beats_total = 0;\n    long beats_total2\
    \ = 0;\n    long beats_total3 = 0;\n    long beats_total4 = 0;\n    long beats_total5\
    \ = 0;\n    long beats_total6 = 0;\n    long beats_total7 = 0;\n    long beats_total8\
    \ = 0;\n    long beats_total9 = 0;\n    long beats_total10 = 0;\n    long beats_total11\
    \ = 0;\n    long beats_total12 = 0;\n    long beats_total13 = 0;\n    long beats_total14\
    \ = 0;\n    long beats_total15 = 0;\n    long beats_total16 = 0;\n    long beats_total17\
    \ = 0;\n    long beats_total18 = 0;\n    long beats_total19 = 0;\n    long beats_total20\
    \ = 0;\n    long beats_total21 = 0;\n    long beats_total22 = 0;\n    long beats_total23\
    \ = 0;\n    long beats_total24 = 0;\n    long beats_total25 = 0;\n    long beats_total26\
    \ = 0;\n    long beats_total27 = 0;\n    long beats_total28 = 0;\n    long beats_total29\
    \ = 0;\n    long beats_total30 = 0;\n    long beats_total31 = 0;\n    long beats_total32\
    \ = 0;\n    long beats_total33 = 0;\n    long beats_total34 = 0;\n    long beats_total35\
    \ = 0;\n    long beats_total36 = 0;\n    long beats_total37 = 0;\n    long beats_total38\
    \ = 0;\n    long beats_total39 = 0;\n    long beats_total40 = 0;\n    long beats_total41\
    \ = 0;\n    long beats_total42 = 0;\n    long beats_total43 = 0;\n    long beats_total44\
    \ = 0;\n    long beats_total45 = 0;\n    long beats_total46 = 0;\n    long beats_total47\
    \ = 0;\n    long beats_total48 = 0;\n    long beats_total49 = 0;\n    long beats_total50\
    \ = 0;\n    long beats_total51 = 0;\n    long beats_total52 = 0;\n    long beats_total53\
    \ = 0;\n    long beats_total54 = 0;\n    long beats_total55 = 0;\n    long beats_total56\
    \ = 0;\n    long beats_total57 = 0;\n    long beats_total58 = 0;\n    long beats_total59\
    \ = 0;\n    long beats_total60 = 0;\n    long beats_total61 = 0;\n    long \n\
    }\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"\
    )) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfxs6ayxd.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpfxs6ayxd.cpp:15:10: error: conflicting declaration \u2018long int beats\u2019\
    \n   15 |     long beats = 0;\n      |          ^~~~~\n/tmp/tmpfxs6ayxd.cpp:12:23:\
    \ note: previous declaration as \u2018std::vector<long int> beats\u2019\n   12\
    \ |     std::vector<long> beats;\n      |                       ^~~~~\n/tmp/tmpfxs6ayxd.cpp:78:1:\
    \ error: expected unqualified-id before \u2018}\u2019 token\n   78 | }\n     \
    \ | ^\n/tmp/tmpfxs6ayxd.cpp:78:1: warning: no return statement in function returning\
    \ non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129740
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long beats = 0;\n   \
    \ long last_beat = 0;\n    long last_beats = 0;\n    long last_note = 0;\n   \
    \ long last_notes = 0;\n    long last_notes_beat = 0;\n    long last_notes_beats\
    \ = 0;\n    long last_notes_note = 0;\n    long last_notes_notes = 0;\n    long\
    \ last_notes_notes_beat = 0;\n    long last_notes_notes_beats = 0;\n    long last_notes_notes_note\
    \ = 0;\n    long last_notes_notes_notes = 0;\n    long last_notes_notes_notes_beat\
    \ = 0;\n    long last_notes_notes_notes_beats = 0;\n    long last_notes_notes_notes_note\
    \ = 0;\n    long last_notes_notes_notes_notes = 0;\n    long last_notes_notes_notes_notes_beat\
    \ = 0;\n    long last_notes_notes_notes_notes_beats = 0;\n    long last_notes_notes_notes_notes_note\
    \ = 0;\n    long last_notes_notes_notes_notes_notes = 0;\n    long last_notes_notes_notes_notes_notes_beat\
    \ = 0;\n    long last_notes_notes_notes_notes_notes_beats = 0;\n    long last_notes_notes_notes_notes_notes_note\
    \ = 0;\n    long last_notes_notes_notes_notes_notes_notes = 0;\n    long last_notes_notes_notes_notes_notes_notes_beat\
    \ = 0;\n    long last_notes_notes_notes_notes_notes_notes_beats = 0;\n    long\
    \ last_notes_notes_notes_notes_notes_notes_note = 0;\n    long last_notes_notes_notes_notes_notes_notes_notes\
    \ = 0;\n    long last_notes_notes_notes_notes_notes_notes_notes_beat = 0;\n  \
    \  long last_notes_notes_notes_notes_notes_notes_notes_beats = 0;\n    long last_notes_notes_notes_notes_notes_notes_notes_note\
    \ = 0;\n    long last_notes_notes_notes_notes_notes_notes_notes_notes = 0;\n \
    \   long last_notes_notes_notes_notes_notes_notes_notes_notes_beat = 0;\n    long\
    \ last_notes_notes_notes_notes_notes_notes_notes_notes_beats = 0;\n    long last_notes_notes_notes_notes_notes_notes_notes_notes_note\
    \ = 0;\n    long last_notes_notes_note\n}\nint main() {\n    auto candidate =\
    \ parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n    assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \   assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1, (long)1,\
    \ (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\")) == (std::vector<long>({(long)2,\
    \ (long)2, (long)1, (long)1, (long)4, (long)4, (long)4, (long)4})));\n    assert(candidate((\"\
    o| .| o| .| o o| o o|\")) == (std::vector<long>({(long)2, (long)1, (long)2, (long)1,\
    \ (long)4, (long)2, (long)4, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2j8l9lmu.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp2j8l9lmu.cpp:14:10: error: conflicting declaration \u2018long int beats\u2019\
    \n   14 |     long beats = 0;\n      |          ^~~~~\n/tmp/tmp2j8l9lmu.cpp:11:23:\
    \ note: previous declaration as \u2018std::vector<long int> beats\u2019\n   11\
    \ |     std::vector<long> beats;\n      |                       ^~~~~\n/tmp/tmp2j8l9lmu.cpp:51:1:\
    \ error: expected initializer before \u2018}\u2019 token\n   51 | }\n      | ^\n\
    /tmp/tmp2j8l9lmu.cpp:51:1: warning: no return statement in function returning\
    \ non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    long last_note = 0;\n    long last_note_duration = 0;\n    long note_duration\
    \ = 0;\n    long note_duration_in_beats = 0;\n    long note_duration_in_beats_without_last_note\
    \ = 0;\n    long note_duration_in_beats_without_last_note_duration = 0;\n    long\
    \ note_duration_in_beats_without_last_note_duration_in_beats = 0;\n    long note_duration_in_beats_without_last_note_duration_in_beats_without_last_note\
    \ = 0;\n    long note_duration_in_beats_without_last_note_duration_in_beats_without_last_note_duration\
    \ = 0;\n    long note_duration_in_beats_without_last_note_duration_in_beats_without_last_note_duration_in_beats\
    \ = 0;\n    long note_duration_in_beats_without_last_note_duration_in_beats_without_last_note_duration_in_beats_without_last_note\
    \ = 0;\n    long note_duration_in_beats_without_last_note_duration_in_beats_without_last_note_duration_in_beats_without_last_note_duration\
    \ = 0;\n    long note_duration_in_beats_without_last_note_duration_in_beats_without_last_note_duration_in_beats_without_last_note_duration_in_beats\
    \ = 0;\n    long note_duration_in_beats_without_last_note_duration_in_beats_without_last_note_duration_in_beats_without_last_note_duration_in_beats_without_last_note\
    \ = 0;\n    long note_duration_in_beats_without_last_note_duration_in_beats_without_last_note_duration_in_beats_without_last_note_duration_in_beats_without_last_note_duration\
    \ = 0;\n    long note_duration_in_beats_without_last_note_duration_in_beats_without_last_note_duration_in_beats_without_last_note_duration_in_beats_without_last_note_duration_in_beats\
    \ = 0;\n    long note_duration_in_beats_without_last_note_duration_in_beats_without_last_note_duration_in_beats_without_last_note_duration_in_beats_without_last_note_duration_in_beats_without_last_note\
    \ = 0;\n    long note_duration_in_beats_without_last_note_duration_in_beats_without_last_note_duration_in_beats_without_last_note_duration_in_beats_without_last_note_duration_in_beats_without_last_note_duration\
    \ = 0;\n    long note_duration_in_beats_without_last_note_duration_in_beats_without_last_note_duration_in_beats_without_last_note_duration_in_beats_without_last_note_duration_in_beats_without_last_note_duration\
    \ = 0;\n    long note_duration_in_beats_without_last_note_duration_in_beats_without_last_note_duration_in_beats_without_last_note_duration_in_beats_without_last_note_duration_in_beats_without_last_note_duration\
    \ = 0;\n    long note_duration_in_beats_without_last_note_duration_in_beat\n}\n\
    int main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"))\
    \ == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplhjsnmgp.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmplhjsnmgp.cpp:33:10: error: redeclaration of \u2018long int note_duration_in_beats_without_last_note_duration_in_beats_without_last_note_duration_in_beats_without_last_note_duration_in_beats_without_last_note_duration_in_beats_without_last_note_duration\u2019\
    \n   33 |     long note_duration_in_beats_without_last_note_duration_in_beats_without_last_note_duration_in_beats_without_last_note_duration_in_beats_without_last_note_duration_in_beats_without_last_note_duration\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmplhjsnmgp.cpp:32:10: note: \u2018long int note_duration_in_beats_without_last_note_duration_in_beats_without_last_note_duration_in_beats_without_last_note_duration_in_beats_without_last_note_duration_in_beats_without_last_note_duration\u2019\
    \ previously declared here\n   32 |     long note_duration_in_beats_without_last_note_duration_in_beats_without_last_note_duration_in_beats_without_last_note_duration_in_beats_without_last_note_duration_in_beats_without_last_note_duration\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmplhjsnmgp.cpp:34:10: error: redeclaration of \u2018long int note_duration_in_beats_without_last_note_duration_in_beats_without_last_note_duration_in_beats_without_last_note_duration_in_beats_without_last_note_duration_in_beats_without_last_note_duration\u2019\
    \n   34 |     long note_duration_in_beats_without_last_note_duration_in_beats_without_last_note_duration_in_beats_without_last_note_duration_in_beats_without_last_note_duration_in_beats_without_last_note_duration\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
  stdout: ''
  timestamp: 1660129740
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    long last_note = 0;\n    long last_note_beat = 0;\n    long last_note_beat_time\
    \ = 0;\n    long note_duration = 0;\n    long note_duration2 = 0;\n    long note_duration3\
    \ = 0;\n    long note_duration4 = 0;\n    long note_duration5 = 0;\n    long note_duration6\
    \ = 0;\n    long note_duration7 = 0;\n    long note_duration8 = 0;\n    long note_duration9\
    \ = 0;\n    long note_duration10 = 0;\n    long note_duration11 = 0;\n    long\
    \ note_duration12 = 0;\n    long note_duration13 = 0;\n    long note_duration14\
    \ = 0;\n    long note_duration15 = 0;\n    long note_duration16 = 0;\n    long\
    \ note_duration17 = 0;\n    long note_duration18 = 0;\n    long note_duration19\
    \ = 0;\n    long note_duration20 = 0;\n    long note_duration21 = 0;\n    long\
    \ note_duration22 = 0;\n    long note_duration23 = 0;\n    long note_duration24\
    \ = 0;\n    long note_duration25 = 0;\n    long note_duration26 = 0;\n    long\
    \ note_duration27 = 0;\n    long note_duration28 = 0;\n    long note_duration29\
    \ = 0;\n    long note_duration30 = 0;\n    long note_duration31 = 0;\n    long\
    \ note_duration32 = 0;\n    long note_duration33 = 0;\n    long note_duration34\
    \ = 0;\n    long note_duration35 = 0;\n    long note_duration36 = 0;\n    long\
    \ note_duration37 = 0;\n    long note_duration38 = 0;\n    long note_duration39\
    \ = 0;\n    long note_duration40 = 0;\n    long note_duration41 = 0;\n    long\
    \ note_duration42 = 0;\n    long note_duration43 = 0;\n    long note_duration44\
    \ = 0;\n    long note_duration45 = 0;\n    long note_duration46 = 0;\n    long\
    \ note_duration47 = 0;\n    long note_duration48 = 0;\n    long note_duration49\
    \ = 0;\n    long note_duration50 = 0;\n    long note_duration51 = 0;\n    long\
    \ note_duration52 = 0;\n    long note_duration53 = 0;\n    long note_duration54\
    \ = 0;\n    long note_duration55 = 0;\n    long note_duration56 = 0;\n    long\
    \ note_duration57 = 0;\n    long note_duration58 = 0;\n    long note_duration59\
    \ = 0;\n    long note_duration60 = 0;\n    long note_duration61 = 0;\n    long\
    \ note_duration62 = 0;\n    long note_duration63 = 0;\n    long note_duration64\
    \ = 0;\n    long note_duration65 = 0;\n    long note_duration66 = 0;\n    long\
    \ note_duration67 = 0;\n    long note_\n}\nint main() {\n    auto candidate =\
    \ parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n    assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \   assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1, (long)1,\
    \ (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\")) == (std::vector<long>({(long)2,\
    \ (long)2, (long)1, (long)1, (long)4, (long)4, (long)4, (long)4})));\n    assert(candidate((\"\
    o| .| o| .| o o| o o|\")) == (std::vector<long>({(long)2, (long)1, (long)2, (long)1,\
    \ (long)4, (long)2, (long)4, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpauuq1q38.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpauuq1q38.cpp:86:1: error: expected initializer before \u2018}\u2019\
    \ token\n   86 | }\n      | ^\n/tmp/tmpauuq1q38.cpp:86:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129740
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    long last_note = 0;\n    long note_duration = 0;\n    long note_duration2\
    \ = 0;\n    long note_duration3 = 0;\n    long note_duration4 = 0;\n    long note_duration5\
    \ = 0;\n    long note_duration6 = 0;\n    long note_duration7 = 0;\n    long note_duration8\
    \ = 0;\n    long note_duration9 = 0;\n    long note_duration10 = 0;\n    long\
    \ note_duration11 = 0;\n    long note_duration12 = 0;\n    long note_duration13\
    \ = 0;\n    long note_duration14 = 0;\n    long note_duration15 = 0;\n    long\
    \ note_duration16 = 0;\n    long note_duration17 = 0;\n    long note_duration18\
    \ = 0;\n    long note_duration19 = 0;\n    long note_duration20 = 0;\n    long\
    \ note_duration21 = 0;\n    long note_duration22 = 0;\n    long note_duration23\
    \ = 0;\n    long note_duration24 = 0;\n    long note_duration25 = 0;\n    long\
    \ note_duration26 = 0;\n    long note_duration27 = 0;\n    long note_duration28\
    \ = 0;\n    long note_duration29 = 0;\n    long note_duration30 = 0;\n    long\
    \ note_duration31 = 0;\n    long note_duration32 = 0;\n    long note_duration33\
    \ = 0;\n    long note_duration34 = 0;\n    long note_duration35 = 0;\n    long\
    \ note_duration36 = 0;\n    long note_duration37 = 0;\n    long note_duration38\
    \ = 0;\n    long note_duration39 = 0;\n    long note_duration40 = 0;\n    long\
    \ note_duration41 = 0;\n    long note_duration42 = 0;\n    long note_duration43\
    \ = 0;\n    long note_duration44 = 0;\n    long note_duration45 = 0;\n    long\
    \ note_duration46 = 0;\n    long note_duration47 = 0;\n    long note_duration48\
    \ = 0;\n    long note_duration49 = 0;\n    long note_duration50 = 0;\n    long\
    \ note_duration51 = 0;\n    long note_duration52 = 0;\n    long note_duration53\
    \ = 0;\n    long note_duration54 = 0;\n    long note_duration55 = 0;\n    long\
    \ note_duration56 = 0;\n    long note_duration57 = 0;\n    long note_duration58\
    \ = 0;\n    long note_duration59 = 0;\n    long note_duration60 = 0;\n    long\
    \ note_duration61 = 0;\n    long note_duration62 = 0;\n    long note_duration63\
    \ = 0;\n    long note_duration64 = 0;\n    long note_duration65 = 0;\n    long\
    \ note_duration66 = 0;\n    long note_duration67 = 0;\n    long note_duration68\
    \ = 0;\n    long note_duration69 = 0;\n    long note_duration70\n}\nint main()\
    \ {\n    auto candidate = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n\
    \    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcnglbpay.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpcnglbpay.cpp:86:1: error: expected initializer before \u2018}\u2019\
    \ token\n   86 | }\n      | ^\n/tmp/tmpcnglbpay.cpp:86:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129740
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    long beat = 0;\n    long note = 0;\n    long last_note = 0;\n  \
    \  long last_beat = 0;\n    long last_last_note = 0;\n    long last_last_beat\
    \ = 0;\n    long last_last_last_note = 0;\n    long last_last_last_beat = 0;\n\
    \    long last_last_last_last_note = 0;\n    long last_last_last_last_beat = 0;\n\
    \    long last_last_last_last_last_note = 0;\n    long last_last_last_last_last_beat\
    \ = 0;\n    long last_last_last_last_last_last_note = 0;\n    long last_last_last_last_last_last_beat\
    \ = 0;\n    long last_last_last_last_last_last_note = 0;\n    long last_last_last_last_last_last_beat\
    \ = 0;\n    long last_last_last_last_last_last_last_note = 0;\n    long last_last_last_last_last_last_last_beat\
    \ = 0;\n    long last_last_last_last_last_last_last_last_note = 0;\n    long last_last_last_last_last_last_last_last_beat\
    \ = 0;\n    long last_last_last_last_last_last_last_last_last_note = 0;\n    long\
    \ last_last_last_last_last_last_last_last_beat = 0;\n    long last_last_last_last_last_last_last_last_last_note\
    \ = 0;\n    long last_last_last_last_last_last_last_last_last_beat = 0;\n    long\
    \ last_last_last_last_last_last_last_last_last_note = 0;\n    long last_last_last_last_last_last_last_last_last_beat\
    \ = 0;\n    long last_last_last_last_last_last_last_last_last_last_note = 0;\n\
    \    long last_last_last_last_last_last_last_last_last_last_beat = 0;\n    long\
    \ last_last_last_last_last_last_last_last_last_last_note = 0;\n    long last_last_last_last_last_last_last_last_last_last_beat\
    \ = 0;\n    long last_last_last_last_last_last_last_last_last_last_note = 0;\n\
    \    long last_last_last_last_last_last_last_last_last_last_beat = 0;\n    long\
    \ last_last_last_last_last_last_last_last_last_last_note = 0;\n    long last_last_last_last_last_last_last_last_last_last_beat\
    \ = 0;\n    long last_last_last_last_last_last_last_last_last_last_note = 0;\n\
    \    long last_last_last_last_last_last_last_last_last_last_beat = 0;\n    long\
    \ last_last_last_last_last_last_last_last_last_last_note = 0;\n    long last_last_last_last_last_last_last_last_last_last_beat\
    \ = 0;\n    long last_last_last_last_last_last_last_last_last_last_note = 0;\n\
    \    long last_last_last_last_last_last_last_last_last_last_beat = 0;\n    long\
    \ last_last_last_last_last_last_last_last_last_last_note = 0;\n    long last_last_last_last_last_last_last_last_last_last_beat\n\
    }\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"\
    )) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm93f4gjp.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpm93f4gjp.cpp:26:10: error: redeclaration of \u2018long int last_last_last_last_last_last_note\u2019\
    \n   26 |     long last_last_last_last_last_last_note = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpm93f4gjp.cpp:24:10: note: \u2018long int last_last_last_last_last_last_note\u2019\
    \ previously declared here\n   24 |     long last_last_last_last_last_last_note\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpm93f4gjp.cpp:27:10:\
    \ error: redeclaration of \u2018long int last_last_last_last_last_last_beat\u2019\
    \n   27 |     long last_last_last_last_last_last_beat = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpm93f4gjp.cpp:25:10: note: \u2018long int last_last_last_last_last_last_beat\u2019\
    \ previously declared here\n   25 |     long last_last_last_last_last_last_beat\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpm93f4gjp.cpp:33:10:\
    \ error: redeclaration of \u2018long int last_last_last_last_last_last_last_last_beat\u2019\
    \n   33 |     long last_last_last_last_last_last_last_last_beat = 0;\n      |\
    \          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpm93f4gjp.cpp:31:10:\
    \ note: \u2018long int last_last_last_last_last_last_last_last_beat\u2019 previously\
    \ declared here\n   31 |     long last_last_last_last_last_last_last_last_beat\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpm93f4gjp.cpp:34:10:\
    \ error: redeclaration of \u2018long int last_last_last_last_last_last_last_last_last_note\u2019\
    \n   34 |     long last_last_last_last_last_last_last_last_last_note = 0;\n  \
    \    |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpm93f4gjp.cpp:32:10:\
    \ note: \u2018long int last_last_last_last_last_last_last_last_last_note\u2019\
    \ previously declared here\n   32 |     long last_last_last_last_last_last_last_last_last_note\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpm93f4gjp.cpp:36:10:\
    \ error: redeclaration of \u2018long int last_last_last_last_last_last_"
  stdout: ''
  timestamp: 1660129740
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    long last_note = 0;\n    long last_note_length = 0;\n    long note_length\
    \ = 0;\n    long note_length2 = 0;\n    long note_length3 = 0;\n    long note_length4\
    \ = 0;\n    long note_length5 = 0;\n    long note_length6 = 0;\n    long note_length7\
    \ = 0;\n    long note_length8 = 0;\n    long note_length9 = 0;\n    long note_length10\
    \ = 0;\n    long note_length11 = 0;\n    long note_length12 = 0;\n    long note_length13\
    \ = 0;\n    long note_length14 = 0;\n    long note_length15 = 0;\n    long note_length16\
    \ = 0;\n    long note_length17 = 0;\n    long note_length18 = 0;\n    long note_length19\
    \ = 0;\n    long note_length20 = 0;\n    long note_length21 = 0;\n    long note_length22\
    \ = 0;\n    long note_length23 = 0;\n    long note_length24 = 0;\n    long note_length25\
    \ = 0;\n    long note_length26 = 0;\n    long note_length27 = 0;\n    long note_length28\
    \ = 0;\n    long note_length29 = 0;\n    long note_length30 = 0;\n    long note_length31\
    \ = 0;\n    long note_length32 = 0;\n    long note_length33 = 0;\n    long note_length34\
    \ = 0;\n    long note_length35 = 0;\n    long note_length36 = 0;\n    long note_length37\
    \ = 0;\n    long note_length38 = 0;\n    long note_length39 = 0;\n    long note_length40\
    \ = 0;\n    long note_length41 = 0;\n    long note_length42 = 0;\n    long note_length43\
    \ = 0;\n    long note_length44 = 0;\n    long note_length45 = 0;\n    long note_length46\
    \ = 0;\n    long note_length47 = 0;\n    long note_length48 = 0;\n    long note_length49\
    \ = 0;\n    long note_length50 = 0;\n    long note_length51 = 0;\n    long note_length52\
    \ = 0;\n    long note_length53 = 0;\n    long note_length54 = 0;\n    long note_length55\
    \ = 0;\n    long note_length56 = 0;\n    long note_length57 = 0;\n    long note_length58\
    \ = 0;\n    long note_length59 = 0;\n    long note_length60 = 0;\n    long note_length61\
    \ = 0;\n    long note_length62 = 0;\n    long note_length63 = 0;\n    long note_length64\
    \ = 0;\n    long note_length65 = 0;\n    long note_length66 = 0;\n    long note_length67\
    \ = 0;\n    long note_length68 = 0;\n    long note_length69\n}\nint main() {\n\
    \    auto candidate = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n\
    \    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5ca2lzns.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp5ca2lzns.cpp:86:1: error: expected initializer before \u2018}\u2019\
    \ token\n   86 | }\n      | ^\n/tmp/tmp5ca2lzns.cpp:86:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129740
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    long beats_counter = 0;\n    long current_beat = 0;\n    long current_note\
    \ = 0;\n    long current_note_length = 0;\n    long current_note_length_in_beats\
    \ = 0;\n    long current_note_length_in_beats_counter = 0;\n    long current_note_length_in_beats_counter_counter\
    \ = 0;\n    long current_note_length_in_beats_counter_counter_counter = 0;\n \
    \   long current_note_length_in_beats_counter_counter_counter_counter = 0;\n \
    \   long current_note_length_in_beats_counter_counter_counter_counter_counter\
    \ = 0;\n    long current_note_length_in_beats_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long current_note_length_in_beats_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long current_note_length_in_beats_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long current_note_length_in_beats_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long current_note_length_in_beats_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long current_note_length_in_beats_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long current_note_length_in_beats_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long current_note_length_in_beats_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long current_note_length_in_beats_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long current_note_length_in_beats_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long current_note_length_in_beats_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long current_note_length_in_beats_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long current_note_length_in_beats_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long current_note_length_in_beats_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long current_note_length_in_beats_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long current_note_length_in_beats_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    \n}\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\
    \")) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphtjud6pe.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmphtjud6pe.cpp:31:10: error: redeclaration of \u2018long int current_note_length_in_beats_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\u2019\
    \n   31 |     long current_note_length_in_beats_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphtjud6pe.cpp:30:10: note: \u2018long int current_note_length_in_beats_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\u2019\
    \ previously declared here\n   30 |     long current_note_length_in_beats_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphtjud6pe.cpp:39:1: warning: no return statement in function returning\
    \ non-void [-Wreturn-type]\n   39 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660129740
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Your code goes here\n    std::vector<long> beats;\n    std::string note;\n \
    \   long beat = 0;\n    long note_count = 0;\n    long note_length = 0;\n    long\
    \ note_length_count = 0;\n    long note_length_index = 0;\n    long note_length_index2\
    \ = 0;\n    long note_length_index3 = 0;\n    long note_length_index4 = 0;\n \
    \   long note_length_index5 = 0;\n    long note_length_index6 = 0;\n    long note_length_index7\
    \ = 0;\n    long note_length_index8 = 0;\n    long note_length_index9 = 0;\n \
    \   long note_length_index10 = 0;\n    long note_length_index11 = 0;\n    long\
    \ note_length_index12 = 0;\n    long note_length_index13 = 0;\n    long note_length_index14\
    \ = 0;\n    long note_length_index15 = 0;\n    long note_length_index16 = 0;\n\
    \    long note_length_index17 = 0;\n    long note_length_index18 = 0;\n    long\
    \ note_length_index19 = 0;\n    long note_length_index20 = 0;\n    long note_length_index21\
    \ = 0;\n    long note_length_index22 = 0;\n    long note_length_index23 = 0;\n\
    \    long note_length_index24 = 0;\n    long note_length_index25 = 0;\n    long\
    \ note_length_index26 = 0;\n    long note_length_index27 = 0;\n    long note_length_index28\
    \ = 0;\n    long note_length_index29 = 0;\n    long note_length_index30 = 0;\n\
    \    long note_length_index31 = 0;\n    long note_length_index32 = 0;\n    long\
    \ note_length_index33 = 0;\n    long note_length_index34 = 0;\n    long note_length_index35\
    \ = 0;\n    long note_length_index36 = 0;\n    long note_length_index37 = 0;\n\
    \    long note_length_index38 = 0;\n    long note_length_index39 = 0;\n    long\
    \ note_length_index40 = 0;\n    long note_length_index41 = 0;\n    long note_length_index42\
    \ = 0;\n    long note_length_index43 = 0;\n    long note_length_index44 = 0;\n\
    \    long note_length_index45 = 0;\n    long note_length_index46 = 0;\n    long\
    \ note_length_index47 = 0;\n    long note_length_index48 = 0;\n    long note_length_index49\
    \ = 0;\n    long note_length_index50 = 0;\n    long note_length_index51 = 0;\n\
    \    long note_length_index52 = 0;\n    long note_length_index53 = 0;\n    long\
    \ note_length_index54 = 0;\n    long note_length_index55 = 0;\n    long note_length_index56\
    \ = 0;\n    long note_length_index57 = 0;\n    long note_length_index58 = 0;\n\
    \    long note_length_index59 = 0;\n    long note_\n}\nint main() {\n    auto\
    \ candidate = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n\
    \    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4wlxwkoy.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp4wlxwkoy.cpp:78:1: error: expected initializer before \u2018}\u2019\
    \ token\n   78 | }\n      | ^\n/tmp/tmp4wlxwkoy.cpp:78:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129740
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long current_beat = 0;\n\
    \    long current_note = 0;\n    long current_note_length = 0;\n    long current_note_length2\
    \ = 0;\n    long current_note_length3 = 0;\n    long current_note_length4 = 0;\n\
    \    long current_note_length5 = 0;\n    long current_note_length6 = 0;\n    long\
    \ current_note_length7 = 0;\n    long current_note_length8 = 0;\n    long current_note_length9\
    \ = 0;\n    long current_note_length10 = 0;\n    long current_note_length11 =\
    \ 0;\n    long current_note_length12 = 0;\n    long current_note_length13 = 0;\n\
    \    long current_note_length14 = 0;\n    long current_note_length15 = 0;\n  \
    \  long current_note_length16 = 0;\n    long current_note_length17 = 0;\n    long\
    \ current_note_length18 = 0;\n    long current_note_length19 = 0;\n    long current_note_length20\
    \ = 0;\n    long current_note_length21 = 0;\n    long current_note_length22 =\
    \ 0;\n    long current_note_length23 = 0;\n    long current_note_length24 = 0;\n\
    \    long current_note_length25 = 0;\n    long current_note_length26 = 0;\n  \
    \  long current_note_length27 = 0;\n    long current_note_length28 = 0;\n    long\
    \ current_note_length29 = 0;\n    long current_note_length30 = 0;\n    long current_note_length31\
    \ = 0;\n    long current_note_length32 = 0;\n    long current_note_length33 =\
    \ 0;\n    long current_note_length34 = 0;\n    long current_note_length35 = 0;\n\
    \    long current_note_length36 = 0;\n    long current_note_length37 = 0;\n  \
    \  long current_note_length38 = 0;\n    long current_note_length39 = 0;\n    long\
    \ current_note_length40 = 0;\n    long current_note_length41 = 0;\n    long current_note_length42\
    \ = 0;\n    long current_note_length43 = 0;\n    long current_note_length44 =\
    \ 0;\n    long current_note_length45 = 0;\n    long current_note_length46 = 0;\n\
    \    long current_note_length47 = 0;\n    long current_note_length48 = 0;\n  \
    \  long current_note_length49 = 0;\n    long current_note_length50 = 0;\n    long\
    \ current_note_length51 = 0;\n    long current_note_length52 = 0;\n    long current_note_length53\
    \ = 0;\n    long current_note_length54 = 0;\n    long current_note_length55 =\
    \ 0;\n    long current_note_length56 = 0;\n    long current_note_length57 = 0;\n\
    \    long current_note_length58 = 0;\n    long current_note_length59 = 0;\n  \
    \  long current_note_length60 = 0;\n    long current_note_length61 = 0;\n\n}\n\
    int main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"))\
    \ == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: Exception
  stderr: 'tmpt3bebbui: /tmp/tmpt3bebbui.cpp:81: int main(): Assertion `candidate((""))
    == (std::vector<long>())'' failed.

    '
  stdout: ''
  timestamp: 1660129738
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long beats = 0;\n   \
    \ long notes = 0;\n    long note = 0;\n    long notes_last = 0;\n    long notes_last2\
    \ = 0;\n    long notes_last4 = 0;\n    long notes_last8 = 0;\n    long notes_last16\
    \ = 0;\n    long notes_last32 = 0;\n    long notes_last64 = 0;\n    long notes_last128\
    \ = 0;\n    long notes_last256 = 1;\n    long notes_last512 = 2;\n    long notes_last1024\
    \ = 3;\n    long notes_last2048 = 4;\n    long notes_last4096 = 5;\n    long notes_last8192\
    \ = 6;\n    long notes_last16384 = 7;\n    long notes_last32768 = 8;\n    long\
    \ notes_last65536 = 9;\n    long notes_last131072 = 10;\n    long notes_last262144\
    \ = 11;\n    long notes_last524288 = 12;\n    long notes_last1048576 = 13;\n \
    \   long notes_last2097152 = 14;\n    long notes_last4194304 = 15;\n    long notes_last8388608\
    \ = 16;\n    long notes_last16777216 = 17;\n    long notes_last33554432 = 18;\n\
    \    long notes_last67108864 = 19;\n    long notes_last134217728 = 20;\n    long\
    \ notes_last268435456 = 21;\n    long notes_last536870912 = 22;\n    long notes_last1073741824\
    \ = 23;\n    long notes_last2147483648 = 24;\n    long notes_last4294967296 =\
    \ 25;\n    long notes_last8589934592 = 26;\n    long notes_last17179869184 = 27;\n\
    \    long notes_last34359738368 = 28;\n    long notes_last68719476736 = 29;\n\
    \    long notes_last137438953472 = 30;\n    long notes_last274877906944 = 31;\n\
    \    long notes_last549755813888 = 32;\n    long notes_last1099511627776 = 33;\n\
    \    long notes_last2199023255552 = 34;\n    long notes_last4398046511104 = 35;\n\
    \    long notes_last8796093022208 = 36;\n    long note\n}\nint main() {\n    auto\
    \ candidate = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n\
    \    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpq3p_hr4r.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpq3p_hr4r.cpp:14:10: error: conflicting declaration \u2018long int beats\u2019\
    \n   14 |     long beats = 0;\n      |          ^~~~~\n/tmp/tmpq3p_hr4r.cpp:11:23:\
    \ note: previous declaration as \u2018std::vector<long int> beats\u2019\n   11\
    \ |     std::vector<long> beats;\n      |                       ^~~~~\n/tmp/tmpq3p_hr4r.cpp:16:10:\
    \ error: conflicting declaration \u2018long int note\u2019\n   16 |     long note\
    \ = 0;\n      |          ^~~~\n/tmp/tmpq3p_hr4r.cpp:12:17: note: previous declaration\
    \ as \u2018std::string note\u2019\n   12 |     std::string note;\n      |    \
    \             ^~~~\n/tmp/tmpq3p_hr4r.cpp:62:1: error: expected initializer before\
    \ \u2018}\u2019 token\n   62 | }\n      | ^\n/tmp/tmpq3p_hr4r.cpp:62:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129740
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    long last_note = 0;\n    long last_note_beat = 0;\n    long last_note_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat = 0;\n    long last_note_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat = 0;\n    long last_note_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat = 0;\n\
    \    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat = 0;\n \
    \   long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat = 0;\n\
    \    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_\n}\nint main() {\n    auto candidate\
    \ = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n  \
    \  assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4,\
    \ (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnbau0el3.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpnbau0el3.cpp:30:10: error: redeclaration of \u2018long int last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\u2019\
    \n   30 |     long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpnbau0el3.cpp:29:10: note: \u2018long int last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\u2019\
    \ previously declared here\n   29 |     long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpnbau0el3.cpp:33:10: error: redeclaration of \u2018long int last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\u2019\
    \n   33 |     long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpnbau0el3.cpp:32:10: note: \u2018long int last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\u2019\
    \ previously declared here\n   32 |     long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpnbau0el3.cpp:34:10: error: redeclaration of \u2018long int last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\u2019\
    \n   34 |     long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpnbau0el3.cpp:32:10: note: \u2018long int last_"
  stdout: ''
  timestamp: 1660129740
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long rest = 0;\n    long\
    \ rests = 0;\n    long rests_max = 0;\n    long rests_max_index = 0;\n    long\
    \ rests_max_index2 = 0;\n    long rests_max_index3 = 0;\n    long rests_max_index4\
    \ = 0;\n    long rests_max_index5 = 0;\n    long rests_max_index6 = 0;\n    long\
    \ rests_max_index7 = 0;\n    long rests_max_index8 = 0;\n    long rests_max_index9\
    \ = 0;\n    long rests_max_index10 = 0;\n    long rests_max_index11 = 0;\n   \
    \ long rests_max_index12 = 0;\n    long rests_max_index13 = 0;\n    long rests_max_index14\
    \ = 0;\n    long rests_max_index15 = 0;\n    long rests_max_index16 = 0;\n   \
    \ long rests_max_index17 = 0;\n    long rests_max_index18 = 0;\n    long rests_max_index19\
    \ = 0;\n    long rests_max_index20 = 0;\n    long rests_max_index21 = 0;\n   \
    \ long rests_max_index22 = 0;\n    long rests_max_index23 = 0;\n    long rests_max_index24\
    \ = 0;\n    long rests_max_index25 = 0;\n    long rests_max_index26 = 0;\n   \
    \ long rests_max_index27 = 0;\n    long rests_max_index28 = 0;\n    long rests_max_index29\
    \ = 0;\n    long rests_max_index30 = 0;\n    long rests_max_index31 = 0;\n   \
    \ long rests_max_index32 = 0;\n    long rests_max_index33 = 0;\n    long rests_max_index34\
    \ = 0;\n    long rests_max_index35 = 0;\n    long rests_max_index36 = 0;\n   \
    \ long rests_max_index37 = 0;\n    long rests_max_index38 = 0;\n    long rests_max_index39\
    \ = 0;\n    long rests_max_index40 = 0;\n    long rests_max_index41 = 0;\n   \
    \ long rests_max_index42 = 0;\n    long rests_max_index43 = 0;\n    long rests_max_index44\
    \ = 0;\n    long rests_max_index45 = 0;\n    long rests_max_index46 = 0;\n   \
    \ long rests_max_index47 = 0;\n    long rests_max_index48 = 0;\n    long rests_max_index49\
    \ = 0;\n    long rests_max_index50 = 0;\n    long rests_max_index51 = 0;\n   \
    \ long rests_max_index52 = 0;\n    long rests_max_index53 = 0;\n    long rests_max_index\n\
    }\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"\
    )) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1qaoikrb.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp1qaoikrb.cpp:71:1: error: expected initializer before \u2018}\u2019\
    \ token\n   71 | }\n      | ^\n/tmp/tmp1qaoikrb.cpp:71:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129740
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    bool is_note = false;\n    bool is_last_note = false;\n    bool is_last_beat\
    \ = false;\n    for (char c : music_string) {\n        if (c == 'o') {\n     \
    \       is_note = true;\n            beat = 0;\n            last_beat = 0;\n \
    \           is_last_note = false;\n            is_last_beat = false;\n       \
    \ } else if (c == '|') {\n            is_note = true;\n            beat = 0;\n\
    \            last_beat = 0;\n            is_last_note = false;\n            is_last_beat\
    \ = false;\n        } else if (c == ' ') {\n            is_last_note = true;\n\
    \            is_last_beat = false;\n        } else if (c == '.') {\n         \
    \   is_last_note = true;\n            is_last_beat = true;\n        } else if\
    \ (c == '-') {\n            is_last_note = false;\n            is_last_beat =\
    \ true;\n        } else if (c == '|') {\n            is_last_note = false;\n \
    \           is_last_beat = true;\n        } else if (c == 'o') {\n           \
    \ is_last_note = false;\n            is_last_beat = false;\n        } else if\
    \ (c == '.') {\n            is_last_note = false;\n            is_last_beat =\
    \ false;\n        } else if (c == '-') {\n            is_last_note = false;\n\
    \            is_last_beat = false;\n        } else if (c == '|') {\n         \
    \   is_last_note = false;\n            is_last_beat = false;\n        } else if\
    \ (c == 'o') {\n            is_last_note = false;\n            is_last_beat =\
    \ false;\n        } else if (c == '.') {\n            is_last_note = false;\n\
    \            is_last_beat = false;\n        } else if (c == '-') {\n         \
    \   is_last_note = false;\n            is_last_beat = false;\n        } else if\
    \ (c == '|') {\n            is_last_note = false;\n            is_last_beat =\
    \ false;\n        } else if (c == 'o') {\n            is_last_note = false;\n\
    \            is_last_beat = false;\n        } else if (c == '.') {\n         \
    \   is_last_note = false;\n            is_last_beat = false;\n        } else if\
    \ (c == '-') {\n            is_last_note = false;\n            is_last_beat =\
    \ false;\n        } else if (c == '|') {\n            is_last_note = false;\n\
    \            is_last_beat = false;\n        } else if (c == 'o') {\n         \
    \   is_last_note = false;\n            is_last_beat = false;\n        } else if\
    \ (c == '.') {\n            is_last_note = false;\n            is_last_beat =\
    \ false;\n        } else if (c == '-') {\n            is_last_note = false;\n\
    \            is_last_beat = false;\n        } else if (c == '|') {\n         \
    \   is_last_note = false;\n            is_last_beat = false;\n        } else if\
    \ (c == 'o') {\n            is_last_note = false;\n            is_last_beat =\
    \ false;\n        } else if (c == '.') {\n            is_last_note = false;\n\
    \            is_last_beat = false;\n        } else if (c == '-') {\n         \
    \   is_last_note = false;\n            is_last_beat = false;\n        } else if\
    \ (c == '|') {\n            is_last_note = false;\n            is_last_beat =\
    \ false;\n        } else if (c == 'o') {\n            is_last_note = false;\n\
    \            is_last_beat = false;\n        } else if (c == '.') {\n}\nint main()\
    \ {\n    auto candidate = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n\
    \    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0atc8zof.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp0atc8zof.cpp:108:12: error: a function-definition is not allowed here\
    \ before \u2018{\u2019 token\n  108 | int main() {\n      |            ^\n/tmp/tmp0atc8zof.cpp:115:1:\
    \ error: expected \u2018}\u2019 at end of input\n  115 | }\n      | ^\n/tmp/tmp0atc8zof.cpp:18:33:\
    \ note: to match this \u2018{\u2019\n   18 |     for (char c : music_string) {\n\
    \      |                                 ^\n/tmp/tmp0atc8zof.cpp:115:1: error:\
    \ expected \u2018}\u2019 at end of input\n  115 | }\n      | ^\n/tmp/tmp0atc8zof.cpp:10:57:\
    \ note: to match this \u2018{\u2019\n   10 | std::vector<long> parse_music(std::string\
    \ music_string) {\n      |                                                   \
    \      ^\n/tmp/tmp0atc8zof.cpp:115:1: warning: no return statement in function\
    \ returning non-void [-Wreturn-type]\n  115 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660129740
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    long beats_counter = 0;\n    long current_beat = 0;\n    long current_note\
    \ = 0;\n    long current_note_length = 0;\n    long current_note_length2 = 0;\n\
    \    long current_note_length3 = 0;\n    long current_note_length4 = 0;\n    long\
    \ current_note_length5 = 0;\n    long current_note_length6 = 0;\n    long current_note_length7\
    \ = 0;\n    long current_note_length8 = 0;\n    long current_note_length9 = 0;\n\
    \    long current_note_length10 = 0;\n    long current_note_length11 = 0;\n  \
    \  long current_note_length12 = 0;\n    long current_note_length13 = 0;\n    long\
    \ current_note_length14 = 0;\n    long current_note_length15 = 0;\n    long current_note_length16\
    \ = 0;\n    long current_note_length17 = 0;\n    long current_note_length18 =\
    \ 0;\n    long current_note_length19 = 0;\n    long current_note_length20 = 0;\n\
    \    long current_note_length21 = 0;\n    long current_note_length22 = 0;\n  \
    \  long current_note_length23 = 0;\n    long current_note_length24 = 0;\n    long\
    \ current_note_length25 = 0;\n    long current_note_length26 = 0;\n    long current_note_length27\
    \ = 0;\n    long current_note_length28 = 0;\n    long current_note_length29 =\
    \ 0;\n    long current_note_length30 = 0;\n    long current_note_length31 = 0;\n\
    \    long current_note_length32 = 0;\n    long current_note_length33 = 0;\n  \
    \  long current_note_length34 = 0;\n    long current_note_length35 = 0;\n    long\
    \ current_note_length36 = 0;\n    long current_note_length37 = 0;\n    long current_note_length38\
    \ = 0;\n    long current_note_length39 = 0;\n    long current_note_length40 =\
    \ 0;\n    long current_note_length41 = 0;\n    long current_note_length42 = 0;\n\
    \    long current_note_length43 = 0;\n    long current_note_length44 = 0;\n  \
    \  long current_note_length45 = 0;\n    long current_note_length46 = 0;\n    long\
    \ current_note_length47 = 0;\n    long current_note_length48 = 0;\n    long current_note_length49\
    \ = 0;\n    long current_note_length50 = 0;\n    long current_note_length51 =\
    \ 0;\n    long current_note_length52 = 0;\n    long current_note_length53 = 0;\n\
    \    long current_note_length54 = 0;\n    long current_note_length55 = 0;\n  \
    \  long current_note_length56 = 0;\n    long current_note_length57 = 0;\n    long\
    \ current_note_length58 = 0;\n    long current_note_length59 = 0;\n    long current_note_length60\
    \ = 0;\n    long current_note_length61 = 0;\n    long current_\n}\nint main()\
    \ {\n    auto candidate = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n\
    \    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqov3rcrj.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpqov3rcrj.cpp:77:1: error: expected initializer before \u2018}\u2019\
    \ token\n   77 | }\n      | ^\n/tmp/tmpqov3rcrj.cpp:77:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long rest = 0;\n    bool\
    \ is_rest = false;\n    for (char c : music_string) {\n        if (c == 'o') {\n\
    \            note = \"o\";\n            beat = 0;\n            rest = 0;\n   \
    \         is_rest = false;\n        } else if (c == 'o|') {\n            note\
    \ = \"o|\";\n            beat = 0;\n            rest = 0;\n            is_rest\
    \ = true;\n        } else if (c == '.|') {\n            note = \".|\";\n     \
    \       beat = 0;\n            rest = 0;\n            is_rest = false;\n     \
    \   } else if (c == '|') {\n            note = \"|\";\n            beat = 0;\n\
    \            rest = 0;\n            is_rest = false;\n        } else if (c ==\
    \ '|.') {\n            note = \"|.\";\n            beat = 0;\n            rest\
    \ = 0;\n            is_rest = false;\n        } else if (c == '|.o') {\n     \
    \       note = \"|.o\";\n            beat = 0;\n            rest = 0;\n      \
    \      is_rest = false;\n        } else if (c == '|.o.') {\n            note =\
    \ \"|.o.\";\n            beat = 0;\n            rest = 0;\n            is_rest\
    \ = false;\n        } else if (c == '|.o.|') {\n            note = \"|.o.|\";\n\
    \            beat = 0;\n            rest = 0;\n            is_rest = false;\n\
    \        } else if (c == '|.o.|.') {\n            note = \"|.o.|.\";\n       \
    \     beat = 0;\n            rest = 0;\n            is_rest = false;\n       \
    \ } else if (c == '|.o.|.o') {\n            note = \"|.o.|.o\";\n            beat\
    \ = 0;\n            rest = 0;\n            is_rest = false;\n        } else if\
    \ (c == '|.o.|.o.') {\n            note = \"|.o.|.o.\";\n            beat = 0;\n\
    \            rest = 0;\n            is_rest = false;\n        } else if (c ==\
    \ '|.o.|.o.|') {\n            note = \"|.o.|.o.|\";\n            beat = 0;\n \
    \           rest = 0;\n            is_rest = false;\n        } else if (c == '|.o.|.o.|.')\
    \ {\n            note = \"|.o.|.o.|.\";\n            beat = 0;\n            rest\
    \ = 0;\n            is_rest = false;\n        } else if (c == '|.o.|.o.|.o') {\n\
    \            note = \"|.o.|.o.|.o\";\n            beat = 0;\n            rest\
    \ = 0;\n            is_rest = false;\n        } else if (c == '|.o.|.o.|.o.')\
    \ {\n            note = \"|.o.|.o.|.o.\";\n            beat = 0;\n           \
    \ rest = 0;\n            is_rest = false;\n        } else if (c == '|.o.|.o.\n\
    }\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"\
    )) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm1c3h6f0.cpp:22:25: warning: multi-character character constant\
    \ [-Wmultichar]\n   22 |         } else if (c == 'o|') {\n      |            \
    \             ^~~~\n/tmp/tmpm1c3h6f0.cpp:27:25: warning: multi-character character\
    \ constant [-Wmultichar]\n   27 |         } else if (c == '.|') {\n      |   \
    \                      ^~~~\n/tmp/tmpm1c3h6f0.cpp:37:25: warning: multi-character\
    \ character constant [-Wmultichar]\n   37 |         } else if (c == '|.') {\n\
    \      |                         ^~~~\n/tmp/tmpm1c3h6f0.cpp:42:25: warning: multi-character\
    \ character constant [-Wmultichar]\n   42 |         } else if (c == '|.o') {\n\
    \      |                         ^~~~~\n/tmp/tmpm1c3h6f0.cpp:47:25: warning: multi-character\
    \ character constant [-Wmultichar]\n   47 |         } else if (c == '|.o.') {\n\
    \      |                         ^~~~~~\n/tmp/tmpm1c3h6f0.cpp:52:25: warning:\
    \ character constant too long for its type\n   52 |         } else if (c == '|.o.|')\
    \ {\n      |                         ^~~~~~~\n/tmp/tmpm1c3h6f0.cpp:57:25: warning:\
    \ character constant too long for its type\n   57 |         } else if (c == '|.o.|.')\
    \ {\n      |                         ^~~~~~~~\n/tmp/tmpm1c3h6f0.cpp:62:25: warning:\
    \ character constant too long for its type\n   62 |         } else if (c == '|.o.|.o')\
    \ {\n      |                         ^~~~~~~~~\n/tmp/tmpm1c3h6f0.cpp:67:25: warning:\
    \ character constant too long for its type\n   67 |         } else if (c == '|.o.|.o.')\
    \ {\n      |                         ^~~~~~~~~~\n/tmp/tmpm1c3h6f0.cpp:72:25: warning:\
    \ character constant too long for its type\n   72 |         } else if (c == '|.o.|.o.|')\
    \ {\n      |                         ^~~~~~~~~~~\n/tmp/tmpm1c3h6f0.cpp:77:25:\
    \ warning: character constant too long for its type\n   77 |         } else if\
    \ (c == '|.o.|.o.|.') {\n      |                         ^~~~~~~~~~~~\n/tmp/tmpm1c3h6f0.cpp:82:25:\
    \ warning: character constant too long for its type\n   82 |         } else if\
    \ (c == '|.o.|.o.|.o') {\n      |                         ^~~~~~~~~~~~~\n/tmp/tmpm1c3h6f0.cpp:87:25:\
    \ warning: character constant to"
  stdout: ''
  timestamp: 1660129740
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    long last_note = 0;\n    for (char c : music_string) {\n        if (c ==\
    \ 'o') {\n            note = note.empty() ? \"o\" : note + \"|\";\n          \
    \  beats.push_back(beat);\n            beat = 0;\n            last_note = 0;\n\
    \            last_beat = 0;\n        } else if (c == '.') {\n            note\
    \ = note.empty() ? \".\" : note + \".\";\n            beats.push_back(beat);\n\
    \            beat = 0;\n            last_note = 0;\n            last_beat = 0;\n\
    \        } else if (c == '|') {\n            note = note.empty() ? \"|\" : note\
    \ + \"o\";\n            beats.push_back(beat);\n            beat = 0;\n      \
    \      last_note = 0;\n            last_beat = 0;\n        } else if (c == 'o|')\
    \ {\n            note = note.empty() ? \"o|\" : note + \"|o\";\n            beats.push_back(beat);\n\
    \            beat = 0;\n            last_note = 0;\n            last_beat = 0;\n\
    \        } else if (c == '|o') {\n            note = note.empty() ? \"|o\" : note\
    \ + \"o|\";\n            beats.push_back(beat);\n            beat = 0;\n     \
    \       last_note = 0;\n            last_beat = 0;\n        } else if (c == 'o|o')\
    \ {\n            note = note.empty() ? \"o|o\" : note + \"|o|\";\n           \
    \ beats.push_back(beat);\n            beat = 0;\n            last_note = 0;\n\
    \            last_beat = 0;\n        } else if (c == '|o|') {\n            note\
    \ = note.empty() ? \"|o|\" : note + \"o|o\";\n            beats.push_back(beat);\n\
    \            beat = 0;\n            last_note = 0;\n            last_beat = 0;\n\
    \        } else if (c == 'o|o|') {\n            note = note.empty() ? \"o|o|\"\
    \ : note + \"|o|o\";\n            beats.push_back(beat);\n            beat = 0;\n\
    \            last_note = 0;\n            last_beat = 0;\n        } else if (c\
    \ == '|o|o|') {\n            note = note.empty() ? \"|o|o|\" : note + \"o|o|o\"\
    ;\n            beats.push_back(beat);\n            beat = 0;\n            last_note\
    \ = 0;\n            last_beat = 0;\n        } else if (c == 'o|o|o|') {\n    \
    \        note = note.empty() ? \"o|o|o|\" : note + \"|o|o|o\";\n            beats.push_back(beat);\n\
    \            beat = 0;\n            last_note = 0;\n            last_beat = 0;\n\
    \        } else if (c == '|o|o|o|') {\n            note = note.empty() ? \"|\n\
    }\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"\
    )) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp84fcrd58.cpp:35:25: warning: multi-character character constant\
    \ [-Wmultichar]\n   35 |         } else if (c == 'o|') {\n      |            \
    \             ^~~~\n/tmp/tmp84fcrd58.cpp:41:25: warning: multi-character character\
    \ constant [-Wmultichar]\n   41 |         } else if (c == '|o') {\n      |   \
    \                      ^~~~\n/tmp/tmp84fcrd58.cpp:47:25: warning: multi-character\
    \ character constant [-Wmultichar]\n   47 |         } else if (c == 'o|o') {\n\
    \      |                         ^~~~~\n/tmp/tmp84fcrd58.cpp:53:25: warning: multi-character\
    \ character constant [-Wmultichar]\n   53 |         } else if (c == '|o|') {\n\
    \      |                         ^~~~~\n/tmp/tmp84fcrd58.cpp:59:25: warning: multi-character\
    \ character constant [-Wmultichar]\n   59 |         } else if (c == 'o|o|') {\n\
    \      |                         ^~~~~~\n/tmp/tmp84fcrd58.cpp:65:25: warning:\
    \ character constant too long for its type\n   65 |         } else if (c == '|o|o|')\
    \ {\n      |                         ^~~~~~~\n/tmp/tmp84fcrd58.cpp:71:25: warning:\
    \ character constant too long for its type\n   71 |         } else if (c == 'o|o|o|')\
    \ {\n      |                         ^~~~~~~~\n/tmp/tmp84fcrd58.cpp:77:25: warning:\
    \ character constant too long for its type\n   77 |         } else if (c == '|o|o|o|')\
    \ {\n      |                         ^~~~~~~~~\n/tmp/tmp84fcrd58.cpp:78:35: warning:\
    \ missing terminating \" character\n   78 |             note = note.empty() ?\
    \ \"|\n      |                                   ^\n/tmp/tmp84fcrd58.cpp:78:35:\
    \ error: missing terminating \" character\n   78 |             note = note.empty()\
    \ ? \"|\n      |                                   ^~\n/tmp/tmp84fcrd58.cpp: In\
    \ function \u2018std::vector<long int> parse_music(std::string)\u2019:\n/tmp/tmp84fcrd58.cpp:79:1:\
    \ error: expected primary-expression before \u2018}\u2019 token\n   79 | }\n \
    \     | ^\n/tmp/tmp84fcrd58.cpp:78:34: error: expected \u2018:\u2019 before \u2018\
    }\u2019 token\n   78 |             note = note.empty() ? \"|\n      |        \
    \                          ^\n      |                                  :\n   79\
    \ | }\n      | ~       "
  stdout: ''
  timestamp: 1660129740
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    long last_note = 0;\n    long note_count = 0;\n    long note_length = 0;\n\
    \    long note_length_count = 0;\n    long note_length_index = 0;\n    long note_length_index2\
    \ = 0;\n    long note_length_index3 = 0;\n    long note_length_index4 = 0;\n \
    \   long note_length_index5 = 0;\n    long note_length_index6 = 0;\n    long note_length_index7\
    \ = 0;\n    long note_length_index8 = 0;\n    long note_length_index9 = 0;\n \
    \   long note_length_index10 = 0;\n    long note_length_index11 = 0;\n    long\
    \ note_length_index12 = 0;\n    long note_length_index13 = 0;\n    long note_length_index14\
    \ = 0;\n    long note_length_index15 = 0;\n    long note_length_index16 = 0;\n\
    \    long note_length_index17 = 0;\n    long note_length_index18 = 0;\n    long\
    \ note_length_index19 = 0;\n    long note_length_index20 = 0;\n    long note_length_index21\
    \ = 0;\n    long note_length_index22 = 0;\n    long note_length_index23 = 0;\n\
    \    long note_length_index24 = 0;\n    long note_length_index25 = 0;\n    long\
    \ note_length_index26 = 0;\n    long note_length_index27 = 0;\n    long note_length_index28\
    \ = 0;\n    long note_length_index29 = 0;\n    long note_length_index30 = 0;\n\
    \    long note_length_index31 = 0;\n    long note_length_index32 = 0;\n    long\
    \ note_length_index33 = 0;\n    long note_length_index34 = 0;\n    long note_length_index35\
    \ = 0;\n    long note_length_index36 = 0;\n    long note_length_index37 = 0;\n\
    \    long note_length_index38 = 0;\n    long note_length_index39 = 0;\n    long\
    \ note_length_index40 = 0;\n    long note_length_index41 = 0;\n    long note_length_index42\
    \ = 0;\n    long note_length_index43 = 0;\n    long note_length_index44 = 0;\n\
    \    long note_length_index45 = 0;\n    long note_length_index46 = 0;\n    long\
    \ note_length_index47 = 0;\n    long note_length_index48 = 0;\n    long note_length_index49\
    \ = 0;\n    long note_length_index50 = 0;\n    long note_length_index51 = 0;\n\
    \    long note_length_index52 = 0;\n    long note_length_index53 = 0;\n    long\
    \ note_length_index54 = 0;\n    long note_length_index55 = 0;\n    long note_length_index56\
    \ = 0;\n    long note_length_index57 = 0;\n    long note_length_index58 = 0;\n\
    \    long note_length_index\n}\nint main() {\n    auto candidate = parse_music;\n\
    \    assert(candidate((\"\")) == (std::vector<long>()));\n    assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \   assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1, (long)1,\
    \ (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\")) == (std::vector<long>({(long)2,\
    \ (long)2, (long)1, (long)1, (long)4, (long)4, (long)4, (long)4})));\n    assert(candidate((\"\
    o| .| o| .| o o| o o|\")) == (std::vector<long>({(long)2, (long)1, (long)2, (long)1,\
    \ (long)4, (long)2, (long)4, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6vyg_0_l.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp6vyg_0_l.cpp:78:1: error: expected initializer before \u2018}\u2019\
    \ token\n   78 | }\n      | ^\n/tmp/tmp6vyg_0_l.cpp:78:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    bool is_note = false;\n    bool is_last_note = false;\n    bool is_last_beat\
    \ = false;\n    bool is_last_beat = false;\n    bool is_last_beat = false;\n \
    \   bool is_last_beat = false;\n    bool is_last_beat = false;\n    bool is_last_beat\
    \ = false;\n    bool is_last_beat = false;\n    bool is_last_beat = false;\n \
    \   bool is_last_beat = false;\n    bool is_last_beat = false;\n    bool is_last_beat\
    \ = false;\n    bool is_last_beat = false;\n    bool is_last_beat = false;\n \
    \   bool is_last_beat = false;\n    bool is_last_beat = false;\n    bool is_last_beat\
    \ = false;\n    bool is_last_beat = false;\n    bool is_last_beat = false;\n \
    \   bool is_last_beat = false;\n    bool is_last_beat = false;\n    bool is_last_beat\
    \ = false;\n    bool is_last_beat = false;\n    bool is_last_beat = false;\n \
    \   bool is_last_beat = false;\n    bool is_last_beat = false;\n    bool is_last_beat\
    \ = false;\n    bool is_last_beat = false;\n    bool is_last_beat = false;\n \
    \   bool is_last_beat = false;\n    bool is_last_beat = false;\n    bool is_last_beat\
    \ = false;\n    bool is_last_beat = false;\n    bool is_last_beat = false;\n \
    \   bool is_last_beat = false;\n    bool is_last_beat = false;\n    bool is_last_beat\
    \ = false;\n    bool is_last_beat = false;\n    bool is_last_beat = false;\n \
    \   bool is_last_beat = false;\n    bool is_last_beat = false;\n    bool is_last_beat\
    \ = false;\n    bool is_last_beat = false;\n    bool is_last_beat = false;\n \
    \   bool is_last_beat = false;\n    bool is_last_beat = false;\n    bool is_last_beat\
    \ = false;\n    bool is_last_beat = false;\n    bool is_last_beat = false;\n \
    \   bool is_last_beat = false;\n    bool is_last_beat = false;\n    bool is_last_beat\
    \ = false;\n    bool is_last_beat = false;\n    bool is_last_beat = false;\n \
    \   bool is_last_beat = false;\n    bool is_last_beat = false;\n    bool is_last_beat\
    \ = false;\n    bool is_last_beat = false;\n    bool is_last_beat = false;\n \
    \   bool is_last_beat = false;\n    bool is_last_beat = false;\n    bool is_last_beat\
    \ = false;\n    bool is_last_beat = false;\n    bool is_last_beat = false;\n \
    \   bool is_last_beat = false;\n    bool is_last_beat = false;\n    bool is_last_beat\
    \ = false;\n    bool is_last_beat = false;\n    bool is_last_beat = false;\n\n\
    }\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"\
    )) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4iptrgzi.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp4iptrgzi.cpp:18:10: error: redeclaration of \u2018bool is_last_beat\u2019\
    \n   18 |     bool is_last_beat = false;\n      |          ^~~~~~~~~~~~\n/tmp/tmp4iptrgzi.cpp:17:10:\
    \ note: \u2018bool is_last_beat\u2019 previously declared here\n   17 |     bool\
    \ is_last_beat = false;\n      |          ^~~~~~~~~~~~\n/tmp/tmp4iptrgzi.cpp:19:10:\
    \ error: redeclaration of \u2018bool is_last_beat\u2019\n   19 |     bool is_last_beat\
    \ = false;\n      |          ^~~~~~~~~~~~\n/tmp/tmp4iptrgzi.cpp:17:10: note: \u2018\
    bool is_last_beat\u2019 previously declared here\n   17 |     bool is_last_beat\
    \ = false;\n      |          ^~~~~~~~~~~~\n/tmp/tmp4iptrgzi.cpp:20:10: error:\
    \ redeclaration of \u2018bool is_last_beat\u2019\n   20 |     bool is_last_beat\
    \ = false;\n      |          ^~~~~~~~~~~~\n/tmp/tmp4iptrgzi.cpp:17:10: note: \u2018\
    bool is_last_beat\u2019 previously declared here\n   17 |     bool is_last_beat\
    \ = false;\n      |          ^~~~~~~~~~~~\n/tmp/tmp4iptrgzi.cpp:21:10: error:\
    \ redeclaration of \u2018bool is_last_beat\u2019\n   21 |     bool is_last_beat\
    \ = false;\n      |          ^~~~~~~~~~~~\n/tmp/tmp4iptrgzi.cpp:17:10: note: \u2018\
    bool is_last_beat\u2019 previously declared here\n   17 |     bool is_last_beat\
    \ = false;\n      |          ^~~~~~~~~~~~\n/tmp/tmp4iptrgzi.cpp:22:10: error:\
    \ redeclaration of \u2018bool is_last_beat\u2019\n   22 |     bool is_last_beat\
    \ = false;\n      |          ^~~~~~~~~~~~\n/tmp/tmp4iptrgzi.cpp:17:10: note: \u2018\
    bool is_last_beat\u2019 previously declared here\n   17 |     bool is_last_beat\
    \ = false;\n      |          ^~~~~~~~~~~~\n/tmp/tmp4iptrgzi.cpp:23:10: error:\
    \ redeclaration of \u2018bool is_last_beat\u2019\n   23 |     bool is_last_beat\
    \ = false;\n      |          ^~~~~~~~~~~~\n/tmp/tmp4iptrgzi.cpp:17:10: note: \u2018\
    bool is_last_beat\u2019 previously declared here\n   17 |     bool is_last_beat\
    \ = false;\n      |          ^~~~~~~~~~~~\n/tmp/tmp4iptrgzi.cpp:24:10: error:\
    \ redeclaration of \u2018bool is_last_beat\u2019\n   24 |     bool is_last_beat\
    \ = false;\n      |          ^~~~~~~~~~~~\n/tmp/tmp4iptrgzi.cpp:17:10: note:"
  stdout: ''
  timestamp: 1660129740
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Your code here\n    std::vector<long> beats;\n    std::string note;\n    long\
    \ beat = 0;\n    long beats = 0;\n    long notes = 0;\n    long note = 0;\n  \
    \  long notes_sum = 0;\n    long notes_sum2 = 0;\n    long notes_sum3 = 0;\n \
    \   long notes_sum4 = 0;\n    long notes_sum5 = 0;\n    long notes_sum6 = 0;\n\
    \    long notes_sum7 = 0;\n    long notes_sum8 = 0;\n    long notes_sum9 = 0;\n\
    \    long notes_sum10 = 0;\n    long notes_sum11 = 0;\n    long notes_sum12 =\
    \ 0;\n    long notes_sum13 = 0;\n    long notes_sum14 = 0;\n    long notes_sum15\
    \ = 0;\n    long notes_sum16 = 0;\n    long notes_sum17 = 0;\n    long notes_sum18\
    \ = 0;\n    long notes_sum19 = 0;\n    long notes_sum20 = 0;\n    long notes_sum21\
    \ = 0;\n    long notes_sum22 = 0;\n    long notes_sum23 = 0;\n    long notes_sum24\
    \ = 0;\n    long notes_sum25 = 0;\n    long notes_sum26 = 0;\n    long notes_sum27\
    \ = 0;\n    long notes_sum28 = 0;\n    long notes_sum29 = 0;\n    long notes_sum30\
    \ = 0;\n    long notes_sum31 = 0;\n    long notes_sum32 = 0;\n    long notes_sum33\
    \ = 0;\n    long notes_sum34 = 0;\n    long notes_sum35 = 0;\n    long notes_sum36\
    \ = 0;\n    long notes_sum37 = 0;\n    long notes_sum38 = 0;\n    long notes_sum39\
    \ = 0;\n    long notes_sum40 = 0;\n    long notes_sum41 = 0;\n    long notes_sum42\
    \ = 0;\n    long notes_sum43 = 0;\n    long notes_sum44 = 0;\n    long notes_sum45\
    \ = 0;\n    long notes_sum46 = 0;\n    long notes_sum47 = 0;\n    long notes_sum48\
    \ = 0;\n    long notes_sum49 = 0;\n    long notes_sum50 = 0;\n    long notes_sum51\
    \ = 0;\n    long notes_sum52 = 0;\n    long notes_sum53 = 0;\n    long notes_sum54\
    \ = 0;\n    long notes_sum55 = 0;\n    long notes_sum56 = 0;\n    long notes_sum57\
    \ = 0;\n    long notes_sum58 = 0;\n    long notes_sum59 = 0;\n    long notes_sum60\
    \ = 0;\n\n}\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\
    \")) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph429xpv5.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmph429xpv5.cpp:15:10: error: conflicting declaration \u2018long int beats\u2019\
    \n   15 |     long beats = 0;\n      |          ^~~~~\n/tmp/tmph429xpv5.cpp:12:23:\
    \ note: previous declaration as \u2018std::vector<long int> beats\u2019\n   12\
    \ |     std::vector<long> beats;\n      |                       ^~~~~\n/tmp/tmph429xpv5.cpp:17:10:\
    \ error: conflicting declaration \u2018long int note\u2019\n   17 |     long note\
    \ = 0;\n      |          ^~~~\n/tmp/tmph429xpv5.cpp:13:17: note: previous declaration\
    \ as \u2018std::string note\u2019\n   13 |     std::string note;\n      |    \
    \             ^~~~\n/tmp/tmph429xpv5.cpp:79:1: warning: no return statement in\
    \ function returning non-void [-Wreturn-type]\n   79 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660129741
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Your code here\n    std::vector<long> beats;\n    std::string note;\n    long\
    \ beat = 0;\n    long beats = 0;\n    long notes = 0;\n    long note = 0;\n  \
    \  long notes_total = 0;\n    long notes_total2 = 0;\n    long notes_total3 =\
    \ 0;\n    long notes_total4 = 0;\n    long notes_total5 = 0;\n    long notes_total6\
    \ = 0;\n    long notes_total7 = 0;\n    long notes_total8 = 0;\n    long notes_total9\
    \ = 0;\n    long notes_total10 = 0;\n    long notes_total11 = 0;\n    long notes_total12\
    \ = 0;\n    long notes_total13 = 0;\n    long notes_total14 = 0;\n    long notes_total15\
    \ = 0;\n    long notes_total16 = 0;\n    long notes_total17 = 0;\n    long notes_total18\
    \ = 0;\n    long notes_total19 = 0;\n    long notes_total20 = 0;\n    long notes_total21\
    \ = 0;\n    long notes_total22 = 0;\n    long notes_total23 = 0;\n    long notes_total24\
    \ = 0;\n    long notes_total25 = 0;\n    long notes_total26 = 0;\n    long notes_total27\
    \ = 0;\n    long notes_total28 = 0;\n    long notes_total29 = 0;\n    long notes_total30\
    \ = 0;\n    long notes_total31 = 0;\n    long notes_total32 = 0;\n    long notes_total33\
    \ = 0;\n    long notes_total34 = 0;\n    long notes_total35 = 0;\n    long notes_total36\
    \ = 0;\n    long notes_total37 = 0;\n    long notes_total38 = 0;\n    long notes_total39\
    \ = 0;\n    long notes_total40 = 0;\n    long notes_total41 = 0;\n    long notes_total42\
    \ = 0;\n    long notes_total43 = 0;\n    long notes_total44 = 0;\n    long notes_total45\
    \ = 0;\n    long notes_total46 = 0;\n    long notes_total47 = 0;\n    long notes_total48\
    \ = 0;\n    long notes_total49 = 0;\n    long notes_total50 = 0;\n    long notes_total51\
    \ = 0;\n    long notes_total52 = 0;\n    long notes_total53 = 0;\n    long notes_total54\
    \ = 0;\n    long notes_total55 = 0;\n    long notes_total56 = 0;\n    long notes_total57\
    \ = 0;\n    long notes_total58 = 0;\n    long notes_total59 = 0;\n    long notes_total60\
    \ = 0;\n\n}\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\
    \")) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjvv7hfa2.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpjvv7hfa2.cpp:15:10: error: conflicting declaration \u2018long int beats\u2019\
    \n   15 |     long beats = 0;\n      |          ^~~~~\n/tmp/tmpjvv7hfa2.cpp:12:23:\
    \ note: previous declaration as \u2018std::vector<long int> beats\u2019\n   12\
    \ |     std::vector<long> beats;\n      |                       ^~~~~\n/tmp/tmpjvv7hfa2.cpp:17:10:\
    \ error: conflicting declaration \u2018long int note\u2019\n   17 |     long note\
    \ = 0;\n      |          ^~~~\n/tmp/tmpjvv7hfa2.cpp:13:17: note: previous declaration\
    \ as \u2018std::string note\u2019\n   13 |     std::string note;\n      |    \
    \             ^~~~\n/tmp/tmpjvv7hfa2.cpp:79:1: warning: no return statement in\
    \ function returning non-void [-Wreturn-type]\n   79 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660129741
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    long beats_counter = 0;\n    long current_beat = 0;\n    long current_note\
    \ = 0;\n    long current_note_length = 0;\n    long current_note_length_in_bits\
    \ = 0;\n    long current_note_length_in_bits_counter = 0;\n    long current_note_length_in_bits_counter_counter\
    \ = 0;\n    long current_note_length_in_bits_counter_counter_counter = 0;\n  \
    \  long current_note_length_in_bits_counter_counter_counter_counter = 0;\n   \
    \ long current_note_length_in_bits_counter_counter_counter_counter_counter = 0;\n\
    \    long current_note_length_in_bits_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long current_note_length_in_bits_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long current_note_length_in_bits_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long current_note_length_in_bits_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long current_note_length_in_bits_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long current_note_length_in_bits_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long current_note_length_in_bits_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long current_note_length_in_bits_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long current_note_length_in_bits_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long current_note_length_in_bits_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long current_note_length_in_bits_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long current_note_length_in_bits_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long current_note_length_in_bits_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long current_note_length_in_bits_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long current_note_length_in_bits_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long current_note_length_in_bits_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long current_note_length_in_bits_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long current_note_length_in_bit\n}\nint main() {\n    auto candidate\
    \ = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n  \
    \  assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4,\
    \ (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpevf8pe6p.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpevf8pe6p.cpp:23:10: error: redeclaration of \u2018long int current_note_length_in_bits_counter_counter_counter_counter_counter_counter\u2019\
    \n   23 |     long current_note_length_in_bits_counter_counter_counter_counter_counter_counter\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpevf8pe6p.cpp:22:10: note: \u2018long int current_note_length_in_bits_counter_counter_counter_counter_counter_counter\u2019\
    \ previously declared here\n   22 |     long current_note_length_in_bits_counter_counter_counter_counter_counter_counter\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpevf8pe6p.cpp:31:10: error: redeclaration of \u2018long int current_note_length_in_bits_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\u2019\
    \n   31 |     long current_note_length_in_bits_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpevf8pe6p.cpp:30:10: note: \u2018long int current_note_length_in_bits_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\u2019\
    \ previously declared here\n   30 |     long current_note_length_in_bits_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpevf8pe6p.cpp:40:1: error: expected initializer before \u2018}\u2019 token\n\
    \   40 | }\n      | ^\n/tmp/tmpevf8pe6p.cpp:40:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129741
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    long last_note = 0;\n    long note_length = 0;\n    long note_length2 = 0;\n\
    \    long note_length3 = 0;\n    long note_length4 = 0;\n    long note_length5\
    \ = 0;\n    long note_length6 = 0;\n    long note_length7 = 0;\n    long note_length8\
    \ = 0;\n    long note_length9 = 0;\n    long note_length10 = 0;\n    long note_length11\
    \ = 0;\n    long note_length12 = 0;\n    long note_length13 = 0;\n    long note_length14\
    \ = 0;\n    long note_length15 = 0;\n    long note_length16 = 0;\n    long note_length17\
    \ = 0;\n    long note_length18 = 0;\n    long note_length19 = 0;\n    long note_length20\
    \ = 0;\n    long note_length21 = 0;\n    long note_length22 = 0;\n    long note_length23\
    \ = 0;\n    long note_length24 = 0;\n    long note_length25 = 0;\n    long note_length26\
    \ = 0;\n    long note_length27 = 0;\n    long note_length28 = 0;\n    long note_length29\
    \ = 0;\n    long note_length30 = 0;\n    long note_length31 = 0;\n    long note_length32\
    \ = 0;\n    long note_length33 = 0;\n    long note_length34 = 0;\n    long note_length35\
    \ = 0;\n    long note_length36 = 0;\n    long note_length37 = 0;\n    long note_length38\
    \ = 0;\n    long note_length39 = 0;\n    long note_length40 = 0;\n    long note_length41\
    \ = 0;\n    long note_length42 = 0;\n    long note_length43 = 0;\n    long note_length44\
    \ = 0;\n    long note_length45 = 0;\n    long note_length46 = 0;\n    long note_length47\
    \ = 0;\n    long note_length48 = 0;\n    long note_length49 = 0;\n    long note_length50\
    \ = 0;\n    long note_length51 = 0;\n    long note_length52 = 0;\n    long note_length53\
    \ = 0;\n    long note_length54 = 0;\n    long note_length55 = 0;\n    long note_length56\
    \ = 0;\n    long note_length57 = 0;\n    long note_length58 = 0;\n    long note_length59\
    \ = 0;\n    long note_length60 = 0;\n    long note_length61 = 0;\n    long note_length62\
    \ = 0;\n    long note_length63 = 0;\n    long note_length64 = 0;\n    long note_length65\
    \ = 0;\n    long note_length66 = 0;\n    long note_length67 = 0;\n    long note_length68\
    \ = 0;\n    long note_length69 = 0;\n    long note_length70\n}\nint main() {\n\
    \    auto candidate = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n\
    \    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4_6sxv0n.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp4_6sxv0n.cpp:86:1: error: expected initializer before \u2018}\u2019\
    \ token\n   86 | }\n      | ^\n/tmp/tmp4_6sxv0n.cpp:86:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129740
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long beats = 0;\n   \
    \ long notes = 0;\n    long note = 0;\n    long note_size = 0;\n    long note_length\
    \ = 0;\n    long note_length2 = 0;\n    long note_length3 = 0;\n    long note_length4\
    \ = 0;\n    long note_length5 = 0;\n    long note_length6 = 0;\n    long note_length7\
    \ = 0;\n    long note_length8 = 0;\n    long note_length9 = 0;\n    long note_length10\
    \ = 0;\n    long note_length11 = 0;\n    long note_length12 = 0;\n    long note_length13\
    \ = 0;\n    long note_length14 = 0;\n    long note_length15 = 0;\n    long note_length16\
    \ = 0;\n    long note_length17 = 0;\n    long note_length18 = 0;\n    long note_length19\
    \ = 0;\n    long note_length20 = 0;\n    long note_length21 = 0;\n    long note_length22\
    \ = 0;\n    long note_length23 = 0;\n    long note_length24 = 0;\n    long note_length25\
    \ = 0;\n    long note_length26 = 0;\n    long note_length27 = 0;\n    long note_length28\
    \ = 0;\n    long note_length29 = 0;\n    long note_length30 = 0;\n    long note_length31\
    \ = 0;\n    long note_length32 = 0;\n    long note_length33 = 0;\n    long note_length34\
    \ = 0;\n    long note_length35 = 0;\n    long note_length36 = 0;\n    long note_length37\
    \ = 0;\n    long note_length38 = 0;\n    long note_length39 = 0;\n    long note_length40\
    \ = 0;\n    long note_length41 = 0;\n    long note_length42 = 0;\n    long note_length43\
    \ = 0;\n    long note_length44 = 0;\n    long note_length45 = 0;\n    long note_length46\
    \ = 0;\n    long note_length47 = 0;\n    long note_length48 = 0;\n    long note_length49\
    \ = 0;\n    long note_length50 = 0;\n    long note_length51 = 0;\n    long note_length52\
    \ = 0;\n    long note_length53 = 0;\n    long note_length54 = 0;\n    long note_length55\
    \ = 0;\n    long note_length56 = 0;\n    long note_length57 = 0;\n    long note_length58\
    \ = 0;\n    long note_length59 = 0;\n    long note_length60 = 0;\n    long note_length61\
    \ = 0;\n    long note_length62 = 0;\n    long note_length63 = 0;\n    long note_length64\
    \ = 0;\n    long note_length65 = 0;\n    long note_length66 = 0;\n    long note_length67\
    \ = 0;\n    long note_length68 = 0;\n    long note_\n}\nint main() {\n    auto\
    \ candidate = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n\
    \    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7939h_ny.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp7939h_ny.cpp:14:10: error: conflicting declaration \u2018long int beats\u2019\
    \n   14 |     long beats = 0;\n      |          ^~~~~\n/tmp/tmp7939h_ny.cpp:11:23:\
    \ note: previous declaration as \u2018std::vector<long int> beats\u2019\n   11\
    \ |     std::vector<long> beats;\n      |                       ^~~~~\n/tmp/tmp7939h_ny.cpp:16:10:\
    \ error: conflicting declaration \u2018long int note\u2019\n   16 |     long note\
    \ = 0;\n      |          ^~~~\n/tmp/tmp7939h_ny.cpp:12:17: note: previous declaration\
    \ as \u2018std::string note\u2019\n   12 |     std::string note;\n      |    \
    \             ^~~~\n/tmp/tmp7939h_ny.cpp:87:1: error: expected initializer before\
    \ \u2018}\u2019 token\n   87 | }\n      | ^\n/tmp/tmp7939h_ny.cpp:87:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129741
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    long last_note = 0;\n    bool is_note = false;\n    for (char c : music_string)\
    \ {\n        if (c == 'o') {\n            if (is_note) {\n                beats.push_back(beat);\n\
    \                beat = 0;\n                last_note = 0;\n                is_note\
    \ = false;\n            }\n        } else if (c == 'o|') {\n            if (is_note)\
    \ {\n                beats.push_back(beat);\n                beat = 0;\n     \
    \           last_note = 0;\n                is_note = false;\n            } else\
    \ {\n                is_note = true;\n            }\n        } else if (c == '.|')\
    \ {\n            if (is_note) {\n                beats.push_back(beat);\n    \
    \            beat = 0;\n                last_note = 0;\n                is_note\
    \ = false;\n            } else {\n                is_note = true;\n          \
    \  }\n        } else {\n            note = c;\n        }\n        if (note !=\
    \ \"\") {\n            beat += 1;\n            last_note = note;\n        }\n\
    \    }\n    beats.push_back(beat);\n    return beats;\n}\nint main() {\n    auto\
    \ candidate = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n\
    \    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjfvfjl2i.cpp:25:25: warning: multi-character character constant\
    \ [-Wmultichar]\n   25 |         } else if (c == 'o|') {\n      |            \
    \             ^~~~\n/tmp/tmpjfvfjl2i.cpp:34:25: warning: multi-character character\
    \ constant [-Wmultichar]\n   34 |         } else if (c == '.|') {\n      |   \
    \                      ^~~~\n/tmp/tmpjfvfjl2i.cpp: In function \u2018std::vector<long\
    \ int> parse_music(std::string)\u2019:\n/tmp/tmpjfvfjl2i.cpp:48:25: error: cannot\
    \ convert \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018long int\u2019 in assignment\n   48 |             last_note = note;\n\
    \      |                         ^~~~\n      |                         |\n   \
    \   |                         std::string {aka std::__cxx11::basic_string<char>}\n"
  stdout: ''
  timestamp: 1660129741
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long beats = 0;\n   \
    \ long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n\
    \    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note =\
    \ 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note\
    \ = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long\
    \ note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n  \
    \  long note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n\
    \    long note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes =\
    \ 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes\
    \ = 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n    long\
    \ notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n  \
    \  long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n\
    \    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note =\
    \ 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note\
    \ = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long\
    \ note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n  \
    \  long note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n\
    \    long note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes =\
    \ 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes\
    \ = 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n    long\
    \ notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n  \
    \  long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n\
    \    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note =\
    \ 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note\
    \ = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long\
    \ note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n  \
    \  long note = 0;\n    long notes = 0;\n    long note = 0;\n\n}\nint main() {\n\
    \    auto candidate = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n\
    \    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsui_xy4v.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpsui_xy4v.cpp:14:10: error: conflicting declaration \u2018long int beats\u2019\
    \n   14 |     long beats = 0;\n      |          ^~~~~\n/tmp/tmpsui_xy4v.cpp:11:23:\
    \ note: previous declaration as \u2018std::vector<long int> beats\u2019\n   11\
    \ |     std::vector<long> beats;\n      |                       ^~~~~\n/tmp/tmpsui_xy4v.cpp:16:10:\
    \ error: conflicting declaration \u2018long int note\u2019\n   16 |     long note\
    \ = 0;\n      |          ^~~~\n/tmp/tmpsui_xy4v.cpp:12:17: note: previous declaration\
    \ as \u2018std::string note\u2019\n   12 |     std::string note;\n      |    \
    \             ^~~~\n/tmp/tmpsui_xy4v.cpp:17:10: error: redeclaration of \u2018\
    long int notes\u2019\n   17 |     long notes = 0;\n      |          ^~~~~\n/tmp/tmpsui_xy4v.cpp:15:10:\
    \ note: \u2018long int notes\u2019 previously declared here\n   15 |     long\
    \ notes = 0;\n      |          ^~~~~\n/tmp/tmpsui_xy4v.cpp:18:10: error: conflicting\
    \ declaration \u2018long int note\u2019\n   18 |     long note = 0;\n      | \
    \         ^~~~\n/tmp/tmpsui_xy4v.cpp:12:17: note: previous declaration as \u2018\
    std::string note\u2019\n   12 |     std::string note;\n      |               \
    \  ^~~~\n/tmp/tmpsui_xy4v.cpp:19:10: error: redeclaration of \u2018long int notes\u2019\
    \n   19 |     long notes = 0;\n      |          ^~~~~\n/tmp/tmpsui_xy4v.cpp:15:10:\
    \ note: \u2018long int notes\u2019 previously declared here\n   15 |     long\
    \ notes = 0;\n      |          ^~~~~\n/tmp/tmpsui_xy4v.cpp:20:10: error: conflicting\
    \ declaration \u2018long int note\u2019\n   20 |     long note = 0;\n      | \
    \         ^~~~\n/tmp/tmpsui_xy4v.cpp:12:17: note: previous declaration as \u2018\
    std::string note\u2019\n   12 |     std::string note;\n      |               \
    \  ^~~~\n/tmp/tmpsui_xy4v.cpp:21:10: error: redeclaration of \u2018long int notes\u2019\
    \n   21 |     long notes = 0;\n      |          ^~~~~\n/tmp/tmpsui_xy4v.cpp:15:10:\
    \ note: \u2018long int notes\u2019 previously declared here\n   15 |     long\
    \ notes = 0;\n      |          ^~~~~\n/tmp/tmpsui_xy4v.cpp:22:10: error: conflicting\
    \ declaration \u2018long int note\u2019\n   22 |     long"
  stdout: ''
  timestamp: 1660129740
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Your code here\n    std::vector<long> beats;\n    long beat = 0;\n    long note\
    \ = 0;\n    long last_note = 0;\n    long last_beat = 0;\n    long last_beat =\
    \ 0;\n    long last_beat = 0;\n    long last_beat = 0;\n    long last_beat = 0;\n\
    \    long last_beat = 0;\n    long last_beat = 0;\n    long last_beat = 0;\n \
    \   long last_beat = 0;\n    long last_beat = 0;\n    long last_beat = 0;\n  \
    \  long last_beat = 0;\n    long last_beat = 0;\n    long last_beat = 0;\n   \
    \ long last_beat = 0;\n    long last_beat = 0;\n    long last_beat = 0;\n    long\
    \ last_beat = 0;\n    long last_beat = 0;\n    long last_beat = 0;\n    long last_beat\
    \ = 0;\n    long last_beat = 0;\n    long last_beat = 0;\n    long last_beat =\
    \ 0;\n    long last_beat = 0;\n    long last_beat = 0;\n    long last_beat = 0;\n\
    \    long last_beat = 0;\n    long last_beat = 0;\n    long last_beat = 0;\n \
    \   long last_beat = 0;\n    long last_beat = 0;\n    long last_beat = 0;\n  \
    \  long last_beat = 0;\n    long last_beat = 0;\n    long last_beat = 0;\n   \
    \ long last_beat = 0;\n    long last_beat = 0;\n    long last_beat = 0;\n    long\
    \ last_beat = 0;\n    long last_beat = 0;\n    long last_beat = 0;\n    long last_beat\
    \ = 0;\n    long last_beat = 0;\n    long last_beat = 0;\n    long last_beat =\
    \ 0;\n    long last_beat = 0;\n    long last_beat = 0;\n    long last_beat = 0;\n\
    \    long last_beat = 0;\n    long last_beat = 0;\n    long last_beat = 0;\n \
    \   long last_beat = 0;\n    long last_beat = 0;\n    long last_beat = 0;\n  \
    \  long last_beat = 0;\n    long last_beat = 0;\n    long last_beat = 0;\n   \
    \ long last_beat = 0;\n    long last_beat = 0;\n    long last_beat = 0;\n    long\
    \ last_beat = 0;\n    long last_beat = 0;\n    long last_beat = 0;\n    long last_beat\
    \ = 0;\n    long last_beat = 0;\n    long last_beat = 0;\n    long last_beat =\
    \ 0;\n    long last_beat = 0;\n    long last_beat = 0;\n    long last_beat = 0;\n\
    \    long last_beat = 0;\n    long last_beat = 0;\n    long last_beat = 0;\n \
    \   long last_beat = 0;\n    long last_beat = 0;\n    long last_beat = 0;\n  \
    \  long last_beat = 0;\n    long last_beat = 0;\n    long last_beat = 0;\n   \
    \ long last_beat\n}\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\
    \")) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphejija2l.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmphejija2l.cpp:17:10: error: redeclaration of \u2018long int last_beat\u2019\
    \n   17 |     long last_beat = 0;\n      |          ^~~~~~~~~\n/tmp/tmphejija2l.cpp:16:10:\
    \ note: \u2018long int last_beat\u2019 previously declared here\n   16 |     long\
    \ last_beat = 0;\n      |          ^~~~~~~~~\n/tmp/tmphejija2l.cpp:18:10: error:\
    \ redeclaration of \u2018long int last_beat\u2019\n   18 |     long last_beat\
    \ = 0;\n      |          ^~~~~~~~~\n/tmp/tmphejija2l.cpp:16:10: note: \u2018long\
    \ int last_beat\u2019 previously declared here\n   16 |     long last_beat = 0;\n\
    \      |          ^~~~~~~~~\n/tmp/tmphejija2l.cpp:19:10: error: redeclaration\
    \ of \u2018long int last_beat\u2019\n   19 |     long last_beat = 0;\n      |\
    \          ^~~~~~~~~\n/tmp/tmphejija2l.cpp:16:10: note: \u2018long int last_beat\u2019\
    \ previously declared here\n   16 |     long last_beat = 0;\n      |         \
    \ ^~~~~~~~~\n/tmp/tmphejija2l.cpp:20:10: error: redeclaration of \u2018long int\
    \ last_beat\u2019\n   20 |     long last_beat = 0;\n      |          ^~~~~~~~~\n\
    /tmp/tmphejija2l.cpp:16:10: note: \u2018long int last_beat\u2019 previously declared\
    \ here\n   16 |     long last_beat = 0;\n      |          ^~~~~~~~~\n/tmp/tmphejija2l.cpp:21:10:\
    \ error: redeclaration of \u2018long int last_beat\u2019\n   21 |     long last_beat\
    \ = 0;\n      |          ^~~~~~~~~\n/tmp/tmphejija2l.cpp:16:10: note: \u2018long\
    \ int last_beat\u2019 previously declared here\n   16 |     long last_beat = 0;\n\
    \      |          ^~~~~~~~~\n/tmp/tmphejija2l.cpp:22:10: error: redeclaration\
    \ of \u2018long int last_beat\u2019\n   22 |     long last_beat = 0;\n      |\
    \          ^~~~~~~~~\n/tmp/tmphejija2l.cpp:16:10: note: \u2018long int last_beat\u2019\
    \ previously declared here\n   16 |     long last_beat = 0;\n      |         \
    \ ^~~~~~~~~\n/tmp/tmphejija2l.cpp:23:10: error: redeclaration of \u2018long int\
    \ last_beat\u2019\n   23 |     long last_beat = 0;\n      |          ^~~~~~~~~\n\
    /tmp/tmphejija2l.cpp:16:10: note: \u2018long int last_beat\u2019 previously declared\
    \ here\n   16 |     long last_beat = 0;\n      |          ^~~~~~~~~\n/tmp/tm"
  stdout: ''
  timestamp: 1660129741
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Your code goes here\n    std::vector<long> beats;\n    std::string note;\n \
    \   long beat = 0;\n    long beats = 0;\n    long notes = 0;\n    long note =\
    \ 0;\n    long notes_last = 0;\n    long notes_last_last = 0;\n    long notes_last_last_last\
    \ = 0;\n    long notes_last_last_last_last = 0;\n    long notes_last_last_last_last_last\
    \ = 0;\n    long notes_last_last_last_last_last_last = 0;\n    long notes_last_last_last_last_last_last_last\
    \ = 0;\n    long notes_last_last_last_last_last_last_last_last = 0;\n    long\
    \ notes_last_last_last_last_last_last_last_last_last = 0;\n    long notes_last_last_last_last_last_last_last_last_last_last\
    \ = 0;\n    long notes_last_last_last_last_last_last_last_last_last_last = 0;\n\
    \    long notes_last_last_last_last_last_last_last_last_last_last_last = 0;\n\
    \    long notes_last_last_last_last_last_last_last_last_last_last_last = 0;\n\
    \    long notes_last_last_last_last_last_last_last_last_last_last_last = 0;\n\
    \    long notes_last_last_last_last_last_last_last_last_last_last_last_last =\
    \ 0;\n    long notes_last_last_last_last_last_last_last_last_last_last_last_last\
    \ = 0;\n    long notes_last_last_last_last_last_last_last_last_last_last_last_last_last\
    \ = 0;\n    long notes_last_last_last_last_last_last_last_last_last_last_last_last_last\
    \ = 0;\n    long notes_last_last_last_last_last_last_last_last_last_last_last_last_last\
    \ = 0;\n    long notes_last_last_last_last_last_last_last_last_last_last_last_last_last_last\
    \ = 0;\n    long notes_last_last_last_last_last_last_last_last_last_last_last_last_last_last\
    \ = 0;\n    long notes_last_last_last_last_last_last_last_last_last_last_last_last_last_last\
    \ = 0;\n    long notes_last_last_last_last_last_last_last_last_last_last_last_last_last_last\
    \ = 0;\n    long notes_last_last_last_last_last_last_last_last_last_last_last_last_last_last\
    \ = 0;\n    long notes_last_last_last_last_last_last_last_last_last_last_last_last_last_last\
    \ = 0;\n    long notes_last_last_last_last_last_last_last_last_last_last_last_last_last_last\
    \ = 0;\n    long notes_last_last_last_last_last_last_last_last_last_last_last_last_last_last_last\
    \ = 0;\n    long notes_last_last_last_last_last_last_last_last_last_last_last_last_last_last_last\
    \ = 0;\n    long notes_last_last_last_last_last_last_last_last_last_last_last_last_last_\n\
    }\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"\
    )) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo7a3qfvg.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpo7a3qfvg.cpp:15:10: error: conflicting declaration \u2018long int beats\u2019\
    \n   15 |     long beats = 0;\n      |          ^~~~~\n/tmp/tmpo7a3qfvg.cpp:12:23:\
    \ note: previous declaration as \u2018std::vector<long int> beats\u2019\n   12\
    \ |     std::vector<long> beats;\n      |                       ^~~~~\n/tmp/tmpo7a3qfvg.cpp:17:10:\
    \ error: conflicting declaration \u2018long int note\u2019\n   17 |     long note\
    \ = 0;\n      |          ^~~~\n/tmp/tmpo7a3qfvg.cpp:13:17: note: previous declaration\
    \ as \u2018std::string note\u2019\n   13 |     std::string note;\n      |    \
    \             ^~~~\n/tmp/tmpo7a3qfvg.cpp:28:10: error: redeclaration of \u2018\
    long int notes_last_last_last_last_last_last_last_last_last_last\u2019\n   28\
    \ |     long notes_last_last_last_last_last_last_last_last_last_last = 0;\n  \
    \    |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpo7a3qfvg.cpp:27:10:\
    \ note: \u2018long int notes_last_last_last_last_last_last_last_last_last_last\u2019\
    \ previously declared here\n   27 |     long notes_last_last_last_last_last_last_last_last_last_last\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpo7a3qfvg.cpp:30:10: error: redeclaration of \u2018long int notes_last_last_last_last_last_last_last_last_last_last_last\u2019\
    \n   30 |     long notes_last_last_last_last_last_last_last_last_last_last_last\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpo7a3qfvg.cpp:29:10: note: \u2018long int notes_last_last_last_last_last_last_last_last_last_last_last\u2019\
    \ previously declared here\n   29 |     long notes_last_last_last_last_last_last_last_last_last_last_last\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpo7a3qfvg.cpp:31:10: error: redeclaration of \u2018long int notes_last_last_last_last_last_last_last_last_last_last_last\u2019\
    \n   31 |     long notes_last_last_last_last_last_last_last_last_last_last_last\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~"
  stdout: ''
  timestamp: 1660129742
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    long last_note = 0;\n    long last_note_beat = 0;\n    long last_note_beat2\
    \ = 0;\n    long last_note_beat3 = 0;\n    long last_note_beat4 = 0;\n    long\
    \ last_note_beat5 = 0;\n    long last_note_beat6 = 0;\n    long last_note_beat7\
    \ = 0;\n    long last_note_beat8 = 0;\n    long last_note_beat9 = 0;\n    long\
    \ last_note_beat10 = 0;\n    long last_note_beat11 = 0;\n    long last_note_beat12\
    \ = 0;\n    long last_note_beat13 = 0;\n    long last_note_beat14 = 0;\n    long\
    \ last_note_beat15 = 0;\n    long last_note_beat16 = 0;\n    long last_note_beat17\
    \ = 0;\n    long last_note_beat18 = 0;\n    long last_note_beat19 = 0;\n    long\
    \ last_note_beat20 = 0;\n    long last_note_beat21 = 0;\n    long last_note_beat22\
    \ = 0;\n    long last_note_beat23 = 0;\n    long last_note_beat24 = 0;\n    long\
    \ last_note_beat25 = 0;\n    long last_note_beat26 = 0;\n    long last_note_beat27\
    \ = 0;\n    long last_note_beat28 = 0;\n    long last_note_beat29 = 0;\n    long\
    \ last_note_beat30 = 0;\n    long last_note_beat31 = 0;\n    long last_note_beat32\
    \ = 0;\n    long last_note_beat33 = 0;\n    long last_note_beat34 = 0;\n    long\
    \ last_note_beat35 = 0;\n    long last_note_beat36 = 0;\n    long last_note_beat37\
    \ = 0;\n    long last_note_beat38 = 0;\n    long last_note_beat39 = 0;\n    long\
    \ last_note_beat40 = 0;\n    long last_note_beat41 = 0;\n    long last_note_beat42\
    \ = 0;\n    long last_note_beat43 = 0;\n    long last_note_beat44 = 0;\n    long\
    \ last_note_beat45 = 0;\n    long last_note_beat46 = 0;\n    long last_note_beat47\
    \ = 0;\n    long last_note_beat48 = 0;\n    long last_note_beat49 = 0;\n    long\
    \ last_note_beat50 = 0;\n    long last_note_beat51 = 0;\n    long last_note_beat52\
    \ = 0;\n    long last_note_beat53 = 0;\n    long last_note_beat54 = 0;\n    long\
    \ last_note_beat55 = 0;\n    long last_note_beat56 = 0;\n    long last_note_beat57\
    \ = 0;\n    long last_note_beat58 = 0;\n    long last_note_beat59 = 0;\n    long\
    \ last_note_beat60 = 0;\n    long last_note_beat61 = 0;\n\n}\nint main() {\n \
    \   auto candidate = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n\
    \    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: Exception
  stderr: 'tmpjtex3ykw: /tmp/tmpjtex3ykw.cpp:81: int main(): Assertion `candidate((""))
    == (std::vector<long>())'' failed.

    '
  stdout: ''
  timestamp: 1660129743
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Write your code here\n    std::vector<long> beats;\n    std::string note;\n\
    \    long beat = 0;\n    long note_count = 0;\n    for (char c : music_string)\
    \ {\n        if (c == 'o') {\n            note = note_count;\n            beat\
    \ = 0;\n            note_count = 0;\n            beats.push_back(beat);\n    \
    \    } else if (c == 'o|') {\n            note = note_count / 2;\n           \
    \ beat = 0;\n            note_count = 0;\n            beats.push_back(beat);\n\
    \        } else if (c == '.|') {\n            note = note_count * 4;\n       \
    \     beat = 0;\n            note_count = 0;\n            beats.push_back(beat);\n\
    \        } else {\n            note_count += 1;\n        }\n        beat += 1;\n\
    \    }\n    return beats;\n}\nint main() {\n    auto candidate = parse_music;\n\
    \    assert(candidate((\"\")) == (std::vector<long>()));\n    assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \   assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1, (long)1,\
    \ (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\")) == (std::vector<long>({(long)2,\
    \ (long)2, (long)1, (long)1, (long)4, (long)4, (long)4, (long)4})));\n    assert(candidate((\"\
    o| .| o| .| o o| o o|\")) == (std::vector<long>({(long)2, (long)1, (long)2, (long)1,\
    \ (long)4, (long)2, (long)4, (long)2})));\n}\n"
  status: Exception
  stderr: 'tmp7avalrk1: /tmp/tmp7avalrk1.cpp:42: int main(): Assertion `candidate(("o
    o o o")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4}))'' failed.

    '
  stdout: ''
  timestamp: 1660129743
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    long last_note = 0;\n    long last_note_beat = 0;\n    long note_duration\
    \ = 0;\n    long note_duration2 = 0;\n    long note_duration3 = 0;\n    long note_duration4\
    \ = 0;\n    long note_duration5 = 0;\n    long note_duration6 = 0;\n    long note_duration7\
    \ = 0;\n    long note_duration8 = 0;\n    long note_duration9 = 0;\n    long note_duration10\
    \ = 0;\n    long note_duration11 = 0;\n    long note_duration12 = 0;\n    long\
    \ note_duration13 = 0;\n    long note_duration14 = 0;\n    long note_duration15\
    \ = 0;\n    long note_duration16 = 0;\n    long note_duration17 = 0;\n    long\
    \ note_duration18 = 0;\n    long note_duration19 = 0;\n    long note_duration20\
    \ = 0;\n    long note_duration21 = 0;\n    long note_duration22 = 0;\n    long\
    \ note_duration23 = 0;\n    long note_duration24 = 0;\n    long note_duration25\
    \ = 0;\n    long note_duration26 = 0;\n    long note_duration27 = 0;\n    long\
    \ note_duration28 = 0;\n    long note_duration29 = 0;\n    long note_duration30\
    \ = 0;\n    long note_duration31 = 0;\n    long note_duration32 = 0;\n    long\
    \ note_duration33 = 0;\n    long note_duration34 = 0;\n    long note_duration35\
    \ = 0;\n    long note_duration36 = 0;\n    long note_duration37 = 0;\n    long\
    \ note_duration38 = 0;\n    long note_duration39 = 0;\n    long note_duration40\
    \ = 0;\n    long note_duration41 = 0;\n    long note_duration42 = 0;\n    long\
    \ note_duration43 = 0;\n    long note_duration44 = 0;\n    long note_duration45\
    \ = 0;\n    long note_duration46 = 0;\n    long note_duration47 = 0;\n    long\
    \ note_duration48 = 0;\n    long note_duration49 = 0;\n    long note_duration50\
    \ = 0;\n    long note_duration51 = 0;\n    long note_duration52 = 0;\n    long\
    \ note_duration53 = 0;\n    long note_duration54 = 0;\n    long note_duration55\
    \ = 0;\n    long note_duration56 = 0;\n    long note_duration57 = 0;\n    long\
    \ note_duration58 = 0;\n    long note_duration59 = 0;\n    long note_duration60\
    \ = 0;\n    long note_duration61 = 0;\n    long note_duration62 = 0;\n    long\
    \ note_duration63 = 0;\n    long note_duration64 = 0;\n    long note_duration65\
    \ = 0;\n    long note_duration66 = 0;\n    long note_duration67 = 0;\n    long\
    \ note_duration68 = 0;\n    long note_duration69\n}\nint main() {\n    auto candidate\
    \ = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n  \
    \  assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4,\
    \ (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6axpnjdf.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp6axpnjdf.cpp:86:1: error: expected initializer before \u2018}\u2019\
    \ token\n   86 | }\n      | ^\n/tmp/tmp6axpnjdf.cpp:86:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129740
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    long last_note = 0;\n    long last_note_beat = 0;\n    long note_length =\
    \ 0;\n    long note_length2 = 0;\n    long note_length3 = 0;\n    long note_length4\
    \ = 0;\n    long note_length5 = 0;\n    long note_length6 = 0;\n    long note_length7\
    \ = 0;\n    long note_length8 = 0;\n    long note_length9 = 0;\n    long note_length10\
    \ = 0;\n    long note_length11 = 0;\n    long note_length12 = 0;\n    long note_length13\
    \ = 0;\n    long note_length14 = 0;\n    long note_length15 = 0;\n    long note_length16\
    \ = 0;\n    long note_length17 = 0;\n    long note_length18 = 0;\n    long note_length19\
    \ = 0;\n    long note_length20 = 0;\n    long note_length21 = 0;\n    long note_length22\
    \ = 0;\n    long note_length23 = 0;\n    long note_length24 = 0;\n    long note_length25\
    \ = 0;\n    long note_length26 = 0;\n    long note_length27 = 0;\n    long note_length28\
    \ = 0;\n    long note_length29 = 0;\n    long note_length30 = 0;\n    long note_length31\
    \ = 0;\n    long note_length32 = 0;\n    long note_length33 = 0;\n    long note_length34\
    \ = 0;\n    long note_length35 = 0;\n    long note_length36 = 0;\n    long note_length37\
    \ = 0;\n    long note_length38 = 0;\n    long note_length39 = 0;\n    long note_length40\
    \ = 0;\n    long note_length41 = 0;\n    long note_length42 = 0;\n    long note_length43\
    \ = 0;\n    long note_length44 = 0;\n    long note_length45 = 0;\n    long note_length46\
    \ = 0;\n    long note_length47 = 0;\n    long note_length48 = 0;\n    long note_length49\
    \ = 0;\n    long note_length50 = 0;\n    long note_length51 = 0;\n    long note_length52\
    \ = 0;\n    long note_length53 = 0;\n    long note_length54 = 0;\n    long note_length55\
    \ = 0;\n    long note_length56 = 0;\n    long note_length57 = 0;\n    long note_length58\
    \ = 0;\n    long note_length59 = 0;\n    long note_length60 = 0;\n    long note_length61\
    \ = 0;\n    long note_length62 = 0;\n    long note_length63 = 0;\n    long note_length64\
    \ = 0;\n    long note_length65 = 0;\n    long note_length66 = 0;\n    long note_length67\
    \ = 0;\n    long note_length68 = 0;\n    long note_length69\n}\nint main() {\n\
    \    auto candidate = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n\
    \    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp15oe946b.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp15oe946b.cpp:86:1: error: expected initializer before \u2018}\u2019\
    \ token\n   86 | }\n      | ^\n/tmp/tmp15oe946b.cpp:86:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Your code here\n    std::vector<long> beats;\n    std::string temp;\n    long\
    \ temp2;\n    long temp3;\n    long temp4;\n    long temp5;\n    long temp6;\n\
    \    long temp7;\n    long temp8;\n    long temp9;\n    long temp10;\n    long\
    \ temp11;\n    long temp12;\n    long temp13;\n    long temp14;\n    long temp15;\n\
    \    long temp16;\n    long temp17;\n    long temp18;\n    long temp19;\n    long\
    \ temp20;\n    long temp21;\n    long temp22;\n    long temp23;\n    long temp24;\n\
    \    long temp25;\n    long temp26;\n    long temp27;\n    long temp28;\n    long\
    \ temp29;\n    long temp30;\n    long temp31;\n    long temp32;\n    long temp33;\n\
    \    long temp34;\n    long temp35;\n    long temp36;\n    long temp37;\n    long\
    \ temp38;\n    long temp39;\n    long temp40;\n    long temp41;\n    long temp42;\n\
    \    long temp43;\n    long temp44;\n    long temp45;\n    long temp46;\n    long\
    \ temp47;\n    long temp48;\n    long temp49;\n    long temp50;\n    long temp51;\n\
    \    long temp52;\n    long temp53;\n    long temp54;\n    long temp55;\n    long\
    \ temp56;\n    long temp57;\n    long temp58;\n    long temp59;\n    long temp60;\n\
    \    long temp61;\n    long temp62;\n    long temp63;\n    long temp64;\n    long\
    \ temp65;\n    long temp66;\n    long temp67;\n    long temp68;\n    long temp69;\n\
    \    long temp70;\n    long temp71;\n    long temp72;\n    long temp73;\n    long\
    \ temp74;\n    long temp75;\n    long temp76;\n    long temp77;\n    long temp78;\n\
    \    long temp79;\n    long temp80;\n    long temp81;\n    long temp82;\n    long\
    \ temp83;\n    long temp84;\n    long temp85;\n    long temp86;\n    long temp87\n\
    }\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"\
    )) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpe1_ht9b3.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpe1_ht9b3.cpp:100:1: error: expected initializer before \u2018}\u2019\
    \ token\n  100 | }\n      | ^\n/tmp/tmpe1_ht9b3.cpp:100:1: warning: no return\
    \ statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129742
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long beats = 0;\n   \
    \ long notes = 0;\n    long note = 0;\n    long notes_length = 0;\n    long note_length\
    \ = 0;\n    long note_length2 = 0;\n    long note_length3 = 0;\n    long note_length4\
    \ = 0;\n    long note_length5 = 0;\n    long note_length6 = 0;\n    long note_length7\
    \ = 0;\n    long note_length8 = 0;\n    long note_length9 = 0;\n    long note_length10\
    \ = 0;\n    long note_length11 = 0;\n    long note_length12 = 0;\n    long note_length13\
    \ = 0;\n    long note_length14 = 0;\n    long note_length15 = 0;\n    long note_length16\
    \ = 0;\n    long note_length17 = 0;\n    long note_length18 = 0;\n    long note_length19\
    \ = 0;\n    long note_length20 = 0;\n    long note_length21 = 0;\n    long note_length22\
    \ = 0;\n    long note_length23 = 0;\n    long note_length24 = 0;\n    long note_length25\
    \ = 0;\n    long note_length26 = 0;\n    long note_length27 = 0;\n    long note_length28\
    \ = 0;\n    long note_length29 = 0;\n    long note_length30 = 0;\n    long note_length31\
    \ = 0;\n    long note_length32 = 0;\n    long note_length33 = 0;\n    long note_length34\
    \ = 0;\n    long note_length35 = 0;\n    long note_length36 = 0;\n    long note_length37\
    \ = 0;\n    long note_length38 = 0;\n    long note_length39 = 0;\n    long note_length40\
    \ = 0;\n    long note_length41 = 0;\n    long note_length42 = 0;\n    long note_length43\
    \ = 0;\n    long note_length44 = 0;\n    long note_length45 = 0;\n    long note_length46\
    \ = 0;\n    long note_length47 = 0;\n    long note_length48 = 0;\n    long note_length49\
    \ = 0;\n    long note_length50 = 0;\n    long note_length51 = 0;\n    long note_length52\
    \ = 0;\n    long note_length53 = 0;\n    long note_length54 = 0;\n    long note_length55\
    \ = 0;\n    long note_length56 = 0;\n    long note_length57 = 0;\n    long note_length58\
    \ = 0;\n    long note_length59 = 0;\n    long note_length60 = 0;\n    long note_length61\
    \ = 0;\n    long note_length62 = 0;\n    long note_length63 = 0;\n    long note_length64\
    \ = 0;\n    long note_length65 = 0;\n    long note_length66 = 0;\n    long note_length67\
    \ = 0;\n    long note_length68 = 0;\n    long \n}\nint main() {\n    auto candidate\
    \ = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n  \
    \  assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4,\
    \ (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpewfmox6p.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpewfmox6p.cpp:14:10: error: conflicting declaration \u2018long int beats\u2019\
    \n   14 |     long beats = 0;\n      |          ^~~~~\n/tmp/tmpewfmox6p.cpp:11:23:\
    \ note: previous declaration as \u2018std::vector<long int> beats\u2019\n   11\
    \ |     std::vector<long> beats;\n      |                       ^~~~~\n/tmp/tmpewfmox6p.cpp:16:10:\
    \ error: conflicting declaration \u2018long int note\u2019\n   16 |     long note\
    \ = 0;\n      |          ^~~~\n/tmp/tmpewfmox6p.cpp:12:17: note: previous declaration\
    \ as \u2018std::string note\u2019\n   12 |     std::string note;\n      |    \
    \             ^~~~\n/tmp/tmpewfmox6p.cpp:87:1: error: expected unqualified-id\
    \ before \u2018}\u2019 token\n   87 | }\n      | ^\n/tmp/tmpewfmox6p.cpp:87:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129737
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long rest = 0;\n    bool\
    \ is_rest = false;\n    for (auto c : music_string) {\n        if (c == '.') {\n\
    \            note = note.substr(0, note.size() - 1);\n            beats.push_back(beat);\n\
    \            beat = 0;\n            is_rest = false;\n        } else if (c ==\
    \ '|') {\n            note = note.substr(0, note.size() - 1);\n            beats.push_back(beat);\n\
    \            beat = 0;\n            is_rest = true;\n        } else if (c == 'o')\
    \ {\n            note = note.substr(0, note.size() - 1);\n            beats.push_back(beat);\n\
    \            beat = 0;\n            is_rest = false;\n        } else if (c ==\
    \ 'o|') {\n            note = note.substr(0, note.size() - 1);\n            beats.push_back(beat);\n\
    \            beat = 0;\n            is_rest = true;\n        } else if (c == '#')\
    \ {\n            rest = rest * 10 + c - '0';\n        } else {\n            beat\
    \ = beat * 10 + c - '0';\n        }\n    }\n    beats.push_back(beat);\n    beats.push_back(rest);\n\
    \    return beats;\n}\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\
    \")) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: Exception
  stderr: 'tmpfggpfa8n: /tmp/tmpfggpfa8n.cpp:49: int main(): Assertion `candidate((""))
    == (std::vector<long>())'' failed.

    '
  stdout: ''
  timestamp: 1660129744
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long beats = 0;\n   \
    \ long notes = 0;\n    long note = 0;\n    long note_value = 0;\n    long note_values\
    \ = 0;\n    long note_length = 0;\n    long note_lengths = 0;\n    long note_length\
    \ = 0;\n    long note_lengths = 0;\n    long note_length = 0;\n    long note_lengths\
    \ = 0;\n    long note_length = 0;\n    long note_lengths = 0;\n    long note_length\
    \ = 0;\n    long note_lengths = 0;\n    long note_length = 0;\n    long note_lengths\
    \ = 0;\n    long note_length = 0;\n    long note_lengths = 0;\n    long note_length\
    \ = 0;\n    long note_lengths = 0;\n    long note_length = 0;\n    long note_lengths\
    \ = 0;\n    long note_length = 0;\n    long note_lengths = 0;\n    long note_length\
    \ = 0;\n    long note_lengths = 0;\n    long note_length = 0;\n    long note_lengths\
    \ = 0;\n    long note_length = 0;\n    long note_lengths = 0;\n    long note_length\
    \ = 0;\n    long note_lengths = 0;\n    long note_length = 0;\n    long note_lengths\
    \ = 0;\n    long note_length = 0;\n    long note_lengths = 0;\n    long note_length\
    \ = 0;\n    long note_lengths = 0;\n    long note_length = 0;\n    long note_lengths\
    \ = 0;\n    long note_length = 0;\n    long note_lengths = 0;\n    long note_length\
    \ = 0;\n    long note_lengths = 0;\n    long note_length = 0;\n    long note_lengths\
    \ = 0;\n    long note_length = 0;\n    long note_lengths = 0;\n    long note_length\
    \ = 0;\n    long note_lengths = 0;\n    long note_length = 0;\n    long note_lengths\
    \ = 0;\n    long note_length = 0;\n    long note_lengths = 0;\n    long note_length\
    \ = 0;\n    long note_lengths = 0;\n    long note_length = 0;\n    long note_lengths\
    \ = 0;\n    long note_length = 0;\n    long note_lengths = 0;\n    long note_length\
    \ = 0;\n    long note_lengths = 0;\n    long note_length = 0;\n    long note_lengths\
    \ = 0;\n    long note_length = 0;\n    long note_lengths = 0;\n    long note_length\
    \ = 0;\n    long note_lengths = 0;\n    long note_length = 0;\n    long note_lengths\
    \ = 0;\n    long note_length = 0;\n    long note_lengths = 0;\n    long note_length\
    \ = 0;\n    long note_lengths = 0;\n    long note_length = 0;\n    long note_lengths\
    \ = 0;\n    long note_length = 0;\n    long note_lengths = 0;\n    long note_length\
    \ = 0;\n    long note_lengths = 0;\n    long note_length = 0;\n    long note_lengths\
    \ = 0;\n\n}\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\
    \")) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplovgnqtl.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmplovgnqtl.cpp:14:10: error: conflicting declaration \u2018long int beats\u2019\
    \n   14 |     long beats = 0;\n      |          ^~~~~\n/tmp/tmplovgnqtl.cpp:11:23:\
    \ note: previous declaration as \u2018std::vector<long int> beats\u2019\n   11\
    \ |     std::vector<long> beats;\n      |                       ^~~~~\n/tmp/tmplovgnqtl.cpp:16:10:\
    \ error: conflicting declaration \u2018long int note\u2019\n   16 |     long note\
    \ = 0;\n      |          ^~~~\n/tmp/tmplovgnqtl.cpp:12:17: note: previous declaration\
    \ as \u2018std::string note\u2019\n   12 |     std::string note;\n      |    \
    \             ^~~~\n/tmp/tmplovgnqtl.cpp:21:10: error: redeclaration of \u2018\
    long int note_length\u2019\n   21 |     long note_length = 0;\n      |       \
    \   ^~~~~~~~~~~\n/tmp/tmplovgnqtl.cpp:19:10: note: \u2018long int note_length\u2019\
    \ previously declared here\n   19 |     long note_length = 0;\n      |       \
    \   ^~~~~~~~~~~\n/tmp/tmplovgnqtl.cpp:22:10: error: redeclaration of \u2018long\
    \ int note_lengths\u2019\n   22 |     long note_lengths = 0;\n      |        \
    \  ^~~~~~~~~~~~\n/tmp/tmplovgnqtl.cpp:20:10: note: \u2018long int note_lengths\u2019\
    \ previously declared here\n   20 |     long note_lengths = 0;\n      |      \
    \    ^~~~~~~~~~~~\n/tmp/tmplovgnqtl.cpp:23:10: error: redeclaration of \u2018\
    long int note_length\u2019\n   23 |     long note_length = 0;\n      |       \
    \   ^~~~~~~~~~~\n/tmp/tmplovgnqtl.cpp:19:10: note: \u2018long int note_length\u2019\
    \ previously declared here\n   19 |     long note_length = 0;\n      |       \
    \   ^~~~~~~~~~~\n/tmp/tmplovgnqtl.cpp:24:10: error: redeclaration of \u2018long\
    \ int note_lengths\u2019\n   24 |     long note_lengths = 0;\n      |        \
    \  ^~~~~~~~~~~~\n/tmp/tmplovgnqtl.cpp:20:10: note: \u2018long int note_lengths\u2019\
    \ previously declared here\n   20 |     long note_lengths = 0;\n      |      \
    \    ^~~~~~~~~~~~\n/tmp/tmplovgnqtl.cpp:25:10: error: redeclaration of \u2018\
    long int note_length\u2019\n   25 |     long note_length = 0;\n      |       \
    \   ^~~~~~~~~~~\n/tmp/tmplovgnqtl.cpp:19:10: note: \u2018long int note_length\u2019\
    \ previously declar"
  stdout: ''
  timestamp: 1660129742
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Your code goes here\n    std::vector<long> beats;\n    long temp;\n    long\
    \ beats_counter = 0;\n    long last_beat = 0;\n    long last_note = 0;\n    long\
    \ last_note_counter = 0;\n    long last_note_counter2 = 0;\n    long last_note_counter3\
    \ = 0;\n    long last_note_counter4 = 0;\n    long last_note_counter5 = 0;\n \
    \   long last_note_counter6 = 0;\n    long last_note_counter7 = 0;\n    long last_note_counter8\
    \ = 0;\n    long last_note_counter9 = 0;\n    long last_note_counter10 = 0;\n\
    \    long last_note_counter11 = 0;\n    long last_note_counter12 = 0;\n    long\
    \ last_note_counter13 = 0;\n    long last_note_counter14 = 0;\n    long last_note_counter15\
    \ = 0;\n    long last_note_counter16 = 0;\n    long last_note_counter17 = 0;\n\
    \    long last_note_counter18 = 0;\n    long last_note_counter19 = 0;\n    long\
    \ last_note_counter20 = 0;\n    long last_note_counter21 = 0;\n    long last_note_counter22\
    \ = 0;\n    long last_note_counter23 = 0;\n    long last_note_counter24 = 0;\n\
    \    long last_note_counter25 = 0;\n    long last_note_counter26 = 0;\n    long\
    \ last_note_counter27 = 0;\n    long last_note_counter28 = 0;\n    long last_note_counter29\
    \ = 0;\n    long last_note_counter30 = 0;\n    long last_note_counter31 = 0;\n\
    \    long last_note_counter32 = 0;\n    long last_note_counter33 = 0;\n    long\
    \ last_note_counter34 = 0;\n    long last_note_counter35 = 0;\n    long last_note_counter36\
    \ = 0;\n    long last_note_counter37 = 0;\n    long last_note_counter38 = 0;\n\
    \    long last_note_counter39 = 0;\n    long last_note_counter40 = 0;\n    long\
    \ last_note_counter41 = 0;\n    long last_note_counter42 = 0;\n    long last_note_counter43\
    \ = 0;\n    long last_note_counter44 = 0;\n    long last_note_counter45 = 0;\n\
    \    long last_note_counter46 = 0;\n    long last_note_counter47 = 0;\n    long\
    \ last_note_counter48 = 0;\n    long last_note_counter49 = 0;\n    long last_note_counter50\
    \ = 0;\n    long last_note_counter51 = 0;\n    long last_note_counter52 = 0;\n\
    \    long last_note_counter53 = 0;\n    long last_note_counter54 = 0;\n    long\
    \ last_note_counter55 = 0;\n    long last_note_counter56 = 0;\n    long last_note_counter57\
    \ = 0;\n    long last_note_counter58 = 0;\n    long last_note_counter59 = 0;\n\
    \    long last_note_counter60 = 0;\n\n}\nint main() {\n    auto candidate = parse_music;\n\
    \    assert(candidate((\"\")) == (std::vector<long>()));\n    assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \   assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1, (long)1,\
    \ (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\")) == (std::vector<long>({(long)2,\
    \ (long)2, (long)1, (long)1, (long)4, (long)4, (long)4, (long)4})));\n    assert(candidate((\"\
    o| .| o| .| o o| o o|\")) == (std::vector<long>({(long)2, (long)1, (long)2, (long)1,\
    \ (long)4, (long)2, (long)4, (long)2})));\n}\n"
  status: Exception
  stderr: 'tmpz85to4ik: /tmp/tmpz85to4ik.cpp:81: int main(): Assertion `candidate((""))
    == (std::vector<long>())'' failed.

    '
  stdout: ''
  timestamp: 1660129743
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long current_beat = 0;\n\
    \    long current_note = 0;\n    long current_note_length = 0;\n    long current_note_length2\
    \ = 0;\n    long current_note_length3 = 0;\n    long current_note_length4 = 0;\n\
    \    long current_note_length5 = 0;\n    long current_note_length6 = 0;\n    long\
    \ current_note_length7 = 0;\n    long current_note_length8 = 0;\n    long current_note_length9\
    \ = 0;\n    long current_note_length10 = 0;\n    long current_note_length11 =\
    \ 0;\n    long current_note_length12 = 0;\n    long current_note_length13 = 0;\n\
    \    long current_note_length14 = 0;\n    long current_note_length15 = 0;\n  \
    \  long current_note_length16 = 0;\n    long current_note_length17 = 0;\n    long\
    \ current_note_length18 = 0;\n    long current_note_length19 = 0;\n    long current_note_length20\
    \ = 0;\n    long current_note_length21 = 0;\n    long current_note_length22 =\
    \ 0;\n    long current_note_length23 = 0;\n    long current_note_length24 = 0;\n\
    \    long current_note_length25 = 0;\n    long current_note_length26 = 0;\n  \
    \  long current_note_length27 = 0;\n    long current_note_length28 = 0;\n    long\
    \ current_note_length29 = 0;\n    long current_note_length30 = 0;\n    long current_note_length31\
    \ = 0;\n    long current_note_length32 = 0;\n    long current_note_length33 =\
    \ 0;\n    long current_note_length34 = 0;\n    long current_note_length35 = 0;\n\
    \    long current_note_length36 = 0;\n    long current_note_length37 = 0;\n  \
    \  long current_note_length38 = 0;\n    long current_note_length39 = 0;\n    long\
    \ current_note_length40 = 0;\n    long current_note_length41 = 0;\n    long current_note_length42\
    \ = 0;\n    long current_note_length43 = 0;\n    long current_note_length44 =\
    \ 0;\n    long current_note_length45 = 0;\n    long current_note_length46 = 0;\n\
    \    long current_note_length47 = 0;\n    long current_note_length48 = 0;\n  \
    \  long current_note_length49 = 0;\n    long current_note_length50 = 0;\n    long\
    \ current_note_length51 = 0;\n    long current_note_length52 = 0;\n    long current_note_length53\
    \ = 0;\n    long current_note_length54 = 0;\n    long current_note_length55 =\
    \ 0;\n    long current_note_length56 = 0;\n    long current_note_length57 = 0;\n\
    \    long current_note_length58 = 0;\n    long current_note_length59 = 0;\n  \
    \  long current_note_length60 = 0;\n    long current_note_length61 = 0;\n\n}\n\
    int main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"))\
    \ == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: Exception
  stderr: 'tmpt3bebbui: /tmp/tmpt3bebbui.cpp:81: int main(): Assertion `candidate((""))
    == (std::vector<long>())'' failed.

    '
  stdout: ''
  timestamp: 1660129738
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    long last_note = 0;\n    long note_count = 0;\n    long note_length = 0;\n\
    \    long note_length_count = 0;\n    long note_length_index = 0;\n    long note_length_index2\
    \ = 0;\n    long note_length_index3 = 0;\n    long note_length_index4 = 0;\n \
    \   long note_length_index5 = 0;\n    long note_length_index6 = 0;\n    long note_length_index7\
    \ = 0;\n    long note_length_index8 = 0;\n    long note_length_index9 = 0;\n \
    \   long note_length_index10 = 0;\n    long note_length_index11 = 0;\n    long\
    \ note_length_index12 = 0;\n    long note_length_index13 = 0;\n    long note_length_index14\
    \ = 0;\n    long note_length_index15 = 0;\n    long note_length_index16 = 0;\n\
    \    long note_length_index17 = 0;\n    long note_length_index18 = 0;\n    long\
    \ note_length_index19 = 0;\n    long note_length_index20 = 0;\n    long note_length_index21\
    \ = 0;\n    long note_length_index22 = 0;\n    long note_length_index23 = 0;\n\
    \    long note_length_index24 = 0;\n    long note_length_index25 = 0;\n    long\
    \ note_length_index26 = 0;\n    long note_length_index27 = 0;\n    long note_length_index28\
    \ = 0;\n    long note_length_index29 = 0;\n    long note_length_index30 = 0;\n\
    \    long note_length_index31 = 0;\n    long note_length_index32 = 0;\n    long\
    \ note_length_index33 = 0;\n    long note_length_index34 = 0;\n    long note_length_index35\
    \ = 0;\n    long note_length_index36 = 0;\n    long note_length_index37 = 0;\n\
    \    long note_length_index38 = 0;\n    long note_length_index39 = 0;\n    long\
    \ note_length_index40 = 0;\n    long note_length_index41 = 0;\n    long note_length_index42\
    \ = 0;\n    long note_length_index43 = 0;\n    long note_length_index44 = 0;\n\
    \    long note_length_index45 = 0;\n    long note_length_index46 = 0;\n    long\
    \ note_length_index47 = 0;\n    long note_length_index48 = 0;\n    long note_length_index49\
    \ = 0;\n    long note_length_index50 = 0;\n    long note_length_index51 = 0;\n\
    \    long note_length_index52 = 0;\n    long note_length_index53 = 0;\n    long\
    \ note_length_index54 = 0;\n    long note_length_index55 = 0;\n    long note_length_index56\
    \ = 0;\n    long note_length_index57 = 0;\n    long note_length_index58 = 0;\n\
    \    long note_length_index\n}\nint main() {\n    auto candidate = parse_music;\n\
    \    assert(candidate((\"\")) == (std::vector<long>()));\n    assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \   assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1, (long)1,\
    \ (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\")) == (std::vector<long>({(long)2,\
    \ (long)2, (long)1, (long)1, (long)4, (long)4, (long)4, (long)4})));\n    assert(candidate((\"\
    o| .| o| .| o o| o o|\")) == (std::vector<long>({(long)2, (long)1, (long)2, (long)1,\
    \ (long)4, (long)2, (long)4, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6vyg_0_l.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp6vyg_0_l.cpp:78:1: error: expected initializer before \u2018}\u2019\
    \ token\n   78 | }\n      | ^\n/tmp/tmp6vyg_0_l.cpp:78:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Your code goes here\n    std::vector<long> beats;\n    std::string note;\n \
    \   long beat = 0;\n    long beats = 0;\n    long notes = 0;\n    long last_note\
    \ = 0;\n    long last_beat = 0;\n    long last_beats = 0;\n    long last_notes\
    \ = 0;\n    long last_last_note = 0;\n    long last_last_beat = 0;\n    long last_last_beats\
    \ = 0;\n    long last_last_notes = 0;\n    long last_last_last_note = 0;\n   \
    \ long last_last_last_beat = 0;\n    long last_last_last_beats = 0;\n    long\
    \ last_last_last_notes = 0;\n    long last_last_last_last_note = 0;\n    long\
    \ last_last_last_last_beat = 0;\n    long last_last_last_last_beats = 0;\n   \
    \ long last_last_last_last_notes = 0;\n    long last_last_last_last_last_note\
    \ = 0;\n    long last_last_last_last_last_beat = 0;\n    long last_last_last_last_last_beats\
    \ = 0;\n    long last_last_last_last_last_notes = 0;\n    long last_last_last_last_last_last_note\
    \ = 0;\n    long last_last_last_last_last_last_beat = 0;\n    long last_last_last_last_last_last_beats\
    \ = 0;\n    long last_last_last_last_last_last_notes = 0;\n    long last_last_last_last_last_last_note\
    \ = 0;\n    long last_last_last_last_last_last_beat = 0;\n    long last_last_last_last_last_last_beats\
    \ = 0;\n    long last_last_last_last_last_last_notes = 0;\n    long last_last_last_last_last_last_last_note\
    \ = 0;\n    long last_last_last_last_last_last_last_beat = 0;\n    long last_last_last_last_last_last_last_beats\
    \ = 0;\n    long last_last_last_last_last_last_last_notes = 0;\n    long last_last_last_last_last_last_last_note\
    \ = 0;\n    long last_last_last_last_last_last_last_beat = 0;\n    long last_last_last_last_last_last_last_beats\
    \ = 0;\n    long last_last_last_last_last_last_last_notes = 0;\n    long last_last_last_last_last_last_last_note\
    \ = 0;\n    long last_last_last_last_last_last_last_beat = 0;\n    long last_last_last_last_last_last_last_beats\
    \ = 0;\n    long last_last_last_last_last_last_last_notes = 0;\n    long last_last_last_last_last_last_last_note\
    \ = 0;\n    long last_last_last_last_last_last_last_beat = 0;\n    long last_last_last_last_last_last_last_beats\
    \ = 0;\n    long last_last_last_last_last_last_last_notes = 0;\n    long last_last_last_last_last_last_last_note\
    \ = 0;\n    long last_last_last_last_last_last_last_beat = 0;\n    long last_last_last_last_last_last_last_beats\
    \ = 0;\n    long last_\n}\nint main() {\n    auto candidate = parse_music;\n \
    \   assert(candidate((\"\")) == (std::vector<long>()));\n    assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \   assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1, (long)1,\
    \ (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\")) == (std::vector<long>({(long)2,\
    \ (long)2, (long)1, (long)1, (long)4, (long)4, (long)4, (long)4})));\n    assert(candidate((\"\
    o| .| o| .| o o| o o|\")) == (std::vector<long>({(long)2, (long)1, (long)2, (long)1,\
    \ (long)4, (long)2, (long)4, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpw69zbb36.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpw69zbb36.cpp:15:10: error: conflicting declaration \u2018long int beats\u2019\
    \n   15 |     long beats = 0;\n      |          ^~~~~\n/tmp/tmpw69zbb36.cpp:12:23:\
    \ note: previous declaration as \u2018std::vector<long int> beats\u2019\n   12\
    \ |     std::vector<long> beats;\n      |                       ^~~~~\n/tmp/tmpw69zbb36.cpp:41:10:\
    \ error: redeclaration of \u2018long int last_last_last_last_last_last_note\u2019\
    \n   41 |     long last_last_last_last_last_last_note = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpw69zbb36.cpp:37:10: note: \u2018long int last_last_last_last_last_last_note\u2019\
    \ previously declared here\n   37 |     long last_last_last_last_last_last_note\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpw69zbb36.cpp:42:10:\
    \ error: redeclaration of \u2018long int last_last_last_last_last_last_beat\u2019\
    \n   42 |     long last_last_last_last_last_last_beat = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpw69zbb36.cpp:38:10: note: \u2018long int last_last_last_last_last_last_beat\u2019\
    \ previously declared here\n   38 |     long last_last_last_last_last_last_beat\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpw69zbb36.cpp:43:10:\
    \ error: redeclaration of \u2018long int last_last_last_last_last_last_beats\u2019\
    \n   43 |     long last_last_last_last_last_last_beats = 0;\n      |         \
    \ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpw69zbb36.cpp:39:10: note: \u2018\
    long int last_last_last_last_last_last_beats\u2019 previously declared here\n\
    \   39 |     long last_last_last_last_last_last_beats = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpw69zbb36.cpp:44:10: error: redeclaration of \u2018long int last_last_last_last_last_last_notes\u2019\
    \n   44 |     long last_last_last_last_last_last_notes = 0;\n      |         \
    \ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpw69zbb36.cpp:40:10: note: \u2018\
    long int last_last_last_last_last_last_notes\u2019 previously declared here\n\
    \   40 |     long last_last_last_last_last_last_"
  stdout: ''
  timestamp: 1660129742
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Your code goes here\n    std::vector<long> beats;\n    std::string note;\n \
    \   long beat = 0;\n    long last_beat = 0;\n    long last_note = 0;\n    long\
    \ last_note_beat = 0;\n    long note_length = 0;\n    long note_length2 = 0;\n\
    \    long note_length3 = 0;\n    long note_length4 = 0;\n    long note_length5\
    \ = 0;\n    long note_length6 = 0;\n    long note_length7 = 0;\n    long note_length8\
    \ = 0;\n    long note_length9 = 0;\n    long note_length10 = 0;\n    long note_length11\
    \ = 0;\n    long note_length12 = 0;\n    long note_length13 = 0;\n    long note_length14\
    \ = 0;\n    long note_length15 = 0;\n    long note_length16 = 0;\n    long note_length17\
    \ = 0;\n    long note_length18 = 0;\n    long note_length19 = 0;\n    long note_length20\
    \ = 0;\n    long note_length21 = 0;\n    long note_length22 = 0;\n    long note_length23\
    \ = 0;\n    long note_length24 = 0;\n    long note_length25 = 0;\n    long note_length26\
    \ = 0;\n    long note_length27 = 0;\n    long note_length28 = 0;\n    long note_length29\
    \ = 0;\n    long note_length30 = 0;\n    long note_length31 = 0;\n    long note_length32\
    \ = 0;\n    long note_length33 = 0;\n    long note_length34 = 0;\n    long note_length35\
    \ = 0;\n    long note_length36 = 0;\n    long note_length37 = 0;\n    long note_length38\
    \ = 0;\n    long note_length39 = 0;\n    long note_length40 = 0;\n    long note_length41\
    \ = 0;\n    long note_length42 = 0;\n    long note_length43 = 0;\n    long note_length44\
    \ = 0;\n    long note_length45 = 0;\n    long note_length46 = 0;\n    long note_length47\
    \ = 0;\n    long note_length48 = 0;\n    long note_length49 = 0;\n    long note_length50\
    \ = 0;\n    long note_length51 = 0;\n    long note_length52 = 0;\n    long note_length53\
    \ = 0;\n    long note_length54 = 0;\n    long note_length55 = 0;\n    long note_length56\
    \ = 0;\n    long note_length57 = 0;\n    long note_length58 = 0;\n    long note_length59\
    \ = 0;\n    long note_length60 = 0;\n    long note_length61 = 0;\n    long note_length62\
    \ = 0;\n    long note_length63 = 0;\n    long note_length64 = 0;\n    long note_length65\
    \ = 0;\n    long note_length66 = 0;\n    long note_length67 = 0;\n    long note_length68\
    \ = 0;\n}\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\
    \")) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: Exception
  stderr: 'tmppg12o345: /tmp/tmppg12o345.cpp:89: int main(): Assertion `candidate((""))
    == (std::vector<long>())'' failed.

    '
  stdout: ''
  timestamp: 1660129743
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Your code goes here\n    std::vector<long> beats;\n    long beat = 0;\n    long\
    \ note = 0;\n    long last_note = 0;\n    long last_beat = 0;\n    long last_beat_index\
    \ = 0;\n    long last_beat_index2 = 0;\n    long last_beat_index3 = 0;\n    long\
    \ last_beat_index4 = 0;\n    long last_beat_index5 = 0;\n    long last_beat_index6\
    \ = 0;\n    long last_beat_index7 = 0;\n    long last_beat_index8 = 0;\n    long\
    \ last_beat_index9 = 0;\n    long last_beat_index10 = 0;\n    long last_beat_index11\
    \ = 0;\n    long last_beat_index12 = 0;\n    long last_beat_index13 = 0;\n   \
    \ long last_beat_index14 = 0;\n    long last_beat_index15 = 0;\n    long last_beat_index16\
    \ = 0;\n    long last_beat_index17 = 0;\n    long last_beat_index18 = 0;\n   \
    \ long last_beat_index19 = 0;\n    long last_beat_index20 = 0;\n    long last_beat_index21\
    \ = 0;\n    long last_beat_index22 = 0;\n    long last_beat_index23 = 0;\n   \
    \ long last_beat_index24 = 0;\n    long last_beat_index25 = 0;\n    long last_beat_index26\
    \ = 0;\n    long last_beat_index27 = 0;\n    long last_beat_index28 = 0;\n   \
    \ long last_beat_index29 = 0;\n    long last_beat_index30 = 0;\n    long last_beat_index31\
    \ = 0;\n    long last_beat_index32 = 0;\n    long last_beat_index33 = 0;\n   \
    \ long last_beat_index34 = 0;\n    long last_beat_index35 = 0;\n    long last_beat_index36\
    \ = 0;\n    long last_beat_index37 = 0;\n    long last_beat_index38 = 0;\n   \
    \ long last_beat_index39 = 0;\n    long last_beat_index40 = 0;\n    long last_beat_index41\
    \ = 0;\n    long last_beat_index42 = 0;\n    long last_beat_index43 = 0;\n   \
    \ long last_beat_index44 = 0;\n    long last_beat_index45 = 0;\n    long last_beat_index46\
    \ = 0;\n    long last_beat_index47 = 0;\n    long last_beat_index48 = 0;\n   \
    \ long last_beat_index49 = 0;\n    long last_beat_index50 = 0;\n    long last_beat_index51\
    \ = 0;\n    long last_beat_index52 = 0;\n    long last_beat_index53 = 0;\n   \
    \ long last_beat_index54 = 0;\n    long last_beat_index55 = 0;\n    long last_beat_index56\
    \ = 0;\n    long last_beat_index57 = 0;\n    long last_beat_index58 = 0;\n   \
    \ long last_beat_index59 = 0;\n    long last_beat_index60 = 0;\n    long \n}\n\
    int main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"))\
    \ == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppyyi5i66.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmppyyi5i66.cpp:78:1: error: expected unqualified-id before \u2018}\u2019\
    \ token\n   78 | }\n      | ^\n/tmp/tmppyyi5i66.cpp:78:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129743
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Your code goes here\n    std::vector<long> beats;\n    std::string note;\n \
    \   long beat = 0;\n    long last_beat = 0;\n    long last_note = 0;\n    long\
    \ note_count = 0;\n    long note_length = 0;\n    long note_length_count = 0;\n\
    \    long note_length_index = 0;\n    long note_length_index2 = 0;\n    long note_length_index3\
    \ = 0;\n    long note_length_index4 = 0;\n    long note_length_index5 = 0;\n \
    \   long note_length_index6 = 0;\n    long note_length_index7 = 0;\n    long note_length_index8\
    \ = 0;\n    long note_length_index9 = 0;\n    long note_length_index10 = 0;\n\
    \    long note_length_index11 = 0;\n    long note_length_index12 = 0;\n    long\
    \ note_length_index13 = 0;\n    long note_length_index14 = 0;\n    long note_length_index15\
    \ = 0;\n    long note_length_index16 = 0;\n    long note_length_index17 = 0;\n\
    \    long note_length_index18 = 0;\n    long note_length_index19 = 0;\n    long\
    \ note_length_index20 = 0;\n    long note_length_index21 = 0;\n    long note_length_index22\
    \ = 0;\n    long note_length_index23 = 0;\n    long note_length_index24 = 0;\n\
    \    long note_length_index25 = 0;\n    long note_length_index26 = 0;\n    long\
    \ note_length_index27 = 0;\n    long note_length_index28 = 0;\n    long note_length_index29\
    \ = 0;\n    long note_length_index30 = 0;\n    long note_length_index31 = 0;\n\
    \    long note_length_index32 = 0;\n    long note_length_index33 = 0;\n    long\
    \ note_length_index34 = 0;\n    long note_length_index35 = 0;\n    long note_length_index36\
    \ = 0;\n    long note_length_index37 = 0;\n    long note_length_index38 = 0;\n\
    \    long note_length_index39 = 0;\n    long note_length_index40 = 0;\n    long\
    \ note_length_index41 = 0;\n    long note_length_index42 = 0;\n    long note_length_index43\
    \ = 0;\n    long note_length_index44 = 0;\n    long note_length_index45 = 0;\n\
    \    long note_length_index46 = 0;\n    long note_length_index47 = 0;\n    long\
    \ note_length_index48 = 0;\n    long note_length_index49 = 0;\n    long note_length_index50\
    \ = 0;\n    long note_length_index51 = 0;\n    long note_length_index52 = 0;\n\
    \    long note_length_index53 = 0;\n    long note_length_index54 = 0;\n    long\
    \ note_length_index55 = 0;\n    long note_length_index56 = 0;\n    long note_length_index57\
    \ = 0;\n    long note_length_index58 = 0;\n}\nint main() {\n    auto candidate\
    \ = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n  \
    \  assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4,\
    \ (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: Exception
  stderr: 'tmpyk2yhq4g: /tmp/tmpyk2yhq4g.cpp:81: int main(): Assertion `candidate((""))
    == (std::vector<long>())'' failed.

    '
  stdout: ''
  timestamp: 1660129744
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long beats = 0;\n   \
    \ long notes = 0;\n    long note = 0;\n    long last_note = 0;\n    long last_beat\
    \ = 0;\n    long last_beats = 0;\n    long last_notes = 0;\n    long last_note\
    \ = 0;\n    long last_last_note = 0;\n    long last_last_beat = 0;\n    long last_last_beats\
    \ = 0;\n    long last_last_notes = 0;\n    long last_last_note = 0;\n    long\
    \ last_last_last_note = 0;\n    long last_last_last_beat = 0;\n    long last_last_last_beats\
    \ = 0;\n    long last_last_last_notes = 0;\n    long last_last_last_note = 0;\n\
    \    long last_last_last_last_note = 0;\n    long last_last_last_last_beat = 0;\n\
    \    long last_last_last_last_beats = 0;\n    long last_last_last_last_notes =\
    \ 0;\n    long last_last_last_last_note = 0;\n    long last_last_last_last_last_note\
    \ = 0;\n    long last_last_last_last_last_beat = 0;\n    long last_last_last_last_last_beats\
    \ = 0;\n    long last_last_last_last_last_notes = 0;\n    long last_last_last_last_last_note\
    \ = 0;\n    long last_last_last_last_last_last_note = 0;\n    long last_last_last_last_last_last_note\
    \ = 0;\n    long last_last_last_last_last_last_last_note = 0;\n    long last_last_last_last_last_last_last_last_note\
    \ = 0;\n    long last_last_last_last_last_last_last_last_last_note = 0;\n    long\
    \ last_last_last_last_last_last_last_last_last_last_note = 0;\n    long last_last_last_last_last_last_last_last_last_last_note\
    \ = 0;\n    long last_last_last_last_last_last_last_last_last_last_note = 0;\n\
    \    long last_last_last_last_last_last_last_last_last_last_last_note = 0;\n \
    \   long last_last_last_last_last_last_last_last_last_last_last_note = 0;\n  \
    \  long last_last_last_last_last_last_last_last_last_last_last_note = 0;\n   \
    \ long last_last_last_last_last_last_last_last_last_last_last_last_note = 0;\n\
    \    long last_last_last_last_last_last_last_last_last_last_last_last_note = 0;\n\
    \    long last_last_last_last_last_last_last_last_last_last_last_last_note = 0;\n\
    \    long last_last_last_last_last_last_last_last_last_last_last_last_note = 0;\n\
    \    long last_last_last_last_last_last_last_last_last_last_last_last_last_note\
    \ = 0;\n    long last_last_last_last_last_last_last_last_last_last_last_last_last_note\
    \ = 0;\n    long last_last_last_last_last_last_last_last_last_last_last_last_last_note\
    \ = 0;\n    long last_last_\n}\nint main() {\n    auto candidate = parse_music;\n\
    \    assert(candidate((\"\")) == (std::vector<long>()));\n    assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \   assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1, (long)1,\
    \ (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\")) == (std::vector<long>({(long)2,\
    \ (long)2, (long)1, (long)1, (long)4, (long)4, (long)4, (long)4})));\n    assert(candidate((\"\
    o| .| o| .| o o| o o|\")) == (std::vector<long>({(long)2, (long)1, (long)2, (long)1,\
    \ (long)4, (long)2, (long)4, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9mvtm5oi.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp9mvtm5oi.cpp:14:10: error: conflicting declaration \u2018long int beats\u2019\
    \n   14 |     long beats = 0;\n      |          ^~~~~\n/tmp/tmp9mvtm5oi.cpp:11:23:\
    \ note: previous declaration as \u2018std::vector<long int> beats\u2019\n   11\
    \ |     std::vector<long> beats;\n      |                       ^~~~~\n/tmp/tmp9mvtm5oi.cpp:16:10:\
    \ error: conflicting declaration \u2018long int note\u2019\n   16 |     long note\
    \ = 0;\n      |          ^~~~\n/tmp/tmp9mvtm5oi.cpp:12:17: note: previous declaration\
    \ as \u2018std::string note\u2019\n   12 |     std::string note;\n      |    \
    \             ^~~~\n/tmp/tmp9mvtm5oi.cpp:21:10: error: redeclaration of \u2018\
    long int last_note\u2019\n   21 |     long last_note = 0;\n      |          ^~~~~~~~~\n\
    /tmp/tmp9mvtm5oi.cpp:17:10: note: \u2018long int last_note\u2019 previously declared\
    \ here\n   17 |     long last_note = 0;\n      |          ^~~~~~~~~\n/tmp/tmp9mvtm5oi.cpp:26:10:\
    \ error: redeclaration of \u2018long int last_last_note\u2019\n   26 |     long\
    \ last_last_note = 0;\n      |          ^~~~~~~~~~~~~~\n/tmp/tmp9mvtm5oi.cpp:22:10:\
    \ note: \u2018long int last_last_note\u2019 previously declared here\n   22 |\
    \     long last_last_note = 0;\n      |          ^~~~~~~~~~~~~~\n/tmp/tmp9mvtm5oi.cpp:31:10:\
    \ error: redeclaration of \u2018long int last_last_last_note\u2019\n   31 |  \
    \   long last_last_last_note = 0;\n      |          ^~~~~~~~~~~~~~~~~~~\n/tmp/tmp9mvtm5oi.cpp:27:10:\
    \ note: \u2018long int last_last_last_note\u2019 previously declared here\n  \
    \ 27 |     long last_last_last_note = 0;\n      |          ^~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp9mvtm5oi.cpp:36:10: error: redeclaration of \u2018long int last_last_last_last_note\u2019\
    \n   36 |     long last_last_last_last_note = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp9mvtm5oi.cpp:32:10: note: \u2018long int last_last_last_last_note\u2019\
    \ previously declared here\n   32 |     long last_last_last_last_note = 0;\n \
    \     |          ^~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp9mvtm5oi.cpp:41:10: error:\
    \ redeclaration of \u2018long int last_last_last_last_last_note\u2019\n   "
  stdout: ''
  timestamp: 1660129743
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Your code goes here\n    std::vector<long> beats;\n    std::string note;\n \
    \   long beat = 0;\n    long note_count = 0;\n    for (char c : music_string)\
    \ {\n        if (c == 'o') {\n            note_count++;\n            beat = 0;\n\
    \            note = \"\";\n        } else if (c == 'o|') {\n            note_count++;\n\
    \            beat = 2;\n            note = \"\";\n        } else if (c == '.|')\
    \ {\n            note_count++;\n            beat = 1;\n            note = \"\"\
    ;\n        } else if (c == '.') {\n            note_count++;\n            beat\
    \ = 1;\n            note = \"\";\n        } else if (c == '|') {\n           \
    \ note_count++;\n            beat = 1;\n            note = \"\";\n        } else\
    \ {\n            note += c;\n        }\n        if (note == \"\") {\n        \
    \    beats.push_back(beat);\n            beat = 0;\n            note_count = 0;\n\
    \        }\n    }\n    return beats;\n}\nint main() {\n    auto candidate = parse_music;\n\
    \    assert(candidate((\"\")) == (std::vector<long>()));\n    assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \   assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1, (long)1,\
    \ (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\")) == (std::vector<long>({(long)2,\
    \ (long)2, (long)1, (long)1, (long)4, (long)4, (long)4, (long)4})));\n    assert(candidate((\"\
    o| .| o| .| o o| o o|\")) == (std::vector<long>({(long)2, (long)1, (long)2, (long)1,\
    \ (long)4, (long)2, (long)4, (long)2})));\n}\n"
  status: Exception
  stderr: 'tmp2su4st0s: /tmp/tmp2su4st0s.cpp:51: int main(): Assertion `candidate(("o
    o o o")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4}))'' failed.

    '
  stdout: ''
  timestamp: 1660129744
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long rest = 0;\n    long\
    \ rests = 0;\n    long rests_counter = 0;\n    long rests_counter_counter = 0;\n\
    \    long rests_counter_counter_counter = 0;\n    long rests_counter_counter_counter_counter\
    \ = 0;\n    long rests_counter_counter_counter_counter_counter = 0;\n    long\
    \ rests_counter_counter_counter_counter_counter_counter = 0;\n    long rests_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long rests_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long rests_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long rests_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long rests_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long rests_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long rests_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long rests_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long rests_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long rests_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long rests_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long rests_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long rests_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long rests_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long rests_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long rests_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long rests_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long rests_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long rests_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    long rests_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_\n\
    }\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"\
    )) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppc85r8jh.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmppc85r8jh.cpp:34:10: error: redeclaration of \u2018long int rests_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\u2019\
    \n   34 |     long rests_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmppc85r8jh.cpp:33:10: note: \u2018long int rests_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\u2019\
    \ previously declared here\n   33 |     long rests_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmppc85r8jh.cpp:35:10: error: redeclaration of \u2018long int rests_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\u2019\
    \n   35 |     long rests_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmppc85r8jh.cpp:33:10: note: \u2018long int rests_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\u2019\
    \ previously declared here\n   33 |     long rests_counter_counter_counter_counter_counte"
  stdout: ''
  timestamp: 1660129743
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    long last_note = 0;\n    long note_count = 0;\n    long note_length = 0;\n\
    \    long note_length_count = 0;\n    long note_length_index = 0;\n    long note_length_index2\
    \ = 0;\n    long note_length_index3 = 0;\n    long note_length_index4 = 0;\n \
    \   long note_length_index5 = 0;\n    long note_length_index6 = 0;\n    long note_length_index7\
    \ = 0;\n    long note_length_index8 = 0;\n    long note_length_index9 = 0;\n \
    \   long note_length_index10 = 0;\n    long note_length_index11 = 0;\n    long\
    \ note_length_index12 = 0;\n    long note_length_index13 = 0;\n    long note_length_index14\
    \ = 0;\n    long note_length_index15 = 0;\n    long note_length_index16 = 0;\n\
    \    long note_length_index17 = 0;\n    long note_length_index18 = 0;\n    long\
    \ note_length_index19 = 0;\n    long note_length_index20 = 0;\n    long note_length_index21\
    \ = 0;\n    long note_length_index22 = 0;\n    long note_length_index23 = 0;\n\
    \    long note_length_index24 = 0;\n    long note_length_index25 = 0;\n    long\
    \ note_length_index26 = 0;\n    long note_length_index27 = 0;\n    long note_length_index28\
    \ = 0;\n    long note_length_index29 = 0;\n    long note_length_index30 = 0;\n\
    \    long note_length_index31 = 0;\n    long note_length_index32 = 0;\n    long\
    \ note_length_index33 = 0;\n    long note_length_index34 = 0;\n    long note_length_index35\
    \ = 0;\n    long note_length_index36 = 0;\n    long note_length_index37 = 0;\n\
    \    long note_length_index38 = 0;\n    long note_length_index39 = 0;\n    long\
    \ note_length_index40 = 0;\n    long note_length_index41 = 0;\n    long note_length_index42\
    \ = 0;\n    long note_length_index43 = 0;\n    long note_length_index44 = 0;\n\
    \    long note_length_index45 = 0;\n    long note_length_index46 = 0;\n    long\
    \ note_length_index47 = 0;\n    long note_length_index48 = 0;\n    long note_length_index49\
    \ = 0;\n    long note_length_index50 = 0;\n    long note_length_index51 = 0;\n\
    \    long note_length_index52 = 0;\n    long note_length_index53 = 0;\n    long\
    \ note_length_index54 = 0;\n    long note_length_index55 = 0;\n    long note_length_index56\
    \ = 0;\n    long note_length_index57 = 0;\n    long note_length_index58 = 0;\n\
    \    long note_length_index\n}\nint main() {\n    auto candidate = parse_music;\n\
    \    assert(candidate((\"\")) == (std::vector<long>()));\n    assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \   assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1, (long)1,\
    \ (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\")) == (std::vector<long>({(long)2,\
    \ (long)2, (long)1, (long)1, (long)4, (long)4, (long)4, (long)4})));\n    assert(candidate((\"\
    o| .| o| .| o o| o o|\")) == (std::vector<long>({(long)2, (long)1, (long)2, (long)1,\
    \ (long)4, (long)2, (long)4, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6vyg_0_l.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp6vyg_0_l.cpp:78:1: error: expected initializer before \u2018}\u2019\
    \ token\n   78 | }\n      | ^\n/tmp/tmp6vyg_0_l.cpp:78:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Your code goes here\n    std::vector<long> beats;\n    std::string note;\n \
    \   long beat = 0;\n    long note_count = 0;\n    long note_length = 0;\n    long\
    \ note_length_count = 0;\n    long note_length_index = 0;\n    long note_length_index_count\
    \ = 0;\n    long note_length_index_count_max = 0;\n    long note_length_index_count_min\
    \ = 0;\n    long note_length_index_count_sum = 0;\n    long note_length_index_count_sum_max\
    \ = 0;\n    long note_length_index_count_sum_min = 0;\n    long note_length_index_count_sum_avg\
    \ = 0;\n    long note_length_index_count_sum_avg_max = 0;\n    long note_length_index_count_sum_avg_min\
    \ = 0;\n    long note_length_index_count_sum_avg_avg = 0;\n    long note_length_index_count_sum_avg_avg_max\
    \ = 0;\n    long note_length_index_count_sum_avg_avg_min = 0;\n    long note_length_index_count_sum_avg_avg_avg\
    \ = 0;\n    long note_length_index_count_sum_avg_avg_avg = 0;\n    long note_length_index_count_sum_avg_avg_avg\
    \ = 0;\n    long note_length_index_count_sum_avg_avg_avg = 0;\n    long note_length_index_count_sum_avg_avg_avg\
    \ = 0;\n    long note_length_index_count_sum_avg_avg_avg = 0;\n    long note_length_index_count_sum_avg_avg_avg\
    \ = 0;\n    long note_length_index_count_sum_avg_avg_avg = 0;\n    long note_length_index_count_sum_avg_avg_avg\
    \ = 0;\n    long note_length_index_count_sum_avg_avg_avg = 0;\n    long note_length_index_count_sum_avg_avg_avg\
    \ = 0;\n    long note_length_index_count_sum_avg_avg_avg = 0;\n    long note_length_index_count_sum_avg_avg_avg\
    \ = 0;\n    long note_length_index_count_sum_avg_avg_avg = 0;\n    long note_length_index_count_sum_avg_avg_avg\
    \ = 0;\n    long note_length_index_count_sum_avg_avg_avg = 0;\n    long note_length_index_count_sum_avg_avg_avg\
    \ = 0;\n    long note_length_index_count_sum_avg_avg_avg = 0;\n    long note_length_index_count_sum_avg_avg_avg\
    \ = 0;\n    long note_length_index_count_sum_avg_avg_avg = 0;\n    long note_length_index_count_sum_avg_avg_avg\
    \ = 0;\n    long note_length_index_count_sum_avg_avg_avg = 0;\n    long note_length_index_count_sum_avg_avg_avg\
    \ = 0;\n    long note_length_index_count_sum_avg_avg_avg = 0;\n    long note_length_index_count_sum_avg_avg_avg\
    \ = 0;\n    long note_length_index_count_sum_avg_avg_avg = 0;\n    long note_length_index_count_sum_avg_avg_avg\
    \ = 0;\n    long note_length_index_count_sum_avg_avg_avg = 0;\n    long note_length_index_count_\n\
    }\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"\
    )) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnqzdz2g8.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpnqzdz2g8.cpp:32:10: error: redeclaration of \u2018long int note_length_index_count_sum_avg_avg_avg\u2019\
    \n   32 |     long note_length_index_count_sum_avg_avg_avg = 0;\n      |     \
    \     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpnqzdz2g8.cpp:31:10: note:\
    \ \u2018long int note_length_index_count_sum_avg_avg_avg\u2019 previously declared\
    \ here\n   31 |     long note_length_index_count_sum_avg_avg_avg = 0;\n      |\
    \          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpnqzdz2g8.cpp:33:10:\
    \ error: redeclaration of \u2018long int note_length_index_count_sum_avg_avg_avg\u2019\
    \n   33 |     long note_length_index_count_sum_avg_avg_avg = 0;\n      |     \
    \     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpnqzdz2g8.cpp:31:10: note:\
    \ \u2018long int note_length_index_count_sum_avg_avg_avg\u2019 previously declared\
    \ here\n   31 |     long note_length_index_count_sum_avg_avg_avg = 0;\n      |\
    \          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpnqzdz2g8.cpp:34:10:\
    \ error: redeclaration of \u2018long int note_length_index_count_sum_avg_avg_avg\u2019\
    \n   34 |     long note_length_index_count_sum_avg_avg_avg = 0;\n      |     \
    \     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpnqzdz2g8.cpp:31:10: note:\
    \ \u2018long int note_length_index_count_sum_avg_avg_avg\u2019 previously declared\
    \ here\n   31 |     long note_length_index_count_sum_avg_avg_avg = 0;\n      |\
    \          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpnqzdz2g8.cpp:35:10:\
    \ error: redeclaration of \u2018long int note_length_index_count_sum_avg_avg_avg\u2019\
    \n   35 |     long note_length_index_count_sum_avg_avg_avg = 0;\n      |     \
    \     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpnqzdz2g8.cpp:31:10: note:\
    \ \u2018long int note_length_index_count_sum_avg_avg_avg\u2019 previously declared\
    \ here\n   31 |     long note_length_index_count_sum_avg_avg_avg = 0;\n      |\
    \          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpnqzdz2g8.cpp:36:10:\
    \ error: redeclaration of \u2018long int note_length_index_count_sum_avg_avg_avg\u2019\
    \n   36 |     long "
  stdout: ''
  timestamp: 1660129743
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    long last_note = 0;\n    long last_note_length = 0;\n    long note_length\
    \ = 0;\n    long note_lengths[4] = {0};\n    long note_lengths_sum = 0;\n    long\
    \ note_count = 0;\n    long note_count_sum = 0;\n    long note_count_max = 0;\n\
    \    long note_count_max_index = 0;\n    long note_count_min = 0;\n    long note_count_min_index\
    \ = 0;\n    long note_count_sum_index = 0;\n    long note_count_sum_index2 = 0;\n\
    \    long note_count_sum_index3 = 0;\n    long note_count_sum_index4 = 0;\n  \
    \  long note_count_sum_index5 = 0;\n    long note_count_sum_index6 = 0;\n    long\
    \ note_count_sum_index7 = 0;\n    long note_count_sum_index8 = 0;\n    long note_count_sum_index9\
    \ = 0;\n    long note_count_sum_index10 = 0;\n    long note_count_sum_index11\
    \ = 0;\n    long note_count_sum_index12 = 0;\n    long note_count_sum_index13\
    \ = 0;\n    long note_count_sum_index14 = 0;\n    long note_count_sum_index15\
    \ = 0;\n    long note_count_sum_index16 = 0;\n    long note_count_sum_index17\
    \ = 0;\n    long note_count_sum_index18 = 0;\n    long note_count_sum_index19\
    \ = 0;\n    long note_count_sum_index20 = 0;\n    long note_count_sum_index21\
    \ = 0;\n    long note_count_sum_index22 = 0;\n    long note_count_sum_index23\
    \ = 0;\n    long note_count_sum_index24 = 0;\n    long note_count_sum_index25\
    \ = 0;\n    long note_count_sum_index26 = 0;\n    long note_count_sum_index27\
    \ = 0;\n    long note_count_sum_index28 = 0;\n    long note_count_sum_index29\
    \ = 0;\n    long note_count_sum_index30 = 0;\n    long note_count_sum_index31\
    \ = 0;\n    long note_count_sum_index32 = 0;\n    long note_count_sum_index33\
    \ = 0;\n    long note_count_sum_index34 = 0;\n    long note_count_sum_index35\
    \ = 0;\n    long note_count_sum_index36 = 0;\n    long note_count_sum_index37\
    \ = 0;\n    long note_count_sum_index38 = 0;\n    long note_count_sum_index39\
    \ = 0;\n    long note_count_sum_index40 = 0;\n    long note_count_sum_index41\
    \ = 0;\n    long note_count_sum_index42 = 0;\n    long note_count_sum_index43\
    \ = 0;\n    long note_count_sum_index44 = 0;\n    long note_count_sum_index45\
    \ = 0;\n    long note_count_sum_index46 = 0;\n\n}\nint main() {\n    auto candidate\
    \ = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n  \
    \  assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4,\
    \ (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: Exception
  stderr: 'tmpc8th72gy: /tmp/tmpc8th72gy.cpp:76: int main(): Assertion `candidate((""))
    == (std::vector<long>())'' failed.

    '
  stdout: ''
  timestamp: 1660129743
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    long beats_counter = 0;\n    long last_beat = 0;\n    long last_note\
    \ = 0;\n    long note = 0;\n    long note_counter = 0;\n    long note_last_beat\
    \ = 0;\n    long note_last_note = 0;\n    long note_last_note_counter = 0;\n \
    \   long note_last_note_last_beat = 0;\n    long note_last_note_last_note = 0;\n\
    \    long note_last_note_last_note_counter = 0;\n    long note_last_note_last_note_last_beat\
    \ = 0;\n    long note_last_note_last_note_last_note = 0;\n    long note_last_note_last_note_last_note_counter\
    \ = 0;\n    long note_last_note_last_note_last_note_last_beat = 0;\n    long note_last_note_last_note_last_note_last_note\
    \ = 0;\n    long note_last_note_last_note_last_note_last_counter = 0;\n    long\
    \ note_last_note_last_note_last_note_last_beat = 0;\n    long note_last_note_last_note_last_note_last_note\
    \ = 0;\n    long note_last_note_last_note_last_note_last_counter = 0;\n    long\
    \ note_last_note_last_note_last_note_last_beat = 0;\n    long note_last_note_last_note_last_note_last_note\
    \ = 0;\n    long note_last_note_last_note_last_note_last_counter = 0;\n    long\
    \ note_last_note_last_note_last_note_last_beat = 0;\n    long note_last_note_last_note_last_note_last_note\
    \ = 0;\n    long note_last_note_last_note_last_note_last_counter = 0;\n    long\
    \ note_last_note_last_note_last_note_last_beat = 0;\n    long note_last_note_last_note_last_note_last_note\
    \ = 0;\n    long note_last_note_last_note_last_note_last_counter = 0;\n    long\
    \ note_last_note_last_note_last_note_last_beat = 0;\n    long note_last_note_last_note_last_note_last_note\
    \ = 0;\n    long note_last_note_last_note_last_note_last_counter = 0;\n    long\
    \ note_last_note_last_note_last_note_last_beat = 0;\n    long note_last_note_last_note_last_note_last_note\
    \ = 0;\n    long note_last_note_last_note_last_note_last_counter = 0;\n    long\
    \ note_last_note_last_note_last_note_last_beat = 0;\n    long note_last_note_last_note_last_note_last_note\
    \ = 0;\n    long note_last_note_last_note_last_note_last_counter = 0;\n    long\
    \ note_last_note_last_note_last_note_last_beat = 0;\n    long note_last_note_last_note_last_note_last_note\
    \ = 0;\n    long note_last_note_last_note_last_note_last_counter = 0;\n    long\
    \ note_last_note_last_note_last_note_last_beat = 0;\n    long note_last_note_last_note_last_note_last_note\
    \ = 0;\n    long note_last_note_last_note_last_note_last_counter = 0;\n    \n\
    }\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"\
    )) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpoq25lpvr.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpoq25lpvr.cpp:29:10: error: redeclaration of \u2018long int note_last_note_last_note_last_note_last_beat\u2019\
    \n   29 |     long note_last_note_last_note_last_note_last_beat = 0;\n      |\
    \          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpoq25lpvr.cpp:26:10:\
    \ note: \u2018long int note_last_note_last_note_last_note_last_beat\u2019 previously\
    \ declared here\n   26 |     long note_last_note_last_note_last_note_last_beat\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpoq25lpvr.cpp:30:10:\
    \ error: redeclaration of \u2018long int note_last_note_last_note_last_note_last_note\u2019\
    \n   30 |     long note_last_note_last_note_last_note_last_note = 0;\n      |\
    \          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpoq25lpvr.cpp:27:10:\
    \ note: \u2018long int note_last_note_last_note_last_note_last_note\u2019 previously\
    \ declared here\n   27 |     long note_last_note_last_note_last_note_last_note\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpoq25lpvr.cpp:31:10:\
    \ error: redeclaration of \u2018long int note_last_note_last_note_last_note_last_counter\u2019\
    \n   31 |     long note_last_note_last_note_last_note_last_counter = 0;\n    \
    \  |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpoq25lpvr.cpp:28:10:\
    \ note: \u2018long int note_last_note_last_note_last_note_last_counter\u2019 previously\
    \ declared here\n   28 |     long note_last_note_last_note_last_note_last_counter\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpoq25lpvr.cpp:32:10:\
    \ error: redeclaration of \u2018long int note_last_note_last_note_last_note_last_beat\u2019\
    \n   32 |     long note_last_note_last_note_last_note_last_beat = 0;\n      |\
    \          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpoq25lpvr.cpp:26:10:\
    \ note: \u2018long int note_last_note_last_note_last_note_last_beat\u2019 previously\
    \ declared here\n   26 |     long note_last_note_last_note_last_note_last_beat\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
  stdout: ''
  timestamp: 1660129743
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Your code here\n    std::vector<long> beats;\n    std::string note;\n    long\
    \ beat = 0;\n    long beats = 0;\n    long notes = 0;\n    long note = 0;\n  \
    \  long notes_length = 0;\n    long note_length = 0;\n    long note_length2 =\
    \ 0;\n    long note_length3 = 0;\n    long note_length4 = 0;\n    long note_length5\
    \ = 0;\n    long note_length6 = 0;\n    long note_length7 = 0;\n    long note_length8\
    \ = 0;\n    long note_length9 = 0;\n    long note_length10 = 0;\n    long note_length11\
    \ = 0;\n    long note_length12 = 0;\n    long note_length13 = 0;\n    long note_length14\
    \ = 0;\n    long note_length15 = 0;\n    long note_length16 = 0;\n    long note_length17\
    \ = 0;\n    long note_length18 = 0;\n    long note_length19 = 0;\n    long note_length20\
    \ = 0;\n    long note_length21 = 0;\n    long note_length22 = 0;\n    long note_length23\
    \ = 0;\n    long note_length24 = 0;\n    long note_length25 = 0;\n    long note_length26\
    \ = 0;\n    long note_length27 = 0;\n    long note_length28 = 0;\n    long note_length29\
    \ = 0;\n    long note_length30 = 0;\n    long note_length31 = 0;\n    long note_length32\
    \ = 0;\n    long note_length33 = 0;\n    long note_length34 = 0;\n    long note_length35\
    \ = 0;\n    long note_length36 = 0;\n    long note_length37 = 0;\n    long note_length38\
    \ = 0;\n    long note_length39 = 0;\n    long note_length40 = 0;\n    long note_length41\
    \ = 0;\n    long note_length42 = 0;\n    long note_length43 = 0;\n    long note_length44\
    \ = 0;\n    long note_length45 = 0;\n    long note_length46 = 0;\n    long note_length47\
    \ = 0;\n    long note_length48 = 0;\n    long note_length49 = 0;\n    long note_length50\
    \ = 0;\n    long note_length51 = 0;\n    long note_length52 = 0;\n    long note_length53\
    \ = 0;\n    long note_length54 = 0;\n    long note_length55 = 0;\n    long note_length56\
    \ = 0;\n    long note_length57 = 0;\n    long note_length58 = 0;\n    long note_length59\
    \ = 0;\n    long note_length60 = 0;\n    long note_length61 = 0;\n    long note_length62\
    \ = 0;\n    long note_length63 = 0;\n    long note_length64 = 0;\n    long note_length65\
    \ = 0;\n    long note_length66 = 0;\n    long note_length67 = 0;\n    long note_length\n\
    }\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"\
    )) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqzpqf9c0.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpqzpqf9c0.cpp:15:10: error: conflicting declaration \u2018long int beats\u2019\
    \n   15 |     long beats = 0;\n      |          ^~~~~\n/tmp/tmpqzpqf9c0.cpp:12:23:\
    \ note: previous declaration as \u2018std::vector<long int> beats\u2019\n   12\
    \ |     std::vector<long> beats;\n      |                       ^~~~~\n/tmp/tmpqzpqf9c0.cpp:17:10:\
    \ error: conflicting declaration \u2018long int note\u2019\n   17 |     long note\
    \ = 0;\n      |          ^~~~\n/tmp/tmpqzpqf9c0.cpp:13:17: note: previous declaration\
    \ as \u2018std::string note\u2019\n   13 |     std::string note;\n      |    \
    \             ^~~~\n/tmp/tmpqzpqf9c0.cpp:87:1: error: expected initializer before\
    \ \u2018}\u2019 token\n   87 | }\n      | ^\n/tmp/tmpqzpqf9c0.cpp:87:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129743
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Your code here\n    std::vector<long> beats;\n    std::string note;\n    long\
    \ beat = 0;\n    long note_count = 0;\n    long note_length = 0;\n    long note_length_count\
    \ = 0;\n    long note_length_index = 0;\n    long note_length_index2 = 0;\n  \
    \  long note_length_index3 = 0;\n    long note_length_index4 = 0;\n    long note_length_index5\
    \ = 0;\n    long note_length_index6 = 0;\n    long note_length_index7 = 0;\n \
    \   long note_length_index8 = 0;\n    long note_length_index9 = 0;\n    long note_length_index10\
    \ = 0;\n    long note_length_index11 = 0;\n    long note_length_index12 = 0;\n\
    \    long note_length_index13 = 0;\n    long note_length_index14 = 0;\n    long\
    \ note_length_index15 = 0;\n    long note_length_index16 = 0;\n    long note_length_index17\
    \ = 0;\n    long note_length_index18 = 0;\n    long note_length_index19 = 0;\n\
    \    long note_length_index20 = 0;\n    long note_length_index21 = 0;\n    long\
    \ note_length_index22 = 0;\n    long note_length_index23 = 0;\n    long note_length_index24\
    \ = 0;\n    long note_length_index25 = 0;\n    long note_length_index26 = 0;\n\
    \    long note_length_index27 = 0;\n    long note_length_index28 = 0;\n    long\
    \ note_length_index29 = 0;\n    long note_length_index30 = 0;\n    long note_length_index31\
    \ = 0;\n    long note_length_index32 = 0;\n    long note_length_index33 = 0;\n\
    \    long note_length_index34 = 0;\n    long note_length_index35 = 0;\n    long\
    \ note_length_index36 = 0;\n    long note_length_index37 = 0;\n    long note_length_index38\
    \ = 0;\n    long note_length_index39 = 0;\n    long note_length_index40 = 0;\n\
    \    long note_length_index41 = 0;\n    long note_length_index42 = 0;\n    long\
    \ note_length_index43 = 0;\n    long note_length_index44 = 0;\n    long note_length_index45\
    \ = 0;\n    long note_length_index46 = 0;\n    long note_length_index47 = 0;\n\
    \    long note_length_index48 = 0;\n    long note_length_index49 = 0;\n    long\
    \ note_length_index50 = 0;\n    long note_length_index51 = 0;\n    long note_length_index52\
    \ = 0;\n    long note_length_index53 = 0;\n    long note_length_index54 = 0;\n\
    \    long note_length_index55 = 0;\n    long note_length_index56 = 0;\n    long\
    \ note_length_index57 = 0;\n    long note_length_index58 = 0;\n    long note_length_index59\
    \ = 0;\n    long note_length\n}\nint main() {\n    auto candidate = parse_music;\n\
    \    assert(candidate((\"\")) == (std::vector<long>()));\n    assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \   assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1, (long)1,\
    \ (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\")) == (std::vector<long>({(long)2,\
    \ (long)2, (long)1, (long)1, (long)4, (long)4, (long)4, (long)4})));\n    assert(candidate((\"\
    o| .| o| .| o o| o o|\")) == (std::vector<long>({(long)2, (long)1, (long)2, (long)1,\
    \ (long)4, (long)2, (long)4, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6780nv5a.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp6780nv5a.cpp:78:1: error: expected initializer before \u2018}\u2019\
    \ token\n   78 | }\n      | ^\n/tmp/tmp6780nv5a.cpp:78:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129740
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    long last_note = 0;\n    long note_count = 0;\n    long note_length = 0;\n\
    \    long note_length_count = 0;\n    long note_length_index = 0;\n    long note_length_index2\
    \ = 0;\n    long note_length_index3 = 0;\n    long note_length_index4 = 0;\n \
    \   long note_length_index5 = 0;\n    long note_length_index6 = 0;\n    long note_length_index7\
    \ = 0;\n    long note_length_index8 = 0;\n    long note_length_index9 = 0;\n \
    \   long note_length_index10 = 0;\n    long note_length_index11 = 0;\n    long\
    \ note_length_index12 = 0;\n    long note_length_index13 = 0;\n    long note_length_index14\
    \ = 0;\n    long note_length_index15 = 0;\n    long note_length_index16 = 0;\n\
    \    long note_length_index17 = 0;\n    long note_length_index18 = 0;\n    long\
    \ note_length_index19 = 0;\n    long note_length_index20 = 0;\n    long note_length_index21\
    \ = 0;\n    long note_length_index22 = 0;\n    long note_length_index23 = 0;\n\
    \    long note_length_index24 = 0;\n    long note_length_index25 = 0;\n    long\
    \ note_length_index26 = 0;\n    long note_length_index27 = 0;\n    long note_length_index28\
    \ = 0;\n    long note_length_index29 = 0;\n    long note_length_index30 = 0;\n\
    \    long note_length_index31 = 0;\n    long note_length_index32 = 0;\n    long\
    \ note_length_index33 = 0;\n    long note_length_index34 = 0;\n    long note_length_index35\
    \ = 0;\n    long note_length_index36 = 0;\n    long note_length_index37 = 0;\n\
    \    long note_length_index38 = 0;\n    long note_length_index39 = 0;\n    long\
    \ note_length_index40 = 0;\n    long note_length_index41 = 0;\n    long note_length_index42\
    \ = 0;\n    long note_length_index43 = 0;\n    long note_length_index44 = 0;\n\
    \    long note_length_index45 = 0;\n    long note_length_index46 = 0;\n    long\
    \ note_length_index47 = 0;\n    long note_length_index48 = 0;\n    long note_length_index49\
    \ = 0;\n    long note_length_index50 = 0;\n    long note_length_index51 = 0;\n\
    \    long note_length_index52 = 0;\n    long note_length_index53 = 0;\n    long\
    \ note_length_index54 = 0;\n    long note_length_index55 = 0;\n    long note_length_index56\
    \ = 0;\n    long note_length_index57 = 0;\n    long note_length_index58 = 0;\n\
    \    long note_length_index\n}\nint main() {\n    auto candidate = parse_music;\n\
    \    assert(candidate((\"\")) == (std::vector<long>()));\n    assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \   assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1, (long)1,\
    \ (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\")) == (std::vector<long>({(long)2,\
    \ (long)2, (long)1, (long)1, (long)4, (long)4, (long)4, (long)4})));\n    assert(candidate((\"\
    o| .| o| .| o o| o o|\")) == (std::vector<long>({(long)2, (long)1, (long)2, (long)1,\
    \ (long)4, (long)2, (long)4, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6vyg_0_l.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp6vyg_0_l.cpp:78:1: error: expected initializer before \u2018}\u2019\
    \ token\n   78 | }\n      | ^\n/tmp/tmp6vyg_0_l.cpp:78:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long rest = 0;\n    long\
    \ rests = 0;\n    long rests_after_note = 0;\n    long rests_after_notes = 0;\n\
    \    long rests_after_notes_after_note = 0;\n    long rests_after_notes_after_notes\
    \ = 0;\n    long rests_after_notes_after_notes_after_note = 0;\n    long rests_after_notes_after_notes_after_notes\
    \ = 0;\n    long rests_after_notes_after_notes_after_notes_after_note = 0;\n \
    \   long rests_after_notes_after_notes_after_notes_after_notes = 0;\n    long\
    \ rests_after_notes_after_notes_after_notes_after_notes_after_note = 0;\n    long\
    \ rests_after_notes_after_notes_after_notes_after_notes_after_notes = 0;\n   \
    \ long rests_after_notes_after_notes_after_notes_after_notes_after_notes_after_note\
    \ = 0;\n    long rests_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes\
    \ = 0;\n    long rests_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_note\
    \ = 0;\n    long rests_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes\
    \ = 0;\n    long rests_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_note\
    \ = 0;\n    long rests_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes\
    \ = 0;\n    long rests_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_note\
    \ = 0;\n    long rests_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes\
    \ = 0;\n    long rests_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_note\
    \ = 0;\n    long rests_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes\
    \ = 0;\n    long rests_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_note\
    \ = 0;\n    long rests_after_notes_after_notes_after_\n}\nint main() {\n    auto\
    \ candidate = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n\
    \    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3nlg7a_6.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp3nlg7a_6.cpp:38:1: error: expected initializer before \u2018}\u2019\
    \ token\n   38 | }\n      | ^\n/tmp/tmp3nlg7a_6.cpp:38:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129743
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long beats = 0;\n   \
    \ long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n\
    \    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note =\
    \ 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note\
    \ = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long\
    \ note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n  \
    \  long note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n\
    \    long note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes =\
    \ 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes\
    \ = 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n    long\
    \ notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n  \
    \  long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n\
    \    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note =\
    \ 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note\
    \ = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long\
    \ note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n  \
    \  long note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n\
    \    long note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes =\
    \ 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes\
    \ = 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n    long\
    \ notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n  \
    \  long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n\
    \    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note =\
    \ 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note\
    \ = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long\
    \ note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n  \
    \  long note = 0;\n    long notes = 0;\n    long note = 0;\n\n}\nint main() {\n\
    \    auto candidate = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n\
    \    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsui_xy4v.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpsui_xy4v.cpp:14:10: error: conflicting declaration \u2018long int beats\u2019\
    \n   14 |     long beats = 0;\n      |          ^~~~~\n/tmp/tmpsui_xy4v.cpp:11:23:\
    \ note: previous declaration as \u2018std::vector<long int> beats\u2019\n   11\
    \ |     std::vector<long> beats;\n      |                       ^~~~~\n/tmp/tmpsui_xy4v.cpp:16:10:\
    \ error: conflicting declaration \u2018long int note\u2019\n   16 |     long note\
    \ = 0;\n      |          ^~~~\n/tmp/tmpsui_xy4v.cpp:12:17: note: previous declaration\
    \ as \u2018std::string note\u2019\n   12 |     std::string note;\n      |    \
    \             ^~~~\n/tmp/tmpsui_xy4v.cpp:17:10: error: redeclaration of \u2018\
    long int notes\u2019\n   17 |     long notes = 0;\n      |          ^~~~~\n/tmp/tmpsui_xy4v.cpp:15:10:\
    \ note: \u2018long int notes\u2019 previously declared here\n   15 |     long\
    \ notes = 0;\n      |          ^~~~~\n/tmp/tmpsui_xy4v.cpp:18:10: error: conflicting\
    \ declaration \u2018long int note\u2019\n   18 |     long note = 0;\n      | \
    \         ^~~~\n/tmp/tmpsui_xy4v.cpp:12:17: note: previous declaration as \u2018\
    std::string note\u2019\n   12 |     std::string note;\n      |               \
    \  ^~~~\n/tmp/tmpsui_xy4v.cpp:19:10: error: redeclaration of \u2018long int notes\u2019\
    \n   19 |     long notes = 0;\n      |          ^~~~~\n/tmp/tmpsui_xy4v.cpp:15:10:\
    \ note: \u2018long int notes\u2019 previously declared here\n   15 |     long\
    \ notes = 0;\n      |          ^~~~~\n/tmp/tmpsui_xy4v.cpp:20:10: error: conflicting\
    \ declaration \u2018long int note\u2019\n   20 |     long note = 0;\n      | \
    \         ^~~~\n/tmp/tmpsui_xy4v.cpp:12:17: note: previous declaration as \u2018\
    std::string note\u2019\n   12 |     std::string note;\n      |               \
    \  ^~~~\n/tmp/tmpsui_xy4v.cpp:21:10: error: redeclaration of \u2018long int notes\u2019\
    \n   21 |     long notes = 0;\n      |          ^~~~~\n/tmp/tmpsui_xy4v.cpp:15:10:\
    \ note: \u2018long int notes\u2019 previously declared here\n   15 |     long\
    \ notes = 0;\n      |          ^~~~~\n/tmp/tmpsui_xy4v.cpp:22:10: error: conflicting\
    \ declaration \u2018long int note\u2019\n   22 |     long"
  stdout: ''
  timestamp: 1660129740
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long beats = 0;\n   \
    \ long notes = 0;\n    long note = 0;\n    long notes_total = 0;\n    long notes_half\
    \ = 0;\n    long notes_quarter = 0;\n    long notes_whole = 0;\n    long notes_total\
    \ = 0;\n    long notes_half = 0;\n    long notes_quarter = 0;\n    long notes_whole\
    \ = 0;\n    long notes_total = 0;\n    long notes_half = 0;\n    long notes_quarter\
    \ = 0;\n    long notes_whole = 0;\n    long notes_total = 0;\n    long notes_half\
    \ = 0;\n    long notes_quarter = 0;\n    long notes_whole = 0;\n    long notes_total\
    \ = 0;\n    long notes_half = 0;\n    long notes_quarter = 0;\n    long notes_whole\
    \ = 0;\n    long notes_total = 0;\n    long notes_half = 0;\n    long notes_quarter\
    \ = 0;\n    long notes_whole = 0;\n    long notes_total = 0;\n    long notes_half\
    \ = 0;\n    long notes_quarter = 0;\n    long notes_whole = 0;\n    long notes_total\
    \ = 0;\n    long notes_half = 0;\n    long notes_quarter = 0;\n    long notes_whole\
    \ = 0;\n    long notes_total = 0;\n    long notes_half = 0;\n    long notes_quarter\
    \ = 0;\n    long notes_whole = 0;\n    long notes_total = 0;\n    long notes_half\
    \ = 0;\n    long notes_quarter = 0;\n    long notes_whole = 0;\n    long notes_total\
    \ = 0;\n    long notes_half = 0;\n    long notes_quarter = 0;\n    long notes_whole\
    \ = 0;\n    long notes_total = 0;\n    long notes_half = 0;\n    long notes_quarter\
    \ = 0;\n    long notes_whole = 0;\n    long notes_total = 0;\n    long notes_half\
    \ = 0;\n    long notes_quarter = 0;\n    long notes_whole = 0;\n    long notes_total\
    \ = 0;\n    long notes_half = 0;\n    long notes_quarter = 0;\n    long notes_whole\
    \ = 0;\n    long notes_total = 0;\n    long notes_half = 0;\n    long notes_quarter\
    \ = 0;\n    long notes_whole = 0;\n    long notes_total = 0;\n    long notes_half\
    \ = 0;\n    long notes_quarter = 0;\n    long notes_whole = 0;\n    long notes_total\
    \ = 0;\n    long notes_half = 0;\n    long \n}\nint main() {\n    auto candidate\
    \ = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n  \
    \  assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4,\
    \ (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphij9mbqj.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmphij9mbqj.cpp:14:10: error: conflicting declaration \u2018long int beats\u2019\
    \n   14 |     long beats = 0;\n      |          ^~~~~\n/tmp/tmphij9mbqj.cpp:11:23:\
    \ note: previous declaration as \u2018std::vector<long int> beats\u2019\n   11\
    \ |     std::vector<long> beats;\n      |                       ^~~~~\n/tmp/tmphij9mbqj.cpp:16:10:\
    \ error: conflicting declaration \u2018long int note\u2019\n   16 |     long note\
    \ = 0;\n      |          ^~~~\n/tmp/tmphij9mbqj.cpp:12:17: note: previous declaration\
    \ as \u2018std::string note\u2019\n   12 |     std::string note;\n      |    \
    \             ^~~~\n/tmp/tmphij9mbqj.cpp:21:10: error: redeclaration of \u2018\
    long int notes_total\u2019\n   21 |     long notes_total = 0;\n      |       \
    \   ^~~~~~~~~~~\n/tmp/tmphij9mbqj.cpp:17:10: note: \u2018long int notes_total\u2019\
    \ previously declared here\n   17 |     long notes_total = 0;\n      |       \
    \   ^~~~~~~~~~~\n/tmp/tmphij9mbqj.cpp:22:10: error: redeclaration of \u2018long\
    \ int notes_half\u2019\n   22 |     long notes_half = 0;\n      |          ^~~~~~~~~~\n\
    /tmp/tmphij9mbqj.cpp:18:10: note: \u2018long int notes_half\u2019 previously declared\
    \ here\n   18 |     long notes_half = 0;\n      |          ^~~~~~~~~~\n/tmp/tmphij9mbqj.cpp:23:10:\
    \ error: redeclaration of \u2018long int notes_quarter\u2019\n   23 |     long\
    \ notes_quarter = 0;\n      |          ^~~~~~~~~~~~~\n/tmp/tmphij9mbqj.cpp:19:10:\
    \ note: \u2018long int notes_quarter\u2019 previously declared here\n   19 | \
    \    long notes_quarter = 0;\n      |          ^~~~~~~~~~~~~\n/tmp/tmphij9mbqj.cpp:24:10:\
    \ error: redeclaration of \u2018long int notes_whole\u2019\n   24 |     long notes_whole\
    \ = 0;\n      |          ^~~~~~~~~~~\n/tmp/tmphij9mbqj.cpp:20:10: note: \u2018\
    long int notes_whole\u2019 previously declared here\n   20 |     long notes_whole\
    \ = 0;\n      |          ^~~~~~~~~~~\n/tmp/tmphij9mbqj.cpp:25:10: error: redeclaration\
    \ of \u2018long int notes_total\u2019\n   25 |     long notes_total = 0;\n   \
    \   |          ^~~~~~~~~~~\n/tmp/tmphij9mbqj.cpp:17:10: note: \u2018long int notes_total\u2019\
    \ previously declared her"
  stdout: ''
  timestamp: 1660129743
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    long beat = 0;\n    long note = 0;\n    long last_note = 0;\n  \
    \  long last_beat = 0;\n    long last_beat_type = 0;\n    long last_beat_type_index\
    \ = 0;\n    long last_beat_type_index2 = 0;\n    long last_beat_type_index3 =\
    \ 0;\n    long last_beat_type_index4 = 0;\n    long last_beat_type_index5 = 0;\n\
    \    long last_beat_type_index6 = 0;\n    long last_beat_type_index7 = 0;\n  \
    \  long last_beat_type_index8 = 0;\n    long last_beat_type_index9 = 0;\n    long\
    \ last_beat_type_index10 = 0;\n    long last_beat_type_index11 = 0;\n    long\
    \ last_beat_type_index12 = 0;\n    long last_beat_type_index13 = 0;\n    long\
    \ last_beat_type_index14 = 0;\n    long last_beat_type_index15 = 0;\n    long\
    \ last_beat_type_index16 = 0;\n    long last_beat_type_index17 = 0;\n    long\
    \ last_beat_type_index18 = 0;\n    long last_beat_type_index19 = 0;\n    long\
    \ last_beat_type_index20 = 0;\n    long last_beat_type_index21 = 0;\n    long\
    \ last_beat_type_index22 = 0;\n    long last_beat_type_index23 = 0;\n    long\
    \ last_beat_type_index24 = 0;\n    long last_beat_type_index25 = 0;\n    long\
    \ last_beat_type_index26 = 0;\n    long last_beat_type_index27 = 0;\n    long\
    \ last_beat_type_index28 = 0;\n    long last_beat_type_index29 = 0;\n    long\
    \ last_beat_type_index30 = 0;\n    long last_beat_type_index31 = 0;\n    long\
    \ last_beat_type_index32 = 0;\n    long last_beat_type_index33 = 0;\n    long\
    \ last_beat_type_index34 = 0;\n    long last_beat_type_index35 = 0;\n    long\
    \ last_beat_type_index36 = 0;\n    long last_beat_type_index37 = 0;\n    long\
    \ last_beat_type_index38 = 0;\n    long last_beat_type_index39 = 0;\n    long\
    \ last_beat_type_index40 = 0;\n    long last_beat_type_index41 = 0;\n    long\
    \ last_beat_type_index42 = 0;\n    long last_beat_type_index43 = 0;\n    long\
    \ last_beat_type_index44 = 0;\n    long last_beat_type_index45 = 0;\n    long\
    \ last_beat_type_index46 = 0;\n    long last_beat_type_index47 = 0;\n    long\
    \ last_beat_type_index48 = 0;\n    long last_beat_type_index49 = 0;\n    long\
    \ last_beat_type_index50 = 0;\n    long last_beat_type_index51 = 0;\n    long\
    \ last_beat_type_index52 = 0;\n    long last_beat_type_index53 = 0;\n    long\
    \ last_beat\n}\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\
    \")) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr73azddk.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpr73azddk.cpp:71:1: error: expected initializer before \u2018}\u2019\
    \ token\n   71 | }\n      | ^\n/tmp/tmpr73azddk.cpp:71:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129743
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Your code goes here\n    std::vector<long> beats;\n    long beat = 0;\n    long\
    \ note = 0;\n    long last_note = 0;\n    long last_beat = 0;\n    long last_beat2\
    \ = 0;\n    long last_beat3 = 0;\n    long last_beat4 = 0;\n    long last_beat5\
    \ = 0;\n    long last_beat6 = 0;\n    long last_beat7 = 0;\n    long last_beat8\
    \ = 0;\n    long last_beat9 = 0;\n    long last_beat10 = 0;\n    long last_beat11\
    \ = 0;\n    long last_beat12 = 0;\n    long last_beat13 = 0;\n    long last_beat14\
    \ = 0;\n    long last_beat15 = 0;\n    long last_beat16 = 0;\n    long last_beat17\
    \ = 0;\n    long last_beat18 = 0;\n    long last_beat19 = 0;\n    long last_beat20\
    \ = 0;\n    long last_beat21 = 0;\n    long last_beat22 = 0;\n    long last_beat23\
    \ = 0;\n    long last_beat24 = 0;\n    long last_beat25 = 0;\n    long last_beat26\
    \ = 0;\n    long last_beat27 = 0;\n    long last_beat28 = 0;\n    long last_beat29\
    \ = 0;\n    long last_beat30 = 0;\n    long last_beat31 = 0;\n    long last_beat32\
    \ = 0;\n    long last_beat33 = 0;\n    long last_beat34 = 0;\n    long last_beat35\
    \ = 0;\n    long last_beat36 = 0;\n    long last_beat37 = 0;\n    long last_beat38\
    \ = 0;\n    long last_beat39 = 0;\n    long last_beat40 = 0;\n    long last_beat41\
    \ = 0;\n    long last_beat42 = 0;\n    long last_beat43 = 0;\n    long last_beat44\
    \ = 0;\n    long last_beat45 = 0;\n    long last_beat46 = 0;\n    long last_beat47\
    \ = 0;\n    long last_beat48 = 0;\n    long last_beat49 = 0;\n    long last_beat50\
    \ = 0;\n    long last_beat51 = 0;\n    long last_beat52 = 0;\n    long last_beat53\
    \ = 0;\n    long last_beat54 = 0;\n    long last_beat55 = 0;\n    long last_beat56\
    \ = 0;\n    long last_beat57 = 0;\n    long last_beat58 = 0;\n    long last_beat59\
    \ = 0;\n    long last_beat60 = 0;\n    long last_beat61 = 0;\n    long last_beat62\
    \ = 0;\n    long last_beat63 = 0;\n    long last_beat64 = 0;\n    long last_beat65\
    \ = 0;\n    long last_beat66 = 0;\n    long last_beat67 = 0;\n    long last_beat68\
    \ = 0;\n    long last_beat69 = 0;\n    long last_beat70\n}\nint main() {\n   \
    \ auto candidate = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n\
    \    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpycvoqt1s.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpycvoqt1s.cpp:86:1: error: expected initializer before \u2018}\u2019\
    \ token\n   86 | }\n      | ^\n/tmp/tmpycvoqt1s.cpp:86:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Your code here\n    std::vector<long> beats;\n    std::string note;\n    long\
    \ beat = 0;\n    long beats = 0;\n    long notes = 0;\n    long note = 0;\n  \
    \  long notes_total = 0;\n    long note_total = 0;\n    long note_total_total\
    \ = 0;\n    long note_total_total_total = 0;\n    long note_total_total_total_total\
    \ = 0;\n    long note_total_total_total_total_total = 0;\n    long note_total_total_total_total_total_total\
    \ = 0;\n    long note_total_total_total_total_total_total_total = 0;\n    long\
    \ note_total_total_total_total_total_total_total_total = 0;\n    long note_total_total_total_total_total_total_total_total_total\
    \ = 0;\n    long note_total_total_total_total_total_total_total_total_total_total\
    \ = 0;\n    long note_total_total_total_total_total_total_total_total_total_total_total\
    \ = 0;\n    long note_total_total_total_total_total_total_total_total_total_total_total\
    \ = 0;\n    long note_total_total_total_total_total_total_total_total_total_total_total_total\
    \ = 0;\n    long note_total_total_total_total_total_total_total_total_total_total_total_total_total\
    \ = 0;\n    long note_total_total_total_total_total_total_total_total_total_total_total_total_total_total\
    \ = 0;\n    long note_total_total_total_total_total_total_total_total_total_total_total_total_total_total\
    \ = 0;\n    long note_total_total_total_total_total_total_total_total_total_total_total_total_total_total_total\
    \ = 0;\n    long note_total_total_total_total_total_total_total_total_total_total_total_total_total_total_total\
    \ = 0;\n    long note_total_total_total_total_total_total_total_total_total_total_total_total_total_total_total_total\
    \ = 0;\n    long note_total_total_total_total_total_total_total_total_total_total_total_total_total_total_total_total\
    \ = 0;\n    long note_total_total_total_total_total_total_total_total_total_total_total_total_total_total_total_total\
    \ = 0;\n    long note_total_total_total_total_total_total_total_total_total_total_total_total_total_total_total_total_total\
    \ = 0;\n    long note_total_total_total_total_total_total_total_total_total_total_total_total_total_total_total_total_total\
    \ = 0;\n    long note_total_total_total_total_total_total_total_total_total_total_total_total_total_total_total_total_total\
    \ = 0;\n    long note_total_total_total_total_total_total_total_total_total_total_total_total_total_total_total_total_total_total\
    \ = 0;\n    long note_total_total_total_total_total_total_total_total_total_total_total_total_total_total_total_total_total_total\
    \ = 0;\n    long note_total_total_total_total_total_total_total_total_total_total_total_total_total_total_total_total_total_total\
    \ = 0;\n    long note_total_total_total_total_total_total_total_total_total_total_total_total_total_total_total_total_total_\n\
    }\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"\
    )) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1v5b0eby.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp1v5b0eby.cpp:15:10: error: conflicting declaration \u2018long int beats\u2019\
    \n   15 |     long beats = 0;\n      |          ^~~~~\n/tmp/tmp1v5b0eby.cpp:12:23:\
    \ note: previous declaration as \u2018std::vector<long int> beats\u2019\n   12\
    \ |     std::vector<long> beats;\n      |                       ^~~~~\n/tmp/tmp1v5b0eby.cpp:17:10:\
    \ error: conflicting declaration \u2018long int note\u2019\n   17 |     long note\
    \ = 0;\n      |          ^~~~\n/tmp/tmp1v5b0eby.cpp:13:17: note: previous declaration\
    \ as \u2018std::string note\u2019\n   13 |     std::string note;\n      |    \
    \             ^~~~\n/tmp/tmp1v5b0eby.cpp:30:10: error: redeclaration of \u2018\
    long int note_total_total_total_total_total_total_total_total_total_total_total\u2019\
    \n   30 |     long note_total_total_total_total_total_total_total_total_total_total_total\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp1v5b0eby.cpp:29:10: note: \u2018long int note_total_total_total_total_total_total_total_total_total_total_total\u2019\
    \ previously declared here\n   29 |     long note_total_total_total_total_total_total_total_total_total_total_total\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp1v5b0eby.cpp:34:10: error: redeclaration of \u2018long int note_total_total_total_total_total_total_total_total_total_total_total_total_total_total\u2019\
    \n   34 |     long note_total_total_total_total_total_total_total_total_total_total_total_total_total_total\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp1v5b0eby.cpp:33:10: note: \u2018long int note_total_total_total_total_total_total_total_total_total_total_total_total_total_total\u2019\
    \ previously declared here\n   33 |     long note_total_total_total_total_total_total_total_total_total_total_total_total_total_total\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
  stdout: ''
  timestamp: 1660129743
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    long last_note = 0;\n    long last_note_beat = 0;\n    long last_note_beat_time\
    \ = 0;\n    long last_note_beat_time2 = 0;\n    long last_note_beat_time3 = 0;\n\
    \    long last_note_beat_time4 = 0;\n    long last_note_beat_time5 = 0;\n    long\
    \ last_note_beat_time6 = 0;\n    long last_note_beat_time7 = 0;\n    long last_note_beat_time8\
    \ = 0;\n    long last_note_beat_time9 = 0;\n    long last_note_beat_time10 = 0;\n\
    \    long last_note_beat_time11 = 0;\n    long last_note_beat_time12 = 0;\n  \
    \  long last_note_beat_time13 = 0;\n    long last_note_beat_time14 = 0;\n    long\
    \ last_note_beat_time15 = 0;\n    long last_note_beat_time16 = 0;\n    long last_note_beat_time17\
    \ = 0;\n    long last_note_beat_time18 = 0;\n    long last_note_beat_time19 =\
    \ 0;\n    long last_note_beat_time20 = 0;\n    long last_note_beat_time21 = 0;\n\
    \    long last_note_beat_time22 = 0;\n    long last_note_beat_time23 = 0;\n  \
    \  long last_note_beat_time24 = 0;\n    long last_note_beat_time25 = 0;\n    long\
    \ last_note_beat_time26 = 0;\n    long last_note_beat_time27 = 0;\n    long last_note_beat_time28\
    \ = 0;\n    long last_note_beat_time29 = 0;\n    long last_note_beat_time30 =\
    \ 0;\n    long last_note_beat_time31 = 0;\n    long last_note_beat_time32 = 0;\n\
    \    long last_note_beat_time33 = 0;\n    long last_note_beat_time34 = 0;\n  \
    \  long last_note_beat_time35 = 0;\n    long last_note_beat_time36 = 0;\n    long\
    \ last_note_beat_time37 = 0;\n    long last_note_beat_time38 = 0;\n    long last_note_beat_time39\
    \ = 0;\n    long last_note_beat_time40 = 0;\n    long last_note_beat_time41 =\
    \ 0;\n    long last_note_beat_time42 = 0;\n    long last_note_beat_time43 = 0;\n\
    \    long last_note_beat_time44 = 0;\n    long last_note_beat_time45 = 0;\n  \
    \  long last_note_beat_time46 = 0;\n    long last_note_beat_time47 = 0;\n    long\
    \ last_note_beat_time48 = 0;\n    \n}\nint main() {\n    auto candidate = parse_music;\n\
    \    assert(candidate((\"\")) == (std::vector<long>()));\n    assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \   assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1, (long)1,\
    \ (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\")) == (std::vector<long>({(long)2,\
    \ (long)2, (long)1, (long)1, (long)4, (long)4, (long)4, (long)4})));\n    assert(candidate((\"\
    o| .| o| .| o o| o o|\")) == (std::vector<long>({(long)2, (long)1, (long)2, (long)1,\
    \ (long)4, (long)2, (long)4, (long)2})));\n}\n"
  status: Exception
  stderr: 'tmpfadn7ba1: /tmp/tmpfadn7ba1.cpp:69: int main(): Assertion `candidate((""))
    == (std::vector<long>())'' failed.

    '
  stdout: ''
  timestamp: 1660129744
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    long last_note = 0;\n    long note_count = 0;\n    long note_length = 0;\n\
    \    long note_length_count = 0;\n    long note_length_index = 0;\n    long note_length_index2\
    \ = 0;\n    long note_length_index3 = 0;\n    long note_length_index4 = 0;\n \
    \   long note_length_index5 = 0;\n    long note_length_index6 = 0;\n    long note_length_index7\
    \ = 0;\n    long note_length_index8 = 0;\n    long note_length_index9 = 0;\n \
    \   long note_length_index10 = 0;\n    long note_length_index11 = 0;\n    long\
    \ note_length_index12 = 0;\n    long note_length_index13 = 0;\n    long note_length_index14\
    \ = 0;\n    long note_length_index15 = 0;\n    long note_length_index16 = 0;\n\
    \    long note_length_index17 = 0;\n    long note_length_index18 = 0;\n    long\
    \ note_length_index19 = 0;\n    long note_length_index20 = 0;\n    long note_length_index21\
    \ = 0;\n    long note_length_index22 = 0;\n    long note_length_index23 = 0;\n\
    \    long note_length_index24 = 0;\n    long note_length_index25 = 0;\n    long\
    \ note_length_index26 = 0;\n    long note_length_index27 = 0;\n    long note_length_index28\
    \ = 0;\n    long note_length_index29 = 0;\n    long note_length_index30 = 0;\n\
    \    long note_length_index31 = 0;\n    long note_length_index32 = 0;\n    long\
    \ note_length_index33 = 0;\n    long note_length_index34 = 0;\n    long note_length_index35\
    \ = 0;\n    long note_length_index36 = 0;\n    long note_length_index37 = 0;\n\
    \    long note_length_index38 = 0;\n    long note_length_index39 = 0;\n    long\
    \ note_length_index40 = 0;\n    long note_length_index41 = 0;\n    long note_length_index42\
    \ = 0;\n    long note_length_index43 = 0;\n    long note_length_index44 = 0;\n\
    \    long note_length_index45 = 0;\n    long note_length_index46 = 0;\n    long\
    \ note_length_index47 = 0;\n    long note_length_index48 = 0;\n    long note_length_index49\
    \ = 0;\n    long note_length_index50 = 0;\n    long note_length_index51 = 0;\n\
    \    long note_length_index52 = 0;\n    long note_length_index53 = 0;\n    long\
    \ note_length_index54 = 0;\n    long note_length_index55 = 0;\n    long note_length_index56\
    \ = 0;\n    long note_length_index57 = 0;\n    long note_length_index58 = 0;\n\
    \    long note_length_index\n}\nint main() {\n    auto candidate = parse_music;\n\
    \    assert(candidate((\"\")) == (std::vector<long>()));\n    assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \   assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1, (long)1,\
    \ (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\")) == (std::vector<long>({(long)2,\
    \ (long)2, (long)1, (long)1, (long)4, (long)4, (long)4, (long)4})));\n    assert(candidate((\"\
    o| .| o| .| o o| o o|\")) == (std::vector<long>({(long)2, (long)1, (long)2, (long)1,\
    \ (long)4, (long)2, (long)4, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6vyg_0_l.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp6vyg_0_l.cpp:78:1: error: expected initializer before \u2018}\u2019\
    \ token\n   78 | }\n      | ^\n/tmp/tmp6vyg_0_l.cpp:78:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129737
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    long last_note = 0;\n    bool is_note = false;\n    for (char c : music_string)\
    \ {\n        if (c == 'o') {\n            note = music_string.substr(last_note,\
    \ last_beat - last_note + 1);\n            beats.push_back(beat);\n          \
    \  beat = 0;\n            last_note = 0;\n            last_beat = 0;\n       \
    \     is_note = true;\n        } else if (c == '|') {\n            note = music_string.substr(last_note,\
    \ last_beat - last_note + 1);\n            beats.push_back(beat);\n          \
    \  beat = 0;\n            last_note = 0;\n            last_beat = 0;\n       \
    \     is_note = false;\n        } else if (c == ' ') {\n            beat = 0;\n\
    \            last_note = 0;\n            last_beat = 0;\n            is_note =\
    \ false;\n        } else {\n            if (is_note) {\n                beat +=\
    \ 1;\n            }\n            last_note = last_beat + 1;\n            last_beat\
    \ = beat;\n            is_note = false;\n        }\n    }\n    return beats;\n\
    }\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"\
    )) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: Exception
  stderr: 'tmpvgm6sy5f: /tmp/tmpvgm6sy5f.cpp:51: int main(): Assertion `candidate(("o
    o o o")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4}))'' failed.

    '
  stdout: ''
  timestamp: 1660129744
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long beats = 0;\n   \
    \ long last_beat = 0;\n    long last_beats = 0;\n    long last_note = 0;\n   \
    \ long last_notes = 0;\n    long last_notes_beat = 0;\n    long last_notes_beats\
    \ = 0;\n    long last_notes_beats_beat = 0;\n    long last_notes_beats_beats =\
    \ 0;\n    long last_notes_beats_beats_beat = 0;\n    long last_notes_beats_beats_beats\
    \ = 0;\n    long last_notes_beats_beats_beats_beat = 0;\n    long last_notes_beats_beats_beats_beats\
    \ = 0;\n    long last_notes_beats_beats_beats_beats_beat = 0;\n    long last_notes_beats_beats_beats_beats_beats\
    \ = 0;\n    long last_notes_beats_beats_beats_beats_beats_beat = 0;\n    long\
    \ last_notes_beats_beats_beats_beats_beats_beats = 0;\n    long last_notes_beats_beats_beats_beats_beats_beat\
    \ = 0;\n    long last_notes_beats_beats_beats_beats_beats_beats = 0;\n    long\
    \ last_notes_beats_beats_beats_beats_beats_beat = 0;\n    long last_notes_beats_beats_beats_beats_beats_beats\
    \ = 0;\n    long last_notes_beats_beats_beats_beats_beats_beats_beat = 0;\n  \
    \  long last_notes_beats_beats_beats_beats_beats_beats = 0;\n    long last_notes_beats_beats_beats_beats_beats_beats\
    \ = 0;\n    long last_notes_beats_beats_beats_beats_beats_beats_beat = 0;\n  \
    \  long last_notes_beats_beats_beats_beats_beats_beats_beats = 0;\n    long last_notes_beats_beats_beats_beats_beats_beats_beat\
    \ = 0;\n    long last_notes_beats_beats_beats_beats_beats_beats_beats = 0;\n \
    \   long last_notes_beats_beats_beats_beats_beats_beats_beats = 0;\n    long last_notes_beats_beats_beats_beats_beats_beats_beat\
    \ = 0;\n    long last_notes_beats_beats_beats_beats_beats_beats_beats = 0;\n \
    \   long last_notes_beats_beats_beats_beats_beats_beats_beats_beat = 0;\n    long\
    \ last_notes_beats_beats_beats_beats_beats_beats_beats_beat\n}\nint main() {\n\
    \    auto candidate = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n\
    \    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwzf5jwzp.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpwzf5jwzp.cpp:14:10: error: conflicting declaration \u2018long int beats\u2019\
    \n   14 |     long beats = 0;\n      |          ^~~~~\n/tmp/tmpwzf5jwzp.cpp:11:23:\
    \ note: previous declaration as \u2018std::vector<long int> beats\u2019\n   11\
    \ |     std::vector<long> beats;\n      |                       ^~~~~\n/tmp/tmpwzf5jwzp.cpp:31:10:\
    \ error: redeclaration of \u2018long int last_notes_beats_beats_beats_beats_beats_beat\u2019\
    \n   31 |     long last_notes_beats_beats_beats_beats_beats_beat = 0;\n      |\
    \          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpwzf5jwzp.cpp:29:10:\
    \ note: \u2018long int last_notes_beats_beats_beats_beats_beats_beat\u2019 previously\
    \ declared here\n   29 |     long last_notes_beats_beats_beats_beats_beats_beat\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpwzf5jwzp.cpp:32:10:\
    \ error: redeclaration of \u2018long int last_notes_beats_beats_beats_beats_beats_beats\u2019\
    \n   32 |     long last_notes_beats_beats_beats_beats_beats_beats = 0;\n     \
    \ |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpwzf5jwzp.cpp:30:10:\
    \ note: \u2018long int last_notes_beats_beats_beats_beats_beats_beats\u2019 previously\
    \ declared here\n   30 |     long last_notes_beats_beats_beats_beats_beats_beats\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpwzf5jwzp.cpp:33:10:\
    \ error: redeclaration of \u2018long int last_notes_beats_beats_beats_beats_beats_beat\u2019\
    \n   33 |     long last_notes_beats_beats_beats_beats_beats_beat = 0;\n      |\
    \          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpwzf5jwzp.cpp:29:10:\
    \ note: \u2018long int last_notes_beats_beats_beats_beats_beats_beat\u2019 previously\
    \ declared here\n   29 |     long last_notes_beats_beats_beats_beats_beats_beat\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpwzf5jwzp.cpp:34:10:\
    \ error: redeclaration of \u2018long int last_notes_beats_beats_beats_beats_beats_beats\u2019\
    \n   34 |     long last_notes_beats_beats_beats_beats_beats_b"
  stdout: ''
  timestamp: 1660129743
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    bool is_note = false;\n    for (auto c : music_string) {\n        if (c ==\
    \ 'o') {\n            note = \"o\";\n            is_note = true;\n        } else\
    \ if (c == '|') {\n            note = \"o|\";\n            is_note = true;\n \
    \       } else if (c == '.') {\n            note = \".|\";\n            is_note\
    \ = true;\n        } else if (is_note) {\n            if (c == '|') {\n      \
    \          beat += 2;\n            } else if (c == '.') {\n                beat\
    \ += 1;\n            } else if (c == 'o') {\n                beat += 4;\n    \
    \        } else {\n                beat += 1;\n            }\n            last_beat\
    \ = beat;\n            is_note = false;\n        } else {\n            beat +=\
    \ 1;\n        }\n    }\n    beats.push_back(last_beat);\n    return beats;\n}\n\
    int main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"))\
    \ == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: Exception
  stderr: 'tmp4cce__xv: /tmp/tmp4cce__xv.cpp:47: int main(): Assertion `candidate((""))
    == (std::vector<long>())'' failed.

    '
  stdout: ''
  timestamp: 1660129744
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long beats = 0;\n   \
    \ long notes = 0;\n    long note = 0;\n    long notes_length = 0;\n    long note_length\
    \ = 0;\n    long note_length2 = 0;\n    long note_length3 = 0;\n    long note_length4\
    \ = 0;\n    long note_length5 = 0;\n    long note_length6 = 0;\n    long note_length7\
    \ = 0;\n    long note_length8 = 0;\n    long note_length9 = 0;\n    long note_length10\
    \ = 0;\n    long note_length11 = 0;\n    long note_length12 = 0;\n    long note_length13\
    \ = 0;\n    long note_length14 = 0;\n    long note_length15 = 0;\n    long note_length16\
    \ = 0;\n    long note_length17 = 0;\n    long note_length18 = 0;\n    long note_length19\
    \ = 0;\n    long note_length20 = 0;\n    long note_length21 = 0;\n    long note_length22\
    \ = 0;\n    long note_length23 = 0;\n    long note_length24 = 0;\n    long note_length25\
    \ = 0;\n    long note_length26 = 0;\n    long note_length27 = 0;\n    long note_length28\
    \ = 0;\n    long note_length29 = 0;\n    long note_length30 = 0;\n    long note_length31\
    \ = 0;\n    long note_length32 = 0;\n    long note_length33 = 0;\n    long note_length34\
    \ = 0;\n    long note_length35 = 0;\n    long note_length36 = 0;\n    long note_length37\
    \ = 0;\n    long note_length38 = 0;\n    long note_length39 = 0;\n    long note_length40\
    \ = 0;\n    long note_length41 = 0;\n    long note_length42 = 0;\n    long note_length43\
    \ = 0;\n    long note_length44 = 0;\n    long note_length45 = 0;\n    long note_length46\
    \ = 0;\n    long note_length47 = 0;\n    long note_length48 = 0;\n    long note_length49\
    \ = 0;\n    long note_length50 = 0;\n    long note_length51 = 0;\n    long note_length52\
    \ = 0;\n    long note_length53 = 0;\n    long note_length54 = 0;\n    long note_length55\
    \ = 0;\n    long note_length56 = 0;\n    long note_length57 = 0;\n    long note_length58\
    \ = 0;\n    long note_length59 = 0;\n    long note_length60 = 0;\n    long note_length61\
    \ = 0;\n    long note_length62 = 0;\n    long note_length63 = 0;\n    long note_length64\
    \ = 0;\n    long note_length65 = 0;\n    long note_length66 = 0;\n    long note_length67\
    \ = 0;\n    long note_length68 = 0;\n    long \n}\nint main() {\n    auto candidate\
    \ = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n  \
    \  assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4,\
    \ (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpewfmox6p.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpewfmox6p.cpp:14:10: error: conflicting declaration \u2018long int beats\u2019\
    \n   14 |     long beats = 0;\n      |          ^~~~~\n/tmp/tmpewfmox6p.cpp:11:23:\
    \ note: previous declaration as \u2018std::vector<long int> beats\u2019\n   11\
    \ |     std::vector<long> beats;\n      |                       ^~~~~\n/tmp/tmpewfmox6p.cpp:16:10:\
    \ error: conflicting declaration \u2018long int note\u2019\n   16 |     long note\
    \ = 0;\n      |          ^~~~\n/tmp/tmpewfmox6p.cpp:12:17: note: previous declaration\
    \ as \u2018std::string note\u2019\n   12 |     std::string note;\n      |    \
    \             ^~~~\n/tmp/tmpewfmox6p.cpp:87:1: error: expected unqualified-id\
    \ before \u2018}\u2019 token\n   87 | }\n      | ^\n/tmp/tmpewfmox6p.cpp:87:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    long last_note = 0;\n    long last_note_beat = 0;\n    long note_length =\
    \ 0;\n    long note_length2 = 0;\n    long note_length3 = 0;\n    long note_length4\
    \ = 0;\n    long note_length5 = 0;\n    long note_length6 = 0;\n    long note_length7\
    \ = 0;\n    long note_length8 = 0;\n    long note_length9 = 0;\n    long note_length10\
    \ = 0;\n    long note_length11 = 0;\n    long note_length12 = 0;\n    long note_length13\
    \ = 0;\n    long note_length14 = 0;\n    long note_length15 = 0;\n    long note_length16\
    \ = 0;\n    long note_length17 = 0;\n    long note_length18 = 0;\n    long note_length19\
    \ = 0;\n    long note_length20 = 0;\n    long note_length21 = 0;\n    long note_length22\
    \ = 0;\n    long note_length23 = 0;\n    long note_length24 = 0;\n    long note_length25\
    \ = 0;\n    long note_length26 = 0;\n    long note_length27 = 0;\n    long note_length28\
    \ = 0;\n    long note_length29 = 0;\n    long note_length30 = 0;\n    long note_length31\
    \ = 0;\n    long note_length32 = 0;\n    long note_length33 = 0;\n    long note_length34\
    \ = 0;\n    long note_length35 = 0;\n    long note_length36 = 0;\n    long note_length37\
    \ = 0;\n    long note_length38 = 0;\n    long note_length39 = 0;\n    long note_length40\
    \ = 0;\n    long note_length41 = 0;\n    long note_length42 = 0;\n    long note_length43\
    \ = 0;\n    long note_length44 = 0;\n    long note_length45 = 0;\n    long note_length46\
    \ = 0;\n    long note_length47 = 0;\n    long note_length48 = 0;\n    long note_length49\
    \ = 0;\n    long note_length50 = 0;\n    long note_length51 = 0;\n    long note_length52\
    \ = 0;\n    long note_length53 = 0;\n    long note_length54 = 0;\n    long note_length55\
    \ = 0;\n    long note_length56 = 0;\n    long note_length57 = 0;\n    long note_length58\
    \ = 0;\n    long note_length59 = 0;\n    long note_length60 = 0;\n    long note_length61\
    \ = 0;\n    long note_length62 = 0;\n    long note_length63 = 0;\n    long note_length64\
    \ = 0;\n    long note_length65 = 0;\n    long note_length66 = 0;\n    long note_length67\
    \ = 0;\n    long note_length68 = 0;\n    long note_length69\n}\nint main() {\n\
    \    auto candidate = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n\
    \    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp15oe946b.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp15oe946b.cpp:86:1: error: expected initializer before \u2018}\u2019\
    \ token\n   86 | }\n      | ^\n/tmp/tmp15oe946b.cpp:86:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Your code goes here\n    std::vector<long> beats;\n    std::string note;\n \
    \   long beat = 0;\n    long beats = 0;\n    long notes = 0;\n    long note =\
    \ 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note\
    \ = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long\
    \ note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n  \
    \  long note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n\
    \    long note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes =\
    \ 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes\
    \ = 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n    long\
    \ notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n  \
    \  long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n\
    \    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note =\
    \ 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note\
    \ = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long\
    \ note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n  \
    \  long note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n\
    \    long note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes =\
    \ 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes\
    \ = 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n    long\
    \ notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n  \
    \  long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n\
    \    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note =\
    \ 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note\
    \ = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long\
    \ note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n  \
    \  long note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n\
    \    long note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes =\
    \ 0;\n}\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\
    \")) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6gjrhk73.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp6gjrhk73.cpp:15:10: error: conflicting declaration \u2018long int beats\u2019\
    \n   15 |     long beats = 0;\n      |          ^~~~~\n/tmp/tmp6gjrhk73.cpp:12:23:\
    \ note: previous declaration as \u2018std::vector<long int> beats\u2019\n   12\
    \ |     std::vector<long> beats;\n      |                       ^~~~~\n/tmp/tmp6gjrhk73.cpp:17:10:\
    \ error: conflicting declaration \u2018long int note\u2019\n   17 |     long note\
    \ = 0;\n      |          ^~~~\n/tmp/tmp6gjrhk73.cpp:13:17: note: previous declaration\
    \ as \u2018std::string note\u2019\n   13 |     std::string note;\n      |    \
    \             ^~~~\n/tmp/tmp6gjrhk73.cpp:18:10: error: redeclaration of \u2018\
    long int notes\u2019\n   18 |     long notes = 0;\n      |          ^~~~~\n/tmp/tmp6gjrhk73.cpp:16:10:\
    \ note: \u2018long int notes\u2019 previously declared here\n   16 |     long\
    \ notes = 0;\n      |          ^~~~~\n/tmp/tmp6gjrhk73.cpp:19:10: error: conflicting\
    \ declaration \u2018long int note\u2019\n   19 |     long note = 0;\n      | \
    \         ^~~~\n/tmp/tmp6gjrhk73.cpp:13:17: note: previous declaration as \u2018\
    std::string note\u2019\n   13 |     std::string note;\n      |               \
    \  ^~~~\n/tmp/tmp6gjrhk73.cpp:20:10: error: redeclaration of \u2018long int notes\u2019\
    \n   20 |     long notes = 0;\n      |          ^~~~~\n/tmp/tmp6gjrhk73.cpp:16:10:\
    \ note: \u2018long int notes\u2019 previously declared here\n   16 |     long\
    \ notes = 0;\n      |          ^~~~~\n/tmp/tmp6gjrhk73.cpp:21:10: error: conflicting\
    \ declaration \u2018long int note\u2019\n   21 |     long note = 0;\n      | \
    \         ^~~~\n/tmp/tmp6gjrhk73.cpp:13:17: note: previous declaration as \u2018\
    std::string note\u2019\n   13 |     std::string note;\n      |               \
    \  ^~~~\n/tmp/tmp6gjrhk73.cpp:22:10: error: redeclaration of \u2018long int notes\u2019\
    \n   22 |     long notes = 0;\n      |          ^~~~~\n/tmp/tmp6gjrhk73.cpp:16:10:\
    \ note: \u2018long int notes\u2019 previously declared here\n   16 |     long\
    \ notes = 0;\n      |          ^~~~~\n/tmp/tmp6gjrhk73.cpp:23:10: error: conflicting\
    \ declaration \u2018long int note\u2019\n   23 |     long"
  stdout: ''
  timestamp: 1660129743
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    bool is_note = false;\n    for (char c : music_string) {\n        if (c ==\
    \ 'o') {\n            is_note = true;\n            note = \"\";\n            beat\
    \ = 0;\n            last_beat = 0;\n        } else if (c == '|') {\n         \
    \   is_note = false;\n            note = \"\";\n            beat = 0;\n      \
    \      last_beat = 0;\n        } else if (is_note) {\n            note += c;\n\
    \        } else {\n            beat += 1;\n            last_beat = beat;\n   \
    \     }\n    }\n    beats.push_back(last_beat);\n    return beats;\n}\nint main()\
    \ {\n    auto candidate = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n\
    \    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: Exception
  stderr: 'tmp3zedt2qr: /tmp/tmp3zedt2qr.cpp:39: int main(): Assertion `candidate((""))
    == (std::vector<long>())'' failed.

    '
  stdout: ''
  timestamp: 1660129744
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    long last_note = 0;\n    long last_note_beat = 0;\n    long last_note_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat = 0;\n    long last_note_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat = 0;\n    long last_note_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat = 0;\n\
    \    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat = 0;\n \
    \   long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat = 0;\n\
    \    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n    long last_note_beat_beat_\n}\nint main() {\n    auto candidate = parse_music;\n\
    \    assert(candidate((\"\")) == (std::vector<long>()));\n    assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \   assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1, (long)1,\
    \ (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\")) == (std::vector<long>({(long)2,\
    \ (long)2, (long)1, (long)1, (long)4, (long)4, (long)4, (long)4})));\n    assert(candidate((\"\
    o| .| o| .| o o| o o|\")) == (std::vector<long>({(long)2, (long)1, (long)2, (long)1,\
    \ (long)4, (long)2, (long)4, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0po2xlp1.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp0po2xlp1.cpp:30:10: error: redeclaration of \u2018long int last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\u2019\
    \n   30 |     long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp0po2xlp1.cpp:29:10: note: \u2018long int last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\u2019\
    \ previously declared here\n   29 |     long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp0po2xlp1.cpp:33:10: error: redeclaration of \u2018long int last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\u2019\
    \n   33 |     long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp0po2xlp1.cpp:32:10: note: \u2018long int last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\u2019\
    \ previously declared here\n   32 |     long last_note_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat_beat\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp0po2xlp1.cpp:36:1: error: expected initializer before \u2018}\u2019 token\n\
    \   36 | }\n      | ^\n/tmp/tmp0po2xlp1.cpp:36:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    long beat = 0;\n    long note = 0;\n    long last_note = 0;\n  \
    \  long last_beat = 0;\n    long last_beats = 0;\n    long last_beats_cnt = 0;\n\
    \    long last_beats_cnt2 = 0;\n    long last_beats_cnt3 = 0;\n    long last_beats_cnt4\
    \ = 0;\n    long last_beats_cnt5 = 0;\n    long last_beats_cnt6 = 0;\n    long\
    \ last_beats_cnt7 = 0;\n    long last_beats_cnt8 = 0;\n    long last_beats_cnt9\
    \ = 0;\n    long last_beats_cnt10 = 0;\n    long last_beats_cnt11 = 0;\n    long\
    \ last_beats_cnt12 = 0;\n    long last_beats_cnt13 = 0;\n    long last_beats_cnt14\
    \ = 0;\n    long last_beats_cnt15 = 0;\n    long last_beats_cnt16 = 0;\n    long\
    \ last_beats_cnt17 = 0;\n    long last_beats_cnt18 = 0;\n    long last_beats_cnt19\
    \ = 0;\n    long last_beats_cnt20 = 0;\n    long last_beats_cnt21 = 0;\n    long\
    \ last_beats_cnt22 = 0;\n    long last_beats_cnt23 = 0;\n    long last_beats_cnt24\
    \ = 0;\n    long last_beats_cnt25 = 0;\n    long last_beats_cnt26 = 0;\n    long\
    \ last_beats_cnt27 = 0;\n    long last_beats_cnt28 = 0;\n    long last_beats_cnt29\
    \ = 0;\n    long last_beats_cnt30 = 0;\n    long last_beats_cnt31 = 0;\n    long\
    \ last_beats_cnt32 = 0;\n    long last_beats_cnt33 = 0;\n    long last_beats_cnt34\
    \ = 0;\n    long last_beats_cnt35 = 0;\n    long last_beats_cnt36 = 0;\n    long\
    \ last_beats_cnt37 = 0;\n    long last_beats_cnt38 = 0;\n    long last_beats_cnt39\
    \ = 0;\n    long last_beats_cnt40 = 0;\n    long last_beats_cnt41 = 0;\n    long\
    \ last_beats_cnt42 = 0;\n    long last_beats_cnt43 = 0;\n    long last_beats_cnt44\
    \ = 0;\n    long last_beats_cnt45 = 0;\n    long last_beats_cnt46 = 0;\n    long\
    \ last_beats_cnt47 = 0;\n    long last_beats_cnt48 = 0;\n    long last_beats_cnt49\
    \ = 0;\n    long last_beats_cnt50 = 0;\n    long last_beats_cnt51 = 0;\n    long\
    \ last_beats_cnt52 = 0;\n    long last_beats_cnt53 = 0;\n    long last_beats_\n\
    }\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"\
    )) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5jqma_sn.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp5jqma_sn.cpp:71:1: error: expected initializer before \u2018}\u2019\
    \ token\n   71 | }\n      | ^\n/tmp/tmp5jqma_sn.cpp:71:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129743
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    long last_note = 0;\n    long last_note_length = 0;\n    long note_length\
    \ = 0;\n    long note_length2 = 0;\n    long note_length3 = 0;\n    long note_length4\
    \ = 0;\n    long note_length5 = 0;\n    long note_length6 = 0;\n    long note_length7\
    \ = 0;\n    long note_length8 = 0;\n    long note_length9 = 0;\n    long note_length10\
    \ = 0;\n    long note_length11 = 0;\n    long note_length12 = 0;\n    long note_length13\
    \ = 0;\n    long note_length14 = 0;\n    long note_length15 = 0;\n    long note_length16\
    \ = 0;\n    long note_length17 = 0;\n    long note_length18 = 0;\n    long note_length19\
    \ = 0;\n    long note_length20 = 0;\n    long note_length21 = 0;\n    long note_length22\
    \ = 0;\n    long note_length23 = 0;\n    long note_length24 = 0;\n    long note_length25\
    \ = 0;\n    long note_length26 = 0;\n    long note_length27 = 0;\n    long note_length28\
    \ = 0;\n    long note_length29 = 0;\n    long note_length30 = 0;\n    long note_length31\
    \ = 0;\n    long note_length32 = 0;\n    long note_length33 = 0;\n    long note_length34\
    \ = 0;\n    long note_length35 = 0;\n    long note_length36 = 0;\n    long note_length37\
    \ = 0;\n    long note_length38 = 0;\n    long note_length39 = 0;\n    long note_length40\
    \ = 0;\n    long note_length41 = 0;\n    long note_length42 = 0;\n    long note_length43\
    \ = 0;\n    long note_length44 = 0;\n    long note_length45 = 0;\n    long note_length46\
    \ = 0;\n    long note_length47 = 0;\n    long note_length48 = 0;\n    long note_length49\
    \ = 0;\n    long note_length50 = 0;\n    long note_length51 = 0;\n    long note_length52\
    \ = 0;\n    long note_length53 = 0;\n    long note_length54 = 0;\n    long note_length55\
    \ = 0;\n    long note_length56 = 0;\n    long note_length57 = 0;\n    long note_length58\
    \ = 0;\n    long note_length59 = 0;\n    long note_length60 = 0;\n    long note_length61\
    \ = 0;\n    long note_length62 = 0;\n    long note_length63 = 0;\n    long note_length64\
    \ = 0;\n    long note_length65 = 0;\n    long note_length66 = 0;\n    long note_length67\
    \ = 0;\n    long note_length68 = 0;\n    long note_length69\n}\nint main() {\n\
    \    auto candidate = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n\
    \    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5ca2lzns.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp5ca2lzns.cpp:86:1: error: expected initializer before \u2018}\u2019\
    \ token\n   86 | }\n      | ^\n/tmp/tmp5ca2lzns.cpp:86:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129740
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long beats = 0;\n   \
    \ long notes = 0;\n    long note = 0;\n    long note_count = 0;\n    long note_length\
    \ = 0;\n    long note_length_count = 0;\n    long note_length = 0;\n    long note_length_count2\
    \ = 0;\n    long note_length2 = 0;\n    long note_length_count3 = 0;\n    long\
    \ note_length3 = 0;\n    long note_length_count4 = 0;\n    long note_length4 =\
    \ 0;\n    long note_length_count5 = 0;\n    long note_length5 = 0;\n    long note_length_count6\
    \ = 0;\n    long note_length6 = 0;\n    long note_length_count7 = 0;\n    long\
    \ note_length7 = 0;\n    long note_length_count8 = 0;\n    long note_length8 =\
    \ 0;\n    long note_length_count9 = 0;\n    long note_length9 = 0;\n    long note_length_count10\
    \ = 0;\n    long note_length10 = 0;\n    long note_length_count11 = 0;\n    long\
    \ note_length11 = 0;\n    long note_length_count12 = 0;\n    long note_length12\
    \ = 0;\n    long note_length_count13 = 0;\n    long note_length13 = 0;\n    long\
    \ note_length_count14 = 0;\n    long note_length14 = 0;\n    long note_length_count15\
    \ = 0;\n    long note_length15 = 0;\n    long note_length_count16 = 0;\n    long\
    \ note_length16 = 0;\n    long note_length_count17 = 0;\n    long note_length17\
    \ = 0;\n    long note_length_count18 = 0;\n    long note_length18 = 0;\n    long\
    \ note_length_count19 = 0;\n    long note_length19 = 0;\n    long note_length_count20\
    \ = 0;\n    long note_length20 = 0;\n    long note_length_count21 = 0;\n    long\
    \ note_length21 = 0;\n    long note_length_count22 = 0;\n    long note_length22\
    \ = 0;\n    long note_length_count23 = 0;\n    long note_length23 = 0;\n    long\
    \ note_length_count24 = 0;\n    long note_length24 = 0;\n    long note_length_count25\
    \ = 0;\n    long note_length25 = 0;\n    long note_length_count26 = 0;\n    long\
    \ note_length26 = 0;\n    long note_length_count27 = 0;\n    long note_length27\
    \ = 0;\n    long note_length_count28 = 0;\n    long note_length28 = 0;\n    long\
    \ note_length_count29 = 0;\n    long note_length29 = 0;\n    long note_length_count30\
    \ = 0;\n    long note_length30 = 0;\n    long note_length_count31 = 0;\n    long\
    \ note_length31 = 0;\n    long note_length_count32 = 0;\n    long note_length32\n\
    }\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"\
    )) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqr3pcnst.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpqr3pcnst.cpp:14:10: error: conflicting declaration \u2018long int beats\u2019\
    \n   14 |     long beats = 0;\n      |          ^~~~~\n/tmp/tmpqr3pcnst.cpp:11:23:\
    \ note: previous declaration as \u2018std::vector<long int> beats\u2019\n   11\
    \ |     std::vector<long> beats;\n      |                       ^~~~~\n/tmp/tmpqr3pcnst.cpp:16:10:\
    \ error: conflicting declaration \u2018long int note\u2019\n   16 |     long note\
    \ = 0;\n      |          ^~~~\n/tmp/tmpqr3pcnst.cpp:12:17: note: previous declaration\
    \ as \u2018std::string note\u2019\n   12 |     std::string note;\n      |    \
    \             ^~~~\n/tmp/tmpqr3pcnst.cpp:20:10: error: redeclaration of \u2018\
    long int note_length\u2019\n   20 |     long note_length = 0;\n      |       \
    \   ^~~~~~~~~~~\n/tmp/tmpqr3pcnst.cpp:18:10: note: \u2018long int note_length\u2019\
    \ previously declared here\n   18 |     long note_length = 0;\n      |       \
    \   ^~~~~~~~~~~\n/tmp/tmpqr3pcnst.cpp:83:1: error: expected initializer before\
    \ \u2018}\u2019 token\n   83 | }\n      | ^\n/tmp/tmpqr3pcnst.cpp:83:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    long current_beat = 0;\n    long current_note = 0;\n    long current_note_length\
    \ = 0;\n    long current_note_length_in_bpm = 1;\n    long current_note_length_in_beats\
    \ = 1;\n    long current_note_length_in_seconds = 1;\n    long current_note_length_in_minutes\
    \ = 1;\n    long current_note_length_in_hours = 1;\n    long current_note_length_in_days\
    \ = 1;\n    long current_note_length_in_weeks = 1;\n    long current_note_length_in_months\
    \ = 1;\n    long current_note_length_in_years = 1;\n    long current_note_length_in_centuries\
    \ = 1;\n    long current_note_length_in_milleniums = 1;\n    long current_note_length_in_thousands\
    \ = 1;\n    long current_note_length_in_tens = 1;\n    long current_note_length_in_hundreds\
    \ = 1;\n    long current_note_length_in_thousands_years = 1;\n    long current_note_length_in_hundreds_years\
    \ = 1;\n    long current_note_length_in_tens_years = 1;\n    long current_note_length_in_fives_years\
    \ = 1;\n    long current_note_length_in_ones_years = 1;\n    long current_note_length_in_tens_years_years\
    \ = 1;\n    long current_note_length_in_fives_years_years = 1;\n    long current_note_length_in_ones_years_years\
    \ = 1;\n    long current_note_length_in_tens_years_years_years = 1;\n    long\
    \ current_note_length_in_fives_years_years_years = 1;\n    long current_note_length_in_ones_years_years_years\
    \ = 1;\n    long current_note_length_in_tens_years_years_years_years = 1;\n  \
    \  long current_note_length_in_fives_years_years_years_years = 1;\n    long current_note_length_in_ones_years_years_years_years\
    \ = 1;\n    long current_note_length_in_tens_years_years_years_years_years = 1;\n\
    \    long current_note_length_in_fives_years_years_years_years_years = 1;\n  \
    \  long current_note_length_in_ones_years_years_years_years_years = 1;\n    long\
    \ current_note_length_in_tens_years_years_years_years_years_years = 1;\n    long\
    \ current_note_length_in_fives_years_years_years_years_years_years = 1;\n    long\
    \ current_note_length_in_ones_years_years_years_years_years_years = 1;\n    long\
    \ current_note_length_in_\n}\nint main() {\n    auto candidate = parse_music;\n\
    \    assert(candidate((\"\")) == (std::vector<long>()));\n    assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \   assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1, (long)1,\
    \ (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\")) == (std::vector<long>({(long)2,\
    \ (long)2, (long)1, (long)1, (long)4, (long)4, (long)4, (long)4})));\n    assert(candidate((\"\
    o| .| o| .| o o| o o|\")) == (std::vector<long>({(long)2, (long)1, (long)2, (long)1,\
    \ (long)4, (long)2, (long)4, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpclgsibq2.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpclgsibq2.cpp:50:1: error: expected initializer before \u2018}\u2019\
    \ token\n   50 | }\n      | ^\n/tmp/tmpclgsibq2.cpp:50:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129743
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    long last_note = 0;\n    long note_count = 0;\n    long note_length = 0;\n\
    \    long note_length_count = 0;\n    long note_length_index = 0;\n    long note_length_index2\
    \ = 0;\n    long note_length_index3 = 0;\n    long note_length_index4 = 0;\n \
    \   long note_length_index5 = 0;\n    long note_length_index6 = 0;\n    long note_length_index7\
    \ = 0;\n    long note_length_index8 = 0;\n    long note_length_index9 = 0;\n \
    \   long note_length_index10 = 0;\n    long note_length_index11 = 0;\n    long\
    \ note_length_index12 = 0;\n    long note_length_index13 = 0;\n    long note_length_index14\
    \ = 0;\n    long note_length_index15 = 0;\n    long note_length_index16 = 0;\n\
    \    long note_length_index17 = 0;\n    long note_length_index18 = 0;\n    long\
    \ note_length_index19 = 0;\n    long note_length_index20 = 0;\n    long note_length_index21\
    \ = 0;\n    long note_length_index22 = 0;\n    long note_length_index23 = 0;\n\
    \    long note_length_index24 = 0;\n    long note_length_index25 = 0;\n    long\
    \ note_length_index26 = 0;\n    long note_length_index27 = 0;\n    long note_length_index28\
    \ = 0;\n    long note_length_index29 = 0;\n    long note_length_index30 = 0;\n\
    \    long note_length_index31 = 0;\n    long note_length_index32 = 0;\n    long\
    \ note_length_index33 = 0;\n    long note_length_index34 = 0;\n    long note_length_index35\
    \ = 0;\n    long note_length_index36 = 0;\n    long note_length_index37 = 0;\n\
    \    long note_length_index38 = 0;\n    long note_length_index39 = 0;\n    long\
    \ note_length_index40 = 0;\n    long note_length_index41 = 0;\n    long note_length_index42\
    \ = 0;\n    long note_length_index43 = 0;\n    long note_length_index44 = 0;\n\
    \    long note_length_index45 = 0;\n    long note_length_index46 = 0;\n    long\
    \ note_length_index47 = 0;\n    long note_length_index48 = 0;\n    long note_length_index49\
    \ = 0;\n    long note_length_index50 = 0;\n    long note_length_index51 = 0;\n\
    \    long note_length_index52 = 0;\n    long note_length_index53 = 0;\n    long\
    \ note_length_index54 = 0;\n    long note_length_index55 = 0;\n    long note_length_index56\
    \ = 0;\n    long note_length_index57 = 0;\n    long note_length_index58 = 0;\n\
    \    long note_length_index\n}\nint main() {\n    auto candidate = parse_music;\n\
    \    assert(candidate((\"\")) == (std::vector<long>()));\n    assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \   assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1, (long)1,\
    \ (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\")) == (std::vector<long>({(long)2,\
    \ (long)2, (long)1, (long)1, (long)4, (long)4, (long)4, (long)4})));\n    assert(candidate((\"\
    o| .| o| .| o o| o o|\")) == (std::vector<long>({(long)2, (long)1, (long)2, (long)1,\
    \ (long)4, (long)2, (long)4, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6vyg_0_l.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp6vyg_0_l.cpp:78:1: error: expected initializer before \u2018}\u2019\
    \ token\n   78 | }\n      | ^\n/tmp/tmp6vyg_0_l.cpp:78:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    long beats_counter = 0;\n    long notes_counter = 0;\n    long current_note\
    \ = 0;\n    long current_beat = 0;\n    long current_beats_counter = 0;\n    long\
    \ current_notes_counter = 0;\n    long current_note_length = 0;\n    long current_note_length_in_bpm\
    \ = 1;\n    long current_note_length_in_beats = 1;\n    long current_note_length_in_seconds\
    \ = 1;\n    long current_note_length_in_minutes = 1;\n    long current_note_length_in_hours\
    \ = 1;\n    long current_note_length_in_days = 1;\n    long current_note_length_in_weeks\
    \ = 1;\n    long current_note_length_in_months = 1;\n    long current_note_length_in_years\
    \ = 1;\n    long current_note_length_in_centuries = 1;\n    long current_note_length_in_millenniums\
    \ = 1;\n    long current_note_length_in_thousands = 1;\n    long current_note_length_in_tens\
    \ = 1;\n    long current_note_length_in_hundreds = 1;\n    long current_note_length_in_tenths\
    \ = 1;\n    long current_note_length_in_units_of_ten = 1;\n    long current_note_length_in_units_of_tenth\
    \ = 1;\n    long current_note_length_in_units_of_hundred = 1;\n    long current_note_length_in_units_of_hundredth\
    \ = 1;\n    long current_note_length_in_units_of_thousand = 1;\n    long current_note_length_in_units_of_thousandth\
    \ = 1;\n    long current_note_length_in_units_of_hundred_thousand = 1;\n    long\
    \ current_note_length_in_units_of_hundred_thousandth = 1;\n    long current_note_length_in_units_of_ten_thousand\
    \ = 1;\n    long current_note_length_in_units_of_ten_thousandth = 1;\n    long\
    \ current_note_length_in_units_of_hundred_thousand_thousand = 1;\n    long current_note_length_in_units_of_hundred_thousand_thousandth\
    \ = 1;\n    long current_note_length_in_units_of_ten_thousand_thousand = 1;\n\
    \    long current_note_length_in_units_of_ten_thousand_thousandth = 1;\n    long\
    \ current_note_length_in_units_of_hundred_thousand_thousand_thousand = 1;\n  \
    \  long current_note_length_in_units_of_hundred_thousand_thousand_thousandth =\
    \ 1;\n    long current_note_length_in_units_of_ten_thousand_thousand_thousand\
    \ = 1;\n    long current_note_length_in_units_of_ten_thousand_thousand_thousandth\
    \ = 1;\n    long current_note_length_in_units_of_hundred_thousand_\n}\nint main()\
    \ {\n    auto candidate = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n\
    \    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4yx9s3rr.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp4yx9s3rr.cpp:53:1: error: expected initializer before \u2018}\u2019\
    \ token\n   53 | }\n      | ^\n/tmp/tmp4yx9s3rr.cpp:53:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129743
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long beats = 0;\n   \
    \ long last_beat = 0;\n    long last_beats = 0;\n    long last_note = 0;\n   \
    \ long last_notes = 0;\n    long last_notes_beat = 0;\n    long last_notes_beats\
    \ = 0;\n    long last_notes_note = 0;\n    long last_notes_notes = 0;\n    long\
    \ last_notes_notes_beat = 0;\n    long last_notes_notes_beats = 0;\n    long last_notes_notes_note\
    \ = 0;\n    long last_notes_notes_notes = 0;\n    long last_notes_notes_notes_beat\
    \ = 0;\n    long last_notes_notes_notes_beats = 0;\n    long last_notes_notes_notes_note\
    \ = 0;\n    long last_notes_notes_notes_notes = 0;\n    long last_notes_notes_notes_notes_beat\
    \ = 0;\n    long last_notes_notes_notes_notes_beats = 0;\n    long last_notes_notes_notes_notes_note\
    \ = 0;\n    long last_notes_notes_notes_notes_notes = 0;\n    long last_notes_notes_notes_notes_notes_beat\
    \ = 0;\n    long last_notes_notes_notes_notes_notes_beats = 0;\n    long last_notes_notes_notes_notes_notes_note\
    \ = 0;\n    long last_notes_notes_notes_notes_notes_notes = 0;\n    long last_notes_notes_notes_notes_notes_notes_beat\
    \ = 0;\n    long last_notes_notes_notes_notes_notes_notes_beats = 0;\n    long\
    \ last_notes_notes_notes_notes_notes_notes_note = 0;\n    long last_notes_notes_notes_notes_notes_notes_notes\
    \ = 0;\n    long last_notes_notes_notes_notes_notes_notes_notes_beat = 0;\n  \
    \  long last_notes_notes_notes_notes_notes_notes_notes_beats = 0;\n    long last_notes_notes_notes_notes_notes_notes_notes_note\
    \ = 0;\n    long last_notes_notes_notes_notes_notes_notes_notes_notes = 0;\n \
    \   long last_notes_notes_notes_notes_notes_notes_notes_notes_beat = 0;\n    long\
    \ last_notes_notes_notes_notes_notes_notes_notes_notes_beats = 0;\n    long last_notes_notes_notes_notes_notes_notes_notes_notes_note\
    \ = 0;\n    long last_notes_notes_note\n}\nint main() {\n    auto candidate =\
    \ parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n    assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \   assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1, (long)1,\
    \ (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\")) == (std::vector<long>({(long)2,\
    \ (long)2, (long)1, (long)1, (long)4, (long)4, (long)4, (long)4})));\n    assert(candidate((\"\
    o| .| o| .| o o| o o|\")) == (std::vector<long>({(long)2, (long)1, (long)2, (long)1,\
    \ (long)4, (long)2, (long)4, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2j8l9lmu.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp2j8l9lmu.cpp:14:10: error: conflicting declaration \u2018long int beats\u2019\
    \n   14 |     long beats = 0;\n      |          ^~~~~\n/tmp/tmp2j8l9lmu.cpp:11:23:\
    \ note: previous declaration as \u2018std::vector<long int> beats\u2019\n   11\
    \ |     std::vector<long> beats;\n      |                       ^~~~~\n/tmp/tmp2j8l9lmu.cpp:51:1:\
    \ error: expected initializer before \u2018}\u2019 token\n   51 | }\n      | ^\n\
    /tmp/tmp2j8l9lmu.cpp:51:1: warning: no return statement in function returning\
    \ non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long note_count = 0;\n\
    \    long note_length = 0;\n    long note_lengths[4] = { 0, 0, 0, 0, 0 };\n  \
    \  long note_lengths_sum = 0;\n    long note_lengths_sums[4] = { 0, 0, 0, 0, 0\
    \ };\n    long note_lengths_sums_sum = 0;\n    long note_lengths_sums_sums[4]\
    \ = { 0, 0, 0, 0, 0 };\n    long note_lengths_sums_sums_sum = 0;\n    long note_lengths_sums_sums_sums[4]\
    \ = { 0, 0, 0, 0, 0 };\n    long note_lengths_sums_sums_sums_sum = 0;\n    long\
    \ note_lengths_sums_sums_sums_sums[4] = { 0, 0, 0, 0, 0 };\n    long note_lengths_sums_sums_sums_sums_sum\
    \ = 0;\n    long note_lengths_sums_sums_sums_sums_sums[4] = { 0, 0, 0, 0, 0 };\n\
    \    long note_lengths_sums_sums_sums_sums_sums_sum = 0;\n    long note_lengths_sums_sums_sums_sums_sums_sums[4]\
    \ = { 0, 0, 0, 0, 0 };\n    long note_lengths_sums_sums_sums_sums_sums_sums_sum\
    \ = 0;\n    long note_lengths_sums_sums_sums_sums_sums_sums_sums[4] = { 0, 0,\
    \ 0, 0, 0 };\n    long note_lengths_sums_sums_sums_sums_sums_sums_sums_sum = 0;\n\
    \    long note_lengths_sums_sums_sums_sums_sums_sums_sums_sums[4] = { 0, 0, 0,\
    \ 0, 0 };\n    long note_lengths_sums_sums_sums_sums_sums_sums_sums_sums_sum =\
    \ 0;\n    long note_lengths_sums_sums_sums_sums_sums_sums_sums_sums_sums[4] =\
    \ { 0, 0, 0, 0, 0 };\n    long note_lengths_sums_sums_sums_sums_sums_sums_sums_sums_sums_sum\
    \ = 0;\n    long note_lengths_sums_sums_sums_sums_sums_sums_sums_sums_sums_sums[4]\
    \ = { 0, 0, 0, 0, 0 };\n    long note_lengths_sums_sums_sums_sums_sums_sums_sums_sums_sums_sums_sum\
    \ = 0;\n    long note_lengths_sums_sums_sums_sums_sums_sums_sums_sums_sums_sums_sums[4]\
    \ = { 0, 0, 0, 0, 0 };\n    long note_lengths_sums_sums_\n}\nint main() {\n  \
    \  auto candidate = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n\
    \    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkbp2ehov.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpkbp2ehov.cpp:16:44: error: too many initializers for \u2018long int\
    \ [4]\u2019\n   16 |     long note_lengths[4] = { 0, 0, 0, 0, 0 };\n      |  \
    \                                          ^\n/tmp/tmpkbp2ehov.cpp:18:49: error:\
    \ too many initializers for \u2018long int [4]\u2019\n   18 |     long note_lengths_sums[4]\
    \ = { 0, 0, 0, 0, 0 };\n      |                                              \
    \   ^\n/tmp/tmpkbp2ehov.cpp:20:54: error: too many initializers for \u2018long\
    \ int [4]\u2019\n   20 |     long note_lengths_sums_sums[4] = { 0, 0, 0, 0, 0\
    \ };\n      |                                                      ^\n/tmp/tmpkbp2ehov.cpp:22:59:\
    \ error: too many initializers for \u2018long int [4]\u2019\n   22 |     long\
    \ note_lengths_sums_sums_sums[4] = { 0, 0, 0, 0, 0 };\n      |               \
    \                                            ^\n/tmp/tmpkbp2ehov.cpp:24:64: error:\
    \ too many initializers for \u2018long int [4]\u2019\n   24 |     long note_lengths_sums_sums_sums_sums[4]\
    \ = { 0, 0, 0, 0, 0 };\n      |                                              \
    \                  ^\n/tmp/tmpkbp2ehov.cpp:26:69: error: too many initializers\
    \ for \u2018long int [4]\u2019\n   26 |     long note_lengths_sums_sums_sums_sums_sums[4]\
    \ = { 0, 0, 0, 0, 0 };\n      |                                              \
    \                       ^\n/tmp/tmpkbp2ehov.cpp:28:74: error: too many initializers\
    \ for \u2018long int [4]\u2019\n   28 |     long note_lengths_sums_sums_sums_sums_sums_sums[4]\
    \ = { 0, 0, 0, 0, 0 };\n      |                                              \
    \                            ^\n/tmp/tmpkbp2ehov.cpp:30:79: error: too many initializers\
    \ for \u2018long int [4]\u2019\n   30 |     long note_lengths_sums_sums_sums_sums_sums_sums_sums[4]\
    \ = { 0, 0, 0, 0, 0 };\n      |                                              \
    \                                 ^\n/tmp/tmpkbp2ehov.cpp:32:84: error: too many\
    \ initializers for \u2018long int [4]\u2019\n   32 |     long note_lengths_sums_sums_sums_sums_sums_sums_sums_sums[4]\
    \ = { 0, 0, 0, 0, 0 };\n      |   "
  stdout: ''
  timestamp: 1660129744
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Your code here\n    std::vector<long> beats;\n    long beat = 0;\n    long note\
    \ = 0;\n    long last_note = 0;\n    long last_beat = 0;\n    long last_beats\
    \ = 0;\n    long last_beats_total = 0;\n    long last_beats_total2 = 0;\n    long\
    \ last_beats_total3 = 0;\n    long last_beats_total4 = 0;\n    long last_beats_total5\
    \ = 0;\n    long last_beats_total6 = 0;\n    long last_beats_total7 = 0;\n   \
    \ long last_beats_total8 = 0;\n    long last_beats_total9 = 0;\n    long last_beats_total10\
    \ = 0;\n    long last_beats_total11 = 0;\n    long last_beats_total12 = 0;\n \
    \   long last_beats_total13 = 0;\n    long last_beats_total14 = 0;\n    long last_beats_total15\
    \ = 0;\n    long last_beats_total16 = 0;\n    long last_beats_total17 = 0;\n \
    \   long last_beats_total18 = 0;\n    long last_beats_total19 = 0;\n    long last_beats_total20\
    \ = 0;\n    long last_beats_total21 = 0;\n    long last_beats_total22 = 0;\n \
    \   long last_beats_total23 = 0;\n    long last_beats_total24 = 0;\n    long last_beats_total25\
    \ = 0;\n    long last_beats_total26 = 0;\n    long last_beats_total27 = 0;\n \
    \   long last_beats_total28 = 0;\n    long last_beats_total29 = 0;\n    long last_beats_total30\
    \ = 0;\n    long last_beats_total31 = 0;\n    long last_beats_total32 = 0;\n \
    \   long last_beats_total33 = 0;\n    long last_beats_total34 = 0;\n    long last_beats_total35\
    \ = 0;\n    long last_beats_total36 = 0;\n    long last_beats_total37 = 0;\n \
    \   long last_beats_total38 = 0;\n    long last_beats_total39 = 0;\n    long last_beats_total40\
    \ = 0;\n    long last_beats_total41 = 0;\n    long last_beats_total42 = 0;\n \
    \   long last_beats_total43 = 0;\n    long last_beats_total44 = 0;\n    long last_beats_total45\
    \ = 0;\n    long last_beats_total46 = 0;\n    long last_beats_total47 = 0;\n \
    \   long last_beats_total48 = 0;\n    long last_beats_total49 = 0;\n    long last_beats_total50\
    \ = 0;\n    long last_beats_total51 = 0;\n    long last_beats_total52 = 0;\n \
    \   long last_beats_total53 = 0;\n\n}\nint main() {\n    auto candidate = parse_music;\n\
    \    assert(candidate((\"\")) == (std::vector<long>()));\n    assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \   assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1, (long)1,\
    \ (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\")) == (std::vector<long>({(long)2,\
    \ (long)2, (long)1, (long)1, (long)4, (long)4, (long)4, (long)4})));\n    assert(candidate((\"\
    o| .| o| .| o o| o o|\")) == (std::vector<long>({(long)2, (long)1, (long)2, (long)1,\
    \ (long)4, (long)2, (long)4, (long)2})));\n}\n"
  status: Exception
  stderr: 'tmp6fvb6p2w: /tmp/tmp6fvb6p2w.cpp:75: int main(): Assertion `candidate((""))
    == (std::vector<long>())'' failed.

    '
  stdout: ''
  timestamp: 1660129744
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    bool is_note = false;\n    for (char c : music_string) {\n        if (c ==\
    \ 'o') {\n            is_note = true;\n            beat = 0;\n            last_beat\
    \ = 0;\n            note = \"\";\n        } else if (c == '|') {\n           \
    \ is_note = false;\n            beat = 0;\n            last_beat = 0;\n      \
    \      note = \"\";\n        } else if (is_note) {\n            note += c;\n \
    \       } else {\n            beat += 1;\n            last_beat = beat;\n    \
    \    }\n    }\n    beats.push_back(beat);\n    return beats;\n}\nint main() {\n\
    \    auto candidate = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n\
    \    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: Exception
  stderr: 'tmpt_o5l5fi: /tmp/tmpt_o5l5fi.cpp:39: int main(): Assertion `candidate((""))
    == (std::vector<long>())'' failed.

    '
  stdout: ''
  timestamp: 1660129744
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long beats = 0;\n   \
    \ long notes = 0;\n    long note = 0;\n    long note_size = 0;\n    long note_length\
    \ = 0;\n    long note_length2 = 0;\n    long note_length3 = 0;\n    long note_length4\
    \ = 0;\n    long note_length5 = 0;\n    long note_length6 = 0;\n    long note_length7\
    \ = 0;\n    long note_length8 = 0;\n    long note_length9 = 0;\n    long note_length10\
    \ = 0;\n    long note_length11 = 0;\n    long note_length12 = 0;\n    long note_length13\
    \ = 0;\n    long note_length14 = 0;\n    long note_length15 = 0;\n    long note_length16\
    \ = 0;\n    long note_length17 = 0;\n    long note_length18 = 0;\n    long note_length19\
    \ = 0;\n    long note_length20 = 0;\n    long note_length21 = 0;\n    long note_length22\
    \ = 0;\n    long note_length23 = 0;\n    long note_length24 = 0;\n    long note_length25\
    \ = 0;\n    long note_length26 = 0;\n    long note_length27 = 0;\n    long note_length28\
    \ = 0;\n    long note_length29 = 0;\n    long note_length30 = 0;\n    long note_length31\
    \ = 0;\n    long note_length32 = 0;\n    long note_length33 = 0;\n    long note_length34\
    \ = 0;\n    long note_length35 = 0;\n    long note_length36 = 0;\n    long note_length37\
    \ = 0;\n    long note_length38 = 0;\n    long note_length39 = 0;\n    long note_length40\
    \ = 0;\n    long note_length41 = 0;\n    long note_length42 = 0;\n    long note_length43\
    \ = 0;\n    long note_length44 = 0;\n    long note_length45 = 0;\n    long note_length46\
    \ = 0;\n    long note_length47 = 0;\n    long note_length48 = 0;\n    long note_length49\
    \ = 0;\n    long note_length50 = 0;\n    long note_length51 = 0;\n    long note_length52\
    \ = 0;\n    long note_length53 = 0;\n    long note_length54 = 0;\n    long note_length55\
    \ = 0;\n    long note_length56 = 0;\n    long note_length57 = 0;\n    long note_length58\
    \ = 0;\n    long note_length59 = 0;\n    long note_length60 = 0;\n    long note_length61\
    \ = 0;\n    long note_length62 = 0;\n    long note_length63 = 0;\n    long note_length64\
    \ = 0;\n    long note_length65 = 0;\n    long note_length66 = 0;\n    long note_length67\
    \ = 0;\n    long note_length68 = 0;\n    long note_\n}\nint main() {\n    auto\
    \ candidate = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n\
    \    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7939h_ny.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp7939h_ny.cpp:14:10: error: conflicting declaration \u2018long int beats\u2019\
    \n   14 |     long beats = 0;\n      |          ^~~~~\n/tmp/tmp7939h_ny.cpp:11:23:\
    \ note: previous declaration as \u2018std::vector<long int> beats\u2019\n   11\
    \ |     std::vector<long> beats;\n      |                       ^~~~~\n/tmp/tmp7939h_ny.cpp:16:10:\
    \ error: conflicting declaration \u2018long int note\u2019\n   16 |     long note\
    \ = 0;\n      |          ^~~~\n/tmp/tmp7939h_ny.cpp:12:17: note: previous declaration\
    \ as \u2018std::string note\u2019\n   12 |     std::string note;\n      |    \
    \             ^~~~\n/tmp/tmp7939h_ny.cpp:87:1: error: expected initializer before\
    \ \u2018}\u2019 token\n   87 | }\n      | ^\n/tmp/tmp7939h_ny.cpp:87:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129741
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    bool is_note = false;\n    for (char c : music_string) {\n        if (c ==\
    \ 'o') {\n            is_note = true;\n            beat = 0;\n            last_beat\
    \ = 0;\n            note = \"\";\n        } else if (c == '|') {\n           \
    \ is_note = true;\n            beat = 0;\n            last_beat = 0;\n       \
    \     note = \"\";\n        } else if (c == '.') {\n            is_note = false;\n\
    \            beat = 0;\n            last_beat = 0;\n            note = \"\";\n\
    \        } else {\n            if (is_note) {\n                note += c;\n  \
    \          } else {\n                beat += 1;\n                last_beat = beat;\n\
    \                beats.push_back(beat);\n                beat = 0;\n         \
    \       is_note = true;\n            }\n        }\n    }\n    return beats;\n\
    }\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"\
    )) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: Exception
  stderr: 'tmpu1m1srz1: /tmp/tmpu1m1srz1.cpp:49: int main(): Assertion `candidate(("o
    o o o")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4}))'' failed.

    '
  stdout: ''
  timestamp: 1660129744
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    long last_note = 0;\n    bool is_note = false;\n    bool is_last_note = false;\n\
    \    bool is_last_beat = false;\n    bool is_last_note = false;\n    bool is_last_beat\
    \ = false;\n    bool is_last_note = false;\n    bool is_last_beat = false;\n \
    \   bool is_last_note = false;\n    bool is_last_beat = false;\n    bool is_last_note\
    \ = false;\n    bool is_last_beat = false;\n    bool is_last_note = false;\n \
    \   bool is_last_beat = false;\n    bool is_last_note = false;\n    bool is_last_beat\
    \ = false;\n    bool is_last_note = false;\n    bool is_last_beat = false;\n \
    \   bool is_last_note = false;\n    bool is_last_beat = false;\n    bool is_last_note\
    \ = false;\n    bool is_last_beat = false;\n    bool is_last_note = false;\n \
    \   bool is_last_beat = false;\n    bool is_last_note = false;\n    bool is_last_beat\
    \ = false;\n    bool is_last_note = false;\n    bool is_last_beat = false;\n \
    \   bool is_last_note = false;\n    bool is_last_beat = false;\n    bool is_last_note\
    \ = false;\n    bool is_last_beat = false;\n    bool is_last_note = false;\n \
    \   bool is_last_beat = false;\n    bool is_last_note = false;\n    bool is_last_beat\
    \ = false;\n    bool is_last_note = false;\n    bool is_last_beat = false;\n \
    \   bool is_last_note = false;\n    bool is_last_beat = false;\n    bool is_last_note\
    \ = false;\n    bool is_last_beat = false;\n    bool is_last_note = false;\n \
    \   bool is_last_beat = false;\n    bool is_last_note = false;\n    bool is_last_beat\
    \ = false;\n    bool is_last_note = false;\n    bool is_last_beat = false;\n \
    \   bool is_last_note = false;\n    bool is_last_beat = false;\n    bool is_last_note\
    \ = false;\n    bool is_last_beat = false;\n    bool is_last_note = false;\n \
    \   bool is_last_beat = false;\n    bool is_last_note = false;\n    bool is_last_beat\
    \ = false;\n    bool is_last_note = false;\n    bool is_last_beat = false;\n \
    \   bool is_last_note = false;\n    bool is_last_beat = false;\n    bool is_last_note\
    \ = false;\n    bool is_last_beat = false;\n    bool is_last_note = false;\n \
    \   bool is_last_beat = false;\n    bool is_last_note = false;\n    bool is_last_beat\
    \ = false;\n    bool is_last_note = false;\n    bool is_last_beat = false;\n \
    \   bool is_last_note = false;\n    bool is_last_beat = false;\n    \n}\nint main()\
    \ {\n    auto candidate = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n\
    \    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpoa4yy_84.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpoa4yy_84.cpp:19:10: error: redeclaration of \u2018bool is_last_note\u2019\
    \n   19 |     bool is_last_note = false;\n      |          ^~~~~~~~~~~~\n/tmp/tmpoa4yy_84.cpp:17:10:\
    \ note: \u2018bool is_last_note\u2019 previously declared here\n   17 |     bool\
    \ is_last_note = false;\n      |          ^~~~~~~~~~~~\n/tmp/tmpoa4yy_84.cpp:20:10:\
    \ error: redeclaration of \u2018bool is_last_beat\u2019\n   20 |     bool is_last_beat\
    \ = false;\n      |          ^~~~~~~~~~~~\n/tmp/tmpoa4yy_84.cpp:18:10: note: \u2018\
    bool is_last_beat\u2019 previously declared here\n   18 |     bool is_last_beat\
    \ = false;\n      |          ^~~~~~~~~~~~\n/tmp/tmpoa4yy_84.cpp:21:10: error:\
    \ redeclaration of \u2018bool is_last_note\u2019\n   21 |     bool is_last_note\
    \ = false;\n      |          ^~~~~~~~~~~~\n/tmp/tmpoa4yy_84.cpp:17:10: note: \u2018\
    bool is_last_note\u2019 previously declared here\n   17 |     bool is_last_note\
    \ = false;\n      |          ^~~~~~~~~~~~\n/tmp/tmpoa4yy_84.cpp:22:10: error:\
    \ redeclaration of \u2018bool is_last_beat\u2019\n   22 |     bool is_last_beat\
    \ = false;\n      |          ^~~~~~~~~~~~\n/tmp/tmpoa4yy_84.cpp:18:10: note: \u2018\
    bool is_last_beat\u2019 previously declared here\n   18 |     bool is_last_beat\
    \ = false;\n      |          ^~~~~~~~~~~~\n/tmp/tmpoa4yy_84.cpp:23:10: error:\
    \ redeclaration of \u2018bool is_last_note\u2019\n   23 |     bool is_last_note\
    \ = false;\n      |          ^~~~~~~~~~~~\n/tmp/tmpoa4yy_84.cpp:17:10: note: \u2018\
    bool is_last_note\u2019 previously declared here\n   17 |     bool is_last_note\
    \ = false;\n      |          ^~~~~~~~~~~~\n/tmp/tmpoa4yy_84.cpp:24:10: error:\
    \ redeclaration of \u2018bool is_last_beat\u2019\n   24 |     bool is_last_beat\
    \ = false;\n      |          ^~~~~~~~~~~~\n/tmp/tmpoa4yy_84.cpp:18:10: note: \u2018\
    bool is_last_beat\u2019 previously declared here\n   18 |     bool is_last_beat\
    \ = false;\n      |          ^~~~~~~~~~~~\n/tmp/tmpoa4yy_84.cpp:25:10: error:\
    \ redeclaration of \u2018bool is_last_note\u2019\n   25 |     bool is_last_note\
    \ = false;\n      |          ^~~~~~~~~~~~\n/tmp/tmpoa4yy_84.cpp:17:10: note:"
  stdout: ''
  timestamp: 1660129744
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    long beat = 0;\n    long note = 0;\n    long last_note = 0;\n  \
    \  long last_beat = 0;\n    long last_beats = 0;\n    long last_beats_cnt = 0;\n\
    \    long last_beats_cnt2 = 0;\n    long last_beats_cnt3 = 0;\n    long last_beats_cnt4\
    \ = 0;\n    long last_beats_cnt5 = 0;\n    long last_beats_cnt6 = 0;\n    long\
    \ last_beats_cnt7 = 0;\n    long last_beats_cnt8 = 0;\n    long last_beats_cnt9\
    \ = 0;\n    long last_beats_cnt10 = 0;\n    long last_beats_cnt11 = 0;\n    long\
    \ last_beats_cnt12 = 0;\n    long last_beats_cnt13 = 0;\n    long last_beats_cnt14\
    \ = 0;\n    long last_beats_cnt15 = 0;\n    long last_beats_cnt16 = 0;\n    long\
    \ last_beats_cnt17 = 0;\n    long last_beats_cnt18 = 0;\n    long last_beats_cnt19\
    \ = 0;\n    long last_beats_cnt20 = 0;\n    long last_beats_cnt21 = 0;\n    long\
    \ last_beats_cnt22 = 0;\n    long last_beats_cnt23 = 0;\n    long last_beats_cnt24\
    \ = 0;\n    long last_beats_cnt25 = 0;\n    long last_beats_cnt26 = 0;\n    long\
    \ last_beats_cnt27 = 0;\n    long last_beats_cnt28 = 0;\n    long last_beats_cnt29\
    \ = 0;\n    long last_beats_cnt30 = 0;\n    long last_beats_cnt31 = 0;\n    long\
    \ last_beats_cnt32 = 0;\n    long last_beats_cnt33 = 0;\n    long last_beats_cnt34\
    \ = 0;\n    long last_beats_cnt35 = 0;\n    long last_beats_cnt36 = 0;\n    long\
    \ last_beats_cnt37 = 0;\n    long last_beats_cnt38 = 0;\n    long last_beats_cnt39\
    \ = 0;\n    long last_beats_cnt40 = 0;\n    long last_beats_cnt41 = 0;\n    long\
    \ last_beats_cnt42 = 0;\n    long last_beats_cnt43 = 0;\n    long last_beats_cnt44\
    \ = 0;\n    long last_beats_cnt45 = 0;\n    long last_beats_cnt46 = 0;\n    long\
    \ last_beats_cnt47 = 0;\n    long last_beats_cnt48 = 0;\n    long last_beats_cnt49\
    \ = 0;\n    long last_beats_cnt50 = 0;\n    long last_beats_cnt51 = 0;\n    long\
    \ last_beats_cnt52 = 0;\n    long last_beats_cnt53 = 0;\n    long last_beats_\n\
    }\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"\
    )) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5jqma_sn.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp5jqma_sn.cpp:71:1: error: expected initializer before \u2018}\u2019\
    \ token\n   71 | }\n      | ^\n/tmp/tmp5jqma_sn.cpp:71:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129743
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long rest = 0;\n    long\
    \ rests = 0;\n    long rests_rest = 0;\n    long rests_rests = 0;\n    long rests_rests_rest\
    \ = 0;\n    long rests_rests_rests = 0;\n    long rests_rests_rests_rest = 0;\n\
    \    long rests_rests_rests_rests = 0;\n    long rests_rests_rests_rests_rest\
    \ = 0;\n    long rests_rests_rests_rests_rests = 0;\n    long rests_rests_rests_rests_rests_rest\
    \ = 0;\n    long rests_rests_rests_rests_rests_rests = 0;\n    long rests_rests_rests_rests_rests_rests_rest\
    \ = 0;\n    long rests_rests_rests_rests_rests_rests_rests = 0;\n    long rests_rests_rests_rests_rests_rests_rests_rest\
    \ = 0;\n    long rests_rests_rests_rests_rests_rests_rests_rests = 0;\n    long\
    \ rests_rests_rests_rests_rests_rests_rests_rests_rest = 0;\n    long rests_rests_rests_rests_rests_rests_rests_rests_rests\
    \ = 0;\n    long rests_rests_rests_rests_rests_rests_rests_rests_rests_rest =\
    \ 0;\n    long rests_rests_rests_rests_rests_rests_rests_rests_rests_rests = 0;\n\
    \    long rests_rests_rests_rests_rests_rests_rests_rests_rests_rests_rest = 0;\n\
    \    long rests_rests_rests_rests_rests_rests_rests_rests_rests_rests_rests =\
    \ 0;\n    long rests_rests_rests_rests_rests_rests_rests_rests_rests_rests_rests_rest\
    \ = 0;\n    long rests_rests_rests_rests_rests_rests_rests_rests_rests_rests_rests_rests\
    \ = 0;\n    long rests_rests_rests_rests_rests_rests_rests_rests_rests_rests_rests_rests_rest\
    \ = 0;\n    long rests_rests_rests_rests_rests_rests_rests_rests_rests_rests_rests_rests_rests\
    \ = 0;\n    long rests_rests_rests_rests_rests_rests_rests_rests_rests_rests_rests_rests_rests_rest\
    \ = 0;\n    long rests_rests_rests_rests_rests_rests_rests_rests_rests_rests_\n\
    }\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"\
    )) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwpn8i8eu.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpwpn8i8eu.cpp:42:1: error: expected initializer before \u2018}\u2019\
    \ token\n   42 | }\n      | ^\n/tmp/tmpwpn8i8eu.cpp:42:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129744
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    long beat = 0;\n    long last_beat = 0;\n    long note = 0;\n  \
    \  long last_note = 0;\n    long last_note_duration = 0;\n    long note_duration\
    \ = 0;\n    long note_duration2 = 0;\n    long note_duration3 = 0;\n    long note_duration4\
    \ = 0;\n    long note_duration5 = 0;\n    long note_duration6 = 0;\n    long note_duration7\
    \ = 0;\n    long note_duration8 = 0;\n    long note_duration9 = 0;\n    long note_duration10\
    \ = 0;\n    long note_duration11 = 0;\n    long note_duration12 = 0;\n    long\
    \ note_duration13 = 0;\n    long note_duration14 = 0;\n    long note_duration15\
    \ = 0;\n    long note_duration16 = 0;\n    long note_duration17 = 0;\n    long\
    \ note_duration18 = 0;\n    long note_duration19 = 0;\n    long note_duration20\
    \ = 0;\n    long note_duration21 = 0;\n    long note_duration22 = 0;\n    long\
    \ note_duration23 = 0;\n    long note_duration24 = 0;\n    long note_duration25\
    \ = 0;\n    long note_duration26 = 0;\n    long note_duration27 = 0;\n    long\
    \ note_duration28 = 0;\n    long note_duration29 = 0;\n    long note_duration30\
    \ = 0;\n    long note_duration31 = 0;\n    long note_duration32 = 0;\n    long\
    \ note_duration33 = 0;\n    long note_duration34 = 0;\n    long note_duration35\
    \ = 0;\n    long note_duration36 = 0;\n    long note_duration37 = 0;\n    long\
    \ note_duration38 = 0;\n    long note_duration39 = 0;\n    long note_duration40\
    \ = 0;\n    long note_duration41 = 0;\n    long note_duration42 = 0;\n    long\
    \ note_duration43 = 0;\n    long note_duration44 = 0;\n    long note_duration45\
    \ = 0;\n    long note_duration46 = 0;\n    long note_duration47 = 0;\n    long\
    \ note_duration48 = 0;\n    long note_duration49 = 0;\n    long note_duration50\
    \ = 0;\n    long note_duration51 = 0;\n    long note_duration52 = 0;\n    long\
    \ note_duration53 = 0;\n    long note_duration54 = 0;\n    long note_duration55\
    \ = 0;\n    long note_duration56 = 0;\n    long note_duration57 = 0;\n    long\
    \ note_duration58 = 0;\n    long note_duration59 = 0;\n    long note_duration60\
    \ = 0;\n    long note_duration61 = 0;\n    long note_duration62 = 0;\n    long\
    \ note_duration63 = 0;\n    long note_duration64 = 0;\n    long note_duration65\
    \ = 0;\n    long note_duration66 = 0;\n    long note_duration67 = 0;\n    long\
    \ note_duration68 = 0;\n    long note_duration69\n}\nint main() {\n    auto candidate\
    \ = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n  \
    \  assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4,\
    \ (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6fmsndj3.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp6fmsndj3.cpp:86:1: error: expected initializer before \u2018}\u2019\
    \ token\n   86 | }\n      | ^\n/tmp/tmp6fmsndj3.cpp:86:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129744
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Your code here\n    std::vector<long> beats;\n    std::string note;\n    long\
    \ beat = 0;\n    long rest = 0;\n    long rests = 0;\n    long rests_counter =\
    \ 0;\n    long rests_counter2 = 0;\n    long rests_counter3 = 0;\n    long rests_counter4\
    \ = 0;\n    long rests_counter5 = 0;\n    long rests_counter6 = 0;\n    long rests_counter7\
    \ = 0;\n    long rests_counter8 = 0;\n    long rests_counter9 = 0;\n    long rests_counter10\
    \ = 0;\n    long rests_counter11 = 0;\n    long rests_counter12 = 0;\n    long\
    \ rests_counter13 = 0;\n    long rests_counter14 = 0;\n    long rests_counter15\
    \ = 0;\n    long rests_counter16 = 0;\n    long rests_counter17 = 0;\n    long\
    \ rests_counter18 = 0;\n    long rests_counter19 = 0;\n    long rests_counter20\
    \ = 0;\n    long rests_counter21 = 0;\n    long rests_counter22 = 0;\n    long\
    \ rests_counter23 = 0;\n    long rests_counter24 = 0;\n    long rests_counter25\
    \ = 0;\n    long rests_counter26 = 0;\n    long rests_counter27 = 0;\n    long\
    \ rests_counter28 = 0;\n    long rests_counter29 = 0;\n    long rests_counter30\
    \ = 0;\n    long rests_counter31 = 0;\n    long rests_counter32 = 0;\n    long\
    \ rests_counter33 = 0;\n    long rests_counter34 = 0;\n    long rests_counter35\
    \ = 0;\n    long rests_counter36 = 0;\n    long rests_counter37 = 0;\n    long\
    \ rests_counter38 = 0;\n    long rests_counter39 = 0;\n    long rests_counter40\
    \ = 0;\n    long rests_counter41 = 0;\n    long rests_counter42 = 0;\n    long\
    \ rests_counter43 = 0;\n    long rests_counter44 = 0;\n    long rests_counter45\
    \ = 0;\n    long rests_counter46 = 0;\n    long rests_counter47 = 0;\n    long\
    \ rests_counter48 = 0;\n    long rests_counter49 = 0;\n    long rests_counter50\
    \ = 0;\n    long rests_counter51 = 0;\n    long rests_counter52 = 0;\n    long\
    \ rests_counter53 = 0;\n    long rests_counter54 = 0;\n    long rests_counter55\
    \ = 0;\n    long rests_counter56 = 0;\n    long rests_counter57 = 0;\n    long\
    \ rests_counter58 = 0;\n    long rests_counter59 = 0;\n    long rests_counter60\
    \ = 0;\n    long rests_counter\n}\nint main() {\n    auto candidate = parse_music;\n\
    \    assert(candidate((\"\")) == (std::vector<long>()));\n    assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \   assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1, (long)1,\
    \ (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\")) == (std::vector<long>({(long)2,\
    \ (long)2, (long)1, (long)1, (long)4, (long)4, (long)4, (long)4})));\n    assert(candidate((\"\
    o| .| o| .| o o| o o|\")) == (std::vector<long>({(long)2, (long)1, (long)2, (long)1,\
    \ (long)4, (long)2, (long)4, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpb3lxdunz.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpb3lxdunz.cpp:78:1: error: expected initializer before \u2018}\u2019\
    \ token\n   78 | }\n      | ^\n/tmp/tmpb3lxdunz.cpp:78:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129744
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    long beat = 0;\n    long note = 0;\n    long note_count = 0;\n \
    \   long note_length = 0;\n    long note_length_count = 0;\n    long note_length_index\
    \ = 0;\n    long note_length_index2 = 0;\n    long note_length_index3 = 0;\n \
    \   long note_length_index4 = 0;\n    long note_length_index5 = 0;\n    long note_length_index6\
    \ = 0;\n    long note_length_index7 = 0;\n    long note_length_index8 = 0;\n \
    \   long note_length_index9 = 0;\n    long note_length_index10 = 0;\n    long\
    \ note_length_index11 = 0;\n    long note_length_index12 = 0;\n    long note_length_index13\
    \ = 0;\n    long note_length_index14 = 0;\n    long note_length_index15 = 0;\n\
    \    long note_length_index16 = 0;\n    long note_length_index17 = 0;\n    long\
    \ note_length_index18 = 0;\n    long note_length_index19 = 0;\n    long note_length_index20\
    \ = 0;\n    long note_length_index21 = 0;\n    long note_length_index22 = 0;\n\
    \    long note_length_index23 = 0;\n    long note_length_index24 = 0;\n    long\
    \ note_length_index25 = 0;\n    long note_length_index26 = 0;\n    long note_length_index27\
    \ = 0;\n    long note_length_index28 = 0;\n    long note_length_index29 = 0;\n\
    \    long note_length_index30 = 0;\n    long note_length_index31 = 0;\n    long\
    \ note_length_index32 = 0;\n    long note_length_index33 = 0;\n    long note_length_index34\
    \ = 0;\n    long note_length_index35 = 0;\n    long note_length_index36 = 0;\n\
    \    long note_length_index37 = 0;\n    long note_length_index38 = 0;\n    long\
    \ note_length_index39 = 0;\n    long note_length_index40 = 0;\n    long note_length_index41\
    \ = 0;\n    long note_length_index42 = 0;\n    long note_length_index43 = 0;\n\
    \    long note_length_index44 = 0;\n    long note_length_index45 = 0;\n    long\
    \ note_length_index46 = 0;\n    long note_length_index47 = 0;\n    long note_length_index48\
    \ = 0;\n    long note_length_index49 = 0;\n    long note_length_index50 = 0;\n\
    \    long note_length_index51 = 0;\n    long note_length_index52 = 0;\n    long\
    \ note_length_index53 = 0;\n    long note_length_index54 = 0;\n    long note_length_index55\
    \ = 0;\n    long note_length_index56 = 0;\n    long note_length_index57 = 0;\n\
    \    long note_length_index58 = 0;\n    long note_length_index59 = 0;\n    long\
    \ note_length_index60 = 0;\n    \n}\nint main() {\n    auto candidate = parse_music;\n\
    \    assert(candidate((\"\")) == (std::vector<long>()));\n    assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \   assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1, (long)1,\
    \ (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\")) == (std::vector<long>({(long)2,\
    \ (long)2, (long)1, (long)1, (long)4, (long)4, (long)4, (long)4})));\n    assert(candidate((\"\
    o| .| o| .| o o| o o|\")) == (std::vector<long>({(long)2, (long)1, (long)2, (long)1,\
    \ (long)4, (long)2, (long)4, (long)2})));\n}\n"
  status: Exception
  stderr: 'tmp98x6tjqt: /tmp/tmp98x6tjqt.cpp:81: int main(): Assertion `candidate((""))
    == (std::vector<long>())'' failed.

    '
  stdout: ''
  timestamp: 1660129744
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long beats = 0;\n   \
    \ long last_beat = 0;\n    long last_beats = 0;\n    bool is_note = false;\n \
    \   for (char c : music_string) {\n        if (c == 'o') {\n            is_note\
    \ = true;\n            beat = 0;\n            beats = 0;\n            last_beat\
    \ = 0;\n            last_beats = 0;\n            note = \"\";\n        } else\
    \ if (c == 'o|') {\n            is_note = true;\n            beat = 0;\n     \
    \       beats = 0;\n            last_beat = 0;\n            last_beats = 0;\n\
    \            note = \"\";\n        } else if (c == '.|') {\n            is_note\
    \ = false;\n            beat = 0;\n            beats = 0;\n            last_beat\
    \ = 0;\n            last_beats = 0;\n            note = \"\";\n        } else\
    \ {\n            if (is_note) {\n                note += c;\n            } else\
    \ {\n                beat += 1;\n                beats += 1;\n            }\n\
    \        }\n    }\n    beats.push_back(beat);\n    beats.push_back(beats);\n \
    \   beats.push_back(last_beat);\n    beats.push_back(last_beats);\n    return\
    \ beats;\n}\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\
    \")) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3_m2ls90.cpp:26:25: warning: multi-character character constant\
    \ [-Wmultichar]\n   26 |         } else if (c == 'o|') {\n      |            \
    \             ^~~~\n/tmp/tmp3_m2ls90.cpp:33:25: warning: multi-character character\
    \ constant [-Wmultichar]\n   33 |         } else if (c == '.|') {\n      |   \
    \                      ^~~~\n/tmp/tmp3_m2ls90.cpp: In function \u2018std::vector<long\
    \ int> parse_music(std::string)\u2019:\n/tmp/tmp3_m2ls90.cpp:14:10: error: conflicting\
    \ declaration \u2018long int beats\u2019\n   14 |     long beats = 0;\n      |\
    \          ^~~~~\n/tmp/tmp3_m2ls90.cpp:11:23: note: previous declaration as \u2018\
    std::vector<long int> beats\u2019\n   11 |     std::vector<long> beats;\n    \
    \  |                       ^~~~~\n/tmp/tmp3_m2ls90.cpp:22:21: error: no match\
    \ for \u2018operator=\u2019 (operand types are \u2018std::vector<long int>\u2019\
    \ and \u2018int\u2019)\n   22 |             beats = 0;\n      |              \
    \       ^\nIn file included from /usr/include/c++/9/vector:72,\n             \
    \    from /usr/include/c++/9/functional:62,\n                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n\
    \                 from /usr/include/c++/9/algorithm:71,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n                 from\
    \ /tmp/tmp3_m2ls90.cpp:2:\n/usr/include/c++/9/bits/vector.tcc:198:5: note: candidate:\
    \ \u2018std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(const std::vector<_Tp,\
    \ _Alloc>&) [with _Tp = long int; _Alloc = std::allocator<long int>]\u2019\n \
    \ 198 |     vector<_Tp, _Alloc>::\n      |     ^~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/vector.tcc:199:42:\
    \ note:   no known conversion for argument 1 from \u2018int\u2019 to \u2018const\
    \ std::vector<long int>&\u2019\n  199 |     operator=(const vector<_Tp, _Alloc>&\
    \ __x)\n      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\nIn file included\
    \ from /usr/include/c++/9/vector:67,\n                 from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/inc"
  stdout: ''
  timestamp: 1660129744
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    bool is_note = false;\n    for (char c : music_string) {\n        if (c ==\
    \ 'o') {\n            note = \"o\";\n            is_note = true;\n           \
    \ beat = 0;\n            last_beat = 0;\n        } else if (c == '|') {\n    \
    \        note = \"o|\";\n            is_note = true;\n            beat = 0;\n\
    \            last_beat = 0;\n        } else if (c == '.') {\n            note\
    \ = \".|\";\n            is_note = true;\n            beat = 0;\n            last_beat\
    \ = 0;\n        } else if (is_note) {\n            if (c == '|') {\n         \
    \       beat += 1;\n            } else if (c == '.') {\n                beat +=\
    \ 2;\n            } else if (c == 'o') {\n                beat += 4;\n       \
    \     }\n            last_beat = beat;\n            is_note = false;\n       \
    \ }\n    }\n    beats.push_back(beat);\n    return beats;\n}\nint main() {\n \
    \   auto candidate = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n\
    \    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: Exception
  stderr: 'tmpyue81dpu: /tmp/tmpyue81dpu.cpp:49: int main(): Assertion `candidate((""))
    == (std::vector<long>())'' failed.

    '
  stdout: ''
  timestamp: 1660129744
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    long beat = 0;\n    long last_beat = 0;\n    long last_note = 0;\n\
    \    long note = 0;\n    long note_length = 0;\n    long note_lengths[4] = { 0,\
    \ 0, 0, 0, 0 };\n    long note_lengths_sum = 0;\n    long note_lengths_sums[4]\
    \ = { 0, 0, 0, 0, 0 };\n    long note_lengths_sums_sum = 0;\n    long note_lengths_sums_sums[4]\
    \ = { 0, 0, 0, 0, 0 };\n    long note_lengths_sums_sums_sum = 0;\n    long note_lengths_sums_sums_sums[4]\
    \ = { 0, 0, 0, 0, 0 };\n    long note_lengths_sums_sums_sums_sum = 0;\n    long\
    \ note_lengths_sums_sums_sums_sums[4] = { 0, 0, 0, 0, 0 };\n    long note_lengths_sums_sums_sums_sums_sum\
    \ = 0;\n    long note_lengths_sums_sums_sums_sums_sums[4] = { 0, 0, 0, 0, 0 };\n\
    \    long note_lengths_sums_sums_sums_sums_sums_sum = 0;\n    long note_lengths_sums_sums_sums_sums_sums_sums[4]\
    \ = { 0, 0, 0, 0, 0 };\n    long note_lengths_sums_sums_sums_sums_sums_sums_sum\
    \ = 0;\n    long note_lengths_sums_sums_sums_sums_sums_sums_sums[4] = { 0, 0,\
    \ 0, 0, 0 };\n    long note_lengths_sums_sums_sums_sums_sums_sums_sums_sum = 0;\n\
    \    long note_lengths_sums_sums_sums_sums_sums_sums_sums_sums[4] = { 0, 0, 0,\
    \ 0, 0 };\n    long note_lengths_sums_sums_sums_sums_sums_sums_sums_sums_sum =\
    \ 0;\n    long note_lengths_sums_sums_sums_sums_sums_sums_sums_sums_sums[4] =\
    \ { 0, 0, 0, 0, 0 };\n    long note_lengths_sums_sums_sums_sums_sums_sums_sums_sums_sums_sum\
    \ = 0;\n    long note_lengths_sums_sums_sums_sums_sums_sums_sums_sums_sums_sums[4]\
    \ = { 0, 0, 0, 0, 0 };\n    long note_lengths_sums_sums_sums_sums_sums_sums_sums_sums_sums_sums_sum\
    \ = 0;\n    long note_lengths_sums_sums_sums_sums_sums_sums_sums_sums_sums_sums_sums[4]\
    \ = { 0, 0, 0, 0, 0 };\n    long note_\n}\nint main() {\n    auto candidate =\
    \ parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n    assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \   assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1, (long)1,\
    \ (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\")) == (std::vector<long>({(long)2,\
    \ (long)2, (long)1, (long)1, (long)4, (long)4, (long)4, (long)4})));\n    assert(candidate((\"\
    o| .| o| .| o o| o o|\")) == (std::vector<long>({(long)2, (long)1, (long)2, (long)1,\
    \ (long)4, (long)2, (long)4, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpczy7txh1.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpczy7txh1.cpp:17:44: error: too many initializers for \u2018long int\
    \ [4]\u2019\n   17 |     long note_lengths[4] = { 0, 0, 0, 0, 0 };\n      |  \
    \                                          ^\n/tmp/tmpczy7txh1.cpp:19:49: error:\
    \ too many initializers for \u2018long int [4]\u2019\n   19 |     long note_lengths_sums[4]\
    \ = { 0, 0, 0, 0, 0 };\n      |                                              \
    \   ^\n/tmp/tmpczy7txh1.cpp:21:54: error: too many initializers for \u2018long\
    \ int [4]\u2019\n   21 |     long note_lengths_sums_sums[4] = { 0, 0, 0, 0, 0\
    \ };\n      |                                                      ^\n/tmp/tmpczy7txh1.cpp:23:59:\
    \ error: too many initializers for \u2018long int [4]\u2019\n   23 |     long\
    \ note_lengths_sums_sums_sums[4] = { 0, 0, 0, 0, 0 };\n      |               \
    \                                            ^\n/tmp/tmpczy7txh1.cpp:25:64: error:\
    \ too many initializers for \u2018long int [4]\u2019\n   25 |     long note_lengths_sums_sums_sums_sums[4]\
    \ = { 0, 0, 0, 0, 0 };\n      |                                              \
    \                  ^\n/tmp/tmpczy7txh1.cpp:27:69: error: too many initializers\
    \ for \u2018long int [4]\u2019\n   27 |     long note_lengths_sums_sums_sums_sums_sums[4]\
    \ = { 0, 0, 0, 0, 0 };\n      |                                              \
    \                       ^\n/tmp/tmpczy7txh1.cpp:29:74: error: too many initializers\
    \ for \u2018long int [4]\u2019\n   29 |     long note_lengths_sums_sums_sums_sums_sums_sums[4]\
    \ = { 0, 0, 0, 0, 0 };\n      |                                              \
    \                            ^\n/tmp/tmpczy7txh1.cpp:31:79: error: too many initializers\
    \ for \u2018long int [4]\u2019\n   31 |     long note_lengths_sums_sums_sums_sums_sums_sums_sums[4]\
    \ = { 0, 0, 0, 0, 0 };\n      |                                              \
    \                                 ^\n/tmp/tmpczy7txh1.cpp:33:84: error: too many\
    \ initializers for \u2018long int [4]\u2019\n   33 |     long note_lengths_sums_sums_sums_sums_sums_sums_sums_sums[4]\
    \ = { 0, 0, 0, 0, 0 };\n      |   "
  stdout: ''
  timestamp: 1660129744
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    long last_note = 0;\n    long last_note_beat = 0;\n    long note_length =\
    \ 0;\n    long note_length2 = 0;\n    long note_length3 = 0;\n    long note_length4\
    \ = 0;\n    long note_length5 = 0;\n    long note_length6 = 0;\n    long note_length7\
    \ = 0;\n    long note_length8 = 0;\n    long note_length9 = 0;\n    long note_length10\
    \ = 0;\n    long note_length11 = 0;\n    long note_length12 = 0;\n    long note_length13\
    \ = 0;\n    long note_length14 = 0;\n    long note_length15 = 0;\n    long note_length16\
    \ = 0;\n    long note_length17 = 0;\n    long note_length18 = 0;\n    long note_length19\
    \ = 0;\n    long note_length20 = 0;\n    long note_length21 = 0;\n    long note_length22\
    \ = 0;\n    long note_length23 = 0;\n    long note_length24 = 0;\n    long note_length25\
    \ = 0;\n    long note_length26 = 0;\n    long note_length27 = 0;\n    long note_length28\
    \ = 0;\n    long note_length29 = 0;\n    long note_length30 = 0;\n    long note_length31\
    \ = 0;\n    long note_length32 = 0;\n    long note_length33 = 0;\n    long note_length34\
    \ = 0;\n    long note_length35 = 0;\n    long note_length36 = 0;\n    long note_length37\
    \ = 0;\n    long note_length38 = 0;\n    long note_length39 = 0;\n    long note_length40\
    \ = 0;\n    long note_length41 = 0;\n    long note_length42 = 0;\n    long note_length43\
    \ = 0;\n    long note_length44 = 0;\n    long note_length45 = 0;\n    long note_length46\
    \ = 0;\n    long note_length47 = 0;\n    long note_length48 = 0;\n    long note_length49\
    \ = 0;\n    long note_length50 = 0;\n    long note_length51 = 0;\n    long note_length52\
    \ = 0;\n    long note_length53 = 0;\n    long note_length54 = 0;\n    long note_length55\
    \ = 0;\n    long note_length56 = 0;\n    long note_length57 = 0;\n    long note_length58\
    \ = 0;\n    long note_length59 = 0;\n    long note_length60 = 0;\n    long note_length61\
    \ = 0;\n    long note_length62 = 0;\n    long note_length63 = 0;\n    long note_length64\
    \ = 0;\n    long note_length65 = 0;\n    long note_length66 = 0;\n    long note_length67\
    \ = 0;\n    long note_length68 = 0;\n    long note_length69\n}\nint main() {\n\
    \    auto candidate = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n\
    \    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp15oe946b.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp15oe946b.cpp:86:1: error: expected initializer before \u2018}\u2019\
    \ token\n   86 | }\n      | ^\n/tmp/tmp15oe946b.cpp:86:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    long last_note = 0;\n    long note_count = 0;\n    long note_length = 0;\n\
    \    long note_length_count = 0;\n    long note_length_index = 0;\n    long note_length_index2\
    \ = 0;\n    long note_length_index3 = 0;\n    long note_length_index4 = 0;\n \
    \   long note_length_index5 = 0;\n    long note_length_index6 = 0;\n    long note_length_index7\
    \ = 0;\n    long note_length_index8 = 0;\n    long note_length_index9 = 0;\n \
    \   long note_length_index10 = 0;\n    long note_length_index11 = 0;\n    long\
    \ note_length_index12 = 0;\n    long note_length_index13 = 0;\n    long note_length_index14\
    \ = 0;\n    long note_length_index15 = 0;\n    long note_length_index16 = 0;\n\
    \    long note_length_index17 = 0;\n    long note_length_index18 = 0;\n    long\
    \ note_length_index19 = 0;\n    long note_length_index20 = 0;\n    long note_length_index21\
    \ = 0;\n    long note_length_index22 = 0;\n    long note_length_index23 = 0;\n\
    \    long note_length_index24 = 0;\n    long note_length_index25 = 0;\n    long\
    \ note_length_index26 = 0;\n    long note_length_index27 = 0;\n    long note_length_index28\
    \ = 0;\n    long note_length_index29 = 0;\n    long note_length_index30 = 0;\n\
    \    long note_length_index31 = 0;\n    long note_length_index32 = 0;\n    long\
    \ note_length_index33 = 0;\n    long note_length_index34 = 0;\n    long note_length_index35\
    \ = 0;\n    long note_length_index36 = 0;\n    long note_length_index37 = 0;\n\
    \    long note_length_index38 = 0;\n    long note_length_index39 = 0;\n    long\
    \ note_length_index40 = 0;\n    long note_length_index41 = 0;\n    long note_length_index42\
    \ = 0;\n    long note_length_index43 = 0;\n    long note_length_index44 = 0;\n\
    \    long note_length_index45 = 0;\n    long note_length_index46 = 0;\n    long\
    \ note_length_index47 = 0;\n    long note_length_index48 = 0;\n    long note_length_index49\
    \ = 0;\n    long note_length_index50 = 0;\n    long note_length_index51 = 0;\n\
    \    long note_length_index52 = 0;\n    long note_length_index53 = 0;\n    long\
    \ note_length_index54 = 0;\n    long note_length_index55 = 0;\n    long note_length_index56\
    \ = 0;\n    long note_length_index57 = 0;\n    long note_length_index58 = 0;\n\
    \    long note_length_index\n}\nint main() {\n    auto candidate = parse_music;\n\
    \    assert(candidate((\"\")) == (std::vector<long>()));\n    assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \   assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1, (long)1,\
    \ (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\")) == (std::vector<long>({(long)2,\
    \ (long)2, (long)1, (long)1, (long)4, (long)4, (long)4, (long)4})));\n    assert(candidate((\"\
    o| .| o| .| o o| o o|\")) == (std::vector<long>({(long)2, (long)1, (long)2, (long)1,\
    \ (long)4, (long)2, (long)4, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6vyg_0_l.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp6vyg_0_l.cpp:78:1: error: expected initializer before \u2018}\u2019\
    \ token\n   78 | }\n      | ^\n/tmp/tmp6vyg_0_l.cpp:78:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long beats = 0;\n   \
    \ bool is_note = false;\n    for (char c : music_string) {\n        if (c == 'o')\
    \ {\n            is_note = true;\n            beat = 0;\n            beats = 0;\n\
    \        }\n        else if (c == '|') {\n            is_note = true;\n      \
    \      beats = 1;\n        }\n        else if (c == ' ') {\n            is_note\
    \ = false;\n            beat++;\n        }\n        else if (c == '.') {\n   \
    \         is_note = false;\n            beats++;\n        }\n        else if (c\
    \ == 'o|') {\n            is_note = true;\n            beats = 2;\n        }\n\
    \        else if (c == '.|') {\n            is_note = true;\n            beats\
    \ = 4;\n        }\n        else if (c == '|.') {\n            is_note = true;\n\
    \            beats = 8;\n        }\n        else if (c == '|o') {\n          \
    \  is_note = true;\n            beats = 16;\n        }\n        else if (c ==\
    \ 'o|.') {\n            is_note = true;\n            beats = 32;\n        }\n\
    \        else if (c == '.|.') {\n            is_note = true;\n            beats\
    \ = 64;\n        }\n        else if (c == '|.o') {\n            is_note = true;\n\
    \            beats = 128;\n        }\n        else if (c == 'o|.o') {\n      \
    \      is_note = true;\n            beats = 256;\n        }\n        else if (c\
    \ == '.|.o') {\n            is_note = true;\n            beats = 512;\n      \
    \  }\n        else if (c == '|.|') {\n            is_note = true;\n          \
    \  beats = 1024;\n        }\n        else if (c == 'o|.|') {\n            is_note\
    \ = true;\n            beats = 2048;\n        }\n        else if (c == '.|.|')\
    \ {\n            is_note = true;\n            beats = 4096;\n        }\n     \
    \   else if (c == '|.o|') {\n            is_note = true;\n            beats =\
    \ 8192;\n        }\n        else if (c == 'o|.o|') {\n            is_note = true;\n\
    \            beats = 16384;\n        }\n        else if (c == '.|.o|') {\n   \
    \         is_note = true;\n            beats = 32768;\n        }\n        else\
    \ if (c == '|.|.') {\n            is_note = true;\n            beats = 65536;\n\
    \        }\n        else if (c == 'o|.|.') {\n            is_note = true;\n  \
    \          beats = 131072;\n        }\n        else if (c == '.|.|.') {\n    \
    \        is_note = true;\n            beats = 262144;\n        }\n        else\
    \ if (c == '|.o|.') {\n            is_note = true;\n            beats = 524288;\n\
    \        }\n        else if (c == 'o|.o|.') {\n            is_note = true;\n \
    \           beats = \n}\nint main() {\n    auto candidate = parse_music;\n   \
    \ assert(candidate((\"\")) == (std::vector<long>()));\n    assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \   assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1, (long)1,\
    \ (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\")) == (std::vector<long>({(long)2,\
    \ (long)2, (long)1, (long)1, (long)4, (long)4, (long)4, (long)4})));\n    assert(candidate((\"\
    o| .| o| .| o o| o o|\")) == (std::vector<long>({(long)2, (long)1, (long)2, (long)1,\
    \ (long)4, (long)2, (long)4, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplemfudgm.cpp:34:23: warning: multi-character character constant\
    \ [-Wmultichar]\n   34 |         else if (c == 'o|') {\n      |              \
    \         ^~~~\n/tmp/tmplemfudgm.cpp:38:23: warning: multi-character character\
    \ constant [-Wmultichar]\n   38 |         else if (c == '.|') {\n      |     \
    \                  ^~~~\n/tmp/tmplemfudgm.cpp:42:23: warning: multi-character\
    \ character constant [-Wmultichar]\n   42 |         else if (c == '|.') {\n  \
    \    |                       ^~~~\n/tmp/tmplemfudgm.cpp:46:23: warning: multi-character\
    \ character constant [-Wmultichar]\n   46 |         else if (c == '|o') {\n  \
    \    |                       ^~~~\n/tmp/tmplemfudgm.cpp:50:23: warning: multi-character\
    \ character constant [-Wmultichar]\n   50 |         else if (c == 'o|.') {\n \
    \     |                       ^~~~~\n/tmp/tmplemfudgm.cpp:54:23: warning: multi-character\
    \ character constant [-Wmultichar]\n   54 |         else if (c == '.|.') {\n \
    \     |                       ^~~~~\n/tmp/tmplemfudgm.cpp:58:23: warning: multi-character\
    \ character constant [-Wmultichar]\n   58 |         else if (c == '|.o') {\n \
    \     |                       ^~~~~\n/tmp/tmplemfudgm.cpp:62:23: warning: multi-character\
    \ character constant [-Wmultichar]\n   62 |         else if (c == 'o|.o') {\n\
    \      |                       ^~~~~~\n/tmp/tmplemfudgm.cpp:66:23: warning: multi-character\
    \ character constant [-Wmultichar]\n   66 |         else if (c == '.|.o') {\n\
    \      |                       ^~~~~~\n/tmp/tmplemfudgm.cpp:70:23: warning: multi-character\
    \ character constant [-Wmultichar]\n   70 |         else if (c == '|.|') {\n \
    \     |                       ^~~~~\n/tmp/tmplemfudgm.cpp:74:23: warning: multi-character\
    \ character constant [-Wmultichar]\n   74 |         else if (c == 'o|.|') {\n\
    \      |                       ^~~~~~\n/tmp/tmplemfudgm.cpp:78:23: warning: multi-character\
    \ character constant [-Wmultichar]\n   78 |         else if (c == '.|.|') {\n\
    \      |                       ^~~~~~\n/tmp/tmplemfudgm.cpp:82:23: warning: multi-character\
    \ character constant [-Wmultichar]\n   82 |         else if (c == "
  stdout: ''
  timestamp: 1660129744
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    long last_note = 0;\n    long last_note_count = 0;\n    long note_length\
    \ = 0;\n    long note_length_count = 0;\n    long note_length_index = 0;\n   \
    \ long note_length_index_count = 0;\n    long note_length_index_count_index =\
    \ 0;\n    long note_length_index_count_index_count = 0;\n    long note_length_index_count_index_count_index\
    \ = 0;\n    long note_length_index_count_index_count_index_count = 0;\n    long\
    \ note_length_index_count_index_count_index_count_index = 0;\n    long note_length_index_count_index_count_index_count_index_count\
    \ = 0;\n    long note_length_index_count_index_count_index_count_index_count_index\
    \ = 0;\n    long note_length_index_count_index_count_index_count_index_count_index_count\
    \ = 0;\n    long note_length_index_count_index_count_index_count_index_count_index_count_index\
    \ = 0;\n    long note_length_index_count_index_count_index_count_index_count_index_count_index_count\
    \ = 0;\n    long note_length_index_count_index_count_index_count_index_count_index_count_index_count_index\
    \ = 0;\n    long note_length_index_count_index_count_index_count_index_count_index_count_index_count_index\
    \ = 0;\n    long note_length_index_count_index_count_index_count_index_count_index_count_index_count_index_count\
    \ = 0;\n    long note_length_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index\
    \ = 0;\n    long note_length_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index\
    \ = 0;\n    long note_length_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index\
    \ = 0;\n    long note_length_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count\
    \ = 0;\n    long note_length_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index\
    \ = 0;\n    long note_length_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index\
    \ = 0;\n    long note_length_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count\
    \ = 0;\n    long note_length_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index\
    \ = 0;\n    long note_length_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index\
    \ = 0;\n    long note_length_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index\
    \ = 0;\n    long note_length_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count\
    \ = 0;\n    long note_length_index_count_index_\n}\nint main() {\n    auto candidate\
    \ = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n  \
    \  assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4,\
    \ (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9q2lbcd4.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp9q2lbcd4.cpp:32:10: error: redeclaration of \u2018long int note_length_index_count_index_count_index_count_index_count_index_count_index_count_index\u2019\
    \n   32 |     long note_length_index_count_index_count_index_count_index_count_index_count_index_count_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp9q2lbcd4.cpp:31:10: note: \u2018long int note_length_index_count_index_count_index_count_index_count_index_count_index_count_index\u2019\
    \ previously declared here\n   31 |     long note_length_index_count_index_count_index_count_index_count_index_count_index_count_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp9q2lbcd4.cpp:35:10: error: redeclaration of \u2018long int note_length_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index\u2019\
    \n   35 |     long note_length_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp9q2lbcd4.cpp:34:10: note: \u2018long int note_length_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index\u2019\
    \ previously declared here\n   34 |     long note_length_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp9q2lbcd4.cpp:36:10: error: redeclaration of \u2018long int note_length_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index\u2019\
    \n   36 |     long note_length_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
  stdout: ''
  timestamp: 1660129744
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    long last_note = 0;\n    long last_note_length = 0;\n    long note_length\
    \ = 0;\n    long note_lengths[4] = {0};\n    long note_lengths_sum = 0;\n    long\
    \ note_lengths_sums[4] = {0};\n    long note_lengths_sums_sum = 0;\n    long note_lengths_sums_sums[4]\
    \ = {0};\n    long note_lengths_sums_sums_sum = 0;\n    long note_lengths_sums_sums_sums[4]\
    \ = {0};\n    long note_lengths_sums_sums_sums_sum = 0;\n    long note_lengths_sums_sums_sums_sums[4]\
    \ = {0};\n    long note_lengths_sums_sums_sums_sums_sum = 0;\n    long note_lengths_sums_sums_sums_sums_sums[4]\
    \ = {0};\n    long note_lengths_sums_sums_sums_sums_sums_sum = 0;\n    long note_lengths_sums_sums_sums_sums_sums_sums[4]\
    \ = {0};\n    long note_lengths_sums_sums_sums_sums_sums_sums_sum = 0;\n    long\
    \ note_lengths_sums_sums_sums_sums_sums_sums_sums[4] = {0};\n    long note_lengths_sums_sums_sums_sums_sums_sums_sums_sum\
    \ = 0;\n    long note_lengths_sums_sums_sums_sums_sums_sums_sums_sums[4] = {0};\n\
    \    long note_lengths_sums_sums_sums_sums_sums_sums_sums_sums_sum = 0;\n    long\
    \ note_lengths_sums_sums_sums_sums_sums_sums_sums_sums_sums[4] = {0};\n    long\
    \ note_lengths_sums_sums_sums_sums_sums_sums_sums_sums_sums_sum = 0;\n    long\
    \ note_lengths_sums_sums_sums_sums_sums_sums_sums_sums_sums_sums[4] = {0};\n \
    \   long note_lengths_sums_sums_sums_sums_sums_sums_sums_sums_sums_sums_sum =\
    \ 0;\n    long note_lengths_sums_sums_sums_sums_sums_sums_sums_sums_sums_sums_sums[4]\
    \ = {0};\n    long note_lengths_sums_sums_sums_sums_sums_sums_sums_sum\n}\nint\
    \ main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\")) ==\
    \ (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplvcttq_w.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmplvcttq_w.cpp:42:1: error: expected initializer before \u2018}\u2019\
    \ token\n   42 | }\n      | ^\n/tmp/tmplvcttq_w.cpp:42:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129744
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long current_beat = 0;\n\
    \    long current_note = 0;\n    long current_note_length = 0;\n    long current_note_length2\
    \ = 0;\n    long current_note_length3 = 0;\n    long current_note_length4 = 0;\n\
    \    long current_note_length5 = 0;\n    long current_note_length6 = 0;\n    long\
    \ current_note_length7 = 0;\n    long current_note_length8 = 0;\n    long current_note_length9\
    \ = 0;\n    long current_note_length10 = 0;\n    long current_note_length11 =\
    \ 0;\n    long current_note_length12 = 0;\n    long current_note_length13 = 0;\n\
    \    long current_note_length14 = 0;\n    long current_note_length15 = 0;\n  \
    \  long current_note_length16 = 0;\n    long current_note_length17 = 0;\n    long\
    \ current_note_length18 = 0;\n    long current_note_length19 = 0;\n    long current_note_length20\
    \ = 0;\n    long current_note_length21 = 0;\n    long current_note_length22 =\
    \ 0;\n    long current_note_length23 = 0;\n    long current_note_length24 = 0;\n\
    \    long current_note_length25 = 0;\n    long current_note_length26 = 0;\n  \
    \  long current_note_length27 = 0;\n    long current_note_length28 = 0;\n    long\
    \ current_note_length29 = 0;\n    long current_note_length30 = 0;\n    long current_note_length31\
    \ = 0;\n    long current_note_length32 = 0;\n    long current_note_length33 =\
    \ 0;\n    long current_note_length34 = 0;\n    long current_note_length35 = 0;\n\
    \    long current_note_length36 = 0;\n    long current_note_length37 = 0;\n  \
    \  long current_note_length38 = 0;\n    long current_note_length39 = 0;\n    long\
    \ current_note_length40 = 0;\n    long current_note_length41 = 0;\n    long current_note_length42\
    \ = 0;\n    long current_note_length43 = 0;\n    long current_note_length44 =\
    \ 0;\n    long current_note_length45 = 0;\n    long current_note_length46 = 0;\n\
    \    long current_note_length47 = 0;\n    long current_note_length48 = 0;\n  \
    \  long current_note_length49 = 0;\n    long current_note_length50 = 0;\n    long\
    \ current_note_length51 = 0;\n    long current_note_length52 = 0;\n    long current_note_length53\
    \ = 0;\n    long current_note_length54 = 0;\n    long current_note_length55 =\
    \ 0;\n    long current_note_length56 = 0;\n    long current_note_length57 = 0;\n\
    \    long current_note_length58 = 0;\n    long current_note_length59 = 0;\n  \
    \  long current_note_length60 = 0;\n    long current_note_length61 = 0;\n\n}\n\
    int main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"))\
    \ == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: Exception
  stderr: 'tmpt3bebbui: /tmp/tmpt3bebbui.cpp:81: int main(): Assertion `candidate((""))
    == (std::vector<long>())'' failed.

    '
  stdout: ''
  timestamp: 1660129738
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    long beat = 0;\n    long note = 0;\n    long last_note = 0;\n  \
    \  long last_beat = 0;\n    long last_beats = 0;\n    long last_beats_max = 0;\n\
    \    long last_beats_min = 0;\n    long last_beats_avg = 0;\n    long last_beats_sum\
    \ = 0;\n    long last_beats_count = 0;\n    long last_beats_count_max = 0;\n \
    \   long last_beats_count_min = 0;\n    long last_beats_count_avg = 0;\n    long\
    \ last_beats_count_sum = 0;\n    long last_beats_count_count = 0;\n    long last_beats_count_count_max\
    \ = 0;\n    long last_beats_count_count_min = 0;\n    long last_beats_count_count_avg\
    \ = 0;\n    long last_beats_count_count_sum = 0;\n    long last_beats_count_count_count\
    \ = 0;\n    long last_beats_count_count_count_max = 0;\n    long last_beats_count_count_count_min\
    \ = 0;\n    long last_beats_count_count_count_avg = 0;\n    long last_beats_count_count_count_sum\
    \ = 0;\n    long last_beats_count_count_count_count = 0;\n    long last_beats_count_count_count_count_max\
    \ = 0;\n    long last_beats_count_count_count_count_min = 0;\n    long last_beats_count_count_count_count_avg\
    \ = 0;\n    long last_beats_count_count_count_count_sum = 0;\n    long last_beats_count_count_count_count_count\
    \ = 0;\n    long last_beats_count_count_count_count_count_max = 0;\n    long last_beats_count_count_count_count_min\
    \ = 0;\n    long last_beats_count_count_count_count_avg = 0;\n    long last_beats_count_count_count_count_sum\
    \ = 0;\n    long last_beats_count_count_count_count_count = 0;\n    long last_beats_count_count_count_count_count_max\
    \ = 0;\n    long last_beats_count_count_count_count_count_min = 0;\n    long last_beats_count_count_count_count_count_count_avg\
    \ = 0;\n    long last_beats_count_count_count_count_count_sum = 0;\n    long last_beats_count_count_count_count_count_count_count\
    \ = 0;\n    long last_beats_count_count_count_count_count_count_count_max = 0;\n\
    \    long last_beats_count_count_count_count_count_count_min = 0;\n    long last_beats_count_count_count_count_count_count_avg\
    \ = 0;\n    long last_beats_count_count_count_count_count_count_sum = 0;\n   \
    \ long last_beats_count_count_count_count_count_count_count = 0;\n    long last_beats_count_count_count_count_count_count_count_max\
    \ = 0;\n    long last_beats_count_count_count_count_count_count_count_min = 0;\n\
    \    long last_beats_count_\n}\nint main() {\n    auto candidate = parse_music;\n\
    \    assert(candidate((\"\")) == (std::vector<long>()));\n    assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \   assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1, (long)1,\
    \ (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\")) == (std::vector<long>({(long)2,\
    \ (long)2, (long)1, (long)1, (long)4, (long)4, (long)4, (long)4})));\n    assert(candidate((\"\
    o| .| o| .| o o| o o|\")) == (std::vector<long>({(long)2, (long)1, (long)2, (long)1,\
    \ (long)4, (long)2, (long)4, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp3mt4ci0.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpp3mt4ci0.cpp:43:10: error: redeclaration of \u2018long int last_beats_count_count_count_count_min\u2019\
    \n   43 |     long last_beats_count_count_count_count_min = 0;\n      |      \
    \    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpp3mt4ci0.cpp:38:10: note:\
    \ \u2018long int last_beats_count_count_count_count_min\u2019 previously declared\
    \ here\n   38 |     long last_beats_count_count_count_count_min = 0;\n      |\
    \          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpp3mt4ci0.cpp:44:10:\
    \ error: redeclaration of \u2018long int last_beats_count_count_count_count_avg\u2019\
    \n   44 |     long last_beats_count_count_count_count_avg = 0;\n      |      \
    \    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpp3mt4ci0.cpp:39:10: note:\
    \ \u2018long int last_beats_count_count_count_count_avg\u2019 previously declared\
    \ here\n   39 |     long last_beats_count_count_count_count_avg = 0;\n      |\
    \          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpp3mt4ci0.cpp:45:10:\
    \ error: redeclaration of \u2018long int last_beats_count_count_count_count_sum\u2019\
    \n   45 |     long last_beats_count_count_count_count_sum = 0;\n      |      \
    \    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpp3mt4ci0.cpp:40:10: note:\
    \ \u2018long int last_beats_count_count_count_count_sum\u2019 previously declared\
    \ here\n   40 |     long last_beats_count_count_count_count_sum = 0;\n      |\
    \          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpp3mt4ci0.cpp:46:10:\
    \ error: redeclaration of \u2018long int last_beats_count_count_count_count_count\u2019\
    \n   46 |     long last_beats_count_count_count_count_count = 0;\n      |    \
    \      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpp3mt4ci0.cpp:41:10: note:\
    \ \u2018long int last_beats_count_count_count_count_count\u2019 previously declared\
    \ here\n   41 |     long last_beats_count_count_count_count_count = 0;\n     \
    \ |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpp3mt4ci0.cpp:47:10:\
    \ error: redeclaration of \u2018long int last_beats_count_count_count_count_count_max\u2019\
    \n   47 |     long last_be"
  stdout: ''
  timestamp: 1660129744
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long note_count = 0;\n\
    \    bool is_note = false;\n    for (char c : music_string) {\n        if (c ==\
    \ 'o') {\n            is_note = true;\n            note_count = 0;\n         \
    \   beat = 0;\n            note = \"\";\n        } else if (c == '|') {\n    \
    \        is_note = true;\n            note_count++;\n            beat = 0;\n \
    \           note = \"\";\n        } else if (c == ' ') {\n            if (is_note)\
    \ {\n                beats.push_back(beat);\n                note_count = 0;\n\
    \                beat = 0;\n                is_note = false;\n            }\n\
    \        } else if (c == '.') {\n            is_note = false;\n            note_count\
    \ = 0;\n            beat = 0;\n            note = \"\";\n        } else {\n  \
    \          note += c;\n        }\n    }\n    if (is_note) {\n        beats.push_back(beat);\n\
    \    }\n    return beats;\n}\nint main() {\n    auto candidate = parse_music;\n\
    \    assert(candidate((\"\")) == (std::vector<long>()));\n    assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \   assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1, (long)1,\
    \ (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\")) == (std::vector<long>({(long)2,\
    \ (long)2, (long)1, (long)1, (long)4, (long)4, (long)4, (long)4})));\n    assert(candidate((\"\
    o| .| o| .| o o| o o|\")) == (std::vector<long>({(long)2, (long)1, (long)2, (long)1,\
    \ (long)4, (long)2, (long)4, (long)2})));\n}\n"
  status: Exception
  stderr: 'tmp0ao871os: /tmp/tmp0ao871os.cpp:51: int main(): Assertion `candidate(("o
    o o o")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4}))'' failed.

    '
  stdout: ''
  timestamp: 1660129745
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    long beat = 0;\n    long note = 0;\n    long last_note = 0;\n  \
    \  long last_beat = 0;\n    long last_beats = 0;\n    long last_beats_total =\
    \ 0;\n    long last_beats_total2 = 0;\n    long last_beats_total3 = 0;\n    long\
    \ last_beats_total4 = 0;\n    long last_beats_total5 = 0;\n    long last_beats_total6\
    \ = 0;\n    long last_beats_total7 = 0;\n    long last_beats_total8 = 0;\n   \
    \ long last_beats_total9 = 0;\n    long last_beats_total10 = 0;\n    long last_beats_total11\
    \ = 0;\n    long last_beats_total12 = 0;\n    long last_beats_total13 = 0;\n \
    \   long last_beats_total14 = 0;\n    long last_beats_total15 = 0;\n    long last_beats_total16\
    \ = 0;\n    long last_beats_total17 = 0;\n    long last_beats_total18 = 0;\n \
    \   long last_beats_total19 = 0;\n    long last_beats_total20 = 0;\n    long last_beats_total21\
    \ = 0;\n    long last_beats_total22 = 0;\n    long last_beats_total23 = 0;\n \
    \   long last_beats_total24 = 0;\n    long last_beats_total25 = 0;\n    long last_beats_total26\
    \ = 0;\n    long last_beats_total27 = 0;\n    long last_beats_total28 = 0;\n \
    \   long last_beats_total29 = 0;\n    long last_beats_total30 = 0;\n    long last_beats_total31\
    \ = 0;\n    long last_beats_total32 = 0;\n    long last_beats_total33 = 0;\n \
    \   long last_beats_total34 = 0;\n    long last_beats_total35 = 0;\n    long last_beats_total36\
    \ = 0;\n    long last_beats_total37 = 0;\n    long last_beats_total38 = 0;\n \
    \   long last_beats_total39 = 0;\n    long last_beats_total40 = 0;\n    long last_beats_total41\
    \ = 0;\n    long last_beats_total42 = 0;\n    long last_beats_total43 = 0;\n \
    \   long last_beats_total44 = 0;\n    long last_beats_total45 = 0;\n    long last_beats_total46\
    \ = 0;\n    long last_beats_total47 = 0;\n    long last_beats_total48 = 0;\n \
    \   long last_beats_total49 = 0;\n    long last_beats_total50 = 0;\n    long last_beats_total51\
    \ = 0;\n    long last_beats_total52 = 0;\n    long last_beats_total53 = 0;\n \
    \   long last_beats_\n}\nint main() {\n    auto candidate = parse_music;\n   \
    \ assert(candidate((\"\")) == (std::vector<long>()));\n    assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \   assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1, (long)1,\
    \ (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\")) == (std::vector<long>({(long)2,\
    \ (long)2, (long)1, (long)1, (long)4, (long)4, (long)4, (long)4})));\n    assert(candidate((\"\
    o| .| o| .| o o| o o|\")) == (std::vector<long>({(long)2, (long)1, (long)2, (long)1,\
    \ (long)4, (long)2, (long)4, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvmbd0cre.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpvmbd0cre.cpp:71:1: error: expected initializer before \u2018}\u2019\
    \ token\n   71 | }\n      | ^\n/tmp/tmpvmbd0cre.cpp:71:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129740
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long beats = 0;\n   \
    \ bool is_note = false;\n    bool is_note_or_chord = false;\n    for (char c :\
    \ music_string) {\n        if (c == 'o') {\n            is_note = true;\n    \
    \        beat = 0;\n            beats = 0;\n        }\n        else if (c == '|')\
    \ {\n            is_note_or_chord = true;\n            beat = 0;\n           \
    \ beats = 0;\n        }\n        else if (c == '.') {\n            is_note = false;\n\
    \            is_note_or_chord = false;\n        }\n        else if (is_note) {\n\
    \            beat += 1;\n        }\n        else if (is_note_or_chord) {\n   \
    \         beats += 1;\n        }\n    }\n    beats.push_back(beat);\n    return\
    \ beats;\n}\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\
    \")) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4mcgofsj.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp4mcgofsj.cpp:14:10: error: conflicting declaration \u2018long int beats\u2019\
    \n   14 |     long beats = 0;\n      |          ^~~~~\n/tmp/tmp4mcgofsj.cpp:11:23:\
    \ note: previous declaration as \u2018std::vector<long int> beats\u2019\n   11\
    \ |     std::vector<long> beats;\n      |                       ^~~~~\n/tmp/tmp4mcgofsj.cpp:21:21:\
    \ error: no match for \u2018operator=\u2019 (operand types are \u2018std::vector<long\
    \ int>\u2019 and \u2018int\u2019)\n   21 |             beats = 0;\n      |   \
    \                  ^\nIn file included from /usr/include/c++/9/vector:72,\n  \
    \               from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp4mcgofsj.cpp:2:\n/usr/include/c++/9/bits/vector.tcc:198:5:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(const\
    \ std::vector<_Tp, _Alloc>&) [with _Tp = long int; _Alloc = std::allocator<long\
    \ int>]\u2019\n  198 |     vector<_Tp, _Alloc>::\n      |     ^~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/vector.tcc:199:42: note:   no known conversion for argument\
    \ 1 from \u2018int\u2019 to \u2018const std::vector<long int>&\u2019\n  199 |\
    \     operator=(const vector<_Tp, _Alloc>& __x)\n      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n\
    In file included from /usr/include/c++/9/vector:67,\n                 from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp4mcgofsj.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:706:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(std::vector<_Tp,\
    \ _Alloc>&&) [with _Tp = long int; _Alloc = std::allocator<long int>]\u2019\n\
    \  706 |       operat"
  stdout: ''
  timestamp: 1660129744
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    long current_beat = 0;\n    long current_note = 0;\n    long current_note_length\
    \ = 0;\n    long current_note_length2 = 0;\n    long current_note_length3 = 0;\n\
    \    long current_note_length4 = 0;\n    long current_note_length5 = 0;\n    long\
    \ current_note_length6 = 0;\n    long current_note_length7 = 0;\n    long current_note_length8\
    \ = 0;\n    long current_note_length9 = 0;\n    long current_note_length10 = 0;\n\
    \    long current_note_length11 = 0;\n    long current_note_length12 = 0;\n  \
    \  long current_note_length13 = 0;\n    long current_note_length14 = 0;\n    long\
    \ current_note_length15 = 0;\n    long current_note_length16 = 0;\n    long current_note_length17\
    \ = 0;\n    long current_note_length18 = 0;\n    long current_note_length19 =\
    \ 0;\n    long current_note_length20 = 0;\n    long current_note_length21 = 0;\n\
    \    long current_note_length22 = 0;\n    long current_note_length23 = 0;\n  \
    \  long current_note_length24 = 0;\n    long current_note_length25 = 0;\n    long\
    \ current_note_length26 = 0;\n    long current_note_length27 = 0;\n    long current_note_length28\
    \ = 0;\n    long current_note_length29 = 0;\n    long current_note_length30 =\
    \ 0;\n    long current_note_length31 = 0;\n    long current_note_length32 = 0;\n\
    \    long current_note_length33 = 0;\n    long current_note_length34 = 0;\n  \
    \  long current_note_length35 = 0;\n    long current_note_length36 = 0;\n    long\
    \ current_note_length37 = 0;\n    long current_note_length38 = 0;\n    long current_note_length39\
    \ = 0;\n    long current_note_length40 = 0;\n    long current_note_length41 =\
    \ 0;\n    long current_note_length42 = 0;\n    long current_note_length43 = 0;\n\
    \    long current_note_length44 = 0;\n    long current_note_length45 = 0;\n  \
    \  long current_note_length46 = 0;\n    long current_note_length47 = 0;\n    long\
    \ current_note_length48 = 0;\n    long current_note_length49 = 0;\n    long current_note_length50\
    \ = 0;\n    long current_note_length51 = 0;\n    long current_note_length52 =\
    \ 0;\n    long current_note_length53 = 0;\n    long current_note_length54 = 0;\n\
    \    long current_note_length55 = 0;\n    long current_note_length56 = 0;\n  \
    \  long current_note_length57 = 0;\n    long current_note_length58 = 0;\n    long\
    \ current_note_length59 = 0;\n    long current_note_length60 = 0;\n    long current_note_length61\
    \ = 0;\n    long current_note_length62 = 0;\n    long \n}\nint main() {\n    auto\
    \ candidate = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n\
    \    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxaaessx7.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpxaaessx7.cpp:77:1: error: expected unqualified-id before \u2018}\u2019\
    \ token\n   77 | }\n      | ^\n/tmp/tmpxaaessx7.cpp:77:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129744
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Your code goes here\n    std::vector<long> beats;\n    std::string note;\n \
    \   long beat = 0;\n    long last_beat = 0;\n    long last_note = 0;\n    long\
    \ last_note_beat = 0;\n    long note_length = 0;\n    long note_length_inc = 1;\n\
    \    long note_length_dec = 1;\n    long note_length_inc_dec = 1;\n    long note_length_dec_dec\
    \ = 1;\n    long note_length_inc_dec_dec = 1;\n    long note_length_dec_dec_dec\
    \ = 1;\n    long note_length_inc_dec_dec_dec = 1;\n    long note_length_dec_dec_dec_dec\
    \ = 1;\n    long note_length_inc_dec_dec_dec_dec = 1;\n    long note_length_dec_dec_dec_dec_dec\
    \ = 1;\n    long note_length_inc_dec_dec_dec_dec_dec = 1;\n    long note_length_dec_dec_dec_dec_dec_dec\
    \ = 1;\n    long note_length_inc_dec_dec_dec_dec_dec_dec = 1;\n    long note_length_dec_dec_dec_dec_dec_dec_dec\
    \ = 1;\n    long note_length_inc_dec_dec_dec_dec_dec_dec_dec = 1;\n    long note_length_dec_dec_dec_dec_dec_dec_dec_dec\
    \ = 1;\n    long note_length_inc_dec_dec_dec_dec_dec_dec_dec_dec = 1;\n    long\
    \ note_length_dec_dec_dec_dec_dec_dec_dec_dec_dec = 1;\n    long note_length_inc_dec_dec_dec_dec_dec_dec_dec_dec_dec\
    \ = 1;\n    long note_length_dec_dec_dec_dec_dec_dec_dec_dec_dec_dec = 1;\n  \
    \  long note_length_inc_dec_dec_dec_dec_dec_dec_dec_dec_dec_dec = 1;\n    long\
    \ note_length_dec_dec_dec_dec_dec_dec_dec_dec_dec_dec_dec = 1;\n    long note_length_inc_dec_dec_dec_dec_dec_dec_dec_dec_dec_dec\
    \ = 1;\n    long note_length_dec_dec_dec_dec_dec_dec_dec_dec_dec_dec_dec_dec =\
    \ 1;\n    long note_length_inc_dec_dec_\n}\nint main() {\n    auto candidate =\
    \ parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n    assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \   assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1, (long)1,\
    \ (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\")) == (std::vector<long>({(long)2,\
    \ (long)2, (long)1, (long)1, (long)4, (long)4, (long)4, (long)4})));\n    assert(candidate((\"\
    o| .| o| .| o o| o o|\")) == (std::vector<long>({(long)2, (long)1, (long)2, (long)1,\
    \ (long)4, (long)2, (long)4, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprz71p1qr.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmprz71p1qr.cpp:41:10: error: redeclaration of \u2018long int note_length_inc_dec_dec_dec_dec_dec_dec_dec_dec_dec_dec\u2019\
    \n   41 |     long note_length_inc_dec_dec_dec_dec_dec_dec_dec_dec_dec_dec = 1;\n\
    \      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmprz71p1qr.cpp:39:10:\
    \ note: \u2018long int note_length_inc_dec_dec_dec_dec_dec_dec_dec_dec_dec_dec\u2019\
    \ previously declared here\n   39 |     long note_length_inc_dec_dec_dec_dec_dec_dec_dec_dec_dec_dec\
    \ = 1;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmprz71p1qr.cpp:44:1: error: expected initializer before \u2018}\u2019 token\n\
    \   44 | }\n      | ^\n/tmp/tmprz71p1qr.cpp:44:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129745
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    long last_note = 0;\n    long last_note_duration = 0;\n    long note_duration\
    \ = 0;\n    long note_duration2 = 0;\n    long note_duration3 = 0;\n    long note_duration4\
    \ = 0;\n    long note_duration5 = 0;\n    long note_duration6 = 0;\n    long note_duration7\
    \ = 0;\n    long note_duration8 = 0;\n    long note_duration9 = 0;\n    long note_duration10\
    \ = 0;\n    long note_duration11 = 0;\n    long note_duration12 = 0;\n    long\
    \ note_duration13 = 0;\n    long note_duration14 = 0;\n    long note_duration15\
    \ = 0;\n    long note_duration16 = 0;\n    long note_duration17 = 0;\n    long\
    \ note_duration18 = 0;\n    long note_duration19 = 0;\n    long note_duration20\
    \ = 0;\n    long note_duration21 = 0;\n    long note_duration22 = 0;\n    long\
    \ note_duration23 = 0;\n    long note_duration24 = 0;\n    long note_duration25\
    \ = 0;\n    long note_duration26 = 0;\n    long note_duration27 = 0;\n    long\
    \ note_duration28 = 0;\n    long note_duration29 = 0;\n    long note_duration30\
    \ = 0;\n    long note_duration31 = 0;\n    long note_duration32 = 0;\n    long\
    \ note_duration33 = 0;\n    long note_duration34 = 0;\n    long note_duration35\
    \ = 0;\n    long note_duration36 = 0;\n    long note_duration37 = 0;\n    long\
    \ note_duration38 = 0;\n    long note_duration39 = 0;\n    long note_duration40\
    \ = 0;\n    long note_duration41 = 0;\n    long note_duration42 = 0;\n    long\
    \ note_duration43 = 0;\n    long note_duration44 = 0;\n    long note_duration45\
    \ = 0;\n    long note_duration46 = 0;\n    long note_duration47 = 0;\n    long\
    \ note_duration48 = 0;\n    long note_duration49 = 0;\n    long note_duration50\
    \ = 0;\n    long note_duration51 = 0;\n    long note_duration52 = 0;\n    long\
    \ note_duration53 = 0;\n    long note_duration54 = 0;\n    long note_duration55\
    \ = 0;\n    long note_duration56 = 0;\n    long note_duration57 = 0;\n    long\
    \ note_duration58 = 0;\n    long note_duration59 = 0;\n    long note_duration60\
    \ = 0;\n    long note_duration61 = 0;\n    long note_duration62 = 0;\n    long\
    \ note_duration63 = 0;\n    long note_duration64 = 0;\n    long note_duration65\
    \ = 0;\n    long note_duration66 = 0;\n    long note_duration67 = 0;\n    long\
    \ note_duration68 = 0;\n    long note_duration69\n}\nint main() {\n    auto candidate\
    \ = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n  \
    \  assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4,\
    \ (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgaa_0ijd.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpgaa_0ijd.cpp:86:1: error: expected initializer before \u2018}\u2019\
    \ token\n   86 | }\n      | ^\n/tmp/tmpgaa_0ijd.cpp:86:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129745
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long beats = 0;\n   \
    \ long notes = 0;\n    long note = 0;\n    long note_length = 0;\n    long note_length2\
    \ = 0;\n    long note_length3 = 0;\n    long note_length4 = 0;\n    long note_length5\
    \ = 0;\n    long note_length6 = 0;\n    long note_length7 = 0;\n    long note_length8\
    \ = 0;\n    long note_length9 = 0;\n    long note_length10 = 0;\n    long note_length11\
    \ = 0;\n    long note_length12 = 0;\n    long note_length13 = 0;\n    long note_length14\
    \ = 0;\n    long note_length15 = 0;\n    long note_length16 = 0;\n    long note_length17\
    \ = 0;\n    long note_length18 = 0;\n    long note_length19 = 0;\n    long note_length20\
    \ = 0;\n    long note_length21 = 0;\n    long note_length22 = 0;\n    long note_length23\
    \ = 0;\n    long note_length24 = 0;\n    long note_length25 = 0;\n    long note_length26\
    \ = 0;\n    long note_length27 = 0;\n    long note_length28 = 0;\n    long note_length29\
    \ = 0;\n    long note_length30 = 0;\n    long note_length31 = 0;\n    long note_length32\
    \ = 0;\n    long note_length33 = 0;\n    long note_length34 = 0;\n    long note_length35\
    \ = 0;\n    long note_length36 = 0;\n    long note_length37 = 0;\n    long note_length38\
    \ = 0;\n    long note_length39 = 0;\n    long note_length40 = 0;\n    long note_length41\
    \ = 0;\n    long note_length42 = 0;\n    long note_length43 = 0;\n    long note_length44\
    \ = 0;\n    long note_length45 = 0;\n    long note_length46 = 0;\n    long note_length47\
    \ = 0;\n    long note_length48 = 0;\n    long note_length49 = 0;\n    long note_length50\
    \ = 0;\n    long note_length51 = 0;\n    long note_length52 = 0;\n    long note_length53\
    \ = 0;\n    long note_length54 = 0;\n    long note_length55 = 0;\n    long note_length56\
    \ = 0;\n    long note_length57 = 0;\n    long note_length58 = 0;\n    long note_length59\
    \ = 0;\n    long note_length60 = 0;\n    long note_length61 = 0;\n    long note_length62\
    \ = 0;\n    long note_length63 = 0;\n    long note_length64 = 0;\n    long note_length65\
    \ = 0;\n    long note_length66 = 0;\n    long note_length67 = 0;\n    long note_length68\
    \ = 0;\n    long note_length69 = 0;\n    long \n}\nint main() {\n    auto candidate\
    \ = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n  \
    \  assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4,\
    \ (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1u6ms817.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp1u6ms817.cpp:14:10: error: conflicting declaration \u2018long int beats\u2019\
    \n   14 |     long beats = 0;\n      |          ^~~~~\n/tmp/tmp1u6ms817.cpp:11:23:\
    \ note: previous declaration as \u2018std::vector<long int> beats\u2019\n   11\
    \ |     std::vector<long> beats;\n      |                       ^~~~~\n/tmp/tmp1u6ms817.cpp:16:10:\
    \ error: conflicting declaration \u2018long int note\u2019\n   16 |     long note\
    \ = 0;\n      |          ^~~~\n/tmp/tmp1u6ms817.cpp:12:17: note: previous declaration\
    \ as \u2018std::string note\u2019\n   12 |     std::string note;\n      |    \
    \             ^~~~\n/tmp/tmp1u6ms817.cpp:87:1: error: expected unqualified-id\
    \ before \u2018}\u2019 token\n   87 | }\n      | ^\n/tmp/tmp1u6ms817.cpp:87:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129740
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Your code goes here\n    std::vector<long> beats;\n    long beats_counter =\
    \ 0;\n    long last_beat = 0;\n    long last_note = 0;\n    long last_note_counter\
    \ = 0;\n    long last_note_counter2 = 0;\n    long last_note_counter3 = 0;\n \
    \   long last_note_counter4 = 0;\n    long last_note_counter5 = 0;\n    long last_note_counter6\
    \ = 0;\n    long last_note_counter7 = 0;\n    long last_note_counter8 = 0;\n \
    \   long last_note_counter9 = 0;\n    long last_note_counter10 = 0;\n    long\
    \ last_note_counter11 = 0;\n    long last_note_counter12 = 0;\n    long last_note_counter13\
    \ = 0;\n    long last_note_counter14 = 0;\n    long last_note_counter15 = 0;\n\
    \    long last_note_counter16 = 0;\n    long last_note_counter17 = 0;\n    long\
    \ last_note_counter18 = 0;\n    long last_note_counter19 = 0;\n    long last_note_counter20\
    \ = 0;\n    long last_note_counter21 = 0;\n    long last_note_counter22 = 0;\n\
    \    long last_note_counter23 = 0;\n    long last_note_counter24 = 0;\n    long\
    \ last_note_counter25 = 0;\n    long last_note_counter26 = 0;\n    long last_note_counter27\
    \ = 0;\n    long last_note_counter28 = 0;\n    long last_note_counter29 = 0;\n\
    \    long last_note_counter30 = 0;\n    long last_note_counter31 = 0;\n    long\
    \ last_note_counter32 = 0;\n    long last_note_counter33 = 0;\n    long last_note_counter34\
    \ = 0;\n    long last_note_counter35 = 0;\n    long last_note_counter36 = 0;\n\
    \    long last_note_counter37 = 0;\n    long last_note_counter38 = 0;\n    long\
    \ last_note_counter39 = 0;\n    long last_note_counter40 = 0;\n    long last_note_counter41\
    \ = 0;\n    long last_note_counter42 = 0;\n    long last_note_counter43 = 0;\n\
    \    long last_note_counter44 = 0;\n    long last_note_counter45 = 0;\n    long\
    \ last_note_counter46 = 0;\n    long last_note_counter47 = 0;\n    long last_note_counter48\
    \ = 0;\n    long last_note_counter49 = 0;\n    long last_note_counter50 = 0;\n\
    \    long last_note_counter51 = 0;\n    long last_note_counter52 = 0;\n    long\
    \ last_note_counter53 = 0;\n    long last_note_counter54 = 0;\n    long last_note_counter55\
    \ = 0;\n    long last_note_counter56 = 0;\n    long last_note_counter57 = 0;\n\
    \    long last_note_counter58 = 0;\n    long last_note_counter59 = 0;\n    long\
    \ last_note_counter60 = 0;\n    long last_note_counter\n}\nint main() {\n    auto\
    \ candidate = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n\
    \    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5f9imorm.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmp5f9imorm.cpp:77:1: error: expected initializer before \u2018}\u2019\
    \ token\n   77 | }\n      | ^\n/tmp/tmp5f9imorm.cpp:77:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129745
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Your code goes here\n    std::vector<long> beats;\n    std::string note;\n \
    \   long beat = 0;\n    long note_count = 0;\n    long note_length = 0;\n    long\
    \ note_length2 = 0;\n    long note_length3 = 0;\n    long note_length4 = 0;\n\
    \    long note_length5 = 0;\n    long note_length6 = 0;\n    long note_length7\
    \ = 0;\n    long note_length8 = 0;\n    long note_length9 = 0;\n    long note_length10\
    \ = 0;\n    long note_length11 = 0;\n    long note_length12 = 0;\n    long note_length13\
    \ = 0;\n    long note_length14 = 0;\n    long note_length15 = 0;\n    long note_length16\
    \ = 0;\n    long note_length17 = 0;\n    long note_length18 = 0;\n    long note_length19\
    \ = 0;\n    long note_length20 = 0;\n    long note_length21 = 0;\n    long note_length22\
    \ = 0;\n    long note_length23 = 0;\n    long note_length24 = 0;\n    long note_length25\
    \ = 0;\n    long note_length26 = 0;\n    long note_length27 = 0;\n    long note_length28\
    \ = 0;\n    long note_length29 = 0;\n    long note_length30 = 0;\n    long note_length31\
    \ = 0;\n    long note_length32 = 0;\n    long note_length33 = 0;\n    long note_length34\
    \ = 0;\n    long note_length35 = 0;\n    long note_length36 = 0;\n    long note_length37\
    \ = 0;\n    long note_length38 = 0;\n    long note_length39 = 0;\n    long note_length40\
    \ = 0;\n    long note_length41 = 0;\n    long note_length42 = 0;\n    long note_length43\
    \ = 0;\n    long note_length44 = 0;\n    long note_length45 = 0;\n    long note_length46\
    \ = 0;\n    long note_length47 = 0;\n    long note_length48 = 0;\n    long note_length49\
    \ = 0;\n    long note_length50 = 0;\n    long note_length51 = 0;\n    long note_length52\
    \ = 0;\n    long note_length53 = 0;\n    long note_length54 = 0;\n    long note_length55\
    \ = 0;\n    long note_length56 = 0;\n    long note_length57 = 0;\n    long note_length58\
    \ = 0;\n    long note_length59 = 0;\n    long note_length60 = 0;\n    long note_length61\
    \ = 0;\n    long note_length62 = 0;\n    long note_length63 = 0;\n    long note_length64\
    \ = 0;\n    long note_length65 = 0;\n    long note_length66 = 0;\n    long note_length67\
    \ = 0;\n    long note_length68 = 0;\n    long note_length69 = 0;\n    long note_length70\n\
    }\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"\
    )) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo99gqunx.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpo99gqunx.cpp:86:1: error: expected initializer before \u2018}\u2019\
    \ token\n   86 | }\n      | ^\n/tmp/tmpo99gqunx.cpp:86:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129737
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    long last_note = 0;\n    bool is_note = false;\n    for (char c : music_string)\
    \ {\n        if (c == 'o') {\n            is_note = true;\n            beat =\
    \ 0;\n            last_note = c;\n        } else if (c == '|') {\n           \
    \ is_note = true;\n            beat = 0;\n            last_note = c;\n       \
    \ } else if (c == last_note) {\n            beat += 1;\n        } else {\n   \
    \         if (is_note) {\n                beats.push_back(beat);\n           \
    \     is_note = false;\n            }\n            last_note = c;\n          \
    \  beat = 0;\n        }\n    }\n    return beats;\n}\nint main() {\n    auto candidate\
    \ = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n  \
    \  assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4,\
    \ (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: Exception
  stderr: 'tmpdx7lbvfu: /tmp/tmpdx7lbvfu.cpp:42: int main(): Assertion `candidate(("o
    o o o")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4}))'' failed.

    '
  stdout: ''
  timestamp: 1660129745
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Your code goes here\n    std::vector<long> beats;\n    long beats_counter =\
    \ 0;\n    long notes_counter = 0;\n    long notes_counter2 = 0;\n    long notes_counter3\
    \ = 0;\n    long notes_counter4 = 0;\n    long notes_counter5 = 0;\n    long notes_counter6\
    \ = 0;\n    long notes_counter7 = 0;\n    long notes_counter8 = 0;\n    long notes_counter9\
    \ = 0;\n    long notes_counter10 = 0;\n    long notes_counter11 = 0;\n    long\
    \ notes_counter12 = 0;\n    long notes_counter13 = 0;\n    long notes_counter14\
    \ = 0;\n    long notes_counter15 = 0;\n    long notes_counter16 = 0;\n    long\
    \ notes_counter17 = 0;\n    long notes_counter18 = 0;\n    long notes_counter19\
    \ = 0;\n    long notes_counter20 = 0;\n    long notes_counter21 = 0;\n    long\
    \ notes_counter22 = 0;\n    long notes_counter23 = 0;\n    long notes_counter24\
    \ = 0;\n    long notes_counter25 = 0;\n    long notes_counter26 = 0;\n    long\
    \ notes_counter27 = 0;\n    long notes_counter28 = 0;\n    long notes_counter29\
    \ = 0;\n    long notes_counter30 = 0;\n    long notes_counter31 = 0;\n    long\
    \ notes_counter32 = 0;\n    long notes_counter33 = 0;\n    long notes_counter34\
    \ = 0;\n    long notes_counter35 = 0;\n    long notes_counter36 = 0;\n    long\
    \ notes_counter37 = 0;\n    long notes_counter38 = 0;\n    long notes_counter39\
    \ = 0;\n    long notes_counter40 = 0;\n    long notes_counter41 = 0;\n    long\
    \ notes_counter42 = 0;\n    long notes_counter43 = 0;\n    long notes_counter44\
    \ = 0;\n    long notes_counter45 = 0;\n    long notes_counter46 = 0;\n    long\
    \ notes_counter47 = 0;\n    long notes_counter48 = 0;\n    long notes_counter49\
    \ = 0;\n    long notes_counter50 = 0;\n    long notes_counter51 = 0;\n    long\
    \ notes_counter52 = 0;\n    long notes_counter53 = 0;\n    long notes_counter54\
    \ = 0;\n    long notes_counter55 = 0;\n    long notes_counter56 = 0;\n    long\
    \ notes_counter57 = 0;\n    long notes_counter58 = 0;\n    long notes_counter59\
    \ = 0;\n    long notes_counter60 = 0;\n    long notes_counter61 = 0;\n    long\
    \ notes_counter62 = 0;\n    \n}\nint main() {\n    auto candidate = parse_music;\n\
    \    assert(candidate((\"\")) == (std::vector<long>()));\n    assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \   assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1, (long)1,\
    \ (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\")) == (std::vector<long>({(long)2,\
    \ (long)2, (long)1, (long)1, (long)4, (long)4, (long)4, (long)4})));\n    assert(candidate((\"\
    o| .| o| .| o o| o o|\")) == (std::vector<long>({(long)2, (long)1, (long)2, (long)1,\
    \ (long)4, (long)2, (long)4, (long)2})));\n}\n"
  status: Exception
  stderr: 'tmpl0u3i2cx: /tmp/tmpl0u3i2cx.cpp:80: int main(): Assertion `candidate((""))
    == (std::vector<long>())'' failed.

    '
  stdout: ''
  timestamp: 1660129745
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    long last_note = 0;\n    for (auto c : music_string) {\n        if (c ==\
    \ 'o') {\n            note = \"o\";\n            beat = 0;\n            last_beat\
    \ = 0;\n            last_note = 0;\n        } else if (c == '|') {\n         \
    \   note = \"o|\";\n            beat = 0;\n            last_beat = 0;\n      \
    \      last_note = 0;\n        } else if (c == \".\") {\n            note = \"\
    .|\";\n            beat = 0;\n            last_beat = 0;\n            last_note\
    \ = 0;\n        } else if (c == '-') {\n            note = \"-\";\n          \
    \  beat = 0;\n            last_beat = 0;\n            last_note = 0;\n       \
    \ } else if (c == '+') {\n            note = \"+\";\n            beat = 0;\n \
    \           last_beat = 0;\n            last_note = 0;\n        } else if (c ==\
    \ '#') {\n            note = \"#\";\n            beat = 0;\n            last_beat\
    \ = 0;\n            last_note = 0;\n        } else if (c == '[') {\n         \
    \   note = \"[\";\n            beat = 0;\n            last_beat = 0;\n       \
    \     last_note = 0;\n        } else if (c == ']') {\n            note = \"]\"\
    ;\n            beat = 0;\n            last_beat = 0;\n            last_note =\
    \ 0;\n        } else if (c == '(') {\n            note = \"(\";\n            beat\
    \ = 0;\n            last_beat = 0;\n            last_note = 0;\n        } else\
    \ if (c == ')') {\n            note = \")\";\n            beat = 0;\n        \
    \    last_beat = 0;\n            last_note = 0;\n        } else if (c == '%')\
    \ {\n            note = \"%\";\n            beat = 0;\n            last_beat =\
    \ 0;\n            last_note = 0;\n        } else if (c == '/') {\n           \
    \ note = \"/\";\n            beat = 0;\n            last_beat = 0;\n         \
    \   last_note = 0;\n        } else if (c == '.') {\n            note = \".\";\n\
    \            beat = 0;\n            last_beat = 0;\n            last_note = 0;\n\
    \        } else if (c == '=') {\n            note = \"=\";\n            beat =\
    \ 0;\n            last_beat = 0;\n            last_note = 0;\n        } else if\
    \ (c == '>') {\n            note = \">\";\n            beat = 0;\n           \
    \ last_beat = 0;\n            last_note = 0;\n        } else if (c == '<') {\n\
    \            note = \"<\";\n            beat = 0;\n            last_beat = 0;\n\
    \            last_note = 0;\n        } else if (c == '?') {\n            note\
    \ = \"?\";\n            beat = 0;\n            last_beat = 0;\n            last_note\
    \ = 0;\n        } else if (c == '!') {\n            note = \"!\";\n          \
    \  beat = 0;\n            last_beat = 0;\n            last_note = 0;\n       \
    \ } else if (c == '%') {\n            note = \"%\";\n            beat = 0;\n \
    \           last_beat = 0;\n            last_note = 0;\n        } else if (c ==\
    \ '@') {\n            note = \"@\";\n            beat = 0;\n            last_beat\
    \ = 0;\n            last_note\n}\nint main() {\n    auto candidate = parse_music;\n\
    \    assert(candidate((\"\")) == (std::vector<long>()));\n    assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \   assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1, (long)1,\
    \ (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\")) == (std::vector<long>({(long)2,\
    \ (long)2, (long)1, (long)1, (long)4, (long)4, (long)4, (long)4})));\n    assert(candidate((\"\
    o| .| o| .| o o| o o|\")) == (std::vector<long>({(long)2, (long)1, (long)2, (long)1,\
    \ (long)4, (long)2, (long)4, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpltbhqg8s.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpltbhqg8s.cpp:27:25: error: ISO C++ forbids comparison between pointer\
    \ and integer [-fpermissive]\n   27 |         } else if (c == \".\") {\n     \
    \ |                         ^~~\n/tmp/tmpltbhqg8s.cpp:116:22: error: expected\
    \ \u2018;\u2019 before \u2018}\u2019 token\n  116 |             last_note\n  \
    \    |                      ^\n      |                      ;\n  117 | }\n   \
    \   | ~                     \n/tmp/tmpltbhqg8s.cpp:118:12: error: a function-definition\
    \ is not allowed here before \u2018{\u2019 token\n  118 | int main() {\n     \
    \ |            ^\n/tmp/tmpltbhqg8s.cpp:125:1: error: expected \u2018}\u2019 at\
    \ end of input\n  125 | }\n      | ^\n/tmp/tmpltbhqg8s.cpp:16:33: note: to match\
    \ this \u2018{\u2019\n   16 |     for (auto c : music_string) {\n      |     \
    \                            ^\n/tmp/tmpltbhqg8s.cpp:125:1: error: expected \u2018\
    }\u2019 at end of input\n  125 | }\n      | ^\n/tmp/tmpltbhqg8s.cpp:10:57: note:\
    \ to match this \u2018{\u2019\n   10 | std::vector<long> parse_music(std::string\
    \ music_string) {\n      |                                                   \
    \      ^\n/tmp/tmpltbhqg8s.cpp:125:1: warning: no return statement in function\
    \ returning non-void [-Wreturn-type]\n  125 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660129745
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long beats = 0;\n   \
    \ long notes = 0;\n    long note = 0;\n    long notes_length = 0;\n    long note_length\
    \ = 0;\n    long note_length2 = 0;\n    long note_length3 = 0;\n    long note_length4\
    \ = 0;\n    long note_length5 = 0;\n    long note_length6 = 0;\n    long note_length7\
    \ = 0;\n    long note_length8 = 0;\n    long note_length9 = 0;\n    long note_length10\
    \ = 0;\n    long note_length11 = 0;\n    long note_length12 = 0;\n    long note_length13\
    \ = 0;\n    long note_length14 = 0;\n    long note_length15 = 0;\n    long note_length16\
    \ = 0;\n    long note_length17 = 0;\n    long note_length18 = 0;\n    long note_length19\
    \ = 0;\n    long note_length20 = 0;\n    long note_length21 = 0;\n    long note_length22\
    \ = 0;\n    long note_length23 = 0;\n    long note_length24 = 0;\n    long note_length25\
    \ = 0;\n    long note_length26 = 0;\n    long note_length27 = 0;\n    long note_length28\
    \ = 0;\n    long note_length29 = 0;\n    long note_length30 = 0;\n    long note_length31\
    \ = 0;\n    long note_length32 = 0;\n    long note_length33 = 0;\n    long note_length34\
    \ = 0;\n    long note_length35 = 0;\n    long note_length36 = 0;\n    long note_length37\
    \ = 0;\n    long note_length38 = 0;\n    long note_length39 = 0;\n    long note_length40\
    \ = 0;\n    long note_length41 = 0;\n    long note_length42 = 0;\n    long note_length43\
    \ = 0;\n    long note_length44 = 0;\n    long note_length45 = 0;\n    long note_length46\
    \ = 0;\n    long note_length47 = 0;\n    long note_length48 = 0;\n    long note_length49\
    \ = 0;\n    long note_length50 = 0;\n    long note_length51 = 0;\n    long note_length52\
    \ = 0;\n    long note_length53 = 0;\n    long note_length54 = 0;\n    long note_length55\
    \ = 0;\n    long note_length56 = 0;\n    long note_length57 = 0;\n    long note_length58\
    \ = 0;\n    long note_length59 = 0;\n    long note_length60 = 0;\n    long note_length61\
    \ = 0;\n    long note_length62 = 0;\n    long note_length63 = 0;\n    long note_length64\
    \ = 0;\n    long note_length65 = 0;\n    long note_length66 = 0;\n    long note_length67\
    \ = 0;\n    long note_length68 = 0;\n    long \n}\nint main() {\n    auto candidate\
    \ = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n  \
    \  assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4,\
    \ (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpewfmox6p.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpewfmox6p.cpp:14:10: error: conflicting declaration \u2018long int beats\u2019\
    \n   14 |     long beats = 0;\n      |          ^~~~~\n/tmp/tmpewfmox6p.cpp:11:23:\
    \ note: previous declaration as \u2018std::vector<long int> beats\u2019\n   11\
    \ |     std::vector<long> beats;\n      |                       ^~~~~\n/tmp/tmpewfmox6p.cpp:16:10:\
    \ error: conflicting declaration \u2018long int note\u2019\n   16 |     long note\
    \ = 0;\n      |          ^~~~\n/tmp/tmpewfmox6p.cpp:12:17: note: previous declaration\
    \ as \u2018std::string note\u2019\n   12 |     std::string note;\n      |    \
    \             ^~~~\n/tmp/tmpewfmox6p.cpp:87:1: error: expected unqualified-id\
    \ before \u2018}\u2019 token\n   87 | }\n      | ^\n/tmp/tmpewfmox6p.cpp:87:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129737
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long note_count = 0;\n\
    \    long note_length = 0;\n    long note_length_count = 0;\n    long note_length_index\
    \ = 0;\n    long note_length_index2 = 0;\n    long note_length_index3 = 0;\n \
    \   long note_length_index4 = 0;\n    long note_length_index5 = 0;\n    long note_length_index6\
    \ = 0;\n    long note_length_index7 = 0;\n    long note_length_index8 = 0;\n \
    \   long note_length_index9 = 0;\n    long note_length_index10 = 0;\n    long\
    \ note_length_index11 = 0;\n    long note_length_index12 = 0;\n    long note_length_index13\
    \ = 0;\n    long note_length_index14 = 0;\n    long note_length_index15 = 0;\n\
    \    long note_length_index16 = 0;\n    long note_length_index17 = 0;\n    long\
    \ note_length_index18 = 0;\n    long note_length_index19 = 0;\n    long note_length_index20\
    \ = 0;\n    long note_length_index21 = 0;\n    long note_length_index22 = 0;\n\
    \    long note_length_index23 = 0;\n    long note_length_index24 = 0;\n    long\
    \ note_length_index25 = 0;\n    long note_length_index26 = 0;\n    long note_length_index27\
    \ = 0;\n    long note_length_index28 = 0;\n    long note_length_index29 = 0;\n\
    \    long note_length_index30 = 0;\n    long note_length_index31 = 0;\n    long\
    \ note_length_index32 = 0;\n    long note_length_index33 = 0;\n    long note_length_index34\
    \ = 0;\n    long note_length_index35 = 0;\n    long note_length_index36 = 0;\n\
    \    long note_length_index37 = 0;\n    long note_length_index38 = 0;\n    long\
    \ note_length_index39 = 0;\n    long note_length_index40 = 0;\n    long note_length_index41\
    \ = 0;\n    long note_length_index42 = 0;\n    long note_length_index43 = 0;\n\
    \    long note_length_index44 = 0;\n    long note_length_index45 = 0;\n    long\
    \ note_length_index46 = 0;\n    long note_length_index47 = 0;\n    long note_length_index48\
    \ = 0;\n    long note_length_index49 = 0;\n    long note_length_index50 = 0;\n\
    \    long note_length_index51 = 0;\n    long note_length_index52 = 0;\n    long\
    \ note_length_index53 = 0;\n    long note_length_index54 = 0;\n    long note_length_index55\
    \ = 0;\n    long note_length_index56 = 0;\n    long note_length_index57 = 0;\n\
    \    long note_length_index58 = 0;\n    long note_length_index59 = 0;\n    long\
    \ note_length_index60 = 0;\n    \n}\nint main() {\n    auto candidate = parse_music;\n\
    \    assert(candidate((\"\")) == (std::vector<long>()));\n    assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \   assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1, (long)1,\
    \ (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\")) == (std::vector<long>({(long)2,\
    \ (long)2, (long)1, (long)1, (long)4, (long)4, (long)4, (long)4})));\n    assert(candidate((\"\
    o| .| o| .| o o| o o|\")) == (std::vector<long>({(long)2, (long)1, (long)2, (long)1,\
    \ (long)4, (long)2, (long)4, (long)2})));\n}\n"
  status: Exception
  stderr: 'tmpimx1ccse: /tmp/tmpimx1ccse.cpp:81: int main(): Assertion `candidate((""))
    == (std::vector<long>())'' failed.

    '
  stdout: ''
  timestamp: 1660129738
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    bool is_note = false;\n    for (char c : music_string) {\n        if (c ==\
    \ 'o') {\n            is_note = true;\n            beat = 0;\n            last_beat\
    \ = 0;\n            note = \"\";\n        }\n        else if (c == '|') {\n  \
    \          is_note = true;\n            beat = 0;\n            last_beat = 0;\n\
    \            note = \"\";\n        }\n        else if (c == '.') {\n         \
    \   is_note = false;\n            beat = 0;\n            last_beat = 0;\n    \
    \        note = \"\";\n        }\n        else if (is_note) {\n            note\
    \ += c;\n        }\n        else {\n            beat += 1;\n            last_beat\
    \ = beat;\n        }\n    }\n    beats.push_back(beat);\n    return beats;\n}\n\
    int main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"))\
    \ == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: Exception
  stderr: 'tmpcxid394d: /tmp/tmpcxid394d.cpp:48: int main(): Assertion `candidate((""))
    == (std::vector<long>())'' failed.

    '
  stdout: ''
  timestamp: 1660129745
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long last_beat = 0;\n\
    \    bool is_note = false;\n    for (char c : music_string) {\n        if (c ==\
    \ 'o') {\n            note = note.empty() ? \"o\" : note + \"|\";\n          \
    \  beat = 0;\n            is_note = true;\n            last_beat = 0;\n      \
    \  } else if (c == '|') {\n            note = note.empty() ? \".|\" : note + \"\
    o\";\n            beat = 0;\n            is_note = true;\n            last_beat\
    \ = 0;\n        } else if (is_note) {\n            if (c == '.') {\n         \
    \       beats[beat] = beats[beat] + 1;\n            } else if (c == 'o') {\n \
    \               beats[beat] = beats[beat] + 4;\n            } else if (c == '|')\
    \ {\n                beats[beat] = beats[beat] + 2;\n            } else if (c\
    \ == '#') {\n                beats[beat] = beats[beat] + 1;\n            }\n \
    \           beat += 1;\n            last_beat = beat;\n            is_note = false;\n\
    \        }\n    }\n    return beats;\n}\nint main() {\n    auto candidate = parse_music;\n\
    \    assert(candidate((\"\")) == (std::vector<long>()));\n    assert(candidate((\"\
    o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n \
    \   assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1, (long)1,\
    \ (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\")) == (std::vector<long>({(long)2,\
    \ (long)2, (long)1, (long)1, (long)4, (long)4, (long)4, (long)4})));\n    assert(candidate((\"\
    o| .| o| .| o o| o o|\")) == (std::vector<long>({(long)2, (long)1, (long)2, (long)1,\
    \ (long)4, (long)2, (long)4, (long)2})));\n}\n"
  status: Exception
  stderr: 'tmp_y56_cfc: /tmp/tmp_y56_cfc.cpp:47: int main(): Assertion `candidate(("o
    o o o")) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4}))'' failed.

    '
  stdout: ''
  timestamp: 1660129745
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long beats = 0;\n   \
    \ long beats_total = 0;\n    long last_beat = 0;\n    long last_beats = 0;\n \
    \   long last_beats_total = 0;\n    long last_last_beat = 0;\n    long last_last_beats\
    \ = 0;\n    long last_last_beats_total = 0;\n    long last_last_last_beat = 0;\n\
    \    long last_last_last_beats = 0;\n    long last_last_last_beats_total = 0;\n\
    \    long last_last_last_last_beat = 0;\n    long last_last_last_last_beats =\
    \ 0;\n    long last_last_last_last_beats_total = 0;\n    long last_last_last_last_last_beat\
    \ = 0;\n    long last_last_last_last_last_beats = 0;\n    long last_last_last_last_last_beats_total\
    \ = 0;\n    long last_last_last_last_last_last_beat = 0;\n    long last_last_last_last_last_last_beats\
    \ = 0;\n    long last_last_last_last_last_last_beats_total = 0;\n    long last_last_last_last_last_last_last_beat\
    \ = 0;\n    long last_last_last_last_last_last_beats = 0;\n    long last_last_last_last_last_last_beats_total\
    \ = 0;\n    long last_last_last_last_last_last_last_beat = 0;\n    long last_last_last_last_last_last_beats\
    \ = 0;\n    long last_last_last_last_last_last_beats_total = 0;\n    long last_last_last_last_last_last_last_beat\
    \ = 0;\n    long last_last_last_last_last_last_beats = 0;\n    long last_last_last_last_last_last_beats_total\
    \ = 0;\n    long last_last_last_last_last_last_last_beat = 0;\n    long last_last_last_last_last_last_last_beats\
    \ = 0;\n    long last_last_last_last_last_last_last_beat = 0;\n    long last_last_last_last_last_last_last_beats\
    \ = 0;\n    long last_last_last_last_last_last_last_beat = 0;\n    long last_last_last_last_last_last_last_beats\
    \ = 0;\n    long last_last_last_last_last_last_last_beat = 0;\n    long last_last_last_last_last_last_last_beats\
    \ = 0;\n    long last_last_last_last_last_last_last_beat = 0;\n    long last_last_last_last_last_last_last_beats\
    \ = 0;\n    long last_last_last_last_last_last_last_beat = 0;\n    long last_last_last_last_last_last_last_beats\
    \ = 0;\n    long last_last_last_last_last_last_last_beat = 0;\n    long last_last_last_last_last_last_last_beats\
    \ = 0;\n    long last_last_last_last_last_last_last_beat = 0;\n    long last_last_last_last_last_last_last_beats\
    \ = 0;\n    long last_last_last_last_last_last_last_beat = 0;\n    long last_last_last_last_\n\
    }\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"\
    )) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphnj8q93l.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmphnj8q93l.cpp:14:10: error: conflicting declaration \u2018long int beats\u2019\
    \n   14 |     long beats = 0;\n      |          ^~~~~\n/tmp/tmphnj8q93l.cpp:11:23:\
    \ note: previous declaration as \u2018std::vector<long int> beats\u2019\n   11\
    \ |     std::vector<long> beats;\n      |                       ^~~~~\n/tmp/tmphnj8q93l.cpp:35:10:\
    \ error: redeclaration of \u2018long int last_last_last_last_last_last_beats\u2019\
    \n   35 |     long last_last_last_last_last_last_beats = 0;\n      |         \
    \ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnj8q93l.cpp:32:10: note: \u2018\
    long int last_last_last_last_last_last_beats\u2019 previously declared here\n\
    \   32 |     long last_last_last_last_last_last_beats = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphnj8q93l.cpp:36:10: error: redeclaration of \u2018long int last_last_last_last_last_last_beats_total\u2019\
    \n   36 |     long last_last_last_last_last_last_beats_total = 0;\n      |   \
    \       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnj8q93l.cpp:33:10:\
    \ note: \u2018long int last_last_last_last_last_last_beats_total\u2019 previously\
    \ declared here\n   33 |     long last_last_last_last_last_last_beats_total =\
    \ 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnj8q93l.cpp:37:10:\
    \ error: redeclaration of \u2018long int last_last_last_last_last_last_last_beat\u2019\
    \n   37 |     long last_last_last_last_last_last_last_beat = 0;\n      |     \
    \     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnj8q93l.cpp:34:10: note:\
    \ \u2018long int last_last_last_last_last_last_last_beat\u2019 previously declared\
    \ here\n   34 |     long last_last_last_last_last_last_last_beat = 0;\n      |\
    \          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnj8q93l.cpp:38:10:\
    \ error: redeclaration of \u2018long int last_last_last_last_last_last_beats\u2019\
    \n   38 |     long last_last_last_last_last_last_beats = 0;\n      |         \
    \ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphnj8q93l.cpp:32:10: note: \u2018\
    long int last_last_last_last_last_last_beats\u2019 "
  stdout: ''
  timestamp: 1660129745
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Write your code here\n    std::vector<long> beats;\n    std::string note;\n\
    \    long beat = 0;\n    long last_beat = 0;\n    long last_note = 0;\n    long\
    \ note_count = 0;\n    long note_length = 0;\n    long note_length_count = 0;\n\
    \    long note_length_value = 0;\n    long note_length_value_count = 0;\n    long\
    \ note_length_value_sum = 0;\n    long note_length_value_sum_count = 0;\n    long\
    \ note_length_value_sum_sum = 0;\n    long note_length_value_sum_sum_count = 0;\n\
    \    long note_length_value_sum_sum_sum = 0;\n    long note_length_value_sum_sum_sum_count\
    \ = 0;\n    long note_length_value_sum_sum_sum_sum = 0;\n    long note_length_value_sum_sum_sum_sum_count\
    \ = 0;\n    long note_length_value_sum_sum_sum_sum_sum = 0;\n    long note_length_value_sum_sum_sum_sum_sum_count\
    \ = 0;\n    long note_length_value_sum_sum_sum_sum_sum_sum = 0;\n    long note_length_value_sum_sum_sum_sum_sum_sum_count\
    \ = 0;\n    long note_length_value_sum_sum_sum_sum_sum_sum_sum = 0;\n    long\
    \ note_length_value_sum_sum_sum_sum_sum_sum_sum_count = 0;\n    long note_length_value_sum_sum_sum_sum_sum_sum_sum_sum\
    \ = 0;\n    long note_length_value_sum_sum_sum_sum_sum_sum_sum_sum_count = 0;\n\
    \    long note_length_value_sum_sum_sum_sum_sum_sum_sum_sum_sum = 0;\n    long\
    \ note_length_value_sum_sum_sum_sum_sum_sum_sum_sum_sum_count = 0;\n    long note_length_value_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\
    \ = 0;\n    long note_length_value_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_count\
    \ = 0;\n    long note_length_value_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\
    \ = 0;\n    long note_length_value_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_count\
    \ = 0;\n    long note_length_value_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\
    \ = 0;\n    long note_length_value_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_count\
    \ = 0;\n    long note_length_value_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\
    \ = 0;\n    long note_length_value_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_count\
    \ = 0;\n    long note_length_value_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\
    \ = 0;\n    long note_length_value_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_count\
    \ = 0;\n    long note_length_value_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\
    \ = 0;\n    long note_length_value_sum_sum_sum_\n}\nint main() {\n    auto candidate\
    \ = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n  \
    \  assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4,\
    \ (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpay7s29fv.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpay7s29fv.cpp:46:10: error: redeclaration of \u2018long int note_length_value_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\u2019\
    \n   46 |     long note_length_value_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpay7s29fv.cpp:44:10: note: \u2018long int note_length_value_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\u2019\
    \ previously declared here\n   44 |     long note_length_value_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpay7s29fv.cpp:47:10: error: redeclaration of \u2018long int note_length_value_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_count\u2019\
    \n   47 |     long note_length_value_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_count\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpay7s29fv.cpp:45:10: note: \u2018long int note_length_value_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_count\u2019\
    \ previously declared here\n   45 |     long note_length_value_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_count\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpay7s29fv.cpp:52:1: error: expected initializer before \u2018}\u2019 token\n\
    \   52 | }\n      | ^\n/tmp/tmpay7s29fv.cpp:52:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129745
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Your code here\n    std::vector<long> beats;\n    std::string temp;\n    long\
    \ temp2;\n    long temp3;\n    long temp4;\n    long temp5;\n    long temp6;\n\
    \    long temp7;\n    long temp8;\n    long temp9;\n    long temp10;\n    long\
    \ temp11;\n    long temp12;\n    long temp13;\n    long temp14;\n    long temp15;\n\
    \    long temp16;\n    long temp17;\n    long temp18;\n    long temp19;\n    long\
    \ temp20;\n    long temp21;\n    long temp22;\n    long temp23;\n    long temp24;\n\
    \    long temp25;\n    long temp26;\n    long temp27;\n    long temp28;\n    long\
    \ temp29;\n    long temp30;\n    long temp31;\n    long temp32;\n    long temp33;\n\
    \    long temp34;\n    long temp35;\n    long temp36;\n    long temp37;\n    long\
    \ temp38;\n    long temp39;\n    long temp40;\n    long temp41;\n    long temp42;\n\
    \    long temp43;\n    long temp44;\n    long temp45;\n    long temp46;\n    long\
    \ temp47;\n    long temp48;\n    long temp49;\n    long temp50;\n    long temp51;\n\
    \    long temp52;\n    long temp53;\n    long temp54;\n    long temp55;\n    long\
    \ temp56;\n    long temp57;\n    long temp58;\n    long temp59;\n    long temp60;\n\
    \    long temp61;\n    long temp62;\n    long temp63;\n    long temp64;\n    long\
    \ temp65;\n    long temp66;\n    long temp67;\n    long temp68;\n    long temp69;\n\
    \    long temp70;\n    long temp71;\n    long temp72;\n    long temp73;\n    long\
    \ temp74;\n    long temp75;\n    long temp76;\n    long temp77;\n    long temp78;\n\
    \    long temp79;\n    long temp80;\n    long temp81;\n    long temp82;\n    long\
    \ temp83;\n    long temp84;\n    long temp85;\n    long temp86;\n    long temp87\n\
    }\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"\
    )) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpe1_ht9b3.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpe1_ht9b3.cpp:100:1: error: expected initializer before \u2018}\u2019\
    \ token\n  100 | }\n      | ^\n/tmp/tmpe1_ht9b3.cpp:100:1: warning: no return\
    \ statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129742
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Your code here\n    std::vector<long> beats;\n    std::string note;\n    long\
    \ beat = 0;\n    long beats = 0;\n    long notes = 0;\n    long note = 0;\n  \
    \  long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n\
    \    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note =\
    \ 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note\
    \ = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long\
    \ note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n  \
    \  long note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n\
    \    long note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes =\
    \ 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes\
    \ = 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n    long\
    \ notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n  \
    \  long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n\
    \    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note =\
    \ 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note\
    \ = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long\
    \ note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n  \
    \  long note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n\
    \    long note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes =\
    \ 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes\
    \ = 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n    long\
    \ notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n  \
    \  long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note = 0;\n\
    \    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note =\
    \ 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long note\
    \ = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n    long\
    \ note = 0;\n    long notes = 0;\n    long note = 0;\n    long notes = 0;\n\n\
    }\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"\
    )) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpq07lyv0w.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpq07lyv0w.cpp:15:10: error: conflicting declaration \u2018long int beats\u2019\
    \n   15 |     long beats = 0;\n      |          ^~~~~\n/tmp/tmpq07lyv0w.cpp:12:23:\
    \ note: previous declaration as \u2018std::vector<long int> beats\u2019\n   12\
    \ |     std::vector<long> beats;\n      |                       ^~~~~\n/tmp/tmpq07lyv0w.cpp:17:10:\
    \ error: conflicting declaration \u2018long int note\u2019\n   17 |     long note\
    \ = 0;\n      |          ^~~~\n/tmp/tmpq07lyv0w.cpp:13:17: note: previous declaration\
    \ as \u2018std::string note\u2019\n   13 |     std::string note;\n      |    \
    \             ^~~~\n/tmp/tmpq07lyv0w.cpp:18:10: error: redeclaration of \u2018\
    long int notes\u2019\n   18 |     long notes = 0;\n      |          ^~~~~\n/tmp/tmpq07lyv0w.cpp:16:10:\
    \ note: \u2018long int notes\u2019 previously declared here\n   16 |     long\
    \ notes = 0;\n      |          ^~~~~\n/tmp/tmpq07lyv0w.cpp:19:10: error: conflicting\
    \ declaration \u2018long int note\u2019\n   19 |     long note = 0;\n      | \
    \         ^~~~\n/tmp/tmpq07lyv0w.cpp:13:17: note: previous declaration as \u2018\
    std::string note\u2019\n   13 |     std::string note;\n      |               \
    \  ^~~~\n/tmp/tmpq07lyv0w.cpp:20:10: error: redeclaration of \u2018long int notes\u2019\
    \n   20 |     long notes = 0;\n      |          ^~~~~\n/tmp/tmpq07lyv0w.cpp:16:10:\
    \ note: \u2018long int notes\u2019 previously declared here\n   16 |     long\
    \ notes = 0;\n      |          ^~~~~\n/tmp/tmpq07lyv0w.cpp:21:10: error: conflicting\
    \ declaration \u2018long int note\u2019\n   21 |     long note = 0;\n      | \
    \         ^~~~\n/tmp/tmpq07lyv0w.cpp:13:17: note: previous declaration as \u2018\
    std::string note\u2019\n   13 |     std::string note;\n      |               \
    \  ^~~~\n/tmp/tmpq07lyv0w.cpp:22:10: error: redeclaration of \u2018long int notes\u2019\
    \n   22 |     long notes = 0;\n      |          ^~~~~\n/tmp/tmpq07lyv0w.cpp:16:10:\
    \ note: \u2018long int notes\u2019 previously declared here\n   16 |     long\
    \ notes = 0;\n      |          ^~~~~\n/tmp/tmpq07lyv0w.cpp:23:10: error: conflicting\
    \ declaration \u2018long int note\u2019\n   23 |     long"
  stdout: ''
  timestamp: 1660129737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long beats = 0;\n   \
    \ bool is_note = false;\n    for (char c : music_string) {\n        if (c == 'o')\
    \ {\n            is_note = true;\n            beat = 0;\n            beats = 0;\n\
    \            note = \"\";\n        } else if (c == '|') {\n            is_note\
    \ = true;\n            beat = 0;\n            beats = 0;\n            note = \"\
    \";\n        } else if (c == ' ') {\n            if (is_note) {\n            \
    \    beats++;\n                beat++;\n                is_note = false;\n   \
    \         }\n        } else {\n            note += c;\n        }\n    }\n    beats.push_back(beat);\n\
    \    beats.push_back(beats);\n    return beats;\n}\nint main() {\n    auto candidate\
    \ = parse_music;\n    assert(candidate((\"\")) == (std::vector<long>()));\n  \
    \  assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4, (long)4, (long)4,\
    \ (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcj5ww0yt.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpcj5ww0yt.cpp:14:10: error: conflicting declaration \u2018long int beats\u2019\
    \n   14 |     long beats = 0;\n      |          ^~~~~\n/tmp/tmpcj5ww0yt.cpp:11:23:\
    \ note: previous declaration as \u2018std::vector<long int> beats\u2019\n   11\
    \ |     std::vector<long> beats;\n      |                       ^~~~~\n/tmp/tmpcj5ww0yt.cpp:20:21:\
    \ error: no match for \u2018operator=\u2019 (operand types are \u2018std::vector<long\
    \ int>\u2019 and \u2018int\u2019)\n   20 |             beats = 0;\n      |   \
    \                  ^\nIn file included from /usr/include/c++/9/vector:72,\n  \
    \               from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpcj5ww0yt.cpp:2:\n/usr/include/c++/9/bits/vector.tcc:198:5:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(const\
    \ std::vector<_Tp, _Alloc>&) [with _Tp = long int; _Alloc = std::allocator<long\
    \ int>]\u2019\n  198 |     vector<_Tp, _Alloc>::\n      |     ^~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/vector.tcc:199:42: note:   no known conversion for argument\
    \ 1 from \u2018int\u2019 to \u2018const std::vector<long int>&\u2019\n  199 |\
    \     operator=(const vector<_Tp, _Alloc>& __x)\n      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n\
    In file included from /usr/include/c++/9/vector:67,\n                 from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpcj5ww0yt.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:706:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(std::vector<_Tp,\
    \ _Alloc>&&) [with _Tp = long int; _Alloc = std::allocator<long int>]\u2019\n\
    \  706 |       operat"
  stdout: ''
  timestamp: 1660129745
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    std::vector<long>\
    \ beats;\n    std::string note;\n    long beat = 0;\n    long beats = 0;\n   \
    \ long notes = 0;\n    long last_note = 0;\n    long last_beat = 0;\n    long\
    \ last_beats = 0;\n    long last_notes = 0;\n    long last_last_note = 0;\n  \
    \  long last_last_beat = 0;\n    long last_last_beats = 0;\n    long last_last_notes\
    \ = 0;\n    long last_last_last_note = 0;\n    long last_last_last_beat = 0;\n\
    \    long last_last_last_beats = 0;\n    long last_last_last_notes = 0;\n    long\
    \ last_last_last_last_note = 0;\n    long last_last_last_last_beat = 0;\n    long\
    \ last_last_last_last_beats = 0;\n    long last_last_last_last_notes = 0;\n  \
    \  long last_last_last_last_last_note = 0;\n    long last_last_last_last_last_beat\
    \ = 0;\n    long last_last_last_last_last_beats = 0;\n    long last_last_last_last_last_notes\
    \ = 0;\n    long last_last_last_last_last_last_note = 0;\n    long last_last_last_last_last_last_beat\
    \ = 0;\n    long last_last_last_last_last_last_beats = 0;\n    long last_last_last_last_last_last_notes\
    \ = 0;\n    long last_last_last_last_last_last_last_note = 0;\n    long last_last_last_last_last_last_last_beat\
    \ = 0;\n    long last_last_last_last_last_last_last_beats = 0;\n    long last_last_last_last_last_last_last_notes\
    \ = 0;\n    long last_last_last_last_last_last_last_last_note = 0;\n    long last_last_last_last_last_last_last_last_beat\
    \ = 0;\n    long last_last_last_last_last_last_last_last_beats = 0;\n    long\
    \ last_last_last_last_last_last_last_last_notes = 0;\n    long last_last_last_last_last_last_last_last_note\
    \ = 0;\n    long last_last_last_last_last_last_last_last_beat = 0;\n    long last_last_last_last_last_last_last_last_beats\
    \ = 0;\n    long last_last_last_last_last_last_last_last_notes = 0;\n    long\
    \ last_last_last_last_last_last_last_last_note = 0;\n    long last_last_last_last_last_last_last_last_beat\
    \ = 0;\n    long last_last_last_last_last_last_last_last_beats = 0;\n    long\
    \ last_last_last_last_last_last_last_last_notes = 0;\n    long last_last_last_last_last_last_last_last_note\
    \ = 0;\n    long last_last_last_last_last_last_last_last_beat = 0;\n    long last_last_last_last_last_last_last_last_beats\
    \ = 0;\n    long last_last_last_last_last_last_last_last_notes = 0;\n    long\
    \ last_last_last_last_last_last_last_last_note = 0;\n    long last_last_last_last_last_last_last_last_beat\
    \ = 0;\n}\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\
    \")) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo40rjhch.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmpo40rjhch.cpp:14:10: error: conflicting declaration \u2018long int beats\u2019\
    \n   14 |     long beats = 0;\n      |          ^~~~~\n/tmp/tmpo40rjhch.cpp:11:23:\
    \ note: previous declaration as \u2018std::vector<long int> beats\u2019\n   11\
    \ |     std::vector<long> beats;\n      |                       ^~~~~\n/tmp/tmpo40rjhch.cpp:48:10:\
    \ error: redeclaration of \u2018long int last_last_last_last_last_last_last_last_note\u2019\
    \n   48 |     long last_last_last_last_last_last_last_last_note = 0;\n      |\
    \          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpo40rjhch.cpp:44:10:\
    \ note: \u2018long int last_last_last_last_last_last_last_last_note\u2019 previously\
    \ declared here\n   44 |     long last_last_last_last_last_last_last_last_note\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpo40rjhch.cpp:49:10:\
    \ error: redeclaration of \u2018long int last_last_last_last_last_last_last_last_beat\u2019\
    \n   49 |     long last_last_last_last_last_last_last_last_beat = 0;\n      |\
    \          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpo40rjhch.cpp:45:10:\
    \ note: \u2018long int last_last_last_last_last_last_last_last_beat\u2019 previously\
    \ declared here\n   45 |     long last_last_last_last_last_last_last_last_beat\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpo40rjhch.cpp:50:10:\
    \ error: redeclaration of \u2018long int last_last_last_last_last_last_last_last_beats\u2019\
    \n   50 |     long last_last_last_last_last_last_last_last_beats = 0;\n      |\
    \          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpo40rjhch.cpp:46:10:\
    \ note: \u2018long int last_last_last_last_last_last_last_last_beats\u2019 previously\
    \ declared here\n   46 |     long last_last_last_last_last_last_last_last_beats\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpo40rjhch.cpp:51:10:\
    \ error: redeclaration of \u2018long int last_last_last_last_last_last_last_last_notes\u2019\
    \n   51 |     long last_last_last_last_last_last_last_last_notes = 0;\n      |\
    \   "
  stdout: ''
  timestamp: 1660129745
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function\
    \ is a string representing musical notes in a special ASCII format.\n// Your task\
    \ is to parse this string and return list of integers corresponding to how many\
    \ beats does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts\
    \ four beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts\
    \ one beat\nstd::vector<long> parse_music(std::string music_string) {\n    //\
    \ Your code here\n    std::vector<long> beats;\n    long beats_counter = 0;\n\
    \    long last_beat = 0;\n    long last_note = 0;\n    long note = 0;\n    long\
    \ note_counter = 0;\n    long note_counter2 = 0;\n    long note_counter3 = 0;\n\
    \    long note_counter4 = 0;\n    long note_counter5 = 0;\n    long note_counter6\
    \ = 0;\n    long note_counter7 = 0;\n    long note_counter8 = 0;\n    long note_counter9\
    \ = 0;\n    long note_counter10 = 0;\n    long note_counter11 = 0;\n    long note_counter12\
    \ = 0;\n    long note_counter13 = 0;\n    long note_counter14 = 0;\n    long note_counter15\
    \ = 0;\n    long note_counter16 = 0;\n    long note_counter17 = 0;\n    long note_counter18\
    \ = 0;\n    long note_counter19 = 0;\n    long note_counter20 = 0;\n    long note_counter21\
    \ = 0;\n    long note_counter22 = 0;\n    long note_counter23 = 0;\n    long note_counter24\
    \ = 0;\n    long note_counter25 = 0;\n    long note_counter26 = 0;\n    long note_counter27\
    \ = 0;\n    long note_counter28 = 0;\n    long note_counter29 = 0;\n    long note_counter30\
    \ = 0;\n    long note_counter31 = 0;\n    long note_counter32 = 0;\n    long note_counter33\
    \ = 0;\n    long note_counter34 = 0;\n    long note_counter35 = 0;\n    long note_counter36\
    \ = 0;\n    long note_counter37 = 0;\n    long note_counter38 = 0;\n    long note_counter39\
    \ = 0;\n    long note_counter40 = 0;\n    long note_counter41 = 0;\n    long note_counter42\
    \ = 0;\n    long note_counter43 = 0;\n    long note_counter44 = 0;\n    long note_counter45\
    \ = 0;\n    long note_counter46 = 0;\n    long note_counter47 = 0;\n    long note_counter48\
    \ = 0;\n    long note_counter49 = 0;\n    long note_counter50 = 0;\n    long note_counter51\
    \ = 0;\n    long note_counter52 = 0;\n    long note_counter53 = 0;\n    long note_counter54\
    \ = 0;\n    long note_counter55 = 0;\n    long note_counter56 = 0;\n    long note_counter57\
    \ = 0;\n    long note_counter58 = 0;\n    long note_counter59 = 0;\n    long note_counter60\
    \ = 0;\n    long note_counter61 = 0;\n    long note_counter62 = 0;\n    long note_counter63\
    \ = 0;\n    long note_counter64 = 0;\n    long note_counter65 = 0;\n    long note_counter66\
    \ = 0;\n    long note_counter67 = 0;\n    long note_counter68 = 0;\n    long note_counter69\n\
    }\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\"\
    )) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
    \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
    \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
    )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
    \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) ==\
    \ (std::vector<long>({(long)2, (long)1, (long)2, (long)1, (long)4, (long)2, (long)4,\
    \ (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmposxl4kkg.cpp: In function \u2018std::vector<long int> parse_music(std::string)\u2019\
    :\n/tmp/tmposxl4kkg.cpp:86:1: error: expected initializer before \u2018}\u2019\
    \ token\n   86 | }\n      | ^\n/tmp/tmposxl4kkg.cpp:86:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660129745

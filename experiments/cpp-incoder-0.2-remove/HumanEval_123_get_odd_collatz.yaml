name: HumanEval_123_get_odd_collatz
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
  \ n, return a sorted list that has the odd numbers in collatz sequence.\n// The\
  \ Collatz conjecture is a conjecture in mathematics that concerns a sequence defined\n\
  // as follows: start with any positive integer n. Then each term is obtained from\
  \ the \n// previous term as follows: if the previous term is even, the next term\
  \ is one half of \n// the previous term. If the previous term is odd, the next term\
  \ is 3 times the previous\n// term plus 1. The conjecture is that no matter what\
  \ value of n, the sequence will always reach 1.\n// Note: \n// 1. Collatz(1) is\
  \ [1].\n// 2. returned list sorted in increasing order.\n// For example:\n// get_odd_collatz(5)\
  \ returns [1, 5] # The collatz sequence for 5 is [5, 16, 8, 4, 2, 1], so the odd\
  \ numbers are only 1, and 5.\nstd::vector<long> get_odd_collatz(long n) {\n"
tests: "}\nint main() {\n    auto candidate = get_odd_collatz;\n    assert(candidate((14))\
  \ == (std::vector<long>({(long)1, (long)5, (long)7, (long)11, (long)13, (long)17})));\n\
  \    assert(candidate((5)) == (std::vector<long>({(long)1, (long)5})));\n    assert(candidate((12))\
  \ == (std::vector<long>({(long)1, (long)3, (long)5})));\n    assert(candidate((1))\
  \ == (std::vector<long>({(long)1})));\n}\n"
completions: ["    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    long next_term_odd = 1;\n\
    \    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_", "    std::vector<long>\
    \ odd_collatz;\n    odd_collatz.push_back(n);\n    long prev_term = 1;\n    long\
    \ next_term = 1;\n    long next_term_odd = 1;\n    long next_term_even = 1;\n\
    \    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n   \
    \ long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n\
    \    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_od", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev_term = 1;\n    long next_term =\
    \ 1;\n    long next_term_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev = 1;\n    long next_odd;\n    while(true) {\n        next_odd =\
    \ prev % 2 == 0 ? prev / 2 : 3 * prev + 1;\n        odd_collatz.push_back(next_odd);\n\
    \        prev = next_odd;\n        if(next_odd != 1) break;\n    }\n    std::sort(odd_collatz.begin(),\
    \ odd_collatz.end());\n    return odd_collatz;", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev_term = 1;\n    long next_term =\
    \ 1;\n    long next_term_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    long next_term_prev = 1;\n\
    \    long next_term_next = 1;\n    long next_term_next_prev = 1;\n    long next_term_next_next\
    \ = 1;\n    long next_term_next_next_prev = 1;\n    long next_term_next_next_next\
    \ = 1;\n    long next_term_next_next_next_prev = 1;\n    long next_term_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next = 1;\n\
    \    long next_term_next_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next = 1;\n\
    \    long next_term_next_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next =\
    \ 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev = 1;\n    long next_odd = 0;\n    long next_even = 1;\n    long\
    \ next_odd2 = 1;\n    long next_even2 = 1;\n    long next_odd3 = 1;\n    long\
    \ next_even3 = 1;\n    long next_odd4 = 1;\n    long next_even4 = 1;\n    long\
    \ next_odd5 = 1;\n    long next_even5 = 1;\n    long next_odd6 = 1;\n    long\
    \ next_even6 = 1;\n    long next_odd7 = 1;\n    long next_even7 = 1;\n    long\
    \ next_odd8 = 1;\n    long next_even8 = 1;\n    long next_odd9 = 1;\n    long\
    \ next_even9 = 1;\n    long next_odd10 = 1;\n    long next_even10 = 1;\n    long\
    \ next_odd11 = 1;\n    long next_even11 = 1;\n    long next_odd12 = 1;\n    long\
    \ next_even12 = 1;\n    long next_odd13 = 1;\n    long next_even13 = 1;\n    long\
    \ next_odd14 = 1;\n    long next_even14 = 1;\n    long next_odd15 = 1;\n    long\
    \ next_even15 = 1;\n    long next_odd16 = 1;\n    long next_even16 = 1;\n    long\
    \ next_odd17 = 1;\n    long next_even17 = 1;\n    long next_odd18 = 1;\n    long\
    \ next_even18 = 1;\n    long next_odd19 = 1;\n    long next_even19 = 1;\n    long\
    \ next_odd20 = 1;\n    long next_even20 = 1;\n    long next_odd21 = 1;\n    long\
    \ next_even21 = 1;\n    long next_odd22 = 1;\n    long next_even22 = 1;\n    long\
    \ next_odd23 = 1;\n    long next_even23 = 1;\n    long next_odd24 = 1;\n    long\
    \ next_even24 = 1;\n    long next_odd25 = 1;\n    long next_even25 = 1;\n    long\
    \ next_odd26 = 1;\n    long next_even26 = 1;\n    long next_odd27 = 1;\n    long\
    \ next_even27 = 1;\n    long next_odd28 = 1;\n    long next_even28 = 1;\n    long\
    \ next_odd29 = 1;\n    long next_even29 = 1;\n    long next_odd30 = 1;\n    long\
    \ next_even30 = 1;\n    long next_odd31 = 1;\n    long next_even31 = 1;\n    long\
    \ next_odd32 = 1;\n    long next_even32 = 1;\n    long next_odd33 = 1;\n    long\
    \ next_even33 = 1;\n    long next_odd34 = 1;\n    long next_even34 = 1;\n    long\
    \ next_odd35 = 1;\n    long next_even35 = 1;\n    ", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev_term = 1;\n    long next_term =\
    \ 1;\n    while (next_term != 1) {\n        if (prev_term % 2 == 0) {\n      \
    \      next_term = prev_term / 2;\n        } else {\n            next_term = prev_term\
    \ * 3 + 1;\n        }\n        odd_collatz.push_back(next_term);\n        prev_term\
    \ = next_term;\n    }\n    std::sort(odd_collatz.begin(), odd_collatz.end());\n\
    \    return odd_collatz;", "    std::vector<long> odd_collatz(n);\n    odd_collatz[0]\
    \ = 1;\n    long odd_collatz_sum = 0;\n    long odd_collatz_sum2 = 0;\n    long\
    \ odd_collatz_sum3 = 0;\n    long odd_collatz_sum4 = 0;\n    long odd_collatz_sum5\
    \ = 0;\n    long odd_collatz_sum6 = 0;\n    long odd_collatz_sum7 = 0;\n    long\
    \ odd_collatz_sum8 = 0;\n    long odd_collatz_sum9 = 0;\n    long odd_collatz_sum10\
    \ = 0;\n    long odd_collatz_sum11 = 0;\n    long odd_collatz_sum12 = 0;\n   \
    \ long odd_collatz_sum13 = 0;\n    long odd_collatz_sum14 = 0;\n    long odd_collatz_sum15\
    \ = 0;\n    long odd_collatz_sum16 = 0;\n    long odd_collatz_sum17 = 0;\n   \
    \ long odd_collatz_sum18 = 0;\n    long odd_collatz_sum19 = 0;\n    long odd_collatz_sum20\
    \ = 0;\n    long odd_collatz_sum21 = 0;\n    long odd_collatz_sum22 = 0;\n   \
    \ long odd_collatz_sum23 = 0;\n    long odd_collatz_sum24 = 0;\n    long odd_collatz_sum25\
    \ = 0;\n    long odd_collatz_sum26 = 0;\n    long odd_collatz_sum27 = 0;\n   \
    \ long odd_collatz_sum28 = 0;\n    long odd_collatz_sum29 = 0;\n    long odd_collatz_sum30\
    \ = 0;\n    long odd_collatz_sum31 = 0;\n    long odd_collatz_sum32 = 0;\n   \
    \ long odd_collatz_sum33 = 0;\n    long odd_collatz_sum34 = 0;\n    long odd_collatz_sum35\
    \ = 0;\n    long odd_collatz_sum36 = 0;\n    long odd_collatz_sum37 = 0;\n   \
    \ long odd_collatz_sum38 = 0;\n    long odd_collatz_sum39 = 0;\n    long odd_collatz_sum40\
    \ = 0;\n    long odd_collatz_sum41 = 0;\n    long odd_collatz_sum42 = 0;\n   \
    \ long odd_collatz_sum43 = 0;\n    long odd_collatz_sum44 = 0;\n    long odd_collatz_sum45\
    \ = 0;\n    ", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    long next_term_odd = 1;\n\
    \    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_", "    std::vector<long>\
    \ odd_collatz(n);\n    long prev_term = 1;\n    for (long i = 0; i < n; i++) {\n\
    \        if (prev_term % 2 == 0) {\n            odd_collatz[i] = prev_term / 2;\n\
    \        } else {\n            odd_collatz[i] = 3 * prev_term + 1;\n        }\n\
    \        prev_term = odd_collatz[i];\n    }\n    return odd_collatz;", "    std::vector<long>\
    \ odd_collatz;\n    odd_collatz.push_back(n);\n    long next_term = 1;\n    long\
    \ prev_term = 1;\n    long counter = 1;\n    while (counter != 1) {\n        if\
    \ (prev_term % 2 == 0) {\n            next_term = prev_term / 2;\n        } else\
    \ {\n            next_term = prev_term * 3 + 1;\n        }\n        odd_collatz.push_back(next_term);\n\
    \        prev_term = next_term;\n        counter++;\n    }\n    std::sort(odd_collatz.begin(),\
    \ odd_collatz.end());\n    return odd_collatz;", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev = 1;\n    long next_odd;\n    while(prev\
    \ != 1) {\n        next_odd = prev % 2 == 0 ? prev / 2 : 3 * prev + 1;\n     \
    \   odd_collatz.push_back(next_odd);\n        prev = next_odd;\n    }\n    std::sort(odd_collatz.begin(),\
    \ odd_collatz.end());\n    return odd_collatz;", "    std::vector<long> odd_collatz(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    long next_term_odd = 1;\n\
    \    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_od", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    long next_term_odd = 1;\n\
    \    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_odd_even = 1;\n    long next_term_odd_odd_odd =\
    \ 1;\n    long next_term_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n\
    \    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_od",
  "    std::vector<long> odd_collatz_list;\n    odd_collatz_list.push_back(1); //\
    \ The first term is 1.\n    long prev_term = 1;\n    long next_term = 1;\n   \
    \ long next_term_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_", "    std::vector<long>\
    \ odd_collatz;\n    odd_collatz.push_back(n);\n    long next_term = 1;\n    long\
    \ prev_term = 1;\n    long next_term_odd = 1;\n    long prev_term_odd = 1;\n \
    \   long next_term_even = 1;\n    long prev_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long prev_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long prev_term_odd_odd = 1;\n    long next_term_even = 1;\n    long prev_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long prev_term_odd_even = 1;\n \
    \   long next_term_odd_odd = 1;\n    long prev_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long prev_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ prev_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long prev_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long prev_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long prev_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long prev_term_odd_odd = 1;\n    long next_term_even = 1;\n    long prev_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long prev_term_odd_even = 1;\n \
    \   long next_term_odd_odd = 1;\n    long prev_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long prev_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ prev_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long prev_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long prev_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long prev_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long prev_term_odd_odd = 1;\n    long next_term_even = 1;\n    long prev_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long prev_term_odd_even = 1;\n \
    \   long next_term_odd_odd = 1;\n    long prev_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long prev_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ prev_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long prev_term_odd_",
  "    std::vector<long> odd_collatz(n);\n    long prev_term = 1;\n    long next_term\
    \ = 1;\n    long count = 0;\n    long i = 1;\n    while(i < n) {\n        odd_collatz[i]\
    \ = prev_term;\n        if(prev_term % 2 == 0) {\n            next_term = prev_term\
    \ / 2;\n        } else {\n            next_term = prev_term * 3 + 1;\n       \
    \ }\n        prev_term = next_term;\n        i++;\n        count++;\n    }\n \
    \   for(long i = 0; i < count; i++) {\n        odd_collatz[i] = odd_collatz[i]\
    \ % 2;\n    }\n    odd_collatz.push_back(0);\n    return odd_collatz;", "    std::vector<long>\
    \ odd_collatz(n);\n    long prev_term = 1;\n    long next_term = 1;\n    long\
    \ next_term_2 = 1;\n    long next_term_3 = 1;\n    long next_term_4 = 1;\n   \
    \ long next_term_5 = 1;\n    long next_term_6 = 1;\n    long next_term_7 = 1;\n\
    \    long next_term_8 = 1;\n    long next_term_9 = 1;\n    long next_term_10 =\
    \ 1;\n    long next_term_11 = 1;\n    long next_term_12 = 1;\n    long next_term_13\
    \ = 1;\n    long next_term_14 = 1;\n    long next_term_15 = 1;\n    long next_term_16\
    \ = 1;\n    long next_term_17 = 1;\n    long next_term_18 = 1;\n    long next_term_19\
    \ = 1;\n    long next_term_20 = 1;\n    long next_term_21 = 1;\n    long next_term_22\
    \ = 1;\n    long next_term_23 = 1;\n    long next_term_24 = 1;\n    long next_term_25\
    \ = 1;\n    long next_term_26 = 1;\n    long next_term_27 = 1;\n    long next_term_28\
    \ = 1;\n    long next_term_29 = 1;\n    long next_term_30 = 1;\n    long next_term_31\
    \ = 1;\n    long next_term_32 = 1;\n    long next_term_33 = 1;\n    long next_term_34\
    \ = 1;\n    long next_term_35 = 1;\n    long next_term_36 = 1;\n    long next_term_37\
    \ = 1;\n    long next_term_38 = 1;\n    long next_term_39 = 1;\n    long next_term_40\
    \ = 1;\n    long next_term_41 = 1;\n    long next_term_42 = 1;\n    long next_term_43\
    \ = 1;\n    long next_term_44 = 1;\n    long next_term_45 = 1;\n    long next_term_46\
    \ = 1;\n    long next_term_47 = 1;\n    long next_term_48 = 1;\n    long next_term_49\
    \ = 1;\n    long next_term_50 = 1;\n    long next_term_51 = 1;\n    long next_term_52\
    \ = 1;\n    long next_term_53 = 1;\n    long next_term_54 = 1;\n    long next_term_55\
    \ = 1;\n    long next_term_56 = 1;\n    long next_term_57 = 1;\n    long next_term_58\
    \ = 1;\n    long next_term_59 = 1;\n    long next_term_60 = 1;\n    long next_term_61\
    \ = 1;\n    long next_term_62 = 1;\n    long next_term_63 = 1;\n    long next_term_64\
    \ = 1;\n    long next_term_65 = 1;\n    long next_term_66 = 1;\n    long next_term_67\
    \ = 1;\n    long next_term_68 = 1;\n    long next_term_69 = 1;\n    long next_term_70\
    \ = 1;\n    ", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev = 1;\n    long next_odd;\n    while (true) {\n        if (prev\
    \ % 2 == 0) {\n            next_odd = prev / 2;\n        } else {\n          \
    \  next_odd = prev * 3 + 1;\n        }\n        if (next_odd != 1) {\n       \
    \     odd_collatz.push_back(next_odd);\n        }\n        prev = next_odd;\n\
    \        if (next_odd != 1) {\n            break;\n        }\n    }\n    std::sort(odd_collatz.begin(),\
    \ odd_collatz.end());\n    return odd_collatz;", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev_term = 1;\n    long next_term =\
    \ 1;\n    long next_term_odd = 1;\n    long next_term_even = 1;\n    long odd_term\
    \ = 1;\n    long even_term = 1;\n    long odd_term_odd = 1;\n    long even_term_even\
    \ = 1;\n    long odd_term_even = 1;\n    long even_term_odd = 1;\n    long odd_term_odd\
    \ = 1;\n    long even_term_even = 1;\n    long odd_term_odd = 1;\n    long even_term_even\
    \ = 1;\n    long odd_term_odd = 1;\n    long even_term_even = 1;\n    long odd_term_odd\
    \ = 1;\n    long even_term_even = 1;\n    long odd_term_odd = 1;\n    long even_term_even\
    \ = 1;\n    long odd_term_odd = 1;\n    long even_term_even = 1;\n    long odd_term_odd\
    \ = 1;\n    long even_term_even = 1;\n    long odd_term_odd = 1;\n    long even_term_even\
    \ = 1;\n    long odd_term_odd = 1;\n    long even_term_even = 1;\n    long odd_term_odd\
    \ = 1;\n    long even_term_even = 1;\n    long odd_term_odd = 1;\n    long even_term_even\
    \ = 1;\n    long odd_term_odd = 1;\n    long even_term_even = 1;\n    long odd_term_odd\
    \ = 1;\n    long even_term_even = 1;\n    long odd_term_odd = 1;\n    long even_term_even\
    \ = 1;\n    long odd_term_odd = 1;\n    long even_term_even = 1;\n    long odd_term_odd\
    \ = 1;\n    long even_term_even = 1;\n    long odd_term_odd = 1;\n    long even_term_even\
    \ = 1;\n    long odd_term_odd = 1;\n    long even_term_even = 1;\n    long odd_term_odd\
    \ = 1;\n    long even_term_even = 1;\n    long odd_term_odd = 1;\n    long even_term_even\
    \ = 1;\n    long odd_term_odd = 1;\n    long even_term_even = 1;\n    long odd_term_odd\
    \ = 1;\n    long even_term_even = 1;\n    long odd_term_odd = 1;\n    long even_term_even\
    \ = 1;\n    long odd_term_odd = 1;\n    long even_term_even = 1;\n    long odd_term_odd\
    \ = 1;\n", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    while (next_term != 1)\
    \ {\n        if (prev_term % 2 == 0) {\n            next_term = prev_term / 2;\n\
    \        } else {\n            next_term = prev_term * 3 + 1;\n        }\n   \
    \     prev_term = next_term;\n        odd_collatz.push_back(next_term);\n    }\n\
    \    std::sort(odd_collatz.begin(), odd_collatz.end());\n    return odd_collatz;",
  "    std::vector<long> odd_collatz(n);\n    long prev_term = 1;\n    long next_term\
    \ = 1;\n    long next_term_odd = 1;\n    long next_term_even = 1;\n    long i\
    \ = 0;\n    while(i < n) {\n        if(prev_term % 2 == 0) {\n            next_term_even\
    \ = prev_term / 2;\n            next_term = next_term_even * 2;\n        } else\
    \ {\n            next_term_odd = prev_term / 2;\n            next_term = next_term_odd\
    \ * 2 + 1;\n        }\n        odd_collatz[i] = next_term;\n        prev_term\
    \ = next_term;\n        i++;\n    }\n    sort(odd_collatz.begin(), odd_collatz.end());\n\
    \    return odd_collatz;", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    long next_term_odd = 1;\n\
    \    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_", "    std::vector<long>\
    \ odd_collatz;\n    odd_collatz.push_back(n);\n    long prev_term = 1;\n    long\
    \ next_term = 1;\n    long next_term_odd = 1;\n    long next_term_even = 1;\n\
    \    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    long prev_term_odd = 1;\n\
    \    long next_term_odd = 1;\n    long odd_count = 0;\n    long odd_count_prev\
    \ = 1;\n    long odd_count_next = 1;\n    long odd_count_prev_odd = 1;\n    long\
    \ odd_count_next_odd = 1;\n    long odd_count_prev_odd_prev = 1;\n    long odd_count_next_odd_next\
    \ = 1;\n    long odd_count_prev_odd_next_prev = 1;\n    long odd_count_next_odd_next_next\
    \ = 1;\n    long odd_count_prev_odd_next_next_prev = 1;\n    long odd_count_next_odd_next_next_next\
    \ = 1;\n    long odd_count_prev_odd_next_next_next_prev = 1;\n    long odd_count_next_odd_next_next_next_next\
    \ = 1;\n    long odd_count_prev_odd_next_next_next_next_prev = 1;\n    long odd_count_next_odd_next_next_next_next_next\
    \ = 1;\n    long odd_count_prev_odd_next_next_next_next_next_prev = 1;\n    long\
    \ odd_count_next_odd_next_next_next_next_next_next = 1;\n    long odd_count_prev_odd_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_count_next_odd_next_next_next_next_next_next_next = 1;\n\
    \    long odd_count_prev_odd_next_next_next_next_next_next_prev_odd = 1;\n   \
    \ long odd_count_next_odd_next_next_next_next_next_next_next_odd = 1;\n    long\
    \ odd_count_prev_odd_next_next_next_next_next_next_prev_odd_prev = 1;\n    long\
    \ odd_count_next_odd_next_next_next_next_next_next_odd_next = 1;\n    long odd_count_prev_odd_next_next_next_next_next_next_prev_odd_next_prev\
    \ = 1;\n    long odd_count_next_odd_next_next_next_next_next_next_odd_next_next\
    \ = 1;\n    long odd_count_prev_odd_next_next_next_next_next_next_next_prev_odd_next_next_prev\
    \ = 1;\n    long odd_count_next_odd_next_next_next_next_next_next_odd_next_next_next\
    \ = 1;\n    long odd_count_prev_odd_next_next_next_next_next_next_prev_odd_next_next_next_prev\
    \ = 1;\n    long odd_count_next_odd_next_next_next_next_next_next_odd_next_next_next_next\
    \ = 1;\n    long odd_count_prev_odd_next_next_next_next_next_next_prev_odd_next_next_",
  "    std::vector<long> odd_collatz(n);\n    long prev_term = 1;\n    long next_term\
    \ = 1;\n    long prev_term_odd = 1;\n    long next_term_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n", "    std::vector<long>\
    \ odd_collatz;\n    odd_collatz.push_back(n);\n    long prev = 1;\n    long next_odd;\n\
    \    while (n != 1) {\n        if (n % 2 == 0) {\n            next_odd = prev\
    \ + 2;\n        } else {\n            next_odd = prev + 1;\n        }\n      \
    \  odd_collatz.push_back(next_odd);\n        prev = next_odd;\n        n = n /\
    \ 2;\n    }\n    return odd_collatz;", "    std::vector<long> odd_collatz;\n \
    \   odd_collatz.push_back(n);\n    long prev_term = 1;\n    long next_term = 1;\n\
    \    long next_term_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_", "    std::vector<long> odd_collatz(n);\n    odd_collatz[0]\
    \ = 1;\n    long next_term = 1;\n    long prev_term = 1;\n    for(long i = 1;\
    \ i < n; i++) {\n        if(prev_term % 2 == 0) {\n            next_term = prev_term\
    \ / 2;\n        } else {\n            next_term = prev_term * 3 + 1;\n       \
    \ }\n        odd_collatz[i] = next_term;\n        prev_term = next_term;\n   \
    \ }\n    return odd_collatz;", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    long next_term_prev = 1;\n\
    \    long next_term_next = 1;\n    long next_term_next_prev = 1;\n    long next_term_next_next\
    \ = 1;\n    long next_term_next_next_prev = 1;\n    long next_term_next_next_next\
    \ = 1;\n    long next_term_next_next_next_prev = 1;\n    long next_term_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next = 1;\n\
    \    long next_term_next_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next = 1;\n\
    \    long next_term_next_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next =\
    \ 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    long next_term_prev = 1;\n\
    \    long next_term_next = 1;\n    long next_term_next_prev = 1;\n    long next_term_next_next\
    \ = 1;\n    long next_term_next_next_prev = 1;\n    long next_term_next_next_next\
    \ = 1;\n    long next_term_next_next_next_prev = 1;\n    long next_term_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next = 1;\n\
    \    long next_term_next_next_next_next_next_next_next_next_next_prev = 1;\n \
    \   long next_term_next_next_next_next_next_next_next_next_next_next = 1;\n  \
    \  long next_term_next_next_next_next_next_next_next_next_next_prev = 1;\n   \
    \ long next_term_next_next_next_next_next_next_next_next_next_next = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_prev =\
    \ 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next = 1;\n\
    \    long next_term_next_next_next_next_next_next_next_next_next_next_prev = 1;\n\
    \    long next_term_next_next_next_next_next_next_next_next_next_next_next = 1;\n\
    \    long next_term_next_next_next_next_next_next_next_next_next_next_prev = 1;\n\
    \    long next_term_next_next_next_next_next_next_next_next_next_next_next = 1;\n\
    \    long next_term_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev = 1;\n    long next_odd;\n    while (true) {\n        if (prev\
    \ % 2 == 0) {\n            next_odd = prev / 2;\n        } else {\n          \
    \  next_odd = prev * 3 + 1;\n        }\n        if (next_odd != 1) {\n       \
    \     odd_collatz.push_back(next_odd);\n        }\n        prev = next_odd;\n\
    \        if (odd_collatz.size() == n) {\n            break;\n        }\n    }\n\
    \    return odd_collatz;", "    std::vector<long> odd_collatz(n);\n    long prev\
    \ = 1;\n    for (long i = 0; i < n; i++) {\n        if (i % 2 == 0) {\n      \
    \      odd_collatz[i] = prev;\n            prev = prev / 2;\n        } else {\n\
    \            odd_collatz[i] = prev * 3 + 1;\n            prev = odd_collatz[i];\n\
    \        }\n    }\n    return odd_collatz;", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev_term = 1;\n    long next_term =\
    \ 1;\n    long next_term_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_", "    std::vector<long> odd_collatz_list;\n    odd_collatz_list.push_back(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    long next_term_odd = 1;\n\
    \    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_odd_even = 1;\n    long next_term_odd_odd_odd =\
    \ 1;\n    long next_term_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n\
    \    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_",
  "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev_term\
    \ = 1;\n    long next_term = 1;\n    long next_term_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n", "    std::vector<long>\
    \ odd_collatz;\n    odd_collatz.push_back(n);\n    long prev_term = 1;\n    long\
    \ next_term = 1;\n    long counter = 1;\n    while (counter != 1) {\n        if\
    \ (prev_term % 2 == 0) {\n            next_term = prev_term / 2;\n        } else\
    \ {\n            next_term = prev_term * 3 + 1;\n        }\n        odd_collatz.push_back(next_term);\n\
    \        prev_term = next_term;\n        counter++;\n    }\n    std::sort(odd_collatz.begin(),\
    \ odd_collatz.end());\n    return odd_collatz;", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev_term = 1;\n    long next_term =\
    \ 1;\n    long next_term_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    long next_term_prev = 1;\n\
    \    long next_term_next = 1;\n    long next_term_next_prev = 1;\n    long next_term_next_next\
    \ = 1;\n    long next_term_next_next_prev = 1;\n    long next_term_next_next_next\
    \ = 1;\n    long next_term_next_next_next_prev = 1;\n    long next_term_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_prev = 1;\n\
    \    long next_term_next_next_next_next_next_next_next_next_next = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_prev = 1;\n\
    \    long next_term_next_next_next_next_next_next_next_next_next_next = 1;\n \
    \   ", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n  \
    \  long prev = 1;\n    long next_odd;\n    while (n > 1) {\n        if (n % 2\
    \ == 0) {\n            next_odd = prev * 2 + 1;\n        } else {\n          \
    \  next_odd = prev * 3;\n        }\n        odd_collatz.push_back(next_odd);\n\
    \        prev = next_odd;\n        n = n / 2;\n    }\n    return odd_collatz;",
  "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev_term\
    \ = 1;\n    long next_term = 1;\n    long next_term_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_odd_even = 1;\n    long next_term_odd_odd_odd = 1;\n   \
    \ long next_term_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd = 1;\n\
    \    long next_term_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n\
    \    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_od",
  "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev_term\
    \ = 1;\n    long next_term = 1;\n    long prev_term_odd = 1;\n    long next_term_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even_even = 1;\n    long next_term_even_odd\
    \ = 1;\n    long next_term_odd_even_even = 1;\n    long next_term_odd_even_odd\
    \ = 1;\n    long next_term_even_even_even = 1;\n    long next_term_even_even_odd\
    \ = 1;\n    long next_term_odd_even_even_even = 1;\n    long next_term_odd_even_even_odd\
    \ = 1;\n    long next_term_even_odd_even = 1;\n    long next_term_even_odd_odd\
    \ = 1;\n    long next_term_odd_even_odd_even = 1;\n    long next_term_odd_even_odd_odd\
    \ = 1;\n    long next_term_odd_even_odd_even_even = 1;\n    long next_term_odd_even_odd_even_odd\
    \ = 1;\n    long next_term_odd_even_odd_even_even_even = 1;\n    long next_term_odd_even_odd_even_even_odd\
    \ = 1;\n    long next_term_odd_even_odd_even_even_even_even = 1;\n    long next_term_odd_even_odd_even_even_odd\
    \ = 1;\n    long next_term_odd_even_odd_even_even_even_even = 1;\n    long next_term_odd_even_odd_even_even_odd\
    \ = 1;\n    long next_term_odd_even_odd_even_even_even_odd = 1;\n    long next_term_odd_even_odd_even_even_even_even_even\
    \ = 1;\n    long next_term_odd_even_odd_even_even_even_odd = 1;\n    long next_term_odd_even_odd_even_even_even_even_even\
    \ = 1;\n    long next_term_odd_even_odd_even_even_even_odd = 1;\n    long next_term_odd_even_odd_even_even_even_even_even\
    \ = 1;\n    long next_term_odd_even_odd_even_even_even_odd = 1;\n    long next_term_odd_even_odd_even_ev",
  "    std::vector<long> odd_collatz(n);\n    odd_collatz[0] = 1;\n    long prev_term\
    \ = 1;\n    long next_term = 1;\n    long counter = 1;\n    while(counter != n)\
    \ {\n        if(prev_term % 2 == 0) {\n            next_term = prev_term / 2;\n\
    \        } else {\n            next_term = prev_term * 3 + 1;\n        }\n   \
    \     odd_collatz[counter] = next_term;\n        prev_term = next_term;\n    \
    \    counter++;\n    }\n    return odd_collatz;", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev_term = 1;\n    long next_term =\
    \ 1;\n    long next_term_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    while (next_term != 1)\
    \ {\n        if (prev_term % 2 == 0) {\n            next_term = prev_term / 2;\n\
    \        } else {\n            next_term = prev_term * 3 + 1;\n        }\n   \
    \     odd_collatz.push_back(next_term);\n        prev_term = next_term;\n    }\n\
    \    odd_collatz.push_back(1);\n    std::sort(odd_collatz.begin(), odd_collatz.end());\n\
    \    return odd_collatz;", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    while (next_term != 1)\
    \ {\n        if (prev_term % 2 == 0) {\n            next_term = prev_term / 2;\n\
    \        } else {\n            next_term = prev_term * 3 + 1;\n        }\n   \
    \     prev_term = next_term;\n        odd_collatz.push_back(next_term);\n    }\n\
    \    std::sort(odd_collatz.begin(), odd_collatz.end());\n    return odd_collatz;",
  "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev_term\
    \ = 1;\n    long next_term = 1;\n    while (next_term != 1) {\n        if (prev_term\
    \ % 2 == 0) {\n            next_term = prev_term / 2;\n        } else {\n    \
    \        next_term = prev_term * 3 + 1;\n        }\n        odd_collatz.push_back(next_term);\n\
    \        prev_term = next_term;\n    }\n    return odd_collatz;", "    std::vector<long>\
    \ odd_collatz;\n    odd_collatz.push_back(n);\n    long prev_n = 1;\n    long\
    \ next_n = 1;\n    long next_n_prev = 1;\n    long next_n_prev_prev = 1;\n   \
    \ long next_n_prev_prev_prev = 1;\n    long next_n_prev_prev_prev_prev = 1;\n\
    \    long next_n_prev_prev_prev_prev_prev = 1;\n    long next_n_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev = 1;\n  \
    \  long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 1;\n    long\
    \ next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 1;\n    long\
    \ next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 1;\n  \
    \  long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_", " \
    \   std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev_term\
    \ = 1;\n    long next_term = 1;\n    long next_term_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_", "    std::vector<long> odd_collatz_list;\n\
    \    odd_collatz_list.push_back(n);\n    long odd_collatz_term = 1;\n    long\
    \ odd_collatz_term_next = 1;\n    long odd_collatz_term_next_next = 1;\n    long\
    \ odd_collatz_term_next_next_next = 1;\n    long odd_collatz_term_next_next_next_next\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next = 1;\n    long odd_collatz_term_next_next_next_next_next_next\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next = 1;\n  \
    \  long odd_collatz_term_next_next_next_next_next_next_next_next = 1;\n    long\
    \ odd_collatz_term_next_next_next_next_next_next_next_next_next = 1;\n    long\
    \ odd_collatz_term_next_next_next_next_next_next_next_next_next_next = 1;\n  \
    \  long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_next_",
  "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev_term\
    \ = 1;\n    long next_term = 1;\n    long next_term_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_odd_even = 1;\n    long next_term_odd_odd_odd = 1;\n   \
    \ long next_term_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd = 1;\n\
    \    long next_term_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n\
    \    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_od",
  "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev_term\
    \ = 1;\n    long next_term = 1;\n    long next_term_odd = 1;\n    long next_term_even\
    \ = 1;\n    long odd_term = 1;\n    long even_term = 1;\n    long odd_term_odd\
    \ = 1;\n    long even_term_even = 1;\n    long odd_term_even = 1;\n    long even_term_odd\
    \ = 1;\n    long odd_term_odd = 1;\n    long even_term_even = 1;\n    long odd_term_odd\
    \ = 1;\n    long even_term_even = 1;\n    long odd_term_odd = 1;\n    long even_term_even\
    \ = 1;\n    long odd_term_odd = 1;\n    long even_term_even = 1;\n    long odd_term_odd\
    \ = 1;\n    long even_term_even = 1;\n    long odd_term_odd = 1;\n    long even_term_even\
    \ = 1;\n    long odd_term_odd = 1;\n    long even_term_even = 1;\n    long odd_term_odd\
    \ = 1;\n    long even_term_even = 1;\n    long odd_term_odd = 1;\n    long even_term_even\
    \ = 1;\n    long odd_term_odd = 1;\n    long even_term_even = 1;\n    long odd_term_odd\
    \ = 1;\n    long even_term_even = 1;\n    long odd_term_odd = 1;\n    long even_term_even\
    \ = 1;\n    long odd_term_odd = 1;\n    long even_term_even = 1;\n    long odd_term_odd\
    \ = 1;\n    long even_term_even = 1;\n    long odd_term_odd = 1;\n    long even_term_even\
    \ = 1;\n    long odd_term_odd = 1;\n    long even_term_even = 1;\n    long odd_term_odd\
    \ = 1;\n    long even_term_even = 1;\n    long odd_term_odd = 1;\n    long even_term_even\
    \ = 1;\n    long odd_term_odd = 1;\n    long even_term_even = 1;\n    long odd_term_odd\
    \ = 1;\n    long even_term_even = 1;\n    long odd_term_odd = 1;\n    long even_term_even\
    \ = 1;\n    long odd_term_odd = 1;\n    long even_term_even = 1;\n    long odd_term_odd\
    \ = 1;\n    long even_term_even = 1;\n    long odd_term_odd = 1;\n    long even_term_even\
    \ = 1;\n    long odd_term_odd = 1;\n", "    std::vector<long> odd_collatz;\n \
    \   odd_collatz.push_back(n);\n    long prev_term = 1;\n    long next_term = 1;\n\
    \    long next_term_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_", "    std::vector<long> odd_collatz(n);\n    long prev_term\
    \ = 1;\n    long next_term = 1;\n    long count = 1;\n    long index = 0;\n  \
    \  while(index < n) {\n        if(prev_term % 2 == 0) {\n            next_term\
    \ = prev_term / 2;\n            odd_collatz[index] = next_term;\n            count++;\n\
    \        } else {\n            next_term = prev_term * 3 + 1;\n            odd_collatz[index]\
    \ = next_term;\n            count++;\n        }\n        index++;\n        prev_term\
    \ = next_term;\n    }\n    return odd_collatz;", "    std::vector<long> odd_collatz(n);\n\
    \    odd_collatz[0] = 1;\n    long next_term = 1;\n    for(long i = 1; i < n;\
    \ i++) {\n        if(next_term % 2 == 0) {\n            odd_collatz[i] = next_term\
    \ / 2;\n            next_term = next_term / 2;\n        } else {\n           \
    \ odd_collatz[i] = 3 * next_term + 1;\n            next_term = next_term * 3 +\
    \ 1;\n        }\n    }\n    return odd_collatz;", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev_term = 1;\n    long next_term =\
    \ 1;\n    long prev_term_odd = 1;\n    long next_term_odd = 1;\n    long odd_num\
    \ = 1;\n    long odd_num_odd = 1;\n    long odd_num_even = 1;\n    long odd_num_odd_even\
    \ = 1;\n    long odd_num_odd_odd = 1;\n    long odd_num_odd_even = 1;\n    long\
    \ odd_num_odd_odd_even = 1;\n    long odd_num_odd_odd_odd = 1;\n    long odd_num_odd_odd_even\
    \ = 1;\n    long odd_num_odd_odd_odd_even = 1;\n    long odd_num_odd_odd_odd_odd\
    \ = 1;\n    long odd_num_odd_odd_even = 1;\n    long odd_num_odd_odd_odd_even\
    \ = 1;\n    long odd_num_odd_odd_odd_odd = 1;\n    long odd_num_odd_odd_even =\
    \ 1;\n    long odd_num_odd_odd_odd_even = 1;\n    long odd_num_odd_odd_odd_odd\
    \ = 1;\n    long odd_num_odd_odd_even = 1;\n    long odd_num_odd_odd_odd_even\
    \ = 1;\n    long odd_num_odd_odd_odd_odd = 1;\n    long odd_num_odd_odd_even =\
    \ 1;\n    long odd_num_odd_odd_odd_even = 1;\n    long odd_num_odd_odd_odd_odd\
    \ = 1;\n    long odd_num_odd_odd_even = 1;\n    long odd_num_odd_odd_odd_even\
    \ = 1;\n    long odd_num_odd_odd_odd_odd = 1;\n    long odd_num_odd_odd_even =\
    \ 1;\n    long odd_num_odd_odd_odd_even = 1;\n    long odd_num_odd_odd_odd_odd\
    \ = 1;\n    long odd_num_odd_odd_even = 1;\n    long odd_num_odd_odd_odd_even\
    \ = 1;\n    long odd_num_odd_odd_odd_odd = 1;\n    long odd_num_odd_odd_even =\
    \ 1;\n    long odd_num_odd_odd_odd_even = 1;\n    long odd_num_odd_odd_odd_odd\
    \ = 1;\n    long odd_num_odd_odd_even = 1;\n    long od", "    std::vector<long>\
    \ odd_collatz;\n    odd_collatz.push_back(n);\n    long prev = 1;\n    long next_odd;\n\
    \    while (n > 1) {\n        if (n % 2 == 0) {\n            next_odd = prev *\
    \ 2 + 1;\n        } else {\n            next_odd = prev * 3;\n        }\n    \
    \    odd_collatz.push_back(next_odd);\n        prev = next_odd;\n        n = n\
    \ / 2;\n    }\n    return odd_collatz;", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev_term = 1;\n    long next_term =\
    \ 1;\n    while (next_term != prev_term) {\n        if (prev_term % 2 == 0) {\n\
    \            next_term = prev_term / 2;\n        } else {\n            next_term\
    \ = prev_term * 3 + 1;\n        }\n        odd_collatz.push_back(next_term);\n\
    \        prev_term = next_term;\n    }\n    return odd_collatz;", "    std::vector<long>\
    \ odd_collatz;\n    odd_collatz.push_back(n);\n    long prev_term = 1;\n    long\
    \ next_term = 1;\n    long prev_term_odd = 1;\n    long next_term_odd = 1;\n \
    \   long odd_counter = 1;\n    long odd_counter2 = 1;\n    long odd_counter3 =\
    \ 1;\n    long odd_counter4 = 1;\n    long odd_counter5 = 1;\n    long odd_counter6\
    \ = 1;\n    long odd_counter7 = 1;\n    long odd_counter8 = 1;\n    long odd_counter9\
    \ = 1;\n    long odd_counter10 = 1;\n    long odd_counter11 = 1;\n    long odd_counter12\
    \ = 1;\n    long odd_counter13 = 1;\n    long odd_counter14 = 1;\n    long odd_counter15\
    \ = 1;\n    long odd_counter16 = 1;\n    long odd_counter17 = 1;\n    long odd_counter18\
    \ = 1;\n    long odd_counter19 = 1;\n    long odd_counter20 = 1;\n    long odd_counter21\
    \ = 1;\n    long odd_counter22 = 1;\n    long odd_counter23 = 1;\n    long odd_counter24\
    \ = 1;\n    long odd_counter25 = 1;\n    long odd_counter26 = 1;\n    long odd_counter27\
    \ = 1;\n    long odd_counter28 = 1;\n    long odd_counter29 = 1;\n    long odd_counter30\
    \ = 1;\n    long odd_counter31 = 1;\n    long odd_counter32 = 1;\n    long odd_counter33\
    \ = 1;\n    long odd_counter34 = 1;\n    long odd_counter35 = 1;\n    long odd_counter36\
    \ = 1;\n    long odd_counter37 = 1;\n    long odd_counter38 = 1;\n    long odd_counter39\
    \ = 1;\n    long odd_counter40 = 1;\n    long odd_counter41 = 1;\n    long odd_counter42\
    \ = 1;\n    long odd_counter43 = 1;\n    long odd_counter44 = 1;\n    long odd_counter45\
    \ = 1;\n    long odd_counter46 = 1;\n    long odd_counter47 = 1;\n    long odd_counter48\
    \ = 1;\n    long odd_counter49 = 1;\n    long odd_counter50 = 1;\n    long odd_counter51\
    \ = 1;\n    long odd_counter52 = 1;\n    long odd_counter53 = 1;\n    long odd_counter54\
    \ = 1;\n    long odd_counter55 = 1;\n    long odd_counter56 = 1;\n    long odd_counter57\
    \ = 1;\n    long odd_counter58", "    std::vector<long> odd_collatz(n);\n    long\
    \ prev_term = 1;\n    long next_term = 1;\n    long next_term_odd = 1;\n    long\
    \ next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev = 1;\n    long next_odd;\n    while(prev != 1) {\n        next_odd\
    \ = prev % 2 == 0 ? prev / 2 : 3 * prev + 1;\n        odd_collatz.push_back(next_odd);\n\
    \        prev = next_odd;\n    }\n    std::sort(odd_collatz.begin(), odd_collatz.end());\n\
    \    return odd_collatz;", "    std::vector<long> odd_collatz(n + 1);\n    odd_collatz[0]\
    \ = 1;\n    long prev_term = 1;\n    for (long i = 1; i <= n; i++) {\n       \
    \ long next_term = prev_term;\n        if (prev_term % 2 == 0) {\n           \
    \ next_term = prev_term / 2;\n        } else {\n            next_term = prev_term\
    \ * 3 + 1;\n        }\n        odd_collatz[i] = next_term;\n        prev_term\
    \ = next_term;\n    }\n    return odd_collatz;", "    std::vector<long> odd_collatz(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    long next_term_prev = 1;\n\
    \    long next_term_next = 1;\n    long next_term_next_prev = 1;\n    long next_term_next_next\
    \ = 1;\n    long next_term_next_next_prev = 1;\n    long next_term_next_next_next\
    \ = 1;\n    long next_term_next_next_next_prev = 1;\n    long next_term_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next = 1;\n\
    \    long next_term_next_next_next_next_next_next_next_next_next_prev = 1;\n \
    \   long next_term_next_next_next_next_next_next_next_next_next_next = 1;\n  \
    \  long next_term_next_next_next_next_next_next_next_next_next_prev = 1;\n   \
    \ long next_term_next_next_next_next_next_next_next_next_next_next = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 1;", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    long next_term_odd = 1;\n\
    \    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_", "    std::vector<long>\
    \ odd_collatz(n);\n    long odd_collatz_counter = 1;\n    long odd_collatz_counter2\
    \ = 1;\n    long odd_collatz_counter3 = 1;\n    long odd_collatz_counter4 = 1;\n\
    \    long odd_collatz_counter5 = 1;\n    long odd_collatz_counter6 = 1;\n    long\
    \ odd_collatz_counter7 = 1;\n    long odd_collatz_counter8 = 1;\n    long odd_collatz_counter9\
    \ = 1;\n    long odd_collatz_counter10 = 1;\n    long odd_collatz_counter11 =\
    \ 1;\n    long odd_collatz_counter12 = 1;\n    long odd_collatz_counter13 = 1;\n\
    \    long odd_collatz_counter14 = 1;\n    long odd_collatz_counter15 = 1;\n  \
    \  long odd_collatz_counter16 = 1;\n    long odd_collatz_counter17 = 1;\n    long\
    \ odd_collatz_counter18 = 1;\n    long odd_collatz_counter19 = 1;\n    long odd_collatz_counter20\
    \ = 1;\n    long odd_collatz_counter21 = 1;\n    long odd_collatz_counter22 =\
    \ 1;\n    long odd_collatz_counter23 = 1;\n    long odd_collatz_counter24 = 1;\n\
    \    long odd_collatz_counter25 = 1;\n    long odd_collatz_counter26 = 1;\n  \
    \  long odd_collatz_counter27 = 1;\n    long odd_collatz_counter28 = 1;\n    long\
    \ odd_collatz_counter29 = 1;\n    long odd_collatz_counter30 = 1;\n    long odd_collatz_counter31\
    \ = 1;\n    long odd_collatz_counter32 = 1;\n    long odd_collatz_counter33 =\
    \ 1;\n    long odd_collatz_counter34 = 1;\n    long odd_collatz_counter35 = 1;\n\
    \    long odd_collatz_counter36 = 1;\n    long odd_collatz_counter37 = 1;\n  \
    \  long odd_collatz_counter38 = 1;\n    long odd_collatz_counter39 = 1;\n    long\
    \ odd_collatz_counter40 = 1;\n    long odd_collatz_counter41 = 1;\n    long odd_collatz_counter42\
    \ = 1;\n    long odd_collatz_counter43 = 1;\n    long odd_collatz_counter44 =\
    \ 1;\n    long odd_collatz_counter45 = 1;\n    long odd_collat", "    std::vector<long>\
    \ odd_collatz;\n    odd_collatz.push_back(n);\n    long prev_term = 1;\n    long\
    \ next_term = 1;\n    long next_term_odd = 1;\n    long next_term_even = 1;\n\
    \    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_", "    std::vector<long> odd_collatz(n + 1);\n   \
    \ odd_collatz[0] = 1;\n    long prev = 1;\n    for (long i = 1; i <= n; i++) {\n\
    \        if (i % 2 == 0) {\n            odd_collatz[i] = prev;\n            prev\
    \ = prev / 2;\n        } else {\n            odd_collatz[i] = 3 * prev + 1;\n\
    \            prev = odd_collatz[i];\n        }\n    }\n    return odd_collatz;",
  "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev_term\
    \ = 1;\n    long next_term = 1;\n    long next_term_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev = 1;\n    while (prev != 1) {\n\
    \        if (prev % 2 == 0) {\n            odd_collatz.push_back(prev / 2);\n\
    \            prev = prev / 2;\n        } else {\n            odd_collatz.push_back(3\
    \ * prev + 1);\n            prev = prev * 3 + 1;\n        }\n    }\n    std::sort(odd_collatz.begin(),\
    \ odd_collatz.end());\n    return odd_collatz;", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev = 1;\n    long next_odd;\n    long\
    \ next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n  \
    \  long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    ", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n \
    \   long next_term = 1;\n    long prev_term = 1;\n    long next_term_odd = 1;\n\
    \    long prev_term_odd = 1;\n    long next_term_even = 1;\n    long prev_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long prev_term_odd_even = 1;\n \
    \   long next_term_odd_odd = 1;\n    long prev_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long prev_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ prev_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long prev_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long prev_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long prev_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long prev_term_odd_odd = 1;\n    long next_term_even = 1;\n    long prev_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long prev_term_odd_even = 1;\n \
    \   long next_term_odd_odd = 1;\n    long prev_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long prev_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ prev_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long prev_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long prev_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long prev_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long prev_term_odd_odd = 1;\n    long next_term_even = 1;\n    long prev_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long prev_term_odd_even = 1;\n \
    \   long next_term_odd_odd = 1;\n    long prev_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long prev_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ prev_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long prev_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long prev_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long prev_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long prev_term_odd_", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    long next_term_odd = 1;\n\
    \    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_", "    std::vector<long>\
    \ odd_collatz;\n    odd_collatz.push_back(n);\n    long prev = 1;\n    long next_odd;\n\
    \    while(true) {\n        if(prev % 2 == 0) {\n            next_odd = prev /\
    \ 2;\n        } else {\n            next_odd = prev * 3 + 1;\n        }\n    \
    \    if(next_odd != 1) {\n            odd_collatz.push_back(next_odd);\n     \
    \   }\n        prev = next_odd;\n        if(prev == 1) {\n            break;\n\
    \        }\n    }\n    std::sort(odd_collatz.begin(), odd_collatz.end());\n  \
    \  return odd_collatz;", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev = 1;\n    long next_odd;\n    while (true) {\n        if (prev\
    \ % 2 == 0) {\n            next_odd = prev / 2;\n        } else {\n          \
    \  next_odd = prev * 3 + 1;\n        }\n        if (next_odd != 1) {\n       \
    \     odd_collatz.push_back(next_odd);\n        }\n        prev = next_odd;\n\
    \        if (prev == 1) {\n            break;\n        }\n    }\n    std::sort(odd_collatz.begin(),\
    \ odd_collatz.end());\n    return odd_collatz;", "    std::vector<long> odd_collatz(n);\n\
    \    odd_collatz[0] = 1;\n    long odd_collatz_counter = 1;\n    long odd_collatz_counter2\
    \ = 1;\n    long odd_collatz_counter3 = 1;\n    long odd_collatz_counter4 = 1;\n\
    \    long odd_collatz_counter5 = 1;\n    long odd_collatz_counter6 = 1;\n    long\
    \ odd_collatz_counter7 = 1;\n    long odd_collatz_counter8 = 1;\n    long odd_collatz_counter9\
    \ = 1;\n    long odd_collatz_counter10 = 1;\n    long odd_collatz_counter11 =\
    \ 1;\n    long odd_collatz_counter12 = 1;\n    long odd_collatz_counter13 = 1;\n\
    \    long odd_collatz_counter14 = 1;\n    long odd_collatz_counter15 = 1;\n  \
    \  long odd_collatz_counter16 = 1;\n    long odd_collatz_counter17 = 1;\n    long\
    \ odd_collatz_counter18 = 1;\n    long odd_collatz_counter19 = 1;\n    long odd_collatz_counter20\
    \ = 1;\n    long odd_collatz_counter21 = 1;\n    long odd_collatz_counter22 =\
    \ 1;\n    long odd_collatz_counter23 = 1;\n    long odd_collatz_counter24 = 1;\n\
    \    long odd_collatz_counter25 = 1;\n    long odd_collatz_counter26 = 1;\n  \
    \  long odd_collatz_counter27 = 1;\n    long odd_collatz_counter28 = 1;\n    long\
    \ odd_collatz_counter29 = 1;\n    long odd_collatz_counter30 = 1;\n    long odd_collatz_counter31\
    \ = 1;\n    long odd_collatz_counter32 = 1;\n    long odd_collatz_counter33 =\
    \ 1;\n    long odd_collatz_counter34 = 1;\n    long odd_collatz_counter35 = 1;\n\
    \    long odd_collatz_counter36 = 1;\n    long odd_collatz_counter37 = 1;\n  \
    \  long odd_collatz_counter38 = 1;\n    long odd_collatz_counter39 = 1;\n    long\
    \ odd_collatz_counter40 = 1;\n    long odd_collatz_counter41 = 1;\n    long odd_collatz_counter42\
    \ = 1;\n    long odd_collatz_counter43 = 1;\n    long odd_collatz_counter44 =\
    \ 1;\n    long odd_collatz_counter", "    std::vector<long> odd_collatz;\n   \
    \ odd_collatz.push_back(n);\n    long prev = 1;\n    long next_odd;\n    long\
    \ next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n  \
    \  long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    ", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n \
    \   long prev_term = 1;\n    long next_term = 1;\n    long next_term_prev = 1;\n\
    \    long next_term_next = 1;\n    long next_term_next_prev = 1;\n    long next_term_next_next\
    \ = 1;\n    long next_term_next_next_prev = 1;\n    long next_term_next_next_next\
    \ = 1;\n    long next_term_next_next_next_prev = 1;\n    long next_term_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next = 1;\n\
    \    long next_term_next_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next = 1;\n\
    \    long next_term_next_next_next_next_next_next_next_next_next_prev = 1;\n \
    \   long next_term_next_next_next_next_next_next_next_next_next_next = 1;\n  \
    \  long next_term_next_next_next_next_next_next_next_next_next_next_prev = 1;\n\
    \    long next_term_next_next_next_next_next_next_next_next_next_next_next = 1;\n\
    \    long next_term_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next_",
  "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev\
    \ = 1;\n    long next_odd;\n    while(true) {\n        if(prev % 2 == 0) {\n \
    \           next_odd = prev / 2;\n        } else {\n            next_odd = prev\
    \ * 3 + 1;\n        }\n        if(next_odd > n) {\n            break;\n      \
    \  }\n        odd_collatz.push_back(next_odd);\n        prev = next_odd;\n   \
    \ }\n    std::sort(odd_collatz.begin(), odd_collatz.end());\n    return odd_collatz;",
  "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev_term\
    \ = 1;\n    long next_term = 1;\n    long next_term_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_odd_even = 1;\n    long next_term_odd_odd_odd = 1;\n   \
    \ long next_term_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd = 1;\n\
    \    long next_term_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n\
    \    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_od",
  "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev\
    \ = 1;\n    long next_odd;\n    while(1) {\n        next_odd = prev % 2 == 0 ?\
    \ prev + 1 : prev * 3 + 1;\n        if(next_odd != prev) {\n            odd_collatz.push_back(next_odd);\n\
    \        }\n        prev = next_odd;\n        if(prev == 1) {\n            break;\n\
    \        }\n    }\n    return odd_collatz;", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev = 1;\n    long next_odd;\n    long\
    \ next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n  \
    \  long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    ", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n \
    \   long prev = 1;\n    long next_odd;\n    while(true) {\n        next_odd =\
    \ prev % 2 == 0 ? prev + 1 : prev * 3 + 1;\n        odd_collatz.push_back(next_odd);\n\
    \        prev = next_odd;\n        if(next_odd != 1) {\n            break;\n \
    \       }\n    }\n    std::sort(odd_collatz.begin(), odd_collatz.end());\n   \
    \ return odd_collatz;", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev = 1;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    ", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev_n = n;\n    long next_n = 0;\n \
    \   while (next_n != 1) {\n        if (prev_n % 2 == 0) {\n            next_n\
    \ = prev_n / 2;\n            odd_collatz.push_back(next_n);\n        } else {\n\
    \            next_n = 3 * prev_n + 1;\n            odd_collatz.push_back(next_n);\n\
    \        }\n        prev_n = next_n;\n    }\n    return odd_collatz;", "    std::vector<long>\
    \ odd_collatz(n);\n    long prev = 1;\n    long next_odd;\n    long next_even;\n\
    \    long next_odd;\n    long next_even;\n    long next_odd;\n    long next_even;\n\
    \    long next_odd;\n    long next_even;\n    long next_odd;\n    long next_even;\n\
    \    long next_odd;\n    long next_even;\n    long next_odd;\n    long next_even;\n\
    \    long next_odd;\n    long next_even;\n    long next_odd;\n    long next_even;\n\
    \    long next_odd;\n    long next_even;\n    long next_odd;\n    long next_even;\n\
    \    long next_odd;\n    long next_even;\n    long next_odd;\n    long next_even;\n\
    \    long next_odd;\n    long next_even;\n    long next_odd;\n    long next_even;\n\
    \    long next_odd;\n    long next_even;\n    long next_odd;\n    long next_even;\n\
    \    long next_odd;\n    long next_even;\n    long next_odd;\n    long next_even;\n\
    \    long next_odd;\n    long next_even;\n    long next_odd;\n    long next_even;\n\
    \    long next_odd;\n    long next_even;\n    long next_odd;\n    long next_even;\n\
    \    long next_odd;\n    long next_even;\n    long next_odd;\n    long next_even;\n\
    \    long next_odd;\n    long next_even;\n    long next_odd;\n    long next_even;\n\
    \    long next_odd;\n    long next_even;\n    long next_odd;\n    long next_even;\n\
    \    long next_odd;\n    long next_even;\n    long next_odd;\n    long next_even;\n\
    \    long next_odd;\n    long next_even;\n    long next_odd;\n    long next_even;\n\
    \    long next_odd;\n    long next_even;\n    long next_odd;\n    long next_even;\n\
    \    long next_odd;\n    long next_even;\n    long next_odd;\n    long next_even;\n\
    \    long next_odd;\n    long next_even;\n    long next_odd;\n    long next_even;\n\
    \    long next_odd;\n    long next_even;\n    long next_odd;\n    long next_even;\n\
    \    long next_", "    std::vector<long> odd_collatz(n + 1);\n    odd_collatz[0]\
    \ = 1;\n    long next_term = 1;\n    long prev_term = 1;\n    long i = 0;\n  \
    \  while (i < n) {\n        if (prev_term % 2 == 0) {\n            next_term =\
    \ prev_term / 2;\n        } else {\n            next_term = prev_term * 3 + 1;\n\
    \        }\n        odd_collatz[i + 1] = next_term;\n        prev_term = next_term;\n\
    \        i++;\n    }\n    return odd_collatz;", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev_term = 1;\n    long next_term =\
    \ 1;\n    long next_term_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_odd_even = 1;\n\
    \    long next_term_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_even = 1;\n\
    \    long next_term_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n   \
    \ long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n\
    \    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_od", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev_term = 1;\n    long next_term =\
    \ 1;\n    long next_term_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    long next_term_odd = 1;\n\
    \    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_odd_even = 1;\n    long next_term_odd_odd_odd =\
    \ 1;\n    long next_term_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_od", "    std::vector<long>\
    \ odd_collatz;\n    odd_collatz.push_back(n);\n    long prev = 1;\n    long next_odd;\n\
    \    while(prev != 1) {\n        if(prev % 2 == 0) {\n            next_odd = prev\
    \ / 2;\n        } else {\n            next_odd = prev * 3 + 1;\n        }\n  \
    \      odd_collatz.push_back(next_odd);\n        prev = next_odd;\n    }\n   \
    \ std::sort(odd_collatz.begin(), odd_collatz.end());\n    return odd_collatz;",
  "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev_term\
    \ = 1;\n    long next_term = 1;\n    long next_term_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev = 1;\n    long next_odd;\n    while\
    \ (true) {\n        next_odd = prev % 2 == 0 ? prev : prev * 2 + 1;\n        odd_collatz.push_back(next_odd);\n\
    \        prev = next_odd;\n        if (next_odd != 1)\n            break;\n  \
    \  }\n    std::sort(odd_collatz.begin(), odd_collatz.end());\n    return odd_collatz;",
  "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long next_term\
    \ = 1;\n    long prev_term = 1;\n    long last_term = 1;\n    long last_term_odd\
    \ = 1;\n    long last_term_even = 1;\n    long last_term_odd_even = 1;\n    long\
    \ last_term_odd_odd = 1;\n    long last_term_even = 1;\n    long last_term_odd_even\
    \ = 1;\n    long last_term_odd_odd = 1;\n    long last_term_even = 1;\n    long\
    \ last_term_odd_even = 1;\n    long last_term_odd_odd = 1;\n    long last_term_even\
    \ = 1;\n    long last_term_odd_even = 1;\n    long last_term_odd_odd = 1;\n  \
    \  long last_term_even = 1;\n    long last_term_odd_even = 1;\n    long last_term_odd_odd\
    \ = 1;\n    long last_term_even = 1;\n    long last_term_odd_even = 1;\n    long\
    \ last_term_odd_odd = 1;\n    long last_term_even = 1;\n    long last_term_odd_even\
    \ = 1;\n    long last_term_odd_odd = 1;\n    long last_term_even = 1;\n    long\
    \ last_term_odd_even = 1;\n    long last_term_odd_odd = 1;\n    long last_term_even\
    \ = 1;\n    long last_term_odd_even = 1;\n    long last_term_odd_odd = 1;\n  \
    \  long last_term_even = 1;\n    long last_term_odd_even = 1;\n    long last_term_odd_odd\
    \ = 1;\n    long last_term_even = 1;\n    long last_term_odd_even = 1;\n    long\
    \ last_term_odd_odd = 1;\n    long last_term_even = 1;\n    long last_term_odd_even\
    \ = 1;\n    long last_term_odd_odd = 1;\n    long last_term_even = 1;\n    long\
    \ last_term_odd_even = 1;\n    long last_term_odd_odd = 1;\n    long last_term_even\
    \ = 1;\n    long last_term_odd_even = 1;\n    long last_term_odd_odd = 1;\n  \
    \  long last_term_even = 1;\n    long last_term_odd_even = 1;\n    long last_term_odd_odd\
    \ = 1;\n    long last_term_even = 1;\n    long last_term_odd_even = 1;\n    long\
    \ last_term_odd_odd = 1;\n    long last_term_even = 1;\n    long last_term_odd_even\
    \ = 1;\n    long last_term_odd_odd = 1;\n    long last_term_even = 1;\n    long\
    \ last_term_odd_even = 1;\n    long last_term_odd_odd = ", "    std::vector<long>\
    \ odd_collatz;\n    odd_collatz.push_back(n);\n    long prev_term = 1;\n    long\
    \ next_term = 1;\n    long next_term_odd = 1;\n    long next_term_even = 1;\n\
    \    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev = 1;\n    long next_odd;\n    while(true) {\n        if(prev %\
    \ 2 == 0) {\n            next_odd = prev / 2;\n        } else {\n            next_odd\
    \ = prev * 3 + 1;\n        }\n        if(next_odd != 1) {\n            odd_collatz.push_back(next_odd);\n\
    \        }\n        prev = next_odd;\n        if(next_odd != 1) {\n          \
    \  break;\n        }\n    }\n    std::sort(odd_collatz.begin(), odd_collatz.end());\n\
    \    return odd_collatz;", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev = 1;\n    long next_odd;\n    long next_even;\n    while(true)\
    \ {\n        if(prev % 2 == 0) {\n            next_even = prev * 2 + 1;\n    \
    \    } else {\n            next_odd = prev * 3;\n        }\n        if(next_odd\
    \ > n) {\n            break;\n        }\n        odd_collatz.push_back(next_odd);\n\
    \        prev = next_odd;\n    }\n    odd_collatz.push_back(1);\n    std::sort(odd_collatz.begin(),\
    \ odd_collatz.end());\n    return odd_collatz;", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev_term = 1;\n    long next_term =\
    \ 1;\n    long next_term_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_odd_even = 1;\n\
    \    long next_term_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_even = 1;\n\
    \    long next_term_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n   \
    \ long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n\
    \    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_od", "    std::vector<long> odd_collatz(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    long counter = 1;\n   \
    \ long index = 0;\n    while(counter != 1) {\n        if(prev_term % 2 == 0) {\n\
    \            next_term = prev_term / 2;\n        } else {\n            next_term\
    \ = prev_term * 3 + 1;\n        }\n        odd_collatz[index] = next_term;\n \
    \       prev_term = next_term;\n        counter++;\n        index++;\n    }\n\
    \    return odd_collatz;", "    std::vector<long> odd_collatz_list;\n    long\
    \ prev_term = 1;\n    long next_term = 1;\n    long next_term_2 = 1;\n    long\
    \ next_term_3 = 1;\n    long next_term_4 = 1;\n    long next_term_5 = 1;\n   \
    \ long next_term_6 = 1;\n    long next_term_7 = 1;\n    long next_term_8 = 1;\n\
    \    long next_term_9 = 1;\n    long next_term_10 = 1;\n    long next_term_11\
    \ = 1;\n    long next_term_12 = 1;\n    long next_term_13 = 1;\n    long next_term_14\
    \ = 1;\n    long next_term_15 = 1;\n    long next_term_16 = 1;\n    long next_term_17\
    \ = 1;\n    long next_term_18 = 1;\n    long next_term_19 = 1;\n    long next_term_20\
    \ = 1;\n    long next_term_21 = 1;\n    long next_term_22 = 1;\n    long next_term_23\
    \ = 1;\n    long next_term_24 = 1;\n    long next_term_25 = 1;\n    long next_term_26\
    \ = 1;\n    long next_term_27 = 1;\n    long next_term_28 = 1;\n    long next_term_29\
    \ = 1;\n    long next_term_30 = 1;\n    long next_term_31 = 1;\n    long next_term_32\
    \ = 1;\n    long next_term_33 = 1;\n    long next_term_34 = 1;\n    long next_term_35\
    \ = 1;\n    long next_term_36 = 1;\n    long next_term_37 = 1;\n    long next_term_38\
    \ = 1;\n    long next_term_39 = 1;\n    long next_term_40 = 1;\n    long next_term_41\
    \ = 1;\n    long next_term_42 = 1;\n    long next_term_43 = 1;\n    long next_term_44\
    \ = 1;\n    long next_term_45 = 1;\n    long next_term_46 = 1;\n    long next_term_47\
    \ = 1;\n    long next_term_48 = 1;\n    long next_term_49 = 1;\n    long next_term_50\
    \ = 1;\n    long next_term_51 = 1;\n    long next_term_52 = 1;\n    long next_term_53\
    \ = 1;\n    long next_term_54 = 1;\n    long next_term_55 = 1;\n    long next_term_56\
    \ = 1;\n    long next_term_57 = 1;\n    long next_term_58 = 1;\n    long next_term_59\
    \ = 1;\n    long next_term_60 = 1;\n    long next_term_61 = 1;\n    long next_term_62\
    \ = 1;\n    long next_term_63 = 1;\n    long next_term_64 = 1;\n    long next_term_65\
    \ = 1;\n    long next_term_66 = 1;\n    long next_term_67 = 1;\n    long next_term_68\
    \ = 1;\n    long next_term_69 = 1;\n    long next_term_70 = 1;\n    ", "    std::vector<long>\
    \ odd_collatz;\n    odd_collatz.push_back(n);\n    long prev_term = 1;\n    long\
    \ next_term = 1;\n    long next_term_odd = 0;\n    long next_term_even = 0;\n\
    \    long next_term_odd_even = 0;\n    long next_term_odd_odd = 0;\n    long next_term_even\
    \ = 0;\n    long next_term_odd_even = 0;\n    long next_term_odd_odd = 0;\n  \
    \  long next_term_even = 0;\n    long next_term_odd_even = 0;\n    long next_term_odd_odd\
    \ = 0;\n    long next_term_even = 0;\n    long next_term_odd_even = 0;\n    long\
    \ next_term_odd_odd = 0;\n    long next_term_even = 0;\n    long next_term_odd_even\
    \ = 0;\n    long next_term_odd_odd = 0;\n    long next_term_even = 0;\n    long\
    \ next_term_odd_even = 0;\n    long next_term_odd_odd = 0;\n    long next_term_even\
    \ = 0;\n    long next_term_odd_even = 0;\n    long next_term_odd_odd = 0;\n  \
    \  long next_term_even = 0;\n    long next_term_odd_even = 0;\n    long next_term_odd_odd\
    \ = 0;\n    long next_term_even = 0;\n    long next_term_odd_even = 0;\n    long\
    \ next_term_odd_odd = 0;\n    long next_term_even = 0;\n    long next_term_odd_even\
    \ = 0;\n    long next_term_odd_odd = 0;\n    long next_term_even = 0;\n    long\
    \ next_term_odd_even = 0;\n    long next_term_odd_odd = 0;\n    long next_term_even\
    \ = 0;\n    long next_term_odd_even = 0;\n    long next_term_odd_odd = 0;\n  \
    \  long next_term_even = 0;\n    long next_term_odd_even = 0;\n    long next_term_odd_odd\
    \ = 0;\n    long next_term_even = 0;\n    long next_term_odd_even = 0;\n    long\
    \ next_term_odd_odd = 0;\n    long next_term_even = 0;\n    long next_term_odd_even\
    \ = 0;\n    long next_term_odd_odd = 0;\n    long next_term_even = 0;\n    long\
    \ next_term_odd_even = 0;\n    long next_term_odd_odd = 0;\n    long next_term_even\
    \ = 0;\n    long next_term_odd_even = 0;\n    long next_term_odd_odd = 0;\n  \
    \  long next_term_even = 0;\n    long next_term_odd_even = 0;\n    long next_term_odd_odd\
    \ = 0;\n    long next_term_even = 0;\n    long next_term_odd_even = 0;\n    long\
    \ next_term_odd_odd", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    long next_term_odd = 1;\n\
    \    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_", "    std::vector<long>\
    \ odd_collatz;\n    odd_collatz.push_back(n);\n    long prev_term = 1;\n    long\
    \ next_term = 1;\n    while (next_term != 1) {\n        if (prev_term % 2 == 0)\
    \ {\n            next_term = prev_term / 2;\n        } else {\n            next_term\
    \ = prev_term * 3 + 1;\n        }\n        odd_collatz.push_back(next_term);\n\
    \        prev_term = next_term;\n    }\n    odd_collatz.push_back(1);\n    std::sort(odd_collatz.begin(),\
    \ odd_collatz.end());\n    return odd_collatz;", "    std::vector<long> odd_collatz(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    long i = 0;\n    while\
    \ (i < n) {\n        if (prev_term % 2 == 0) {\n            next_term = prev_term\
    \ / 2;\n        } else {\n            next_term = prev_term * 3 + 1;\n       \
    \ }\n        odd_collatz[i] = next_term;\n        prev_term = next_term;\n   \
    \     i++;\n    }\n    return odd_collatz;", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev_term = 1;\n    long next_term =\
    \ 1;\n    long next_term_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev_n = 1;\n    long next_n = 1;\n    long next_n_prev = 1;\n    long\
    \ next_n_prev_prev = 1;\n    long next_n_prev_prev_prev = 1;\n    long next_n_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev = 1;\n    long next_n_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev = 1;\n  \
    \  long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 1;\n    long\
    \ next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 1;\n    long\
    \ next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 1;\n  \
    \  long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_", "    std::vector<long> odd_collatz;\n   \
    \ odd_collatz.push_back(n);\n    long prev_term = 1;\n    long next_term = 1;\n\
    \    long next_term_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long next_term = 1;\n    long prev_term = 1;\n    long odd_count = 0;\n \
    \   while(next_term != 1) {\n        if(prev_term % 2 == 0) {\n            odd_count++;\n\
    \            prev_term = prev_term / 2;\n        } else {\n            odd_count--;\n\
    \            prev_term = prev_term * 3 + 1;\n        }\n        odd_collatz.push_back(prev_term);\n\
    \        next_term = odd_collatz.back();\n    }\n    return odd_collatz;", " \
    \   std::vector<long> odd_collatz(n);\n    long prev = 1;\n    for (long i = 0;\
    \ i < n; i++) {\n        if (i % 2 == 0) {\n            odd_collatz[i] = prev;\n\
    \            prev = prev / 2;\n        } else {\n            odd_collatz[i] =\
    \ prev * 3 + 1;\n            prev = odd_collatz[i];\n        }\n    }\n    return\
    \ odd_collatz;", "    std::vector<long> odd_collatz(n);\n    odd_collatz[0] =\
    \ 1;\n    long prev = 1;\n    for (long i = 1; i < n; i++) {\n        if (i %\
    \ 2 == 0) {\n            odd_collatz[i] = prev;\n            prev = prev / 2;\n\
    \        } else {\n            odd_collatz[i] = prev * 3 + 1;\n            prev\
    \ = prev * 3 + 1;\n        }\n    }\n    return odd_collatz;", "    std::vector<long>\
    \ odd_collatz(n + 1);\n    odd_collatz[0] = 1;\n    long odd_collatz_sum = 0;\n\
    \    for (long i = 1; i <= n; i++) {\n        odd_collatz[i] = odd_collatz[i -\
    \ 1];\n        if (i % 2 == 0) {\n            odd_collatz[i] = odd_collatz[i]\
    \ / 2;\n            odd_collatz_sum += odd_collatz[i];\n        } else {\n   \
    \         odd_collatz[i] = odd_collatz[i] * 3 + 1;\n            odd_collatz_sum\
    \ += odd_collatz[i];\n        }\n    }\n    odd_collatz[n] = odd_collatz_sum;\n\
    \    return odd_collatz;", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    long next_term_odd = 1;\n\
    \    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_", "    std::vector<long>\
    \ odd_collatz;\n    odd_collatz.push_back(n);\n    long prev = 1;\n    long next_odd;\n\
    \    while(true) {\n        if(prev % 2 == 0) {\n            next_odd = prev /\
    \ 2;\n        } else {\n            next_odd = prev * 3 + 1;\n        }\n    \
    \    if(next_odd != 1) {\n            odd_collatz.push_back(next_odd);\n     \
    \   }\n        prev = next_odd;\n        if(prev == 1) {\n            break;\n\
    \        }\n    }\n    return odd_collatz;", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev_term = 1;\n    long next_term =\
    \ 1;\n    long next_term_prev = 1;\n    long next_term_next = 1;\n    long next_term_next_prev\
    \ = 1;\n    long next_term_next_next = 1;\n    long next_term_next_next_prev =\
    \ 1;\n    long next_term_next_next_next = 1;\n    long next_term_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next = 1;\n    long next_term_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_prev =\
    \ 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next = 1;\n\
    \    long next_term_next_next_next_next_next_next_next_next_next_prev = 1;\n \
    \   long next_term_next_next_next_next_next_next_next_next_next_next = 1;\n  \
    \  long next_term_next_next_next_next_next_next_next_next_next_prev = 1;\n   \
    \ long next_term_next_next_next_next_next_next_next_next_next_next = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    long next_term_odd = 1;\n\
    \    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_", "    std::vector<long>\
    \ odd_collatz;\n    odd_collatz.push_back(n);\n    long prev_term = 1;\n    long\
    \ next_term = 1;\n    long next_term_odd = 1;\n    long next_term_even = 1;\n\
    \    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    long next_term_prev = 1;\n\
    \    long next_term_next = 1;\n    long next_term_next_prev = 1;\n    long next_term_next_next\
    \ = 1;\n    long next_term_next_next_prev = 1;\n    long next_term_next_next_next\
    \ = 1;\n    long next_term_next_next_next_prev = 1;\n    long next_term_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next = 1;\n\
    \    long next_term_next_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next = 1;\n\
    \    long next_term_next_next_next_next_next_next_next_next_next_prev = 1;\n \
    \   long next_term_next_next_next_next_next_next_next_next_next_next = 1;\n  \
    \  long next_term_next_next_next_next_next_next_next_next_next_prev = 1;\n   \
    \ long next_term_next_next_next_next_next_next_next_next_next_next_next = 1;\n\
    \    long next_term_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next_next_",
  "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev\
    \ = 1;\n    long next_odd;\n    while(1) {\n        if(prev % 2 == 0) {\n    \
    \        next_odd = prev / 2;\n        } else {\n            next_odd = prev *\
    \ 3 + 1;\n        }\n        if(next_odd != 1) {\n            odd_collatz.push_back(next_odd);\n\
    \        }\n        prev = next_odd;\n        if(prev == 1) {\n            break;\n\
    \        }\n    }\n    return odd_collatz;", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev = 1;\n    long next_odd;\n    long\
    \ next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n  \
    \  long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    ", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n \
    \   long prev_term = 1;\n    long next_term = 1;\n    long next_term_odd = 1;\n\
    \    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_odd_even = 1;\n    long next_term_odd_odd_odd =\
    \ 1;\n    long next_term_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n\
    \    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_od",
  "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev\
    \ = 1;\n    long next = 1;\n    long count = 0;\n    while (next != 1) {\n   \
    \     if (prev % 2 == 0) {\n            odd_collatz.push_back(prev);\n       \
    \     prev = prev / 2;\n            count++;\n        } else {\n            next\
    \ = prev * 3 + 1;\n            odd_collatz.push_back(next);\n            prev\
    \ = next;\n            count++;\n        }\n    }\n    return odd_collatz;", " \
    \   std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev\
    \ = 1;\n    long next_odd = 0;\n    long next_even = 1;\n    long next_odd2 =\
    \ 1;\n    long next_even2 = 1;\n    long next_odd3 = 1;\n    long next_even3 =\
    \ 1;\n    long next_odd4 = 1;\n    long next_even4 = 1;\n    long next_odd5 =\
    \ 1;\n    long next_even5 = 1;\n    long next_odd6 = 1;\n    long next_even6 =\
    \ 1;\n    long next_odd7 = 1;\n    long next_even7 = 1;\n    long next_odd8 =\
    \ 1;\n    long next_even8 = 1;\n    long next_odd9 = 1;\n    long next_even9 =\
    \ 1;\n    long next_odd10 = 1;\n    long next_even10 = 1;\n    long next_odd11\
    \ = 1;\n    long next_even11 = 1;\n    long next_odd12 = 1;\n    long next_even12\
    \ = 1;\n    long next_odd13 = 1;\n    long next_even13 = 1;\n    long next_odd14\
    \ = 1;\n    long next_even14 = 1;\n    long next_odd15 = 1;\n    long next_even15\
    \ = 1;\n    long next_odd16 = 1;\n    long next_even16 = 1;\n    long next_odd17\
    \ = 1;\n    long next_even17 = 1;\n    long next_odd18 = 1;\n    long next_even18\
    \ = 1;\n    long next_odd19 = 1;\n    long next_even19 = 1;\n    long next_odd20\
    \ = 1;\n    long next_even20 = 1;\n    long next_odd21 = 1;\n    long next_even21\
    \ = 1;\n    long next_odd22 = 1;\n    long next_even22 = 1;\n    long next_odd23\
    \ = 1;\n    long next_even23 = 1;\n    long next_odd24 = 1;\n    long next_even24\
    \ = 1;\n    long next_odd25 = 1;\n    long next_even25 = 1;\n    long next_odd26\
    \ = 1;\n    long next_even26 = 1;\n    long next_odd27 = 1;\n    long next_even27\
    \ = 1;\n    long next_odd28 = 1;\n    long next_even28 = 1;\n    long next_odd29\
    \ = 1;\n    long next_even29 = 1;\n    long next_odd30 = 1;\n    long next_even30\
    \ = 1;\n    long next_odd31 = 1;\n    long next_even31 = 1;\n    long next_odd32\
    \ = 1;\n    long next_even32 = 1;\n    long next_odd33 = 1;\n    long next_even33\
    \ = 1;\n    long next_odd34 = 1;\n    long next_even34 = 1;\n    long next_odd35\
    \ = 1;\n    long next_even35 = 1;\n    ", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev_term = 1;\n    long next_term =\
    \ 1;\n    long next_term_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_odd_even = 1;\n\
    \    long next_term_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_even = 1;\n\
    \    long next_term_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n   \
    \ long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n\
    \    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_od", "    std::vector<long> odd_collatz(n);\n\
    \    odd_collatz[0] = 1;\n    long next_term = 1;\n    long prev_term = 1;\n \
    \   for (long i = 1; i < n; i++) {\n        if (prev_term % 2 == 0) {\n      \
    \      next_term = prev_term / 2;\n        } else {\n            next_term = prev_term\
    \ * 3 + 1;\n        }\n        odd_collatz[i] = next_term;\n        prev_term\
    \ = next_term;\n    }\n    return odd_collatz;", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev_term = 1;\n    long next_term =\
    \ 1;\n    long next_term_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev = 1;\n    long next_odd;\n    while(prev != 1) {\n        if(prev\
    \ % 2 == 0) {\n            next_odd = prev / 2;\n        } else {\n          \
    \  next_odd = prev * 3 + 1;\n        }\n        odd_collatz.push_back(next_odd);\n\
    \        prev = next_odd;\n    }\n    return odd_collatz;", "    std::vector<long>\
    \ odd_collatz_list;\n    long odd_collatz_list_size = 1, odd_collatz_list_index\
    \ = 0;\n    long odd_collatz_list_last_index = 0;\n    long odd_collatz_list_last_value\
    \ = 1;\n    long odd_collatz_list_last_odd_value = 1;\n    long odd_collatz_list_last_odd_index\
    \ = 0;\n    long odd_collatz_list_last_odd_index2 = 0;\n    long odd_collatz_list_last_odd_index3\
    \ = 0;\n    long odd_collatz_list_last_odd_index4 = 0;\n    long odd_collatz_list_last_odd_index5\
    \ = 0;\n    long odd_collatz_list_last_odd_index6 = 0;\n    long odd_collatz_list_last_odd_index7\
    \ = 0;\n    long odd_collatz_list_last_odd_index8 = 0;\n    long odd_collatz_list_last_odd_index9\
    \ = 0;\n    long odd_collatz_list_last_odd_index10 = 0;\n    long odd_collatz_list_last_odd_index11\
    \ = 0;\n    long odd_collatz_list_last_odd_index12 = 0;\n    long odd_collatz_list_last_odd_index13\
    \ = 0;\n    long odd_collatz_list_last_odd_index14 = 0;\n    long odd_collatz_list_last_odd_index15\
    \ = 0;\n    long odd_collatz_list_last_odd_index16 = 0;\n    long odd_collatz_list_last_odd_index17\
    \ = 0;\n    long odd_collatz_list_last_odd_index18 = 0;\n    long odd_collatz_list_last_odd_index19\
    \ = 0;\n    long odd_collatz_list_last_odd_index20 = 0;\n    long odd_collatz_list_last_odd_index21\
    \ = 0;\n    long odd_collatz_list_last_odd_index22 = 0;\n    long odd_collatz_list_last_odd_index23\
    \ = 0;\n    long odd_collatz_list_last_odd_index24 = 0;\n    long odd_collatz_list_last_odd_index25\
    \ = 0;\n    long odd_collatz_list_last_odd_index26 = 0;\n    long odd_collatz_list_last_odd_index27\
    \ = 0;\n    long odd_collatz_list_last_odd_index28 = 0;\n    long odd_collatz_list_last_odd_index29\
    \ = 0;\n    long odd_collatz_list_last_odd_index30", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev = 1;\n    long next_odd;\n    while(true)\
    \ {\n        if(prev%2 == 0) {\n            next_odd = prev/2;\n        } else\
    \ {\n            next_odd = prev*3+1;\n        }\n        if(next_odd > n) {\n\
    \            break;\n        }\n        odd_collatz.push_back(next_odd);\n   \
    \     prev = next_odd;\n    }\n    std::sort(odd_collatz.begin(), odd_collatz.end());\n\
    \    return odd_collatz;", "    std::vector<long> odd_collatz(n + 1);\n    odd_collatz[0]\
    \ = 1;\n    long prev = 1;\n    for (long i = 1; i <= n; i++) {\n        if (i\
    \ % 2 == 0) {\n            odd_collatz[i] = prev / 2;\n            prev = prev\
    \ * 2 + 1;\n        } else {\n            odd_collatz[i] = 3 * prev + 1;\n   \
    \         prev = (prev * 3 + 1) / 2;\n        }\n    }\n    return odd_collatz;",
  "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev\
    \ = 1;\n    long next_odd;\n    long next_even;\n    long next_odd;\n    long\
    \ next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n  \
    \  long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    ", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev_term = 1;\n    long next_term =\
    \ 1;\n    long next_term_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    long counter = 1;\n   \
    \ while(counter != 1) {\n        if(prev_term % 2 == 0) {\n            next_term\
    \ = prev_term / 2;\n        } else {\n            next_term = prev_term * 3 +\
    \ 1;\n        }\n        odd_collatz.push_back(next_term);\n        prev_term\
    \ = next_term;\n        counter++;\n    }\n    return odd_collatz;", "    std::vector<long>\
    \ odd_collatz;\n    odd_collatz.push_back(n);\n    long prev_term = 1;\n    long\
    \ next_term = 1;\n    long next_term_odd = 1;\n    long next_term_even = 1;\n\
    \    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev = 1;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    ", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev_term = 1;\n    long next_term =\
    \ 1;\n    long prev_term_odd = 1;\n    long next_term_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    ", "    std::vector<long> odd_collatz;\n \
    \   odd_collatz.push_back(n);\n    long prev_term = 1;\n    long next_term = 1;\n\
    \    long next_term_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev = 1;\n    long next_odd;\n    while (true) {\n        next_odd\
    \ = prev % 2 == 0 ? prev + 1 : prev * 3 + 1;\n        if (next_odd != 1) {\n \
    \           odd_collatz.push_back(next_odd);\n        }\n        prev = next_odd;\n\
    \        if (prev == 1) {\n            break;\n        }\n    }\n    std::sort(odd_collatz.begin(),\
    \ odd_collatz.end());\n    return odd_collatz;", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev_term = 1;\n    long next_term =\
    \ 1;\n    while (next_term != 1) {\n        if (prev_term % 2 == 0) {\n      \
    \      next_term = prev_term / 2;\n            odd_collatz.push_back(next_term);\n\
    \        } else {\n            next_term = prev_term * 3 + 1;\n            odd_collatz.push_back(next_term);\n\
    \        }\n        prev_term = next_term;\n    }\n    std::sort(odd_collatz.begin(),\
    \ odd_collatz.end());\n    return odd_collatz;", "    std::vector<long> odd_collatz(n);\n\
    \    odd_collatz[0] = 1;\n    long prev_term = 1;\n    long next_term = 1;\n \
    \   long i = 1;\n    while(i < n) {\n        if(prev_term % 2 == 0) {\n      \
    \      next_term = prev_term / 2;\n        } else {\n            next_term = prev_term\
    \ * 3 + 1;\n        }\n        odd_collatz[i] = next_term;\n        prev_term\
    \ = next_term;\n        i++;\n    }\n    odd_collatz.push_back(1);\n    return\
    \ odd_collatz;", "    std::vector<long> odd_collatz_list;\n    odd_collatz_list.push_back(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    while (next_term != 1)\
    \ {\n        if (prev_term % 2 == 0) {\n            next_term = prev_term / 2;\n\
    \        } else {\n            next_term = prev_term * 3 + 1;\n        }\n   \
    \     odd_collatz_list.push_back(next_term);\n        prev_term = next_term;\n\
    \    }\n    std::sort(odd_collatz_list.begin(), odd_collatz_list.end());\n   \
    \ return odd_collatz_list;", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    while (next_term != 1)\
    \ {\n        if (prev_term % 2 == 0) {\n            next_term = prev_term / 2;\n\
    \        } else {\n            next_term = prev_term * 3 + 1;\n        }\n   \
    \     prev_term = next_term;\n        odd_collatz.push_back(next_term);\n    }\n\
    \    std::sort(odd_collatz.begin(), odd_collatz.end());\n    return odd_collatz;",
  "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev\
    \ = 1;\n    long next_odd;\n    while(true) {\n        if(prev % 2 == 0) {\n \
    \           next_odd = prev / 2;\n        } else {\n            next_odd = prev\
    \ * 3 + 1;\n        }\n        if(next_odd != 1) {\n            odd_collatz.push_back(next_odd);\n\
    \        }\n        prev = next_odd;\n        if(prev == 1) {\n            break;\n\
    \        }\n    }\n    return odd_collatz;", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev_term = 1;\n    long next_term =\
    \ 1;\n    long next_term_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    long next_term_prev = 1;\n\
    \    long next_term_next = 1;\n    long next_term_next_prev = 1;\n    long next_term_next_next\
    \ = 1;\n    long next_term_next_next_prev = 1;\n    long next_term_next_next_next\
    \ = 1;\n    long next_term_next_next_next_prev = 1;\n    long next_term_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next = 1;\n\
    \    long next_term_next_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next = 1;\n\
    \    long next_term_next_next_next_next_next_next_next_next_next_prev = 1;\n \
    \   long next_term_next_next_next_next_next_next_next_next_next_next = 1;\n  \
    \  long next_term_next_next_next_next_next_next_next_next_next_prev = 1;\n   \
    \ long next_term_next_next_next_next_next_next_next_next_next_next_next = 1;\n\
    \    long next_term_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next_next_",
  "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev_term\
    \ = 1;\n    long next_term = 1;\n    long next_term_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n", "    std::vector<long>\
    \ odd_collatz(n);\n    odd_collatz[0] = 1;\n    long odd_collatz_sum = 0;\n  \
    \  long odd_collatz_sum2 = 0;\n    long odd_collatz_sum3 = 0;\n    long odd_collatz_sum4\
    \ = 0;\n    long odd_collatz_sum5 = 0;\n    long odd_collatz_sum6 = 0;\n    long\
    \ odd_collatz_sum7 = 0;\n    long odd_collatz_sum8 = 0;\n    long odd_collatz_sum9\
    \ = 0;\n    long odd_collatz_sum10 = 0;\n    long odd_collatz_sum11 = 0;\n   \
    \ long odd_collatz_sum12 = 0;\n    long odd_collatz_sum13 = 0;\n    long odd_collatz_sum14\
    \ = 0;\n    long odd_collatz_sum15 = 0;\n    long odd_collatz_sum16 = 0;\n   \
    \ long odd_collatz_sum17 = 0;\n    long odd_collatz_sum18 = 0;\n    long odd_collatz_sum19\
    \ = 0;\n    long odd_collatz_sum20 = 0;\n    long odd_collatz_sum21 = 0;\n   \
    \ long odd_collatz_sum22 = 0;\n    long odd_collatz_sum23 = 0;\n    long odd_collatz_sum24\
    \ = 0;\n    long odd_collatz_sum25 = 0;\n    long odd_collatz_sum26 = 0;\n   \
    \ long odd_collatz_sum27 = 0;\n    long odd_collatz_sum28 = 0;\n    long odd_collatz_sum29\
    \ = 0;\n    long odd_collatz_sum30 = 0;\n    long odd_collatz_sum31 = 0;\n   \
    \ long odd_collatz_sum32 = 0;\n    long odd_collatz_sum33 = 0;\n    long odd_collatz_sum34\
    \ = 0;\n    long odd_collatz_sum35 = 0;\n    long odd_collatz_sum36 = 0;\n   \
    \ long odd_collatz_sum37 = 0;\n    long odd_collatz_sum38 = 0;\n    long odd_collatz_sum39\
    \ = 0;\n    long odd_collatz_sum40 = 0;\n    long odd_collatz_sum41 = 0;\n   \
    \ long odd_collatz_sum42 = 0;\n    long odd_collatz_sum43 = 0;\n    long odd_collatz_sum44\
    \ = 0;\n    long odd_collatz_sum45 = 0;\n    ", "    std::vector<long> odd_collatz(n\
    \ + 1);\n    odd_collatz[0] = 1;\n    long next_term = 1;\n    for (long i = 1;\
    \ i <= n; i++) {\n        if (i % 2 == 0) {\n            next_term = next_term\
    \ / 2;\n        } else {\n            next_term = next_term * 3 + 1;\n       \
    \ }\n        odd_collatz[i] = next_term;\n    }\n    return odd_collatz;", " \
    \   std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev_term\
    \ = 1;\n    long next_term = 1;\n    long next_term_odd = 1;\n    long next_term_even\
    \ = 1;\n    long odd_count = 0;\n    long even_count = 0;\n    long odd_count_even\
    \ = 0;\n    long odd_count_odd = 0;\n    long even_count_even = 0;\n    long even_count_odd\
    \ = 0;\n    long odd_count_even_odd = 0;\n    long odd_count_even_even = 0;\n\
    \    long even_count_even_odd = 0;\n    long even_count_even_even = 0;\n    long\
    \ odd_count_odd_even = 0;\n    long odd_count_odd_odd = 0;\n    long even_count_odd_even\
    \ = 0;\n    long even_count_odd_odd = 0;\n    long even_count_even_odd = 0;\n\
    \    long even_count_even_even = 0;\n    long odd_count_even_odd_even = 0;\n \
    \   long odd_count_even_odd_odd = 0;\n    long even_count_even_odd_even = 0;\n\
    \    long even_count_even_odd_odd = 0;\n    long odd_count_odd_even_even = 0;\n\
    \    long odd_count_odd_even_odd = 0;\n    long even_count_odd_even_even = 0;\n\
    \    long even_count_odd_even_odd = 0;\n    long even_count_even_odd_even = 0;\n\
    \    long even_count_even_odd_odd = 0;\n    long odd_count_odd_odd_even = 0;\n\
    \    long odd_count_odd_odd_odd = 0;\n    long even_count_odd_odd_even = 0;\n\
    \    long even_count_odd_odd_odd = 0;\n    long even_count_even_odd_even = 0;\n\
    \    long even_count_even_odd_odd = 0;\n    long odd_count_odd_odd_even_even =\
    \ 0;\n    long odd_count_odd_odd_even_odd = 0;\n    long even_count_odd_odd_even_even\
    \ = 0;\n    long even_count_odd_odd_even_odd = 0;\n    long even_count_even_odd_even_even\
    \ = 0;\n    long even_count_even_odd_even_odd = 0;\n    long odd_count_odd_odd_odd_even\
    \ = 0;\n    long odd_count_odd_odd_odd_odd = 0;\n    long even_count_odd_odd_odd_even\
    \ = 0;\n    long ev", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    long next_term_odd = 1;\n\
    \    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_odd_even = 1;\n    long next_term_odd_odd_odd =\
    \ 1;\n    long next_term_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n\
    \    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_od",
  "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev\
    \ = 1;\n    long next_odd;\n    long next_even;\n    long next_odd;\n    long\
    \ next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n  \
    \  long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    ", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev = 1;\n    long next_odd;\n    while(prev\
    \ != 1) {\n        if(prev % 2 == 0) {\n            next_odd = prev / 2;\n   \
    \     } else {\n            next_odd = prev * 3 + 1;\n        }\n        odd_collatz.push_back(next_odd);\n\
    \        prev = next_odd;\n    }\n    odd_collatz.sort();\n    return odd_collatz;",
  "    std::vector<long> odd_collatz(n);\n    long prev_term = 1;\n    long next_term\
    \ = 1;\n    long counter = 1;\n    long odd_counter = 1;\n    long odd_next_term\
    \ = 1;\n    long odd_prev_term = 1;\n    long odd_counter = 1;\n    long odd_next_term\
    \ = 1;\n    long odd_prev_term = 1;\n    long odd_counter = 1;\n    long odd_next_term\
    \ = 1;\n    long odd_prev_term = 1;\n    long odd_counter = 1;\n    long odd_next_term\
    \ = 1;\n    long odd_prev_term = 1;\n    long odd_counter = 1;\n    long odd_next_term\
    \ = 1;\n    long odd_prev_term = 1;\n    long odd_counter = 1;\n    long odd_next_term\
    \ = 1;\n    long odd_prev_term = 1;\n    long odd_counter = 1;\n    long odd_next_term\
    \ = 1;\n    long odd_prev_term = 1;\n    long odd_counter = 1;\n    long odd_next_term\
    \ = 1;\n    long odd_prev_term = 1;\n    long odd_counter = 1;\n    long odd_next_term\
    \ = 1;\n    long odd_prev_term = 1;\n    long odd_counter = 1;\n    long odd_next_term\
    \ = 1;\n    long odd_prev_term = 1;\n    long odd_counter = 1;\n    long odd_next_term\
    \ = 1;\n    long odd_prev_term = 1;\n    long odd_counter = 1;\n    long odd_next_term\
    \ = 1;\n    long odd_prev_term = 1;\n    long odd_counter = 1;\n    long odd_next_term\
    \ = 1;\n    long odd_prev_term = 1;\n    long odd_counter = 1;\n    long odd_next_term\
    \ = 1;\n    long odd_prev_term = 1;\n    long odd_counter = 1;\n    long odd_next_term\
    \ = 1;\n    long odd_prev_term = 1;\n    long odd_counter = 1;\n    long odd_next_term\
    \ = 1;\n    long odd_prev_term = 1;\n    long odd_counter = 1;\n    long odd_next_term\
    \ = 1;\n    long odd_prev_term = 1;\n    long odd_counter = 1;\n    long odd_next_term\
    \ = 1;\n    long odd_prev_term = 1;\n    long odd_counter = 1;\n    long odd_next_term\
    \ = 1;\n    long odd_prev_term = 1;\n    long odd_counter = 1;\n    long odd_next_term\
    \ = 1;\n    long odd_prev_term = 1;\n    long odd_counter = 1;\n    long odd_next_term\
    \ = 1;\n    long odd_prev_term = 1;\n", "    std::vector<long> odd_collatz(n);\n\
    \    odd_collatz[0] = 1;\n    long prev_term = 1;\n    long next_term = 1;\n \
    \   long counter = 1;\n    for(long i = 1; i < n; i++) {\n        if(prev_term\
    \ % 2 == 0) {\n            next_term = prev_term / 2;\n        } else {\n    \
    \        next_term = prev_term * 3 + 1;\n        }\n        odd_collatz[i] = next_term;\n\
    \        prev_term = next_term;\n        counter++;\n    }\n    return odd_collatz;",
  "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev_term\
    \ = 1;\n    long next_term = 1;\n    long next_term_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_odd_even = 1;\n    long next_term_odd_odd_odd = 1;\n   \
    \ long next_term_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd = 1;\n\
    \    long next_term_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n\
    \    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_od",
  "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev_term\
    \ = 1;\n    long next_term = 1;\n    long next_term_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev_term = 1;\n    long next_term =\
    \ 1;\n    long prev_term_odd = true;\n    long next_term_odd = true;\n    long\
    \ next_term_even = true;\n    long next_term_odd_even = true;\n    long next_term_odd_odd\
    \ = true;\n    long next_term_even = true;\n    long next_term_odd_even = true;\n\
    \    long next_term_odd_odd = true;\n    long next_term_even = true;\n    long\
    \ next_term_odd_even = true;\n    long next_term_odd_odd = true;\n    long next_term_even\
    \ = true;\n    long next_term_odd_even = true;\n    long next_term_odd_odd = true;\n\
    \    long next_term_even = true;\n    long next_term_odd_even = true;\n    long\
    \ next_term_odd_odd = true;\n    long next_term_even = true;\n    long next_term_odd_even\
    \ = true;\n    long next_term_odd_odd = true;\n    long next_term_even = true;\n\
    \    long next_term_odd_even = true;\n    long next_term_odd_odd = true;\n   \
    \ long next_term_even = true;\n    long next_term_odd_even = true;\n    long next_term_odd_odd\
    \ = true;\n    long next_term_even = true;\n    long next_term_odd_even = true;\n\
    \    long next_term_odd_odd = true;\n    long next_term_even = true;\n    long\
    \ next_term_odd_even = true;\n    long next_term_odd_odd = true;\n    long next_term_even\
    \ = true;\n    long next_term_odd_even = true;\n    long next_term_odd_odd = true;\n\
    \    long next_term_even = true;\n    long next_term_odd_even = true;\n    long\
    \ next_term_odd_odd = true;\n    long next_term_even = true;\n    long next_term_odd_even\
    \ = true;\n    long next_term_odd_odd = true;\n    long next_term_even = true;\n\
    \    long next_term_odd_even = true;\n    long next_term_odd_odd = true;\n   \
    \ long next_term_even = true;\n    long next_term_odd_even = true;\n    long next_term_odd_odd\
    \ = true;\n    long next_term_even = true;\n    long next_term_odd_even = true;\n\
    \    long next_term_odd_odd = true;\n    long next_term_even = true;\n    long\
    \ next_term_odd_even = true;\n    long next_term_odd_odd = true;\n    long next_term_even\
    \ = true;\n    long next_term_odd_even = true;\n    long next_term_odd_odd = true;\n\
    \    long next_term_even = true;\n    long next_term_odd_even = true;\n", "  \
    \  std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev\
    \ = 1;\n    long next_odd;\n    while (n != 1) {\n        if (n % 2 == 0) {\n\
    \            next_odd = prev * 2 + 1;\n        } else {\n            next_odd\
    \ = prev * 3;\n        }\n        odd_collatz.push_back(next_odd);\n        prev\
    \ = next_odd;\n        n = prev;\n    }\n    return odd_collatz;", "    std::vector<long>\
    \ odd_collatz;\n    odd_collatz.push_back(n);\n    long prev = 1;\n    while (n\
    \ != 1) {\n        if (n % 2 == 0) {\n            odd_collatz.push_back(prev);\n\
    \            prev = prev / 2;\n        } else {\n            odd_collatz.push_back(3\
    \ * prev + 1);\n            prev = prev * 3 + 1;\n        }\n        n = prev;\n\
    \    }\n    return odd_collatz;", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev = 1;\n    long next_odd;\n    while(prev != 1) {\n        if(prev\
    \ % 2 == 0) {\n            next_odd = prev / 2;\n        } else {\n          \
    \  next_odd = prev * 3 + 1;\n        }\n        odd_collatz.push_back(next_odd);\n\
    \        prev = next_odd;\n    }\n    odd_collatz.sort();\n    return odd_collatz;",
  "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev_term\
    \ = 1;\n    long next_term = 1;\n    long next_term_prev = 1;\n    long next_term_next\
    \ = 1;\n    long next_term_next_prev = 1;\n    long next_term_next_next = 1;\n\
    \    long next_term_next_next_prev = 1;\n    long next_term_next_next_next = 1;\n\
    \    long next_term_next_next_next_prev = 1;\n    long next_term_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next = 1;\n\
    \    long next_term_next_next_next_next_next_next_next_next_next_prev = 1;\n \
    \   long next_term_next_next_next_next_next_next_next_next_next_next = 1;\n  \
    \  long next_term_next_next_next_next_next_next_next_next_next_prev = 1;\n   \
    \ long next_term_next_next_next_next_next_next_next_next_next_next = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_prev =\
    \ 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next = 1;\n\
    \    long next_term_next_next_next_next_next_next_next_next_next_next_prev = 1;\n\
    \    long next_term_next_next_next_next_next_next_next_next_next_next_next = 1;\n\
    \    long next_term_next_next_next_next_next_next_next_next_next_next_prev = 1;\n\
    \    long next_term_next_next_next_next_next_next_next_next_next_next_next = 1;\n\
    \    long next_term_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_", "    std::vector<long> odd_collatz(n);\n  \
    \  odd_collatz[0] = 1;\n    long next_term = 1;\n    long prev_term = 1;\n   \
    \ long counter = 1;\n    long odd_counter = 1;\n    long odd_prev_term = 1;\n\
    \    long odd_next_term = 1;\n    long odd_counter = 1;\n    long odd_odd_counter\
    \ = 1;\n    long odd_odd_prev_term = 1;\n    long odd_odd_next_term = 1;\n   \
    \ long odd_odd_counter = 1;\n    long odd_odd_odd_counter = 1;\n    long odd_odd_odd_prev_term\
    \ = 1;\n    long odd_odd_odd_next_term = 1;\n    long odd_odd_odd_counter = 1;\n\
    \    long odd_odd_odd_odd_counter = 1;\n    long odd_odd_odd_odd_prev_term = 1;\n\
    \    long odd_odd_odd_odd_next_term = 1;\n    long odd_odd_odd_odd_counter = 1;\n\
    \    long odd_odd_odd_odd_odd_counter = 1;\n    long odd_odd_odd_odd_odd_prev_term\
    \ = 1;\n    long odd_odd_odd_odd_odd_next_term = 1;\n    long odd_odd_odd_odd_odd_counter\
    \ = 1;\n    long odd_odd_odd_odd_odd_odd_counter = 1;\n    long odd_odd_odd_odd_odd_odd_prev_term\
    \ = 1;\n    long odd_odd_odd_odd_odd_odd_next_term = 1;\n    long odd_odd_odd_odd_odd_odd_counter\
    \ = 1;\n    long odd_odd_odd_odd_odd_odd_counter = 1;\n    long odd_odd_odd_odd_odd_odd_prev_term\
    \ = 1;\n    long odd_odd_odd_odd_odd_odd_next_term = 1;\n    long odd_odd_odd_odd_odd_odd_odd_counter\
    \ = 1;\n    long odd_odd_odd_odd_odd_odd_odd_counter = 1;\n    long odd_odd_odd_odd_odd_odd_odd_prev_term\
    \ = 1;\n    long odd_odd_odd_odd_odd_odd_odd_next_term = 1;\n    long odd_odd_odd_odd_odd_odd_odd_counter\
    \ = 1;\n    long odd_odd_odd_odd_odd_odd_odd_counter = 1;\n    long odd_od", " \
    \   std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long next_term\
    \ = 1;\n    long prev_term = 1;\n    long counter = 1;\n    while(counter != 1)\
    \ {\n        if(prev_term % 2 == 0) {\n            next_term = prev_term / 2;\n\
    \        } else {\n            next_term = prev_term * 3 + 1;\n        }\n   \
    \     prev_term = next_term;\n        odd_collatz.push_back(next_term);\n    \
    \    counter++;\n    }\n    odd_collatz.push_back(1);\n    std::sort(odd_collatz.begin(),\
    \ odd_collatz.end());\n    return odd_collatz;", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev = 1;\n    long next = 1;\n    long\
    \ temp = 1;\n    long count = 0;\n    while(next != 1) {\n        if(prev % 2\
    \ == 0) {\n            temp = prev;\n            prev = next;\n            next\
    \ = temp / 2;\n            count++;\n        } else {\n            temp = prev;\n\
    \            prev = next * 3;\n            next = temp + 1;\n            count++;\n\
    \        }\n        odd_collatz.push_back(next);\n    }\n    odd_collatz.push_back(1);\n\
    \    odd_collatz.push_back(count);\n    sort(odd_collatz.begin(), odd_collatz.end());\n\
    \    return odd_collatz;", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long next_term = 1;\n    while (next_term != 1) {\n        if (n % 2 == 0)\
    \ {\n            next_term = next_term / 2;\n            odd_collatz.push_back(next_term);\n\
    \        } else {\n            next_term = next_term * 3 + 1;\n            odd_collatz.push_back(next_term);\n\
    \        }\n        n = next_term;\n    }\n    return odd_collatz;", "    std::vector<long>\
    \ odd_collatz;\n    odd_collatz.push_back(n);\n    long prev = 1;\n    long next_odd;\n\
    \    while(true) {\n        next_odd = prev % 2 == 0 ? prev : prev * 2 + 1;\n\
    \        odd_collatz.push_back(next_odd);\n        prev = next_odd;\n        if(next_odd\
    \ != 1)\n            break;\n    }\n    odd_collatz.push_back(1);\n    std::sort(odd_collatz.begin(),\
    \ odd_collatz.end());\n    return odd_collatz;", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev_term = 1;\n    long next_term =\
    \ 1;\n    long next_term_prev = 1;\n    long odd_term = 1;\n    long odd_term_prev\
    \ = 1;\n    long odd_term_next_prev = 1;\n    long odd_term_next_next_prev = 1;\n\
    \    long odd_term_next_next_next_prev = 1;\n    long odd_term_next_next_next_next_prev\
    \ = 1;\n    long odd_term_next_next_next_next_next_prev = 1;\n    long odd_term_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_term_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ odd_term_next_next_next_next_next_next_next_next_prev = 1;\n    long odd_term_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_term_next_next_next_next_next_next_next_next_next_prev =\
    \ 1;\n    long odd_term_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_term_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_term_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_term_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_term_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_term_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_term_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_term_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_term_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_term_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_term_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_term_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_term_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_term_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_term_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev = 1;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    ", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev_term = 1;\n    long next_term =\
    \ 1;\n    long next_term_odd;\n    long next_term_even;\n    long next_term_odd;\n\
    \    long next_term_even;\n    long next_term_odd;\n    long next_term_even;\n\
    \    long next_term_odd;\n    long next_term_even;\n    long next_term_odd;\n\
    \    long next_term_even;\n    long next_term_odd;\n    long next_term_even;\n\
    \    long next_term_odd;\n    long next_term_even;\n    long next_term_odd;\n\
    \    long next_term_even;\n    long next_term_odd;\n    long next_term_even;\n\
    \    long next_term_odd;\n    long next_term_even;\n    long next_term_odd;\n\
    \    long next_term_even;\n    long next_term_odd;\n    long next_term_even;\n\
    \    long next_term_odd;\n    long next_term_even;\n    long next_term_odd;\n\
    \    long next_term_even;\n    long next_term_odd;\n    long next_term_even;\n\
    \    long next_term_odd;\n    long next_term_even;\n    long next_term_odd;\n\
    \    long next_term_even;\n    long next_term_odd;\n    long next_term_even;\n\
    \    long next_term_odd;\n    long next_term_even;\n    long next_term_odd;\n\
    \    long next_term_even;\n    long next_term_odd;\n    long next_term_even;\n\
    \    long next_term_odd;\n    long next_term_even;\n    long next_term_odd;\n\
    \    long next_term_even;\n    long next_term_odd;\n    long next_term_even;\n\
    \    long next_term_odd;\n    long next_term_even;\n    long next_term_odd;\n\
    \    long next_term_even;\n    long next_term_odd;\n    long next_term_even;\n\
    \    long next_term_odd;\n    long next_term_even;\n    long next_term_odd;\n\
    \    long next_term_even;\n    long next_term_odd;\n    long next_term_even;\n\
    \    long next_term_odd;\n    long next_term_even;\n    long next_term_odd;\n\
    \    long next_term_even;\n    long next_term_odd;\n    long next_term_even;\n\
    \    long next_term_odd;\n    long next_term_even;\n    long next_term_", "  \
    \  std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev\
    \ = 1;\n    long next_odd = 0;\n    long next_even = 1;\n    long next_odd2 =\
    \ 1;\n    long next_even2 = 1;\n    long next_odd3 = 1;\n    long next_even3 =\
    \ 1;\n    long next_odd4 = 1;\n    long next_even4 = 1;\n    long next_odd5 =\
    \ 1;\n    long next_even5 = 1;\n    long next_odd6 = 1;\n    long next_even6 =\
    \ 1;\n    long next_odd7 = 1;\n    long next_even7 = 1;\n    long next_odd8 =\
    \ 1;\n    long next_even8 = 1;\n    long next_odd9 = 1;\n    long next_even9 =\
    \ 1;\n    long next_odd10 = 1;\n    long next_even10 = 1;\n    long next_odd11\
    \ = 1;\n    long next_even11 = 1;\n    long next_odd12 = 1;\n    long next_even12\
    \ = 1;\n    long next_odd13 = 1;\n    long next_even13 = 1;\n    long next_odd14\
    \ = 1;\n    long next_even14 = 1;\n    long next_odd15 = 1;\n    long next_even15\
    \ = 1;\n    long next_odd16 = 1;\n    long next_even16 = 1;\n    long next_odd17\
    \ = 1;\n    long next_even17 = 1;\n    long next_odd18 = 1;\n    long next_even18\
    \ = 1;\n    long next_odd19 = 1;\n    long next_even19 = 1;\n    long next_odd20\
    \ = 1;\n    long next_even20 = 1;\n    long next_odd21 = 1;\n    long next_even21\
    \ = 1;\n    long next_odd22 = 1;\n    long next_even22 = 1;\n    long next_odd23\
    \ = 1;\n    long next_even23 = 1;\n    long next_odd24 = 1;\n    long next_even24\
    \ = 1;\n    long next_odd25 = 1;\n    long next_even25 = 1;\n    long next_odd26\
    \ = 1;\n    long next_even26 = 1;\n    long next_odd27 = 1;\n    long next_even27\
    \ = 1;\n    long next_odd28 = 1;\n    long next_even28 = 1;\n    long next_odd29\
    \ = 1;\n    long next_even29 = 1;\n    long next_odd30 = 1;\n    long next_even30\
    \ = 1;\n    long next_odd31 = 1;\n    long next_even31 = 1;\n    long next_odd32\
    \ = 1;\n    long next_even32 = 1;\n    long next_odd33 = 1;\n    long next_even33\
    \ = 1;\n    long next_odd34 = 1;\n    long next_even34 = 1;\n    long next_odd35\
    \ = 1;\n    long next_even35 = 1;\n    ", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev_term = 1;\n    long next_term =\
    \ 1;\n    long next_term_odd;\n    long next_term_even;\n    long next_term_even;\n\
    \    long next_term_odd;\n    long next_term_even;\n    long next_term_odd;\n\
    \    long next_term_even;\n    long next_term_odd;\n    long next_term_even;\n\
    \    long next_term_odd;\n    long next_term_even;\n    long next_term_odd;\n\
    \    long next_term_even;\n    long next_term_odd;\n    long next_term_even;\n\
    \    long next_term_odd;\n    long next_term_even;\n    long next_term_odd;\n\
    \    long next_term_even;\n    long next_term_odd;\n    long next_term_even;\n\
    \    long next_term_odd;\n    long next_term_even;\n    long next_term_odd;\n\
    \    long next_term_even;\n    long next_term_odd;\n    long next_term_even;\n\
    \    long next_term_odd;\n    long next_term_even;\n    long next_term_odd;\n\
    \    long next_term_even;\n    long next_term_odd;\n    long next_term_even;\n\
    \    long next_term_odd;\n    long next_term_even;\n    long next_term_odd;\n\
    \    long next_term_even;\n    long next_term_odd;\n    long next_term_even;\n\
    \    long next_term_odd;\n    long next_term_even;\n    long next_term_odd;\n\
    \    long next_term_even;\n    long next_term_odd;\n    long next_term_even;\n\
    \    long next_term_odd;\n    long next_term_even;\n    long next_term_odd;\n\
    \    long next_term_even;\n    long next_term_odd;\n    long next_term_even;\n\
    \    long next_term_odd;\n    long next_term_even;\n    long next_term_odd;\n\
    \    long next_term_even;\n    long next_term_odd;\n    long next_term_even;\n\
    \    long next_term_odd;\n    long next_term_even;\n    long next_term_odd;\n\
    \    long next_term_even;\n    long next_term_odd;\n    long next_term_even;\n\
    \    long next_term_odd;\n    long next_term_even;\n    long next_term_odd;\n\
    \    long next_term_even;\n    long next_term_odd;\n    long next_term_", "  \
    \  std::vector<long> odd_collatz(n);\n    long prev_term = 1;\n    long next_term\
    \ = 1;\n    long next_term_odd = 1;\n    long next_term_even = 1;\n    long odd_term\
    \ = 1;\n    long even_term = 1;\n    long odd_term_odd = 1;\n    long even_term_even\
    \ = 1;\n    long odd_term_even = 1;\n    long even_term_odd = 1;\n    long odd_term_odd\
    \ = 1;\n    long even_term_even = 1;\n    long odd_term_odd = 1;\n    long even_term_even\
    \ = 1;\n    long odd_term_odd = 1;\n    long even_term_even = 1;\n    long odd_term_odd\
    \ = 1;\n    long even_term_even = 1;\n    long odd_term_odd = 1;\n    long even_term_even\
    \ = 1;\n    long odd_term_odd = 1;\n    long even_term_even = 1;\n    long odd_term_odd\
    \ = 1;\n    long even_term_even = 1;\n    long odd_term_odd = 1;\n    long even_term_even\
    \ = 1;\n    long odd_term_odd = 1;\n    long even_term_even = 1;\n    long odd_term_odd\
    \ = 1;\n    long even_term_even = 1;\n    long odd_term_odd = 1;\n    long even_term_even\
    \ = 1;\n    long odd_term_odd = 1;\n    long even_term_even = 1;\n    long odd_term_odd\
    \ = 1;\n    long even_term_even = 1;\n    long odd_term_odd = 1;\n    long even_term_even\
    \ = 1;\n    long odd_term_odd = 1;\n    long even_term_even = 1;\n    long odd_term_odd\
    \ = 1;\n    long even_term_even = 1;\n    long odd_term_odd = 1;\n    long even_term_even\
    \ = 1;\n    long odd_term_odd = 1;\n    long even_term_even = 1;\n    long odd_term_odd\
    \ = 1;\n    long even_term_even = 1;\n    long odd_term_odd = 1;\n    long even_term_even\
    \ = 1;\n    long odd_term_odd = 1;\n    long even_term_even = 1;\n    long odd_term_odd\
    \ = 1;\n    long even_term_even = 1;\n    long odd_term_odd = 1;\n    long even_term_even\
    \ = 1;\n    long odd_term_odd = 1;\n    long even_term_even = 1;\n    long odd_term_odd\
    \ = 1;\n    long even_term_even = 1;\n", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev_term = 1;\n    long next_term =\
    \ 1;\n    long next_term_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev = 1;\n    long next_odd;\n    long next_even;\n    while(true)\
    \ {\n        if(prev % 2 == 0) {\n            next_even = prev / 2;\n        \
    \    next_odd = next_even * 3;\n        } else {\n            next_odd = prev\
    \ * 3 + 1;\n            next_even = next_odd / 2;\n        }\n        if(next_odd\
    \ != 1) {\n            odd_collatz.push_back(next_odd);\n        }\n        if(next_even\
    \ != 1) {\n            odd_collatz.push_back(next_even);\n        }\n        if(next_even\
    \ != 1 && next_odd != 1) {\n            odd_collatz.push_back(next_even);\n  \
    \      }\n        if(next_even != 1 && next_odd != 1) {\n            odd_collatz.push_back(next_odd);\n\
    \        }\n        if(next_even != 1 && next_odd != 1) {\n            odd_collatz.push_back(next_even);\n\
    \        }\n        if(next_even != 1 && next_odd != 1) {\n            odd_collatz.push_back(next_odd);\n\
    \        }\n        if(next_even != 1 && next_odd != 1) {\n            odd_collatz.push_back(next_even);\n\
    \        }\n        if(next_even != 1 && next_odd != 1) {\n            odd_collatz.push_back(next_odd);\n\
    \        }\n        if(next_even != 1 && next_odd != 1) {\n            odd_collatz.push_back(next_even);\n\
    \        }\n        if(next_even != 1 && next_odd != 1) {\n            odd_collatz.push_back(next_odd);\n\
    \        }\n        if(next_even != 1 && next_odd != 1) {\n            odd_collatz.push_back(next_even);\n\
    \        }\n        if(next_even != 1 && next_odd != 1) {\n            odd_collatz.push_back(next_odd);\n\
    \        }\n        if(next_even != 1 && next_odd != 1) {\n            odd_collatz.push_back(next_even);\n\
    \        }\n        if(next_even != 1 && next_odd != 1) {\n            odd_collatz.push_back(next_odd);\n\
    \        }\n        if(next_even != 1 && next_odd != 1) {\n            odd_collatz.push_back(next_even);\n\
    \        }\n        if(next_even != 1 && next_odd != 1) {\n            odd_collatz.push_back(next_odd);\n\
    \        }\n        if(next_even != 1 && next_odd != 1) {\n            odd_collatz.push_back(next_even);\n\
    \        }\n        if(next_even != 1 && next_odd != 1) {\n            odd_collatz.push_back(next_odd);\n\
    \        }\n        if(next_even != 1 && next_odd != 1) {\n            odd_collatz.push_back(next_even);\n\
    \        }\n        if(", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev = 1;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    ", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev_term = 1;\n    long next_term =\
    \ 1;\n    long next_term_prev = 1;\n    long next_term_next = 1;\n    long next_term_next_prev\
    \ = 1;\n    long next_term_next_next = 1;\n    long next_term_next_next_prev =\
    \ 1;\n    long next_term_next_next_next = 1;\n    long next_term_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next = 1;\n    long next_term_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_prev = 1;\n\
    \    long next_term_next_next_next_next_next_next_next_next_next = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_prev = 1;\n\
    \    long next_term_next_next_next_next_next_next_next_next_next = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next\
    \ = 1;\n    ", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev = 1;\n    long next_odd;\n    while(true) {\n        next_odd =\
    \ prev % 2 == 0 ? prev + 1 : prev * 3 + 1;\n        if(next_odd > n) {\n     \
    \       break;\n        }\n        odd_collatz.push_back(next_odd);\n        prev\
    \ = next_odd;\n    }\n    std::sort(odd_collatz.begin(), odd_collatz.end());\n\
    \    return odd_collatz;", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    long prev_term_odd = 1;\n\
    \    long next_term_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_", "    std::vector<long>\
    \ odd_collatz_list;\n    odd_collatz_list.push_back(n);\n    long prev_term =\
    \ 1;\n    long next_term = 1;\n    long counter = 1;\n    while(counter != 1)\
    \ {\n        if(prev_term % 2 == 0) {\n            next_term = prev_term / 2;\n\
    \        } else {\n            next_term = prev_term * 3 + 1;\n        }\n   \
    \     odd_collatz_list.push_back(next_term);\n        prev_term = next_term;\n\
    \        counter++;\n    }\n    odd_collatz_list.push_back(1);\n    std::sort(odd_collatz_list.begin(),\
    \ odd_collatz_list.end());\n    return odd_collatz_list;", "    std::vector<long>\
    \ odd_collatz;\n    odd_collatz.push_back(n);\n    long prev = 1;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    ", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n \
    \   long prev_n = 1;\n    long next_n = 1;\n    long next_n_prev = 1;\n    long\
    \ next_n_prev_prev = 1;\n    long next_n_prev_prev_prev = 1;\n    long next_n_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev = 1;\n    long next_n_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev = 1;\n  \
    \  long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 1;\n    long\
    \ next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 1;\n    long\
    \ next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 1;\n  \
    \  long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_", " \
    \   std::vector<long> odd_collatz(n);\n    long odd_collatz_sum = 0;\n    long\
    \ odd_collatz_sum2 = 0;\n    long odd_collatz_sum3 = 0;\n    long odd_collatz_sum4\
    \ = 0;\n    long odd_collatz_sum5 = 0;\n    long odd_collatz_sum6 = 0;\n    long\
    \ odd_collatz_sum7 = 0;\n    long odd_collatz_sum8 = 0;\n    long odd_collatz_sum9\
    \ = 0;\n    long odd_collatz_sum10 = 0;\n    long odd_collatz_sum11 = 0;\n   \
    \ long odd_collatz_sum12 = 0;\n    long odd_collatz_sum13 = 0;\n    long odd_collatz_sum14\
    \ = 0;\n    long odd_collatz_sum15 = 0;\n    long odd_collatz_sum16 = 0;\n   \
    \ long odd_collatz_sum17 = 0;\n    long odd_collatz_sum18 = 0;\n    long odd_collatz_sum19\
    \ = 0;\n    long odd_collatz_sum20 = 0;\n    long odd_collatz_sum21 = 0;\n   \
    \ long odd_collatz_sum22 = 0;\n    long odd_collatz_sum23 = 0;\n    long odd_collatz_sum24\
    \ = 0;\n    long odd_collatz_sum25 = 0;\n    long odd_collatz_sum26 = 0;\n   \
    \ long odd_collatz_sum27 = 0;\n    long odd_collatz_sum28 = 0;\n    long odd_collatz_sum29\
    \ = 0;\n    long odd_collatz_sum30 = 0;\n    long odd_collatz_sum31 = 0;\n   \
    \ long odd_collatz_sum32 = 0;\n    long odd_collatz_sum33 = 0;\n    long odd_collatz_sum34\
    \ = 0;\n    long odd_collatz_sum35 = 0;\n    long odd_collatz_sum36 = 0;\n   \
    \ long odd_collatz_sum37 = 0;\n    long odd_collatz_sum38 = 0;\n    long odd_collatz_sum39\
    \ = 0;\n    long odd_collatz_sum40 = 0;\n    long odd_collatz_sum41 = 0;\n   \
    \ long odd_collatz_sum42 = 0;\n    long odd_collatz_sum43 = 0;\n    long odd_collatz_sum44\
    \ = 0;\n    long odd_collatz_sum45 = 0;\n    long odd_collatz_sum46 = 0;", " \
    \   std::vector<long> odd_collatz(n);\n    long prev = 1;\n    for (long i = 1;\
    \ i <= n; i++) {\n        if (i % 2 == 0) {\n            odd_collatz[i] = prev;\n\
    \            prev = prev / 2;\n        } else {\n            odd_collatz[i] =\
    \ prev * 3 + 1;\n            prev = prev * 3 + 1;\n        }\n    }\n    return\
    \ odd_collatz;", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev = 1;\n    long next_odd;\n    while(prev != 1) {\n        if(prev\
    \ % 2 == 0) {\n            next_odd = prev / 2;\n        } else {\n          \
    \  next_odd = prev * 3 + 1;\n        }\n        odd_collatz.push_back(next_odd);\n\
    \        prev = next_odd;\n    }\n    odd_collatz.sort();\n    return odd_collatz;",
  "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev_term\
    \ = 1;\n    long next_term = 1;\n    long next_term_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_", "    std::vector<long> odd_collatz_list;\n\
    \    odd_collatz_list.push_back(1); // Collatz(1) is [1].\n    long prev_term\
    \ = 1;\n    long next_term = 1;\n    long odd_term = 1;\n    long odd_term_counter\
    \ = 1;\n    long odd_term_counter_increment = 1;\n    long odd_term_decrement\
    \ = 1;\n    long odd_term_decrement_counter = 1;\n    long odd_term_decrement_counter_increment\
    \ = 1;\n    long odd_term_decrement_counter_increment_decrement = 1;\n    long\
    \ odd_term_decrement_counter_increment_decrement_decrement = 1;\n    long odd_term_decrement_counter_increment_decrement_decrement_decrement\
    \ = 1;\n    long odd_term_decrement_counter_increment_decrement_decrement_decrement_decrement\
    \ = 1;\n    long odd_term_decrement_counter_increment_decrement_decrement_decrement_decrement_decrement\
    \ = 1;\n    long odd_term_decrement_counter_increment_decrement_decrement_decrement_decrement_decrement_decrement\
    \ = 1;\n    long odd_term_decrement_counter_increment_decrement_decrement_decrement_decrement_decrement_decrement\
    \ = 1;\n    long odd_term_decrement_counter_increment_decrement_decrement_decrement_decrement_decrement_decrement_decrement\
    \ = 1;\n    long odd_term_decrement_counter_increment_decrement_decrement_decrement_decrement_decrement_decrement_decrement_decrement\
    \ = 1;\n    long odd_term_decrement_counter_increment_decrement_decrement_decrement_decrement_decrement_decrement_decrement_decrement_decrement\
    \ = 1;\n    long odd_term_decrement_counter_increment_decrement_decrement_decrement_decrement_decrement_decrement_decrement_decrement_decrement_decrement\
    \ = 1;\n    long odd_term_decrement_counter_increment_decrement_decrement_decrement_decrement_decrement_decrement_decrement_decrement_decrement_decrement\
    \ = 1;\n    long odd_term_decrement_counter_increment_decrement_decrement_decrement_decrement_decrement_decrement_decrement_decrement_decrement_decrement\
    \ = 1;\n    long odd_term_decrement_counter_increment_decrement_decrement_decrement_decrement_decrement_decrement_decrement_decrement_decrement_decrement_decrement\
    \ = 1;\n    long odd_term_decrement_counter_increment_decrement_decrement_decrement_decrement_decrement_decrement_decrement_decrement_decrement_decrement_decrement_decrement\
    \ = 1;\n    long odd_term_decrement_counter_increment_decrement_decrement_decrement_decrement_decrement_decrement_decrement_decrement_decre",
  "    std::vector<long> odd_collatz(n);\n    long prev_term = 1;\n    long next_term\
    \ = 1;\n    long count = 1;\n    long index = 0;\n    while(count != 1) {\n  \
    \      if(prev_term % 2 == 0) {\n            next_term = prev_term / 2;\n    \
    \    } else {\n            next_term = prev_term * 3 + 1;\n        }\n       \
    \ odd_collatz[index] = next_term;\n        prev_term = next_term;\n        index++;\n\
    \        count++;\n    }\n    return odd_collatz;", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev_term = 1;\n    long next_term =\
    \ 1;\n    long next_term_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    long next_term_odd = 1;\n\
    \    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_odd_even = 1;\n    long next_term_odd_odd_odd =\
    \ 1;\n    long next_term_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n\
    \    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_od",
  "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev\
    \ = 1;\n    long next_odd;\n    long next_even;\n    long next_odd;\n    long\
    \ next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n  \
    \  long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    ", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev_term = 1;\n    long next_term =\
    \ 1;\n    long next_term_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    long next_term_odd = 1;\n\
    \    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_", "    std::vector<long>\
    \ odd_collatz(n + 1);\n    odd_collatz[0] = 1;\n    long odd_num = 1;\n    long\
    \ odd_num2 = 1;\n    long odd_num3 = 1;\n    long odd_num4 = 1;\n    long odd_num5\
    \ = 1;\n    long odd_num6 = 1;\n    long odd_num7 = 1;\n    long odd_num8 = 1;\n\
    \    long odd_num9 = 1;\n    long odd_num10 = 1;\n    long odd_num11 = 1;\n  \
    \  long odd_num12 = 1;\n    long odd_num13 = 1;\n    long odd_num14 = 1;\n   \
    \ long odd_num15 = 1;\n    long odd_num16 = 1;\n    long odd_num17 = 1;\n    long\
    \ odd_num18 = 1;\n    long odd_num19 = 1;\n    long odd_num20 = 1;\n    long odd_num21\
    \ = 1;\n    long odd_num22 = 1;\n    long odd_num23 = 1;\n    long odd_num24 =\
    \ 1;\n    long odd_num25 = 1;\n    long odd_num26 = 1;\n    long odd_num27 = 1;\n\
    \    long odd_num28 = 1;\n    long odd_num29 = 1;\n    long odd_num30 = 1;\n \
    \   long odd_num31 = 1;\n    long odd_num32 = 1;\n    long odd_num33 = 1;\n  \
    \  long odd_num34 = 1;\n    long odd_num35 = 1;\n    long odd_num36 = 1;\n   \
    \ long odd_num37 = 1;\n    long odd_num38 = 1;\n    long odd_num39 = 1;\n    long\
    \ odd_num40 = 1;\n    long odd_num41 = 1;\n    long odd_num42 = 1;\n    long odd_num43\
    \ = 1;\n    long odd_num44 = 1;\n    long odd_num45 = 1;\n    long odd_num46 =\
    \ 1;\n    long odd_num47 = 1;\n    long odd_num48 = 1;\n    long odd_num49 = 1;\n\
    \    long odd_num50 = 1;\n    long odd_num51 = 1;\n    long odd_num52 = 1;\n \
    \   long odd_num53 = 1;\n    long odd_num54 = 1;\n    long odd_num55 = 1;\n  \
    \  long odd_num56 = 1;\n    long odd_num57 = 1;\n    long odd_num58 = 1;\n   \
    \ long odd_num59 = 1;\n    long odd_num60 = 1;\n    long odd_num61 = 1;\n    ",
  "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev\
    \ = 1;\n    long next_odd;\n    while(prev != 1) {\n        if(prev % 2 == 0)\
    \ {\n            next_odd = prev / 2;\n        } else {\n            next_odd\
    \ = prev * 3 + 1;\n        }\n        odd_collatz.push_back(next_odd);\n     \
    \   prev = next_odd;\n    }\n    odd_collatz.push_back(1);\n    std::sort(odd_collatz.begin(),\
    \ odd_collatz.end());\n    return odd_collatz;", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev_term = 1;\n    long next_term =\
    \ 1;\n    long next_term_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_odd_even = 1;\n\
    \    long next_term_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_even = 1;\n\
    \    long next_term_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n   \
    \ long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n\
    \    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_od", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev_term = 1;\n    long next_term =\
    \ 1;\n    long next_term_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    while (next_term != 1)\
    \ {\n        if (prev_term % 2 == 0) {\n            next_term = prev_term / 2;\n\
    \        } else {\n            next_term = prev_term * 3 + 1;\n        }\n   \
    \     odd_collatz.push_back(next_term);\n        prev_term = next_term;\n    }\n\
    \    odd_collatz.push_back(1);\n    std::sort(odd_collatz.begin(), odd_collatz.end());\n\
    \    return odd_collatz;", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long next_term = 1;\n    long prev_term = 1;\n    long next_term_odd = 1;\n\
    \    long prev_term_odd = 1;\n    long next_term_even = 1;\n    long prev_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long prev_term_odd_even = 1;\n \
    \   long next_term_odd_odd = 1;\n    long prev_term_odd_odd = 1;\n    long next_term_odd_odd_even\
    \ = 1;\n    long prev_term_odd_odd_even = 1;\n    long next_term_odd_odd_odd =\
    \ 1;\n    long prev_term_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_even\
    \ = 1;\n    long prev_term_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd\
    \ = 1;\n    long prev_term_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_even\
    \ = 1;\n    long prev_term_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd\
    \ = 1;\n    long prev_term_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long prev_term_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long prev_term_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long prev_term_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long prev_term_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long prev_term_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long prev_term_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long prev_term_odd_odd_odd_", "    std::vector<long> odd_collatz_list;\n\
    \    odd_collatz_list.push_back(n);\n    long prev_term = 1;\n    long next_term\
    \ = 1;\n    long next_term_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  ", "    std::vector<long> odd_collatz_list;\n    odd_collatz_list.push_back(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    while (next_term != 1)\
    \ {\n        if (prev_term % 2 == 0) {\n            next_term = prev_term / 2;\n\
    \        } else {\n            next_term = prev_term * 3 + 1;\n        }\n   \
    \     odd_collatz_list.push_back(next_term);\n        prev_term = next_term;\n\
    \    }\n    std::sort(odd_collatz_list.begin(), odd_collatz_list.end());\n   \
    \ return odd_collatz_list;", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    long next_term_odd = 1;\n\
    \    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_"]
stop_tokens:
- "\n}"

name: HumanEval_161_solve
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string s.\n\
  // if s[i] is a letter, reverse its case from lower to upper or vise versa, \n//\
  \ otherwise keep it as it is.\n// If the string contains no letters, reverse the\
  \ string.\n// The function should return the resulted string.\n// Examples\nstd::string\
  \ solve(std::string s) {\n"
tests: "}\nint main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\"\
  )) == (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
  ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
  #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
  ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
  #ccc\")) == (\"#CCC\"));\n}\n"
completions: ["    std::string ans = s;\n    for(int i = 0; i < s.length(); i++) {\n\
    \        if(isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.length());\n        }\n    }\n    return ans;",
  "    std::string ans = s;\n    for (auto &c: ans) {\n        if (isalpha(c)) {\n\
    \            int l = tolower(c);\n            int u = toupper(c);\n          \
    \  if (l != u) {\n                ans = ans.replace(c, l, u);\n            }\n\
    \        }\n    }\n    return ans;", "    std::string ans = \"\";\n    for(int\
    \ i = 0; i < s.size(); i++) {\n        if(isalpha(s[i])) {\n            ans +=\
    \ toupper(s[i]);\n        } else {\n            ans += s[i];\n        }\n    }\n\
    \    return ans;", "    std::string ans = s;\n    for(int i = 0; i < s.length();\
    \ i++) {\n        if(isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.length());\n        }\n    }\n    return ans;",
  "    std::string ans = s;\n    for(int i = 0; i < s.length(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.length());\n        }\n    }\n    return ans;", "    std::string res;\n\
    \    for(int i=0;i<s.size();i++){\n        if(isalpha(s[i])){\n            res+=toupper(s[i]);\n\
    \        }\n        else{\n            res+=s[i];\n        }\n    }\n    return\
    \ res;", "    std::string ans = s;\n    for (auto &c: ans) {\n        if (isalpha(c))\
    \ {\n            std::swap(tolower(c), toupper(c));\n        }\n    }\n    return\
    \ ans;", "    std::string res;\n    for(int i=0;i<s.size();i++){\n        if(s[i]>='a'\
    \ && s[i]<='z'){\n            res+=s[i];\n        }\n        else if(s[i]>='A'\
    \ && s[i]<='Z'){\n            res+=s[i];\n        }\n        else{\n         \
    \   res+=s[i];\n        }\n    }\n    return res;", "    std::string ans = s;\n\
    \    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i])) {\n      \
    \      ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1,\
    \ ans.size());\n        }\n    }\n    return ans;", "    std::string res;\n  \
    \  for(int i=0;i<s.size();i++){\n        if(isalpha(s[i])){\n            res+=toupper(s[i]);\n\
    \        }\n        else{\n            res+=s[i];\n        }\n    }\n    return\
    \ res;", "    std::string res;\n    for(int i=0;i<s.size();i++){\n        if(isalpha(s[i])){\n\
    \            int lower = tolower(s[i]);\n            int upper = toupper(s[i]);\n\
    \            int temp = lower;\n            lower = upper;\n            upper\
    \ = temp;\n            s[i] = lower;\n        }\n    }\n    res.swap(s);\n   \
    \ return res;", "    std::string ans = s;\n    for (auto &c: ans)\n    {\n   \
    \     if (std::isalpha(c))\n        {\n            std::swap(toupper(c), toupper(tolower(c)));\n\
    \        }\n    }\n    return ans;", "    std::string ans = s;\n    for (auto\
    \ &i : s) {\n        if (i == 'a' || i == 'A') {\n            ans = ans.replace(\"\
    A\",\"a\");\n            ans = ans.replace(\"a\",\"A\");\n        }\n        if\
    \ (i == 'b' || i == 'B') {\n            ans = ans.replace(\"B\",\"b\");\n    \
    \        ans = ans.replace(\"b\",\"B\");\n        }\n        if (i == 'c' || i\
    \ == 'C') {\n            ans = ans.replace(\"C\",\"c\");\n            ans = ans.replace(\"\
    c\",\"C\");\n        }\n        if (i == 'd' || i == 'D') {\n            ans =\
    \ ans.replace(\"D\",\"d\");\n            ans = ans.replace(\"d\",\"D\");\n   \
    \     }\n        if (i == 'e' || i == 'E') {\n            ans = ans.replace(\"\
    E\",\"e\");\n            ans = ans.replace(\"e\",\"E\");\n        }\n        if\
    \ (i == 'f' || i == 'F') {\n            ans = ans.replace(\"F\",\"f\");\n    \
    \        ans = ans.replace(\"f\",\"F\");\n        }\n        if (i == 'g' || i\
    \ == 'G') {\n            ans = ans.replace(\"G\",\"g\");\n            ans = ans.replace(\"\
    g\",\"G\");\n        }\n        if (i == 'h' || i == 'H') {\n            ans =\
    \ ans.replace(\"H\",\"h\");\n            ans = ans.replace(\"h\",\"H\");\n   \
    \     }\n        if (i == 'i' || i == 'I') {\n            ans = ans.replace(\"\
    I\",\"i\");\n            ans = ans.replace(\"i\",\"I\");\n        }\n        if\
    \ (i == 'j' || i == 'J') {\n            ans = ans.replace(\"J\",\"j\");\n    \
    \        ans = ans.replace(\"j\",\"J\");\n        }\n        if (i == 'k' || i\
    \ == 'K') {\n            ans = ans.replace(\"K\",\"k\");\n            ans = ans.replace(\"\
    k\",\"K\");\n        }\n        if (i == 'l' || i == 'L') {\n            ans =\
    \ ans.replace(\"L\",\"l\");\n            ans = ans.replace(\"l\",\"L\");\n   \
    \     }\n        if (i == 'm' || i == 'M') {\n            ans = ans.replace(\"\
    M\",\"m\");\n            ans = ans.replace(\"m\",\"M\");\n        }\n        if\
    \ (i == 'n' || i == 'N') {\n            ans = ans.replace(\"N\",\"n\");\n    \
    \        ans = ans.replace(\"n\",\"N\");\n        }\n        if (i == 'o' || i\
    \ == 'O') {\n            ans = ans.replace(\"O\",\"o\");\n            ans = an",
  "    std::string ans = s;\n    for(int i = 0; i < s.length(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.length());\n        }\n    }\n    return ans;", "    std::string ans\
    \ = s;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i])) {\n\
    \            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.size());\n        }\n    }\n    return ans;", "    std::string ans\
    \ = s;\n    for (int i = 0; i < s.size(); i++) {\n        if (isalpha(s[i])) {\n\
    \            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.size());\n        }\n    }\n    return ans;", "    std::string ans\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans += toupper(s[i]);\n        } else {\n            ans += s[i];\n\
    \        }\n    }\n    return ans;", "    std::string res;\n    for(int i=0;i<s.size();i++){\n\
    \        if(s[i]>=65 && s[i]<=90){\n            res+=toupper(s[i]);\n        }\n\
    \        else if(s[i]>=97 && s[i]<=122){\n            res+=tolower(s[i]);\n  \
    \      }\n        else{\n            res+=s[i];\n        }\n    }\n    return\
    \ res;", "    std::string res;\n    int len = s.length();\n    for(int i = 0;\
    \ i < len; i++){\n        if(s[i] == 'a'){\n            s[i] = 'A';\n        }\n\
    \        else if(s[i] == 'b'){\n            s[i] = 'B';\n        }\n        else\
    \ if(s[i] == 'c'){\n            s[i] = 'C';\n        }\n        else if(s[i] ==\
    \ 'd'){\n            s[i] = 'D';\n        }\n        else if(s[i] == 'e'){\n \
    \           s[i] = 'E';\n        }\n        else if(s[i] == 'f'){\n          \
    \  s[i] = 'F';\n        }\n        else if(s[i] == 'g'){\n            s[i] = 'G';\n\
    \        }\n        else if(s[i] == 'h'){\n            s[i] = 'H';\n        }\n\
    \        else if(s[i] == 'i'){\n            s[i] = 'I';\n        }\n        else\
    \ if(s[i] == 'j'){\n            s[i] = 'J';\n        }\n        else if(s[i] ==\
    \ 'k'){\n            s[i] = 'K';\n        }\n        else if(s[i] == 'l'){\n \
    \           s[i] = 'L';\n        }\n        else if(s[i] == 'm'){\n          \
    \  s[i] = 'M';\n        }\n        else if(s[i] == 'n'){\n            s[i] = 'N';\n\
    \        }\n        else if(s[i] == 'o'){\n            s[i] = 'O';\n        }\n\
    \        else if(s[i] == 'p'){\n            s[i] = 'P';\n        }\n        else\
    \ if(s[i] == 'q'){\n            s[i] = 'Q';\n        }\n        else if(s[i] ==\
    \ 'r'){\n            s[i] = 'R';\n        }\n        else if(s[i] == 's'){\n \
    \           s[i] = 'S';\n        }\n        else if(s[i] == 't'){\n          \
    \  s[i] = 'T';\n        }\n        else if(s[i] == 'u'){\n            s[i] = 'U';\n\
    \        }\n        else if(s[i] == 'v'){\n            s[i] = 'V';\n        }\n\
    \        else if(s[i] == 'w'){\n            s[i] = 'W';\n        }\n        else\
    \ if(s[i] == 'x'){\n            s[i] = 'X';\n        }\n        else if(s[i] ==\
    \ 'y'){\n            s[i] = 'Y';\n        }\n        else if(s[i] == 'z'){\n \
    \           s[i] = 'Z';\n        }\n        else if(s[i] == 'A'){\n          \
    \  s[i] = 'a';\n        }\n        else if(s[i] == 'B'){\n            s[i] = 'b';\n\
    \        }\n        else if(s[i] == 'C'){\n            s[i] = 'c';\n        }\n\
    \        else if(s[i] == 'D'){\n            s[i] = 'd';\n        }\n        else\
    \ if(s[i] == 'E'){\n            s[i] = 'e';\n        }\n        else if(s[i] ==\
    \ 'F'){\n            s[i] = '", "    std::string ans = s;\n    for(int i=0;i<s.length();i++){\n\
    \        if(s[i]>='a' && s[i]<='z'){\n            ans = ans.substr(0,i)+toupper(s[i])+ans.substr(i+1);\n\
    \        }\n        else if(s[i]>='A' && s[i]<='Z'){\n            ans = ans.substr(0,i)+tolower(s[i])+ans.substr(i+1);\n\
    \        }\n        else{\n            ans = ans.substr(0,i)+s[i]+ans.substr(i+1);\n\
    \        }\n    }\n    return ans;", "    std::string res;\n    for(int i=0;i<s.size();i++){\n\
    \        if(s[i]>=65&&s[i]<=90){\n            res+=char(s[i]-32);\n        }\n\
    \        else if(s[i]>=97&&s[i]<=122){\n            res+=char(s[i]+32);\n    \
    \    }\n        else{\n            res+=s[i];\n        }\n    }\n    return res;",
  "    std::string ans = s;\n    for(int i = 0; i < ans.size(); i++) {\n        if(isalpha(ans[i]))\
    \ {\n            ans[i] = toupper(ans[i]);\n        }\n    }\n    return ans;",
  "    std::string ans = s;\n    for (int i = 0; i < s.size(); i++) {\n        if\
    \ (s[i] == 'a' || s[i] == 'A') {\n            ans = ans.replace(\"a\", toupper(s[i]));\n\
    \            ans = ans.replace(\"A\", tolower(s[i]));\n        } else {\n    \
    \        ans = ans.replace(s[i], s[i]);\n        }\n    }\n    return ans;", " \
    \   std::string ans = s;\n    for (int i = 0; i < ans.size(); i++) {\n       \
    \ if (isalpha(ans[i])) {\n            ans[i] = toupper(ans[i]);\n        }\n \
    \   }\n    return ans;", "    std::string ans = s;\n    for(int i = 0; i < ans.size();\
    \ i++) {\n        if(isalpha(ans[i])) {\n            ans[i] = toupper(ans[i]);\n\
    \        }\n    }\n    return ans;", "    std::string ans = s;\n    for (int i\
    \ = 0; i < s.length(); i++) {\n        if (isalpha(s[i])) {\n            ans =\
    \ ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.length());\n\
    \        }\n    }\n    return ans;", "    std::string ans = s;\n    for(int i\
    \ = 0; i < s.size(); i++) {\n        if(isalpha(s[i])) {\n            ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n        }\n\
    \    }\n    return ans;", "    std::string ans = s;\n    for (int i = 0; i < ans.size();\
    \ i++) {\n        if (isalpha(ans[i])) {\n            ans[i] = toupper(ans[i]);\n\
    \        }\n    }\n    return ans;", "    std::string res;\n    for(int i=0;i<s.size();i++){\n\
    \        if(isalpha(s[i])){\n            res+=toupper(s[i]);\n        }\n    \
    \    else{\n            res+=s[i];\n        }\n    }\n    return res;", "    std::string\
    \ ans = s;\n    for(int i = 0; i < ans.size(); i++) {\n        if(isalpha(ans[i]))\
    \ {\n            ans[i] = toupper(ans[i]);\n        }\n    }\n    return ans;",
  "    std::string res;\n    for(int i=0;i<s.size();i++){\n        if(isalpha(s[i])){\n\
    \            res+=toupper(s[i]);\n        }\n        else{\n            res+=s[i];\n\
    \        }\n    }\n    return res;", "    std::string ans = s;\n    for(int i\
    \ = 0; i < s.length(); i++) {\n        if(isalpha(s[i])) {\n            ans =\
    \ ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.length());\n\
    \        }\n    }\n    return ans;", "    std::string ans = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++) {\n        if(isalpha(s[i])) {\n            ans\
    \ += toupper(s[i]);\n        } else {\n            ans += s[i];\n        }\n \
    \   }\n    return ans;", "    std::string ans = s;\n    for (int i = 0; i < s.size();\
    \ i++) {\n        if (isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.size());\n        }\n    }\n    return ans;", " \
    \   std::string ans = s;\n    for(int i = 0; i < s.length(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans = ans.replace(i + 1, i + 1, toupper(s[i]));\n        }\n\
    \    }\n    return ans;", "    std::string ans = s;\n    for(int i = 0; i < s.length();\
    \ i++) {\n        if(isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.length());\n        }\n    }\n    return ans;",
  "    std::string ans = s;\n    for (int i = 0; i < s.length(); i++) {\n        if\
    \ (isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.length());\n        }\n    }\n    return ans;",
  "    std::string ans = s;\n    for(int i = 0; i < s.length(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.length());\n        }\n    }\n    return ans;", "    std::string ans\
    \ = s;\n    for(int i = 0; i < ans.size(); i++) {\n        if(isalpha(ans[i]))\
    \ {\n            ans[i] = toupper(ans[i]);\n        }\n    }\n    return ans;",
  "    std::string ans = s;\n    for (int i = 0; i < s.length(); i++) {\n        if\
    \ (isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.length());\n        }\n    }\n    return ans;",
  "    std::string ans = \"\";\n    for(int i = 0; i < s.length(); i++) {\n      \
    \  if(isalpha(s[i])) {\n            ans += toupper(s[i]);\n        } else {\n\
    \            ans += s[i];\n        }\n    }\n    return ans;", "    std::string\
    \ ans = s;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.size());\n        }\n    }\n    return ans;", "    std::string ans\
    \ = s;\n    for(int i = 0; i < ans.size(); i++) {\n        if(isalpha(ans[i]))\
    \ {\n            ans[i] = toupper(ans[i]);\n        } else {\n            ans[i]\
    \ = tolower(ans[i]);\n        }\n    }\n    return ans;", "    std::string ans\
    \ = s;\n    for(int i = 0; i < s.length(); i++) {\n        if(isalpha(s[i])) {\n\
    \            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.length());\n        }\n    }\n    return ans;", "    std::string res;\n\
    \    for(int i=0;i<s.size();i++){\n        if(isalpha(s[i])){\n            res+=toupper(s[i]);\n\
    \        }\n        else{\n            res+=s[i];\n        }\n    }\n    return\
    \ res;", "    std::string ans = s;\n    for(int i = 0; i < ans.size(); i++) {\n\
    \        if(isalpha(ans[i])) {\n            ans[i] = toupper(ans[i]);\n      \
    \  } else {\n            ans[i] = tolower(ans[i]);\n        }\n    }\n    return\
    \ ans;", "    std::string ans = s;\n    for(int i = 0; i < ans.size(); i++) {\n\
    \        if(isalpha(ans[i])) {\n            ans[i] = toupper(ans[i]);\n      \
    \  }\n    }\n    return ans;", "    std::string ans = s;\n    for(int i = 0; i\
    \ < s.length(); i++) {\n        if(isalpha(s[i])) {\n            ans = ans.replace(i,\
    \ \"A\" + toupper(s[i]));\n            ans = ans.replace(i, \"a\" + tolower(s[i]));\n\
    \        } else {\n            ans = ans.replace(i, \"a\" + tolower(s[i]));\n\
    \            ans = ans.replace(i, \"A\" + toupper(s[i]));\n        }\n    }\n\
    \    return ans;", "    std::string res;\n    for(int i=0;i<s.size();i++){\n \
    \       if(s[i]>=65 && s[i]<=90){\n            res+=toupper(s[i]);\n        }\n\
    \        else if(s[i]>=97 && s[i]<=122){\n            res+=tolower(s[i]);\n  \
    \      }\n        else{\n            res+=s[i];\n        }\n    }\n    return\
    \ res;", "    std::string ans = s;\n    for(int i = 0; i < s.size(); i++) {\n\
    \        if(isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.size());\n        }\n    }\n    return ans;", " \
    \   std::string ans = s;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.size());\n        }\n    }\n    return ans;", "    std::string ans\
    \ = s;\n    for(int i = 0; i < s.length(); i++) {\n        if(isalpha(s[i])) {\n\
    \            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.length());\n        }\n    }\n    return ans;", "    std::string ans\
    \ = s;\n    for(int i = 0; i < s.length(); i++) {\n        if(isalpha(s[i])) {\n\
    \            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.length());\n        }\n    }\n    return ans;", "    std::string ans\
    \ = s;\n    for(int i = 0; i < s.length(); i++) {\n        if(isalpha(s[i])) {\n\
    \            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.length());\n        }\n    }\n    return ans;", "    std::string ans\
    \ = s;\n    for(int i = 0; i < s.length(); i++) {\n        if(isalpha(s[i])) {\n\
    \            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.length());\n        }\n    }\n    return ans;", "    std::string ans\
    \ = s;\n    for(int i = 0; i < s.length(); i++) {\n        if(isalpha(s[i])) {\n\
    \            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.length());\n        }\n    }\n    return ans;", "    std::string ans\
    \ = \"\";\n    for (auto &i : s) {\n        if (std::isalpha(i)) {\n         \
    \   ans += std::toupper(i);\n        } else {\n            ans += i;\n       \
    \ }\n    }\n    return ans;", "    std::string ans = s;\n    for(int i = 0; i\
    \ < s.size(); i++) {\n        if(isalpha(s[i])) {\n            ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n        }\n\
    \    }\n    return ans;", "    std::string res;\n    for(int i=0;i<s.size();i++){\n\
    \        if(isalpha(s[i])){\n            char c = toupper(s[i]);\n           \
    \ s[i] = c;\n            char d = tolower(s[i]);\n            s[i] = d;\n    \
    \    }\n    }\n    res.swap(s);\n    return res;", "    std::string ans = s;\n\
    \    for(int i = 0; i < s.length(); i++) {\n        if(isalpha(s[i])) {\n    \
    \        ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1,\
    \ ans.length());\n        }\n    }\n    return ans;", "    std::string ans = s;\n\
    \    for (int i = 0; i < s.length(); i++) {\n        if (isalpha(s[i])) {\n  \
    \          ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i +\
    \ 1, ans.length());\n        }\n    }\n    return ans;", "    std::string ans\
    \ = s;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == 'a' ||\
    \ s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n            ans\
    \ = ans.substr(0, i) + ans.substr(i + 1, ans.length() - i - 1);\n        }\n \
    \   }\n    return ans;", "    std::string ans = s;\n    for(int i = 0; i < ans.size();\
    \ i++) {\n        if(isalpha(ans[i])) {\n            ans[i] = toupper(ans[i]);\n\
    \        } else {\n            ans[i] = tolower(ans[i]);\n        }\n    }\n \
    \   return ans;", "    std::string ans = s;\n    for (int i = 0; i < s.length();\
    \ i++) {\n        if (isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.length() - i - 1);\n        }\n    }\n    return\
    \ ans;", "    std::string ans = s;\n    for(int i = 0; i < ans.size(); i++) {\n\
    \        if(isalpha(ans[i])) {\n            ans[i] = toupper(ans[i]);\n      \
    \  }\n    }\n    return ans;", "    std::string ans = s;\n    for(int i = 0; i\
    \ < ans.size(); i++) {\n        if(isalpha(ans[i])) {\n            ans[i] = toupper(ans[i]);\n\
    \        }\n    }\n    return ans;", "    std::string ans = s;\n    for(int i\
    \ = 0; i < s.length(); i++) {\n        if(isalpha(s[i])) {\n            ans =\
    \ ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.length());\n\
    \        }\n    }\n    return ans;", "    std::string ans = s;\n    for (int i\
    \ = 0; i < s.length(); i++) {\n        if (isalpha(s[i])) {\n            ans =\
    \ ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.length());\n\
    \        }\n    }\n    return ans;", "    std::string ans = \"\";\n    for (int\
    \ i = 0; i < s.length(); i++) {\n        if (s[i] >= 'a' && s[i] <= 'z') {\n \
    \           ans += s[i];\n        } else if (s[i] >= 'A' && s[i] <= 'Z') {\n \
    \           ans += s[i];\n        } else {\n            ans += std::toupper(s[i]);\n\
    \        }\n    }\n    return ans;", "    std::string ans = s;\n    for(int i\
    \ = 0; i < s.size(); i++) {\n        if(isalpha(s[i])) {\n            ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n        }\n\
    \    }\n    return ans;", "    std::string ans = s;\n    for(int i = 0; i < s.length();\
    \ i++) {\n        if(isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.length());\n        }\n    }\n    return ans;",
  "    std::string ans = s;\n    for(int i = 0; i < s.length(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.length());\n        }\n    }\n    return ans;", "    std::string res;\n\
    \    for(int i=0;i<s.size();i++){\n        if(s[i]>=65 && s[i]<=90){\n       \
    \     res+=toupper(s[i]);\n        }\n        else if(s[i]>=97 && s[i]<=122){\n\
    \            res+=tolower(s[i]);\n        }\n        else{\n            res+=s[i];\n\
    \        }\n    }\n    return res;", "    std::string ans = s;\n    for (int i\
    \ = 0; i < s.length(); i++) {\n        if (isalpha(s[i])) {\n            ans =\
    \ ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.length());\n\
    \        }\n    }\n    return ans;", "    std::string ans = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++) {\n        if(isalpha(s[i])) {\n            ans\
    \ += toupper(s[i]);\n        } else {\n            ans += s[i];\n        }\n \
    \   }\n    return ans;", "    std::string ans = s;\n    for(int i = 0; i < s.size();\
    \ i++) {\n        if(isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.size());\n        }\n    }\n    return ans;", " \
    \   std::string ans = \"\";\n    for(int i = 0; i < s.size(); i++) {\n       \
    \ if(isalpha(s[i])) {\n            ans += toupper(s[i]);\n        } else {\n \
    \           ans += s[i];\n        }\n    }\n    return ans;", "    std::string\
    \ ans = s;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.size());\n        }\n    }\n    return ans;", "    std::string ans\
    \ = s;\n    for (auto &c: s) {\n        if (isalpha(c)) {\n            ans = ans.replace(c,\
    \ toupper(c));\n        } else {\n            ans = ans.replace(c, tolower(c));\n\
    \        }\n    }\n    return ans;", "    std::string ans = s;\n    for(int i\
    \ = 0; i < s.length(); i++) {\n        if(isalpha(s[i])) {\n            ans =\
    \ ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.length());\n\
    \        }\n    }\n    return ans;", "    std::string ans = s;\n    for (auto\
    \ &c : s) {\n        if (isalpha(c)) {\n            ans = ans.replace(c, toupper(c));\n\
    \        } else {\n            ans = ans.replace(c, tolower(c));\n        }\n\
    \    }\n    return ans;", "    std::string res;\n    for(int i=0;i<s.size();i++){\n\
    \        if(s[i]>=65 && s[i]<=90){\n            res+=toupper(s[i]);\n        }\n\
    \        else if(s[i]>=97 && s[i]<=122){\n            res+=tolower(s[i]);\n  \
    \      }\n        else{\n            res+=s[i];\n        }\n    }\n    return\
    \ res;", "    std::string ans = s;\n    for(int i = 0; i < s.length(); i++) {\n\
    \        if(isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.length());\n        }\n    }\n    return ans;",
  "    std::string ans = s;\n    for (int i = 0; i < s.size(); i++) {\n        if\
    \ (isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.size());\n        }\n    }\n    return ans;", " \
    \   std::string ans = \"\";\n    for(int i = 0; i < s.size(); i++) {\n       \
    \ if(isalpha(s[i])) {\n            ans += toupper(s[i]);\n        } else {\n \
    \           ans += s[i];\n        }\n    }\n    return ans;", "    std::string\
    \ ans = s;\n    for(int i = 0; i < s.length(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.length());\n        }\n    }\n    return ans;", "    std::string ans\
    \ = s;\n    for(int i = 0; i < s.length(); i++) {\n        if(isalpha(s[i])) {\n\
    \            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.length());\n        }\n    }\n    return ans;", "    std::string ans\
    \ = s;\n    for (int i = 0; i < s.size(); i++) {\n        if (isalpha(s[i])) {\n\
    \            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.size());\n        }\n    }\n    return ans;", "    std::string ans\
    \ = \"\";\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans += toupper(s[i]);\n        } else {\n            ans += s[i];\n\
    \        }\n    }\n    return ans;", "    std::string res;\n    for(int i=0;i<s.size();i++){\n\
    \        if(s[i]>=65 && s[i]<=90){\n            res+=toupper(s[i]);\n        }\n\
    \        else if(s[i]>=97 && s[i]<=122){\n            res+=tolower(s[i]);\n  \
    \      }\n        else{\n            res+=s[i];\n        }\n    }\n    return\
    \ res;", "    std::string ans = s;\n    for (int i = 0; i < s.length(); i++) {\n\
    \        if (isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.length());\n        }\n    }\n    return ans;",
  "    std::string ans = s;\n    for(int i = 0; i < s.length(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.length());\n        }\n    }\n    return ans;", "    std::string ans\
    \ = s;\n    for (int i = 0; i < s.length(); i++) {\n        if (isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.length());\n        }\n    }\n    return ans;", "    std::string ans\
    \ = s;\n    for (int i = 0; i < s.length(); i++) {\n        if (isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.length());\n        }\n    }\n    return ans;", "    std::string ans\
    \ = s;\n    for(int i = 0; i < s.length(); i++) {\n        if(isalpha(s[i])) {\n\
    \            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.length());\n        }\n    }\n    return ans;", "    std::string ans\
    \ = s;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i])) {\n\
    \            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.size());\n        }\n    }\n    return ans;", "    std::string ans\
    \ = s;\n    for (int i = 0; i < s.size(); i++) {\n        if (isalpha(s[i])) {\n\
    \            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.size());\n        }\n    }\n    return ans;", "    std::string ans\
    \ = s;\n    for(int i = 0; i < s.length(); i++) {\n        if(isalpha(s[i])) {\n\
    \            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.length());\n        }\n    }\n    return ans;", "    std::string ans\
    \ = s;\n    for (size_t i = 0; i < s.size(); i++) {\n        if (isalpha(s[i]))\
    \ {\n            ans[i] = toupper(s[i]);\n        }\n    }\n    return ans;",
  "    std::string ans = s;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.size());\n        }\n    }\n    return ans;", "    std::string ans\
    \ = s;\n    for(int i = 0; i < ans.size(); i++) {\n        if(isalpha(ans[i]))\
    \ {\n            ans[i] = toupper(ans[i]);\n        }\n    }\n    return ans;",
  "    std::string ans = s;\n    for (auto &c: ans) {\n        if (std::isalpha(c))\
    \ {\n            std::swap(toupper(c), tolower(c));\n        }\n    }\n    return\
    \ ans;", "    std::string ans = s;\n    for(int i = 0; i < ans.size(); i++) {\n\
    \        if(isalpha(ans[i])) {\n            ans[i] = toupper(ans[i]);\n      \
    \  }\n    }\n    return ans;", "    std::string res;\n    for(int i=0;i<s.size();i++){\n\
    \        if(isalpha(s[i])){\n            res+=toupper(s[i]);\n        }\n    \
    \    else{\n            res+=s[i];\n        }\n    }\n    return res;", "    std::string\
    \ res;\n    int n = s.size();\n    for(int i = 0; i < n; i++) {\n        if(isalpha(s[i]))\
    \ {\n            if(i == 0) {\n                res = s.substr(0, i) + std::toupper(s.substr(i,\
    \ n)) + s.substr(i + 1, n);\n            } else {\n                res = s.substr(0,\
    \ i) + std::tolower(s.substr(i, n)) + s.substr(i + 1, n);\n            }\n   \
    \     } else {\n            res = s.substr(0, i) + s.substr(i + 1, n);\n     \
    \   }\n    }\n    return res;", "    std::string ans = s;\n    for(int i=0;i<s.size();i++){\n\
    \        if(s[i]>='A' && s[i]<='Z'){\n            ans = ans + s[i];\n        }\n\
    \        else if(s[i]>='a' && s[i]<='z'){\n            ans = ans + s[i];\n   \
    \     }\n        else{\n            ans = ans + std::toupper(s[i]);\n        }\n\
    \    }\n    return ans;", "    std::string ans = s;\n    for(int i = 0; i < s.size();\
    \ i++) {\n        if(isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.size());\n        }\n    }\n    return ans;", " \
    \   std::string ans = s;\n    for(int i = 0; i < ans.size(); i++) {\n        if(isalpha(ans[i]))\
    \ {\n            ans[i] = toupper(ans[i]);\n        }\n    }\n    return ans;",
  "    std::string ans = s;\n    for(int i = 0; i < ans.size(); i++) {\n        if(isalpha(ans[i]))\
    \ {\n            ans[i] = toupper(ans[i]);\n        } else {\n            ans[i]\
    \ = tolower(ans[i]);\n        }\n    }\n    return ans;", "    std::string ans\
    \ = s;\n    for(int i = 0; i < ans.size(); i++) {\n        if(isalpha(ans[i]))\
    \ {\n            ans[i] = toupper(ans[i]);\n        }\n    }\n    return ans;",
  "    std::string res;\n    for(int i=0;i<s.size();i++){\n        if(isalpha(s[i])){\n\
    \            res+=toupper(s[i]);\n        }\n        else{\n            res+=s[i];\n\
    \        }\n    }\n    return res;", "    std::string res;\n    for(int i=0;i<s.size();i++){\n\
    \        if(isalpha(s[i])){\n            char c = toupper(s[i]);\n           \
    \ s[i] = c;\n            s[i] = tolower(c);\n        }\n    }\n    res.assign(s);\n\
    \    return res;", "    std::string ans = s;\n    for (int i = 0; i < s.size();\
    \ i++) {\n        if (isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.size());\n        }\n    }\n    return ans;", " \
    \   std::string res;\n    for(int i=0;i<s.length();i++){\n        if(isalpha(s[i])){\n\
    \            res+=toupper(s[i]);\n        }\n        else{\n            res+=s[i];\n\
    \        }\n    }\n    return res;", "    std::string res;\n    int len = s.length();\n\
    \    for(int i = 0; i < len; i++){\n        if(isalpha(s[i])){\n            char\
    \ c = s[i];\n            s[i] = toupper(c);\n            s[i] = tolower(c);\n\
    \        }\n    }\n    return res;", "    std::string ans = s;\n    for(int i\
    \ = 0; i < s.length(); i++) {\n        if(isalpha(s[i])) {\n            ans =\
    \ ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.length());\n\
    \        }\n    }\n    return ans;", "    std::string ans = s;\n    for(int i\
    \ = 0; i < s.length(); i++) {\n        if(isalpha(s[i])) {\n            ans =\
    \ ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.length());\n\
    \        }\n    }\n    return ans;", "    std::string ans = s;\n    for(int i\
    \ = 0; i < s.length(); i++) {\n        if(isalpha(s[i])) {\n            ans =\
    \ ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.length());\n\
    \        }\n    }\n    return ans;", "    std::string ans = s;\n    for(int i\
    \ = 0; i < s.length(); i++) {\n        if(isalpha(s[i])) {\n            ans =\
    \ ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.length());\n\
    \        }\n    }\n    return ans;", "    std::string ans = s;\n    for (size_t\
    \ i = 0; i < s.size(); i++) {\n        if (s[i] == 'a' || s[i] == 'A') {\n   \
    \         ans = ans.substr(0, i) + ans.substr(i + 1, ans.size() - i - 1);\n  \
    \      }\n    }\n    return ans;", "    std::string ans = s;\n    for (int i =\
    \ 0; i < ans.size(); i++) {\n        if (ans[i] == 'a' || ans[i] == 'A') {\n \
    \           ans[i] = 'A';\n        } else if (ans[i] == 'b' || ans[i] == 'B')\
    \ {\n            ans[i] = 'B';\n        } else if (ans[i] == 'c' || ans[i] ==\
    \ 'C') {\n            ans[i] = 'C';\n        } else if (ans[i] == 'd' || ans[i]\
    \ == 'D') {\n            ans[i] = 'D';\n        } else if (ans[i] == 'e' || ans[i]\
    \ == 'E') {\n            ans[i] = 'E';\n        } else if (ans[i] == 'f' || ans[i]\
    \ == 'F') {\n            ans[i] = 'F';\n        } else if (ans[i] == 'g' || ans[i]\
    \ == 'G') {\n            ans[i] = 'G';\n        } else if (ans[i] == 'h' || ans[i]\
    \ == 'H') {\n            ans[i] = 'H';\n        } else if (ans[i] == 'i' || ans[i]\
    \ == 'I') {\n            ans[i] = 'I';\n        } else if (ans[i] == 'j' || ans[i]\
    \ == 'J') {\n            ans[i] = 'J';\n        } else if (ans[i] == 'k' || ans[i]\
    \ == 'K') {\n            ans[i] = 'K';\n        } else if (ans[i] == 'l' || ans[i]\
    \ == 'L') {\n            ans[i] = 'L';\n        } else if (ans[i] == 'm' || ans[i]\
    \ == 'M') {\n            ans[i] = 'M';\n        } else if (ans[i] == 'n' || ans[i]\
    \ == 'N') {\n            ans[i] = 'N';\n        } else if (ans[i] == 'o' || ans[i]\
    \ == 'O') {\n            ans[i] = 'O';\n        } else if (ans[i] == 'p' || ans[i]\
    \ == 'P') {\n            ans[i] = 'P';\n        } else if (ans[i] == 'q' || ans[i]\
    \ == 'Q') {\n            ans[i] = 'Q';\n        } else if (ans[i] == 'r' || ans[i]\
    \ == 'R') {\n            ans[i] = 'R';\n        } else if (ans[i] == 's' || ans[i]\
    \ == 'S') {\n            ans[i] = 'S';\n        } else if (ans[i] == 't' || ans[i]\
    \ == 'T') {\n            ans[i] = 'T';\n        } else if (ans[i] == 'u' || ans[i]\
    \ == 'U') {\n            ans[i] = 'U';\n        } else if (ans[i] == 'v' || ans[i]\
    \ == 'V') {\n            ans[i] = 'V';\n        } else if (ans[i] == 'w' || ans[i]\
    \ == 'W') {\n            ans[i] = 'W';\n        } else if (ans[i] == 'x' || ans[i]\
    \ == 'X') {\n            ans[i] = 'X';\n        } else if (ans[i] == 'y' || ans[i]\
    \ == 'Y') {\n            ans[i] = 'Y';\n        } else if (ans[i] == 'z' || ans[i]\
    \ == 'Z') {\n            ans[i] = 'Z';\n        }\n    }\n    return an", "  \
    \  std::string ans = s;\n    for(int i = 0; i < ans.size(); i++) {\n        if(isalpha(ans[i]))\
    \ {\n            ans[i] = toupper(ans[i]);\n        }\n    }\n    return ans;",
  "    std::string res;\n    for(int i=0;i<s.size();i++){\n        if(s[i]>=65 &&\
    \ s[i]<=90){\n            s[i]-=32;\n        }\n        else if(s[i]>=97 && s[i]<=122){\n\
    \            s[i]-=32;\n        }\n        else{\n            s[i]=s[i];\n   \
    \     }\n    }\n    return res;", "    std::string ans = s;\n    for(int i = 0;\
    \ i < s.length(); i++) {\n        if(isalpha(s[i])) {\n            ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.length());\n        }\n\
    \    }\n    return ans;", "    std::string ans = s;\n    for(int i = 0; i < s.length();\
    \ i++) {\n        if(isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.length());\n        }\n    }\n    return ans;",
  "    std::string res;\n    for(int i=0;i<s.size();i++){\n        if(isalpha(s[i])){\n\
    \            res+=toupper(s[i]);\n        }\n        else{\n            res+=s[i];\n\
    \        }\n    }\n    return res;", "    std::string ans = s;\n    for(int i\
    \ = 0; i < ans.size(); i++) {\n        if(isalpha(ans[i])) {\n            ans[i]\
    \ = toupper(ans[i]);\n        }\n    }\n    return ans;", "    std::string ans\
    \ = s;\n    for(int i = 0; i < s.length(); i++) {\n        if(isalpha(s[i])) {\n\
    \            ans = ans.replace(i + 1, i + 1, toupper(s[i]));\n        } else {\n\
    \            ans = ans.replace(i + 1, i + 1, s[i]);\n        }\n    }\n    return\
    \ ans;", "    std::string ans = s;\n    for(int i = 0; i < ans.size(); i++) {\n\
    \        if(isalpha(ans[i])) {\n            ans[i] = toupper(ans[i]);\n      \
    \  }\n    }\n    return ans;", "    std::string ans = s;\n    for(int i = 0; i\
    \ < s.length(); i++) {\n        if(isalpha(s[i])) {\n            ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.length());\n        }\n\
    \    }\n    return ans;", "    std::string ans = s;\n    for (int i = 0; i < s.length();\
    \ i++) {\n        if (isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.length());\n        }\n    }\n    return ans;",
  "    std::string ans = s;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.size());\n        }\n    }\n    return ans;", "    std::string ans\
    \ = s;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i])) {\n\
    \            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.size());\n        }\n    }\n    return ans;", "    std::string ans\
    \ = s;\n    for (size_t i = 0; i < s.size(); i++) {\n        if (s[i] == 'a' ||\
    \ s[i] == 'A') {\n            ans = ans.substr(0, i) + ans.substr(i + 1, ans.size()\
    \ - i - 1);\n        }\n    }\n    return ans;", "    std::string ans = s;\n \
    \   for(int i = 0; i < s.length(); i++) {\n        if(isalpha(s[i])) {\n     \
    \       ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1,\
    \ ans.length());\n        }\n    }\n    return ans;", "    std::string ans = s;\n\
    \    for(int i = 0; i < ans.size(); i++) {\n        if(isalpha(ans[i])) {\n  \
    \          ans[i] = toupper(ans[i]);\n        }\n    }\n    return ans;", "  \
    \  std::string ans = s;\n    for (int i = 0; i < s.length(); i++) {\n        if\
    \ (isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.length());\n        }\n    }\n    return ans;",
  "    std::string ans = \"\";\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans += toupper(s[i]);\n        } else {\n            ans += s[i];\n\
    \        }\n    }\n    return ans;", "    std::string ans = s;\n    for(int i\
    \ = 0; i < s.length(); i++) {\n        if(isalpha(s[i])) {\n            ans =\
    \ ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.length());\n\
    \        }\n    }\n    return ans;", "    std::string ans = s;\n    for(int i\
    \ = 0; i < s.length(); i++) {\n        if(isalpha(s[i])) {\n            ans =\
    \ ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.length());\n\
    \        }\n    }\n    return ans;", "    std::string ans = s;\n    for(int i\
    \ = 0; i < s.length(); i++) {\n        if(isalpha(s[i])) {\n            ans =\
    \ ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.length());\n\
    \        }\n    }\n    return ans;", "    std::string ans = s;\n    for(int i\
    \ = 0; i < s.length(); i++) {\n        if(isalpha(s[i])) {\n            ans =\
    \ ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.length());\n\
    \        }\n    }\n    return ans;", "    std::string ans = s;\n    for (int i\
    \ = 0; i < ans.size(); i++) {\n        if (ans[i] == 'a' || ans[i] == 'A') {\n\
    \            ans[i] = 'A';\n        } else if (ans[i] == 'b' || ans[i] == 'B')\
    \ {\n            ans[i] = 'B';\n        } else if (ans[i] == 'c' || ans[i] ==\
    \ 'C') {\n            ans[i] = 'C';\n        } else if (ans[i] == 'd' || ans[i]\
    \ == 'D') {\n            ans[i] = 'D';\n        } else if (ans[i] == 'e' || ans[i]\
    \ == 'E') {\n            ans[i] = 'E';\n        } else if (ans[i] == 'f' || ans[i]\
    \ == 'F') {\n            ans[i] = 'F';\n        } else if (ans[i] == 'g' || ans[i]\
    \ == 'G') {\n            ans[i] = 'G';\n        } else if (ans[i] == 'h' || ans[i]\
    \ == 'H') {\n            ans[i] = 'H';\n        } else if (ans[i] == 'i' || ans[i]\
    \ == 'I') {\n            ans[i] = 'I';\n        } else if (ans[i] == 'j' || ans[i]\
    \ == 'J') {\n            ans[i] = 'J';\n        } else if (ans[i] == 'k' || ans[i]\
    \ == 'K') {\n            ans[i] = 'K';\n        } else if (ans[i] == 'l' || ans[i]\
    \ == 'L') {\n            ans[i] = 'L';\n        } else if (ans[i] == 'm' || ans[i]\
    \ == 'M') {\n            ans[i] = 'M';\n        } else if (ans[i] == 'n' || ans[i]\
    \ == 'N') {\n            ans[i] = 'N';\n        } else if (ans[i] == 'o' || ans[i]\
    \ == 'O') {\n            ans[i] = 'O';\n        } else if (ans[i] == 'p' || ans[i]\
    \ == 'P') {\n            ans[i] = 'P';\n        } else if (ans[i] == 'q' || ans[i]\
    \ == 'Q') {\n            ans[i] = 'Q';\n        } else if (ans[i] == 'r' || ans[i]\
    \ == 'R') {\n            ans[i] = 'R';\n        } else if (ans[i] == 's' || ans[i]\
    \ == 'S') {\n            ans[i] = 'S';\n        } else if (ans[i] == 't' || ans[i]\
    \ == 'T') {\n            ans[i] = 'T';\n        } else if (ans[i] == 'u' || ans[i]\
    \ == 'U') {\n            ans[i] = 'U';\n        } else if (ans[i] == 'v' || ans[i]\
    \ == 'V') {\n            ans[i] = 'V';\n        } else if (ans[i] == 'w' || ans[i]\
    \ == 'W') {\n            ans[i] = 'W';\n        } else if (ans[i] == 'x' || ans[i]\
    \ == 'X') {\n            ans[i] = 'X';\n        } else if (ans[i] == 'y' || ans[i]\
    \ == 'Y') {\n            ans[i] = 'Y';\n        } else if (ans[i] == 'z' || ans[i]\
    \ == 'Z') {\n            ans[i] = 'Z';\n        }\n    }\n    return an", "  \
    \  std::string res;\n    for(int i=0;i<s.size();i++){\n        if(s[i]>=65 &&\
    \ s[i]<=90){\n            res+=char(s[i]-32);\n        }\n        else if(s[i]>=97\
    \ && s[i]<=122){\n            res+=char(s[i]-32);\n        }\n        else{\n\
    \            res+=s[i];\n        }\n    }\n    return res;", "    std::string\
    \ ans = s;\n    for(int i = 0; i < s.length(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.length());\n        }\n    }\n    return ans;", "    std::string ans\
    \ = s;\n    for(int i = 0; i < s.length(); i++) {\n        if(isalpha(s[i])) {\n\
    \            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.length());\n        }\n    }\n    return ans;", "    std::string ans\
    \ = s;\n    for(int i = 0; i < s.length(); i++) {\n        if(isalpha(s[i])) {\n\
    \            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.length());\n        }\n    }\n    return ans;", "    std::string ans\
    \ = s;\n    for(int i=0;i<s.size();i++) {\n        if(s[i]>='a' && s[i]<='z')\
    \ {\n            ans = ans + std::toupper(s[i]);\n        }\n        else if(s[i]>='A'\
    \ && s[i]<='Z') {\n            ans = ans + std::tolower(s[i]);\n        }\n  \
    \      else {\n            ans = ans + s[i];\n        }\n    }\n    return ans;",
  "    std::string ans = s;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.size());\n        }\n    }\n    return ans;", "    std::string ans\
    \ = s;\n    for(int i = 0; i < s.length(); i++) {\n        if(isalpha(s[i])) {\n\
    \            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.length());\n        }\n    }\n    return ans;", "    std::string ans\
    \ = s;\n    for(int i = 0; i < s.length(); i++) {\n        if(isalpha(s[i])) {\n\
    \            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.length());\n        }\n    }\n    return ans;", "    std::string ans\
    \ = s;\n    for (auto &c: ans) {\n        if (isalpha(c)) {\n            int i\
    \ = toupper(c);\n            ans[i] = tolower(c);\n        }\n    }\n    return\
    \ ans;", "    std::string ans = s;\n    for (int i = 0; i < s.size(); i++) {\n\
    \        if (isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.size());\n        }\n    }\n    return ans;", " \
    \   std::string ans = s;\n    for(int i = 0; i < ans.size(); i++) {\n        if(isalpha(ans[i]))\
    \ {\n            ans[i] = toupper(ans[i]);\n        }\n    }\n    return ans;",
  "    std::string ans = s;\n    for(int i = 0; i < s.length(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.length());\n        }\n    }\n    return ans;", "    std::string ans\
    \ = s;\n    for (int i = 0; i < ans.size(); i++) {\n        if (isalpha(ans[i]))\
    \ {\n            ans[i] = toupper(ans[i]);\n        }\n    }\n    return ans;",
  "    std::string ans = s;\n    for(int i = 0; i < s.length(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.length());\n        }\n    }\n    return ans;", "    std::string ans\
    \ = s;\n    for(int i = 0; i < s.length(); i++) {\n        if(isalpha(s[i])) {\n\
    \            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.length());\n        }\n    }\n    return ans;", "    std::string ans\
    \ = s;\n    for(int i = 0; i < s.length(); i++) {\n        if(isalpha(s[i])) {\n\
    \            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.length());\n        }\n    }\n    return ans;", "    std::string res;\n\
    \    for(int i=0;i<s.size();i++){\n        if(s[i]>='a' && s[i]<='z'){\n     \
    \       res+=toupper(s[i]);\n        }\n        else if(s[i]>='A' && s[i]<='Z'){\n\
    \            res+=tolower(s[i]);\n        }\n        else{\n            res+=s[i];\n\
    \        }\n    }\n    return res;", "    std::string ans = s;\n    for(int i\
    \ = 0; i < s.length(); i++) {\n        if(isalpha(s[i])) {\n            ans =\
    \ ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.length());\n\
    \        }\n    }\n    return ans;", "    std::string ans = s;\n    for (auto\
    \ &c: ans) {\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c ==\
    \ 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n       \
    \     ans[ans.find(c)] = toupper(c);\n        }\n    }\n    return ans;", "  \
    \  std::string ans = s;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.size());\n        }\n    }\n    return ans;", "    std::string ans\
    \ = s;\n    for(int i = 0; i < ans.size(); i++) {\n        if(isalpha(ans[i]))\
    \ {\n            ans[i] = toupper(ans[i]);\n        }\n    }\n    return ans;",
  "    std::string res;\n    for(int i=0;i<s.size();i++){\n        if(isalpha(s[i])){\n\
    \            res+=toupper(s[i]);\n        }\n        else{\n            res+=s[i];\n\
    \        }\n    }\n    return res;", "    std::string ans = s;\n    for(int i\
    \ = 0; i < ans.size(); i++) {\n        if(isalpha(ans[i])) {\n            ans[i]\
    \ = toupper(ans[i]);\n        }\n    }\n    return ans;", "    std::string ans\
    \ = s;\n    for(int i = 0; i < s.length(); i++) {\n        if(isalpha(s[i])) {\n\
    \            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.length());\n        }\n    }\n    return ans;", "    std::string ans\
    \ = s;\n    for(int i = 0; i < s.length(); i++) {\n        if(isalpha(s[i])) {\n\
    \            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.length());\n        }\n    }\n    return ans;", "    std::string ans\
    \ = \"\";\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans += toupper(s[i]);\n        } else {\n            ans += s[i];\n\
    \        }\n    }\n    return ans;", "    std::string res;\n    for(int i=0;i<s.size();i++){\n\
    \        if(s[i]>=65&&s[i]<=90){\n            res+=toupper(s[i]);\n        }\n\
    \        else if(s[i]>=97&&s[i]<=122){\n            res+=tolower(s[i]);\n    \
    \    }\n        else{\n            res+=s[i];\n        }\n    }\n    return res;",
  "    std::string ans = s;\n    for (int i = 0; i < s.length(); i++) {\n        if\
    \ (isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.length());\n        }\n    }\n    return ans;",
  "    std::string ans = s;\n    for(int i = 0; i < s.length(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.length());\n        }\n    }\n    return ans;", "    std::string res;\n\
    \    for(int i=0;i<s.size();i++){\n        if(s[i]>='a' && s[i]<='z'){\n     \
    \       res+=toupper(s[i]);\n        }\n        else if(s[i]>='A' && s[i]<='Z'){\n\
    \            res+=tolower(s[i]);\n        }\n        else{\n            res+=s[i];\n\
    \        }\n    }\n    return res;", "    std::string ans = \"\";\n    for(int\
    \ i = 0; i < s.size(); i++) {\n        if(isalpha(s[i])) {\n            ans +=\
    \ toupper(s[i]);\n        } else {\n            ans += s[i];\n        }\n    }\n\
    \    return ans;", "    std::string ans = s;\n    for(int i = 0; i < s.size();\
    \ i++) {\n        if(isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.size());\n        }\n    }\n    return ans;", " \
    \   std::string ans = s;\n    for(int i = 0; i < s.length(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.length());\n        }\n    }\n    return ans;", "    std::string res;\n\
    \    for(int i=0;i<s.size();i++){\n        if(s[i]>='a' && s[i]<='z'){\n     \
    \       res+=toupper(s[i]);\n        }\n        else if(s[i]>='A' && s[i]<='Z'){\n\
    \            res+=tolower(s[i]);\n        }\n        else{\n            res+=s[i];\n\
    \        }\n    }\n    return res;", "    std::string ans = s;\n    for(int i\
    \ = 0; i < s.size(); i++) {\n        if(isalpha(s[i])) {\n            ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n        }\n\
    \    }\n    return ans;", "    std::string ans = s;\n    for(int i = 0; i < s.size();\
    \ i++) {\n        if(isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.size());\n        }\n    }\n    return ans;", " \
    \   std::string ans = s;\n    for (int i = 0; i < s.length(); i++) {\n       \
    \ if (isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.length());\n        }\n    }\n    return ans;",
  "    std::string res;\n    for(int i=0;i<s.size();i++){\n        if(isalpha(s[i])){\n\
    \            res+=toupper(s[i]);\n        }\n        else{\n            res+=s[i];\n\
    \        }\n    }\n    return res;", "    std::string ans = \"\";\n    for(int\
    \ i = 0; i < s.size(); i++) {\n        if(isalpha(s[i])) {\n            ans +=\
    \ toupper(s[i]);\n        } else {\n            ans += s[i];\n        }\n    }\n\
    \    return ans;", "    std::string ans = s;\n    for(int i = 0; i < s.size();\
    \ i++) {\n        if(isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.size());\n        }\n    }\n    return ans;", " \
    \   std::string ans = s;\n    for (auto &c: ans) {\n        if (std::isalpha(c))\
    \ {\n            std::swap(toupper(c), toupper(tolower(c)));\n        }\n    }\n\
    \    return ans;", "    std::string res;\n    for(int i=0;i<s.size();i++){\n \
    \       if(isalpha(s[i])){\n            res+=toupper(s[i]);\n        }\n     \
    \   else{\n            res+=s[i];\n        }\n    }\n    return res;", "    std::string\
    \ ans = s;\n    for(int i = 0; i < s.length(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.length());\n        }\n    }\n    return ans;", "    std::string ans\
    \ = s;\n    for(int i = 0; i < ans.size(); i++) {\n        if(isalpha(ans[i]))\
    \ {\n            ans[i] = toupper(ans[i]);\n        }\n    }\n    return ans;",
  "    std::string ans = s;\n    for(int i = 0; i < ans.size(); i++) {\n        if(isalpha(ans[i]))\
    \ {\n            ans[i] = toupper(ans[i]);\n        }\n    }\n    return ans;",
  "    std::string ans = s;\n    for (int i = 0; i < s.length(); i++) {\n        if\
    \ (isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.length());\n        }\n    }\n    return ans;",
  "    std::string ans = s;\n    for (int i = 0; i < ans.size(); i++) {\n        if\
    \ (ans[i] == 'a' || ans[i] == 'e' || ans[i] == 'i' || ans[i] == 'o' || ans[i]\
    \ == 'u') {\n            ans[i] = 'A';\n        } else if (ans[i] == 'b' || ans[i]\
    \ == 'c' || ans[i] == 'd' || ans[i] == 'f' || ans[i] == 'g' || ans[i] == 'h' ||\
    \ ans[i] == 'j' || ans[i] == 'k' || ans[i] == 'l' || ans[i] == 'm' || ans[i] ==\
    \ 'n' || ans[i] == 'p' || ans[i] == 'q' || ans[i] == 'r' || ans[i] == 's' || ans[i]\
    \ == 't' || ans[i] == 'v' || ans[i] == 'w' || ans[i] == 'x' || ans[i] == 'y' ||\
    \ ans[i] == 'z') {\n            ans[i] = 'B';\n        } else if (ans[i] == 'A'\
    \ || ans[i] == 'B' || ans[i] == 'C' || ans[i] == 'D' || ans[i] == 'E' || ans[i]\
    \ == 'F' || ans[i] == 'G' || ans[i] == 'H' || ans[i] == 'I' || ans[i] == 'J' ||\
    \ ans[i] == 'K' || ans[i] == 'L' || ans[i] == 'M' || ans[i] == 'N' || ans[i] ==\
    \ 'P' || ans[i] == 'Q' || ans[i] == 'R' || ans[i] == 'S' || ans[i] == 'T' || ans[i]\
    \ == 'V' || ans[i] == 'W' || ans[i] == 'X' || ans[i] == 'Y' || ans[i] == 'Z')\
    \ {\n            ans[i] = 'a';\n        } else if (ans[i] == 'B' || ans[i] ==\
    \ 'C' || ans[i] == 'D' || ans[i] == 'E' || ans[i] == 'F' || ans[i] == 'G' || ans[i]\
    \ == 'H' || ans[i] == 'I' || ans[i] == 'J' || ans[i] == 'K' || ans[i] == 'L' ||\
    \ ans[i] == 'M' || ans[i] == 'N' || ans[i] == 'P' || ans[i] == 'Q' || ans[i] ==\
    \ 'R' || ans[i] == 'S' || ans[i] == 'T' || ans[i] == 'V' || ans[i] == 'W' || ans[i]\
    \ == 'X' || ans[i] == 'Y' || ans[i] == 'Z') {\n            ans[i] = 'b';\n   \
    \     } else if (ans[i] == 'C' || ans[i] == 'D' || ans[i] == 'E' || ans[i] ==\
    \ 'F' || ans[i] == 'G' || ans[i] == 'H' || ans[i] == 'I' || ans[i] == 'J' || ans[i]\
    \ == 'K' || ans[i] == 'L' || ans[i] == 'M' || ans[i] == 'N' || ans[i] == 'P' ||\
    \ ans[i] == 'Q' || ans[i] == 'R' || ans[i] == 'S' || ans[i] == 'T' || ans[i] ==\
    \ 'V' || ans[i] == 'W' || ans[i] == '", "    std::string ans = s;\n    for (int\
    \ i = 0; i < s.size(); i++) {\n        if (isalpha(s[i])) {\n            ans =\
    \ ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n\
    \        }\n    }\n    return ans;", "    std::string ans = s;\n    for(int i\
    \ = 0; i < s.size(); i++) {\n        if(isalpha(s[i])) {\n            ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n        }\n\
    \    }\n    return ans;", "    std::string ans = s;\n    for(int i = 0; i < s.length();\
    \ i++) {\n        if(isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.length());\n        }\n    }\n    return ans;",
  "    std::string ans = s;\n    for(int i = 0; i < s.length(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.length());\n        }\n    }\n    return ans;", "    std::string ans\
    \ = s;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i])) {\n\
    \            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.size());\n        }\n    }\n    return ans;", "    std::string ans\
    \ = s;\n    for (int i = 0; i < s.length(); i++) {\n        if (isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.length());\n        }\n    }\n    return ans;", "    std::string ans\
    \ = s;\n    for (int i = 0; i < s.length(); i++) {\n        if (isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.length());\n        }\n    }\n    return ans;", "    std::string ans\
    \ = s;\n    for (int i = 0; i < s.length(); i++) {\n        if (isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.length());\n        }\n    }\n    return ans;", "    std::string ans\
    \ = s;\n    for(int i = 0; i < s.length(); i++) {\n        if(isalpha(s[i])) {\n\
    \            ans = ans.replace(i, 'A' + i - 'a');\n        } else {\n        \
    \    ans = ans.replace(i, 'a' + i - 'A');\n        }\n    }\n    return ans;",
  "    std::string ans = s;\n    for(int i = 0; i < s.length(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.length());\n        }\n    }\n    return ans;"]
stop_tokens:
- "\n}"

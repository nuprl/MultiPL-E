language: cpp
name: HumanEval_15_string_sequence
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_j5stmu4: /tmp/tmp_j5stmu4.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while(i <= n) {\n        s +=\
    \ std::to_string(i);\n        i++;\n    }\n    return s;\n}\nint main() {\n  \
    \  auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp6o8_1h2u: /tmp/tmp6o8_1h2u.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i) + \" \";\n    }\n    return s;\n}\nint main() {\n\
    \    auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpusmwzgds: /tmp/tmpusmwzgds.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp1qihyjut: /tmp/tmp1qihyjut.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i) + \" \";\n    }\n    return s;\n}\nint main() {\n \
    \   auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpi1fewm9z: /tmp/tmpi1fewm9z.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096885
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for(i = 0; i < n; i++) {\n      \
    \  s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpiq59l7ct: /tmp/tmpiq59l7ct.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp1qihyjut: /tmp/tmp1qihyjut.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while(i <= n) {\n        s +=\
    \ std::to_string(i) + \" \";\n        i++;\n    }\n    return s;\n}\nint main()\
    \ {\n    auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"\
    ));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpk6krb7lz: /tmp/tmpk6krb7lz.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp0s0p93y4: /tmp/tmp0s0p93y4.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpmppqcuoh: /tmp/tmpmppqcuoh.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while (i <= n) {\n        s +=\
    \ std::to_string(i);\n        ++i;\n    }\n    return s;\n}\nint main() {\n  \
    \  auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpja8bzuvc: /tmp/tmpja8bzuvc.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while (i <= n) {\n        s +=\
    \ std::to_string(i);\n        ++i;\n    }\n    return s;\n}\nint main() {\n  \
    \  auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpja8bzuvc: /tmp/tmpja8bzuvc.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_j5stmu4: /tmp/tmp_j5stmu4.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while (i <= n) {\n        s +=\
    \ std::to_string(i);\n        ++i;\n    }\n    return s;\n}\nint main() {\n  \
    \  auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpja8bzuvc: /tmp/tmpja8bzuvc.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while (i <= n) {\n        s +=\
    \ std::to_string(i);\n        ++i;\n    }\n    return s;\n}\nint main() {\n  \
    \  auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpja8bzuvc: /tmp/tmpja8bzuvc.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;++i)\n        s+=std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp9npp3_i2: /tmp/tmp9npp3_i2.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp0s0p93y4: /tmp/tmp0s0p93y4.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp1qihyjut: /tmp/tmp1qihyjut.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp1qihyjut: /tmp/tmp1qihyjut.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp1qihyjut: /tmp/tmp1qihyjut.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_j5stmu4: /tmp/tmp_j5stmu4.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpobwkei77: /tmp/tmpobwkei77.cpp:14: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_j5stmu4: /tmp/tmp_j5stmu4.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpobwkei77: /tmp/tmpobwkei77.cpp:14: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;++i)\n        s+=std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp9npp3_i2: /tmp/tmp9npp3_i2.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i) + \" \";\n    }\n    return s;\n}\nint main() {\n \
    \   auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpi1fewm9z: /tmp/tmpi1fewm9z.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096885
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i < n; i++) {\n        s += std::to_string(i)\
    \ + \" \";\n    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpblkrscmb: /tmp/tmpblkrscmb.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpobwkei77: /tmp/tmpobwkei77.cpp:14: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i) + \" \";\n    }\n    return s;\n}\nint main() {\n \
    \   auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpi1fewm9z: /tmp/tmpi1fewm9z.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096885
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i) + \" \";\n    }\n    return s;\n}\nint main() {\n \
    \   auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpi1fewm9z: /tmp/tmpi1fewm9z.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096885
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp1qihyjut: /tmp/tmp1qihyjut.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for(i = 0; i < n; i++) {\n      \
    \  s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpiq59l7ct: /tmp/tmpiq59l7ct.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_j5stmu4: /tmp/tmp_j5stmu4.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp0s0p93y4: /tmp/tmp0s0p93y4.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while (i <= n) {\n        s +=\
    \ std::to_string(i);\n        i++;\n    }\n    return s;\n}\nint main() {\n  \
    \  auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpjlrdi0i0: /tmp/tmpjlrdi0i0.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_j5stmu4: /tmp/tmp_j5stmu4.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while (i <= n) {\n        s +=\
    \ std::to_string(i) + \" \";\n        ++i;\n    }\n    return s;\n}\nint main()\
    \ {\n    auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"\
    ));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpioae_x_e: /tmp/tmpioae_x_e.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpobwkei77: /tmp/tmpobwkei77.cpp:14: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long k = n;\n    while (k != 0) {\n        long\
    \ r = k % 10;\n        k = k / 10;\n        s = std::to_string(r) + s;\n    }\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp8thfmy31: /tmp/tmp8thfmy31.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp1qihyjut: /tmp/tmp1qihyjut.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpobwkei77: /tmp/tmpobwkei77.cpp:14: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp1qihyjut: /tmp/tmp1qihyjut.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpobwkei77: /tmp/tmpobwkei77.cpp:14: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while(i <= n) {\n        s +=\
    \ std::to_string(i);\n        i++;\n    }\n    return s;\n}\nint main() {\n  \
    \  auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp6o8_1h2u: /tmp/tmp6o8_1h2u.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for(i = 0; i < n; i++) {\n      \
    \  s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpiq59l7ct: /tmp/tmpiq59l7ct.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i = 0; i <= n; ++i)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpp45wb74k: /tmp/tmpp45wb74k.cpp:13: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp1qihyjut: /tmp/tmp1qihyjut.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp0s0p93y4: /tmp/tmp0s0p93y4.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i) + \" \";\n    }\n    return s;\n}\nint main() {\n \
    \   auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpi1fewm9z: /tmp/tmpi1fewm9z.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096885
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_j5stmu4: /tmp/tmp_j5stmu4.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp1qihyjut: /tmp/tmp1qihyjut.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i)\
    \ + \" \";\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpj4kwrg1o: /tmp/tmpj4kwrg1o.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;++i)\n        s+=std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp9npp3_i2: /tmp/tmp9npp3_i2.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_j5stmu4: /tmp/tmp_j5stmu4.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp1qihyjut: /tmp/tmp1qihyjut.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp1qihyjut: /tmp/tmp1qihyjut.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while (i <= n) {\n        s +=\
    \ std::to_string(i);\n        ++i;\n    }\n    return s;\n}\nint main() {\n  \
    \  auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpja8bzuvc: /tmp/tmpja8bzuvc.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while (i <= n) {\n        s +=\
    \ std::to_string(i) + \" \";\n        ++i;\n    }\n    return s;\n}\nint main()\
    \ {\n    auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"\
    ));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpioae_x_e: /tmp/tmpioae_x_e.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpobwkei77: /tmp/tmpobwkei77.cpp:14: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s+=std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpm66ov8pr: /tmp/tmpm66ov8pr.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++)\n        s+=std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpcjj5_5xk: /tmp/tmpcjj5_5xk.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_j5stmu4: /tmp/tmp_j5stmu4.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++)\n        s+=std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpcjj5_5xk: /tmp/tmpcjj5_5xk.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpobwkei77: /tmp/tmpobwkei77.cpp:14: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp1qihyjut: /tmp/tmp1qihyjut.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpobwkei77: /tmp/tmpobwkei77.cpp:14: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i) + \" \";\n    }\n    return s;\n}\nint main() {\n \
    \   auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpi1fewm9z: /tmp/tmpi1fewm9z.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096885
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;++i)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp3i__wek3: /tmp/tmp3i__wek3.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while (i <= n) {\n        s +=\
    \ std::to_string(i) + \" \";\n        i++;\n    }\n    return s;\n}\nint main()\
    \ {\n    auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"\
    ));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp31510o65: /tmp/tmp31510o65.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;++i)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpikpteyp0: /tmp/tmpikpteyp0.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096885
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp1qihyjut: /tmp/tmp1qihyjut.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp1qihyjut: /tmp/tmp1qihyjut.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgwls5jyr.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmpgwls5jyr.cpp:7:14: error: \u2018to_string\u2019 was not\
    \ declared in this scope; did you mean \u2018std::__cxx11::to_string\u2019?\n\
    \    7 |         s += to_string(i);\n      |              ^~~~~~~~~\n      | \
    \             std::__cxx11::to_string\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpgwls5jyr.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6601:3:\
    \ note: \u2018std::__cxx11::to_string\u2019 declared here\n 6601 |   to_string(long\
    \ double __val)\n      |   ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660096885
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp1qihyjut: /tmp/tmp1qihyjut.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i < n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpogndx5_7: /tmp/tmpogndx5_7.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp0s0p93y4: /tmp/tmp0s0p93y4.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_j5stmu4: /tmp/tmp_j5stmu4.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp1qihyjut: /tmp/tmp1qihyjut.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_j5stmu4: /tmp/tmp_j5stmu4.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpobwkei77: /tmp/tmpobwkei77.cpp:14: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpmppqcuoh: /tmp/tmpmppqcuoh.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_j5stmu4: /tmp/tmp_j5stmu4.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i)\
    \ + \" \";\n    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpr26mvux9: /tmp/tmpr26mvux9.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++)\n        s+=to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7ujtdxnl.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmp7ujtdxnl.cpp:7:12: error: \u2018to_string\u2019 was not\
    \ declared in this scope; did you mean \u2018std::__cxx11::to_string\u2019?\n\
    \    7 |         s+=to_string(i);\n      |            ^~~~~~~~~\n      |     \
    \       std::__cxx11::to_string\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp7ujtdxnl.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6601:3:\
    \ note: \u2018std::__cxx11::to_string\u2019 declared here\n 6601 |   to_string(long\
    \ double __val)\n      |   ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660096885
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while (i <= n) {\n        s +=\
    \ std::to_string(i);\n        ++i;\n    }\n    return s;\n}\nint main() {\n  \
    \  auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpja8bzuvc: /tmp/tmpja8bzuvc.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp1qihyjut: /tmp/tmp1qihyjut.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;++i)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpikpteyp0: /tmp/tmpikpteyp0.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096885
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_j5stmu4: /tmp/tmp_j5stmu4.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp1qihyjut: /tmp/tmp1qihyjut.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while (i <= n) {\n        s +=\
    \ std::to_string(i);\n        i++;\n    }\n    return s;\n}\nint main() {\n  \
    \  auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpjlrdi0i0: /tmp/tmpjlrdi0i0.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp1qihyjut: /tmp/tmp1qihyjut.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; ++i) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpiyzr21z8: /tmp/tmpiyzr21z8.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp1qihyjut: /tmp/tmp1qihyjut.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while (i <= n) {\n        s +=\
    \ std::to_string(i);\n        i++;\n    }\n    return s;\n}\nint main() {\n  \
    \  auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpjlrdi0i0: /tmp/tmpjlrdi0i0.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmptt2op5x7: /tmp/tmptt2op5x7.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_j5stmu4: /tmp/tmp_j5stmu4.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp1qihyjut: /tmp/tmp1qihyjut.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while(i <= n) {\n        s +=\
    \ std::to_string(i);\n        ++i;\n    }\n    return s;\n}\nint main() {\n  \
    \  auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpn7jkunk2: /tmp/tmpn7jkunk2.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpobwkei77: /tmp/tmpobwkei77.cpp:14: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp1qihyjut: /tmp/tmp1qihyjut.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_j5stmu4: /tmp/tmp_j5stmu4.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while (i <= n) {\n        s +=\
    \ std::to_string(i);\n        ++i;\n    }\n    return s;\n}\nint main() {\n  \
    \  auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpja8bzuvc: /tmp/tmpja8bzuvc.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++) {\n        s+=std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmps6vz7_k0: /tmp/tmps6vz7_k0.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp1qihyjut: /tmp/tmp1qihyjut.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_j5stmu4: /tmp/tmp_j5stmu4.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpobwkei77: /tmp/tmpobwkei77.cpp:14: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpobwkei77: /tmp/tmpobwkei77.cpp:14: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpobwkei77: /tmp/tmpobwkei77.cpp:14: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpobwkei77: /tmp/tmpobwkei77.cpp:14: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp1qihyjut: /tmp/tmp1qihyjut.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while(i <= n) {\n        s +=\
    \ std::to_string(i) + \" \";\n        i++;\n    }\n    return s;\n}\nint main()\
    \ {\n    auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"\
    ));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpk6krb7lz: /tmp/tmpk6krb7lz.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i < n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpogndx5_7: /tmp/tmpogndx5_7.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpobwkei77: /tmp/tmpobwkei77.cpp:14: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpobwkei77: /tmp/tmpobwkei77.cpp:14: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for(i = 0; i < n; i++) {\n      \
    \  s += std::to_string(i) + \" \";\n    }\n    return s;\n}\nint main() {\n  \
    \  auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp6eb7rm_w: /tmp/tmp6eb7rm_w.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++)\n        s+=std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpcjj5_5xk: /tmp/tmpcjj5_5xk.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp1qihyjut: /tmp/tmp1qihyjut.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp1qihyjut: /tmp/tmp1qihyjut.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i) + \" \";\n    }\n    return s;\n}\nint main() {\n \
    \   auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpi1fewm9z: /tmp/tmpi1fewm9z.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096885
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while(i <= n) {\n        s +=\
    \ std::to_string(i);\n        ++i;\n    }\n    return s;\n}\nint main() {\n  \
    \  auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpn7jkunk2: /tmp/tmpn7jkunk2.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;++i)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp3i__wek3: /tmp/tmp3i__wek3.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for(i = 0; i < n; i++) {\n      \
    \  s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpiq59l7ct: /tmp/tmpiq59l7ct.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_j5stmu4: /tmp/tmp_j5stmu4.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while (i <= n) {\n        s +=\
    \ std::to_string(i) + \" \";\n        ++i;\n    }\n    return s;\n}\nint main()\
    \ {\n    auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"\
    ));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpioae_x_e: /tmp/tmpioae_x_e.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while (i <= n) {\n        s +=\
    \ std::to_string(i);\n        ++i;\n    }\n    return s;\n}\nint main() {\n  \
    \  auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpja8bzuvc: /tmp/tmpja8bzuvc.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpmppqcuoh: /tmp/tmpmppqcuoh.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp1qihyjut: /tmp/tmp1qihyjut.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for(i = 0; i < n; i++) {\n      \
    \  s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpiq59l7ct: /tmp/tmpiq59l7ct.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i<n; i++) {\n        s += to_string(i)\
    \ + \" \";\n    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphwg4fwga.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmphwg4fwga.cpp:7:14: error: \u2018to_string\u2019 was not\
    \ declared in this scope; did you mean \u2018std::__cxx11::to_string\u2019?\n\
    \    7 |         s += to_string(i) + \" \";\n      |              ^~~~~~~~~\n\
    \      |              std::__cxx11::to_string\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmphwg4fwga.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6601:3:\
    \ note: \u2018std::__cxx11::to_string\u2019 declared here\n 6601 |   to_string(long\
    \ double __val)\n      |   ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;++i)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpikpteyp0: /tmp/tmpikpteyp0.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096885
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpobwkei77: /tmp/tmpobwkei77.cpp:14: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;++i)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp3i__wek3: /tmp/tmp3i__wek3.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while (i <= n) {\n        s +=\
    \ std::to_string(i) + \" \";\n        ++i;\n    }\n    return s;\n}\nint main()\
    \ {\n    auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"\
    ));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpioae_x_e: /tmp/tmpioae_x_e.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;++i)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp3i__wek3: /tmp/tmp3i__wek3.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;++i)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp3i__wek3: /tmp/tmp3i__wek3.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s+=std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpm66ov8pr: /tmp/tmpm66ov8pr.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_j5stmu4: /tmp/tmp_j5stmu4.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmptt2op5x7: /tmp/tmptt2op5x7.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp0s0p93y4: /tmp/tmp0s0p93y4.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_j5stmu4: /tmp/tmp_j5stmu4.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_j5stmu4: /tmp/tmp_j5stmu4.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while (i <= n) {\n        s +=\
    \ std::to_string(i);\n        ++i;\n    }\n    return s;\n}\nint main() {\n  \
    \  auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpja8bzuvc: /tmp/tmpja8bzuvc.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for(i = 0; i < n; i++) {\n      \
    \  s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpiq59l7ct: /tmp/tmpiq59l7ct.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_j5stmu4: /tmp/tmp_j5stmu4.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i<n; i++) {\n        s += std::to_string(i)\
    \ + \" \";\n    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp4v0ypfp4: /tmp/tmp4v0ypfp4.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i<n; i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpvj_hzlrx: /tmp/tmpvj_hzlrx.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; ++i) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpiyzr21z8: /tmp/tmpiyzr21z8.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while (i <= n) {\n        s +=\
    \ std::to_string(i) + \" \";\n        ++i;\n    }\n    return s;\n}\nint main()\
    \ {\n    auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"\
    ));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpioae_x_e: /tmp/tmpioae_x_e.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while (i <= n) {\n        s +=\
    \ std::to_string(i);\n        ++i;\n    }\n    return s;\n}\nint main() {\n  \
    \  auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpja8bzuvc: /tmp/tmpja8bzuvc.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_j5stmu4: /tmp/tmp_j5stmu4.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for(i = 0; i < n; i++) {\n      \
    \  s += std::to_string(i) + \" \";\n    }\n    return s;\n}\nint main() {\n  \
    \  auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp6eb7rm_w: /tmp/tmp6eb7rm_w.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while (i <= n) {\n        s +=\
    \ std::to_string(i);\n        ++i;\n    }\n    return s;\n}\nint main() {\n  \
    \  auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpja8bzuvc: /tmp/tmpja8bzuvc.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;++i)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpikpteyp0: /tmp/tmpikpteyp0.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096885
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for(i = 0; i < n; i++) {\n      \
    \  s += std::to_string(i) + \" \";\n    }\n    return s;\n}\nint main() {\n  \
    \  auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp6eb7rm_w: /tmp/tmp6eb7rm_w.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while (i <= n) {\n        s +=\
    \ std::to_string(i);\n        ++i;\n    }\n    return s;\n}\nint main() {\n  \
    \  auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpja8bzuvc: /tmp/tmpja8bzuvc.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while (i <= n) {\n        s +=\
    \ std::to_string(i);\n        ++i;\n    }\n    return s;\n}\nint main() {\n  \
    \  auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpja8bzuvc: /tmp/tmpja8bzuvc.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i<n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmph56q6xlv: /tmp/tmph56q6xlv.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_j5stmu4: /tmp/tmp_j5stmu4.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i)\
    \ + \" \";\n    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpr26mvux9: /tmp/tmpr26mvux9.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpmppqcuoh: /tmp/tmpmppqcuoh.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for(i = 0; i < n; ++i)\n        s\
    \ += std::to_string(i);\n    return s;\n}\nint main() {\n    auto candidate =\
    \ string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpl31l13n0: /tmp/tmpl31l13n0.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096885
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpobwkei77: /tmp/tmpobwkei77.cpp:14: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i)\
    \ + \" \";\n    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpr26mvux9: /tmp/tmpr26mvux9.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for(i = 0; i < n; i++) {\n      \
    \  s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpiq59l7ct: /tmp/tmpiq59l7ct.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp0s0p93y4: /tmp/tmp0s0p93y4.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpobwkei77: /tmp/tmpobwkei77.cpp:14: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpkjd8vmn8: /tmp/tmpkjd8vmn8.cpp:14: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpmppqcuoh: /tmp/tmpmppqcuoh.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_j5stmu4: /tmp/tmp_j5stmu4.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while (i <= n) {\n        s +=\
    \ std::to_string(i) + \" \";\n        ++i;\n    }\n    return s;\n}\nint main()\
    \ {\n    auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"\
    ));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpioae_x_e: /tmp/tmpioae_x_e.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp1qihyjut: /tmp/tmp1qihyjut.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpmppqcuoh: /tmp/tmpmppqcuoh.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while(i <= n) {\n        s +=\
    \ std::to_string(i);\n        ++i;\n    }\n    return s;\n}\nint main() {\n  \
    \  auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpn7jkunk2: /tmp/tmpn7jkunk2.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s+=to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyzz0q6mu.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmpyzz0q6mu.cpp:7:12: error: \u2018to_string\u2019 was not\
    \ declared in this scope; did you mean \u2018std::__cxx11::to_string\u2019?\n\
    \    7 |         s+=to_string(i);\n      |            ^~~~~~~~~\n      |     \
    \       std::__cxx11::to_string\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpyzz0q6mu.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6601:3:\
    \ note: \u2018std::__cxx11::to_string\u2019 declared here\n 6601 |   to_string(long\
    \ double __val)\n      |   ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660096885
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s+=std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpm66ov8pr: /tmp/tmpm66ov8pr.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for(i = 0; i < n; i++) {\n      \
    \  s += std::to_string(i) + \" \";\n    }\n    return s;\n}\nint main() {\n  \
    \  auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp6eb7rm_w: /tmp/tmp6eb7rm_w.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_j5stmu4: /tmp/tmp_j5stmu4.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_j5stmu4: /tmp/tmp_j5stmu4.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long k = n;\n    while(k >= 0) {\n        s +=\
    \ std::to_string(k);\n        k--;\n    }\n    return s;\n}\nint main() {\n  \
    \  auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpdsq4d9xj: /tmp/tmpdsq4d9xj.cpp:16: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp1qihyjut: /tmp/tmp1qihyjut.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_j5stmu4: /tmp/tmp_j5stmu4.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for(i = 0; i < n; i++) {\n      \
    \  s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpiq59l7ct: /tmp/tmpiq59l7ct.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++)\n        s+=std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpcjj5_5xk: /tmp/tmpcjj5_5xk.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i) + \" \";\n    }\n    return s;\n}\nint main() {\n\
    \    auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpusmwzgds: /tmp/tmpusmwzgds.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_j5stmu4: /tmp/tmp_j5stmu4.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++) {\n        s+=std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmps6vz7_k0: /tmp/tmps6vz7_k0.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp0s0p93y4: /tmp/tmp0s0p93y4.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i = 0; i < n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpewnu5qj4: /tmp/tmpewnu5qj4.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for(i = 0; i < n; i++) {\n      \
    \  s += std::to_string(i) + \" \";\n    }\n    return s;\n}\nint main() {\n  \
    \  auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp6eb7rm_w: /tmp/tmp6eb7rm_w.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp1qihyjut: /tmp/tmp1qihyjut.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpobwkei77: /tmp/tmpobwkei77.cpp:14: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i<n; i++){\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpbqzi41i8: /tmp/tmpbqzi41i8.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096885
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s+=to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyzz0q6mu.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmpyzz0q6mu.cpp:7:12: error: \u2018to_string\u2019 was not\
    \ declared in this scope; did you mean \u2018std::__cxx11::to_string\u2019?\n\
    \    7 |         s+=to_string(i);\n      |            ^~~~~~~~~\n      |     \
    \       std::__cxx11::to_string\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpyzz0q6mu.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6601:3:\
    \ note: \u2018std::__cxx11::to_string\u2019 declared here\n 6601 |   to_string(long\
    \ double __val)\n      |   ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660096885
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp0s0p93y4: /tmp/tmp0s0p93y4.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp0s0p93y4: /tmp/tmp0s0p93y4.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp0s0p93y4: /tmp/tmp0s0p93y4.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i < n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpogndx5_7: /tmp/tmpogndx5_7.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i)\
    \ + \" \";\n    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpr26mvux9: /tmp/tmpr26mvux9.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp1qihyjut: /tmp/tmp1qihyjut.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for(i = 0; i < n; i++) {\n      \
    \  s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpiq59l7ct: /tmp/tmpiq59l7ct.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886

language: cpp
name: HumanEval_15_string_sequence
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmphsc1o9i9: /tmp/tmphsc1o9i9.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while(i <= n) {\n        s +=\
    \ std::to_string(i);\n        i++;\n    }\n    return s;\n}\nint main() {\n  \
    \  auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpxp73pn5r: /tmp/tmpxp73pn5r.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i) + \" \";\n    }\n    return s;\n}\nint main() {\n\
    \    auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpttrjogv9: /tmp/tmpttrjogv9.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmprec_4fyl: /tmp/tmprec_4fyl.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i) + \" \";\n    }\n    return s;\n}\nint main() {\n \
    \   auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp69obr2ds: /tmp/tmp69obr2ds.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for(i = 0; i < n; i++) {\n      \
    \  s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpsdm51knb: /tmp/tmpsdm51knb.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmprec_4fyl: /tmp/tmprec_4fyl.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while(i <= n) {\n        s +=\
    \ std::to_string(i) + \" \";\n        i++;\n    }\n    return s;\n}\nint main()\
    \ {\n    auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"\
    ));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpkal52hu2: /tmp/tmpkal52hu2.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpyr80ijw5: /tmp/tmpyr80ijw5.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpip7l7wcj: /tmp/tmpip7l7wcj.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while (i <= n) {\n        s +=\
    \ std::to_string(i);\n        ++i;\n    }\n    return s;\n}\nint main() {\n  \
    \  auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpd96_l8ah: /tmp/tmpd96_l8ah.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while (i <= n) {\n        s +=\
    \ std::to_string(i);\n        ++i;\n    }\n    return s;\n}\nint main() {\n  \
    \  auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpd96_l8ah: /tmp/tmpd96_l8ah.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmphsc1o9i9: /tmp/tmphsc1o9i9.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while (i <= n) {\n        s +=\
    \ std::to_string(i);\n        ++i;\n    }\n    return s;\n}\nint main() {\n  \
    \  auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpd96_l8ah: /tmp/tmpd96_l8ah.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while (i <= n) {\n        s +=\
    \ std::to_string(i);\n        ++i;\n    }\n    return s;\n}\nint main() {\n  \
    \  auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpd96_l8ah: /tmp/tmpd96_l8ah.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;++i)\n        s+=std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpsscb0ns_: /tmp/tmpsscb0ns_.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpyr80ijw5: /tmp/tmpyr80ijw5.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmprec_4fyl: /tmp/tmprec_4fyl.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmprec_4fyl: /tmp/tmprec_4fyl.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmprec_4fyl: /tmp/tmprec_4fyl.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmphsc1o9i9: /tmp/tmphsc1o9i9.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpttwladx8: /tmp/tmpttwladx8.cpp:14: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmphsc1o9i9: /tmp/tmphsc1o9i9.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpttwladx8: /tmp/tmpttwladx8.cpp:14: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;++i)\n        s+=std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpsscb0ns_: /tmp/tmpsscb0ns_.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i) + \" \";\n    }\n    return s;\n}\nint main() {\n \
    \   auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp69obr2ds: /tmp/tmp69obr2ds.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i < n; i++) {\n        s += std::to_string(i)\
    \ + \" \";\n    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmptoutgebu: /tmp/tmptoutgebu.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpttwladx8: /tmp/tmpttwladx8.cpp:14: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i) + \" \";\n    }\n    return s;\n}\nint main() {\n \
    \   auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp69obr2ds: /tmp/tmp69obr2ds.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i) + \" \";\n    }\n    return s;\n}\nint main() {\n \
    \   auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp69obr2ds: /tmp/tmp69obr2ds.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmprec_4fyl: /tmp/tmprec_4fyl.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for(i = 0; i < n; i++) {\n      \
    \  s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpsdm51knb: /tmp/tmpsdm51knb.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmphsc1o9i9: /tmp/tmphsc1o9i9.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpyr80ijw5: /tmp/tmpyr80ijw5.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while (i <= n) {\n        s +=\
    \ std::to_string(i);\n        i++;\n    }\n    return s;\n}\nint main() {\n  \
    \  auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp87bk4oyn: /tmp/tmp87bk4oyn.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmphsc1o9i9: /tmp/tmphsc1o9i9.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while (i <= n) {\n        s +=\
    \ std::to_string(i) + \" \";\n        ++i;\n    }\n    return s;\n}\nint main()\
    \ {\n    auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"\
    ));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmphd3njqz_: /tmp/tmphd3njqz_.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpttwladx8: /tmp/tmpttwladx8.cpp:14: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long k = n;\n    while (k != 0) {\n        long\
    \ r = k % 10;\n        k = k / 10;\n        s = std::to_string(r) + s;\n    }\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp86h9j7jt: /tmp/tmp86h9j7jt.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmprec_4fyl: /tmp/tmprec_4fyl.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpttwladx8: /tmp/tmpttwladx8.cpp:14: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmprec_4fyl: /tmp/tmprec_4fyl.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpttwladx8: /tmp/tmpttwladx8.cpp:14: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while(i <= n) {\n        s +=\
    \ std::to_string(i);\n        i++;\n    }\n    return s;\n}\nint main() {\n  \
    \  auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpxp73pn5r: /tmp/tmpxp73pn5r.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for(i = 0; i < n; i++) {\n      \
    \  s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpsdm51knb: /tmp/tmpsdm51knb.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i = 0; i <= n; ++i)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpea8g7gqx: /tmp/tmpea8g7gqx.cpp:13: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmprec_4fyl: /tmp/tmprec_4fyl.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpyr80ijw5: /tmp/tmpyr80ijw5.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i) + \" \";\n    }\n    return s;\n}\nint main() {\n \
    \   auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp69obr2ds: /tmp/tmp69obr2ds.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmphsc1o9i9: /tmp/tmphsc1o9i9.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmprec_4fyl: /tmp/tmprec_4fyl.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i)\
    \ + \" \";\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpj92ptnti: /tmp/tmpj92ptnti.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;++i)\n        s+=std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpsscb0ns_: /tmp/tmpsscb0ns_.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmphsc1o9i9: /tmp/tmphsc1o9i9.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmprec_4fyl: /tmp/tmprec_4fyl.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmprec_4fyl: /tmp/tmprec_4fyl.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while (i <= n) {\n        s +=\
    \ std::to_string(i);\n        ++i;\n    }\n    return s;\n}\nint main() {\n  \
    \  auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpd96_l8ah: /tmp/tmpd96_l8ah.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while (i <= n) {\n        s +=\
    \ std::to_string(i) + \" \";\n        ++i;\n    }\n    return s;\n}\nint main()\
    \ {\n    auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"\
    ));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmphd3njqz_: /tmp/tmphd3njqz_.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpttwladx8: /tmp/tmpttwladx8.cpp:14: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s+=std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmppip514n7: /tmp/tmppip514n7.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++)\n        s+=std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp6ai027bu: /tmp/tmp6ai027bu.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmphsc1o9i9: /tmp/tmphsc1o9i9.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++)\n        s+=std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp6ai027bu: /tmp/tmp6ai027bu.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpttwladx8: /tmp/tmpttwladx8.cpp:14: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmprec_4fyl: /tmp/tmprec_4fyl.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpttwladx8: /tmp/tmpttwladx8.cpp:14: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i) + \" \";\n    }\n    return s;\n}\nint main() {\n \
    \   auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp69obr2ds: /tmp/tmp69obr2ds.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;++i)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpwheerue5: /tmp/tmpwheerue5.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while (i <= n) {\n        s +=\
    \ std::to_string(i) + \" \";\n        i++;\n    }\n    return s;\n}\nint main()\
    \ {\n    auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"\
    ));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpdfwv1elz: /tmp/tmpdfwv1elz.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;++i)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp8je_swfw: /tmp/tmp8je_swfw.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmprec_4fyl: /tmp/tmprec_4fyl.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmprec_4fyl: /tmp/tmprec_4fyl.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprt5ho_ne.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmprt5ho_ne.cpp:7:14: error: \u2018to_string\u2019 was not\
    \ declared in this scope; did you mean \u2018std::__cxx11::to_string\u2019?\n\
    \    7 |         s += to_string(i);\n      |              ^~~~~~~~~\n      | \
    \             std::__cxx11::to_string\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:55,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmprt5ho_ne.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:6598:3:\
    \ note: \u2018std::__cxx11::to_string\u2019 declared here\n 6598 |   to_string(long\
    \ double __val)\n      |   ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659747260
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmprec_4fyl: /tmp/tmprec_4fyl.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i < n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpobfu84p6: /tmp/tmpobfu84p6.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747260
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpyr80ijw5: /tmp/tmpyr80ijw5.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmphsc1o9i9: /tmp/tmphsc1o9i9.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmprec_4fyl: /tmp/tmprec_4fyl.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmphsc1o9i9: /tmp/tmphsc1o9i9.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpttwladx8: /tmp/tmpttwladx8.cpp:14: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpip7l7wcj: /tmp/tmpip7l7wcj.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmphsc1o9i9: /tmp/tmphsc1o9i9.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i)\
    \ + \" \";\n    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp6i6od_z8: /tmp/tmp6i6od_z8.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747260
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++)\n        s+=to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp19wshvli.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmp19wshvli.cpp:7:12: error: \u2018to_string\u2019 was not\
    \ declared in this scope; did you mean \u2018std::__cxx11::to_string\u2019?\n\
    \    7 |         s+=to_string(i);\n      |            ^~~~~~~~~\n      |     \
    \       std::__cxx11::to_string\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:55,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp19wshvli.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:6598:3:\
    \ note: \u2018std::__cxx11::to_string\u2019 declared here\n 6598 |   to_string(long\
    \ double __val)\n      |   ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659747260
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while (i <= n) {\n        s +=\
    \ std::to_string(i);\n        ++i;\n    }\n    return s;\n}\nint main() {\n  \
    \  auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpd96_l8ah: /tmp/tmpd96_l8ah.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmprec_4fyl: /tmp/tmprec_4fyl.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;++i)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp8je_swfw: /tmp/tmp8je_swfw.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmphsc1o9i9: /tmp/tmphsc1o9i9.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmprec_4fyl: /tmp/tmprec_4fyl.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while (i <= n) {\n        s +=\
    \ std::to_string(i);\n        i++;\n    }\n    return s;\n}\nint main() {\n  \
    \  auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp87bk4oyn: /tmp/tmp87bk4oyn.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmprec_4fyl: /tmp/tmprec_4fyl.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; ++i) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpjro5drt6: /tmp/tmpjro5drt6.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747260
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmprec_4fyl: /tmp/tmprec_4fyl.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while (i <= n) {\n        s +=\
    \ std::to_string(i);\n        i++;\n    }\n    return s;\n}\nint main() {\n  \
    \  auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp87bk4oyn: /tmp/tmp87bk4oyn.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp38e14egk: /tmp/tmp38e14egk.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747260
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmphsc1o9i9: /tmp/tmphsc1o9i9.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmprec_4fyl: /tmp/tmprec_4fyl.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while(i <= n) {\n        s +=\
    \ std::to_string(i);\n        ++i;\n    }\n    return s;\n}\nint main() {\n  \
    \  auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp13c3qwz5: /tmp/tmp13c3qwz5.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747260
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpttwladx8: /tmp/tmpttwladx8.cpp:14: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmprec_4fyl: /tmp/tmprec_4fyl.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmphsc1o9i9: /tmp/tmphsc1o9i9.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while (i <= n) {\n        s +=\
    \ std::to_string(i);\n        ++i;\n    }\n    return s;\n}\nint main() {\n  \
    \  auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpd96_l8ah: /tmp/tmpd96_l8ah.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++) {\n        s+=std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp_n0ii2p7: /tmp/tmp_n0ii2p7.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747260
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmprec_4fyl: /tmp/tmprec_4fyl.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmphsc1o9i9: /tmp/tmphsc1o9i9.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpttwladx8: /tmp/tmpttwladx8.cpp:14: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpttwladx8: /tmp/tmpttwladx8.cpp:14: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpttwladx8: /tmp/tmpttwladx8.cpp:14: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpttwladx8: /tmp/tmpttwladx8.cpp:14: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmprec_4fyl: /tmp/tmprec_4fyl.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while(i <= n) {\n        s +=\
    \ std::to_string(i) + \" \";\n        i++;\n    }\n    return s;\n}\nint main()\
    \ {\n    auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"\
    ));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpkal52hu2: /tmp/tmpkal52hu2.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i < n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpobfu84p6: /tmp/tmpobfu84p6.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747260
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpttwladx8: /tmp/tmpttwladx8.cpp:14: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpttwladx8: /tmp/tmpttwladx8.cpp:14: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for(i = 0; i < n; i++) {\n      \
    \  s += std::to_string(i) + \" \";\n    }\n    return s;\n}\nint main() {\n  \
    \  auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpeos3g_9j: /tmp/tmpeos3g_9j.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747260
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++)\n        s+=std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp6ai027bu: /tmp/tmp6ai027bu.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmprec_4fyl: /tmp/tmprec_4fyl.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmprec_4fyl: /tmp/tmprec_4fyl.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i) + \" \";\n    }\n    return s;\n}\nint main() {\n \
    \   auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp69obr2ds: /tmp/tmp69obr2ds.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while(i <= n) {\n        s +=\
    \ std::to_string(i);\n        ++i;\n    }\n    return s;\n}\nint main() {\n  \
    \  auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp13c3qwz5: /tmp/tmp13c3qwz5.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747260
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;++i)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpwheerue5: /tmp/tmpwheerue5.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for(i = 0; i < n; i++) {\n      \
    \  s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpsdm51knb: /tmp/tmpsdm51knb.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmphsc1o9i9: /tmp/tmphsc1o9i9.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while (i <= n) {\n        s +=\
    \ std::to_string(i) + \" \";\n        ++i;\n    }\n    return s;\n}\nint main()\
    \ {\n    auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"\
    ));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmphd3njqz_: /tmp/tmphd3njqz_.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while (i <= n) {\n        s +=\
    \ std::to_string(i);\n        ++i;\n    }\n    return s;\n}\nint main() {\n  \
    \  auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpd96_l8ah: /tmp/tmpd96_l8ah.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpip7l7wcj: /tmp/tmpip7l7wcj.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmprec_4fyl: /tmp/tmprec_4fyl.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for(i = 0; i < n; i++) {\n      \
    \  s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpsdm51knb: /tmp/tmpsdm51knb.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i<n; i++) {\n        s += to_string(i)\
    \ + \" \";\n    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzzc7_zes.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmpzzc7_zes.cpp:7:14: error: \u2018to_string\u2019 was not\
    \ declared in this scope; did you mean \u2018std::__cxx11::to_string\u2019?\n\
    \    7 |         s += to_string(i) + \" \";\n      |              ^~~~~~~~~\n\
    \      |              std::__cxx11::to_string\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:55,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpzzc7_zes.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:6598:3:\
    \ note: \u2018std::__cxx11::to_string\u2019 declared here\n 6598 |   to_string(long\
    \ double __val)\n      |   ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659747260
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;++i)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp8je_swfw: /tmp/tmp8je_swfw.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpttwladx8: /tmp/tmpttwladx8.cpp:14: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;++i)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpwheerue5: /tmp/tmpwheerue5.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while (i <= n) {\n        s +=\
    \ std::to_string(i) + \" \";\n        ++i;\n    }\n    return s;\n}\nint main()\
    \ {\n    auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"\
    ));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmphd3njqz_: /tmp/tmphd3njqz_.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;++i)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpwheerue5: /tmp/tmpwheerue5.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;++i)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpwheerue5: /tmp/tmpwheerue5.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s+=std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmppip514n7: /tmp/tmppip514n7.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmphsc1o9i9: /tmp/tmphsc1o9i9.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp38e14egk: /tmp/tmp38e14egk.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747260
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpyr80ijw5: /tmp/tmpyr80ijw5.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmphsc1o9i9: /tmp/tmphsc1o9i9.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmphsc1o9i9: /tmp/tmphsc1o9i9.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while (i <= n) {\n        s +=\
    \ std::to_string(i);\n        ++i;\n    }\n    return s;\n}\nint main() {\n  \
    \  auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpd96_l8ah: /tmp/tmpd96_l8ah.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for(i = 0; i < n; i++) {\n      \
    \  s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpsdm51knb: /tmp/tmpsdm51knb.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmphsc1o9i9: /tmp/tmphsc1o9i9.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i<n; i++) {\n        s += std::to_string(i)\
    \ + \" \";\n    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmps1__bcm_: /tmp/tmps1__bcm_.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747260
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i<n; i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp6ncoeiw0: /tmp/tmp6ncoeiw0.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747260
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; ++i) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpjro5drt6: /tmp/tmpjro5drt6.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747260
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while (i <= n) {\n        s +=\
    \ std::to_string(i) + \" \";\n        ++i;\n    }\n    return s;\n}\nint main()\
    \ {\n    auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"\
    ));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmphd3njqz_: /tmp/tmphd3njqz_.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while (i <= n) {\n        s +=\
    \ std::to_string(i);\n        ++i;\n    }\n    return s;\n}\nint main() {\n  \
    \  auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpd96_l8ah: /tmp/tmpd96_l8ah.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmphsc1o9i9: /tmp/tmphsc1o9i9.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for(i = 0; i < n; i++) {\n      \
    \  s += std::to_string(i) + \" \";\n    }\n    return s;\n}\nint main() {\n  \
    \  auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpeos3g_9j: /tmp/tmpeos3g_9j.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747260
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while (i <= n) {\n        s +=\
    \ std::to_string(i);\n        ++i;\n    }\n    return s;\n}\nint main() {\n  \
    \  auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpd96_l8ah: /tmp/tmpd96_l8ah.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;++i)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp8je_swfw: /tmp/tmp8je_swfw.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for(i = 0; i < n; i++) {\n      \
    \  s += std::to_string(i) + \" \";\n    }\n    return s;\n}\nint main() {\n  \
    \  auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpeos3g_9j: /tmp/tmpeos3g_9j.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747260
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while (i <= n) {\n        s +=\
    \ std::to_string(i);\n        ++i;\n    }\n    return s;\n}\nint main() {\n  \
    \  auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpd96_l8ah: /tmp/tmpd96_l8ah.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while (i <= n) {\n        s +=\
    \ std::to_string(i);\n        ++i;\n    }\n    return s;\n}\nint main() {\n  \
    \  auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpd96_l8ah: /tmp/tmpd96_l8ah.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i<n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpu0gth85s: /tmp/tmpu0gth85s.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747260
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmphsc1o9i9: /tmp/tmphsc1o9i9.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i)\
    \ + \" \";\n    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp6i6od_z8: /tmp/tmp6i6od_z8.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747260
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpip7l7wcj: /tmp/tmpip7l7wcj.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for(i = 0; i < n; ++i)\n        s\
    \ += std::to_string(i);\n    return s;\n}\nint main() {\n    auto candidate =\
    \ string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpgtacmsds: /tmp/tmpgtacmsds.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747260
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpttwladx8: /tmp/tmpttwladx8.cpp:14: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i)\
    \ + \" \";\n    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp6i6od_z8: /tmp/tmp6i6od_z8.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747260
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for(i = 0; i < n; i++) {\n      \
    \  s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpsdm51knb: /tmp/tmpsdm51knb.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpyr80ijw5: /tmp/tmpyr80ijw5.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpttwladx8: /tmp/tmpttwladx8.cpp:14: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpayeamzmf: /tmp/tmpayeamzmf.cpp:14: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1659747260
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpip7l7wcj: /tmp/tmpip7l7wcj.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmphsc1o9i9: /tmp/tmphsc1o9i9.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while (i <= n) {\n        s +=\
    \ std::to_string(i) + \" \";\n        ++i;\n    }\n    return s;\n}\nint main()\
    \ {\n    auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"\
    ));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmphd3njqz_: /tmp/tmphd3njqz_.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmprec_4fyl: /tmp/tmprec_4fyl.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpip7l7wcj: /tmp/tmpip7l7wcj.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i = 1;\n    while(i <= n) {\n        s +=\
    \ std::to_string(i);\n        ++i;\n    }\n    return s;\n}\nint main() {\n  \
    \  auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp13c3qwz5: /tmp/tmp13c3qwz5.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747260
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s+=to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpubm0514k.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmpubm0514k.cpp:7:12: error: \u2018to_string\u2019 was not\
    \ declared in this scope; did you mean \u2018std::__cxx11::to_string\u2019?\n\
    \    7 |         s+=to_string(i);\n      |            ^~~~~~~~~\n      |     \
    \       std::__cxx11::to_string\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:55,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpubm0514k.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:6598:3:\
    \ note: \u2018std::__cxx11::to_string\u2019 declared here\n 6598 |   to_string(long\
    \ double __val)\n      |   ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659747260
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s+=std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmppip514n7: /tmp/tmppip514n7.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for(i = 0; i < n; i++) {\n      \
    \  s += std::to_string(i) + \" \";\n    }\n    return s;\n}\nint main() {\n  \
    \  auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpeos3g_9j: /tmp/tmpeos3g_9j.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747260
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmphsc1o9i9: /tmp/tmphsc1o9i9.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmphsc1o9i9: /tmp/tmphsc1o9i9.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long k = n;\n    while(k >= 0) {\n        s +=\
    \ std::to_string(k);\n        k--;\n    }\n    return s;\n}\nint main() {\n  \
    \  auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpat43pzw4: /tmp/tmpat43pzw4.cpp:16: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1659747260
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmprec_4fyl: /tmp/tmprec_4fyl.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmphsc1o9i9: /tmp/tmphsc1o9i9.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for(i = 0; i < n; i++) {\n      \
    \  s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpsdm51knb: /tmp/tmpsdm51knb.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++)\n        s+=std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp6ai027bu: /tmp/tmp6ai027bu.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i) + \" \";\n    }\n    return s;\n}\nint main() {\n\
    \    auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpttrjogv9: /tmp/tmpttrjogv9.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i <= n; i++) {\n    \
    \    s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmphsc1o9i9: /tmp/tmphsc1o9i9.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++) {\n        s+=std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp_n0ii2p7: /tmp/tmp_n0ii2p7.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747260
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpyr80ijw5: /tmp/tmpyr80ijw5.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i = 0; i < n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpoght_snc: /tmp/tmpoght_snc.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747260
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for(i = 0; i < n; i++) {\n      \
    \  s += std::to_string(i) + \" \";\n    }\n    return s;\n}\nint main() {\n  \
    \  auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpeos3g_9j: /tmp/tmpeos3g_9j.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747260
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmprec_4fyl: /tmp/tmprec_4fyl.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpttwladx8: /tmp/tmpttwladx8.cpp:14: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i<n; i++){\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp_nz8vcrn: /tmp/tmp_nz8vcrn.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747260
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s+=to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpubm0514k.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmpubm0514k.cpp:7:12: error: \u2018to_string\u2019 was not\
    \ declared in this scope; did you mean \u2018std::__cxx11::to_string\u2019?\n\
    \    7 |         s+=to_string(i);\n      |            ^~~~~~~~~\n      |     \
    \       std::__cxx11::to_string\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:55,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpubm0514k.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:6598:3:\
    \ note: \u2018std::__cxx11::to_string\u2019 declared here\n 6598 |   to_string(long\
    \ double __val)\n      |   ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659747260
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpyr80ijw5: /tmp/tmpyr80ijw5.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpyr80ijw5: /tmp/tmpyr80ijw5.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpyr80ijw5: /tmp/tmpyr80ijw5.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i < n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpobfu84p6: /tmp/tmpobfu84p6.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747260
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i)\
    \ + \" \";\n    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp6i6od_z8: /tmp/tmp6i6od_z8.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747260
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmprec_4fyl: /tmp/tmprec_4fyl.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    for(i = 0; i < n; i++) {\n      \
    \  s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpsdm51knb: /tmp/tmpsdm51knb.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1659747259

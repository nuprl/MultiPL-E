name: HumanEval_155_even_odd_count
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
  \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
  std::tuple<long, long> even_odd_count(long num) {\n"
tests: "}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
  \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
  \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
  \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
  \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
  \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
  \ 0)));\n}\n"
completions: ["    long even = 0, odd = 0;\n    long temp = num;\n    while (temp)\
    \ {\n        if (temp % 2 == 0) {\n            even++;\n        }\n        else\
    \ {\n            odd++;\n        }\n        temp /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    long temp = num;\n    while (temp\
    \ != 0) {\n        long digit = temp % 10;\n        even = even + digit * digit;\n\
    \        temp = temp / 10;\n    }\n    temp = num;\n    while (temp != 0) {\n\
    \        long digit = temp % 10;\n        odd = odd + digit * digit;\n       \
    \ temp = temp / 10;\n    }\n    return std::make_tuple(even, odd);", "    long\
    \ even = 0, odd = 0;\n    while (num) {\n        if (num % 2 == 0) {\n       \
    \     even++;\n        }\n        else {\n            odd++;\n        }\n    \
    \    num /= 10;\n    }\n    return std::make_tuple(even, odd);", "    long even\
    \ = 0, odd = 0;\n    while (num > 0) {\n        long digit = num % 10;\n     \
    \   if (digit % 2 == 0) {\n            even++;\n        } else {\n           \
    \ odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit\
    \ = num % 10;\n        num /= 10;\n        if (digit % 2 == 0) {\n           \
    \ even++;\n        } else {\n            odd++;\n        }\n    }\n    return\
    \ std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    while (num)\
    \ {\n        if (num % 2 == 0) {\n            even++;\n        }\n        else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit\
    \ = num % 10;\n        num = num / 10;\n        if (digit % 2 == 0) {\n      \
    \      even++;\n        } else {\n            odd++;\n        }\n    }\n    return\
    \ std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    long temp =\
    \ num;\n    while (temp > 0) {\n        long digit = temp % 10;\n        even\
    \ = even + digit * 2;\n        odd = odd + digit;\n        temp = temp / 10;\n\
    \    }\n    return std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n\
    \    while (num) {\n        long digit = num % 10;\n        num /= 10;\n     \
    \   if (digit % 2 == 0) {\n            even++;\n        } else {\n           \
    \ odd++;\n        }\n    }\n    return std::make_tuple(even, odd);", "    long\
    \ even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n    \
    \    if (digit % 2 == 0) {\n            even++;\n        } else {\n          \
    \  odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        long temp =\
    \ num % 10;\n        if (temp % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num = num / 10;\n    }\n    return\
    \ std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    while (num)\
    \ {\n        long temp = num % 10;\n        even = even + temp;\n        odd =\
    \ odd + temp * 2;\n        num = num / 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        if (num % 2\
    \ == 0) {\n            even++;\n        } else {\n            odd++;\n       \
    \ }\n        num /= 10;\n    }\n    return std::make_tuple(even, odd);", "   \
    \ long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit\
    \ = num % 10;\n        num = num / 10;\n        if (digit % 2 == 0) {\n      \
    \      even++;\n        } else {\n            odd++;\n        }\n    }\n    return\
    \ std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    while (num)\
    \ {\n        if (num % 2 == 0) {\n            even++;\n        }\n        else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    long temp = num;\n    while (temp\
    \ != 0) {\n        long digit = temp % 10;\n        if (digit % 2 == 0) {\n  \
    \          even++;\n        } else {\n            odd++;\n        }\n        temp\
    \ /= 10;\n    }\n    return std::make_tuple(even, odd);", "    long even = 0,\
    \ odd = 0;\n    long temp = num;\n    while (temp != 0) {\n        long digit\
    \ = temp % 10;\n        if (digit % 2 == 0) {\n            even++;\n        }\
    \ else {\n            odd++;\n        }\n        temp /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    while (num >\
    \ 0) {\n        long digit = num % 10;\n        if (digit % 2 == 0) {\n      \
    \      even++;\n        } else {\n            odd++;\n        }\n        num /=\
    \ 10;\n    }\n    return std::make_tuple(even, odd);", "    long even = 0, odd\
    \ = 0;\n    while (num) {\n        if (num % 2 == 0) {\n            even++;\n\
    \        }\n        else {\n            odd++;\n        }\n        num /= 10;\n\
    \    }\n    return std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n\
    \    while (num > 0) {\n        long digit = num % 10;\n        if (digit % 2\
    \ == 0) {\n            even++;\n        } else {\n            odd++;\n       \
    \ }\n        num /= 10;\n    }\n    return std::make_tuple(even, odd);", "   \
    \ long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num % 10;\n\
    \        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n    \
    \    } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        long digit\
    \ = num % 10;\n        num /= 10;\n        if (digit % 2 == 0) {\n           \
    \ even++;\n        } else {\n            odd++;\n        }\n    }\n    return\
    \ std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    long temp =\
    \ num;\n    while (temp > 0) {\n        long digit = temp % 10;\n        if (digit\
    \ % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n   \
    \     }\n        temp /= 10;\n    }\n    return std::make_tuple(even, odd);",
  "    long even = 0, odd = 0;\n    while (num > 0) {\n        long temp = num % 10;\n\
    \        even = even + temp;\n        odd = odd + temp;\n        num = num / 10;\n\
    \    }\n    return std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n\
    \    while (num) {\n        long digit = num % 10;\n        num = num / 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n    }\n    return std::make_tuple(even, odd);", "  \
    \  long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n    \
    \    } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        }\n\
    \        else {\n            odd++;\n        }\n        num /= 10;\n    }\n  \
    \  return std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    while\
    \ (num) {\n        long temp = num % 10;\n        if (temp % 2 == 0) {\n     \
    \       even++;\n        }\n        else {\n            odd++;\n        }\n  \
    \      num /= 10;\n    }\n    return std::make_tuple(even, odd);", "    long even\
    \ = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n        num\
    \ = num / 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n    }\n    return std::make_tuple(even, odd);",
  "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num %\
    \ 10;\n        even = even + digit % 2;\n        odd = odd + digit / 2;\n    \
    \    num = num / 10;\n    }\n    return std::make_tuple(even, odd);", "    long\
    \ even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    long temp = num;\n    while (temp)\
    \ {\n        if (temp % 2 == 0) {\n            even++;\n        }\n        else\
    \ {\n            odd++;\n        }\n        temp /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        long tmp =\
    \ num % 10;\n        even = even + (tmp % 2 == 0);\n        odd = odd + (tmp %\
    \ 2 != 0);\n        num /= 10;\n    }\n    return std::make_tuple(even, odd);",
  "    long even = 0, odd = 0;\n    while (num) {\n        long rem = num % 10;\n\
    \        num = num / 10;\n        if (rem % 2 == 0) {\n            even++;\n \
    \       } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit\
    \ = num % 10;\n        num = num / 10;\n        if (digit % 2 == 0) {\n      \
    \      even++;\n        } else {\n            odd++;\n        }\n    }\n    return\
    \ std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    while (num)\
    \ {\n        if (num % 2 == 0) {\n            even++;\n        }\n        else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    long temp = num;\n    while (temp\
    \ != 0) {\n        long rem = temp % 10;\n        temp /= 10;\n        if (rem\
    \ % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n   \
    \     }\n    }\n    return std::make_tuple(even, odd);", "    long even = 0, odd\
    \ = 0;\n    while (num > 0) {\n        long digit = num % 10;\n        if (digit\
    \ % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n   \
    \     }\n        num /= 10;\n    }\n    return std::make_tuple(even, odd);", " \
    \   long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num %\
    \ 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        long digit\
    \ = num % 10;\n        num /= 10;\n        if (digit % 2 == 0) {\n           \
    \ even++;\n        } else {\n            odd++;\n        }\n    }\n    return\
    \ std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    while (num >\
    \ 0) {\n        long digit = num % 10;\n        num /= 10;\n        if (digit\
    \ % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n   \
    \     }\n    }\n    return std::make_tuple(even, odd);", "    long even = 0, odd\
    \ = 0;\n    while (num > 0) {\n        long digit = num % 10;\n        if (digit\
    \ % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n   \
    \     }\n        num /= 10;\n    }\n    return std::make_tuple(even, odd);", " \
    \   long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    long temp = num;\n    while (temp\
    \ != 0) {\n        long rem = temp % 10;\n        temp /= 10;\n        if (rem\
    \ % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n   \
    \     }\n    }\n    return std::make_tuple(even, odd);", "    long even = 0, odd\
    \ = 0;\n    long long temp = num;\n    while (temp > 0) {\n        long digit\
    \ = temp % 10;\n        if (digit % 2 == 0) {\n            even++;\n        }\
    \ else {\n            odd++;\n        }\n        temp /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    long temp =\
    \ num;\n    while (temp != 0) {\n        long digit = temp % 10;\n        if (digit\
    \ % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n   \
    \     }\n        temp /= 10;\n    }\n    return std::make_tuple(even, odd);",
  "    long even = 0, odd = 0;\n    long temp = num;\n    while (temp != 0) {\n  \
    \      long digit = temp % 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n        temp /= 10;\n    }\n\
    \    return std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    while\
    \ (num) {\n        if (num % 2 == 0) {\n            even++;\n        }\n     \
    \   else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    while (num >\
    \ 0) {\n        long temp = num % 10;\n        if (temp % 2 == 0) {\n        \
    \    even++;\n        }\n        else {\n            odd++;\n        }\n     \
    \   num = num / 10;\n    }\n    return std::make_tuple(even, odd);", "    long\
    \ even = 0, odd = 0;\n    while (num > 0) {\n        long temp = num % 10;\n \
    \       if (temp % 2 == 0) {\n            even++;\n        }\n        else {\n\
    \            odd++;\n        }\n        num = num / 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        long rem =\
    \ num % 10;\n        num = num / 10;\n        if (rem % 2 == 0) {\n          \
    \  even++;\n        } else {\n            odd++;\n        }\n    }\n    return\
    \ std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    while (num)\
    \ {\n        if (num % 2 == 0) {\n            even++;\n        }\n        else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        long digit\
    \ = num % 10;\n        num = num / 10;\n        if (digit % 2 == 0) {\n      \
    \      even++;\n        } else {\n            odd++;\n        }\n    }\n    return\
    \ std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    long temp =\
    \ num;\n    while (temp) {\n        long remainder = temp % 10;\n        if (remainder\
    \ % 2 == 0) {\n            even++;\n        }\n        else {\n            odd++;\n\
    \        }\n        temp /= 10;\n    }\n    return std::make_tuple(even, odd);",
  "    long even = 0, odd = 0;\n    while (num > 0) {\n        if (num % 2 == 0) {\n\
    \            even++;\n        }\n        else {\n            odd++;\n        }\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even, odd);", "    long\
    \ even = 0, odd = 0;\n    long temp = num;\n    while (temp != 0) {\n        long\
    \ rem = temp % 10;\n        temp /= 10;\n        if (rem % 2 == 0) {\n       \
    \     even++;\n        } else {\n            odd++;\n        }\n    }\n    return\
    \ std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    long temp =\
    \ num;\n    while (temp > 0) {\n        long digit = temp % 10;\n        if (digit\
    \ % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n   \
    \     }\n        temp /= 10;\n    }\n    return std::make_tuple(even, odd);",
  "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num %\
    \ 10;\n        num = num / 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        long digit\
    \ = num % 10;\n        num /= 10;\n        if (digit % 2 == 0) {\n           \
    \ even++;\n        } else {\n            odd++;\n        }\n    }\n    return\
    \ std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    long temp =\
    \ num;\n    while (temp != 0) {\n        long digit = temp % 10;\n        if (digit\
    \ % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n   \
    \     }\n        temp /= 10;\n    }\n    return std::make_tuple(even, odd);",
  "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num %\
    \ 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        }\n\
    \        else {\n            odd++;\n        }\n        num /= 10;\n    }\n  \
    \  return std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    while\
    \ (num > 0) {\n        long digit = num % 10;\n        num = num / 10;\n     \
    \   if (digit % 2 == 0) {\n            even++;\n        } else {\n           \
    \ odd++;\n        }\n    }\n    return std::make_tuple(even, odd);", "    long\
    \ even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n    \
    \    if (digit % 2 == 0) {\n            even++;\n        } else {\n          \
    \  odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        long temp =\
    \ num % 10;\n        if (temp % 2 == 0) {\n            even++;\n        }\n  \
    \      else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    while (num)\
    \ {\n        long digit = num % 10;\n        if (digit % 2 == 0) {\n         \
    \   even++;\n        } else {\n            odd++;\n        }\n        num /= 10;\n\
    \    }\n    return std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n\
    \    long temp = num;\n    while (temp != 0) {\n        long digit = temp % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        temp /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num > 0) {\n        long temp\
    \ = num % 10;\n        if (temp % 2 == 0) {\n            even++;\n        }\n\
    \        else {\n            odd++;\n        }\n        num = num / 10;\n    }\n\
    \    return std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    long\
    \ long temp = num;\n    while (temp != 0) {\n        long long remainder = temp\
    \ % 10;\n        if (remainder % 2 == 0) {\n            even++;\n        }\n \
    \       else {\n            odd++;\n        }\n        temp /= 10;\n    }\n  \
    \  return std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    long\
    \ temp = num;\n    while (temp != 0) {\n        long digit = temp % 10;\n    \
    \    if (digit % 2 == 0) {\n            even++;\n        } else {\n          \
    \  odd++;\n        }\n        temp /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        }\n\
    \        else {\n            odd++;\n        }\n        num /= 10;\n    }\n  \
    \  return std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    while\
    \ (num) {\n        long digit = num % 10;\n        if (digit % 2 == 0) {\n   \
    \         even++;\n        }\n        else {\n            odd++;\n        }\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even, odd);", "    long\
    \ even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n    \
    \    num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n        }\
    \ else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        if (num % 2\
    \ == 0) {\n            even++;\n        }\n        else {\n            odd++;\n\
    \        }\n        num /= 10;\n    }\n    return std::make_tuple(even, odd);",
  "    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n    \
    \    } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        long digit\
    \ = num % 10;\n        num = num / 10;\n        if (digit % 2 == 0) {\n      \
    \      even++;\n        } else {\n            odd++;\n        }\n    }\n    return\
    \ std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    while (num >\
    \ 0) {\n        long digit = num % 10;\n        if (digit % 2 == 0) {\n      \
    \      even++;\n        } else {\n            odd++;\n        }\n        num /=\
    \ 10;\n    }\n    return std::make_tuple(even, odd);", "    long even = 0, odd\
    \ = 0;\n    while (num) {\n        long digit = num % 10;\n        num = num /\
    \ 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n    }\n    return std::make_tuple(even, odd);",
  "    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n    \
    \    } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    long temp = num;\n    while (temp\
    \ > 0) {\n        long digit = temp % 10;\n        if (digit % 2 == 0) {\n   \
    \         even++;\n        } else {\n            odd++;\n        }\n        temp\
    \ /= 10;\n    }\n    return std::make_tuple(even, odd);", "    long even = 0,\
    \ odd = 0;\n    while (num > 0) {\n        long digit = num % 10;\n        even\
    \ = even + digit % 2 == 0 ? even + digit : even;\n        odd = odd + digit %\
    \ 2 == 1 ? odd + digit : odd;\n        num = num / 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num > 0) {\n        long rem\
    \ = num % 10;\n        even = even * 10 + rem;\n        odd = odd + 1;\n     \
    \   num = num / 10;\n    }\n    return std::make_tuple(even, odd);", "    long\
    \ even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n    \
    \    if (digit % 2 == 0) {\n            even++;\n        } else {\n          \
    \  odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    long temp = num;\n    while (temp\
    \ > 0) {\n        if (temp % 2 == 0) {\n            even++;\n        }\n     \
    \   else {\n            odd++;\n        }\n        temp /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    while (num)\
    \ {\n        long digit = num % 10;\n        if (digit % 2 == 0) {\n         \
    \   even++;\n        } else {\n            odd++;\n        }\n        num /= 10;\n\
    \    }\n    return std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n\
    \    long temp = num;\n    while (temp != 0) {\n        long digit = temp % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        temp /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        long digit\
    \ = num % 10;\n        num /= 10;\n        if (digit % 2 == 0) {\n           \
    \ even++;\n        } else {\n            odd++;\n        }\n    }\n    return\
    \ std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    long digit;\n\
    \    while (num > 0) {\n        digit = num % 10;\n        num = num / 10;\n \
    \       if (digit % 2 == 0) {\n            even++;\n        } else {\n       \
    \     odd++;\n        }\n    }\n    return std::make_tuple(even, odd);", "   \
    \ long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num > 0) {\n        long rem\
    \ = num % 10;\n        even = even + rem % 2 == 0 ? even + rem : even;\n     \
    \   odd = odd + rem % 2 == 1 ? odd + rem : odd;\n        num = num / 10;\n   \
    \ }\n    return std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n \
    \   while (num) {\n        long temp = num % 10;\n        if (temp % 2 == 0) {\n\
    \            even++;\n        }\n        else {\n            odd++;\n        }\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even, odd);", "    long\
    \ even = 0, odd = 0;\n    while (num) {\n        if (num % 2 == 0) {\n       \
    \     even++;\n        } else {\n            odd++;\n        }\n        num /=\
    \ 10;\n    }\n    return std::make_tuple(even, odd);", "    long even = 0, odd\
    \ = 0;\n    while (num) {\n        if (num % 2 == 0) {\n            even++;\n\
    \        }\n        else {\n            odd++;\n        }\n        num /= 10;\n\
    \    }\n    return std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n\
    \    while (num > 0) {\n        long digit = num % 10;\n        if (digit % 2\
    \ == 0) {\n            even++;\n        } else {\n            odd++;\n       \
    \ }\n        num /= 10;\n    }\n    return std::make_tuple(even, odd);", "   \
    \ long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        long digit\
    \ = num % 10;\n        num /= 10;\n        if (digit % 2 == 0) {\n           \
    \ even++;\n        } else {\n            odd++;\n        }\n    }\n    return\
    \ std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    long long remain\
    \ = num;\n    while (remain > 0) {\n        remain = num % 10;\n        if (remain\
    \ % 2 == 0) {\n            even++;\n        }\n        else {\n            odd++;\n\
    \        }\n        num = num / 10;\n    }\n    return std::make_tuple(even, odd);",
  "    long even = 0, odd = 0;\n    while (num) {\n        long temp = num % 10;\n\
    \        if (temp % 2 == 0) {\n            even++;\n        } else {\n       \
    \     odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        long digit\
    \ = num % 10;\n        num /= 10;\n        if (digit % 2 == 0) {\n           \
    \ even++;\n        } else {\n            odd++;\n        }\n    }\n    return\
    \ std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    while (num)\
    \ {\n        if (num % 2 == 0) {\n            even++;\n        }\n        else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        long temp =\
    \ num % 10;\n        even = even + temp * temp;\n        odd = odd + temp;\n \
    \       num /= 10;\n    }\n    return std::make_tuple(even, odd);", "    long\
    \ even = 0, odd = 0;\n    while (num) {\n        long rem = num % 10;\n      \
    \  even = even + rem;\n        odd = odd + rem / 10;\n        num = num / 10;\n\
    \    }\n    return std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n\
    \    while (num) {\n        long rem = num % 10;\n        num = num / 10;\n  \
    \      if (rem % 2 == 0) {\n            even++;\n        } else {\n          \
    \  odd++;\n        }\n    }\n    return std::make_tuple(even, odd);", "    long\
    \ even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    long digit = num % 10;\n    while\
    \ (digit > 0) {\n        even = even + 1;\n        digit = digit / 10;\n    }\n\
    \    digit = num / 10;\n    while (digit > 0) {\n        odd = odd + 1;\n    \
    \    digit = digit / 10;\n    }\n    return std::make_tuple(even, odd);", "  \
    \  long even = 0, odd = 0;\n    while (num) {\n        if (num % 2 == 0) {\n \
    \           even++;\n        }\n        else {\n            odd++;\n        }\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even, odd);", "    long\
    \ even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n    \
    \    if (digit % 2 == 0) {\n            even++;\n        } else {\n          \
    \  odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    long temp = num;\n    while (temp\
    \ != 0) {\n        long rem = temp % 10;\n        even = even * 10 + rem;\n  \
    \      temp = temp / 10;\n    }\n    temp = num;\n    while (temp != 0) {\n  \
    \      long rem = temp % 10;\n        odd = odd * 10 + rem;\n        temp = temp\
    \ / 10;\n    }\n    return std::make_tuple(even, odd);", "    long even = 0, odd\
    \ = 0;\n    while (num > 0) {\n        long temp = num % 10;\n        if (temp\
    \ % 2 == 0) {\n            even++;\n        }\n        else {\n            odd++;\n\
    \        }\n        num = num / 10;\n    }\n    return std::make_tuple(even, odd);",
  "    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n    \
    \    } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num > 0) {\n        long temp\
    \ = num % 10;\n        if (temp % 2 == 0) {\n            even++;\n        }\n\
    \        else {\n            odd++;\n        }\n        num /= 10;\n    }\n  \
    \  return std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    while\
    \ (num) {\n        long digit = num % 10;\n        if (digit % 2 == 0) {\n   \
    \         even++;\n        } else {\n            odd++;\n        }\n        num\
    \ /= 10;\n    }\n    return std::make_tuple(even, odd);", "    long even = 0,\
    \ odd = 0;\n    while (num > 0) {\n        long digit = num % 10;\n        num\
    \ = num / 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n    }\n    return std::make_tuple(even, odd);",
  "    long even = 0, odd = 0;\n    long temp = num;\n    while (temp > 0) {\n   \
    \     if (temp % 2 == 0) {\n            even++;\n        }\n        else {\n \
    \           odd++;\n        }\n        temp /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        if (num % 2\
    \ == 0) {\n            even++;\n        }\n        else {\n            odd++;\n\
    \        }\n        num /= 10;\n    }\n    return std::make_tuple(even, odd);",
  "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num %\
    \ 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    long temp = num;\n    while (temp\
    \ != 0) {\n        long digit = temp % 10;\n        if (digit % 2 == 0) {\n  \
    \          even++;\n        } else {\n            odd++;\n        }\n        temp\
    \ /= 10;\n    }\n    return std::make_tuple(even, odd);", "    long even = 0,\
    \ odd = 0;\n    while (num) {\n        long temp = num % 10;\n        if (temp\
    \ % 2 == 0) {\n            even++;\n        }\n        else {\n            odd++;\n\
    \        }\n        num /= 10;\n    }\n    return std::make_tuple(even, odd);",
  "    long even = 0, odd = 0;\n    while (num) {\n        long temp = num % 10;\n\
    \        if (temp % 2 == 0) {\n            even++;\n        }\n        else {\n\
    \            odd++;\n        }\n        num = num / 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        long temp =\
    \ num % 10;\n        if (temp % 2 == 0) {\n            even++;\n        }\n  \
    \      else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    while (num)\
    \ {\n        long rem = num % 10;\n        num = num / 10;\n        if (rem %\
    \ 2 == 0) {\n            even++;\n        } else {\n            odd++;\n     \
    \   }\n    }\n    return std::make_tuple(even, odd);", "    long even = 0, odd\
    \ = 0;\n    long temp = num;\n    while (temp > 0) {\n        long digit = temp\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        temp /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    long temp = num;\n    while (temp\
    \ != 0) {\n        long digit = temp % 10;\n        if (digit % 2 == 0) {\n  \
    \          even++;\n        } else {\n            odd++;\n        }\n        temp\
    \ /= 10;\n    }\n    return std::make_tuple(even, odd);", "    long even = 0,\
    \ odd = 0;\n    long digit;\n    while (num) {\n        digit = num % 10;\n  \
    \      if (digit % 2 == 0) {\n            even++;\n        } else {\n        \
    \    odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        if (num % 2\
    \ == 0) {\n            even++;\n        }\n        else {\n            odd++;\n\
    \        }\n        num /= 10;\n    }\n    return std::make_tuple(even, odd);",
  "    long even = 0, odd = 0;\n    long temp = num;\n    while (temp != 0) {\n  \
    \      long rem = temp % 10;\n        even = even * 10 + rem;\n        temp =\
    \ temp / 10;\n    }\n    temp = num;\n    while (temp != 0) {\n        long rem\
    \ = temp % 10;\n        odd = odd * 10 + rem;\n        temp = temp / 10;\n   \
    \ }\n    return std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n \
    \   while (num) {\n        if (num % 2 == 0) {\n            even++;\n        }\n\
    \        else {\n            odd++;\n        }\n        num /= 10;\n    }\n  \
    \  return std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    while\
    \ (num) {\n        long digit = num % 10;\n        if (digit % 2 == 0) {\n   \
    \         even++;\n        } else {\n            odd++;\n        }\n        num\
    \ /= 10;\n    }\n    return std::make_tuple(even, odd);", "    long even = 0,\
    \ odd = 0;\n    while (num) {\n        long digit = num % 10;\n        num /=\
    \ 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n    }\n    return std::make_tuple(even, odd);",
  "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num %\
    \ 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    long temp = num;\n    while (temp)\
    \ {\n        if (temp % 2 == 0) {\n            even++;\n        }\n        else\
    \ {\n            odd++;\n        }\n        temp /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    long temp = num;\n    while (temp\
    \ != 0) {\n        long digit = temp % 10;\n        if (digit % 2 == 0) {\n  \
    \          even++;\n        } else {\n            odd++;\n        }\n        temp\
    \ /= 10;\n    }\n    return std::make_tuple(even, odd);", "    long even = 0,\
    \ odd = 0;\n    while (num > 0) {\n        long digit = num % 10;\n        if\
    \ (digit % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n\
    \        }\n        num /= 10;\n    }\n    return std::make_tuple(even, odd);",
  "    long even = 0, odd = 0;\n    while (num > 0) {\n        long temp = num % 10;\n\
    \        even = even + temp;\n        odd = odd + temp * 2;\n        num = num\
    \ / 10;\n    }\n    return std::make_tuple(even, odd);", "    long even = 0, odd\
    \ = 0;\n    while (num) {\n        if (num % 2 == 0) {\n            even++;\n\
    \        }\n        else {\n            odd++;\n        }\n        num /= 10;\n\
    \    }\n    return std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n\
    \    while (num > 0) {\n        long digit = num % 10;\n        num = num / 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n    }\n    return std::make_tuple(even, odd);", "  \
    \  long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    long temp = num;\n    while (temp\
    \ > 0) {\n        long digit = temp % 10;\n        if (digit % 2 == 0) {\n   \
    \         even++;\n        } else {\n            odd++;\n        }\n        temp\
    \ /= 10;\n    }\n    return std::make_tuple(even, odd);", "    long even = 0,\
    \ odd = 0;\n    while (num) {\n        long tmp = num % 10;\n        if (tmp %\
    \ 2 == 0) {\n            even++;\n        }\n        else {\n            odd++;\n\
    \        }\n        num /= 10;\n    }\n    return std::make_tuple(even, odd);",
  "    long even = 0, odd = 0;\n    long temp = num;\n    while (temp != 0) {\n  \
    \      long remainder = temp % 10;\n        temp = temp / 10;\n        if (remainder\
    \ % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n   \
    \     }\n    }\n    return std::make_tuple(even, odd);", "    long even = 0, odd\
    \ = 0;\n    long temp = num;\n    while (temp > 0) {\n        if (temp % 2 ==\
    \ 0) {\n            even++;\n        }\n        else {\n            odd++;\n \
    \       }\n        temp /= 10;\n    }\n    return std::make_tuple(even, odd);",
  "    long even = 0, odd = 0;\n    long temp = num;\n    while (temp != 0) {\n  \
    \      long digit = temp % 10;\n        even = even + digit % 2;\n        odd\
    \ = odd + digit / 2;\n        temp = temp / 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        if (num % 2\
    \ == 0) {\n            even++;\n        }\n        else {\n            odd++;\n\
    \        }\n        num /= 10;\n    }\n    return std::make_tuple(even, odd);",
  "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num %\
    \ 10;\n        num = num / 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    long temp = num;\n    while (temp\
    \ != 0) {\n        long digit = temp % 10;\n        if (digit % 2 == 0) {\n  \
    \          even++;\n        } else {\n            odd++;\n        }\n        temp\
    \ /= 10;\n    }\n    return std::make_tuple(even, odd);", "    long even = 0,\
    \ odd = 0;\n    while (num > 0) {\n        long digit = num % 10;\n        if\
    \ (digit % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n\
    \        }\n        num /= 10;\n    }\n    return std::make_tuple(even, odd);",
  "    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit\
    \ = num % 10;\n        num /= 10;\n        if (digit % 2 == 0) {\n           \
    \ even++;\n        } else {\n            odd++;\n        }\n    }\n    return\
    \ std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    while (num)\
    \ {\n        long digit = num % 10;\n        num /= 10;\n        if (digit % 2\
    \ == 0) {\n            even++;\n        } else {\n            odd++;\n       \
    \ }\n    }\n    return std::make_tuple(even, odd);", "    long even = 0, odd =\
    \ 0;\n    long long remainder = num;\n    while (remainder > 0) {\n        long\
    \ long temp = remainder % 10;\n        remainder = remainder / 10;\n        if\
    \ (temp % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n\
    \        }\n    }\n    return std::make_tuple(even, odd);", "    long even = 0,\
    \ odd = 0;\n    while (num) {\n        long temp = num % 10;\n        even = even\
    \ + temp;\n        odd = odd + temp;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        if (num % 2\
    \ == 0) {\n            even++;\n        } else {\n            odd++;\n       \
    \ }\n        num /= 10;\n    }\n    return std::make_tuple(even, odd);", "   \
    \ long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    long temp = num;\n    while (temp\
    \ > 0) {\n        if (temp % 2 == 0) {\n            even++;\n        }\n     \
    \   else {\n            odd++;\n        }\n        temp /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    while (num >\
    \ 0) {\n        long temp = num % 10;\n        if (temp % 2 == 0) {\n        \
    \    even++;\n        }\n        else {\n            odd++;\n        }\n     \
    \   num = num / 10;\n    }\n    return std::make_tuple(even, odd);", "    long\
    \ even = 0, odd = 0;\n    while (num) {\n        long rem = num % 10;\n      \
    \  num = num / 10;\n        if (rem % 2 == 0) {\n            even++;\n       \
    \ } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        long temp =\
    \ num % 10;\n        if (temp % 2 == 0) {\n            even++;\n        }\n  \
    \      else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    while (num)\
    \ {\n        if (num % 2 == 0) {\n            even++;\n        }\n        else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    long temp = num;\n    while (temp\
    \ != 0) {\n        long rem = temp % 10;\n        even = even + rem;\n       \
    \ temp = temp / 10;\n    }\n    temp = num;\n    while (temp != 0) {\n       \
    \ long rem = temp % 10;\n        odd = odd + rem;\n        temp = temp / 10;\n\
    \    }\n    return std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n\
    \    long digit = num;\n    while (digit > 0) {\n        digit = digit / 10;\n\
    \        even++;\n    }\n    while (digit > 0) {\n        digit = digit / 10;\n\
    \        odd++;\n    }\n    return std::make_tuple(even, odd);", "    long even\
    \ = 0, odd = 0;\n    long temp = num;\n    while (temp > 0) {\n        long digit\
    \ = temp % 10;\n        if (digit % 2 == 0) {\n            even++;\n        }\
    \ else {\n            odd++;\n        }\n        temp /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    long temp =\
    \ num;\n    while (temp != 0) {\n        long rem = temp % 10;\n        temp /=\
    \ 10;\n        if (rem % 2 == 0) {\n            even++;\n        } else {\n  \
    \          odd++;\n        }\n    }\n    return std::make_tuple(even, odd);",
  "    long even = 0, odd = 0;\n    while (num > 0) {\n        if (num % 2 == 0) {\n\
    \            even++;\n        }\n        else {\n            odd++;\n        }\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even, odd);", "    long\
    \ even = 0, odd = 0;\n    long temp = num;\n    while (temp != 0) {\n        long\
    \ digit = temp % 10;\n        if (digit % 2 == 0) {\n            even++;\n   \
    \     } else {\n            odd++;\n        }\n        temp = temp / 10;\n   \
    \ }\n    return std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n \
    \   while (num) {\n        if (num % 2 == 0) {\n            even++;\n        }\n\
    \        else {\n            odd++;\n        }\n        num /= 10;\n    }\n  \
    \  return std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    long\
    \ temp = num;\n    while (temp != 0) {\n        long digit = temp % 10;\n    \
    \    if (digit % 2 == 0) {\n            even++;\n        }\n        else {\n \
    \           odd++;\n        }\n        temp /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    long temp = num;\n    while (temp\
    \ != 0) {\n        long rem = temp % 10;\n        if (rem % 2 == 0) {\n      \
    \      even++;\n        } else {\n            odd++;\n        }\n        temp\
    \ /= 10;\n    }\n    return std::make_tuple(even, odd);", "    long even = 0,\
    \ odd = 0;\n    while (num) {\n        if (num % 2 == 0) {\n            even++;\n\
    \        }\n        else {\n            odd++;\n        }\n        num /= 10;\n\
    \    }\n    return std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n\
    \    while (num) {\n        long temp = num % 10;\n        even = even * 10 +\
    \ temp;\n        odd = odd + temp;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        long temp =\
    \ num % 10;\n        if (temp % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        if (num % 2\
    \ == 0) {\n            even++;\n        }\n        else {\n            odd++;\n\
    \        }\n        num /= 10;\n    }\n    return std::make_tuple(even, odd);",
  "    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n    \
    \    } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    long temp = num;\n    while (temp\
    \ != 0) {\n        long digit = temp % 10;\n        if (digit % 2 == 0) {\n  \
    \          even++;\n        } else {\n            odd++;\n        }\n        temp\
    \ /= 10;\n    }\n    return std::make_tuple(even, odd);", "    long even = 0,\
    \ odd = 0;\n    long temp = num;\n    while (temp != 0) {\n        long digit\
    \ = temp % 10;\n        if (digit % 2 == 0) {\n            even++;\n        }\
    \ else {\n            odd++;\n        }\n        temp /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    while (num >\
    \ 0) {\n        long digit = num % 10;\n        if (digit % 2 == 0) {\n      \
    \      even++;\n        }\n        else {\n            odd++;\n        }\n   \
    \     num /= 10;\n    }\n    return std::make_tuple(even, odd);", "    long even\
    \ = 0, odd = 0;\n    while (num > 0) {\n        if (num % 2 == 0) {\n        \
    \    even++;\n        }\n        else {\n            odd++;\n        }\n     \
    \   num /= 10;\n    }\n    return std::make_tuple(even, odd);", "    long even\
    \ = 0, odd = 0;\n    while (num) {\n        long rem = num % 10;\n        num\
    \ = num / 10;\n        if (rem % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n    }\n    return std::make_tuple(even, odd);",
  "    long even = 0, odd = 0;\n    while (num) {\n        if (num % 2 == 0) {\n \
    \           even++;\n        }\n        else {\n            odd++;\n        }\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even, odd);", "    long\
    \ even = 0, odd = 0;\n    while (num > 0) {\n        long remainder = num % 10;\n\
    \        if (remainder % 2 == 0) {\n            even++;\n        }\n        else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        long temp =\
    \ num % 10;\n        if (temp % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);"]
stop_tokens:
- "\n}"

name: HumanEval_27_flip_case
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
  \ lowercase characters to uppercase and uppercase to lowercase.\nstd::string flip_case(std::string\
  \ string) {\n"
tests: "}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
  \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
  These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
  \ ENDS\"));\n}\n"
completions: ["    std::string s = string;\n    for (size_t i = 0; i < s.length();\
    \ i++) {\n        if (s[i] == 'a')\n            s[i] = 'A';\n        else if (s[i]\
    \ == 'A')\n            s[i] = 'a';\n    }\n    return s;", "    std::string result\
    \ = string;\n    for (size_t i = 0; i < result.size(); i++) {\n        if (result[i]\
    \ >= 'a' && result[i] <= 'z') {\n            result[i] = result[i] - 32;\n   \
    \     }\n        else if (result[i] >= 'A' && result[i] <= 'Z') {\n          \
    \  result[i] = result[i] + 32;\n        }\n    }\n    return result;", "    std::string\
    \ result = string;\n    for (size_t i = 0; i < result.size(); i++) {\n       \
    \ if (result[i] >= 'a' && result[i] <= 'z') {\n            result[i] = result[i]\
    \ - 32;\n        }\n        else if (result[i] >= 'A' && result[i] <= 'Z') {\n\
    \            result[i] = result[i] + 32;\n        }\n    }\n    return result;",
  "    string s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n       \
    \ if (s[i] == 'a') {\n            s[i] = 'A';\n        } else if (s[i] == 'b')\
    \ {\n            s[i] = 'B';\n        } else if (s[i] == 'c') {\n            s[i]\
    \ = 'C';\n        } else if (s[i] == 'd') {\n            s[i] = 'D';\n       \
    \ } else if (s[i] == 'e') {\n            s[i] = 'E';\n        } else if (s[i]\
    \ == 'f') {\n            s[i] = 'F';\n        } else if (s[i] == 'g') {\n    \
    \        s[i] = 'G';\n        } else if (s[i] == 'h') {\n            s[i] = 'H';\n\
    \        } else if (s[i] == 'i') {\n            s[i] = 'I';\n        } else if\
    \ (s[i] == 'j') {\n            s[i] = 'J';\n        } else if (s[i] == 'k') {\n\
    \            s[i] = 'K';\n        } else if (s[i] == 'l') {\n            s[i]\
    \ = 'L';\n        } else if (s[i] == 'm') {\n            s[i] = 'M';\n       \
    \ } else if (s[i] == 'n') {\n            s[i] = 'N';\n        } else if (s[i]\
    \ == 'o') {\n            s[i] = 'O';\n        } else if (s[i] == 'p') {\n    \
    \        s[i] = 'P';\n        } else if (s[i] == 'q') {\n            s[i] = 'Q';\n\
    \        } else if (s[i] == 'r') {\n            s[i] = 'R';\n        } else if\
    \ (s[i] == 's') {\n            s[i] = 'S';\n        } else if (s[i] == 't') {\n\
    \            s[i] = 'T';\n        } else if (s[i] == 'u') {\n            s[i]\
    \ = 'U';\n        } else if (s[i] == 'v') {\n            s[i] = 'V';\n       \
    \ } else if (s[i] == 'w') {\n            s[i] = 'W';\n        } else if (s[i]\
    \ == 'x') {\n            s[i] = 'X';\n        } else if (s[i] == 'y') {\n    \
    \        s[i] = 'Y';\n        } else if (s[i] == 'z') {\n            s[i] = 'Z';\n\
    \        }\n    }\n    return s;", "    std::string new_string;\n    for (auto\
    \ &c : string) {\n        if (c >= 'a' && c <= 'z') {\n            new_string\
    \ += toupper(c);\n        } else if (c >= 'A' && c <= 'Z') {\n            new_string\
    \ += tolower(c);\n        } else {\n            new_string += c;\n        }\n\
    \    }\n    return new_string;", "    std::string result;\n    for (auto &c :\
    \ string) {\n        if (c >= 'a' && c <= 'z')\n            result += toupper(c);\n\
    \        else if (c >= 'A' && c <= 'Z')\n            result += tolower(c);\n \
    \       else\n            result += c;\n    }\n    return result;", "    std::string\
    \ result = string;\n    for (size_t i = 0; i < result.size(); i++) {\n       \
    \ if (result[i] >= 'a' && result[i] <= 'z')\n            result[i] = result[i]\
    \ - 32;\n        else if (result[i] >= 'A' && result[i] <= 'Z')\n            result[i]\
    \ = result[i] + 32;\n    }\n    return result;", "    std::string flipped_string;\n\
    \    for (auto &c : string) {\n        if (c == 'a' || c == 'A') {\n         \
    \   c = 'A';\n        } else if (c == 'b' || c == 'B') {\n            c = 'B';\n\
    \        } else if (c == 'c' || c == 'C') {\n            c = 'C';\n        } else\
    \ if (c == 'd' || c == 'D') {\n            c = 'D';\n        } else if (c == 'e'\
    \ || c == 'E') {\n            c = 'E';\n        } else if (c == 'f' || c == 'F')\
    \ {\n            c = 'F';\n        } else if (c == 'g' || c == 'G') {\n      \
    \      c = 'G';\n        } else if (c == 'h' || c == 'H') {\n            c = 'H';\n\
    \        } else if (c == 'i' || c == 'I') {\n            c = 'I';\n        } else\
    \ if (c == 'j' || c == 'J') {\n            c = 'J';\n        } else if (c == 'k'\
    \ || c == 'K') {\n            c = 'K';\n        } else if (c == 'l' || c == 'L')\
    \ {\n            c = 'L';\n        } else if (c == 'm' || c == 'M') {\n      \
    \      c = 'M';\n        } else if (c == 'n' || c == 'N') {\n            c = 'N';\n\
    \        } else if (c == 'o' || c == 'O') {\n            c = 'O';\n        } else\
    \ if (c == 'p' || c == 'P') {\n            c = 'P';\n        } else if (c == 'q'\
    \ || c == 'Q') {\n            c = 'Q';\n        } else if (c == 'r' || c == 'R')\
    \ {\n            c = 'R';\n        } else if (c == 's' || c == 'S') {\n      \
    \      c = 'S';\n        } else if (c == 't' || c == 'T') {\n            c = 'T';\n\
    \        } else if (c == 'u' || c == 'U') {\n            c = 'U';\n        } else\
    \ if (c == 'v' || c == 'V') {\n            c = 'V';\n        } else if (c == 'w'\
    \ || c == 'W') {\n            c = 'W';\n        } else if (c == 'x' || c == 'X')\
    \ {\n            c = 'X';\n        } else if (c == 'y' || c == 'Y') {\n      \
    \      c = 'Y';\n        } else if (c == 'z' || c == 'Z') {\n            c = 'Z';\n\
    \        } else if (c == 'A' || c == 'a') {\n            c = 'a';\n        } else\
    \ if (c == 'B' || c == 'b') {\n            c = 'b';\n        } else if (c == 'C'\
    \ || c == 'c') {\n            c = 'c';\n        } else if (c == 'D' || c == 'd')\
    \ {\n            c = 'd';\n        } else if (c == 'E' || c == 'e') {\n      \
    \      c = 'e';\n        } else if (c == 'F' || c == 'f') {\n            c = 'f';\n\
    \        } else if (c == 'G' || c == 'g') {\n            c = 'g';\n        } else\
    \ if (c == 'H", "    std::string result = string;\n    for (size_t i = 0; i <\
    \ result.size(); i++) {\n        if (result[i] >= 'a' && result[i] <= 'z') {\n\
    \            result[i] = result[i] - 32;\n        }\n        if (result[i] >=\
    \ 'A' && result[i] <= 'Z') {\n            result[i] = result[i] + 32;\n      \
    \  }\n    }\n    return result;", "    std::string result;\n    for (auto &c :\
    \ string) {\n        if (c >= 'a' && c <= 'z')\n            c += 'A' - 'a';\n\
    \        else if (c >= 'A' && c <= 'Z')\n            c += 'a' - 'A';\n       \
    \ else\n            result += c;\n    }\n    return result;", "    std::string\
    \ new_string;\n    for (auto &c : string) {\n        if (c >= 'a' && c <= 'z')\
    \ {\n            new_string += c + ('A' - 'a');\n        } else if (c >= 'A' &&\
    \ c <= 'Z') {\n            new_string += c + ('a' - 'A');\n        } else {\n\
    \            new_string += c;\n        }\n    }\n    return new_string;", "  \
    \  std::string result = string;\n    for (auto &c : result) {\n        if (c >=\
    \ 'a' && c <= 'z') {\n            c += 'A' - 'a';\n        } else if (c >= 'A'\
    \ && c <= 'Z') {\n            c += 'a' - 'A';\n        }\n    }\n    return result;",
  "    std::string s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n  \
    \      if (s[i] == 'a') {\n            s[i] = 'A';\n        } else if (s[i] ==\
    \ 'b') {\n            s[i] = 'B';\n        } else if (s[i] == 'c') {\n       \
    \     s[i] = 'C';\n        } else if (s[i] == 'd') {\n            s[i] = 'D';\n\
    \        } else if (s[i] == 'e') {\n            s[i] = 'E';\n        } else if\
    \ (s[i] == 'f') {\n            s[i] = 'F';\n        } else if (s[i] == 'g') {\n\
    \            s[i] = 'G';\n        } else if (s[i] == 'h') {\n            s[i]\
    \ = 'H';\n        } else if (s[i] == 'i') {\n            s[i] = 'I';\n       \
    \ } else if (s[i] == 'j') {\n            s[i] = 'J';\n        } else if (s[i]\
    \ == 'k') {\n            s[i] = 'K';\n        } else if (s[i] == 'l') {\n    \
    \        s[i] = 'L';\n        } else if (s[i] == 'm') {\n            s[i] = 'M';\n\
    \        } else if (s[i] == 'n') {\n            s[i] = 'N';\n        } else if\
    \ (s[i] == 'o') {\n            s[i] = 'O';\n        } else if (s[i] == 'p') {\n\
    \            s[i] = 'P';\n        } else if (s[i] == 'q') {\n            s[i]\
    \ = 'Q';\n        } else if (s[i] == 'r') {\n            s[i] = 'R';\n       \
    \ } else if (s[i] == 's') {\n            s[i] = 'S';\n        } else if (s[i]\
    \ == 't') {\n            s[i] = 'T';\n        } else if (s[i] == 'u') {\n    \
    \        s[i] = 'U';\n        } else if (s[i] == 'v') {\n            s[i] = 'V';\n\
    \        } else if (s[i] == 'w') {\n            s[i] = 'W';\n        } else if\
    \ (s[i] == 'x') {\n            s[i] = 'X';\n        } else if (s[i] == 'y') {\n\
    \            s[i] = 'Y';\n        } else if (s[i] == 'z') {\n            s[i]\
    \ = 'Z';\n        }\n    }\n    return s;", "    std::string result = string;\n\
    \    for (size_t i = 0; i < result.size(); i++) {\n        if (result[i] >= 'a'\
    \ && result[i] <= 'z') {\n            result[i] = result[i] - 32;\n        }\n\
    \        else if (result[i] >= 'A' && result[i] <= 'Z') {\n            result[i]\
    \ = result[i] + 32;\n        }\n    }\n    return result;", "    std::string new_string\
    \ = \"\";\n    for (auto &c : string) {\n        if (c >= 'a' && c <= 'z') {\n\
    \            new_string += toupper(c);\n        } else if (c >= 'A' && c <= 'Z')\
    \ {\n            new_string += tolower(c);\n        } else {\n            new_string\
    \ += c;\n        }\n    }\n    return new_string;", "    string s = string;\n\
    \    for (size_t i = 0; i < s.size(); i++) {\n        if (s[i] == 'a') {\n   \
    \         s[i] = 'A';\n        } else if (s[i] == 'b') {\n            s[i] = 'B';\n\
    \        } else if (s[i] == 'c') {\n            s[i] = 'C';\n        } else if\
    \ (s[i] == 'd') {\n            s[i] = 'D';\n        } else if (s[i] == 'e') {\n\
    \            s[i] = 'E';\n        } else if (s[i] == 'f') {\n            s[i]\
    \ = 'F';\n        } else if (s[i] == 'g') {\n            s[i] = 'G';\n       \
    \ } else if (s[i] == 'h') {\n            s[i] = 'H';\n        } else if (s[i]\
    \ == 'i') {\n            s[i] = 'I';\n        } else if (s[i] == 'j') {\n    \
    \        s[i] = 'J';\n        } else if (s[i] == 'k') {\n            s[i] = 'K';\n\
    \        } else if (s[i] == 'l') {\n            s[i] = 'L';\n        } else if\
    \ (s[i] == 'm') {\n            s[i] = 'M';\n        } else if (s[i] == 'n') {\n\
    \            s[i] = 'N';\n        } else if (s[i] == 'o') {\n            s[i]\
    \ = 'O';\n        } else if (s[i] == 'p') {\n            s[i] = 'P';\n       \
    \ } else if (s[i] == 'q') {\n            s[i] = 'Q';\n        } else if (s[i]\
    \ == 'r') {\n            s[i] = 'R';\n        } else if (s[i] == 's') {\n    \
    \        s[i] = 'S';\n        } else if (s[i] == 't') {\n            s[i] = 'T';\n\
    \        } else if (s[i] == 'u') {\n            s[i] = 'U';\n        } else if\
    \ (s[i] == 'v') {\n            s[i] = 'V';\n        } else if (s[i] == 'w') {\n\
    \            s[i] = 'W';\n        } else if (s[i] == 'x') {\n            s[i]\
    \ = 'X';\n        } else if (s[i] == 'y') {\n            s[i] = 'Y';\n       \
    \ } else if (s[i] == 'z') {\n            s[i] = 'Z';\n        }\n    }\n    return\
    \ s;", "    std::string new_string = \"\";\n    for (auto &c : string) {\n   \
    \     if (c >= 'a' && c <= 'z') {\n            c += 'A' - 'a';\n        } else\
    \ if (c >= 'A' && c <= 'Z') {\n            c += 'a' - 'A';\n        }\n      \
    \  new_string += c;\n    }\n    return new_string;", "    std::string result =\
    \ string;\n    for (auto &c : result) {\n        if (c >= 'a' && c <= 'z') {\n\
    \            c += 'A' - 'a';\n        } else if (c >= 'A' && c <= 'Z') {\n   \
    \         c += 'a' - 'A';\n        }\n    }\n    return result;", "    std::string\
    \ new_string;\n    for(auto &c: string) {\n        if(c >= 'a' && c <= 'z') {\n\
    \            c += 'A' - 'a';\n        }\n        else if(c >= 'A' && c <= 'Z')\
    \ {\n            c += 'a' - 'A';\n        }\n        new_string += c;\n    }\n\
    \    return new_string;", "    std::string s = string;\n    for (auto &c : s)\
    \ {\n        if (c >= 'a' && c <= 'z') {\n            c += 'A' - 'a';\n      \
    \  } else if (c >= 'A' && c <= 'Z') {\n            c += 'a' - 'A';\n        }\n\
    \    }\n    return s;", "    std::string new_string;\n    for (auto &c : string)\
    \ {\n        if (c >= 'a' && c <= 'z') {\n            new_string += toupper(c);\n\
    \        } else if (c >= 'A' && c <= 'Z') {\n            new_string += tolower(c);\n\
    \        } else {\n            new_string += c;\n        }\n    }\n    return\
    \ new_string;", "    std::string s = string;\n    for (size_t i = 0; i < s.length();\
    \ i++) {\n        if (s[i] >= 'a' && s[i] <= 'z') {\n            s[i] = s[i] -\
    \ 32;\n        } else if (s[i] >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i]\
    \ + 32;\n        }\n    }\n    return s;", "    std::string result = string;\n\
    \    for (size_t i = 0; i < result.size(); i++) {\n        if (result[i] >= 'a'\
    \ && result[i] <= 'z') {\n            result[i] = result[i] - 32;\n        }\n\
    \        if (result[i] >= 'A' && result[i] <= 'Z') {\n            result[i] =\
    \ result[i] + 32;\n        }\n    }\n    return result;", "    std::string s =\
    \ string;\n    for (size_t i = 0; i < s.size(); i++) {\n        if (s[i] >= 'a'\
    \ && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        }\n        if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] - 32;\n        }\n    }\n\
    \    return s;", "    std::string result = string;\n    for (size_t i = 0; i <\
    \ result.size(); i++) {\n        if (result[i] >= 'a' && result[i] <= 'z') {\n\
    \            result[i] = result[i] - 32;\n        }\n        else if (result[i]\
    \ >= 'A' && result[i] <= 'Z') {\n            result[i] = result[i] + 32;\n   \
    \     }\n    }\n    return result;", "    std::string s = string;\n    for (auto\
    \ &c : s) {\n        if (c >= 'a' && c <= 'z') {\n            c += 'A' - 'a';\n\
    \        } else if (c >= 'A' && c <= 'Z') {\n            c += 'a' - 'A';\n   \
    \     }\n    }\n    return s;", "    std::string s = string;\n    for (auto &c\
    \ : s) {\n        if (c >= 'a' && c <= 'z') {\n            c = c + 'A' - 'a';\n\
    \        } else if (c >= 'A' && c <= 'Z') {\n            c = c + 'a' - 'A';\n\
    \        }\n    }\n    return s;", "    std::string s = string;\n    for (size_t\
    \ i = 0; i < s.length(); i++) {\n        if (s[i] >= 'a' && s[i] <= 'z') {\n \
    \           s[i] = s[i] - 32;\n        }\n        if (s[i] >= 'A' && s[i] <= 'Z')\
    \ {\n            s[i] = s[i] - 32;\n        }\n    }\n    return s;", "    string\
    \ s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ == 'a')\n            s[i] = 'A';\n        else if (s[i] == 'b')\n          \
    \  s[i] = 'B';\n        else if (s[i] == 'c')\n            s[i] = 'C';\n     \
    \   else if (s[i] == 'd')\n            s[i] = 'D';\n        else if (s[i] == 'e')\n\
    \            s[i] = 'E';\n        else if (s[i] == 'f')\n            s[i] = 'F';\n\
    \        else if (s[i] == 'g')\n            s[i] = 'G';\n        else if (s[i]\
    \ == 'h')\n            s[i] = 'H';\n        else if (s[i] == 'i')\n          \
    \  s[i] = 'I';\n        else if (s[i] == 'j')\n            s[i] = 'J';\n     \
    \   else if (s[i] == 'k')\n            s[i] = 'K';\n        else if (s[i] == 'l')\n\
    \            s[i] = 'L';\n        else if (s[i] == 'm')\n            s[i] = 'M';\n\
    \        else if (s[i] == 'n')\n            s[i] = 'N';\n        else if (s[i]\
    \ == 'o')\n            s[i] = 'O';\n        else if (s[i] == 'p')\n          \
    \  s[i] = 'P';\n        else if (s[i] == 'q')\n            s[i] = 'Q';\n     \
    \   else if (s[i] == 'r')\n            s[i] = 'R';\n        else if (s[i] == 's')\n\
    \            s[i] = 'S';\n        else if (s[i] == 't')\n            s[i] = 'T';\n\
    \        else if (s[i] == 'u')\n            s[i] = 'U';\n        else if (s[i]\
    \ == 'v')\n            s[i] = 'V';\n        else if (s[i] == 'w')\n          \
    \  s[i] = 'W';\n        else if (s[i] == 'x')\n            s[i] = 'X';\n     \
    \   else if (s[i] == 'y')\n            s[i] = 'Y';\n        else if (s[i] == 'z')\n\
    \            s[i] = 'Z';\n    }\n    return s;", "    std::string result = string;\n\
    \    for (size_t i = 0; i < result.size(); i++) {\n        if (result[i] >= 'a'\
    \ && result[i] <= 'z') {\n            result[i] = result[i] - 32;\n        }\n\
    \        if (result[i] >= 'A' && result[i] <= 'Z') {\n            result[i] =\
    \ result[i] + 32;\n        }\n    }\n    return result;", "    std::string flipped\
    \ = \"\";\n    for (auto &c : string) {\n        if (c == 'a' || c == 'e' || c\
    \ == 'i' || c == 'o' || c == 'u') {\n            flipped += 'A';\n        } else\
    \ if (c == 'b' || c == 'c' || c == 'd' || c == 'f' || c == 'g' || c == 'h' ||\
    \ c == 'j' || c == 'k' || c == 'l' || c == 'm' || c == 'n' || c == 'p' || c ==\
    \ 'q' || c == 'r' || c == 's' || c == 't' || c == 'v' || c == 'w' || c == 'x'\
    \ || c == 'y' || c == 'z') {\n            flipped += 'B';\n        } else if (c\
    \ == 'A' || c == 'B' || c == 'C' || c == 'D' || c == 'E' || c == 'F' || c == 'G'\
    \ || c == 'H' || c == 'I' || c == 'J' || c == 'K' || c == 'L' || c == 'M' || c\
    \ == 'N' || c == 'P' || c == 'Q' || c == 'R' || c == 'S' || c == 'T' || c == 'V'\
    \ || c == 'W' || c == 'X' || c == 'Y' || c == 'Z') {\n            flipped += 'a';\n\
    \        } else if (c == 'B' || c == 'C' || c == 'D' || c == 'E' || c == 'F' ||\
    \ c == 'G' || c == 'H' || c == 'I' || c == 'J' || c == 'K' || c == 'L' || c ==\
    \ 'M' || c == 'N' || c == 'P' || c == 'Q' || c == 'R' || c == 'S' || c == 'T'\
    \ || c == 'V' || c == 'W' || c == 'X' || c == 'Y' || c == 'Z') {\n           \
    \ flipped += 'b';\n        } else if (c == 'C' || c == 'D' || c == 'E' || c ==\
    \ 'F' || c == 'G' || c == 'H' || c == 'I' || c == 'J' || c == 'K' || c == 'L'\
    \ || c == 'M' || c == 'N' || c == 'P' || c == 'Q' || c == 'R' || c == 'S' || c\
    \ == 'T' || c == 'V' || c == 'W' || c == 'X' || c == 'Y' || c == 'Z') {\n    \
    \        flipped += 'c';\n        } else if (c == 'D' || c == 'E' || c == 'F'\
    \ || c == 'G' || c == 'H' || c == 'I' || c == 'J' || c == 'K' || c == 'L' || c\
    \ == 'M' || c == 'N' || c == 'P' || c == 'Q' || c == 'R' || c == 'S' || c == 'T'\
    \ || c == 'V' || c == 'W' || c", "    string s = string;\n    for (auto &c : s)\
    \ {\n        if (c >= 'a' && c <= 'z') {\n            c ^= 32;\n        }\n  \
    \      else if (c >= 'A' && c <= 'Z') {\n            c ^= 32;\n        }\n   \
    \ }\n    return s;", "    std::string flipped_string;\n    for (auto &c : string)\
    \ {\n        if (c >= 'a' && c <= 'z') {\n            flipped_string += toupper(c);\n\
    \        } else if (c >= 'A' && c <= 'Z') {\n            flipped_string += tolower(c);\n\
    \        } else {\n            flipped_string += c;\n        }\n    }\n    return\
    \ flipped_string;", "    std::string result = string;\n    for (size_t i = 0;\
    \ i < result.size(); i++) {\n        if (result[i] >= 'a' && result[i] <= 'z')\
    \ {\n            result[i] = 'A';\n        } else if (result[i] >= 'A' && result[i]\
    \ <= 'Z') {\n            result[i] = 'a';\n        }\n    }\n    return result;",
  "    std::string result;\n    for (auto &c : string) {\n        if (c >= 'a' &&\
    \ c <= 'z') {\n            result += toupper(c);\n        } else if (c >= 'A'\
    \ && c <= 'Z') {\n            result += tolower(c);\n        } else {\n      \
    \      result += c;\n        }\n    }\n    return result;", "    std::string s\
    \ = string;\n    for (auto &c : s) {\n        if (c >= 'a' && c <= 'z') {\n  \
    \          c = c - 32;\n        } else if (c >= 'A' && c <= 'Z') {\n         \
    \   c = c + 32;\n        }\n    }\n    return s;", "    std::string flipped_string;\n\
    \    for (auto &c : string) {\n        if (c == 'a' || c == 'e' || c == 'i' ||\
    \ c == 'o' || c == 'u') {\n            flipped_string += 'A';\n        } else\
    \ if (c == 'b' || c == 'c' || c == 'd' || c == 'f' || c == 'g' || c == 'h' ||\
    \ c == 'j' || c == 'k' || c == 'l' || c == 'm' || c == 'n' || c == 'p' || c ==\
    \ 'q' || c == 'r' || c == 's' || c == 't' || c == 'v' || c == 'w' || c == 'x'\
    \ || c == 'y' || c == 'z') {\n            flipped_string += 'B';\n        } else\
    \ if (c == 'A' || c == 'B' || c == 'C' || c == 'D' || c == 'E' || c == 'F' ||\
    \ c == 'G' || c == 'H' || c == 'I' || c == 'J' || c == 'K' || c == 'L' || c ==\
    \ 'M' || c == 'N' || c == 'P' || c == 'Q' || c == 'R' || c == 'S' || c == 'T'\
    \ || c == 'V' || c == 'W' || c == 'X' || c == 'Y' || c == 'Z') {\n           \
    \ flipped_string += 'a';\n        } else if (c == 'B' || c == 'C' || c == 'D'\
    \ || c == 'E' || c == 'F' || c == 'G' || c == 'H' || c == 'I' || c == 'J' || c\
    \ == 'K' || c == 'L' || c == 'M' || c == 'N' || c == 'P' || c == 'Q' || c == 'R'\
    \ || c == 'S' || c == 'T' || c == 'V' || c == 'W' || c == 'X' || c == 'Y' || c\
    \ == 'Z') {\n            flipped_string += 'b';\n        } else if (c == 'C' ||\
    \ c == 'D' || c == 'E' || c == 'F' || c == 'G' || c == 'H' || c == 'I' || c ==\
    \ 'J' || c == 'K' || c == 'L' || c == 'M' || c == 'N' || c == 'P' || c == 'Q'\
    \ || c == 'R' || c == 'S' || c == 'T' || c == 'V' || c == 'W' || c == 'X' || c\
    \ == 'Y' || c == 'Z') {\n            flipped_string += 'c';\n        } else if\
    \ (c == 'D' || c == 'E' || c == 'F' || c == 'G' || c == 'H' || c == 'I' || c ==\
    \ 'J' || c == 'K' || c == 'L' || c == 'M' || c == 'N' || c == 'P' || c == 'Q'\
    \ || c == 'R' || c == 'S' || c == 'T' || c == 'V' || ", "    std::string flipped_string;\n\
    \    for (auto &c : string) {\n        if (c >= 'a' && c <= 'z') {\n         \
    \   flipped_string += toupper(c);\n        } else if (c >= 'A' && c <= 'Z') {\n\
    \            flipped_string += tolower(c);\n        } else {\n            flipped_string\
    \ += c;\n        }\n    }\n    return flipped_string;", "    std::string result\
    \ = string;\n    for (size_t i = 0; i < result.size(); i++) {\n        if (result[i]\
    \ >= 'a' && result[i] <= 'z') {\n            result[i] = 'A';\n        } else\
    \ if (result[i] >= 'A' && result[i] <= 'Z') {\n            result[i] = 'a';\n\
    \        }\n    }\n    return result;", "    std::string s = string;\n    for\
    \ (auto &c : s) {\n        if (c >= 'a' && c <= 'z') {\n            c += 'A' -\
    \ 'a';\n        } else if (c >= 'A' && c <= 'Z') {\n            c += 'a' - 'A';\n\
    \        }\n    }\n    return s;", "    std::string result;\n    for (auto &c\
    \ : string) {\n        if (c >= 'a' && c <= 'z') {\n            result += toupper(c);\n\
    \        } else if (c >= 'A' && c <= 'Z') {\n            result += tolower(c);\n\
    \        } else {\n            result += c;\n        }\n    }\n    return result;",
  "    std::string result = string;\n    for (auto &c : result) {\n        if (c >=\
    \ 'a' && c <= 'z') {\n            c += 'A' - 'a';\n        } else if (c >= 'A'\
    \ && c <= 'Z') {\n            c += 'a' - 'A';\n        }\n    }\n    return result;",
  "    std::string new_string;\n    for (auto &c : string) {\n        if (c >= 'a'\
    \ && c <= 'z') {\n            new_string += toupper(c);\n        } else if (c\
    \ >= 'A' && c <= 'Z') {\n            new_string += tolower(c);\n        } else\
    \ {\n            new_string += c;\n        }\n    }\n    return new_string;",
  "    std::string s = string;\n    for (auto &c : s) {\n        if (c >= 'a' && c\
    \ <= 'z') {\n            c = c - 32;\n        } else if (c >= 'A' && c <= 'Z')\
    \ {\n            c = c + 32;\n        }\n    }\n    return s;", "    std::string\
    \ result = string;\n    for (auto &c : result) {\n        if (c >= 'A' && c <=\
    \ 'Z') {\n            c ^= ('A' - 'a');\n        }\n        else if (c >= 'a'\
    \ && c <= 'z') {\n            c ^= ('a' - 'A');\n        }\n    }\n    return\
    \ result;", "    std::string flipped_string;\n    for (auto &c : string) {\n \
    \       if (c >= 'a' && c <= 'z') {\n            c = c - 32;\n        }\n    \
    \    else if (c >= 'A' && c <= 'Z') {\n            c = c + 32;\n        }\n  \
    \      flipped_string += c;\n    }\n    return flipped_string;", "    std::string\
    \ result = string;\n    for (auto &c : result) {\n        if (c >= 'a' && c <=\
    \ 'z') {\n            c += 'A' - 'a';\n        } else if (c >= 'A' && c <= 'Z')\
    \ {\n            c += 'a' - 'A';\n        }\n    }\n    return result;", "   \
    \ std::string flipped_string;\n    for (int i = 0; i < string.length(); i++) {\n\
    \        if (string[i] >= 'a' && string[i] <= 'z') {\n            flipped_string\
    \ += string[i] - 'a' + 'A';\n        } else if (string[i] >= 'A' && string[i]\
    \ <= 'Z') {\n            flipped_string += string[i] - 'A' + 'a';\n        } else\
    \ {\n            flipped_string += string[i];\n        }\n    }\n    return flipped_string;",
  "    std::string s = string;\n    for (auto &c : s) {\n        if (c >= 'a' && c\
    \ <= 'z') {\n            c += 'A' - 'a';\n        } else if (c >= 'A' && c <=\
    \ 'Z') {\n            c += 'a' - 'A';\n        }\n    }\n    return s;", "   \
    \ string s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n        if\
    \ (s[i] == 'a' || s[i] == 'A') {\n            s[i] = 'A';\n        } else if (s[i]\
    \ == 'b' || s[i] == 'B') {\n            s[i] = 'B';\n        } else if (s[i] ==\
    \ 'c' || s[i] == 'C') {\n            s[i] = 'C';\n        } else if (s[i] == 'd'\
    \ || s[i] == 'D') {\n            s[i] = 'D';\n        } else if (s[i] == 'e' ||\
    \ s[i] == 'E') {\n            s[i] = 'E';\n        } else if (s[i] == 'f' || s[i]\
    \ == 'F') {\n            s[i] = 'F';\n        } else if (s[i] == 'g' || s[i] ==\
    \ 'G') {\n            s[i] = 'G';\n        } else if (s[i] == 'h' || s[i] == 'H')\
    \ {\n            s[i] = 'H';\n        } else if (s[i] == 'i' || s[i] == 'I') {\n\
    \            s[i] = 'I';\n        } else if (s[i] == 'j' || s[i] == 'J') {\n \
    \           s[i] = 'J';\n        } else if (s[i] == 'k' || s[i] == 'K') {\n  \
    \          s[i] = 'K';\n        } else if (s[i] == 'l' || s[i] == 'L') {\n   \
    \         s[i] = 'L';\n        } else if (s[i] == 'm' || s[i] == 'M') {\n    \
    \        s[i] = 'M';\n        } else if (s[i] == 'n' || s[i] == 'N') {\n     \
    \       s[i] = 'N';\n        } else if (s[i] == 'o' || s[i] == 'O') {\n      \
    \      s[i] = 'O';\n        } else if (s[i] == 'p' || s[i] == 'P') {\n       \
    \     s[i] = 'P';\n        } else if (s[i] == 'q' || s[i] == 'Q') {\n        \
    \    s[i] = 'Q';\n        } else if (s[i] == 'r' || s[i] == 'R') {\n         \
    \   s[i] = 'R';\n        } else if (s[i] == 's' || s[i] == 'S') {\n          \
    \  s[i] = 'S';\n        } else if (s[i] == 't' || s[i] == 'T') {\n           \
    \ s[i] = 'T';\n        } else if (s[i] == 'u' || s[i] == 'U') {\n            s[i]\
    \ = 'U';\n        } else if (s[i] == 'v' || s[i] == 'V') {\n            s[i] =\
    \ 'V';\n        } else if (s[i] == 'w' || s[i] == 'W') {\n            s[i] = 'W';\n\
    \        } else if (s[i] == 'x' || s[i] == 'X') {\n            s[i] = 'X';\n \
    \       } else if (s[i] == 'y' || s[i] == 'Y') {\n            s[i] = 'Y';\n  \
    \      } else if (s[i] == 'z' || s[i] == 'Z') {\n            s[i] = 'Z';\n   \
    \     }\n    }\n    return s;", "    std::string new_string;\n    for (auto &c\
    \ : string) {\n        if (c >= 'a' && c <= 'z') {\n            new_string +=\
    \ toupper(c);\n        } else if (c >= 'A' && c <= 'Z') {\n            new_string\
    \ += tolower(c);\n        } else {\n            new_string += c;\n        }\n\
    \    }\n    return new_string;", "    string flipped_string;\n    for (int i =\
    \ 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <=\
    \ 'z') {\n            flipped_string += string[i];\n        }\n        else if\
    \ (string[i] >= 'A' && string[i] <= 'Z') {\n            flipped_string += string[i];\n\
    \        }\n        else {\n            flipped_string += toupper(string[i]);\n\
    \        }\n    }\n    return flipped_string;", "    std::string flipped_string;\n\
    \    for (auto &c : string) {\n        if (c == 'a' || c == 'e' || c == 'i' ||\
    \ c == 'o' || c == 'u') {\n            flipped_string += 'A';\n        } else\
    \ if (c == 'b' || c == 'c' || c == 'd' || c == 'f' || c == 'g' || c == 'h' ||\
    \ c == 'j' || c == 'k' || c == 'l' || c == 'm' || c == 'n' || c == 'p' || c ==\
    \ 'q' || c == 'r' || c == 's' || c == 't' || c == 'v' || c == 'w' || c == 'x'\
    \ || c == 'y' || c == 'z') {\n            flipped_string += 'B';\n        } else\
    \ if (c == 'A' || c == 'B' || c == 'C' || c == 'D' || c == 'E' || c == 'F' ||\
    \ c == 'G' || c == 'H' || c == 'I' || c == 'J' || c == 'K' || c == 'L' || c ==\
    \ 'M' || c == 'N' || c == 'P' || c == 'Q' || c == 'R' || c == 'S' || c == 'T'\
    \ || c == 'V' || c == 'W' || c == 'X' || c == 'Y' || c == 'Z') {\n           \
    \ flipped_string += 'a';\n        } else if (c == 'B' || c == 'C' || c == 'D'\
    \ || c == 'E' || c == 'F' || c == 'G' || c == 'H' || c == 'I' || c == 'J' || c\
    \ == 'K' || c == 'L' || c == 'M' || c == 'N' || c == 'P' || c == 'Q' || c == 'R'\
    \ || c == 'S' || c == 'T' || c == 'V' || c == 'W' || c == 'X' || c == 'Y' || c\
    \ == 'Z') {\n            flipped_string += 'b';\n        } else if (c == 'C' ||\
    \ c == 'D' || c == 'E' || c == 'F' || c == 'G' || c == 'H' || c == 'I' || c ==\
    \ 'J' || c == 'K' || c == 'L' || c == 'M' || c == 'N' || c == 'P' || c == 'Q'\
    \ || c == 'R' || c == 'S' || c == 'T' || c == 'V' || c == 'W' || c == 'X' || c\
    \ == 'Y' || c == 'Z') {\n            flipped_string += 'c';\n        } else if\
    \ (c == 'D' || c == 'E' || c == 'F' || c == 'G' || c == 'H' || c == 'I' || c ==\
    \ 'J' || c == 'K' || c == 'L' || c == 'M' || c == 'N' || c == 'P' || c == 'Q'\
    \ || c == 'R' || c == 'S' || c == 'T' || c == 'V' || ", "    std::string result\
    \ = string;\n    for (auto &c : result) {\n        if (c >= 'a' && c <= 'z') {\n\
    \            c += 'A' - 'a';\n        }\n        else if (c >= 'A' && c <= 'Z')\
    \ {\n            c += 'a' - 'A';\n        }\n    }\n    return result;", "   \
    \ string s = string;\n    for (auto &c : s) {\n        if (c >= 'a' && c <= 'z')\n\
    \            c = c - 'a' + 'A';\n        else if (c >= 'A' && c <= 'Z')\n    \
    \        c = c - 'A' + 'a';\n    }\n    return s;", "    std::string result =\
    \ string;\n    for (auto &c : result) {\n        if (c >= 'a' && c <= 'z') {\n\
    \            c ^= 32;\n        }\n        else if (c >= 'A' && c <= 'Z') {\n \
    \           c ^= 32;\n        }\n    }\n    return result;", "    std::string\
    \ result = string;\n    for (auto &c : result) {\n        if (c >= 'a' && c <=\
    \ 'z') {\n            c += 'A' - 'a';\n        } else if (c >= 'A' && c <= 'Z')\
    \ {\n            c += 'a' - 'A';\n        }\n    }\n    return result;", "   \
    \ std::string flipped = \"\";\n    for (char c : string) {\n        if (c == 'a'\
    \ || c == 'A') {\n            flipped += 'A';\n        } else if (c == 'b' ||\
    \ c == 'B') {\n            flipped += 'B';\n        } else if (c == 'c' || c ==\
    \ 'C') {\n            flipped += 'C';\n        } else if (c == 'd' || c == 'D')\
    \ {\n            flipped += 'D';\n        } else if (c == 'e' || c == 'E') {\n\
    \            flipped += 'E';\n        } else if (c == 'f' || c == 'F') {\n   \
    \         flipped += 'F';\n        } else if (c == 'g' || c == 'G') {\n      \
    \      flipped += 'G';\n        } else if (c == 'h' || c == 'H') {\n         \
    \   flipped += 'H';\n        } else if (c == 'i' || c == 'I') {\n            flipped\
    \ += 'I';\n        } else if (c == 'j' || c == 'J') {\n            flipped +=\
    \ 'J';\n        } else if (c == 'k' || c == 'K') {\n            flipped += 'K';\n\
    \        } else if (c == 'l' || c == 'L') {\n            flipped += 'L';\n   \
    \     } else if (c == 'm' || c == 'M') {\n            flipped += 'M';\n      \
    \  } else if (c == 'n' || c == 'N') {\n            flipped += 'N';\n        }\
    \ else if (c == 'o' || c == 'O') {\n            flipped += 'O';\n        } else\
    \ if (c == 'p' || c == 'P') {\n            flipped += 'P';\n        } else if\
    \ (c == 'q' || c == 'Q') {\n            flipped += 'Q';\n        } else if (c\
    \ == 'r' || c == 'R') {\n            flipped += 'R';\n        } else if (c ==\
    \ 's' || c == 'S') {\n            flipped += 'S';\n        } else if (c == 't'\
    \ || c == 'T') {\n            flipped += 'T';\n        } else if (c == 'u' ||\
    \ c == 'U') {\n            flipped += 'U';\n        } else if (c == 'v' || c ==\
    \ 'V') {\n            flipped += 'V';\n        } else if (c == 'w' || c == 'W')\
    \ {\n            flipped += 'W';\n        } else if (c == 'x' || c == 'X') {\n\
    \            flipped += 'X';\n        } else if (c == 'y' || c == 'Y') {\n   \
    \         flipped += 'Y';\n        } else if (c == 'z' || c == 'Z') {\n      \
    \      flipped += 'Z';\n        } else {\n            flipped += c;\n        }\n\
    \    }\n    return flipped;", "    std::string result;\n    for (auto &c : string)\
    \ {\n        if (c >= 'a' && c <= 'z') {\n            result += toupper(c);\n\
    \        } else if (c >= 'A' && c <= 'Z') {\n            result += tolower(c);\n\
    \        } else {\n            result += c;\n        }\n    }\n    return result;",
  "    std::string flipped_string;\n    for (auto &c : string) {\n        if (c >=\
    \ 'a' && c <= 'z') {\n            c = c + 'A' - 'a';\n        } else if (c >=\
    \ 'A' && c <= 'Z') {\n            c = c + 'a' - 'A';\n        }\n        flipped_string\
    \ += c;\n    }\n    return flipped_string;", "    std::string s = string;\n  \
    \  for (size_t i = 0; i < s.length(); i++) {\n        if (s[i] == 'a') {\n   \
    \         s[i] = 'A';\n        } else if (s[i] == 'b') {\n            s[i] = 'B';\n\
    \        } else if (s[i] == 'c') {\n            s[i] = 'C';\n        } else if\
    \ (s[i] == 'd') {\n            s[i] = 'D';\n        } else if (s[i] == 'e') {\n\
    \            s[i] = 'E';\n        } else if (s[i] == 'f') {\n            s[i]\
    \ = 'F';\n        } else if (s[i] == 'g') {\n            s[i] = 'G';\n       \
    \ } else if (s[i] == 'h') {\n            s[i] = 'H';\n        } else if (s[i]\
    \ == 'i') {\n            s[i] = 'I';\n        } else if (s[i] == 'j') {\n    \
    \        s[i] = 'J';\n        } else if (s[i] == 'k') {\n            s[i] = 'K';\n\
    \        } else if (s[i] == 'l') {\n            s[i] = 'L';\n        } else if\
    \ (s[i] == 'm') {\n            s[i] = 'M';\n        } else if (s[i] == 'n') {\n\
    \            s[i] = 'N';\n        } else if (s[i] == 'o') {\n            s[i]\
    \ = 'O';\n        } else if (s[i] == 'p') {\n            s[i] = 'P';\n       \
    \ } else if (s[i] == 'q') {\n            s[i] = 'Q';\n        } else if (s[i]\
    \ == 'r') {\n            s[i] = 'R';\n        } else if (s[i] == 's') {\n    \
    \        s[i] = 'S';\n        } else if (s[i] == 't') {\n            s[i] = 'T';\n\
    \        } else if (s[i] == 'u') {\n            s[i] = 'U';\n        } else if\
    \ (s[i] == 'v') {\n            s[i] = 'V';\n        } else if (s[i] == 'w') {\n\
    \            s[i] = 'W';\n        } else if (s[i] == 'x') {\n            s[i]\
    \ = 'X';\n        } else if (s[i] == 'y') {\n            s[i] = 'Y';\n       \
    \ } else if (s[i] == 'z') {\n            s[i] = 'Z';\n        }\n    }\n    return\
    \ s;", "    std::string result;\n    for (auto &c : string) {\n        switch\
    \ (c) {\n            case 'a':\n            case 'b':\n            case 'c':\n\
    \            case 'd':\n            case 'e':\n            case 'f':\n       \
    \     case 'g':\n            case 'h':\n            case 'i':\n            case\
    \ 'j':\n            case 'k':\n            case 'l':\n            case 'm':\n\
    \            case 'n':\n            case 'o':\n            case 'p':\n       \
    \     case 'q':\n            case 'r':\n            case 's':\n            case\
    \ 't':\n            case 'u':\n            case 'v':\n            case 'w':\n\
    \            case 'x':\n            case 'y':\n            case 'z':\n       \
    \     case 'A':\n            case 'B':\n            case 'C':\n            case\
    \ 'D':\n            case 'E':\n            case 'F':\n            case 'G':\n\
    \            case 'H':\n            case 'I':\n            case 'J':\n       \
    \     case 'K':\n            case 'L':\n            case 'M':\n            case\
    \ 'N':\n            case 'O':\n            case 'P':\n            case 'Q':\n\
    \            case 'R':\n            case 'S':\n            case 'T':\n       \
    \     case 'U':\n            case 'V':\n            case 'W':\n            case\
    \ 'X':\n            case 'Y':\n            case 'Z':\n            case '0':\n\
    \            case '1':\n            case '2':\n            case '3':\n       \
    \     case '4':\n            case '5':\n            case '6':\n            case\
    \ '7':\n            case '8':\n            case '9':\n                result +=\
    \ c;\n                break;\n            default:\n                result +=\
    \ std::toupper(c);\n        }\n    }\n    return result;", "    std::string s\
    \ = string;\n    for (size_t i = 0; i < s.length(); i++) {\n        if (s[i] ==\
    \ 'a') {\n            s[i] = 'A';\n        } else if (s[i] == 'b') {\n       \
    \     s[i] = 'B';\n        } else if (s[i] == 'c') {\n            s[i] = 'C';\n\
    \        } else if (s[i] == 'd') {\n            s[i] = 'D';\n        } else if\
    \ (s[i] == 'e') {\n            s[i] = 'E';\n        } else if (s[i] == 'f') {\n\
    \            s[i] = 'F';\n        } else if (s[i] == 'g') {\n            s[i]\
    \ = 'G';\n        } else if (s[i] == 'h') {\n            s[i] = 'H';\n       \
    \ } else if (s[i] == 'i') {\n            s[i] = 'I';\n        } else if (s[i]\
    \ == 'j') {\n            s[i] = 'J';\n        } else if (s[i] == 'k') {\n    \
    \        s[i] = 'K';\n        } else if (s[i] == 'l') {\n            s[i] = 'L';\n\
    \        } else if (s[i] == 'm') {\n            s[i] = 'M';\n        } else if\
    \ (s[i] == 'n') {\n            s[i] = 'N';\n        } else if (s[i] == 'o') {\n\
    \            s[i] = 'O';\n        } else if (s[i] == 'p') {\n            s[i]\
    \ = 'P';\n        } else if (s[i] == 'q') {\n            s[i] = 'Q';\n       \
    \ } else if (s[i] == 'r') {\n            s[i] = 'R';\n        } else if (s[i]\
    \ == 's') {\n            s[i] = 'S';\n        } else if (s[i] == 't') {\n    \
    \        s[i] = 'T';\n        } else if (s[i] == 'u') {\n            s[i] = 'U';\n\
    \        } else if (s[i] == 'v') {\n            s[i] = 'V';\n        } else if\
    \ (s[i] == 'w') {\n            s[i] = 'W';\n        } else if (s[i] == 'x') {\n\
    \            s[i] = 'X';\n        } else if (s[i] == 'y') {\n            s[i]\
    \ = 'Y';\n        } else if (s[i] == 'z') {\n            s[i] = 'Z';\n       \
    \ }\n    }\n    return s;", "    std::string result = string;\n    for (size_t\
    \ i = 0; i < result.size(); i++) {\n        if (result[i] >= 'a' && result[i]\
    \ <= 'z') {\n            result[i] = result[i] - 32;\n        }\n        else\
    \ if (result[i] >= 'A' && result[i] <= 'Z') {\n            result[i] = result[i]\
    \ + 32;\n        }\n    }\n    return result;", "    std::string flipped_string;\n\
    \    for (auto &c : string) {\n        if (c >= 'a' && c <= 'z') {\n         \
    \   c = c + 32;\n        }\n        else if (c >= 'A' && c <= 'Z') {\n       \
    \     c = c - 32;\n        }\n        flipped_string.push_back(c);\n    }\n  \
    \  return flipped_string;", "    std::string result = string;\n    for (size_t\
    \ i = 0; i < result.size(); i++) {\n        if (result[i] >= 'a' && result[i]\
    \ <= 'z') {\n            result[i] = result[i] - 32;\n        } else if (result[i]\
    \ >= 'A' && result[i] <= 'Z') {\n            result[i] = result[i] + 32;\n   \
    \     }\n    }\n    return result;", "    std::string s = string;\n    for (size_t\
    \ i = 0; i < s.length(); i++) {\n        if (s[i] == 'a') {\n            s[i]\
    \ = 'A';\n        } else if (s[i] == 'b') {\n            s[i] = 'B';\n       \
    \ } else if (s[i] == 'c') {\n            s[i] = 'C';\n        } else if (s[i]\
    \ == 'd') {\n            s[i] = 'D';\n        } else if (s[i] == 'e') {\n    \
    \        s[i] = 'E';\n        } else if (s[i] == 'f') {\n            s[i] = 'F';\n\
    \        } else if (s[i] == 'g') {\n            s[i] = 'G';\n        } else if\
    \ (s[i] == 'h') {\n            s[i] = 'H';\n        } else if (s[i] == 'i') {\n\
    \            s[i] = 'I';\n        } else if (s[i] == 'j') {\n            s[i]\
    \ = 'J';\n        } else if (s[i] == 'k') {\n            s[i] = 'K';\n       \
    \ } else if (s[i] == 'l') {\n            s[i] = 'L';\n        } else if (s[i]\
    \ == 'm') {\n            s[i] = 'M';\n        } else if (s[i] == 'n') {\n    \
    \        s[i] = 'N';\n        } else if (s[i] == 'o') {\n            s[i] = 'O';\n\
    \        } else if (s[i] == 'p') {\n            s[i] = 'P';\n        } else if\
    \ (s[i] == 'q') {\n            s[i] = 'Q';\n        } else if (s[i] == 'r') {\n\
    \            s[i] = 'R';\n        } else if (s[i] == 's') {\n            s[i]\
    \ = 'S';\n        } else if (s[i] == 't') {\n            s[i] = 'T';\n       \
    \ } else if (s[i] == 'u') {\n            s[i] = 'U';\n        } else if (s[i]\
    \ == 'v') {\n            s[i] = 'V';\n        } else if (s[i] == 'w') {\n    \
    \        s[i] = 'W';\n        } else if (s[i] == 'x') {\n            s[i] = 'X';\n\
    \        } else if (s[i] == 'y') {\n            s[i] = 'Y';\n        } else if\
    \ (s[i] == 'z') {\n            s[i] = 'Z';\n        }\n    }\n    return s;",
  "    std::string s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n  \
    \      if (s[i] == 'a') {\n            s[i] = 'A';\n        } else if (s[i] ==\
    \ 'b') {\n            s[i] = 'B';\n        } else if (s[i] == 'c') {\n       \
    \     s[i] = 'C';\n        } else if (s[i] == 'd') {\n            s[i] = 'D';\n\
    \        } else if (s[i] == 'e') {\n            s[i] = 'E';\n        } else if\
    \ (s[i] == 'f') {\n            s[i] = 'F';\n        } else if (s[i] == 'g') {\n\
    \            s[i] = 'G';\n        } else if (s[i] == 'h') {\n            s[i]\
    \ = 'H';\n        } else if (s[i] == 'i') {\n            s[i] = 'I';\n       \
    \ } else if (s[i] == 'j') {\n            s[i] = 'J';\n        } else if (s[i]\
    \ == 'k') {\n            s[i] = 'K';\n        } else if (s[i] == 'l') {\n    \
    \        s[i] = 'L';\n        } else if (s[i] == 'm') {\n            s[i] = 'M';\n\
    \        } else if (s[i] == 'n') {\n            s[i] = 'N';\n        } else if\
    \ (s[i] == 'o') {\n            s[i] = 'O';\n        } else if (s[i] == 'p') {\n\
    \            s[i] = 'P';\n        } else if (s[i] == 'q') {\n            s[i]\
    \ = 'Q';\n        } else if (s[i] == 'r') {\n            s[i] = 'R';\n       \
    \ } else if (s[i] == 's') {\n            s[i] = 'S';\n        } else if (s[i]\
    \ == 't') {\n            s[i] = 'T';\n        } else if (s[i] == 'u') {\n    \
    \        s[i] = 'U';\n        } else if (s[i] == 'v') {\n            s[i] = 'V';\n\
    \        } else if (s[i] == 'w') {\n            s[i] = 'W';\n        } else if\
    \ (s[i] == 'x') {\n            s[i] = 'X';\n        } else if (s[i] == 'y') {\n\
    \            s[i] = 'Y';\n        } else if (s[i] == 'z') {\n            s[i]\
    \ = 'Z';\n        }\n    }\n    return s;", "    std::string s = string;\n   \
    \ for (size_t i = 0; i < s.length(); i++) {\n        if (s[i] == 'a' || s[i] ==\
    \ 'A') {\n            s[i] = 'A';\n        } else if (s[i] == 'b' || s[i] == 'B')\
    \ {\n            s[i] = 'B';\n        } else if (s[i] == 'c' || s[i] == 'C') {\n\
    \            s[i] = 'C';\n        } else if (s[i] == 'd' || s[i] == 'D') {\n \
    \           s[i] = 'D';\n        } else if (s[i] == 'e' || s[i] == 'E') {\n  \
    \          s[i] = 'E';\n        } else if (s[i] == 'f' || s[i] == 'F') {\n   \
    \         s[i] = 'F';\n        } else if (s[i] == 'g' || s[i] == 'G') {\n    \
    \        s[i] = 'G';\n        } else if (s[i] == 'h' || s[i] == 'H') {\n     \
    \       s[i] = 'H';\n        } else if (s[i] == 'i' || s[i] == 'I') {\n      \
    \      s[i] = 'I';\n        } else if (s[i] == 'j' || s[i] == 'J') {\n       \
    \     s[i] = 'J';\n        } else if (s[i] == 'k' || s[i] == 'K') {\n        \
    \    s[i] = 'K';\n        } else if (s[i] == 'l' || s[i] == 'L') {\n         \
    \   s[i] = 'L';\n        } else if (s[i] == 'm' || s[i] == 'M') {\n          \
    \  s[i] = 'M';\n        } else if (s[i] == 'n' || s[i] == 'N') {\n           \
    \ s[i] = 'N';\n        } else if (s[i] == 'o' || s[i] == 'O') {\n            s[i]\
    \ = 'O';\n        } else if (s[i] == 'p' || s[i] == 'P') {\n            s[i] =\
    \ 'P';\n        } else if (s[i] == 'q' || s[i] == 'Q') {\n            s[i] = 'Q';\n\
    \        } else if (s[i] == 'r' || s[i] == 'R') {\n            s[i] = 'R';\n \
    \       } else if (s[i] == 's' || s[i] == 'S') {\n            s[i] = 'S';\n  \
    \      } else if (s[i] == 't' || s[i] == 'T') {\n            s[i] = 'T';\n   \
    \     } else if (s[i] == 'u' || s[i] == 'U') {\n            s[i] = 'U';\n    \
    \    } else if (s[i] == 'v' || s[i] == 'V') {\n            s[i] = 'V';\n     \
    \   } else if (s[i] == 'w' || s[i] == 'W') {\n            s[i] = 'W';\n      \
    \  } else if (s[i] == 'x' || s[i] == 'X') {\n            s[i] = 'X';\n       \
    \ } else if (s[i] == 'y' || s[i] == 'Y') {\n            s[i] = 'Y';\n        }\
    \ else if (s[i] == 'z' || s[i] == 'Z') {\n            s[i] = 'Z';\n        }\n\
    \    }\n    return s;", "    std::string result = string;\n    for (size_t i =\
    \ 0; i < result.size(); i++) {\n        if (result[i] >= 'a' && result[i] <= 'z')\
    \ {\n            result[i] = result[i] - 32;\n        } else if (result[i] >=\
    \ 'A' && result[i] <= 'Z') {\n            result[i] = result[i] + 32;\n      \
    \  }\n    }\n    return result;", "    std::string result;\n    for (auto &c :\
    \ string) {\n        if (c >= 'a' && c <= 'z') {\n            c += 'A' - 'a';\n\
    \        } else if (c >= 'A' && c <= 'Z') {\n            c += 'a' - 'A';\n   \
    \     } else {\n            c = c;\n        }\n        result += c;\n    }\n \
    \   return result;", "    string s = string;\n    for (size_t i = 0; i < s.length();\
    \ i++) {\n        if (s[i] == 'a' || s[i] == 'A') {\n            s[i] = 'A';\n\
    \        } else if (s[i] == 'b' || s[i] == 'B') {\n            s[i] = 'B';\n \
    \       } else if (s[i] == 'c' || s[i] == 'C') {\n            s[i] = 'C';\n  \
    \      } else if (s[i] == 'd' || s[i] == 'D') {\n            s[i] = 'D';\n   \
    \     } else if (s[i] == 'e' || s[i] == 'E') {\n            s[i] = 'E';\n    \
    \    } else if (s[i] == 'f' || s[i] == 'F') {\n            s[i] = 'F';\n     \
    \   } else if (s[i] == 'g' || s[i] == 'G') {\n            s[i] = 'G';\n      \
    \  } else if (s[i] == 'h' || s[i] == 'H') {\n            s[i] = 'H';\n       \
    \ } else if (s[i] == 'i' || s[i] == 'I') {\n            s[i] = 'I';\n        }\
    \ else if (s[i] == 'j' || s[i] == 'J') {\n            s[i] = 'J';\n        } else\
    \ if (s[i] == 'k' || s[i] == 'K') {\n            s[i] = 'K';\n        } else if\
    \ (s[i] == 'l' || s[i] == 'L') {\n            s[i] = 'L';\n        } else if (s[i]\
    \ == 'm' || s[i] == 'M') {\n            s[i] = 'M';\n        } else if (s[i] ==\
    \ 'n' || s[i] == 'N') {\n            s[i] = 'N';\n        } else if (s[i] == 'o'\
    \ || s[i] == 'O') {\n            s[i] = 'O';\n        } else if (s[i] == 'p' ||\
    \ s[i] == 'P') {\n            s[i] = 'P';\n        } else if (s[i] == 'q' || s[i]\
    \ == 'Q') {\n            s[i] = 'Q';\n        } else if (s[i] == 'r' || s[i] ==\
    \ 'R') {\n            s[i] = 'R';\n        } else if (s[i] == 's' || s[i] == 'S')\
    \ {\n            s[i] = 'S';\n        } else if (s[i] == 't' || s[i] == 'T') {\n\
    \            s[i] = 'T';\n        } else if (s[i] == 'u' || s[i] == 'U') {\n \
    \           s[i] = 'U';\n        } else if (s[i] == 'v' || s[i] == 'V') {\n  \
    \          s[i] = 'V';\n        } else if (s[i] == 'w' || s[i] == 'W') {\n   \
    \         s[i] = 'W';\n        } else if (s[i] == 'x' || s[i] == 'X') {\n    \
    \        s[i] = 'X';\n        } else if (s[i] == 'y' || s[i] == 'Y') {\n     \
    \       s[i] = 'Y';\n        } else if (s[i] == 'z' || s[i] == 'Z') {\n      \
    \      s[i] = 'Z';\n        }\n    }\n    return s;", "    std::string flipped_string;\n\
    \    for (auto &c : string) {\n        if (c >= 'a' && c <= 'z') {\n         \
    \   c = c - 32;\n        }\n        else if (c >= 'A' && c <= 'Z') {\n       \
    \     c = c + 32;\n        }\n        flipped_string += c;\n    }\n    return\
    \ flipped_string;", "    std::string s = string;\n    for (size_t i = 0; i < s.size();\
    \ i++) {\n        if (s[i] >= 'a' && s[i] <= 'z') {\n            s[i] = s[i] -\
    \ 32;\n        }\n        else if (s[i] >= 'A' && s[i] <= 'Z') {\n           \
    \ s[i] = s[i] - 32;\n        }\n    }\n    return s;", "    std::string s = string;\n\
    \    for (auto &c : s) {\n        if (c >= 'a' && c <= 'z') {\n            c +=\
    \ 'A' - 'a';\n        } else if (c >= 'A' && c <= 'Z') {\n            c += 'a'\
    \ - 'A';\n        }\n    }\n    return s;", "    std::string s = string;\n   \
    \ for (size_t i = 0; i < s.length(); i++) {\n        if (s[i] == 'a') {\n    \
    \        s[i] = 'A';\n        } else if (s[i] == 'b') {\n            s[i] = 'B';\n\
    \        } else if (s[i] == 'c') {\n            s[i] = 'C';\n        } else if\
    \ (s[i] == 'd') {\n            s[i] = 'D';\n        } else if (s[i] == 'e') {\n\
    \            s[i] = 'E';\n        } else if (s[i] == 'f') {\n            s[i]\
    \ = 'F';\n        } else if (s[i] == 'g') {\n            s[i] = 'G';\n       \
    \ } else if (s[i] == 'h') {\n            s[i] = 'H';\n        } else if (s[i]\
    \ == 'i') {\n            s[i] = 'I';\n        } else if (s[i] == 'j') {\n    \
    \        s[i] = 'J';\n        } else if (s[i] == 'k') {\n            s[i] = 'K';\n\
    \        } else if (s[i] == 'l') {\n            s[i] = 'L';\n        } else if\
    \ (s[i] == 'm') {\n            s[i] = 'M';\n        } else if (s[i] == 'n') {\n\
    \            s[i] = 'N';\n        } else if (s[i] == 'o') {\n            s[i]\
    \ = 'O';\n        } else if (s[i] == 'p') {\n            s[i] = 'P';\n       \
    \ } else if (s[i] == 'q') {\n            s[i] = 'Q';\n        } else if (s[i]\
    \ == 'r') {\n            s[i] = 'R';\n        } else if (s[i] == 's') {\n    \
    \        s[i] = 'S';\n        } else if (s[i] == 't') {\n            s[i] = 'T';\n\
    \        } else if (s[i] == 'u') {\n            s[i] = 'U';\n        } else if\
    \ (s[i] == 'v') {\n            s[i] = 'V';\n        } else if (s[i] == 'w') {\n\
    \            s[i] = 'W';\n        } else if (s[i] == 'x') {\n            s[i]\
    \ = 'X';\n        } else if (s[i] == 'y') {\n            s[i] = 'Y';\n       \
    \ } else if (s[i] == 'z') {\n            s[i] = 'Z';\n        }\n    }\n    return\
    \ s;", "    std::string s = string;\n    for (auto &c : s) {\n        if (c >=\
    \ 'a' && c <= 'z') {\n            c = c - 32;\n        } else if (c >= 'A' &&\
    \ c <= 'Z') {\n            c = c + 32;\n        }\n    }\n    return s;", "  \
    \  std::string result = string;\n    for (auto &c : result) {\n        if (c >=\
    \ 'a' && c <= 'z') {\n            c += 'A' - 'a';\n        } else if (c >= 'A'\
    \ && c <= 'Z') {\n            c += 'a' - 'A';\n        }\n    }\n    return result;",
  "    std::string s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n  \
    \      if (s[i] == 'a') {\n            s[i] = 'A';\n        } else if (s[i] ==\
    \ 'b') {\n            s[i] = 'B';\n        } else if (s[i] == 'c') {\n       \
    \     s[i] = 'C';\n        } else if (s[i] == 'd') {\n            s[i] = 'D';\n\
    \        } else if (s[i] == 'e') {\n            s[i] = 'E';\n        } else if\
    \ (s[i] == 'f') {\n            s[i] = 'F';\n        } else if (s[i] == 'g') {\n\
    \            s[i] = 'G';\n        } else if (s[i] == 'h') {\n            s[i]\
    \ = 'H';\n        } else if (s[i] == 'i') {\n            s[i] = 'I';\n       \
    \ } else if (s[i] == 'j') {\n            s[i] = 'J';\n        } else if (s[i]\
    \ == 'k') {\n            s[i] = 'K';\n        } else if (s[i] == 'l') {\n    \
    \        s[i] = 'L';\n        } else if (s[i] == 'm') {\n            s[i] = 'M';\n\
    \        } else if (s[i] == 'n') {\n            s[i] = 'N';\n        } else if\
    \ (s[i] == 'o') {\n            s[i] = 'O';\n        } else if (s[i] == 'p') {\n\
    \            s[i] = 'P';\n        } else if (s[i] == 'q') {\n            s[i]\
    \ = 'Q';\n        } else if (s[i] == 'r') {\n            s[i] = 'R';\n       \
    \ } else if (s[i] == 's') {\n            s[i] = 'S';\n        } else if (s[i]\
    \ == 't') {\n            s[i] = 'T';\n        } else if (s[i] == 'u') {\n    \
    \        s[i] = 'U';\n        } else if (s[i] == 'v') {\n            s[i] = 'V';\n\
    \        } else if (s[i] == 'w') {\n            s[i] = 'W';\n        } else if\
    \ (s[i] == 'x') {\n            s[i] = 'X';\n        } else if (s[i] == 'y') {\n\
    \            s[i] = 'Y';\n        } else if (s[i] == 'z') {\n            s[i]\
    \ = 'Z';\n        }\n    }\n    return s;", "    std::string new_string;\n   \
    \ for (auto &c : string) {\n        if (c >= 'a' && c <= 'z') {\n            new_string\
    \ += toupper(c);\n        } else if (c >= 'A' && c <= 'Z') {\n            new_string\
    \ += tolower(c);\n        } else {\n            new_string += c;\n        }\n\
    \    }\n    return new_string;", "    std::string result = string;\n    for (auto\
    \ &c : result) {\n        if (c >= 'A' && c <= 'Z') {\n            c ^= ('A' -\
    \ 'a');\n        }\n        else if (c >= 'a' && c <= 'z') {\n            c ^=\
    \ ('a' - 'A');\n        }\n    }\n    return result;", "    std::string result\
    \ = string;\n    for (auto &c : result) {\n        if (c >= 'a' && c <= 'z') {\n\
    \            c ^= 0x20;\n        }\n        else if (c >= 'A' && c <= 'Z') {\n\
    \            c ^= 0x20;\n        }\n    }\n    return result;", "    std::string\
    \ s = string;\n    for (auto &c : s) {\n        if (c >= 'a' && c <= 'z') {\n\
    \            c = c - 32;\n        } else if (c >= 'A' && c <= 'Z') {\n       \
    \     c = c + 32;\n        }\n    }\n    return s;", "    std::string flipped\
    \ = \"\";\n    for (auto &c : string) {\n        if (c >= 'a' && c <= 'z') {\n\
    \            flipped += toupper(c);\n        } else if (c >= 'A' && c <= 'Z')\
    \ {\n            flipped += tolower(c);\n        } else {\n            flipped\
    \ += c;\n        }\n    }\n    return flipped;", "    std::string new_string;\n\
    \    for (auto &c : string) {\n        if (c >= 'a' && c <= 'z') {\n         \
    \   c += 'A' - 'a';\n        } else if (c >= 'A' && c <= 'Z') {\n            c\
    \ += 'a' - 'A';\n        }\n        new_string.push_back(c);\n    }\n    return\
    \ new_string;", "    std::string result;\n    for (auto &c : string) {\n     \
    \   if (c >= 'a' && c <= 'z') {\n            result += toupper(c);\n        }\
    \ else if (c >= 'A' && c <= 'Z') {\n            result += tolower(c);\n      \
    \  } else {\n            result += c;\n        }\n    }\n    return result;",
  "    std::string s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n  \
    \      if (s[i] >= 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n    \
    \    } else if (s[i] >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] + 32;\n\
    \        }\n    }\n    return s;", "    std::string new_string;\n    for (auto\
    \ &c : string) {\n        if (c >= 'a' && c <= 'z') {\n            c += 'A' -\
    \ 'a';\n        } else if (c >= 'A' && c <= 'Z') {\n            c += 'a' - 'A';\n\
    \        } else {\n            c = c;\n        }\n        new_string.push_back(c);\n\
    \    }\n    return new_string;", "    std::string flipped_string;\n    for (auto\
    \ &c : string) {\n        if (c >= 'a' && c <= 'z') {\n            c = c - 32;\n\
    \        }\n        else if (c >= 'A' && c <= 'Z') {\n            c = c + 32;\n\
    \        }\n        flipped_string += c;\n    }\n    return flipped_string;",
  "    std::string s = string;\n    for (auto &c : s) {\n        if (c >= 'A' && c\
    \ <= 'Z') {\n            c += 'a' - 'A';\n        } else if (c >= 'a' && c <=\
    \ 'z') {\n            c += 'A' - 'a';\n        }\n    }\n    return s;", "   \
    \ std::string flipped = \"\";\n    for (auto &c : string) {\n        if (c >=\
    \ 'a' && c <= 'z') {\n            flipped += toupper(c);\n        } else if (c\
    \ >= 'A' && c <= 'Z') {\n            flipped += tolower(c);\n        } else {\n\
    \            flipped += c;\n        }\n    }\n    return flipped;", "    std::string\
    \ result = string;\n    for (size_t i = 0; i < result.size(); i++) {\n       \
    \ if (result[i] >= 'a' && result[i] <= 'z') {\n            result[i] = 'A';\n\
    \        } else if (result[i] >= 'A' && result[i] <= 'Z') {\n            result[i]\
    \ = 'a';\n        }\n    }\n    return result;", "    std::string s = string;\n\
    \    for (auto &c : s) {\n        if (c >= 'a' && c <= 'z')\n            c = c\
    \ - 32;\n        else if (c >= 'A' && c <= 'Z')\n            c = c + 32;\n   \
    \ }\n    return s;", "    std::string flipped = \"\";\n    for (auto c : string)\
    \ {\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n\
    \            flipped += toupper(c);\n        } else {\n            flipped +=\
    \ tolower(c);\n        }\n    }\n    return flipped;", "    std::string flipped\
    \ = \"\";\n    for (auto &c : string) {\n        if (c == 'a' || c == 'A') {\n\
    \            flipped += 'A';\n        } else if (c == 'b' || c == 'B') {\n   \
    \         flipped += 'B';\n        } else if (c == 'c' || c == 'C') {\n      \
    \      flipped += 'C';\n        } else if (c == 'd' || c == 'D') {\n         \
    \   flipped += 'D';\n        } else if (c == 'e' || c == 'E') {\n            flipped\
    \ += 'E';\n        } else if (c == 'f' || c == 'F') {\n            flipped +=\
    \ 'F';\n        } else if (c == 'g' || c == 'G') {\n            flipped += 'G';\n\
    \        } else if (c == 'h' || c == 'H') {\n            flipped += 'H';\n   \
    \     } else if (c == 'i' || c == 'I') {\n            flipped += 'I';\n      \
    \  } else if (c == 'j' || c == 'J') {\n            flipped += 'J';\n        }\
    \ else if (c == 'k' || c == 'K') {\n            flipped += 'K';\n        } else\
    \ if (c == 'l' || c == 'L') {\n            flipped += 'L';\n        } else if\
    \ (c == 'm' || c == 'M') {\n            flipped += 'M';\n        } else if (c\
    \ == 'n' || c == 'N') {\n            flipped += 'N';\n        } else if (c ==\
    \ 'o' || c == 'O') {\n            flipped += 'O';\n        } else if (c == 'p'\
    \ || c == 'P') {\n            flipped += 'P';\n        } else if (c == 'q' ||\
    \ c == 'Q') {\n            flipped += 'Q';\n        } else if (c == 'r' || c ==\
    \ 'R') {\n            flipped += 'R';\n        } else if (c == 's' || c == 'S')\
    \ {\n            flipped += 'S';\n        } else if (c == 't' || c == 'T') {\n\
    \            flipped += 'T';\n        } else if (c == 'u' || c == 'U') {\n   \
    \         flipped += 'U';\n        } else if (c == 'v' || c == 'V') {\n      \
    \      flipped += 'V';\n        } else if (c == 'w' || c == 'W') {\n         \
    \   flipped += 'W';\n        } else if (c == 'x' || c == 'X') {\n            flipped\
    \ += 'X';\n        } else if (c == 'y' || c == 'Y') {\n            flipped +=\
    \ 'Y';\n        } else if (c == 'z' || c == 'Z') {\n            flipped += 'Z';\n\
    \        } else {\n            flipped += c;\n        }\n    }\n    return flipped;",
  "    std::string result;\n    for (auto &c : string) {\n        if (c >= 'a' &&\
    \ c <= 'z') {\n            result += toupper(c);\n        } else if (c >= 'A'\
    \ && c <= 'Z') {\n            result += tolower(c);\n        } else {\n      \
    \      result += c;\n        }\n    }\n    return result;", "    string s = string;\n\
    \    for (size_t i = 0; i < s.size(); i++) {\n        if (s[i] == 'a') {\n   \
    \         s[i] = 'A';\n        } else if (s[i] == 'b') {\n            s[i] = 'B';\n\
    \        } else if (s[i] == 'c') {\n            s[i] = 'C';\n        } else if\
    \ (s[i] == 'd') {\n            s[i] = 'D';\n        } else if (s[i] == 'e') {\n\
    \            s[i] = 'E';\n        } else if (s[i] == 'f') {\n            s[i]\
    \ = 'F';\n        } else if (s[i] == 'g') {\n            s[i] = 'G';\n       \
    \ } else if (s[i] == 'h') {\n            s[i] = 'H';\n        } else if (s[i]\
    \ == 'i') {\n            s[i] = 'I';\n        } else if (s[i] == 'j') {\n    \
    \        s[i] = 'J';\n        } else if (s[i] == 'k') {\n            s[i] = 'K';\n\
    \        } else if (s[i] == 'l') {\n            s[i] = 'L';\n        } else if\
    \ (s[i] == 'm') {\n            s[i] = 'M';\n        } else if (s[i] == 'n') {\n\
    \            s[i] = 'N';\n        } else if (s[i] == 'o') {\n            s[i]\
    \ = 'O';\n        } else if (s[i] == 'p') {\n            s[i] = 'P';\n       \
    \ } else if (s[i] == 'q') {\n            s[i] = 'Q';\n        } else if (s[i]\
    \ == 'r') {\n            s[i] = 'R';\n        } else if (s[i] == 's') {\n    \
    \        s[i] = 'S';\n        } else if (s[i] == 't') {\n            s[i] = 'T';\n\
    \        } else if (s[i] == 'u') {\n            s[i] = 'U';\n        } else if\
    \ (s[i] == 'v') {\n            s[i] = 'V';\n        } else if (s[i] == 'w') {\n\
    \            s[i] = 'W';\n        } else if (s[i] == 'x') {\n            s[i]\
    \ = 'X';\n        } else if (s[i] == 'y') {\n            s[i] = 'Y';\n       \
    \ } else if (s[i] == 'z') {\n            s[i] = 'Z';\n        } else if (s[i]\
    \ == 'A') {\n            s[i] = 'a';\n        } else if (s[i] == 'B') {\n    \
    \        s[i] = 'b';\n        } else if (s[i] == 'C') {\n            s[i] = 'c';\n\
    \        } else if (s[i] == 'D') {\n            s[i] = 'd';\n        } else if\
    \ (s[i] == 'E') {\n            s[i] = 'e';\n        } else if (s[i] == 'F') {\n\
    \            s[i] = 'f';\n        } else if (s[i] == 'G') {\n            s[i]\
    \ = 'g';\n        } else if (s[i] == 'H') {\n            s[i] = 'h';\n       \
    \ } else if (s[i] == 'I') {\n            s[i] = 'i';\n        } else if (s[i]\
    \ == 'J') {\n            s[i] = 'j';\n        } else if (s[i] == 'K') {\n    \
    \        s[i] = 'k';\n        } else if (s[i] == 'L') {\n            s[i] = 'l';\n\
    \        } else if (s[i] == 'M') {\n            s[i] = 'm';\n        } else if\
    \ (s[i] == 'N') {\n            s[i] = 'n';\n        } else if (s[i] == 'O') {\n\
    \            s[i] = 'o';\n        } else if (s[i] == 'P') {\n            s[i]\
    \ = '", "    std::string s = string;\n    for (size_t i = 0; i < s.length(); i++)\
    \ {\n        if (s[i] == 'a' || s[i] == 'A') {\n            s[i] = 'A';\n    \
    \    } else if (s[i] == 'b' || s[i] == 'B') {\n            s[i] = 'B';\n     \
    \   } else if (s[i] == 'c' || s[i] == 'C') {\n            s[i] = 'C';\n      \
    \  } else if (s[i] == 'd' || s[i] == 'D') {\n            s[i] = 'D';\n       \
    \ } else if (s[i] == 'e' || s[i] == 'E') {\n            s[i] = 'E';\n        }\
    \ else if (s[i] == 'f' || s[i] == 'F') {\n            s[i] = 'F';\n        } else\
    \ if (s[i] == 'g' || s[i] == 'G') {\n            s[i] = 'G';\n        } else if\
    \ (s[i] == 'h' || s[i] == 'H') {\n            s[i] = 'H';\n        } else if (s[i]\
    \ == 'i' || s[i] == 'I') {\n            s[i] = 'I';\n        } else if (s[i] ==\
    \ 'j' || s[i] == 'J') {\n            s[i] = 'J';\n        } else if (s[i] == 'k'\
    \ || s[i] == 'K') {\n            s[i] = 'K';\n        } else if (s[i] == 'l' ||\
    \ s[i] == 'L') {\n            s[i] = 'L';\n        } else if (s[i] == 'm' || s[i]\
    \ == 'M') {\n            s[i] = 'M';\n        } else if (s[i] == 'n' || s[i] ==\
    \ 'N') {\n            s[i] = 'N';\n        } else if (s[i] == 'o' || s[i] == 'O')\
    \ {\n            s[i] = 'O';\n        } else if (s[i] == 'p' || s[i] == 'P') {\n\
    \            s[i] = 'P';\n        } else if (s[i] == 'q' || s[i] == 'Q') {\n \
    \           s[i] = 'Q';\n        } else if (s[i] == 'r' || s[i] == 'R') {\n  \
    \          s[i] = 'R';\n        } else if (s[i] == 's' || s[i] == 'S') {\n   \
    \         s[i] = 'S';\n        } else if (s[i] == 't' || s[i] == 'T') {\n    \
    \        s[i] = 'T';\n        } else if (s[i] == 'u' || s[i] == 'U') {\n     \
    \       s[i] = 'U';\n        } else if (s[i] == 'v' || s[i] == 'V') {\n      \
    \      s[i] = 'V';\n        } else if (s[i] == 'w' || s[i] == 'W') {\n       \
    \     s[i] = 'W';\n        } else if (s[i] == 'x' || s[i] == 'X') {\n        \
    \    s[i] = 'X';\n        } else if (s[i] == 'y' || s[i] == 'Y') {\n         \
    \   s[i] = 'Y';\n        } else if (s[i] == 'z' || s[i] == 'Z') {\n          \
    \  s[i] = 'Z';\n        }\n    }\n    return s;", "    std::string s = string;\n\
    \    for (size_t i = 0; i < s.length(); i++) {\n        if (s[i] == 'a' || s[i]\
    \ == 'A') {\n            s[i] = 'A';\n        } else if (s[i] == 'b' || s[i] ==\
    \ 'B') {\n            s[i] = 'B';\n        } else if (s[i] == 'c' || s[i] == 'C')\
    \ {\n            s[i] = 'C';\n        } else if (s[i] == 'd' || s[i] == 'D') {\n\
    \            s[i] = 'D';\n        } else if (s[i] == 'e' || s[i] == 'E') {\n \
    \           s[i] = 'E';\n        } else if (s[i] == 'f' || s[i] == 'F') {\n  \
    \          s[i] = 'F';\n        } else if (s[i] == 'g' || s[i] == 'G') {\n   \
    \         s[i] = 'G';\n        } else if (s[i] == 'h' || s[i] == 'H') {\n    \
    \        s[i] = 'H';\n        } else if (s[i] == 'i' || s[i] == 'I') {\n     \
    \       s[i] = 'I';\n        } else if (s[i] == 'j' || s[i] == 'J') {\n      \
    \      s[i] = 'J';\n        } else if (s[i] == 'k' || s[i] == 'K') {\n       \
    \     s[i] = 'K';\n        } else if (s[i] == 'l' || s[i] == 'L') {\n        \
    \    s[i] = 'L';\n        } else if (s[i] == 'm' || s[i] == 'M') {\n         \
    \   s[i] = 'M';\n        } else if (s[i] == 'n' || s[i] == 'N') {\n          \
    \  s[i] = 'N';\n        } else if (s[i] == 'o' || s[i] == 'O') {\n           \
    \ s[i] = 'O';\n        } else if (s[i] == 'p' || s[i] == 'P') {\n            s[i]\
    \ = 'P';\n        } else if (s[i] == 'q' || s[i] == 'Q') {\n            s[i] =\
    \ 'Q';\n        } else if (s[i] == 'r' || s[i] == 'R') {\n            s[i] = 'R';\n\
    \        } else if (s[i] == 's' || s[i] == 'S') {\n            s[i] = 'S';\n \
    \       } else if (s[i] == 't' || s[i] == 'T') {\n            s[i] = 'T';\n  \
    \      } else if (s[i] == 'u' || s[i] == 'U') {\n            s[i] = 'U';\n   \
    \     } else if (s[i] == 'v' || s[i] == 'V') {\n            s[i] = 'V';\n    \
    \    } else if (s[i] == 'w' || s[i] == 'W') {\n            s[i] = 'W';\n     \
    \   } else if (s[i] == 'x' || s[i] == 'X') {\n            s[i] = 'X';\n      \
    \  } else if (s[i] == 'y' || s[i] == 'Y') {\n            s[i] = 'Y';\n       \
    \ } else if (s[i] == 'z' || s[i] == 'Z') {\n            s[i] = 'Z';\n        }\n\
    \    }\n    return s;", "    std::string new_string;\n    for (auto &c : string)\
    \ {\n        if (c >= 'a' && c <= 'z')\n            new_string += toupper(c);\n\
    \        else if (c >= 'A' && c <= 'Z')\n            new_string += tolower(c);\n\
    \        else\n            new_string += c;\n    }\n    return new_string;", " \
    \   string flipped = \"\";\n    for (auto c : string) {\n        if (c == 'a'\
    \ || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            flipped += toupper(c);\n\
    \        } else {\n            flipped += tolower(c);\n        }\n    }\n    return\
    \ flipped;", "    std::string flipped_string;\n    for (auto &c : string) {\n\
    \        if (c == 'a' || c == 'A') {\n            c = 'A';\n        }\n      \
    \  else if (c == 'b' || c == 'B') {\n            c = 'B';\n        }\n       \
    \ else if (c == 'c' || c == 'C') {\n            c = 'C';\n        }\n        else\
    \ if (c == 'd' || c == 'D') {\n            c = 'D';\n        }\n        else if\
    \ (c == 'e' || c == 'E') {\n            c = 'E';\n        }\n        else if (c\
    \ == 'f' || c == 'F') {\n            c = 'F';\n        }\n        else if (c ==\
    \ 'g' || c == 'G') {\n            c = 'G';\n        }\n        else if (c == 'h'\
    \ || c == 'H') {\n            c = 'H';\n        }\n        else if (c == 'i' ||\
    \ c == 'I') {\n            c = 'I';\n        }\n        else if (c == 'j' || c\
    \ == 'J') {\n            c = 'J';\n        }\n        else if (c == 'k' || c ==\
    \ 'K') {\n            c = 'K';\n        }\n        else if (c == 'l' || c == 'L')\
    \ {\n            c = 'L';\n        }\n        else if (c == 'm' || c == 'M') {\n\
    \            c = 'M';\n        }\n        else if (c == 'n' || c == 'N') {\n \
    \           c = 'N';\n        }\n        else if (c == 'o' || c == 'O') {\n  \
    \          c = 'O';\n        }\n        else if (c == 'p' || c == 'P') {\n   \
    \         c = 'P';\n        }\n        else if (c == 'q' || c == 'Q') {\n    \
    \        c = 'Q';\n        }\n        else if (c == 'r' || c == 'R') {\n     \
    \       c = 'R';\n        }\n        else if (c == 's' || c == 'S') {\n      \
    \      c = 'S';\n        }\n        else if (c == 't' || c == 'T') {\n       \
    \     c = 'T';\n        }\n        else if (c == 'u' || c == 'U') {\n        \
    \    c = 'U';\n        }\n        else if (c == 'v' || c == 'V') {\n         \
    \   c = 'V';\n        }\n        else if (c == 'w' || c == 'W') {\n          \
    \  c = 'W';\n        }\n        else if (c == 'x' || c == 'X') {\n           \
    \ c = 'X';\n        }\n        else if (c == 'y' || c == 'Y') {\n            c\
    \ = 'Y';\n        }\n        else if (c == 'z' || c == 'Z') {\n            c =\
    \ 'Z';\n        }\n        flipped_string += c;\n    }\n    return flipped_string;",
  "    std::string new_string = \"\";\n    for (auto &c : string) {\n        if (c\
    \ >= 'a' && c <= 'z') {\n            new_string += toupper(c);\n        } else\
    \ if (c >= 'A' && c <= 'Z') {\n            new_string += tolower(c);\n       \
    \ } else {\n            new_string += c;\n        }\n    }\n    return new_string;",
  "    std::string result = string;\n    for (auto &c : result) {\n        if (c >=\
    \ 'a' && c <= 'z')\n            c = c - 32;\n        else if (c >= 'A' && c <=\
    \ 'Z')\n            c = c + 32;\n    }\n    return result;", "    string flipped_string;\n\
    \    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a'\
    \ && string[i] <= 'z') {\n            flipped_string += string[i] - 'a' + 'A';\n\
    \        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            flipped_string\
    \ += string[i] - 'A' + 'a';\n        } else {\n            flipped_string += string[i];\n\
    \        }\n    }\n    return flipped_string;", "    std::string new_string;\n\
    \    for (auto &c : string) {\n        if (c >= 'a' && c <= 'z') {\n         \
    \   new_string += toupper(c);\n        } else if (c >= 'A' && c <= 'Z') {\n  \
    \          new_string += tolower(c);\n        } else {\n            new_string\
    \ += c;\n        }\n    }\n    return new_string;", "    std::string flipped_string;\n\
    \    for (auto &c : string) {\n        if (c >= 'a' && c <= 'z') {\n         \
    \   flipped_string += toupper(c);\n        } else if (c >= 'A' && c <= 'Z') {\n\
    \            flipped_string += tolower(c);\n        } else {\n            flipped_string\
    \ += c;\n        }\n    }\n    return flipped_string;", "    std::string flipped_string;\n\
    \    for (auto &c : string) {\n        if (c >= 'a' && c <= 'z') {\n         \
    \   flipped_string += toupper(c);\n        } else if (c >= 'A' && c <= 'Z') {\n\
    \            flipped_string += tolower(c);\n        } else {\n            flipped_string\
    \ += c;\n        }\n    }\n    return flipped_string;", "    std::string s = string;\n\
    \    for (size_t i = 0; i < s.size(); i++) {\n        if (s[i] == 'a') {\n   \
    \         s[i] = 'A';\n        } else if (s[i] == 'b') {\n            s[i] = 'B';\n\
    \        } else if (s[i] == 'c') {\n            s[i] = 'C';\n        } else if\
    \ (s[i] == 'd') {\n            s[i] = 'D';\n        } else if (s[i] == 'e') {\n\
    \            s[i] = 'E';\n        } else if (s[i] == 'f') {\n            s[i]\
    \ = 'F';\n        } else if (s[i] == 'g') {\n            s[i] = 'G';\n       \
    \ } else if (s[i] == 'h') {\n            s[i] = 'H';\n        } else if (s[i]\
    \ == 'i') {\n            s[i] = 'I';\n        } else if (s[i] == 'j') {\n    \
    \        s[i] = 'J';\n        } else if (s[i] == 'k') {\n            s[i] = 'K';\n\
    \        } else if (s[i] == 'l') {\n            s[i] = 'L';\n        } else if\
    \ (s[i] == 'm') {\n            s[i] = 'M';\n        } else if (s[i] == 'n') {\n\
    \            s[i] = 'N';\n        } else if (s[i] == 'o') {\n            s[i]\
    \ = 'O';\n        } else if (s[i] == 'p') {\n            s[i] = 'P';\n       \
    \ } else if (s[i] == 'q') {\n            s[i] = 'Q';\n        } else if (s[i]\
    \ == 'r') {\n            s[i] = 'R';\n        } else if (s[i] == 's') {\n    \
    \        s[i] = 'S';\n        } else if (s[i] == 't') {\n            s[i] = 'T';\n\
    \        } else if (s[i] == 'u') {\n            s[i] = 'U';\n        } else if\
    \ (s[i] == 'v') {\n            s[i] = 'V';\n        } else if (s[i] == 'w') {\n\
    \            s[i] = 'W';\n        } else if (s[i] == 'x') {\n            s[i]\
    \ = 'X';\n        } else if (s[i] == 'y') {\n            s[i] = 'Y';\n       \
    \ } else if (s[i] == 'z') {\n            s[i] = 'Z';\n        }\n    }\n    return\
    \ s;", "    std::string s = string;\n    for (auto &c : s) {\n        if (c >=\
    \ 'a' && c <= 'z') {\n            c = c - 32;\n        } else if (c >= 'A' &&\
    \ c <= 'Z') {\n            c = c + 32;\n        }\n    }\n    return s;", "  \
    \  std::string result = string;\n    for (auto &c : result) {\n        if (c >=\
    \ 'a' && c <= 'z') {\n            c ^= 32;\n        }\n        else if (c >= 'A'\
    \ && c <= 'Z') {\n            c ^= 32;\n        }\n    }\n    return result;",
  "    std::string flipped_string;\n    for (int i = 0; i < string.length(); i++)\
    \ {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            flipped_string\
    \ += string[i] - 'a' + 'A';\n        } else if (string[i] >= 'A' && string[i]\
    \ <= 'Z') {\n            flipped_string += string[i] - 'A' + 'a';\n        } else\
    \ {\n            flipped_string += string[i];\n        }\n    }\n    return flipped_string;",
  "    std::string result = string;\n    for (size_t i = 0; i < result.size(); i++)\
    \ {\n        if (result[i] >= 'a' && result[i] <= 'z') {\n            result[i]\
    \ = result[i] - 32;\n        } else if (result[i] >= 'A' && result[i] <= 'Z')\
    \ {\n            result[i] = result[i] + 32;\n        }\n    }\n    return result;",
  "    std::string new_string;\n    for (auto &c : string) {\n        if (c >= 'a'\
    \ && c <= 'z') {\n            c += 'A' - 'a';\n        } else if (c >= 'A' &&\
    \ c <= 'Z') {\n            c += 'a' - 'A';\n        } else {\n            c =\
    \ c;\n        }\n        new_string.push_back(c);\n    }\n    return new_string;",
  "    string result = string;\n    for (size_t i = 0; i < result.size(); i++) {\n\
    \        if (result[i] >= 'a' && result[i] <= 'z') {\n            result[i] =\
    \ 'A';\n        } else if (result[i] >= 'A' && result[i] <= 'Z') {\n         \
    \   result[i] = 'a';\n        }\n    }\n    return result;", "    string result\
    \ = string;\n    for (size_t i = 0; i < result.size(); i++) {\n        if (result[i]\
    \ >= 'a' && result[i] <= 'z') {\n            result[i] = 'A';\n        } else\
    \ if (result[i] >= 'A' && result[i] <= 'Z') {\n            result[i] = 'a';\n\
    \        }\n    }\n    return result;", "    string flipped_string;\n    for (int\
    \ i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i]\
    \ <= 'z') {\n            flipped_string += string[i] + 'A' - 'a';\n        } else\
    \ {\n            flipped_string += string[i];\n        }\n    }\n    return flipped_string;",
  "    std::string flipped_string;\n    for (int i = 0; i < string.length(); i++)\
    \ {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            flipped_string\
    \ += string[i] + ('A' - 'a');\n        } else if (string[i] >= 'A' && string[i]\
    \ <= 'Z') {\n            flipped_string += string[i] + ('a' - 'A');\n        }\
    \ else {\n            flipped_string += string[i];\n        }\n    }\n    return\
    \ flipped_string;", "    std::string result;\n    for (auto &c : string) {\n \
    \       if (c >= 'a' && c <= 'z') {\n            c += 'A' - 'a';\n        } else\
    \ if (c >= 'A' && c <= 'Z') {\n            c += 'a' - 'A';\n        } else {\n\
    \            c = c;\n        }\n        result += c;\n    }\n    return result;",
  "    std::string new_string;\n    for (auto &c : string) {\n        if (c >= 'a'\
    \ && c <= 'z') {\n            new_string += toupper(c);\n        } else if (c\
    \ >= 'A' && c <= 'Z') {\n            new_string += tolower(c);\n        } else\
    \ {\n            new_string += c;\n        }\n    }\n    return new_string;",
  "    std::string result = string;\n    for (size_t i = 0; i < result.size(); i++)\
    \ {\n        if (result[i] >= 'a' && result[i] <= 'z') {\n            result[i]\
    \ = 'A';\n        } else if (result[i] >= 'A' && result[i] <= 'Z') {\n       \
    \     result[i] = 'a';\n        }\n    }\n    return result;", "    string flipped\
    \ = \"\";\n    for (auto &c : string) {\n        if (c == 'a' || c == 'e' || c\
    \ == 'i' || c == 'o' || c == 'u') {\n            flipped += 'A';\n        } else\
    \ if (c == 'b' || c == 'c' || c == 'd' || c == 'f' || c == 'g') {\n          \
    \  flipped += 'B';\n        } else if (c == 'h' || c == 'j' || c == 'k' || c ==\
    \ 'l' || c == 'm') {\n            flipped += 'C';\n        } else if (c == 'n'\
    \ || c == 'p' || c == 'q' || c == 'r' || c == 's') {\n            flipped += 'D';\n\
    \        } else if (c == 't' || c == 'v' || c == 'w' || c == 'x' || c == 'y')\
    \ {\n            flipped += 'E';\n        } else if (c == 'z' || c == 'A' || c\
    \ == 'B' || c == 'C' || c == 'D' || c == 'E') {\n            flipped += 'F';\n\
    \        } else if (c == 'G' || c == 'H' || c == 'J' || c == 'K' || c == 'L' ||\
    \ c == 'M') {\n            flipped += 'G';\n        } else if (c == 'N' || c ==\
    \ 'P' || c == 'Q' || c == 'R' || c == 'S') {\n            flipped += 'H';\n  \
    \      } else if (c == 'T' || c == 'V' || c == 'W' || c == 'X' || c == 'Y') {\n\
    \            flipped += 'I';\n        } else if (c == 'Z' || c == 'a' || c ==\
    \ 'b' || c == 'c' || c == 'd' || c == 'e') {\n            flipped += 'J';\n  \
    \      } else if (c == 'f' || c == 'g' || c == 'h' || c == 'j' || c == 'k' ||\
    \ c == 'l' || c == 'm') {\n            flipped += 'K';\n        } else if (c ==\
    \ 'n' || c == 'p' || c == 'q' || c == 'r' || c == 's') {\n            flipped\
    \ += 'L';\n        } else if (c == 't' || c == 'v' || c == 'w' || c == 'x' ||\
    \ c == 'y') {\n            flipped += 'M';\n        } else if (c == 'z' || c ==\
    \ 'A' || c == 'B' || c == 'C' || c == 'D' || c == 'E') {\n            flipped\
    \ += 'N';\n        } else if (c == 'F' || c == 'G' || c == 'H' || c == 'J' ||\
    \ c == 'K' || c == 'L' || c == 'M') {\n            flipped += 'O';\n        }\
    \ else if (c == 'N' || c == 'P' || c == 'Q' || c == 'R' || c == 'S') {\n     \
    \       flipped += 'P';\n        } else if (c == '", "    std::string result;\n\
    \    for (auto &c : string) {\n        if (c >= 'a' && c <= 'z') {\n         \
    \   result += toupper(c);\n        } else if (c >= 'A' && c <= 'Z') {\n      \
    \      result += tolower(c);\n        } else {\n            result += c;\n   \
    \     }\n    }\n    return result;", "    std::string result = string;\n    for\
    \ (size_t i = 0; i < result.size(); i++) {\n        if (result[i] >= 'a' && result[i]\
    \ <= 'z') {\n            result[i] = result[i] - 32;\n        }\n        else\
    \ if (result[i] >= 'A' && result[i] <= 'Z') {\n            result[i] = result[i]\
    \ + 32;\n        }\n    }\n    return result;", "    std::string flipped_string;\n\
    \    for (auto &c : string) {\n        if (c == 'a' || c == 'A') {\n         \
    \   c = 'A';\n        } else if (c == 'b' || c == 'B') {\n            c = 'B';\n\
    \        } else if (c == 'c' || c == 'C') {\n            c = 'C';\n        } else\
    \ if (c == 'd' || c == 'D') {\n            c = 'D';\n        } else if (c == 'e'\
    \ || c == 'E') {\n            c = 'E';\n        } else if (c == 'f' || c == 'F')\
    \ {\n            c = 'F';\n        } else if (c == 'g' || c == 'G') {\n      \
    \      c = 'G';\n        } else if (c == 'h' || c == 'H') {\n            c = 'H';\n\
    \        } else if (c == 'i' || c == 'I') {\n            c = 'I';\n        } else\
    \ if (c == 'j' || c == 'J') {\n            c = 'J';\n        } else if (c == 'k'\
    \ || c == 'K') {\n            c = 'K';\n        } else if (c == 'l' || c == 'L')\
    \ {\n            c = 'L';\n        } else if (c == 'm' || c == 'M') {\n      \
    \      c = 'M';\n        } else if (c == 'n' || c == 'N') {\n            c = 'N';\n\
    \        } else if (c == 'o' || c == 'O') {\n            c = 'O';\n        } else\
    \ if (c == 'p' || c == 'P') {\n            c = 'P';\n        } else if (c == 'q'\
    \ || c == 'Q') {\n            c = 'Q';\n        } else if (c == 'r' || c == 'R')\
    \ {\n            c = 'R';\n        } else if (c == 's' || c == 'S') {\n      \
    \      c = 'S';\n        } else if (c == 't' || c == 'T') {\n            c = 'T';\n\
    \        } else if (c == 'u' || c == 'U') {\n            c = 'U';\n        } else\
    \ if (c == 'v' || c == 'V') {\n            c = 'V';\n        } else if (c == 'w'\
    \ || c == 'W') {\n            c = 'W';\n        } else if (c == 'x' || c == 'X')\
    \ {\n            c = 'X';\n        } else if (c == 'y' || c == 'Y') {\n      \
    \      c = 'Y';\n        } else if (c == 'z' || c == 'Z') {\n            c = 'Z';\n\
    \        }\n        flipped_string += c;\n    }\n    return flipped_string;",
  "    string s = string;\n    for (size_t i = 0; i < s.size(); i++) {\n        if\
    \ (s[i] == 'a') {\n            s[i] = 'A';\n        } else if (s[i] == 'b') {\n\
    \            s[i] = 'B';\n        } else if (s[i] == 'c') {\n            s[i]\
    \ = 'C';\n        } else if (s[i] == 'd') {\n            s[i] = 'D';\n       \
    \ } else if (s[i] == 'e') {\n            s[i] = 'E';\n        } else if (s[i]\
    \ == 'f') {\n            s[i] = 'F';\n        } else if (s[i] == 'g') {\n    \
    \        s[i] = 'G';\n        } else if (s[i] == 'h') {\n            s[i] = 'H';\n\
    \        } else if (s[i] == 'i') {\n            s[i] = 'I';\n        } else if\
    \ (s[i] == 'j') {\n            s[i] = 'J';\n        } else if (s[i] == 'k') {\n\
    \            s[i] = 'K';\n        } else if (s[i] == 'l') {\n            s[i]\
    \ = 'L';\n        } else if (s[i] == 'm') {\n            s[i] = 'M';\n       \
    \ } else if (s[i] == 'n') {\n            s[i] = 'N';\n        } else if (s[i]\
    \ == 'o') {\n            s[i] = 'O';\n        } else if (s[i] == 'p') {\n    \
    \        s[i] = 'P';\n        } else if (s[i] == 'q') {\n            s[i] = 'Q';\n\
    \        } else if (s[i] == 'r') {\n            s[i] = 'R';\n        } else if\
    \ (s[i] == 's') {\n            s[i] = 'S';\n        } else if (s[i] == 't') {\n\
    \            s[i] = 'T';\n        } else if (s[i] == 'u') {\n            s[i]\
    \ = 'U';\n        } else if (s[i] == 'v') {\n            s[i] = 'V';\n       \
    \ } else if (s[i] == 'w') {\n            s[i] = 'W';\n        } else if (s[i]\
    \ == 'x') {\n            s[i] = 'X';\n        } else if (s[i] == 'y') {\n    \
    \        s[i] = 'Y';\n        } else if (s[i] == 'z') {\n            s[i] = 'Z';\n\
    \        }\n    }\n    return s;", "    std::string s = string;\n    for (auto\
    \ &c : s) {\n        if (c >= 'a' && c <= 'z') {\n            c = c - 32;\n  \
    \      } else if (c >= 'A' && c <= 'Z') {\n            c = c + 32;\n        }\n\
    \    }\n    return s;", "    std::string s = string;\n    for (auto &c : s) {\n\
    \        if (c >= 'a' && c <= 'z')\n            c = c - 32;\n        else if (c\
    \ >= 'A' && c <= 'Z')\n            c = c + 32;\n    }\n    return s;", "    std::string\
    \ result;\n    for (auto &c : string) {\n        if (c >= 'a' && c <= 'z')\n \
    \           c += 'A' - 'a';\n        else if (c >= 'A' && c <= 'Z')\n        \
    \    c += 'a' - 'A';\n        else\n            result += c;\n    }\n    return\
    \ result;", "    std::string result = string;\n    for (size_t i = 0; i < result.size();\
    \ i++) {\n        if (result[i] >= 'a' && result[i] <= 'z') {\n            result[i]\
    \ = 'A';\n        } else if (result[i] >= 'A' && result[i] <= 'Z') {\n       \
    \     result[i] = 'a';\n        }\n    }\n    return result;", "    std::string\
    \ result = string;\n    for (auto &c : result) {\n        if (c >= 'a' && c <=\
    \ 'z') {\n            c += 'A' - 'a';\n        } else if (c >= 'A' && c <= 'Z')\
    \ {\n            c += 'a' - 'A';\n        }\n    }\n    return result;", "   \
    \ std::string new_string;\n    for (char c : string) {\n        if (c >= 'a' &&\
    \ c <= 'z') {\n            new_string += toupper(c);\n        } else if (c >=\
    \ 'A' && c <= 'Z') {\n            new_string += tolower(c);\n        } else {\n\
    \            new_string += c;\n        }\n    }\n    return new_string;", "  \
    \  std::string result = string;\n    for (size_t i = 0; i < result.size(); i++)\
    \ {\n        if (result[i] >= 'a' && result[i] <= 'z') {\n            result[i]\
    \ = result[i] - 32;\n        }\n        else if (result[i] >= 'A' && result[i]\
    \ <= 'Z') {\n            result[i] = result[i] + 32;\n        }\n    }\n    return\
    \ result;", "    std::string flipped_string;\n    for (auto &c : string) {\n \
    \       if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n    \
    \        flipped_string += 'A';\n        } else if (c == 'b' || c == 'c' || c\
    \ == 'd' || c == 'f' || c == 'g' || c == 'h' || c == 'j' || c == 'k' || c == 'l'\
    \ || c == 'm' || c == 'n' || c == 'p' || c == 'q' || c == 'r' || c == 's' || c\
    \ == 't' || c == 'v' || c == 'w' || c == 'x' || c == 'y' || c == 'z') {\n    \
    \        flipped_string += 'B';\n        } else if (c == 'A' || c == 'B' || c\
    \ == 'C' || c == 'D' || c == 'E' || c == 'F' || c == 'G' || c == 'H' || c == 'I'\
    \ || c == 'J' || c == 'K' || c == 'L' || c == 'M' || c == 'N' || c == 'P' || c\
    \ == 'Q' || c == 'R' || c == 'S' || c == 'T' || c == 'V' || c == 'W' || c == 'X'\
    \ || c == 'Y' || c == 'Z') {\n            flipped_string += 'a';\n        } else\
    \ if (c == 'B' || c == 'C' || c == 'D' || c == 'E' || c == 'F' || c == 'G' ||\
    \ c == 'H' || c == 'I' || c == 'J' || c == 'K' || c == 'L' || c == 'M' || c ==\
    \ 'N' || c == 'P' || c == 'Q' || c == 'R' || c == 'S' || c == 'T' || c == 'V'\
    \ || c == 'W' || c == 'X' || c == 'Y' || c == 'Z') {\n            flipped_string\
    \ += 'b';\n        } else if (c == 'C' || c == 'D' || c == 'E' || c == 'F' ||\
    \ c == 'G' || c == 'H' || c == 'I' || c == 'J' || c == 'K' || c == 'L' || c ==\
    \ 'M' || c == 'N' || c == 'P' || c == 'Q' || c == 'R' || c == 'S' || c == 'T'\
    \ || c == 'V' || c == 'W' || c == 'X' || c == 'Y' || c == 'Z') {\n           \
    \ flipped_string += 'c';\n        } else if (c == 'D' || c == 'E' || c == 'F'\
    \ || c == 'G' || c == 'H' || c == 'I' || c == 'J' || c == 'K' || c == 'L' || c\
    \ == 'M' || c == 'N' || c == 'P' || c == 'Q' || c == 'R' || c == 'S' || c == 'T'\
    \ || c == 'V' || ", "    std::string result = string;\n    for (auto &c : result)\
    \ {\n        if (c >= 'A' && c <= 'Z') {\n            c += 'a' - 'A';\n      \
    \  } else if (c >= 'a' && c <= 'z') {\n            c += 'A' - 'a';\n        }\n\
    \    }\n    return result;", "    std::string new_string;\n    for (auto &c :\
    \ string) {\n        if (c >= 'a' && c <= 'z') {\n            c += 'A' - 'a';\n\
    \        } else if (c >= 'A' && c <= 'Z') {\n            c += 'a' - 'A';\n   \
    \     }\n        new_string.push_back(c);\n    }\n    return new_string;", " \
    \   std::string new_string = \"\";\n    for (auto &c : string) {\n        if (c\
    \ >= 'a' && c <= 'z') {\n            c += 'A' - 'a';\n        } else if (c >=\
    \ 'A' && c <= 'Z') {\n            c += 'a' - 'A';\n        }\n        new_string\
    \ += c;\n    }\n    return new_string;", "    std::string result;\n    for (auto\
    \ &c : string) {\n        if (c >= 'a' && c <= 'z') {\n            result += toupper(c);\n\
    \        } else if (c >= 'A' && c <= 'Z') {\n            result += tolower(c);\n\
    \        } else {\n            result += c;\n        }\n    }\n    return result;",
  "    std::string result = string;\n    for (size_t i = 0; i < result.size(); i++)\
    \ {\n        if (result[i] >= 'a' && result[i] <= 'z') {\n            result[i]\
    \ = 'A';\n        } else if (result[i] >= 'A' && result[i] <= 'Z') {\n       \
    \     result[i] = 'a';\n        }\n    }\n    return result;", "    std::string\
    \ s = string;\n    for (auto &c : s) {\n        if (c >= 'a' && c <= 'z') {\n\
    \            c = c - 32;\n        } else if (c >= 'A' && c <= 'Z') {\n       \
    \     c = c + 32;\n        }\n    }\n    return s;", "    std::string flipped_string;\n\
    \    for (auto &c : string) {\n        if (c == 'a' || c == 'A') {\n         \
    \   c = 'A';\n        } else if (c == 'b' || c == 'B') {\n            c = 'B';\n\
    \        } else if (c == 'c' || c == 'C') {\n            c = 'C';\n        } else\
    \ if (c == 'd' || c == 'D') {\n            c = 'D';\n        } else if (c == 'e'\
    \ || c == 'E') {\n            c = 'E';\n        } else if (c == 'f' || c == 'F')\
    \ {\n            c = 'F';\n        } else if (c == 'g' || c == 'G') {\n      \
    \      c = 'G';\n        } else if (c == 'h' || c == 'H') {\n            c = 'H';\n\
    \        } else if (c == 'i' || c == 'I') {\n            c = 'I';\n        } else\
    \ if (c == 'j' || c == 'J') {\n            c = 'J';\n        } else if (c == 'k'\
    \ || c == 'K') {\n            c = 'K';\n        } else if (c == 'l' || c == 'L')\
    \ {\n            c = 'L';\n        } else if (c == 'm' || c == 'M') {\n      \
    \      c = 'M';\n        } else if (c == 'n' || c == 'N') {\n            c = 'N';\n\
    \        } else if (c == 'o' || c == 'O') {\n            c = 'O';\n        } else\
    \ if (c == 'p' || c == 'P') {\n            c = 'P';\n        } else if (c == 'q'\
    \ || c == 'Q') {\n            c = 'Q';\n        } else if (c == 'r' || c == 'R')\
    \ {\n            c = 'R';\n        } else if (c == 's' || c == 'S') {\n      \
    \      c = 'S';\n        } else if (c == 't' || c == 'T') {\n            c = 'T';\n\
    \        } else if (c == 'u' || c == 'U') {\n            c = 'U';\n        } else\
    \ if (c == 'v' || c == 'V') {\n            c = 'V';\n        } else if (c == 'w'\
    \ || c == 'W') {\n            c = 'W';\n        } else if (c == 'x' || c == 'X')\
    \ {\n            c = 'X';\n        } else if (c == 'y' || c == 'Y') {\n      \
    \      c = 'Y';\n        } else if (c == 'z' || c == 'Z') {\n            c = 'Z';\n\
    \        } else if (c == 'A' || c == 'a') {\n            c = 'a';\n        } else\
    \ if (c == 'B' || c == 'b') {\n            c = 'b';\n        } else if (c == 'C'\
    \ || c == 'c') {\n            c = 'c';\n        } else if (c == 'D' || c == 'd')\
    \ {\n            c = 'd';\n        } else if (c == 'E' || c == 'e') {\n      \
    \      c = 'e';\n        } else if (c == 'F' || c == 'f') {\n            c = 'f';\n\
    \        } else if (c == 'G' || c == 'g') {\n            c = 'g';\n        } else\
    \ if (c == 'H", "    std::string flipped_string;\n    for (auto &c : string) {\n\
    \        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n   \
    \         flipped_string += 'A';\n        } else if (c == 'b' || c == 'c' || c\
    \ == 'd' || c == 'f' || c == 'g' || c == 'h' || c == 'j' || c == 'k' || c == 'l'\
    \ || c == 'm' || c == 'n' || c == 'p' || c == 'q' || c == 'r' || c == 's' || c\
    \ == 't' || c == 'v' || c == 'w' || c == 'x' || c == 'y' || c == 'z') {\n    \
    \        flipped_string += 'B';\n        } else if (c == 'A' || c == 'B' || c\
    \ == 'C' || c == 'D' || c == 'E' || c == 'F' || c == 'G' || c == 'H' || c == 'I'\
    \ || c == 'J' || c == 'K' || c == 'L' || c == 'M' || c == 'N' || c == 'P' || c\
    \ == 'Q' || c == 'R' || c == 'S' || c == 'T' || c == 'V' || c == 'W' || c == 'X'\
    \ || c == 'Y' || c == 'Z') {\n            flipped_string += 'a';\n        } else\
    \ if (c == 'B' || c == 'C' || c == 'D' || c == 'E' || c == 'F' || c == 'G' ||\
    \ c == 'H' || c == 'I' || c == 'J' || c == 'K' || c == 'L' || c == 'M' || c ==\
    \ 'N' || c == 'P' || c == 'Q' || c == 'R' || c == 'S' || c == 'T' || c == 'V'\
    \ || c == 'W' || c == 'X' || c == 'Y' || c == 'Z') {\n            flipped_string\
    \ += 'b';\n        } else if (c == 'C' || c == 'D' || c == 'E' || c == 'F' ||\
    \ c == 'G' || c == 'H' || c == 'I' || c == 'J' || c == 'K' || c == 'L' || c ==\
    \ 'M' || c == 'N' || c == 'P' || c == 'Q' || c == 'R' || c == 'S' || c == 'T'\
    \ || c == 'V' || c == 'W' || c == 'X' || c == 'Y' || c == 'Z') {\n           \
    \ flipped_string += 'c';\n        } else if (c == 'D' || c == 'E' || c == 'F'\
    \ || c == 'G' || c == 'H' || c == 'I' || c == 'J' || c == 'K' || c == 'L' || c\
    \ == 'M' || c == 'N' || c == 'P' || c == 'Q' || c == 'R' || c == 'S' || c == 'T'\
    \ || c == 'V' || ", "    std::string result;\n    for (auto &c : string) {\n \
    \       if (c >= 'a' && c <= 'z') {\n            result += toupper(c);\n     \
    \   } else if (c >= 'A' && c <= 'Z') {\n            result += tolower(c);\n  \
    \      } else {\n            result += c;\n        }\n    }\n    return result;",
  "    std::string s = string;\n    for (auto &c : s) {\n        if (c >= 'a' && c\
    \ <= 'z') {\n            c += 'A' - 'a';\n        } else if (c >= 'A' && c <=\
    \ 'Z') {\n            c += 'a' - 'A';\n        }\n    }\n    return s;", "   \
    \ std::string flipped = \"\";\n    for (auto &c : string) {\n        if (c ==\
    \ 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            flipped\
    \ += 'A';\n        } else if (c == 'b' || c == 'c' || c == 'd' || c == 'f' ||\
    \ c == 'g' || c == 'h' || c == 'j' || c == 'k' || c == 'l' || c == 'm' || c ==\
    \ 'n' || c == 'p' || c == 'q' || c == 'r' || c == 's' || c == 't' || c == 'v'\
    \ || c == 'w' || c == 'x' || c == 'y' || c == 'z') {\n            flipped += 'B';\n\
    \        } else if (c == 'A' || c == 'B' || c == 'C' || c == 'D' || c == 'E' ||\
    \ c == 'F' || c == 'G' || c == 'H' || c == 'I' || c == 'J' || c == 'K' || c ==\
    \ 'L' || c == 'M' || c == 'N' || c == 'P' || c == 'Q' || c == 'R' || c == 'S'\
    \ || c == 'T' || c == 'V' || c == 'W' || c == 'X' || c == 'Y' || c == 'Z') {\n\
    \            flipped += 'a';\n        } else if (c == 'B' || c == 'C' || c ==\
    \ 'D' || c == 'E' || c == 'F' || c == 'G' || c == 'H' || c == 'I' || c == 'J'\
    \ || c == 'K' || c == 'L' || c == 'M' || c == 'N' || c == 'P' || c == 'Q' || c\
    \ == 'R' || c == 'S' || c == 'T' || c == 'V' || c == 'W' || c == 'X' || c == 'Y'\
    \ || c == 'Z') {\n            flipped += 'b';\n        } else if (c == 'C' ||\
    \ c == 'D' || c == 'E' || c == 'F' || c == 'G' || c == 'H' || c == 'I' || c ==\
    \ 'J' || c == 'K' || c == 'L' || c == 'M' || c == 'N' || c == 'P' || c == 'Q'\
    \ || c == 'R' || c == 'S' || c == 'T' || c == 'V' || c == 'W' || c == 'X' || c\
    \ == 'Y' || c == 'Z') {\n            flipped += 'c';\n        } else if (c ==\
    \ 'D' || c == 'E' || c == 'F' || c == 'G' || c == 'H' || c == 'I' || c == 'J'\
    \ || c == 'K' || c == 'L' || c == 'M' || c == 'N' || c == 'P' || c == 'Q' || c\
    \ == 'R' || c == 'S' || c == 'T' || c == 'V' || c == 'W' || c", "    std::string\
    \ result = string;\n    for (size_t i = 0; i < result.size(); i++) {\n       \
    \ if (result[i] >= 'a' && result[i] <= 'z') {\n            result[i] = 'A';\n\
    \        } else if (result[i] >= 'A' && result[i] <= 'Z') {\n            result[i]\
    \ = 'a';\n        }\n    }\n    return result;", "    std::string new_string;\n\
    \    for (auto &c : string) {\n        if (c >= 'a' && c <= 'z') {\n         \
    \   new_string += toupper(c);\n        } else if (c >= 'A' && c <= 'Z') {\n  \
    \          new_string += tolower(c);\n        } else {\n            new_string\
    \ += c;\n        }\n    }\n    return new_string;", "    std::string result =\
    \ string;\n    for (size_t i = 0; i < result.size(); i++) {\n        if (result[i]\
    \ >= 'a' && result[i] <= 'z') {\n            result[i] = 'A';\n        } else\
    \ if (result[i] >= 'A' && result[i] <= 'Z') {\n            result[i] = 'a';\n\
    \        }\n    }\n    return result;", "    std::string result = string;\n  \
    \  for (size_t i = 0; i < result.size(); i++) {\n        if (result[i] >= 'a'\
    \ && result[i] <= 'z') {\n            result[i] = result[i] - 32;\n        }\n\
    \        if (result[i] >= 'A' && result[i] <= 'Z') {\n            result[i] =\
    \ result[i] + 32;\n        }\n    }\n    return result;", "    std::string s =\
    \ string;\n    for (auto &c : s) {\n        if (c >= 'a' && c <= 'z') {\n    \
    \        c ^= 32;\n        }\n        else if (c >= 'A' && c <= 'Z') {\n     \
    \       c ^= 32;\n        }\n    }\n    return s;", "    std::string s = string;\n\
    \    for (size_t i = 0; i < s.size(); i++) {\n        if (s[i] >= 'a' && s[i]\
    \ <= 'z') {\n            s[i] = s[i] - 32;\n        }\n        else if (s[i] >=\
    \ 'A' && s[i] <= 'Z') {\n            s[i] = s[i] - 32;\n        }\n    }\n   \
    \ return s;", "    std::string result = string;\n    for (size_t i = 0; i < result.size();\
    \ i++) {\n        if (result[i] >= 'a' && result[i] <= 'z')\n            result[i]\
    \ = result[i] - 32;\n        else if (result[i] >= 'A' && result[i] <= 'Z')\n\
    \            result[i] = result[i] + 32;\n    }\n    return result;", "    std::string\
    \ flipped_string;\n    for (auto &c : string) {\n        if (c == 'a' || c ==\
    \ 'e' || c == 'i' || c == 'o' || c == 'u') {\n            flipped_string += 'A';\n\
    \        } else if (c == 'b' || c == 'c' || c == 'd' || c == 'f' || c == 'g' ||\
    \ c == 'h' || c == 'j' || c == 'k' || c == 'l' || c == 'm' || c == 'n' || c ==\
    \ 'p' || c == 'q' || c == 'r' || c == 's' || c == 't' || c == 'v' || c == 'w'\
    \ || c == 'x' || c == 'y' || c == 'z') {\n            flipped_string += 'B';\n\
    \        } else if (c == 'A' || c == 'B' || c == 'C' || c == 'D' || c == 'E' ||\
    \ c == 'F' || c == 'G' || c == 'H' || c == 'I' || c == 'J' || c == 'K' || c ==\
    \ 'L' || c == 'M' || c == 'N' || c == 'P' || c == 'Q' || c == 'R' || c == 'S'\
    \ || c == 'T' || c == 'V' || c == 'W' || c == 'X' || c == 'Y' || c == 'Z') {\n\
    \            flipped_string += 'a';\n        } else if (c == 'B' || c == 'C' ||\
    \ c == 'D' || c == 'E' || c == 'F' || c == 'G' || c == 'H' || c == 'I' || c ==\
    \ 'J' || c == 'K' || c == 'L' || c == 'M' || c == 'N' || c == 'P' || c == 'Q'\
    \ || c == 'R' || c == 'S' || c == 'T' || c == 'V' || c == 'W' || c == 'X' || c\
    \ == 'Y' || c == 'Z') {\n            flipped_string += 'b';\n        } else if\
    \ (c == 'C' || c == 'D' || c == 'E' || c == 'F' || c == 'G' || c == 'H' || c ==\
    \ 'I' || c == 'J' || c == 'K' || c == 'L' || c == 'M' || c == 'N' || c == 'P'\
    \ || c == 'Q' || c == 'R' || c == 'S' || c == 'T' || c == 'V' || c == 'W' || c\
    \ == 'X' || c == 'Y' || c == 'Z') {\n            flipped_string += 'c';\n    \
    \    } else if (c == 'D' || c == 'E' || c == 'F' || c == 'G' || c == 'H' || c\
    \ == 'I' || c == 'J' || c == 'K' || c == 'L' || c == 'M' || c == 'N' || c == 'P'\
    \ || c == 'Q' || c == 'R' || c == 'S' || c == 'T' || c == 'V' || ", "    std::string\
    \ result = string;\n    for (auto &c : result) {\n        if (c >= 'a' && c <=\
    \ 'z') {\n            c += 'A' - 'a';\n        } else if (c >= 'A' && c <= 'Z')\
    \ {\n            c += 'a' - 'A';\n        }\n    }\n    return result;", "   \
    \ std::string s = string;\n    for (auto &c : s) {\n        if (c >= 'a' && c\
    \ <= 'z') {\n            c = c - 32;\n        } else if (c >= 'A' && c <= 'Z')\
    \ {\n            c = c + 32;\n        }\n    }\n    return s;", "    std::string\
    \ flipped = \"\";\n    for (auto c : string) {\n        if ('A' <= c && c <= 'Z')\
    \ {\n            flipped += c + ('A' - 'a');\n        } else {\n            flipped\
    \ += c;\n        }\n    }\n    return flipped;", "    string result = string;\n\
    \    for (size_t i = 0; i < result.size(); i++) {\n        if (result[i] >= 'a'\
    \ && result[i] <= 'z') {\n            result[i] = 'A';\n        } else if (result[i]\
    \ >= 'A' && result[i] <= 'Z') {\n            result[i] = 'a';\n        }\n   \
    \ }\n    return result;", "    string s = string;\n    for (size_t i = 0; i <\
    \ s.length(); i++) {\n        if (s[i] >= 'a' && s[i] <= 'z') {\n            s[i]\
    \ = s[i] - 32;\n        }\n        else if (s[i] >= 'A' && s[i] <= 'Z') {\n  \
    \          s[i] = s[i] - 32;\n        }\n    }\n    return s;", "    std::string\
    \ result;\n    for (auto &c : string) {\n        if (c >= 'a' && c <= 'z') {\n\
    \            result += toupper(c);\n        } else if (c >= 'A' && c <= 'Z') {\n\
    \            result += tolower(c);\n        } else {\n            result += c;\n\
    \        }\n    }\n    return result;", "    std::string flipped_string;\n   \
    \ for (auto &c : string) {\n        if (c == 'a' || c == 'e' || c == 'i' || c\
    \ == 'o' || c == 'u') {\n            flipped_string += 'A';\n        } else if\
    \ (c == 'b' || c == 'c' || c == 'd' || c == 'f' || c == 'g') {\n            flipped_string\
    \ += 'B';\n        } else if (c == 'h' || c == 'j' || c == 'k' || c == 'l' ||\
    \ c == 'm') {\n            flipped_string += 'C';\n        } else if (c == 'n'\
    \ || c == 'p' || c == 'q' || c == 'r' || c == 's') {\n            flipped_string\
    \ += 'D';\n        } else if (c == 't' || c == 'v' || c == 'w' || c == 'x' ||\
    \ c == 'y') {\n            flipped_string += 'E';\n        } else if (c == 'z'\
    \ || c == 'x' || c == 'y' || c == 'z') {\n            flipped_string += 'F';\n\
    \        } else {\n            flipped_string += c;\n        }\n    }\n    return\
    \ flipped_string;", "    std::string s = string;\n    for (size_t i = 0; i < s.size();\
    \ i++) {\n        if (s[i] == 'a') {\n            s[i] = 'A';\n        } else\
    \ if (s[i] == 'b') {\n            s[i] = 'B';\n        } else if (s[i] == 'c')\
    \ {\n            s[i] = 'C';\n        } else if (s[i] == 'd') {\n            s[i]\
    \ = 'D';\n        } else if (s[i] == 'e') {\n            s[i] = 'E';\n       \
    \ } else if (s[i] == 'f') {\n            s[i] = 'F';\n        } else if (s[i]\
    \ == 'g') {\n            s[i] = 'G';\n        } else if (s[i] == 'h') {\n    \
    \        s[i] = 'H';\n        } else if (s[i] == 'i') {\n            s[i] = 'I';\n\
    \        } else if (s[i] == 'j') {\n            s[i] = 'J';\n        } else if\
    \ (s[i] == 'k') {\n            s[i] = 'K';\n        } else if (s[i] == 'l') {\n\
    \            s[i] = 'L';\n        } else if (s[i] == 'm') {\n            s[i]\
    \ = 'M';\n        } else if (s[i] == 'n') {\n            s[i] = 'N';\n       \
    \ } else if (s[i] == 'o') {\n            s[i] = 'O';\n        } else if (s[i]\
    \ == 'p') {\n            s[i] = 'P';\n        } else if (s[i] == 'q') {\n    \
    \        s[i] = 'Q';\n        } else if (s[i] == 'r') {\n            s[i] = 'R';\n\
    \        } else if (s[i] == 's') {\n            s[i] = 'S';\n        } else if\
    \ (s[i] == 't') {\n            s[i] = 'T';\n        } else if (s[i] == 'u') {\n\
    \            s[i] = 'U';\n        } else if (s[i] == 'v') {\n            s[i]\
    \ = 'V';\n        } else if (s[i] == 'w') {\n            s[i] = 'W';\n       \
    \ } else if (s[i] == 'x') {\n            s[i] = 'X';\n        } else if (s[i]\
    \ == 'y') {\n            s[i] = 'Y';\n        } else if (s[i] == 'z') {\n    \
    \        s[i] = 'Z';\n        }\n    }\n    return s;", "    std::string new_string;\n\
    \    for (auto &c : string) {\n        if (c >= 'a' && c <= 'z') {\n         \
    \   c += 'A' - 'a';\n        }\n        else if (c >= 'A' && c <= 'Z') {\n   \
    \         c += 'a' - 'A';\n        }\n        new_string.push_back(c);\n    }\n\
    \    return new_string;", "    std::string result;\n    for (auto &c : string)\
    \ {\n        if (c >= 'a' && c <= 'z') {\n            c += 'A' - 'a';\n      \
    \  } else if (c >= 'A' && c <= 'Z') {\n            c += 'a' - 'A';\n        }\
    \ else {\n            c = c;\n        }\n        result += c;\n    }\n    return\
    \ result;", "    std::string s = string;\n    for (size_t i = 0; i < s.size();\
    \ i++) {\n        if (s[i] == 'a') {\n            s[i] = 'A';\n        } else\
    \ if (s[i] == 'b') {\n            s[i] = 'B';\n        } else if (s[i] == 'c')\
    \ {\n            s[i] = 'C';\n        } else if (s[i] == 'd') {\n            s[i]\
    \ = 'D';\n        } else if (s[i] == 'e') {\n            s[i] = 'E';\n       \
    \ } else if (s[i] == 'f') {\n            s[i] = 'F';\n        } else if (s[i]\
    \ == 'g') {\n            s[i] = 'G';\n        } else if (s[i] == 'h') {\n    \
    \        s[i] = 'H';\n        } else if (s[i] == 'i') {\n            s[i] = 'I';\n\
    \        } else if (s[i] == 'j') {\n            s[i] = 'J';\n        } else if\
    \ (s[i] == 'k') {\n            s[i] = 'K';\n        } else if (s[i] == 'l') {\n\
    \            s[i] = 'L';\n        } else if (s[i] == 'm') {\n            s[i]\
    \ = 'M';\n        } else if (s[i] == 'n') {\n            s[i] = 'N';\n       \
    \ } else if (s[i] == 'o') {\n            s[i] = 'O';\n        } else if (s[i]\
    \ == 'p') {\n            s[i] = 'P';\n        } else if (s[i] == 'q') {\n    \
    \        s[i] = 'Q';\n        } else if (s[i] == 'r') {\n            s[i] = 'R';\n\
    \        } else if (s[i] == 's') {\n            s[i] = 'S';\n        } else if\
    \ (s[i] == 't') {\n            s[i] = 'T';\n        } else if (s[i] == 'u') {\n\
    \            s[i] = 'U';\n        } else if (s[i] == 'v') {\n            s[i]\
    \ = 'V';\n        } else if (s[i] == 'w') {\n            s[i] = 'W';\n       \
    \ } else if (s[i] == 'x') {\n            s[i] = 'X';\n        } else if (s[i]\
    \ == 'y') {\n            s[i] = 'Y';\n        } else if (s[i] == 'z') {\n    \
    \        s[i] = 'Z';\n        } else if (s[i] == 'A') {\n            s[i] = 'a';\n\
    \        } else if (s[i] == 'B') {\n            s[i] = 'b';\n        } else if\
    \ (s[i] == 'C') {\n            s[i] = 'c';\n        } else if (s[i] == 'D') {\n\
    \            s[i] = 'd';\n        } else if (s[i] == 'E') {\n            s[i]\
    \ = 'e';\n        } else if (s[i] == 'F') {\n            s[i] = 'f';\n       \
    \ } else if (s[i] == 'G') {\n            s[i] = 'g';\n        } else if (s[i]\
    \ == 'H') {\n            s[i] = 'h';\n        } else if (s[i] == 'I') {\n    \
    \        s[i] = 'i';\n        } else if (s[i] == 'J') {\n            s[i] = 'j';\n\
    \        } else if (s[i] == 'K') {\n            s[i] = 'k';\n        } else if\
    \ (s[i] == 'L') {\n            s[i] = 'l';\n        } else if (s[i] == 'M') {\n\
    \            s[i] = 'm';\n        } else if (s[i] == 'N') {\n            s[i]\
    \ = 'n';\n        } else if (s[i] == 'O') {\n            s[i] = 'o';\n       \
    \ } else if (s[i] == 'P') {\n            s[i] = '", "    std::string result =\
    \ string;\n    for (size_t i = 0; i < result.size(); i++) {\n        if (result[i]\
    \ >= 'a' && result[i] <= 'z') {\n            result[i] = result[i] - 32;\n   \
    \     }\n        else if (result[i] >= 'A' && result[i] <= 'Z') {\n          \
    \  result[i] = result[i] + 32;\n        }\n    }\n    return result;", "    std::string\
    \ result = string;\n    for (size_t i = 0; i < result.size(); i++) {\n       \
    \ if (result[i] >= 'a' && result[i] <= 'z') {\n            result[i] = result[i]\
    \ - 32;\n        }\n        else if (result[i] >= 'A' && result[i] <= 'Z') {\n\
    \            result[i] = result[i] + 32;\n        }\n    }\n    return result;",
  "    std::string s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n  \
    \      if (s[i] >= 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n    \
    \    } else if (s[i] >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] - 32;\n\
    \        }\n    }\n    return s;", "    std::string result = string;\n    for\
    \ (auto &c : result) {\n        if (c >= 'A' && c <= 'Z') {\n            c +=\
    \ 'a' - 'A';\n        } else if (c >= 'a' && c <= 'z') {\n            c += 'A'\
    \ - 'a';\n        }\n    }\n    return result;", "    std::string s = string;\n\
    \    for (size_t i = 0; i < s.length(); i++) {\n        if (s[i] == 'a') {\n \
    \           s[i] = 'A';\n        } else if (s[i] == 'b') {\n            s[i] =\
    \ 'B';\n        } else if (s[i] == 'c') {\n            s[i] = 'C';\n        }\
    \ else if (s[i] == 'd') {\n            s[i] = 'D';\n        } else if (s[i] ==\
    \ 'e') {\n            s[i] = 'E';\n        } else if (s[i] == 'f') {\n       \
    \     s[i] = 'F';\n        } else if (s[i] == 'g') {\n            s[i] = 'G';\n\
    \        } else if (s[i] == 'h') {\n            s[i] = 'H';\n        } else if\
    \ (s[i] == 'i') {\n            s[i] = 'I';\n        } else if (s[i] == 'j') {\n\
    \            s[i] = 'J';\n        } else if (s[i] == 'k') {\n            s[i]\
    \ = 'K';\n        } else if (s[i] == 'l') {\n            s[i] = 'L';\n       \
    \ } else if (s[i] == 'm') {\n            s[i] = 'M';\n        } else if (s[i]\
    \ == 'n') {\n            s[i] = 'N';\n        } else if (s[i] == 'o') {\n    \
    \        s[i] = 'O';\n        } else if (s[i] == 'p') {\n            s[i] = 'P';\n\
    \        } else if (s[i] == 'q') {\n            s[i] = 'Q';\n        } else if\
    \ (s[i] == 'r') {\n            s[i] = 'R';\n        } else if (s[i] == 's') {\n\
    \            s[i] = 'S';\n        } else if (s[i] == 't') {\n            s[i]\
    \ = 'T';\n        } else if (s[i] == 'u') {\n            s[i] = 'U';\n       \
    \ } else if (s[i] == 'v') {\n            s[i] = 'V';\n        } else if (s[i]\
    \ == 'w') {\n            s[i] = 'W';\n        } else if (s[i] == 'x') {\n    \
    \        s[i] = 'X';\n        } else if (s[i] == 'y') {\n            s[i] = 'Y';\n\
    \        } else if (s[i] == 'z') {\n            s[i] = 'Z';\n        }\n    }\n\
    \    return s;", "    std::string result = string;\n    for (size_t i = 0; i <\
    \ result.size(); i++) {\n        if (result[i] >= 'a' && result[i] <= 'z') {\n\
    \            result[i] = result[i] - 32;\n        } else if (result[i] >= 'A'\
    \ && result[i] <= 'Z') {\n            result[i] = result[i] + 32;\n        }\n\
    \    }\n    return result;", "    string result = string;\n    for (auto &c :\
    \ result) {\n        if (c >= 'a' && c <= 'z') {\n            c += 'A' - 'a';\n\
    \        } else if (c >= 'A' && c <= 'Z') {\n            c += 'a' - 'A';\n   \
    \     }\n    }\n    return result;", "    std::string new_string;\n    for (auto\
    \ &c : string) {\n        if (c >= 'a' && c <= 'z') {\n            c += 'A' -\
    \ 'a';\n        } else if (c >= 'A' && c <= 'Z') {\n            c += 'a' - 'A';\n\
    \        }\n        new_string += c;\n    }\n    return new_string;", "    std::string\
    \ result = string;\n    for (auto &c : result) {\n        if (c >= 'a' && c <=\
    \ 'z')\n            c = c - 'a' + 'A';\n        else if (c >= 'A' && c <= 'Z')\n\
    \            c = c - 'A' + 'a';\n    }\n    return result;", "    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.size(); i++) {\n        if (s[i] >=\
    \ 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        }\n        else\
    \ if (s[i] >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] - 32;\n        }\n\
    \    }\n    return s;", "    std::string new_string;\n    for (auto &c : string)\
    \ {\n        if (c >= 'a' && c <= 'z') {\n            new_string += toupper(c);\n\
    \        } else if (c >= 'A' && c <= 'Z') {\n            new_string += tolower(c);\n\
    \        } else {\n            new_string += c;\n        }\n    }\n    return\
    \ new_string;", "    std::string new_string;\n    for (auto &c : string) {\n \
    \       if (c >= 'a' && c <= 'z') {\n            new_string += toupper(c);\n \
    \       } else if (c >= 'A' && c <= 'Z') {\n            new_string += tolower(c);\n\
    \        } else {\n            new_string += c;\n        }\n    }\n    return\
    \ new_string;", "    std::string result = string;\n    for (auto &c : result)\
    \ {\n        if (c >= 'a' && c <= 'z') {\n            c += 'A' - 'a';\n      \
    \  } else if (c >= 'A' && c <= 'Z') {\n            c += 'a' - 'A';\n        }\n\
    \    }\n    return result;", "    string s = string;\n    for (size_t i = 0; i\
    \ < s.length(); i++) {\n        if (s[i] == 'a' || s[i] == 'A') {\n          \
    \  s[i] = 'A';\n        } else if (s[i] == 'b' || s[i] == 'B') {\n           \
    \ s[i] = 'B';\n        } else if (s[i] == 'c' || s[i] == 'C') {\n            s[i]\
    \ = 'C';\n        } else if (s[i] == 'd' || s[i] == 'D') {\n            s[i] =\
    \ 'D';\n        } else if (s[i] == 'e' || s[i] == 'E') {\n            s[i] = 'E';\n\
    \        } else if (s[i] == 'f' || s[i] == 'F') {\n            s[i] = 'F';\n \
    \       } else if (s[i] == 'g' || s[i] == 'G') {\n            s[i] = 'G';\n  \
    \      } else if (s[i] == 'h' || s[i] == 'H') {\n            s[i] = 'H';\n   \
    \     } else if (s[i] == 'i' || s[i] == 'I') {\n            s[i] = 'I';\n    \
    \    } else if (s[i] == 'j' || s[i] == 'J') {\n            s[i] = 'J';\n     \
    \   } else if (s[i] == 'k' || s[i] == 'K') {\n            s[i] = 'K';\n      \
    \  } else if (s[i] == 'l' || s[i] == 'L') {\n            s[i] = 'L';\n       \
    \ } else if (s[i] == 'm' || s[i] == 'M') {\n            s[i] = 'M';\n        }\
    \ else if (s[i] == 'n' || s[i] == 'N') {\n            s[i] = 'N';\n        } else\
    \ if (s[i] == 'o' || s[i] == 'O') {\n            s[i] = 'O';\n        } else if\
    \ (s[i] == 'p' || s[i] == 'P') {\n            s[i] = 'P';\n        } else if (s[i]\
    \ == 'q' || s[i] == 'Q') {\n            s[i] = 'Q';\n        } else if (s[i] ==\
    \ 'r' || s[i] == 'R') {\n            s[i] = 'R';\n        } else if (s[i] == 's'\
    \ || s[i] == 'S') {\n            s[i] = 'S';\n        } else if (s[i] == 't' ||\
    \ s[i] == 'T') {\n            s[i] = 'T';\n        } else if (s[i] == 'u' || s[i]\
    \ == 'U') {\n            s[i] = 'U';\n        } else if (s[i] == 'v' || s[i] ==\
    \ 'V') {\n            s[i] = 'V';\n        } else if (s[i] == 'w' || s[i] == 'W')\
    \ {\n            s[i] = 'W';\n        } else if (s[i] == 'x' || s[i] == 'X') {\n\
    \            s[i] = 'X';\n        } else if (s[i] == 'y' || s[i] == 'Y') {\n \
    \           s[i] = 'Y';\n        } else if (s[i] == 'z' || s[i] == 'Z') {\n  \
    \          s[i] = 'Z';\n        }\n    }\n    return s;", "    std::string flipped_string;\n\
    \    for (auto &c : string) {\n        if (c == 'a' || c == 'e' || c == 'i' ||\
    \ c == 'o' || c == 'u') {\n            flipped_string += 'A';\n        } else\
    \ if (c == 'b' || c == 'c' || c == 'd' || c == 'f' || c == 'g' || c == 'h' ||\
    \ c == 'j' || c == 'k' || c == 'l' || c == 'm' || c == 'n' || c == 'p' || c ==\
    \ 'q' || c == 'r' || c == 's' || c == 't' || c == 'v' || c == 'w' || c == 'x'\
    \ || c == 'y' || c == 'z') {\n            flipped_string += 'B';\n        } else\
    \ if (c == 'A' || c == 'B' || c == 'C' || c == 'D' || c == 'E' || c == 'F' ||\
    \ c == 'G' || c == 'H' || c == 'I' || c == 'J' || c == 'K' || c == 'L' || c ==\
    \ 'M' || c == 'N' || c == 'P' || c == 'Q' || c == 'R' || c == 'S' || c == 'T'\
    \ || c == 'V' || c == 'W' || c == 'X' || c == 'Y' || c == 'Z') {\n           \
    \ flipped_string += 'a';\n        } else if (c == 'B' || c == 'C' || c == 'D'\
    \ || c == 'E' || c == 'F' || c == 'G' || c == 'H' || c == 'I' || c == 'J' || c\
    \ == 'K' || c == 'L' || c == 'M' || c == 'N' || c == 'P' || c == 'Q' || c == 'R'\
    \ || c == 'S' || c == 'T' || c == 'V' || c == 'W' || c == 'X' || c == 'Y' || c\
    \ == 'Z') {\n            flipped_string += 'b';\n        } else if (c == 'C' ||\
    \ c == 'D' || c == 'E' || c == 'F' || c == 'G' || c == 'H' || c == 'I' || c ==\
    \ 'J' || c == 'K' || c == 'L' || c == 'M' || c == 'N' || c == 'P' || c == 'Q'\
    \ || c == 'R' || c == 'S' || c == 'T' || c == 'V' || c == 'W' || c == 'X' || c\
    \ == 'Y' || c == 'Z') {\n            flipped_string += 'c';\n        } else if\
    \ (c == 'D' || c == 'E' || c == 'F' || c == 'G' || c == 'H' || c == 'I' || c ==\
    \ 'J' || c == 'K' || c == 'L' || c == 'M' || c == 'N' || c == 'P' || c == 'Q'\
    \ || c == 'R' || c == 'S' || c == 'T' || c == 'V' || ", "    std::string s = string;\n\
    \    for (size_t i = 0; i < s.length(); i++) {\n        if (s[i] == 'a' || s[i]\
    \ == 'A') {\n            s[i] = 'A';\n        } else if (s[i] == 'b' || s[i] ==\
    \ 'B') {\n            s[i] = 'B';\n        } else if (s[i] == 'c' || s[i] == 'C')\
    \ {\n            s[i] = 'C';\n        } else if (s[i] == 'd' || s[i] == 'D') {\n\
    \            s[i] = 'D';\n        } else if (s[i] == 'e' || s[i] == 'E') {\n \
    \           s[i] = 'E';\n        } else if (s[i] == 'f' || s[i] == 'F') {\n  \
    \          s[i] = 'F';\n        } else if (s[i] == 'g' || s[i] == 'G') {\n   \
    \         s[i] = 'G';\n        } else if (s[i] == 'h' || s[i] == 'H') {\n    \
    \        s[i] = 'H';\n        } else if (s[i] == 'i' || s[i] == 'I') {\n     \
    \       s[i] = 'I';\n        } else if (s[i] == 'j' || s[i] == 'J') {\n      \
    \      s[i] = 'J';\n        } else if (s[i] == 'k' || s[i] == 'K') {\n       \
    \     s[i] = 'K';\n        } else if (s[i] == 'l' || s[i] == 'L') {\n        \
    \    s[i] = 'L';\n        } else if (s[i] == 'm' || s[i] == 'M') {\n         \
    \   s[i] = 'M';\n        } else if (s[i] == 'n' || s[i] == 'N') {\n          \
    \  s[i] = 'N';\n        } else if (s[i] == 'o' || s[i] == 'O') {\n           \
    \ s[i] = 'O';\n        } else if (s[i] == 'p' || s[i] == 'P') {\n            s[i]\
    \ = 'P';\n        } else if (s[i] == 'q' || s[i] == 'Q') {\n            s[i] =\
    \ 'Q';\n        } else if (s[i] == 'r' || s[i] == 'R') {\n            s[i] = 'R';\n\
    \        } else if (s[i] == 's' || s[i] == 'S') {\n            s[i] = 'S';\n \
    \       } else if (s[i] == 't' || s[i] == 'T') {\n            s[i] = 'T';\n  \
    \      } else if (s[i] == 'u' || s[i] == 'U') {\n            s[i] = 'U';\n   \
    \     } else if (s[i] == 'v' || s[i] == 'V') {\n            s[i] = 'V';\n    \
    \    } else if (s[i] == 'w' || s[i] == 'W') {\n            s[i] = 'W';\n     \
    \   } else if (s[i] == 'x' || s[i] == 'X') {\n            s[i] = 'X';\n      \
    \  } else if (s[i] == 'y' || s[i] == 'Y') {\n            s[i] = 'Y';\n       \
    \ } else if (s[i] == 'z' || s[i] == 'Z') {\n            s[i] = 'Z';\n        }\n\
    \    }\n    return s;", "    std::string s = string;\n    for (auto &c : s) {\n\
    \        if (c >= 'a' && c <= 'z') {\n            c += 'A' - 'a';\n        } else\
    \ if (c >= 'A' && c <= 'Z') {\n            c += 'a' - 'A';\n        }\n    }\n\
    \    return s;", "    std::string result = string;\n    for (size_t i = 0; i <\
    \ result.size(); i++) {\n        if (result[i] >= 'a' && result[i] <= 'z') {\n\
    \            result[i] = result[i] - 32;\n        } else if (result[i] >= 'A'\
    \ && result[i] <= 'Z') {\n            result[i] = result[i] + 32;\n        }\n\
    \    }\n    return result;", "    std::string s = string;\n    for (size_t i =\
    \ 0; i < s.length(); i++) {\n        if (s[i] == 'a')\n            s[i] = 'A';\n\
    \        else if (s[i] == 'b')\n            s[i] = 'B';\n        else if (s[i]\
    \ == 'c')\n            s[i] = 'C';\n        else if (s[i] == 'd')\n          \
    \  s[i] = 'D';\n        else if (s[i] == 'e')\n            s[i] = 'E';\n     \
    \   else if (s[i] == 'f')\n            s[i] = 'F';\n        else if (s[i] == 'g')\n\
    \            s[i] = 'G';\n        else if (s[i] == 'h')\n            s[i] = 'H';\n\
    \        else if (s[i] == 'i')\n            s[i] = 'I';\n        else if (s[i]\
    \ == 'j')\n            s[i] = 'J';\n        else if (s[i] == 'k')\n          \
    \  s[i] = 'K';\n        else if (s[i] == 'l')\n            s[i] = 'L';\n     \
    \   else if (s[i] == 'm')\n            s[i] = 'M';\n        else if (s[i] == 'n')\n\
    \            s[i] = 'N';\n        else if (s[i] == 'o')\n            s[i] = 'O';\n\
    \        else if (s[i] == 'p')\n            s[i] = 'P';\n        else if (s[i]\
    \ == 'q')\n            s[i] = 'Q';\n        else if (s[i] == 'r')\n          \
    \  s[i] = 'R';\n        else if (s[i] == 's')\n            s[i] = 'S';\n     \
    \   else if (s[i] == 't')\n            s[i] = 'T';\n        else if (s[i] == 'u')\n\
    \            s[i] = 'U';\n        else if (s[i] == 'v')\n            s[i] = 'V';\n\
    \        else if (s[i] == 'w')\n            s[i] = 'W';\n        else if (s[i]\
    \ == 'x')\n            s[i] = 'X';\n        else if (s[i] == 'y')\n          \
    \  s[i] = 'Y';\n        else if (s[i] == 'z')\n            s[i] = 'Z';\n    }\n\
    \    return s;", "    std::string s = string;\n    for (auto &c : s) {\n     \
    \   if (c >= 'a' && c <= 'z') {\n            c = c - 32;\n        }\n        else\
    \ if (c >= 'A' && c <= 'Z') {\n            c = c + 32;\n        }\n    }\n   \
    \ return s;", "    std::string s = string;\n    for (auto &c : s) {\n        if\
    \ (c >= 'a' && c <= 'z') {\n            c += 'A' - 'a';\n        } else if (c\
    \ >= 'A' && c <= 'Z') {\n            c += 'a' - 'A';\n        }\n    }\n    return\
    \ s;", "    std::string new_string;\n    for (auto &c : string) {\n        if\
    \ (c >= 'a' && c <= 'z')\n            new_string += c + ('A' - 'a');\n       \
    \ else if (c >= 'A' && c <= 'Z')\n            new_string += c + ('a' - 'A');\n\
    \        else\n            new_string += c;\n    }\n    return new_string;", " \
    \   std::string flipped = \"\";\n    for (auto &c : string) {\n        if (c ==\
    \ 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            flipped\
    \ += 'A';\n        } else if (c == 'b' || c == 'c' || c == 'd' || c == 'f' ||\
    \ c == 'g') {\n            flipped += 'B';\n        } else if (c == 'h' || c ==\
    \ 'j' || c == 'k' || c == 'l' || c == 'm') {\n            flipped += 'C';\n  \
    \      } else if (c == 'n' || c == 'p' || c == 'q' || c == 'r' || c == 's') {\n\
    \            flipped += 'D';\n        } else if (c == 't' || c == 'v' || c ==\
    \ 'w' || c == 'x' || c == 'y') {\n            flipped += 'E';\n        } else\
    \ if (c == 'z' || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n\
    \            flipped += 'F';\n        } else if (c == 'B' || c == 'C' || c ==\
    \ 'D' || c == 'F' || c == 'G') {\n            flipped += 'G';\n        } else\
    \ if (c == 'H' || c == 'J' || c == 'K' || c == 'L' || c == 'M') {\n          \
    \  flipped += 'H';\n        } else if (c == 'N' || c == 'P' || c == 'Q' || c ==\
    \ 'R' || c == 'S') {\n            flipped += 'I';\n        } else if (c == 'T'\
    \ || c == 'V' || c == 'W' || c == 'X' || c == 'Y') {\n            flipped += 'J';\n\
    \        } else if (c == 'Z' || c == 'a' || c == 'e' || c == 'i' || c == 'o' ||\
    \ c == 'u') {\n            flipped += 'K';\n        } else if (c == 'b' || c ==\
    \ 'c' || c == 'd' || c == 'f' || c == 'g') {\n            flipped += 'L';\n  \
    \      } else if (c == 'h' || c == 'j' || c == 'k' || c == 'l' || c == 'm') {\n\
    \            flipped += 'M';\n        } else if (c == 'n' || c == 'p' || c ==\
    \ 'q' || c == 'r' || c == 's') {\n            flipped += 'N';\n        } else\
    \ if (c == 't' || c == 'v' || c == 'w' || c == 'x' || c == 'y') {\n          \
    \  flipped += 'O';\n        } else if (c == 'z' || c == 'A' || c == 'E' || c ==\
    \ 'I' || c == 'O' || c == 'U') {\n            flipped += 'P';\n        } else\
    \ if (c == 'B' || c == 'C' || c == 'D' || c == 'F' || c == 'G') {\n          \
    \  ", "    std::string result = string;\n    for (size_t i = 0; i < result.size();\
    \ i++) {\n        if (result[i] >= 'a' && result[i] <= 'z') {\n            result[i]\
    \ = 'A';\n        } else if (result[i] >= 'A' && result[i] <= 'Z') {\n       \
    \     result[i] = 'a';\n        }\n    }\n    return result;", "    std::string\
    \ result = string;\n    for (auto &c : result) {\n        if (c >= 'a' && c <=\
    \ 'z') {\n            c = c - 32;\n        } else if (c >= 'A' && c <= 'Z') {\n\
    \            c = c + 32;\n        }\n    }\n    return result;", "    std::string\
    \ new_string;\n    for (auto &c : string) {\n        if (c >= 'a' && c <= 'z')\
    \ {\n            new_string += toupper(c);\n        } else if (c >= 'A' && c <=\
    \ 'Z') {\n            new_string += tolower(c);\n        } else {\n          \
    \  new_string += c;\n        }\n    }\n    return new_string;", "    std::string\
    \ new_string;\n    for (auto &c : string) {\n        if (c >= 'a' && c <= 'z')\
    \ {\n            new_string += c + 32;\n        } else if (c >= 'A' && c <= 'Z')\
    \ {\n            new_string += c + 32;\n        } else {\n            new_string\
    \ += c;\n        }\n    }\n    return new_string;", "    std::string flipped_string;\n\
    \    for (auto &c : string) {\n        if (c >= 'a' && c <= 'z') {\n         \
    \   c = c + 32;\n        } else if (c >= 'A' && c <= 'Z') {\n            c = c\
    \ - 32;\n        }\n        flipped_string.push_back(c);\n    }\n    return flipped_string;",
  "    std::string flipped_string;\n    for (int i = 0; i < string.length(); i++)\
    \ {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            flipped_string\
    \ += string[i] - 'a' + 'A';\n        } else if (string[i] >= 'A' && string[i]\
    \ <= 'Z') {\n            flipped_string += string[i] - 'A' + 'a';\n        } else\
    \ {\n            flipped_string += string[i];\n        }\n    }\n    return flipped_string;",
  "    std::string s = string;\n    for (auto &c : s) {\n        if (c >= 'a' && c\
    \ <= 'z') {\n            c = c - 32;\n        }\n        if (c >= 'A' && c <=\
    \ 'Z') {\n            c = c + 32;\n        }\n    }\n    return s;", "    std::string\
    \ flipped_string;\n    for (int i = 0; i < string.length(); i++) {\n        if\
    \ (string[i] >= 'a' && string[i] <= 'z') {\n            flipped_string += string[i]\
    \ - 'a' + 'A';\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n \
    \           flipped_string += string[i] - 'A' + 'a';\n        } else {\n     \
    \       flipped_string += string[i];\n        }\n    }\n    return flipped_string;",
  "    std::string flipped_string;\n    for (auto &c : string) {\n        if (c >=\
    \ 'a' && c <= 'z') {\n            flipped_string += toupper(c);\n        } else\
    \ if (c >= 'A' && c <= 'Z') {\n            flipped_string += tolower(c);\n   \
    \     } else {\n            flipped_string += c;\n        }\n    }\n    return\
    \ flipped_string;", "    string s = string;\n    for (size_t i = 0; i < s.length();\
    \ i++) {\n        if (s[i] == 'a') {\n            s[i] = 'A';\n        } else\
    \ if (s[i] == 'b') {\n            s[i] = 'B';\n        } else if (s[i] == 'c')\
    \ {\n            s[i] = 'C';\n        } else if (s[i] == 'd') {\n            s[i]\
    \ = 'D';\n        } else if (s[i] == 'e') {\n            s[i] = 'E';\n       \
    \ } else if (s[i] == 'f') {\n            s[i] = 'F';\n        } else if (s[i]\
    \ == 'g') {\n            s[i] = 'G';\n        } else if (s[i] == 'h') {\n    \
    \        s[i] = 'H';\n        } else if (s[i] == 'i') {\n            s[i] = 'I';\n\
    \        } else if (s[i] == 'j') {\n            s[i] = 'J';\n        } else if\
    \ (s[i] == 'k') {\n            s[i] = 'K';\n        } else if (s[i] == 'l') {\n\
    \            s[i] = 'L';\n        } else if (s[i] == 'm') {\n            s[i]\
    \ = 'M';\n        } else if (s[i] == 'n') {\n            s[i] = 'N';\n       \
    \ } else if (s[i] == 'o') {\n            s[i] = 'O';\n        } else if (s[i]\
    \ == 'p') {\n            s[i] = 'P';\n        } else if (s[i] == 'q') {\n    \
    \        s[i] = 'Q';\n        } else if (s[i] == 'r') {\n            s[i] = 'R';\n\
    \        } else if (s[i] == 's') {\n            s[i] = 'S';\n        } else if\
    \ (s[i] == 't') {\n            s[i] = 'T';\n        } else if (s[i] == 'u') {\n\
    \            s[i] = 'U';\n        } else if (s[i] == 'v') {\n            s[i]\
    \ = 'V';\n        } else if (s[i] == 'w') {\n            s[i] = 'W';\n       \
    \ } else if (s[i] == 'x') {\n            s[i] = 'X';\n        } else if (s[i]\
    \ == 'y') {\n            s[i] = 'Y';\n        } else if (s[i] == 'z') {\n    \
    \        s[i] = 'Z';\n        }\n    }\n    return s;", "    std::string flipped\
    \ = \"\";\n    for (auto &c : string) {\n        if (c == 'a' || c == 'e' || c\
    \ == 'i' || c == 'o' || c == 'u') {\n            flipped += 'A';\n        } else\
    \ if (c == 'b' || c == 'c' || c == 'd' || c == 'f' || c == 'g') {\n          \
    \  flipped += 'B';\n        } else if (c == 'h' || c == 'j' || c == 'k' || c ==\
    \ 'l' || c == 'm') {\n            flipped += 'C';\n        } else if (c == 'n'\
    \ || c == 'p' || c == 'q' || c == 'r' || c == 's') {\n            flipped += 'D';\n\
    \        } else if (c == 't' || c == 'v' || c == 'w' || c == 'x' || c == 'y')\
    \ {\n            flipped += 'E';\n        } else if (c == 'z' || c == 'x' || c\
    \ == 'y' || c == 'z') {\n            flipped += 'F';\n        } else if (c ==\
    \ 'A' || c == 'B' || c == 'C' || c == 'D' || c == 'E' || c == 'F' || c == 'G')\
    \ {\n            flipped += 'H';\n        } else if (c == 'H' || c == 'J' || c\
    \ == 'K' || c == 'L' || c == 'M') {\n            flipped += 'N';\n        } else\
    \ if (c == 'N' || c == 'P' || c == 'Q' || c == 'R' || c == 'S') {\n          \
    \  flipped += 'O';\n        } else if (c == 'T' || c == 'V' || c == 'W' || c ==\
    \ 'X' || c == 'Y') {\n            flipped += 'T';\n        } else if (c == 'Z'\
    \ || c == 'X' || c == 'Y' || c == 'Z') {\n            flipped += 'U';\n      \
    \  } else {\n            flipped += c;\n        }\n    }\n    return flipped;",
  "    std::string new_string;\n    for (auto &c : string) {\n        if (c >= 'a'\
    \ && c <= 'z') {\n            c += 'A' - 'a';\n        } else if (c >= 'A' &&\
    \ c <= 'Z') {\n            c += 'a' - 'A';\n        } else {\n            c =\
    \ c;\n        }\n        new_string += c;\n    }\n    return new_string;", " \
    \   std::string new_string;\n    for (auto &c : string) {\n        if (c >= 'a'\
    \ && c <= 'z') {\n            new_string += toupper(c);\n        } else if (c\
    \ >= 'A' && c <= 'Z') {\n            new_string += tolower(c);\n        } else\
    \ {\n            new_string += c;\n        }\n    }\n    return new_string;"]
stop_tokens:
- "\n}"

language: cpp
name: HumanEval_157_right_angle_triangle
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here.\n    if(a>b&&b>c)\n    {\n\
    \        if(a>c)\n        {\n            return true;\n        }\n        else\n\
    \        {\n            return false;\n        }\n    }\n    else if(a>b&&b>c)\n\
    \    {\n        return false;\n    }\n    else if(a>c&&b>c)\n    {\n        return\
    \ true;\n    }\n    else if(a>c&&b>c)\n    {\n        return false;\n    }\n \
    \   else\n    {\n        return false;\n    }\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp5jdvw_es: /tmp/tmp5jdvw_es.cpp:40: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077296
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > b && a > c) {\n        return true;\n    }\n\
    \    if (b > c && b > a) {\n        return true;\n    }\n    if (c > a && c >\
    \ b) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n\
    \    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpdkdmmmn8: /tmp/tmpdkdmmmn8.cpp:23: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077297
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    long long int sum = a+b+c;\n\
    \    long long int rem = sum%2;\n    if(rem == 0)\n    {\n        if(sum == 1)\n\
    \            return true;\n        else\n            return false;\n    }\n  \
    \  else\n    {\n        if(sum == 1)\n            return false;\n        else\n\
    \            return true;\n    }\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpxof91ed3: /tmp/tmpxof91ed3.cpp:29: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077296
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    long long ans = (a *\
    \ b) - (c * a);\n    if(ans == 0)\n        return true;\n    return false;\n}\n\
    int main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpa80fy65b: /tmp/tmpa80fy65b.cpp:17: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077296
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > b && a > c) {\n        return true;\n    }\n\
    \    if (b > c && b > a) {\n        return true;\n    }\n    if (c > a && c >\
    \ b) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n\
    \    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpdkdmmmn8: /tmp/tmpdkdmmmn8.cpp:23: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077297
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > b && a > c) {\n        return true;\n    }\n\
    \    if (b > c && b > a) {\n        return true;\n    }\n    if (c > a && c >\
    \ b) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n\
    \    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpdkdmmmn8: /tmp/tmpdkdmmmn8.cpp:23: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077297
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a == 0 || b == 0 || c == 0) return false;\n  \
    \  long d = b * b - 4 * a * c;\n    if (d < 0) return false;\n    long root =\
    \ (long) sqrt(d);\n    if (root == 0) return false;\n    long x = (long) (-b +\
    \ root) / a;\n    long y = (long) (-b - root) / a;\n    return ((x == 0 && y >=\
    \ 0) || (x == 0 && y < 0)) &&\n           ((y == 0 && x >= 0) || (y == 0 && x\
    \ < 0));\n}\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpnaoazvlc: /tmp/tmpnaoazvlc.cpp:21: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077296
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > b && a > c) {\n        return false;\n   \
    \ }\n    if (b > c && b > a) {\n        return false;\n    }\n    if (c > a &&\
    \ c > b) {\n        return false;\n    }\n    return true;\n}\nint main() {\n\
    \    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5))\
    \ == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp0068dtad: /tmp/tmp0068dtad.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077296
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    if(a==b||a==c||b==c)\n\
    \        return true;\n    else if(a>b&&a>c)\n        return false;\n    else\
    \ if(b>c&&b>a)\n        return false;\n    else if(a>b&&b>c)\n        return true;\n\
    \    else if(a>c&&a>b)\n        return true;\n    else if(b>c&&b>a)\n        return\
    \ false;\n    else if(a>b&&a>c)\n        return false;\n    else if(b>c&&b>a)\n\
    \        return true;\n    else if(a>c&&a>b)\n        return false;\n    else\
    \ if(b>c&&b>a)\n        return false;\n    else if(a>b&&b>c)\n        return false;\n\
    \    else if(b>c&&b>a)\n        return false;\n    else if(a>c&&a>b)\n       \
    \ return true;\n    else if(b>c&&b>a)\n        return true;\n    else if(a>b&&b>c)\n\
    \        return true;\n    else if(b>c&&b>a)\n        return false;\n    else\
    \ if(a>c&&a>b)\n        return false;\n    else if(b>c&&b>a)\n        return false;\n\
    \    else if(a>b&&b>c)\n        return true;\n    else if(b>c&&b>a)\n        return\
    \ true;\n    else if(a>c&&a>b)\n        return true;\n    else if(b>c&&b>a)\n\
    \        return true;\n    else if(a>b&&b>c)\n        return true;\n    else if(b>c&&b>a)\n\
    \        return true;\n    else if(a>c&&a>b)\n        return true;\n    else if(b>c&&b>a)\n\
    \        return true;\n    else if(a>b&&b>c)\n        return true;\n    else if(b>c&&b>a)\n\
    \        return true;\n    else if(a>c&&a>b)\n        return true;\n    else if(b>c&&b>a)\n\
    \        return true;\n    else if(a>b&&b>c)\n        return true;\n    else if(b>c&&b>a)\n\
    \        return true;\n    else if(a>c&&a>b)\n        return true;\n    else if(b>c&&b>a)\n\
    \        return true;\n    else if(a>b&&b>c)\n        return true;\n    else if(b>c&&b>a)\n\
    \        return true;\n    else if(a>c&&a>b)\n        return true;\n    else if(b>c&&b>a)\n\
    \        return true;\n    else if(a>b&&b>c)\n        return true;\n    else if(b>c&&b>a)\n\
    \        return true;\n    else if(a>c&&a>b)\n        return true;\n\n}\nint main()\
    \ {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4),\
    \ (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp8t1sp349: /tmp/tmp8t1sp349.cpp:96: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077296
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if((b - a)*(c - b) == (c - a)*(a - b)) {\n       \
    \ return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpzdu_yup7: /tmp/tmpzdu_yup7.cpp:16: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077296
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    if(a>b&&b>c&&c>a){\n\
    \        return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp17zb7csq: /tmp/tmp17zb7csq.cpp:17: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077296
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long long int sum = (a + b + c) / 2;\n    if (sum\
    \ % 2 == 0) {\n        return false;\n    }\n    long long int sum1 = (a + b)\
    \ / 2;\n    long long int sum2 = (a + c) / 2;\n    long long int sum3 = (b + c)\
    \ / 2;\n    long long int sum4 = (a + b + c) / 2;\n    long long int sum5 = (a\
    \ + b + c) / 2;\n    long long int sum6 = (a + c + b) / 2;\n    long long int\
    \ sum7 = (a + c + b) / 2;\n    long long int sum8 = (a + c + b) / 2;\n    long\
    \ long int sum9 = (a + c + b) / 2;\n    long long int sum10 = (a + c + b) / 2;\n\
    \    long long int sum11 = (a + c + b) / 2;\n    long long int sum12 = (a + c\
    \ + b) / 2;\n    long long int sum13 = (a + c + b) / 2;\n    long long int sum14\
    \ = (a + c + b) / 2;\n    long long int sum15 = (a + c + b) / 2;\n    long long\
    \ int sum16 = (a + c + b) / 2;\n    long long int sum17 = (a + c + b) / 2;\n \
    \   long long int sum18 = (a + c + b) / 2;\n    long long int sum19 = (a + c +\
    \ b) / 2;\n    long long int sum20 = (a + c + b) / 2;\n    long long int sum21\
    \ = (a + c + b) / 2;\n    long long int sum22 = (a + c + b) / 2;\n    long long\
    \ int sum23 = (a + c + b) / 2;\n    long long int sum24 = (a + c + b) / 2;\n \
    \   long long int sum25 = (a + c + b) / 2;\n    long long int sum26 = (a + c +\
    \ b) / 2;\n    long long int sum27 = (a + c + b) / 2;\n    long long int sum28\
    \ = (a + c + b) / 2;\n    long long int sum29 = (a + c + b) / 2;\n    long long\
    \ int sum30 = (a + c + b) / 2;\n    long long int sum31 = (a + c + b) / 2;\n \
    \   long long int sum32 = (a + c + b) / 2;\n    long long int sum33 = (a + c +\
    \ b) / 2;\n    long long int sum34 = (a + c + b) / 2;\n    long long int sum35\
    \ = (a + c + b) / 2;\n    long long int sum36 = (a + c + b) / 2;\n    long long\
    \ int sum37 = (a + c + b) / 2;\n    long long int sum38 = (\n}\nint main() {\n\
    \    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5))\
    \ == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkiussueo.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmpkiussueo.cpp:51:1: error: expected\
    \ primary-expression before \u2018}\u2019 token\n   51 | }\n      | ^\n/tmp/tmpkiussueo.cpp:50:28:\
    \ error: expected \u2018)\u2019 before \u2018}\u2019 token\n   50 |     long long\
    \ int sum38 = (\n      |                           ~^\n      |               \
    \             )\n   51 | }\n      | ~                           \n/tmp/tmpkiussueo.cpp:51:1:\
    \ warning: control reaches end of non-void function [-Wreturn-type]\n   51 | }\n\
    \      | ^\n"
  stdout: ''
  timestamp: 1660077296
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > b + c || b > a + c || c > a + b) {\n     \
    \   return false;\n    }\n    return true;\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpgp183e49: /tmp/tmpgp183e49.cpp:17: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077296
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a == 0 || b == 0 || c == 0)\n        return false;\n\
    \    long d = b * b - 4 * a * c;\n    if (d < 0)\n        return false;\n    long\
    \ x = (-b + sqrt(d)) / (2 * a);\n    long y = (-b - sqrt(d)) / (2 * a);\n    if\
    \ (x == y || x == -y)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4),\
    \ (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpcl19v3fo: /tmp/tmpcl19v3fo.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077296
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    long sum = a+b+c;\n \
    \   long sum1 = sum/2;\n    long sum2 = sum/4;\n    long sum3 = sum/6;\n    if(sum1\
    \ == sum2 && sum2 == sum3)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4),\
    \ (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp00hhrm7b: /tmp/tmp00hhrm7b.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077296
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    long long int ans = (a*a\
    \ + b*b + c*c) - (a*a*a + b*b*b + c*c*c);\n    long long int mod = (ans % MOD);\n\
    \    return mod < 0;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpe87xn593.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmpe87xn593.cpp:11:32: error: \u2018MOD\u2019\
    \ was not declared in this scope\n   11 |     long long int mod = (ans % MOD);\n\
    \      |                                ^~~\n"
  stdout: ''
  timestamp: 1660077296
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a == 0 || b == 0 || c == 0)\n        return false;\n\
    \    long d = b * b - 4 * a * c;\n    if (d < 0)\n        return false;\n    long\
    \ root = (long) sqrt(d);\n    long t1 = (-b + root) / (2 * a);\n    long t2 =\
    \ (-b - root) / (2 * a);\n    if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1)\n\
    \        return true;\n    return false;\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpdory84_e: /tmp/tmpdory84_e.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077296
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > b && a > c) {\n        return true;\n    }\n\
    \    if (b > c && b > a) {\n        return true;\n    }\n    if (c > a && c >\
    \ b) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n\
    \    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpdkdmmmn8: /tmp/tmpdkdmmmn8.cpp:23: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077297
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long long a1 = abs(a), b1 = abs(b), c1 = abs(c);\n\
    \    long long a2 = a1 + b1, b2 = b1 + c1, c2 = a1 + c1;\n    if (a2 > b2 && a2\
    \ > c2) return true;\n    if (b2 > a2 && b2 > c2) return true;\n    if (c2 > a2\
    \ && c2 > b2) return true;\n    return false;\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp394qhdir: /tmp/tmp394qhdir.cpp:19: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077296
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long long ans = (a * b * c) / 2;\n    long long bsq\
    \ = b * b; // square of b\n    long long csq = c * c; // square of c\n    long\
    \ long absq = ans * ans; // square of ab\n    long long bccsq = bsq + csq; //\
    \ square of b^2 + c^2\n    long long abbsq = absq + bsq; // square of ab^2 + b^2\n\
    \    long long acbsq = absq + csq; // square of ab^2 + c^2\n    long long abbcsq\
    \ = abbsq + bccsq; // square of ab^2 + b^2 + c^2\n    long long acbcabsq = acbsq\
    \ + absq; // square of ac^2 + ab^2 + b^2\n    long long acbcabbsq = acbcabsq +\
    \ bsq; // square of ac^2 + ab^2 + b^2 + c^2\n    long long acbcabbcsq = acbcabbsq\
    \ + csq; // square of ac^2 + ab^2 + b^2 + c^2 + a^2\n    long long acbcabbcabsq\
    \ = acbcabbsq + absq; // square of ac^2 + ab^2 + b^2 + c^2 + a^2 + b^2\n    long\
    \ long acbcabbcabbcsq = acbcabbcabsq + bsq; // square of ac^2 + ab^2 + b^2 + c^2\
    \ + a^2 + b^2 + c^2\n    long long acbcabbcabbcabsq = acbcabbcabbcsq + csq; //\
    \ square of ac^2 + ab^2 + b^2 + c^2 + a^2 + b^2 + c^2 + a^2\n    long long acbcabbcabbcabbcsq\
    \ = acbcabbcabbcabsq + absq; // square of ac^2 + ab^2 + b^2 + c^2 + a^2 + b^2\
    \ + c^2 + a^2 + b^2\n    long long acbcabbcabbcabbcabsq = acbcabbcabbcabbcsq +\
    \ bsq; // square of ac^2 + ab^2 + b^2 + c^2 + a^2 + b^2 + c^2 + a^2 + b^2 + c^2\n\
    \    long long acbcabbcabbcabbcabbcsq = acbcabbcabbcabbcabsq + csq; // square\
    \ of ac^2 + ab^\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpao8vm7_5: /tmp/tmpao8vm7_5.cpp:29: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077296
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a == 0 && b == 0 && c == 0) return true;\n   \
    \ if (a == 0 || b == 0 || c == 0) return false;\n    if (a > b + c) return false;\n\
    \    if (a > c + b) return false;\n    if (b > c + a) return false;\n    return\
    \ true;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp8irkge_x: /tmp/tmp8irkge_x.cpp:19: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077296
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > b + c || b > a + c || c > a + b) {\n     \
    \   return false;\n    }\n    return true;\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpgp183e49: /tmp/tmpgp183e49.cpp:17: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077296
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a < 0 || b < 0 || c < 0) {\n        return false;\n\
    \    }\n    if (a + b > c || a + c > b || b + c > a) {\n        return false;\n\
    \    }\n    return true;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp0ydjrn__: /tmp/tmp0ydjrn__.cpp:19: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077296
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a == 0 && b == 0 && c == 0)\n        return true;\n\
    \    if (a == 0 || b == 0 || c == 0)\n        return false;\n    if (a > b &&\
    \ a > c)\n        return true;\n    if (b > a && b > c)\n        return true;\n\
    \    if (c > a && c > b)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4),\
    \ (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp24tpke7v: /tmp/tmp24tpke7v.cpp:24: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077296
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long long int a1 = abs(a), b1 = abs(b), c1 = abs(c);\n\
    \    long long int a2 = a1 + b1, c2 = b1 + c1;\n    long long int b2 = a1 + c1,\
    \ c3 = b1 + a1;\n    long long int c3 = a1 + b1, b3 = b1 + c1;\n    long long\
    \ int a3 = a1 + c1, b3 = b1 + a1, c3 = a1 + b1;\n    long long int a4 = a2 + b2,\
    \ b4 = b2 + c2, c4 = c2 + b2;\n    long long int b4 = a2 + c2, c4 = b2 + a2, b4\
    \ = b2 + c2;\n    long long int c4 = a2 + b2, b4 = b2 + c2, c4 = c2 + b2;\n  \
    \  long long int a5 = a3 + b3, b5 = b3 + c3, c5 = c3 + b3;\n    long long int\
    \ b5 = a3 + c3, c5 = b3 + a3, b5 = b3 + c3;\n    long long int c5 = a3 + b3, b5\
    \ = b3 + c3, c5 = c3 + b3;\n    long long int a6 = a4 + b4, b6 = b4 + c4, c6 =\
    \ c4 + b4;\n    long long int b6 = a4 + c4, c6 = b4 + a4, b6 = b4 + c4;\n    long\
    \ long int c6 = a4 + b4, b6 = b4 + c4, c6 = c4 + b4;\n    long long int a7 = a5\
    \ + b5, b7 = b5 + c5, c7 = c5 + b5;\n    long long int b7 = a5 + c5, c7 = b5 +\
    \ a5, b7 = b5 + c5;\n    long long int c7 = a5 + b5, b7 = b5 + c5, c7 = c5 + b5;\n\
    \    long long int a8 = a6 + b6, b8 = b6 + c6, c8 = c6 + b6;\n    long long int\
    \ b8 = a6 + c6, c8 = b6 + a6, b8 = b6 + c6;\n    long long int c8 = a6 + b6, b8\
    \ = b6 + c6, c8 = c6 + b6;\n    long long int a9 = a7 + b7, b9 = b7 + c7, c9 =\
    \ c7 + b7;\n    long long int b9 = a7 + c7, c9 = b7 + a7, b9 = b7 + c7;\n    long\
    \ long int c9 = a7 + b7, b9 = b7 + c7, c9 = c7 + b7;\n    long long int a10 =\
    \ a8 + b\n}\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpx58_x0oj.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmpx58_x0oj.cpp:12:19: error: redeclaration\
    \ of \u2018long long int c3\u2019\n   12 |     long long int c3 = a1 + b1, b3\
    \ = b1 + c1;\n      |                   ^~\n/tmp/tmpx58_x0oj.cpp:11:33: note:\
    \ \u2018long long int c3\u2019 previously declared here\n   11 |     long long\
    \ int b2 = a1 + c1, c3 = b1 + a1;\n      |                                 ^~\n\
    /tmp/tmpx58_x0oj.cpp:13:33: error: redeclaration of \u2018long long int b3\u2019\
    \n   13 |     long long int a3 = a1 + c1, b3 = b1 + a1, c3 = a1 + b1;\n      |\
    \                                 ^~\n/tmp/tmpx58_x0oj.cpp:12:33: note: \u2018\
    long long int b3\u2019 previously declared here\n   12 |     long long int c3\
    \ = a1 + b1, b3 = b1 + c1;\n      |                                 ^~\n/tmp/tmpx58_x0oj.cpp:13:47:\
    \ error: redeclaration of \u2018long long int c3\u2019\n   13 |     long long\
    \ int a3 = a1 + c1, b3 = b1 + a1, c3 = a1 + b1;\n      |                     \
    \                          ^~\n/tmp/tmpx58_x0oj.cpp:11:33: note: \u2018long long\
    \ int c3\u2019 previously declared here\n   11 |     long long int b2 = a1 + c1,\
    \ c3 = b1 + a1;\n      |                                 ^~\n/tmp/tmpx58_x0oj.cpp:15:19:\
    \ error: redeclaration of \u2018long long int b4\u2019\n   15 |     long long\
    \ int b4 = a2 + c2, c4 = b2 + a2, b4 = b2 + c2;\n      |                   ^~\n\
    /tmp/tmpx58_x0oj.cpp:14:33: note: \u2018long long int b4\u2019 previously declared\
    \ here\n   14 |     long long int a4 = a2 + b2, b4 = b2 + c2, c4 = c2 + b2;\n\
    \      |                                 ^~\n/tmp/tmpx58_x0oj.cpp:15:33: error:\
    \ redeclaration of \u2018long long int c4\u2019\n   15 |     long long int b4\
    \ = a2 + c2, c4 = b2 + a2, b4 = b2 + c2;\n      |                            \
    \     ^~\n/tmp/tmpx58_x0oj.cpp:14:47: note: \u2018long long int c4\u2019 previously\
    \ declared here\n   14 |     long long int a4 = a2 + b2, b4 = b2 + c2, c4 = c2\
    \ + b2;\n      |                                               ^~\n/tmp/tmpx58_x0oj.cpp:15:47:\
    \ error: redeclaration of \u2018long long int b4\u2019\n   15 |     long long\
    \ int b4 = a2 + c2, c4 = b2 + a2, b4 = b2 + c2;\n      |          "
  stdout: ''
  timestamp: 1660077296
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long long int ans = (a*a + b*b - c*c)/2;\n    if (ans\
    \ == 0) return false;\n    long long int sq = ans*ans;\n    long long int sq1\
    \ = sq - a;\n    long long int sq2 = sq - b;\n    long long int sq3 = sq - c;\n\
    \    long long int sq4 = sq + c;\n    long long int sq5 = sq + b;\n    long long\
    \ int sq6 = sq + a;\n    long long int sq7 = sq + c;\n    long long int sq8 =\
    \ sq - c;\n    long long int sq9 = sq - b;\n    long long int sq10 = sq + a;\n\
    \    long long int sq11 = sq + c;\n    long long int sq12 = sq + b;\n    long\
    \ long int sq13 = sq - a;\n    long long int sq14 = sq + b;\n    long long int\
    \ sq15 = sq + c;\n    long long int sq16 = sq - c;\n    long long int sq17 = sq\
    \ + a;\n    long long int sq18 = sq + b;\n    long long int sq19 = sq - a;\n \
    \   long long int sq20 = sq + c;\n    long long int sq21 = sq + b;\n    long long\
    \ int sq22 = sq - a;\n    long long int sq23 = sq - c;\n    long long int sq24\
    \ = sq + a;\n    long long int sq25 = sq + c;\n    long long int sq26 = sq - a;\n\
    \    long long int sq27 = sq - b;\n    long long int sq28 = sq + c;\n    long\
    \ long int sq29 = sq + b;\n    long long int sq30 = sq - c;\n    long long int\
    \ sq31 = sq + a;\n    long long int sq32 = sq + c;\n    long long int sq33 = sq\
    \ + b;\n    long long int sq34 = sq - a;\n    long long int sq35 = sq - b;\n \
    \   long long int sq36 = sq - c;\n    long long int sq37 = sq + a;\n    long long\
    \ int sq38 = sq + b;\n    long long int sq39 = sq + c;\n    long long int sq40\
    \ = sq - a;\n    long long int sq41 = sq - b;\n    long long int sq42 = sq - c;\n\
    \    long long int sq43 = sq + a;\n    long long int sq44 = sq + b;\n    long\
    \ long int \n}\nint main() {\n    auto candidate = right_angle_triangle;\n   \
    \ assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp76xw4o77.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmp76xw4o77.cpp:57:1: error: expected\
    \ unqualified-id before \u2018}\u2019 token\n   57 | }\n      | ^\n/tmp/tmp76xw4o77.cpp:57:1:\
    \ warning: control reaches end of non-void function [-Wreturn-type]\n   57 | }\n\
    \      | ^\n"
  stdout: ''
  timestamp: 1660077296
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > b && a > c) {\n        return true;\n    }\n\
    \    if (b > c && b > a) {\n        return true;\n    }\n    if (c > a && c >\
    \ b) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n\
    \    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpdkdmmmn8: /tmp/tmpdkdmmmn8.cpp:23: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077297
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > b && a > c) {\n        return true;\n    }\n\
    \    if (b > c && b > a) {\n        return true;\n    }\n    if (c > a && c >\
    \ b) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n\
    \    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpdkdmmmn8: /tmp/tmpdkdmmmn8.cpp:23: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077297
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if(a>b+c) return false;\n    if(a>c+b) return false;\n\
    \    if(b>c+a) return false;\n    return true;\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpqrg1xq74: /tmp/tmpqrg1xq74.cpp:17: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077296
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > b && a > c) {\n        return true;\n    }\n\
    \    if (b > c && b > a) {\n        return true;\n    }\n    if (c > a && c >\
    \ b) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n\
    \    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpdkdmmmn8: /tmp/tmpdkdmmmn8.cpp:23: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077297
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a < 0 || b < 0 || c < 0) {\n        return false;\n\
    \    }\n    if (a + b > c) {\n        return false;\n    }\n    if (a + c > b)\
    \ {\n        return false;\n    }\n    if (b + c > a) {\n        return false;\n\
    \    }\n    return true;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp14c499_y: /tmp/tmp14c499_y.cpp:25: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077297
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > b + c || b > a + c || c > a + b) {\n     \
    \   return false;\n    }\n    return true;\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpgp183e49: /tmp/tmpgp183e49.cpp:17: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077296
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if(a>b+c) return false;\n    if(a>c+b) return false;\n\
    \    if(b>c+a) return false;\n    return true;\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpqrg1xq74: /tmp/tmpqrg1xq74.cpp:17: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077296
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    long long int a1 = abs(a),\
    \ b1 = abs(b), c1 = abs(c);\n    long long int a2 = abs(a1), b2 = abs(b1), c2\
    \ = abs(c1);\n    long long int a3 = abs(a2), b3 = abs(b2), c3 = abs(c2);\n  \
    \  long long int a4 = abs(a3), b4 = abs(b3), c4 = abs(c3);\n    long long int\
    \ a5 = abs(a4), b5 = abs(b4), c5 = abs(c4);\n    long long int a6 = abs(a5), b6\
    \ = abs(b5), c6 = abs(c5);\n    long long int a7 = abs(a6), b7 = abs(b6), c7 =\
    \ abs(c6);\n    long long int a8 = abs(a7), b8 = abs(b8), c8 = abs(c7);\n    long\
    \ long int a9 = abs(a8), b9 = abs(b9), c9 = abs(c8);\n    long long int a10 =\
    \ abs(a9), b10 = abs(b9), c10 = abs(c9);\n    long long int a11 = abs(a10), b11\
    \ = abs(b10), c11 = abs(c10);\n    long long int a12 = abs(a11), b12 = abs(b11),\
    \ c12 = abs(c11);\n    long long int a13 = abs(a12), b13 = abs(b12), c13 = abs(c12);\n\
    \    long long int a14 = abs(a13), b14 = abs(b13), c14 = abs(c13);\n    long long\
    \ int a15 = abs(a14), b15 = abs(b14), c15 = abs(c14);\n    long long int a16 =\
    \ abs(a15), b16 = abs(b15), c16 = abs(c15);\n    long long int a17 = abs(a16),\
    \ b17 = abs(b16), c17 = abs(c16);\n    long long int a18 = abs(a17), b18 = abs(b17),\
    \ c18 = abs(c17);\n    long long int a19 = abs(a18), b19 = abs(b18), c19 = abs(c18);\n\
    \    long long int a20 = abs(a19), b20 = abs(b19), c20 = abs(c19);\n    long long\
    \ int a21 = abs(a20), b21 = abs(b20), c21 = abs(c20);\n    long long int a22 =\
    \ abs(a21), b22 = abs(b21), c22 = abs(c21); \n    long long int a23 = abs(a22),\
    \ b23 = abs(b\n}\nint main() {\n    auto candidate = right_angle_triangle;\n \
    \   assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpqm5expd6.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmpqm5expd6.cpp:32:46: error: expected\
    \ \u2018)\u2019 before \u2018}\u2019 token\n   32 |     long long int a23 = abs(a22),\
    \ b23 = abs(b\n      |                                            ~ ^\n      |\
    \                                              )\n   33 | }\n      | ~       \
    \                                      \n/tmp/tmpqm5expd6.cpp:33:1: warning: no\
    \ return statement in function returning non-void [-Wreturn-type]\n   33 | }\n\
    \      | ^\n"
  stdout: ''
  timestamp: 1660077297
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    if(a>b&&b>c&&c>a){\n\
    \        return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp17zb7csq: /tmp/tmp17zb7csq.cpp:17: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077296
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long d = b * b - 4 * a * c;\n    if (d < 0) {\n  \
    \      return false;\n    }\n    long root = d*d / 2;\n    long s = (-b + sqrt(root))\
    \ / (2 * a);\n    long t = (-b - sqrt(root)) / (2 * a);\n    return (s == t);\n\
    }\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmph37o7s52: /tmp/tmph37o7s52.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077297
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long long a1 = abs(a), b1 = abs(b), c1 = abs(c);\n\
    \    long long a2 = a1 + b1, c2 = b1 + c1, b2 = a1 + c1;\n    long long ans =\
    \ (a1 + b2 + c2) * (a2 + b1 + c2) * (a2 + b2 + c1) * (a1 + b1 + c1);\n    return\
    \ ans == 0;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n   \
    \ assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp0uagpua1: /tmp/tmp0uagpua1.cpp:16: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077297
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long ab = abs(b - a);\n    long ac = abs(c - a);\n\
    \    long bc = abs(b - c);\n    long acb = abs(ac - bc);\n    if (ab > ac && ab\
    \ > bc) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5))\
    \ == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpwhxi1vgj: /tmp/tmpwhxi1vgj.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077297
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > b && a > c) {\n        return true;\n    }\n\
    \    if (b > c && b > a) {\n        return true;\n    }\n    if (c > a && c >\
    \ b) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n\
    \    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpdkdmmmn8: /tmp/tmpdkdmmmn8.cpp:23: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077297
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here.\n    if(a>b&&b>c&&c>a){\n\
    \        return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp_zvvn0gv: /tmp/tmp_zvvn0gv.cpp:17: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077297
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    long long ans = (a+b+c)/2;\n\
    \    long long s = (a*a+b*b+c*c)/ans;\n    long long t = (b*b+a*a+c*c)/ans;\n\
    \    long long u = (a*a+b*b+c*c)/ans;\n    long long v = (b*b+a*a+c*c)/ans;\n\
    \    long long w = (a*a+b*b+c*c)/ans;\n    long long x = (a*a+b*b+c*c)/ans;\n\
    \    long long y = (b*b+a*a+c*c)/ans;\n    long long z = (a*a+b*b+c*c)/ans;\n\
    \    long long xx = (a*a+b*b+c*c)/ans;\n    long long yy = (a*a+b*b+c*c)/ans;\n\
    \    long long zz = (a*a+b*b+c*c)/ans;\n    long long xy = (a*a+b*b+c*c)/ans;\n\
    \    long long yz = (a*a+b*b+c*c)/ans;\n    long long xz = (a*a+b*b+c*c)/ans;\n\
    \    long long yx = (a*a+b*b+c*c)/ans;\n    long long zx = (a*a+b*b+c*c)/ans;\n\
    \    long long xw = (a*a+b*b+c*c)/ans;\n    long long yw = (a*a+b*b+c*c)/ans;\n\
    \    long long zw = (a*a+b*b+c*c)/ans;\n    long long xu = (a*a+b*b+c*c)/ans;\n\
    \    long long yu = (a*a+b*b+c*c)/ans;\n    long long zu = (a*a+b*b+c*c)/ans;\n\
    \    long long xd = (a*a+b*b+c*c)/ans;\n    long long yd = (a*a+b*b+c*c)/ans;\n\
    \    long long zd = (a*a+b*b+c*c)/ans;\n    long long xr = (a*a+b*b+c*c)/ans;\n\
    \    long long yr = (a*a+b*b+c*c)/ans;\n    long long zr = (a*a+b*b+c*c)/ans;\n\
    \    long long xq\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpecvnnodc.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmpecvnnodc.cpp:40:1: error: expected\
    \ initializer before \u2018}\u2019 token\n   40 | }\n      | ^\n/tmp/tmpecvnnodc.cpp:40:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660077297
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > b + c || b > a + c || c > a + b) {\n     \
    \   return false;\n    }\n    return true;\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpgp183e49: /tmp/tmpgp183e49.cpp:17: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077296
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    if(a==b){\n        if(a==c){\n\
    \            return true;\n        }\n        return false;\n    }\n    if(a==c){\n\
    \        return false;\n    }\n    if(b==c){\n        return false;\n    }\n \
    \   if(a>b){\n        if(a>c){\n            return true;\n        }\n        return\
    \ false;\n    }\n    if(b>c){\n        return false;\n    }\n    if(a>c){\n  \
    \      if(b>c){\n            return true;\n        }\n        return false;\n\
    \    }\n    return false;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpdxufsf3t: /tmp/tmpdxufsf3t.cpp:41: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077297
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a == 0 || b == 0 || c == 0) return false;\n  \
    \  long d = b * b - 4 * a * c;\n    if (d < 0) return false;\n    long x = (long)\
    \ sqrt(d);\n    long y = (long) (-b + x) / (2 * a);\n    return x == y;\n}\nint\
    \ main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpthypkfr1: /tmp/tmpthypkfr1.cpp:18: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077297
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long long a1 = abs(a), b1 = abs(b), c1 = abs(c);\n\
    \    long long a2 = a1 + b1, b2 = b1 + c1, c2 = a1 + c1;\n    long long ans =\
    \ (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c2) * (a1 + b1\
    \ + c1);\n    if (ans == 0) return true;\n    else return false;\n}\nint main()\
    \ {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4),\
    \ (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpoxyfxlfd: /tmp/tmpoxyfxlfd.cpp:17: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077297
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > b && a > c) {\n        return true;\n    }\n\
    \    if (b > c && b > a) {\n        return true;\n    }\n    if (c > a && c >\
    \ b) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n\
    \    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpdkdmmmn8: /tmp/tmpdkdmmmn8.cpp:23: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077297
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here.\n    if(a==b+c || a==c-b\
    \ || a==b+c || a==c-b){\n        return true;\n    }\n    return false;\n}\nint\
    \ main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpev178nsf: /tmp/tmpev178nsf.cpp:17: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077298
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a < 0 || b < 0 || c < 0) {\n        return false;\n\
    \    }\n    if (a + b > c || a + c > b || b + c > a) {\n        return false;\n\
    \    }\n    return true;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp0ydjrn__: /tmp/tmp0ydjrn__.cpp:19: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077296
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > b && a > c) {\n        return true;\n    }\n\
    \    if (b > c && b > a) {\n        return true;\n    }\n    if (c > a && c >\
    \ b) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n\
    \    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpdkdmmmn8: /tmp/tmpdkdmmmn8.cpp:23: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077297
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a < 0 || b < 0 || c < 0) {\n        return false;\n\
    \    }\n    long ab = abs(b - a);\n    long ac = abs(c - a);\n    long bc = abs(b\
    \ - c);\n    long abc = ab + bc;\n    if (abc > ac) {\n        return false;\n\
    \    }\n    return true;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp2pkf2a74: /tmp/tmp2pkf2a74.cpp:24: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077298
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a == 0 && b == 0 && c == 0)\n        return true;\n\
    \    if (a == 0 || b == 0 || c == 0)\n        return false;\n    if (a == b)\n\
    \        return (b == c);\n    if (a == c)\n        return (b == c);\n    if (b\
    \ == c)\n        return (a==b);\n    // Now we know that a,b,c are not equal to\
    \ each other\n    // We need to find out if b and c are right angles or not\n\
    \    // We will use triangle inequality to find out if they are right angles\n\
    \    // If they are right angles then return true\n    // If they are not right\
    \ angles then return false\n    // Now we will use triangle inequality to find\
    \ out if they are right angles\n    // If they are right angles then return true\n\
    \    // If they are not right angles then return false\n    // Now we will use\
    \ triangle inequality to find out if they are right angles\n    // If they are\
    \ right angles then return true\n    // If they are not right angles then return\
    \ false\n    // Now we will use triangle inequality to find out if they are right\
    \ angles\n    // If they are right angles then return true\n    // If they are\
    \ not right angles then return false\n    // Now we will use triangle inequality\
    \ to find out if they are right angles\n    // If they are right angles then return\
    \ true\n    // If they are not right angles then return false\n    // Now we will\
    \ use triangle inequality to find out if they are right angles\n    // If they\
    \ are right angles then return true\n    // If they are not right angles then\
    \ return false\n    // Now we will use triangle inequality to find out if they\
    \ are right angles\n    // If they are right angles then return true\n    // If\
    \ they are not right angles then return false\n    // Now we will use triangle\
    \ inequality to find out if they are right angles\n    // If they are right angles\
    \ then return true\n    // If they are not right angles then return false\n  \
    \  // Now we will use triangle inequality to find out if they are right angles\n\
    \    // If they are right angles then return true\n    // If they are not right\
    \ angles then return false\n    // Now we will use triangle inequality to find\
    \ out if they are right angles\n    // If they are right angles then return true\n\
    \    // If they are not right angles then return false\n    // Now we will use\
    \ triangle inequality to find out if they are right angles\n    // If they are\
    \ right angles then return true\n    // If they are not right angles then return\
    \ false\n    // Now we will use triangle inequality to find out if they are right\
    \ angles\n    // If they are right angles then return true\n\n}\nint main() {\n\
    \    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5))\
    \ == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpg59u5bjd: /tmp/tmpg59u5bjd.cpp:60: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077297
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a == 0 || b == 0 || c == 0)\n        return false;\n\
    \    long d = b * b - 4 * a * c;\n    if (d < 0)\n        return false;\n    long\
    \ sq = sqrt(d);\n    long t1 = (-b + sq) / (2 * a);\n    long t2 = (-b - sq) /\
    \ (2 * a);\n    if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1)\n        return\
    \ true;\n    return false;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp9yff7cjp: /tmp/tmp9yff7cjp.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077297
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    if(a==b+c || a==c-b ||\
    \ a==b+c || a==c-b || b==c-a || b==a+c || b==c-a || c==a+b || c==b-a || c==a+b\
    \ || c==b-a)\n        return true;\n    else\n        return false;\n}\nint main()\
    \ {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4),\
    \ (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmplndk7m86: /tmp/tmplndk7m86.cpp:17: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077297
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > b + c || b > a + c || c > a + b) {\n     \
    \   return false;\n    }\n    return true;\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpgp183e49: /tmp/tmpgp183e49.cpp:17: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077296
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long long ans = (a * b * c) / 2;\n    long long bsq\
    \ = b * b; // squared b\n    long long csq = c * c; // squared c\n    long long\
    \ abc = a * c; // squared a + squared c\n    long long acb = a * b; // squared\
    \ a + squared b\n    long long bca = b * c; // squared b + squared c\n    long\
    \ long aca = a * c; // squared a + squared c\n    long long cab = c * c; // squared\
    \ a + squared c\n    long long acb = a * b; // squared a + squared b\n    long\
    \ long bca = b * c; // squared b + squared c\n    long long aca = a * c; // squared\
    \ a + squared c\n    long long cab = c * c; // squared a + squared c\n    long\
    \ long acb = a * b; // squared a + squared b\n    long long bca = b * c; // squared\
    \ b + squared c\n    long long aca = a * c; // squared a + squared c\n    long\
    \ long cab = c * c; // squared a + squared c\n    long long acb = a * b; // squared\
    \ a + squared b\n    long long bca = b * c; // squared b + squared c\n    long\
    \ long aca = a * c; // squared a + squared c\n    long long cab = c * c; // squared\
    \ a + squared c\n    long long acb = a * b; // squared a + squared b\n    long\
    \ long bca = b * c; // squared b + squared c\n    long long aca = a * c; // squared\
    \ a + squared c\n    long long cab = c * c; // squared a + squared c\n    long\
    \ long acb = a * b; // squared a + squared b\n    long long bca = b * c; // squared\
    \ b + squared c\n    long long aca = a * c; // squared a + squared c\n    long\
    \ long cab = c * c; // squared a + squared c\n    long long acb = a * b; // squared\
    \ a + squared b\n    long long bca = b * c; // squared b + squared c\n    long\
    \ long aca = a * c; // squared a + squared c\n    long long cab = c * c; // squared\
    \ a + squared c\n    long long acb = a * b; // squared a + squared b\n    long\
    \ long \n}\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjqygv29z.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmpjqygv29z.cpp:17:15: error: redeclaration\
    \ of \u2018long long int acb\u2019\n   17 |     long long acb = a * b; // squared\
    \ a + squared b\n      |               ^~~\n/tmp/tmpjqygv29z.cpp:13:15: note:\
    \ \u2018long long int acb\u2019 previously declared here\n   13 |     long long\
    \ acb = a * b; // squared a + squared b\n      |               ^~~\n/tmp/tmpjqygv29z.cpp:18:15:\
    \ error: redeclaration of \u2018long long int bca\u2019\n   18 |     long long\
    \ bca = b * c; // squared b + squared c\n      |               ^~~\n/tmp/tmpjqygv29z.cpp:14:15:\
    \ note: \u2018long long int bca\u2019 previously declared here\n   14 |     long\
    \ long bca = b * c; // squared b + squared c\n      |               ^~~\n/tmp/tmpjqygv29z.cpp:19:15:\
    \ error: redeclaration of \u2018long long int aca\u2019\n   19 |     long long\
    \ aca = a * c; // squared a + squared c\n      |               ^~~\n/tmp/tmpjqygv29z.cpp:15:15:\
    \ note: \u2018long long int aca\u2019 previously declared here\n   15 |     long\
    \ long aca = a * c; // squared a + squared c\n      |               ^~~\n/tmp/tmpjqygv29z.cpp:20:15:\
    \ error: redeclaration of \u2018long long int cab\u2019\n   20 |     long long\
    \ cab = c * c; // squared a + squared c\n      |               ^~~\n/tmp/tmpjqygv29z.cpp:16:15:\
    \ note: \u2018long long int cab\u2019 previously declared here\n   16 |     long\
    \ long cab = c * c; // squared a + squared c\n      |               ^~~\n/tmp/tmpjqygv29z.cpp:21:15:\
    \ error: redeclaration of \u2018long long int acb\u2019\n   21 |     long long\
    \ acb = a * b; // squared a + squared b\n      |               ^~~\n/tmp/tmpjqygv29z.cpp:13:15:\
    \ note: \u2018long long int acb\u2019 previously declared here\n   13 |     long\
    \ long acb = a * b; // squared a + squared b\n      |               ^~~\n/tmp/tmpjqygv29z.cpp:22:15:\
    \ error: redeclaration of \u2018long long int bca\u2019\n   22 |     long long\
    \ bca = b * c; // squared b + squared c\n      |               ^~~\n/tmp/tmpjqygv29z.cpp:14:15:\
    \ note: \u2018long long int bca\u2019 previously declared here\n   14 |     long\
    \ long bca = b * c; // squared b + squared c\n      |               ^~~\n/tmp/tmpjqygv29z."
  stdout: ''
  timestamp: 1660077298
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > b + c || b > a + c || c > a + b) {\n     \
    \   return false;\n    }\n    return true;\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpgp183e49: /tmp/tmpgp183e49.cpp:17: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077296
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long ab = abs(b - a);\n    long ac = abs(c - a);\n\
    \    long bc = abs(b - c);\n    long acb = abs(ac - bc);\n    long abc = abs(ab\
    \ - bc);\n    long abbc = abs(ab - bc);\n    long abac = abs(ab - ac);\n    long\
    \ abcab = abs(ab - acb);\n    long abcabc = abs(ab - acbc);\n    long abcabcd\
    \ = abs(ab - acbcd);\n    long abcabcde = abs(ab - acbce);\n    long abcabcdef\
    \ = abs(ab - acbcef);\n    long abcabcdefg = abs(ab - acbcefg);\n    long abcabcdefgh\
    \ = abs(ab - acbcefgh);\n    long abcabcdefghi = abs(ab - acbcefghi);\n    long\
    \ abcabcdefghij = abs(ab - acbcefghij);\n    long abcabcdefghijk = abs(ab - acbcefghijk);\n\
    \    long abcabcdefghijkl = abs(ab - acbcefghijkl);\n    long abcabcdefghijkl\
    \ = abs(ab - acbcefghijkl);\n    long abcabcdefghijkl = abs(ab - acbcefghijkl);\n\
    \    long abcabcdefghijkl = abs(ab - acbcefghijkl);\n    long abcabcdefghijkl\
    \ = abs(ab - acbcefghijkl);\n    long abcabcdefghijkl = abs(ab - acbcefghijkl);\n\
    \    long abcabcdefghijkl = abs(ab - acbcefghijkl);\n    long abcabcdefghijkl\
    \ = abs(ab - acbcefghijkl);\n    long abcabcdefghijkl = abs(ab - acbcefghijkl);\n\
    \    long abcabcdefghijkl = abs(ab - acbcefghijkl);\n    long abcabcdefghijkl\
    \ = abs(ab - acbcefghijkl);\n    long abcabcdefghijkl = abs(ab - acbcefghijkl);\n\
    \    long abcabcdefghijkl = abs(ab - acbcefghij\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdi_n6m5r.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmpdi_n6m5r.cpp:17:28: error: \u2018acbc\u2019\
    \ was not declared in this scope; did you mean \u2018abbc\u2019?\n   17 |    \
    \ long abcabc = abs(ab - acbc);\n      |                            ^~~~\n   \
    \   |                            abbc\n/tmp/tmpdi_n6m5r.cpp:18:29: error: \u2018\
    acbcd\u2019 was not declared in this scope; did you mean \u2018abcabcd\u2019?\n\
    \   18 |     long abcabcd = abs(ab - acbcd);\n      |                        \
    \     ^~~~~\n      |                             abcabcd\n/tmp/tmpdi_n6m5r.cpp:19:30:\
    \ error: \u2018acbce\u2019 was not declared in this scope\n   19 |     long abcabcde\
    \ = abs(ab - acbce);\n      |                              ^~~~~\n/tmp/tmpdi_n6m5r.cpp:20:31:\
    \ error: \u2018acbcef\u2019 was not declared in this scope; did you mean \u2018\
    abcabcdef\u2019?\n   20 |     long abcabcdef = abs(ab - acbcef);\n      |    \
    \                           ^~~~~~\n      |                               abcabcdef\n\
    /tmp/tmpdi_n6m5r.cpp:21:32: error: \u2018acbcefg\u2019 was not declared in this\
    \ scope; did you mean \u2018abcabcdefg\u2019?\n   21 |     long abcabcdefg = abs(ab\
    \ - acbcefg);\n      |                                ^~~~~~~\n      |       \
    \                         abcabcdefg\n/tmp/tmpdi_n6m5r.cpp:22:33: error: \u2018\
    acbcefgh\u2019 was not declared in this scope; did you mean \u2018abcabcdefgh\u2019\
    ?\n   22 |     long abcabcdefgh = abs(ab - acbcefgh);\n      |               \
    \                  ^~~~~~~~\n      |                                 abcabcdefgh\n\
    /tmp/tmpdi_n6m5r.cpp:23:34: error: \u2018acbcefghi\u2019 was not declared in this\
    \ scope; did you mean \u2018abcabcdefghi\u2019?\n   23 |     long abcabcdefghi\
    \ = abs(ab - acbcefghi);\n      |                                  ^~~~~~~~~\n\
    \      |                                  abcabcdefghi\n/tmp/tmpdi_n6m5r.cpp:24:35:\
    \ error: \u2018acbcefghij\u2019 was not declared in this scope; did you mean \u2018\
    abcabcdefghij\u2019?\n   24 |     long abcabcdefghij = abs(ab - acbcefghij);\n\
    \      |                                   ^~~~~~~~~~\n      |               \
    \                    abcabcdefghij\n/tmp/tmpdi_n6m5r.cpp:25:36: error: \u2018\
    acbcefghijk\u2019 was not "
  stdout: ''
  timestamp: 1660077298
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a == 0 || b == 0 || c == 0)\n        return false;\n\
    \    long d = b * b - 4 * a * c;\n    if (d < 0)\n        return false;\n    long\
    \ x = (b + d) / (2 * a);\n    long y = (-b - d) / (2 * a);\n    return x == y;\n\
    }\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpee2izkmr: /tmp/tmpee2izkmr.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077298
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > b && a > c) {\n        return true;\n    }\n\
    \    if (b > c && b > a) {\n        return true;\n    }\n    if (c > a && c >\
    \ b) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n\
    \    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpdkdmmmn8: /tmp/tmpdkdmmmn8.cpp:23: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077297
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a == 0 || b == 0 || c == 0) return false;\n  \
    \  long d = b * b - 4 * a * c;\n    if (d < 0) return false;\n    long sq = sqrt(d);\n\
    \    long t1 = (-b + sq) / (2 * a);\n    long t2 = (-b - sq) / (2 * a);\n    if\
    \ (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) return true;\n    return false;\n\
    }\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpb_ebcuz7: /tmp/tmpb_ebcuz7.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077298
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    if(a==b){\n        if(a==c){\n\
    \            return true;\n        }\n        else{\n            return false;\n\
    \        }\n    }\n    if(a==c){\n        return false;\n    }\n    if(b==c){\n\
    \        return false;\n    }\n    long ab = abs(a-b);\n    long ac = abs(a-c);\n\
    \    long bc = abs(b-c);\n    if(ab==ac && ab==bc ){\n        return true;\n \
    \   }\n    else{\n        return false;\n    }\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpzuyligv3: /tmp/tmpzuyligv3.cpp:36: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077298
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > b && a > c) {\n        return false;\n   \
    \ }\n    if (b > c && b > a) {\n        return false;\n    }\n    if (c > a &&\
    \ c > b) {\n        return false;\n    }\n    return true;\n}\nint main() {\n\
    \    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5))\
    \ == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp0068dtad: /tmp/tmp0068dtad.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077296
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    long long ans = (a+b+c)/2;\n\
    \    long long sum = (a + b + c) % 2;\n    if (sum == 0)\n        return false;\n\
    \    long long sum1 = (a + b + c) % 3;\n    if (sum1 == 0)\n        return false;\n\
    \    long long sum2 = (a + b + c) % 6;\n    if (sum2 == 0)\n        return false;\n\
    \    long long sum3 = (a + b + c) % 9;\n    if (sum3 == 0)\n        return false;\n\
    \    long long sum4 = (a + b + c) % 12;\n    if (sum4 == 0)\n        return false;\n\
    \    long long sum5 = (a + b + c) % 15;\n    if (sum5 == 0)\n        return false;\n\
    \    long long sum6 = (a + b + c) % 18;\n    if (sum6 == 0)\n        return false;\n\
    \    long long sum7 = (a + b + c) % 21;\n    if (sum7 == 0)\n        return false;\n\
    \    long long sum8 = (a + b + c) % 24;\n    if (sum8 == 0)\n        return false;\n\
    \    long long sum9 = (a + b + c) % 27;\n    if (sum9 == 0)\n        return false;\n\
    \    long long sum10 = (a + b + c) % 30;\n    if (sum10 == 0)\n        return\
    \ false;\n    long long sum11 = (a + b + c) % 33;\n    if (sum11 == 0)\n     \
    \   return false;\n    long long sum12 = (a + b + c) % 36;\n    if (sum12 == 0)\n\
    \        return false;\n    long long sum13 = (a + b + c) % 39;\n    if (sum13\
    \ == 0)\n        return false;\n    long long sum14 = (a + b + c) % 42;\n    if\
    \ (sum14 == 0)\n        return false;\n    long long sum15 = (a + b + c) % 45;\n\
    \    if (sum15 == 0)\n        return false;\n    long long sum16 = (a + b + c)\
    \ % 48;\n    if (sum16 == 0)\n        return false;\n    long long sum17 = (a\
    \ + b + c) % 51;\n    if (sum17 == 0)\n        return false;\n    long long sum18\
    \ = (a + b + c) % 54;\n    if (sum18 == 0)\n        return false;\n    long long\
    \ sum19 = (a + b + c) % 57;\n    if (sum19 == 0)\n        return false;\n    long\
    \ long sum20 = (a + b + c) % 60;\n    if (sum20 == 0)\n        return false;\n\
    \    long long sum21 = (a + b + c) % 63;\n    if (sum21 == 0)\n        return\
    \ false;\n    long long sum22 = (a + b + c) % 66;\n    if (sum22 == 0)\n     \
    \   return false;\n    \n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpnhjyzxsh: /tmp/tmpnhjyzxsh.cpp:84: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077298
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a == 0 || b == 0 || c == 0)\n        return false;\n\
    \    long d = b * b - 4 * a * c;\n    if (d < 0)\n        return false;\n    long\
    \ root = d*d / 2;\n    long s = (-b + sqrt(root))/(2*a);\n    long t = (-b - sqrt(root))/(2*a);\n\
    \    if (s == t)\n        return true;\n    return false;\n}\nint main() {\n \
    \   auto candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5))\
    \ == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpi_lutlig: /tmp/tmpi_lutlig.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077298
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if(a==b+c) return false;\n    if(a==b) return false;\n\
    \    if(a==c) return false;\n    if(b==c) return false;\n    if(a<b+c) return\
    \ false;\n    if(a<b) return false;\n    if(a<c) return false;\n    return true;\n\
    }\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpfkhy_v8z: /tmp/tmpfkhy_v8z.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077298
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > b && a > c && b > c) {\n        return true;\n\
    \    }\n    return false;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpkqkfqkqx: /tmp/tmpkqkfqkqx.cpp:16: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077298
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long d = b * b - 4 * a * c;\n    if (d >= 0) {\n \
    \       long root = d*d / 2;\n        long x = -b + root;\n        long y = -a\
    \ - root;\n        long xsqr = x*x;\n        long ysqr = y*y;\n        long root1\
    \ = (xsqr + ysqr) / 2;\n        long root2 = (xsqr - ysqr) / 2;\n        if (root1\
    \ < root2) {\n            return true;\n        } else {\n            return false;\n\
    \        }\n    } else {\n        return false;\n    }\n}\nint main() {\n    auto\
    \ candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n\
    \    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpl2o2ffat: /tmp/tmpl2o2ffat.cpp:29: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077299
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here.\n    long side1 = abs(a)\
    \ + abs(b) + abs(c);\n    long side2 = abs(a) - abs(b) - abs(c);\n    long side3\
    \ = abs(a) - abs(b) + abs(c);\n    long side4 = abs(a) + abs(b) - abs(c);\n  \
    \  long side5 = abs(a) + abs(b) + abs(c) - 1;\n    long side6 = abs(a) - abs(b)\
    \ + abs(c) - 1;\n    long side7 = abs(a) - abs(b) - abs(c) - 1;\n    long side8\
    \ = abs(a) + abs(b) - abs(c) - 1;\n    long side9 = abs(a) - abs(b) + abs(c) +\
    \ 1;\n    long side10 = abs(a) + abs(b) + abs(c) + 1;\n    long side11 = abs(a)\
    \ - abs(b) + abs(c) + 1;\n    long side12 = abs(a) - abs(b) - abs(c) + 1;\n  \
    \  long side13 = abs(a) + abs(b) - abs(c) + 1;\n    long side14 = abs(a) - abs(b)\
    \ + abs(c) - 1;\n    long side15 = abs(a) + abs(b) + abs(c) + 1;\n    long side16\
    \ = abs(a) - abs(b) - abs(c) + 1;\n    long side17 = abs(a) - abs(b) + abs(c)\
    \ - 1;\n    long side18 = abs(a) + abs(b) - abs(c) - 1;\n    long side19 = abs(a)\
    \ - abs(b) + abs(c) + 1;\n    long side20 = abs(a) + abs(b) + abs(c) - 1;\n  \
    \  long side21 = abs(a) - abs(b) - abs(c) - 1;\n    long side22 = abs(a) + abs(b)\
    \ + abs(c) + 1;\n    long side23 = abs(a) - abs(b) + abs(c) + 1;\n    long side24\
    \ = abs(a) - abs(b) - abs(c) + 1;\n    long side25 = abs(a) + abs(b) - abs(c)\
    \ - 1;\n    long side26 = abs(a) - abs(b) + abs(c) + 1;\n    long side27 = abs(a)\
    \ - abs(b) - abs(c) + 1;\n    long side28 = abs(a) + abs(b) - abs(c) - 1;\n  \
    \  long side29 = abs(a) - abs(b) + abs(c) - 1;\n    long side30 = abs(a) + abs(b)\
    \ + abs(c) + 1;\n    long side31 = abs(a) - abs(b) + abs(c) + 1;\n    long side32\
    \ = abs(a) - abs(b) - abs(c) + 1;\n    long side33 = abs(a) + abs(b) - abs(c)\
    \ + 1;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpng5nw1lw: /tmp/tmpng5nw1lw.cpp:46: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077298
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > b && a > c) {\n        return true;\n    }\n\
    \    if (b > c && b > a) {\n        return true;\n    }\n    if (c > a && c >\
    \ b) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n\
    \    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpdkdmmmn8: /tmp/tmpdkdmmmn8.cpp:23: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077297
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    long long int sum = a+b+c;\n\
    \    if(sum%2==0)\n    {\n        return false;\n    }\n    else\n    {\n    \
    \    return true;\n    }\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpzjk0x5_o: /tmp/tmpzjk0x5_o.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077299
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if((a + b > c) && (a + c > b) && (b + c > a)) {\n\
    \        return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp1xjg2bz0: /tmp/tmp1xjg2bz0.cpp:19: int main(): Assertion `candidate((2),
    (2), (2)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077299
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long long int sum = a+b+c;\n    long long int diff\
    \ = a-b+c-b;\n    long long int product = a*b*c;\n    long long int divisor =\
    \ 2*a*b*c;\n    long long int result = 0;\n    long long int temp_sum = 0;\n \
    \   long long int temp_diff = 0;\n    long long int temp_product = 0;\n    long\
    \ long int temp_divisor = 0;\n    long long int temp_result = 0;\n    long long\
    \ int temp_temp_sum = 0;\n    long long int temp_temp_diff = 0;\n    long long\
    \ int temp_temp_product = 0;\n    long long int temp_temp_divisor = 0;\n    long\
    \ long int temp_temp_result = 0;\n    long long int temp_temp_temp_sum = 0;\n\
    \    long long int temp_temp_temp_diff = 0;\n    long long int temp_temp_temp_product\
    \ = 0;\n    long long int temp_temp_temp_divisor = 0;\n    long long int temp_temp_temp_result\
    \ = 0;\n    long long int temp_temp_temp_temp_sum = 0;\n    long long int temp_temp_temp_temp_diff\
    \ = 0;\n    long long int temp_temp_temp_product = 0;\n    long long int temp_temp_temp_divisor\
    \ = 0;\n    long long int temp_temp_temp_result = 0;\n    long long int temp_temp_temp_temp_sum\
    \ = 0;\n    long long int temp_temp_temp_temp_diff = 0;\n    long long int temp_temp_temp_product\
    \ = 0;\n    long long int temp_temp_temp_divisor = 0;\n    long long int temp_temp_temp_result\
    \ = 0;\n    long long int temp_temp_temp_temp_sum = 0;\n    long long int temp_temp_temp_temp_diff\
    \ = 0;\n    long long int temp_temp_temp_product = 0;\n    long long int temp_temp_temp_divisor\
    \ = 0;\n    long long int temp_temp_temp_result = 0;\n    long long int temp_temp_temp_temp_sum\
    \ = 0;\n    long long int temp_temp_temp_temp_diff = 0;\n    long long int temp_temp_temp_product\
    \ = 0;\n    long long int temp_temp_temp_divisor = 0;\n    long long int temp_temp_temp_result\
    \ = 0;\n    long long int temp_temp_temp_temp_sum = 0;\n    long long int temp_temp_temp_temp_diff\
    \ = 0;\n    long long int temp_temp_temp_product = 0;\n    long long int temp_temp_temp_divisor\
    \ = 0;\n    long long int temp_temp_temp_result = 0;\n    long long int temp_temp_temp_temp_sum\
    \ = 0;\n    long long int temp_temp_temp_temp_diff = 0;\n    long long int temp_temp_temp_product\
    \ = 0;\n    long long int temp_temp_temp_divisor = 0;\n    long long int temp_temp_temp_result\
    \ = 0;\n    long long int temp_temp_temp_temp_sum = 0;\n    long long int \n}\n\
    int main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3yhsavjl.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmp3yhsavjl.cpp:31:19: error: redeclaration\
    \ of \u2018long long int temp_temp_temp_product\u2019\n   31 |     long long int\
    \ temp_temp_temp_product = 0;\n      |                   ^~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp3yhsavjl.cpp:26:19: note: \u2018long long int temp_temp_temp_product\u2019\
    \ previously declared here\n   26 |     long long int temp_temp_temp_product =\
    \ 0;\n      |                   ^~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp3yhsavjl.cpp:32:19:\
    \ error: redeclaration of \u2018long long int temp_temp_temp_divisor\u2019\n \
    \  32 |     long long int temp_temp_temp_divisor = 0;\n      |               \
    \    ^~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp3yhsavjl.cpp:27:19: note: \u2018long long\
    \ int temp_temp_temp_divisor\u2019 previously declared here\n   27 |     long\
    \ long int temp_temp_temp_divisor = 0;\n      |                   ^~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp3yhsavjl.cpp:33:19: error: redeclaration of \u2018long long int temp_temp_temp_result\u2019\
    \n   33 |     long long int temp_temp_temp_result = 0;\n      |              \
    \     ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp3yhsavjl.cpp:28:19: note: \u2018long long\
    \ int temp_temp_temp_result\u2019 previously declared here\n   28 |     long long\
    \ int temp_temp_temp_result = 0;\n      |                   ^~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp3yhsavjl.cpp:34:19: error: redeclaration of \u2018long long int temp_temp_temp_temp_sum\u2019\
    \n   34 |     long long int temp_temp_temp_temp_sum = 0;\n      |            \
    \       ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp3yhsavjl.cpp:29:19: note: \u2018long\
    \ long int temp_temp_temp_temp_sum\u2019 previously declared here\n   29 |   \
    \  long long int temp_temp_temp_temp_sum = 0;\n      |                   ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp3yhsavjl.cpp:35:19: error: redeclaration of \u2018long long int temp_temp_temp_temp_diff\u2019\
    \n   35 |     long long int temp_temp_temp_temp_diff = 0;\n      |           \
    \        ^~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp3yhsavjl.cpp:30:19: note: \u2018long\
    \ long int temp_temp_temp_temp_diff\u2019 previously declared here\n   30 |  \
    \   long long int temp_temp_temp_temp_diff = 0;\n      |            "
  stdout: ''
  timestamp: 1660077298
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > b && a > c && b > c) {\n        return true;\n\
    \    }\n    return false;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpkqkfqkqx: /tmp/tmpkqkfqkqx.cpp:16: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077298
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a == 0 && b == 0 && c == 0) return true;\n   \
    \ if (a == 0 || b == 0 || c == 0) return false;\n    long long ans = (a * b *\
    \ c) / abs(a * b + c * c);\n    long long sum = a * b + c * c;\n    long long\
    \ sq = sum * sum;\n    long long sq1 = sq;\n    long long sq2 = sq;\n    long\
    \ long sq3 = sq;\n    long long sq4 = sq;\n    long long sq5 = sq;\n    long long\
    \ sq6 = sq;\n    long long sq7 = sq;\n    long long sq8 = sq;\n    long long sq9\
    \ = sq;\n    long long sq10 = sq;\n    long long sq11 = sq;\n    long long sq12\
    \ = sq;\n    long long sq13 = sq;\n    long long sq14 = sq;\n    long long sq15\
    \ = sq;\n    long long sq16 = sq;\n    long long sq17 = sq;\n    long long sq18\
    \ = sq;\n    long long sq19 = sq;\n    long long sq20 = sq;\n    long long sq21\
    \ = sq;\n    long long sq22 = sq;\n    long long sq23 = sq;\n    long long sq24\
    \ = sq;\n    long long sq25 = sq;\n    long long sq26 = sq;\n    long long sq27\
    \ = sq;\n    long long sq28 = sq;\n    long long sq29 = sq;\n    long long sq30\
    \ = sq;\n    long long sq31 = sq;\n    long long sq32 = sq;\n    long long sq33\
    \ = sq;\n    long long sq34 = sq;\n    long long sq35 = sq;\n    long long sq36\
    \ = sq;\n    long long sq37 = sq;\n    long long sq38 = sq;\n    long long sq39\
    \ = sq;\n    long long sq40 = sq;\n    long long sq41 = sq;\n    long long sq42\
    \ = sq;\n    long long sq43 = sq;\n    long long sq44 = sq;\n    long long sq45\
    \ = sq;\n    long long sq46 = sq;\n    long long sq47 = sq;\n    long long sq48\
    \ = sq;\n    long long sq49 = sq;\n    long long sq50 = sq;\n    long long sq51\
    \ = sq;\n    long long sq\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9gsf2yvu.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmp9gsf2yvu.cpp:66:1: error: expected\
    \ initializer before \u2018}\u2019 token\n   66 | }\n      | ^\n/tmp/tmp9gsf2yvu.cpp:66:1:\
    \ warning: control reaches end of non-void function [-Wreturn-type]\n   66 | }\n\
    \      | ^\n"
  stdout: ''
  timestamp: 1660077298
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long long a1 = abs(a), b1 = abs(b), c1 = abs(c);\n\
    \    long long a2 = a1 + b1, c2 = a1 + c1, b2 = b1 + c1;\n    long long ans =\
    \ a2 + b2 + c2;\n    if (ans == 0) return false;\n    long long sq = ans * ans;\n\
    \    long long sq1 = sq - a1 * a1 - b1 * b1 - c1 * c1;\n    long long sq2 = sq\
    \ - a2 * a2 - b2 * b2 - c2 * c2;\n    if (sq1 > sq2) return false;\n    return\
    \ true;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpkuzh2spk: /tmp/tmpkuzh2spk.cpp:21: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077299
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    long long int sum = 0;\n\
    \    long long int sum1 = 0, sum2 = 0;\n    long long int sum3 = 0, sum4 = 0;\n\
    \    long long int sum5 = 0, sum6 = 0;\n    long long int sum7 = 0, sum8 = 0;\n\
    \    long long int sum9 = 0, sum10 = 0;\n    long long int sum11 = 0, sum12 =\
    \ 0;\n    long long int sum13 = 0, sum14 = 0;\n    long long int sum15 = 0, sum16\
    \ = 0;\n    long long int sum17 = 0, sum18 = 0;\n    long long int sum19 = 0,\
    \ sum20 = 0;\n    long long int sum21 = 0, sum22 = 0;\n    long long int sum23\
    \ = 0, sum24 = 0;\n    long long int sum25 = 0, sum26 = 0;\n    long long int\
    \ sum27 = 0, sum28 = 0;\n    long long int sum29 = 0, sum30 = 0;\n    long long\
    \ int sum31 = 0, sum32 = 0;\n    long long int sum33 = 0, sum34 = 0;\n    long\
    \ long int sum35 = 0, sum36 = 0;\n    long long int sum37 = 0, sum38 = 0;\n  \
    \  long long int sum39 = 0, sum40 = 0;\n    long long int sum41 = 0, sum42 = 0;\n\
    \    long long int sum43 = 0, sum44 = 0;\n    long long int sum45 = 0, sum46 =\
    \ 0;\n    long long int sum47 = 0, sum48 = 0;\n    long long int sum49 = 0, sum50\
    \ = 0;\n    long long int sum51 = 0, sum52 = 0;\n    long long int sum53 = 0,\
    \ sum54 = 0;\n    long long int sum55 = 0, sum56 = 0;\n    long long int sum57\
    \ = 0, sum58 = 0;\n    long long int sum59 = 0, sum60 = 0;\n    long long int\
    \ sum61 = 0, sum62 = 0;\n    long long int sum63 = 0, sum64 = 0;\n    long long\
    \ int sum65 = 0, sum66 = 0;\n    long long int sum67 = 0, sum68 = 0;\n    long\
    \ long int sum69 = 0, sum70 = 0;\n    long long int sum71 = 0, sum72 = 0;\n  \
    \  long long int sum73 = 0, sum74 = 0;\n    long long int sum75 = 0, sum76 = 0;\n\
    \    long long int sum77 = 0, sum78 = 0;\n    long long int sum79 = 0, sum80 =\
    \ 0;\n    long long int sum81 = 0, sum82 = 0;\n    long long int sum83 = 0, sum84\
    \ = 0;\n    long long int sum85 = 0, sum86 = 0;\n    long long int sum87 = 0,\
    \ sum88 = 0;\n    long long int sum89\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp4tabmylv.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmp4tabmylv.cpp:56:1: error: expected\
    \ initializer before \u2018}\u2019 token\n   56 | }\n      | ^\n/tmp/tmp4tabmylv.cpp:56:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660077299
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > b && a > c) {\n        return false;\n   \
    \ }\n    if (b > c && b > a) {\n        return false;\n    }\n    if (c > a &&\
    \ c > b) {\n        return false;\n    }\n    return true;\n}\nint main() {\n\
    \    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5))\
    \ == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp0068dtad: /tmp/tmp0068dtad.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077296
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a < 0 || b < 0 || c < 0) {\n        return false;\n\
    \    }\n    if (a + b > c || a + c > b || b + c > a) {\n        return false;\n\
    \    }\n    return true;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp0ydjrn__: /tmp/tmp0ydjrn__.cpp:19: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077296
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long long int a1 = abs(a), b1 = abs(b), c1 = abs(c);\n\
    \    long long int a2 = a1 + b1, b2 = b1 + c1, c2 = a1 + c1;\n    long long int\
    \ a3 = a2 + b2, b3 = b2 + c2, c3 = a2 + c2;\n    long long int a4 = a3 + b3, b4\
    \ = b3 + c3, c4 = a3 + c3;\n    long long int a5 = a4 + b4, b5 = b5 + c4, c5 =\
    \ a4 + c4;\n    long long int a6 = a5 + b5, b6 = b6 + c5, c6 = a5 + c5;\n    long\
    \ long int a7 = a6 + b6, b7 = b7 + c6, c7 = a6 + c6;\n    long long int a8 = a7\
    \ + b7, b8 = b7 + c7, c8 = a7 + c7;\n    long long int a9 = a8 + b8, b9 = b9 +\
    \ c8, c9 = a8 + c8;\n    long long int a10 = a9 + b9, b10 = b10 + c9, c10 = a9\
    \ + c9;\n    long long int a11 = a10 + b10, b11 = b11 + c10, c11 = a10 + c10;\n\
    \    long long int a12 = a11 + b11, b12 = b12 + c11, c12 = a11 + c11;\n    long\
    \ long int a13 = a12 + b12, b13 = b13 + c13, c13 = a12 + c12;\n    long long int\
    \ a14 = a13 + b13, b14 = b14 + c14, c14 = a13 + c13;\n    long long int a15 =\
    \ a14 + b14, b15 = b15 + c15, c15 = a14 + c14;\n    long long int a16 = a15 +\
    \ b15, b16 = b16 + c16, c16 = a15 + c15;\n    long long int a17 = a16 + b16, b17\
    \ = b17 + c17, c17 = a16 + c16;\n    long long int a18 = a17 + b17, b18 = b18\
    \ + c18, c18 = a17 + c17;\n    long long int a19 = a18 + b18, b19 = b19 + c19,\
    \ c19 = a18 + c18;\n    long long int a20 = a19 + b19, b20 = b20 + c20, c20 =\
    \ a19 + c19;\n    long long int a21 = a20 + b20, b21 = b21 + c21, c21 = a20 +\
    \ c2\n}\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp339zpxc6.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmp339zpxc6.cpp:21:48: error: \u2018c13\u2019\
    \ was not declared in this scope; did you mean \u2018b13\u2019?\n   21 |     long\
    \ long int a13 = a12 + b12, b13 = b13 + c13, c13 = a12 + c12;\n      |       \
    \                                         ^~~\n      |                       \
    \                         b13\n/tmp/tmp339zpxc6.cpp:22:48: error: \u2018c14\u2019\
    \ was not declared in this scope; did you mean \u2018b14\u2019?\n   22 |     long\
    \ long int a14 = a13 + b13, b14 = b14 + c14, c14 = a13 + c13;\n      |       \
    \                                         ^~~\n      |                       \
    \                         b14\n/tmp/tmp339zpxc6.cpp:23:48: error: \u2018c15\u2019\
    \ was not declared in this scope; did you mean \u2018b15\u2019?\n   23 |     long\
    \ long int a15 = a14 + b14, b15 = b15 + c15, c15 = a14 + c14;\n      |       \
    \                                         ^~~\n      |                       \
    \                         b15\n/tmp/tmp339zpxc6.cpp:24:48: error: \u2018c16\u2019\
    \ was not declared in this scope; did you mean \u2018b16\u2019?\n   24 |     long\
    \ long int a16 = a15 + b15, b16 = b16 + c16, c16 = a15 + c15;\n      |       \
    \                                         ^~~\n      |                       \
    \                         b16\n/tmp/tmp339zpxc6.cpp:25:48: error: \u2018c17\u2019\
    \ was not declared in this scope; did you mean \u2018b17\u2019?\n   25 |     long\
    \ long int a17 = a16 + b16, b17 = b17 + c17, c17 = a16 + c16;\n      |       \
    \                                         ^~~\n      |                       \
    \                         b17\n/tmp/tmp339zpxc6.cpp:26:48: error: \u2018c18\u2019\
    \ was not declared in this scope; did you mean \u2018b18\u2019?\n   26 |     long\
    \ long int a18 = a17 + b17, b18 = b18 + c18, c18 = a17 + c17;\n      |       \
    \                                         ^~~\n      |                       \
    \                         b18\n/tmp/tmp339zpxc6.cpp:27:48: error: \u2018c19\u2019\
    \ was not declared in this scope; did you mean \u2018b19\u2019?\n   27 |     long\
    \ long int a19 = a18 + b18, b19 = b19 + c19, c19 = a18 + c18;\n      |       \
    \                                         ^~"
  stdout: ''
  timestamp: 1660077299
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a < 0 || b < 0 || c < 0) {\n        return false;\n\
    \    }\n    long d = b * b - 4 * a * c;\n    if (d < 0) {\n        return false;\n\
    \    }\n    long x = (b + d) / (2 * a);\n    long y = (-b - d) / (2 * a);\n  \
    \  return ((x * (x * x + 1)) == ((y * (y * y + 1)) + 1));\n}\nint main() {\n \
    \   auto candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5))\
    \ == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpij1tlkw1: /tmp/tmpij1tlkw1.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077299
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long long a1 = (a + b + c) / 2;\n    long long b1\
    \ = (a + b) / 2;\n    long long c1 = (a + c) / 2;\n    long long a2 = (a1 + b1\
    \ + c1) / 2;\n    long long b2 = (a1 + b1) / 2;\n    long long c2 = (a1 + c2)\
    \ / 2;\n    long long a3 = (b1 + c1 + a2) / 2;\n    long long b3 = (b1 + c1) /\
    \ 2;\n    long long c3 = (b1 + c2) / 2;\n    long long a4 = (c1 + a2 + a3) / 2;\n\
    \    long long b4 = (c1 + a2) / 2;\n    long long c4 = (c1 + a3) / 2;\n    long\
    \ long a5 = (b2 + c3 + a4) / 2;\n    long long b5 = (b2 + c3) / 2;\n    long long\
    \ c5 = (b2 + c4) / 2;\n    long long a6 = (c2 + a4 + a5) / 2;\n    long long b6\
    \ = (c2 + a4) / 2;\n    long long c6 = (c2 + a5) / 2;\n    long long a7 = (b3\
    \ + c5 + a6) / 2;\n    long long b7 = (b3 + c5) / 2;\n    long long c7 = (b3 +\
    \ c6) / 2;\n    long long a8 = (c4 + a6 + a7) / 2;\n    long long b8 = (c4 + a6)\
    \ / 2;\n    long long c8 = (c4 + a7) / 2;\n    long long a9 = (b5 + c7 + a8) /\
    \ 2;\n    long long b9 = (b5 + c7) / 2;\n    long long c9 = (b5 + c8) / 2;\n \
    \   long long a10 = (c6 + a8 + a9) / 2;\n    long long b10 = (c6 + a8) / 2;\n\
    \    long long c10 = (c6 + a9) / 2;\n    long long a11 = (a7 + b9 + c10) / 2;\n\
    \    long long b11 = (a7 + b9) / 2;\n    long long c11 = (a7 + c10) / 2;\n   \
    \ long long a12 = (a9 + b11 + c11) / 2;\n    long long b12 = (a9 + b11) / 2;\n\
    \    long long c12 = (a9 + c11) / 2;\n    long long a13 = (a10 + b12 + c12) /\
    \ 2;\n    long long b13 = (a10 + b12) / 2;\n    long long c13 = (a10 + c12) /\
    \ 2;\n    long long a14 = (a11 + b13 + c13) / 2;\n    long long b14 = (a11 + b13)\
    \ / 2;\n    long long c14 = (a\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpc_86xqqz.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmpc_86xqqz.cpp:50:23: error: expected\
    \ \u2018)\u2019 before \u2018}\u2019 token\n   50 |     long long c14 = (a\n \
    \     |                     ~ ^\n      |                       )\n   51 | }\n\
    \      | ~                      \n/tmp/tmpc_86xqqz.cpp:51:1: error: expected \u2018\
    ,\u2019 or \u2018;\u2019 before \u2018}\u2019 token\n   51 | }\n      | ^\n/tmp/tmpc_86xqqz.cpp:51:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660077299
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    long long int sum = a+b+c;\n\
    \    long long int sq = sum*sum;\n    long long int sq1 = sq*sq;\n    long long\
    \ int sq2 = sq1*sq;\n    long long int sq3 = sq2*sq;\n    long long int sq4 =\
    \ sq3*sq;\n    long long int sq5 = sq4*sq;\n    long long int sq6 = sq5*sq;\n\
    \    long long int sq7 = sq6*sq;\n    long long int sq8 = sq7*sq;\n    long long\
    \ int sq9 = sq8*sq;\n    long long int sq10 = sq9*sq;\n    long long int sq11\
    \ = sq10*sq;\n    long long int sq12 = sq11*sq;\n    long long int sq13 = sq12*sq;\n\
    \    long long int sq14 = sq13*sq;\n    long long int sq15 = sq14*sq;\n    long\
    \ long int sq16 = sq15*sq;\n    long long int sq17 = sq16*sq;\n    long long int\
    \ sq18 = sq17*sq;\n    long long int sq19 = sq18*sq;\n    long long int sq20 =\
    \ sq19*sq;\n    long long int sq21 = sq20*sq;\n    long long int sq22 = sq21*sq;\n\
    \    long long int sq23 = sq22*sq;\n    long long int sq24 = sq23*sq;\n    long\
    \ long int sq25 = sq24*sq;\n    long long int sq26 = sq25*sq;\n    long long int\
    \ sq27 = sq26*sq;\n    long long int sq28 = sq27*sq;\n    long long int sq29 =\
    \ sq28*sq;\n    long long int sq30 = sq29*sq;\n    long long int sq31 = sq30*sq;\n\
    \    long long int sq32 = sq31*sq;\n    long long int sq33 = sq32*sq;\n    long\
    \ long int sq34 = sq33*sq;\n    long long int sq35 = sq34*sq;\n    long long int\
    \ sq36 = sq35*sq;\n    long long int sq37 = sq36*sq;\n    long long int sq38 =\
    \ sq37*sq;\n    long long int sq39 = sq38*\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpe2uiawr7.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmpe2uiawr7.cpp:51:1: error: expected\
    \ primary-expression before \u2018}\u2019 token\n   51 | }\n      | ^\n/tmp/tmpe2uiawr7.cpp:51:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660077299
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > b && a > c) {\n        return true;\n    }\n\
    \    if (b > c && b > a) {\n        return true;\n    }\n    if (c > a && c >\
    \ b) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n\
    \    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpdkdmmmn8: /tmp/tmpdkdmmmn8.cpp:23: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077297
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here.\n    long long int sum =\
    \ (a + b + c) % 10;\n    if (sum == 0)\n        return true;\n    if (sum == 1)\n\
    \        return false;\n    long long int sum1 = (a + b + c) / 10;\n    if (sum1\
    \ == 0)\n        return true;\n    if (sum1 == 1)\n        return false;\n   \
    \ long long int sum2 = (a + b + c) / 100;\n    if (sum2 == 0)\n        return\
    \ true;\n    if (sum2 == 1)\n        return false;\n    long long int sum3 = (a\
    \ + b + c) / 1000;\n    if (sum3 == 0)\n        return true;\n    if (sum3 ==\
    \ 1)\n        return false;\n    long long int sum4 = (a + b + c) / 10000;\n \
    \   if (sum4 == 0)\n        return true;\n    if (sum4 == 1)\n        return false;\n\
    \    long long int sum5 = (a + b + c) / 100000;\n    if (sum5 == 0)\n        return\
    \ true;\n    if (sum5 == 1)\n        return false;\n    long long int sum6 = (a\
    \ + b + c) / 1000000;\n    if (sum6 == 0)\n        return true;\n    if (sum6\
    \ == 1)\n        return false;\n    long long int sum7 = (a + b + c) / 10000000;\n\
    \    if (sum7 == 0)\n        return true;\n    if (sum7 == 1)\n        return\
    \ false;\n    long long int sum8 = (a + b + c) / 100000000;\n    if (sum8 == 0)\n\
    \        return true;\n    if (sum8 == 1)\n        return false;\n    long long\
    \ int sum9 = (a + b + c) / 1000000000;\n    if (sum9 == 0)\n        return true;\n\
    \    if (sum9 == 1)\n        return false;\n    long long int sum10 = (a + b +\
    \ c) / 10000000000;\n    if (sum10 == 0)\n        return true;\n    if (sum10\
    \ == 1)\n        return false;\n    long long int sum11 = (a + b + c) / 100000000000;\n\
    \    if (sum11 == 0)\n        return true;\n    if (sum11 == 1)\n        return\
    \ false;\n    long long int sum12 = (a + b + c) / 1000000000000;\n    if (sum12\
    \ == 0)\n        return true;\n    if (sum12 == 1)\n        return false;\n  \
    \  long long int sum13 = (a + b + c) / 10000000000000;\n    if (sum13 == 0)\n\
    \        return true;\n    if (sum13 == 1)\n        return false;\n    long long\
    \ int sum14 = (a + b + c) / 100000000000000;\n    if (sum14 == 0)\n        return\
    \ true;\n    if (sum14 == 1)\n        return false;\n    long long int sum15 =\
    \ (a + b + c) / 1000000000000000;\n    if (sum15 == 0)\n        return true;\n\
    \    if (sum15 == 1)\n        return false;\n    long long int sum16 = (a + b\
    \ + c) / 10000000000\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9c8r83jz.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmp9c8r83jz.cpp:91:1: error: expected\
    \ \u2018,\u2019 or \u2018;\u2019 before \u2018}\u2019 token\n   91 | }\n     \
    \ | ^\n/tmp/tmp9c8r83jz.cpp:91:1: warning: control reaches end of non-void function\
    \ [-Wreturn-type]\n   91 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660077299
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long long a1 = (a + b + c) / 2;\n    long long b1\
    \ = (a + b) / 2;\n    long long c1 = (a + b) / 2;\n    long long a2 = (a1 + b1\
    \ + c1) / 2;\n    long long b2 = (a1 + b1) / 2;\n    long long c2 = (a1 + b1)\
    \ / 2;\n    long long a3 = (a2 + b2 + c2) / 2;\n    long long b3 = (a2 + b2) /\
    \ 2;\n    long long c3 = (a2 + b2) / 2;\n    long long a4 = (a3 + b3 + c3) / 2;\n\
    \    long long b4 = (a3 + b3) / 2;\n    long long c4 = (a3 + b3) / 2;\n    long\
    \ long a5 = (a4 + b4 + c4) / 2;\n    long long b5 = (a4 + b4) / 2;\n    long long\
    \ c5 = (a4 + b4) / 2;\n    long long a6 = (a5 + b5 + c5) / 2;\n    long long b6\
    \ = (a5 + b5) / 2;\n    long long c6 = (a5 + b5) / 2;\n    long long a7 = (a6\
    \ + b6 + c6) / 2;\n    long long b7 = (a6 + b6) / 2;\n    long long c7 = (a6 +\
    \ b6) / 2;\n    long long a8 = (a7 + b7 + c7) / 2;\n    long long b8 = (a7 + b7)\
    \ / 2;\n    long long c8 = (a7 + b7) / 2;\n    long long a9 = (a8 + b8 + c8) /\
    \ 2;\n    long long b9 = (a8 + b8) / 2;\n    long long c9 = (a8 + b8) / 2;\n \
    \   long long a10 = (a9 + b9 + c9) / 2;\n    long long b10 = (a9 + b9) / 2;\n\
    \    long long c10 = (a9 + b9) / 2;\n    long long a11 = (a10 + b10 + c10) / 2;\n\
    \    long long b11 = (a10 + b10) / 2;\n    long long c11 = (a10 + b10) / 2;\n\
    \    long long a12 = (a11 + b11 + c11) / 2;\n    long long b12 = (a11 + b11) /\
    \ 2;\n    long long c12 = (a11 + b11) / 2;\n    long long a13 = (a12 + b12 + c12)\
    \ / 2;\n    long long b13 = (a12 + b12) / 2;\n    long long c13 = (a12 + b12)\
    \ / 2;\n    long long a14 = (a13 + b13 + c13) / 2;\n    long long b14 = (a13 +\
    \ b13) / 2;\n    long long c14 = (a13 + b\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpep3nqn8v.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmpep3nqn8v.cpp:50:29: error: expected\
    \ \u2018)\u2019 before \u2018}\u2019 token\n   50 |     long long c14 = (a13 +\
    \ b\n      |                     ~       ^\n      |                          \
    \   )\n   51 | }\n      | ~                            \n/tmp/tmpep3nqn8v.cpp:51:1:\
    \ error: expected \u2018,\u2019 or \u2018;\u2019 before \u2018}\u2019 token\n\
    \   51 | }\n      | ^\n/tmp/tmpep3nqn8v.cpp:51:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660077299
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > b + c || b > a + c || c > a + b) {\n     \
    \   return false;\n    }\n    return true;\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpgp183e49: /tmp/tmpgp183e49.cpp:17: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077296
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > b && a > c && b > c) {\n        return true;\n\
    \    }\n    return false;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpkqkfqkqx: /tmp/tmpkqkfqkqx.cpp:16: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077298
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > b + c || b > a + c || c > a + b) {\n     \
    \   return false;\n    }\n    return true;\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpgp183e49: /tmp/tmpgp183e49.cpp:17: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077296
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a < 0 || b < 0 || c < 0) {\n        return false;\n\
    \    }\n    if (a + b > c || a + c > b || b + c > a) {\n        return false;\n\
    \    }\n    return true;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp0ydjrn__: /tmp/tmp0ydjrn__.cpp:19: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077296
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > b + c || b > a + c || c > a + b) {\n     \
    \   return false;\n    }\n    return true;\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpgp183e49: /tmp/tmpgp183e49.cpp:17: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077296
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > b + c || b > a + c || c > a + b) {\n     \
    \   return false;\n    }\n    return true;\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpgp183e49: /tmp/tmpgp183e49.cpp:17: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077296
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    if(a==b){\n        if(a==c){\n\
    \            return true;\n        }\n    }\n    else if(a==c){\n        return\
    \ false;\n    }\n    else if(b==c){\n        return false;\n    }\n    else{\n\
    \        if(a>b){\n            if(a>c){\n                return true;\n      \
    \      }\n        }\n        else{\n            if(b>c){\n                return\
    \ true;\n            }\n        }\n    }\n    return false;\n}\nint main() {\n\
    \    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5))\
    \ == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpu2vp_6v8: /tmp/tmpu2vp_6v8.cpp:37: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077299
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long d = b * b - 4 * a * c;\n    if (d < 0)\n    \
    \    return false;\n    long root = (long) sqrt(d);\n    long s = (-b + root)\
    \ / (2 * a);\n    long t = (-b - root) / (2 * a);\n    return (s == 0 && t ==\
    \ 0) || (s > 0 && t > 0);\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpnf91lef2: /tmp/tmpnf91lef2.cpp:19: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077299
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if(a==b){\n        if(a==c){\n            return true;\n\
    \        }\n        else{\n            return false;\n        }\n    }\n    else\
    \ if(a==c){\n        return true;\n    }\n    else if(b==c){\n        return true;\n\
    \    }\n    else{\n        return false;\n    }\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpa7nwxaah: /tmp/tmpa7nwxaah.cpp:29: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077299
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > b && a > c) {\n        return true;\n    }\n\
    \    if (b > c && b > a) {\n        return true;\n    }\n    if (c > a && c >\
    \ b) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n\
    \    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpdkdmmmn8: /tmp/tmpdkdmmmn8.cpp:23: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077297
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long long int ans = (a * b * c) / 2;\n    if (ans\
    \ == 0)\n        return false;\n    long long int bsq = b * b; // squared b\n\
    \    long long int csq = c * c; // squared c\n    long long int asq = a * a; //\
    \ squared a\n    long long int bsq2 = bsq * b; // squared b^2\n    long long int\
    \ csq2 = csq * c; // squared c^2\n    long long int asq2 = asq * a; // squared\
    \ a^2\n    long long int asq3 = asq * asq; // squared a^3\n    long long int bsq3\
    \ = bsq2 * b; // squared b^3\n    long long int csq3 = csq2 * c; // squared c^3\n\
    \    long long int asq4 = asq2 * asq; // squared a^4\n    long long int asq5 =\
    \ asq2 * asq; // squared a^5\n    long long int asq6 = asq2 * asq; // squared\
    \ a^6\n    long long int bsq4 = bsq3 * b; // squared b^4\n    long long int csq5\
    \ = csq3 * c; // squared c^5\n    long long int asq7 = asq3 * asq; // squared\
    \ a^7\n    long long int asq8 = (asq3 * asq) + asq4; // squared a^8\n    long\
    \ long int asq9 = (asq3 * asq) + asq5; // squared a^9\n    long long int asq10\
    \ = (asq3 * asq) + asq6; // squared a^10\n    long long int bsq7 = bsq4 * b; //\
    \ squared b^7\n    long long int csq8 = csq5 * c; // squared c^8\n    long long\
    \ int asq11 = (asq4 * asq) + asq7; // squared a^11\n    long long int asq12 =\
    \ (asq4 * asq) + asq8; // squared a^12\n    long long int asq13 = (asq4 * asq)\
    \ + asq9; // squared a^13\n    long long int asq14 = (asq4 * asq) + asq10; //\
    \ squared a^14\n    long long int bsq11 = bsq7 * b; // squared b^11\n    long\
    \ long int csq12 = csq8 * c; // squared \n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpw06wrfud: /tmp/tmpw06wrfud.cpp:41: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077299
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if(a==b){\n        if(a==c){\n            return true;\n\
    \        }\n        return false;\n    }\n    if(a==c){\n        return false;\n\
    \    }\n    if(b==c){\n        return false;\n    }\n    long long ans = (a+b+c)/2;\n\
    \    if(ans%2==0){\n        return false;\n    }\n    long long sum1 = (a+b+c)/2;\n\
    \    long long sum2 = (a+b+c)/2;\n    long long sum3 = (b+c)/2;\n    long long\
    \ sum4 = (b+c)/2;\n    long long sum5 = (a+b+c)/2;\n    long long sum6 = (b+c)/2;\n\
    \    long long sum7 = (a+b+c)/2;\n    long long sum8 = (a+b+c)/2;\n    long long\
    \ sum9 = (b+c)/2;\n    long long sum10 = (a+b+c)/2;\n    long long sum11 = (b+c)/2;\n\
    \    long long sum12 = (a+b+c)/2;\n    long long sum13 = (b+c)/2;\n    long long\
    \ sum14 = (a+b+c)/2;\n    long long sum15 = (b+c)/2;\n    long long sum16 = (a+b+c)/2;\n\
    \    long long sum17 = (b+c)/2;\n    long long sum18 = (a+b+c)/2;\n    long long\
    \ sum19 = (b+c)/2;\n    long long sum20 = (a+b+c)/2;\n    long long sum21 = (b+c)/2;\n\
    \    long long sum22 = (a+b+c)/2;\n    long long sum23 = (b+c)/2;\n    long long\
    \ sum24 = (a+b+c)/2;\n    long long sum25 = (b+c)/2;\n    long long sum26 = (a+b+c)/2;\n\
    \    long long sum27 = (b+c)/2;\n    long long sum28 = (a+b+c)/2;\n    long long\
    \ sum29 = (b+c)/2;\n    long long sum30 = (a+b+c)/2;\n    long long sum31 = (b+c)/2;\n\
    \    long long sum32 = (a+b+c)/2;\n    long long sum33 = (b+c)/2;\n    long long\
    \ sum34 = (a+b+c)/2;\n    long long sum35 = (b+c)/2;\n    long long sum36 = (a+b\n\
    }\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjlt0mc8m.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmpjlt0mc8m.cpp:60:27: error: expected\
    \ \u2018)\u2019 before \u2018}\u2019 token\n   60 |     long long sum36 = (a+b\n\
    \      |                       ~   ^\n      |                           )\n  \
    \ 61 | }\n      | ~                          \n/tmp/tmpjlt0mc8m.cpp:61:1: error:\
    \ expected \u2018,\u2019 or \u2018;\u2019 before \u2018}\u2019 token\n   61 |\
    \ }\n      | ^\n/tmp/tmpjlt0mc8m.cpp:61:1: warning: control reaches end of non-void\
    \ function [-Wreturn-type]\n   61 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660077299
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long long a1 = abs(a), b1 = abs(b), c1 = abs(c);\n\
    \    long long a2 = a1 + b1, c2 = b1 + c1;\n    long long a3 = a2 + c2, b3 = b1\
    \ + c2, c3 = a1 + b2;\n    long long a4 = a3 + b3, b4 = b3 + c3, c4 = a3 + b4;\n\
    \    long long a5 = a4 + b4, b5 = b5 + c4, c5 = a4 + b5;\n    long long a6 = a5\
    \ + b5, b6 = b6 + c5, c6 = a5 + b6;\n    long long a7 = a6 + b6, b7 = b7 + c6,\
    \ c7 = a6 + b7;\n    long long a8 = a7 + b7, b8 = b8 + c7, c8 = a7 + b8;\n   \
    \ long long a9 = a8 + b8, b9 = b9 + c8, c9 = a8 + b9;\n    long long a10 = a9\
    \ + b9, b10 = b10 + c9, c10 = a9 + b10;\n    long long a11 = a10 + b10, b11 =\
    \ b11 + c10, c11 = a10 + b11;\n    long long a12 = a11 + b11, b12 = b12 + c11,\
    \ c12 = a11 + b12;\n    long long a13 = a12 + b12, b13 = b13 + c12, c13 = a12\
    \ + b13;\n    long long a14 = a13 + b13, b14 = b14 + c13, c14 = a13 + b14;\n \
    \   long long a15 = a14 + b14, b15 = b15 + c14, c15 = a14 + b15;\n    long long\
    \ a16 = a15 + b15, b16 = b16 + c15, c16 = a15 + b16;\n    long long a17 = a16\
    \ + b16, b17 = b17 + c16, c17 = a16 + b17;\n    long long a18 = a17 + b17, b18\
    \ = b18 + c17, c18 = a17 + b18;\n    long long a19 = a18 + b18, b19 = b19 + c18,\
    \ c19 = a18 + b19;\n    long long a20 = a19 + b19, b20 = b20 + c19, c20 = a19\
    \ + b20;\n    long long a21 = a20 + b20, b21 = b21 + c20, c21 = a20 + b21;\n \
    \   long long a22 = a21 + b21, b22 = b22 + c22, c22 = a21 + b22;\n}\nint main()\
    \ {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4),\
    \ (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpa2zjijfp.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmpa2zjijfp.cpp:11:53: error: \u2018b2\u2019\
    \ was not declared in this scope; did you mean \u2018b3\u2019?\n   11 |     long\
    \ long a3 = a2 + c2, b3 = b1 + c2, c3 = a1 + b2;\n      |                    \
    \                                 ^~\n      |                                \
    \                     b3\n/tmp/tmpa2zjijfp.cpp:30:44: error: \u2018c22\u2019 was\
    \ not declared in this scope; did you mean \u2018b22\u2019?\n   30 |     long\
    \ long a22 = a21 + b21, b22 = b22 + c22, c22 = a21 + b22;\n      |           \
    \                                 ^~~\n      |                               \
    \             b22\n/tmp/tmpa2zjijfp.cpp:31:1: warning: no return statement in\
    \ function returning non-void [-Wreturn-type]\n   31 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660077299
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long long int ans = (a * b * c) / 2;\n    long long\
    \ int bsq = b * b; // square\n    long long int csq = c * c; // square\n    long\
    \ long int a2 = a * a; // square\n    long long int b2 = b * b; // square\n  \
    \  long long int c2 = c * c; // square\n    long long int ac = a * c; // square\n\
    \    long long int bc = b * c; // square\n    long long int ac2 = ac * ac; //\
    \ square\n    long long int bc2 = bc * bc; // square\n    long long int ac3 =\
    \ ac * ac; // square\n    long long int bc3 = bc * bc; // square\n    long long\
    \ int ac4 = ac * ac; // square\n    long long int bc4 = bc * bc; // square\n \
    \   long long int ac5 = ac * ac; // square\n    long long int bc5 = bc * bc; //\
    \ square\n    long long int ac6 = ac * ac; // square\n    long long int bc6 =\
    \ bc * bc; // square\n    long long int ac7 = ac * ac; // square\n    long long\
    \ int bc7 = bc * bc; // square\n    long long int ac8 = ac * ac; // square\n \
    \   long long int bc8 = bc * bc; // square\n    long long int ac9 = ac * ac; //\
    \ square\n    long long int bc9 = bc * bc; // square\n    long long int ac10 =\
    \ ac * ac; // square\n    long long int bc10 = bc * bc; // square\n    long long\
    \ int ac11 = ac * ac; // square\n    long long int bc11 = bc * bc; // square\n\
    \    long long int ac12 = ac * ac; // square\n    long long int bc12 = bc * bc;\
    \ // square\n    long long int ac13 = ac * ac; // square\n    long long int bc13\
    \ = bc * bc; // square\n    long long int ac14 = ac * ac; // square\n    long\
    \ long int bc14 = bc * bc; // square\n    long long int ac15 = ac * ac; // square\n\
    \    long long int bc15 = bc * bc; // square\n    long long int ac16 = ac * ac;\
    \ // square\n    long long int bc16 = bc * bc; // square\n    long long int ac17\
    \ = ac * ac; // square\n    long long int bc17 = bc * bc; // square\n    long\
    \ long int ac18 = ac * ac; // square\n    long long int bc18 = bc * bc; // square\n\
    }\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpmr29r7a6: /tmp/tmpmr29r7a6.cpp:54: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077299
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long long a1 = abs(a), b1 = abs(b), c1 = abs(c);\n\
    \    long long a2 = a1 + b1, c2 = b1 + c1;\n    long long a3 = a1 + c1, c3 = c1\
    \ + a1;\n    long long b2 = b1 + a2, c2 = c1 + b1;\n    long long b3 = b1 + c2,\
    \ c3 = c1 + b2;\n    long long c3 = c1 + a2;\n    return (a2 == b2 && b2 == c2\
    \ && c2 == a3) || \n           (a3 == b3 && b3 == c3 && c3 == a2) || \n      \
    \     (a2 == b3 && b2 == c3 && c3 == a3);\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpghuiscxf.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmpghuiscxf.cpp:12:29: error: redeclaration\
    \ of \u2018long long int c2\u2019\n   12 |     long long b2 = b1 + a2, c2 = c1\
    \ + b1;\n      |                             ^~\n/tmp/tmpghuiscxf.cpp:10:29: note:\
    \ \u2018long long int c2\u2019 previously declared here\n   10 |     long long\
    \ a2 = a1 + b1, c2 = b1 + c1;\n      |                             ^~\n/tmp/tmpghuiscxf.cpp:13:29:\
    \ error: redeclaration of \u2018long long int c3\u2019\n   13 |     long long\
    \ b3 = b1 + c2, c3 = c1 + b2;\n      |                             ^~\n/tmp/tmpghuiscxf.cpp:11:29:\
    \ note: \u2018long long int c3\u2019 previously declared here\n   11 |     long\
    \ long a3 = a1 + c1, c3 = c1 + a1;\n      |                             ^~\n/tmp/tmpghuiscxf.cpp:14:15:\
    \ error: redeclaration of \u2018long long int c3\u2019\n   14 |     long long\
    \ c3 = c1 + a2;\n      |               ^~\n/tmp/tmpghuiscxf.cpp:11:29: note: \u2018\
    long long int c3\u2019 previously declared here\n   11 |     long long a3 = a1\
    \ + c1, c3 = c1 + a1;\n      |                             ^~\n"
  stdout: ''
  timestamp: 1660077299
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long long int sum = a+b+c;\n    long long int sq =\
    \ sum*sum;\n    long long int sq1 = sq*sq;\n    long long int sq2 = sq1*sq;\n\
    \    long long int sq3 = sq2*sq;\n    long long int sq4 = sq3*sq;\n    long long\
    \ int sq5 = sq4*sq;\n    long long int sq6 = sq5*sq;\n    long long int sq7 =\
    \ sq6*sq;\n    long long int sq8 = sq7*sq;\n    long long int sq9 = sq8*sq;\n\
    \    long long int sq10 = sq9*sq;\n    long long int sq11 = sq10*sq;\n    long\
    \ long int sq12 = sq11*sq;\n    long long int sq13 = sq12*sq;\n    long long int\
    \ sq14 = sq13*sq;\n    long long int sq15 = sq14*sq;\n    long long int sq16 =\
    \ sq15*sq;\n    long long int sq17 = sq16*sq;\n    long long int sq18 = sq17*sq;\n\
    \    long long int sq19 = sq18*sq;\n    long long int sq20 = sq19*sq;\n    long\
    \ long int sq21 = sq20*sq;\n    long long int sq22 = sq21*sq;\n    long long int\
    \ sq23 = sq22*sq;\n    long long int sq24 = sq23*sq;\n    long long int sq25 =\
    \ sq24*sq;\n    long long int sq26 = sq25*sq;\n    long long int sq27 = sq26*sq;\n\
    \    long long int sq28 = sq27*sq;\n    long long int sq29 = sq28*sq;\n    long\
    \ long int sq30 = sq29*sq;\n    long long int sq31 = sq30*sq;\n    long long int\
    \ sq32 = sq31*sq;\n    long long int sq33 = sq32*sq;\n    long long int sq34 =\
    \ sq33*sq;\n    long long int sq35 = sq34*sq;\n    long long int sq36 = sq35*sq;\n\
    \    long long int sq37 = sq36*sq;\n    long long int sq38 = sq37*sq;\n    long\
    \ long int sq39 = sq38*sq;\n    long \n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpbvglr0nq.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmpbvglr0nq.cpp:51:1: error: expected\
    \ unqualified-id before \u2018}\u2019 token\n   51 | }\n      | ^\n/tmp/tmpbvglr0nq.cpp:51:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660077299
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > b && a > c) {\n        return true;\n    }\n\
    \    if (b > c && b > a) {\n        return true;\n    }\n    if (c > a && c >\
    \ b) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n\
    \    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpdkdmmmn8: /tmp/tmpdkdmmmn8.cpp:23: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077297
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > b && a > c) return true;\n    if (b > c &&\
    \ b > a) return true;\n    if (c > a && c > b) return true;\n    return false;\n\
    }\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpjfcbb7a7: /tmp/tmpjfcbb7a7.cpp:17: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077300
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long long a1 = abs(a), b1 = abs(b), c1 = abs(c);\n\
    \    long long a2 = a1 + b1, b2 = b1 + c1, c2 = a1 + c1;\n    long long ans =\
    \ a2 + b2 + c2;\n    if (ans == 0) return false;\n    long long s = a * b * c\
    \ / ans;\n    long long t = a * b * b / ans;\n    long long u = a * c * c / ans;\n\
    \    long long v = a * b * a / ans;\n    long long w = a * c * c / ans;\n    long\
    \ long x = b * b * c / ans;\n    long long y = a * b * a / ans;\n    long long\
    \ z = a * c * a / ans;\n    long long a = a1;\n    long long b = b1;\n    long\
    \ long c = c1;\n    long long d = a1 + b1 + c1;\n    long long e = a2 + b2 + c2;\n\
    \    long long f = a2 + b2 + c2;\n    long long g = a2 + b2 + c2;\n    long long\
    \ h = a2 + b2 + c2;\n    long long i = a2 + b2 + c2;\n    long long j = a2 + b2\
    \ + c2;\n    long long k = a2 + b2 + c2;\n    long long l = a2 + b2 + c2;\n  \
    \  long long m = a2 + b2 + c2;\n    long long n = a2 + b2 + c2;\n    long long\
    \ o = a2 + b2 + c2;\n    long long p = a2 + b2 + c2;\n    long long q = a2 + b2\
    \ + c2;\n    long long r = a2 + b2 + c2;\n    long long s = a2 + b2 + c2;\n  \
    \  long long t = a2 + b2 + c2;\n    long long u = a2 + b2 + c2;\n    long long\
    \ v = a2 + b2 + c2;\n    long long w = a2 + b2 + c2;\n    long long x = a2 + b2\
    \ + c2;\n    long long y = a2 + b2 + c2;\n    long long z = a2 + b2 + c2;\n  \
    \  long long a = a1;\n    long long b = b1;\n    long long c = c1;\n    long long\
    \ d = a1 + b1 + c1;\n    long long e = a2 + b2 + c2;\n    long long f = a2 + b2\
    \ + c2;\n    long long g = a2 + b2 + c2;\n    long long h = a2 + b2 + c2;\n  \
    \  long long i = a\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpww29t0sz.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmpww29t0sz.cpp:21:15: error: declaration\
    \ of \u2018long long int a\u2019 shadows a parameter\n   21 |     long long a\
    \ = a1;\n      |               ^\n/tmp/tmpww29t0sz.cpp:22:15: error: declaration\
    \ of \u2018long long int b\u2019 shadows a parameter\n   22 |     long long b\
    \ = b1;\n      |               ^\n/tmp/tmpww29t0sz.cpp:23:15: error: declaration\
    \ of \u2018long long int c\u2019 shadows a parameter\n   23 |     long long c\
    \ = c1;\n      |               ^\n/tmp/tmpww29t0sz.cpp:39:15: error: redeclaration\
    \ of \u2018long long int s\u2019\n   39 |     long long s = a2 + b2 + c2;\n  \
    \    |               ^\n/tmp/tmpww29t0sz.cpp:13:15: note: \u2018long long int\
    \ s\u2019 previously declared here\n   13 |     long long s = a * b * c / ans;\n\
    \      |               ^\n/tmp/tmpww29t0sz.cpp:40:15: error: redeclaration of\
    \ \u2018long long int t\u2019\n   40 |     long long t = a2 + b2 + c2;\n     \
    \ |               ^\n/tmp/tmpww29t0sz.cpp:14:15: note: \u2018long long int t\u2019\
    \ previously declared here\n   14 |     long long t = a * b * b / ans;\n     \
    \ |               ^\n/tmp/tmpww29t0sz.cpp:41:15: error: redeclaration of \u2018\
    long long int u\u2019\n   41 |     long long u = a2 + b2 + c2;\n      |      \
    \         ^\n/tmp/tmpww29t0sz.cpp:15:15: note: \u2018long long int u\u2019 previously\
    \ declared here\n   15 |     long long u = a * c * c / ans;\n      |         \
    \      ^\n/tmp/tmpww29t0sz.cpp:42:15: error: redeclaration of \u2018long long\
    \ int v\u2019\n   42 |     long long v = a2 + b2 + c2;\n      |              \
    \ ^\n/tmp/tmpww29t0sz.cpp:16:15: note: \u2018long long int v\u2019 previously\
    \ declared here\n   16 |     long long v = a * b * a / ans;\n      |         \
    \      ^\n/tmp/tmpww29t0sz.cpp:43:15: error: redeclaration of \u2018long long\
    \ int w\u2019\n   43 |     long long w = a2 + b2 + c2;\n      |              \
    \ ^\n/tmp/tmpww29t0sz.cpp:17:15: note: \u2018long long int w\u2019 previously\
    \ declared here\n   17 |     long long w = a * c * c / ans;\n      |         \
    \      ^\n/tmp/tmpww29t0sz.cpp:44:15: error: redeclaration of \u2018long long\
    \ int x\u2019\n   44 |     long long x = a2 + b2 + c2;\n      |              \
    \ ^\n/tmp/"
  stdout: ''
  timestamp: 1660077300
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long long ans = (a * b * c) / 2;\n    if (ans % 2\
    \ == 0)\n        return true;\n    return false;\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmplgtkj693: /tmp/tmplgtkj693.cpp:19: int main(): Assertion `candidate((2),
    (2), (2)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077300
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > b + c || b > a + c || c > a + b) {\n     \
    \   return false;\n    }\n    return true;\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpgp183e49: /tmp/tmpgp183e49.cpp:17: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077296
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long long a1 = abs(a), b1 = abs(b), c1 = abs(c);\n\
    \    long long a2 = a1 + b1, c2 = b1 + c1;\n    long long a3 = a1 + c1, c3 = b1\
    \ + a1;\n    long long b2 = a2 + c2, b3 = a2 + b2, c2 = b2 + c2;\n    long long\
    \ c3 = a3 + c3, b3 = a3 + b3, c3 = b3 + c3;\n    long long ans = (a1 * b2) + (a2\
    \ * b3) + (a3 * c2);\n    ans = ans * (ans + 1) * (ans + 2) / 6;\n    return ans\
    \ == 0;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmhd792c3.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmpmhd792c3.cpp:12:43: error: redeclaration\
    \ of \u2018long long int c2\u2019\n   12 |     long long b2 = a2 + c2, b3 = a2\
    \ + b2, c2 = b2 + c2;\n      |                                           ^~\n\
    /tmp/tmpmhd792c3.cpp:10:29: note: \u2018long long int c2\u2019 previously declared\
    \ here\n   10 |     long long a2 = a1 + b1, c2 = b1 + c1;\n      |           \
    \                  ^~\n/tmp/tmpmhd792c3.cpp:13:15: error: redeclaration of \u2018\
    long long int c3\u2019\n   13 |     long long c3 = a3 + c3, b3 = a3 + b3, c3 =\
    \ b3 + c3;\n      |               ^~\n/tmp/tmpmhd792c3.cpp:11:29: note: \u2018\
    long long int c3\u2019 previously declared here\n   11 |     long long a3 = a1\
    \ + c1, c3 = b1 + a1;\n      |                             ^~\n/tmp/tmpmhd792c3.cpp:13:29:\
    \ error: redeclaration of \u2018long long int b3\u2019\n   13 |     long long\
    \ c3 = a3 + c3, b3 = a3 + b3, c3 = b3 + c3;\n      |                         \
    \    ^~\n/tmp/tmpmhd792c3.cpp:12:29: note: \u2018long long int b3\u2019 previously\
    \ declared here\n   12 |     long long b2 = a2 + c2, b3 = a2 + b2, c2 = b2 + c2;\n\
    \      |                             ^~\n/tmp/tmpmhd792c3.cpp:13:43: error: redeclaration\
    \ of \u2018long long int c3\u2019\n   13 |     long long c3 = a3 + c3, b3 = a3\
    \ + b3, c3 = b3 + c3;\n      |                                           ^~\n\
    /tmp/tmpmhd792c3.cpp:11:29: note: \u2018long long int c3\u2019 previously declared\
    \ here\n   11 |     long long a3 = a1 + c1, c3 = b1 + a1;\n      |           \
    \                  ^~\n"
  stdout: ''
  timestamp: 1660077300
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > b + c || b > a + c || c > a + b) {\n     \
    \   return false;\n    }\n    return true;\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpgp183e49: /tmp/tmpgp183e49.cpp:17: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077296
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > b && a > c) return true;\n    if (b > c &&\
    \ b > a) return true;\n    if (c > a && c > b) return true;\n    return false;\n\
    }\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpjfcbb7a7: /tmp/tmpjfcbb7a7.cpp:17: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077300
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    if(a>b&&b>c&&c>a){\n\
    \        return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp17zb7csq: /tmp/tmp17zb7csq.cpp:17: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077296
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long d = b * b - 4 * a * c;\n    if (d < 0) {\n  \
    \      return false;\n    }\n    long s = (-b + sqrt(d)) / (2 * a);\n    long\
    \ t = (-b - sqrt(d)) / (2 * a);\n    if (s >= 0 && t >= 0 && s <= 1 && t <= 1)\
    \ {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n\
    \    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpdkl6qx_z: /tmp/tmpdkl6qx_z.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077300
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long ab = abs(b - a);\n    long ac = abs(c - a);\n\
    \    long bc = abs(b - c);\n    long acb = abs(ac - bc);\n    if (ab == ac &&\
    \ ab == bc) {\n        return true;\n    }\n    return false;\n}\nint main() {\n\
    \    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5))\
    \ == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmps9b0ja5i: /tmp/tmps9b0ja5i.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077300
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a == 0 || b == 0 || c == 0)\n        return false;\n\
    \    long d = b * b - 4 * a * c;\n    if (d < 0)\n        return false;\n    long\
    \ x = ((b * b) - 4 * a * c) / d;\n    long y = ((-b) + sqrt(d)) / 2;\n    long\
    \ z = ((-b) - sqrt(d)) / 2;\n    if (x == y && x == z)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp04qlh_6e: /tmp/tmp04qlh_6e.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077300
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a == 0 && b == 0 && c == 0)\n        return true;\n\
    \    else if (a == 0 || b == 0 || c == 0)\n        return false;\n    long ab\
    \ = abs(b - a);\n    long ac = abs(c - a);\n    long bc = abs(b - c);\n    long\
    \ abc = ab + bc;\n    long acb = ac + ab;\n    long ac2ab = ac * ab;\n    long\
    \ ac2ac = ac * ac;\n    long ac2bc = ac * bc;\n    long ac2abc = ac * abc;\n \
    \   long ac2bab = ac * bab;\n    long ac2babc = ac * babc;\n    long ac2acb =\
    \ ac * acb;\n    long ac2ac2ab = ac * ac2ab;\n    long ac2babc = ac * ac2bc;\n\
    \    long ac2bab2abc = ac * ac2babc;\n    long ac2bab2bc = ac * ac2bab2c;\n  \
    \  long ac2bab2bc2 = ac * ac2bab2bc * 2;\n    long ac2bab2bc3 = ac * ac2bab2bc\
    \ * 3;\n    long ac2bab2bc4 = ac * ac2bab2bc * 4;\n    long ac2bab2bc5 = ac *\
    \ ac2bab2bc * 5;\n    long ac2bab2bc6 = ac * ac2bab2bc * 6;\n    long ac2bab2bc7\
    \ = ac * ac2bab2bc * 7;\n    long ac2bab2bc8 = ac * ac2bab2bc * 8;\n    long ac2bab2bc9\
    \ = ac * ac2bab2bc * 9;\n    long ac2bab2bc10 = ac * ac2bab2bc * 10;\n    long\
    \ ac2bab2bc11 = ac * ac2bab2bc * 11;\n    long ac2bab2bc12 = ac * ac2bab2bc *\
    \ 12;\n    long ac2bab2bc13 = ac * ac2bab2bc * 13;\n    long ac2bab2bc14 = ac\
    \ * ac2bab2bc * 14;\n    long ac2bab2bc15 = ac * ac2bab2bc * 15;\n    long ac2bab2bc16\
    \ = ac * ac2bab2bc * 16;\n    long ac2bab2bc17 = ac * ac2bab2bc * 17;\n    long\
    \ ac2bab2bc18 = ac * ac2bab2bc * 18;\n\n}\nint main() {\n    auto candidate =\
    \ right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n   \
    \ assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp980zy_9p.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmp980zy_9p.cpp:22:24: error: \u2018bab\u2019\
    \ was not declared in this scope; did you mean \u2018ab\u2019?\n   22 |     long\
    \ ac2bab = ac * bab;\n      |                        ^~~\n      |            \
    \            ab\n/tmp/tmp980zy_9p.cpp:23:25: error: \u2018babc\u2019 was not declared\
    \ in this scope; did you mean \u2018abc\u2019?\n   23 |     long ac2babc = ac\
    \ * babc;\n      |                         ^~~~\n      |                     \
    \    abc\n/tmp/tmp980zy_9p.cpp:26:10: error: redeclaration of \u2018long int ac2babc\u2019\
    \n   26 |     long ac2babc = ac * ac2bc;\n      |          ^~~~~~~\n/tmp/tmp980zy_9p.cpp:23:10:\
    \ note: \u2018long int ac2babc\u2019 previously declared here\n   23 |     long\
    \ ac2babc = ac * babc;\n      |          ^~~~~~~\n/tmp/tmp980zy_9p.cpp:28:27:\
    \ error: \u2018ac2bab2c\u2019 was not declared in this scope; did you mean \u2018\
    ac2bab2bc\u2019?\n   28 |     long ac2bab2bc = ac * ac2bab2c;\n      |       \
    \                    ^~~~~~~~\n      |                           ac2bab2bc\n/tmp/tmp980zy_9p.cpp:47:1:\
    \ warning: control reaches end of non-void function [-Wreturn-type]\n   47 | }\n\
    \      | ^\n"
  stdout: ''
  timestamp: 1660077300
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > b + c || b > a + c || c > a + b) {\n     \
    \   return false;\n    }\n    return true;\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpgp183e49: /tmp/tmpgp183e49.cpp:17: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077296
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    if(a==b){\n        if(a==c){\n\
    \            return true;\n        }\n    }\n    if(a==c){\n        return true;\n\
    \    }\n    if(b==c){\n        return true;\n    }\n    return false;\n}\nint\
    \ main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp25p35n6m: /tmp/tmp25p35n6m.cpp:25: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077300
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if(a==b+c || a==c-b || a==b+c || a==c-b){\n      \
    \  return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpiyjvgxad: /tmp/tmpiyjvgxad.cpp:16: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077300
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > b && a > c) {\n        return true;\n    }\n\
    \    if (b > c && b > a) {\n        return true;\n    }\n    if (c > a && c >\
    \ b) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n\
    \    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpdkdmmmn8: /tmp/tmpdkdmmmn8.cpp:23: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077297
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a < 0 || b < 0 || c < 0) {\n        return false;\n\
    \    }\n    if (a + b > c) {\n        return false;\n    }\n    if (a + c > b)\
    \ {\n        return false;\n    }\n    if (b + c > a) {\n        return false;\n\
    \    }\n    return true;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp14c499_y: /tmp/tmp14c499_y.cpp:25: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077297
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    if(a==b+c){\n       \
    \ return true;\n    }\n    if(a==b){\n        if(c>b){\n            return true;\n\
    \        }\n    }\n    if(a==c){\n        if(b>c){\n            return true;\n\
    \        }\n    }\n    if(b==c){\n        if(a>c){\n            return true;\n\
    \        }\n    }\n    return false;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp5k3zagh1: /tmp/tmp5k3zagh1.cpp:32: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077300
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a == 0 || b == 0 || c == 0) return false;\n  \
    \  long long ans = (a * b * c) / 2;\n    if (ans == 0) return false;\n    long\
    \ long sum = a * b + c * a + b * c;\n    if (sum == ans) return true;\n    return\
    \ false;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp8dh4qyoy: /tmp/tmp8dh4qyoy.cpp:18: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077300
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    if(a>b){\n        if(a>c){\n\
    \            return true;\n        }\n    }\n    else if(b>c){\n        return\
    \ true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpk20_0wqs: /tmp/tmpk20_0wqs.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077300
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here.\n    if(a>b){\n        if(a>c){\n\
    \            return true;\n        }\n    }\n    if(b>c){\n        return true;\n\
    \    }\n    return false;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp957326z6: /tmp/tmp957326z6.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077300
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    if(a>b&&b>c&&c>a){\n\
    \        return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp17zb7csq: /tmp/tmp17zb7csq.cpp:17: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077296
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a < 0 || b < 0 || c < 0) {\n        return false;\n\
    \    }\n    if (a + b > c || a + c > b || b + c > a) {\n        return false;\n\
    \    }\n    return true;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp0ydjrn__: /tmp/tmp0ydjrn__.cpp:19: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077296
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a == 0 || b == 0 || c == 0)\n        return false;\n\
    \    long d = b * b - 4 * a * c;\n    if (d < 0)\n        return false;\n    long\
    \ x = (b + b + c) / 2;\n    long y = (-b - c + a) / 2;\n    long z = (-b + c +\
    \ a) / 2;\n    return ((x * x) + (y * y) + (z * z) == 0);\n}\nint main() {\n \
    \   auto candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5))\
    \ == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpii7ja03d: /tmp/tmpii7ja03d.cpp:21: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077300
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    if(a==b||a==c||b==c)\n\
    \        return true;\n    else if(a>b&&a>c)\n        return false;\n    else\
    \ if(b>c&&b>a)\n        return false;\n    else if(c>a&&c>b)\n        return false;\n\
    \    else\n        return true;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpihsj5yi1: /tmp/tmpihsj5yi1.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077300
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > b && a > c) return true;\n    if (b > c &&\
    \ b > a) return true;\n    if (c > a && c > b) return true;\n    return false;\n\
    }\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpjfcbb7a7: /tmp/tmpjfcbb7a7.cpp:17: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077300
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if(a==b||a==c||b==c)\n        return false;\n    long\
    \ long ans = (a+b+c)/2;\n    long long bsq = b*b;\n    long long csq = c*c;\n\
    \    long long sq = ans*ans;\n    long long a2 = a*a;\n    long long b2 = b*b;\n\
    \    long long c2 = c*c;\n    long long sq2 = sq*sq;\n    long long a3 = a2*a2;\n\
    \    long long b3 = b2*b2;\n    long long c3 = c2*c2;\n    long long sq3 = sq2*sq2;\n\
    \    long long a4 = a3*a3;\n    long long b4 = b3*b3;\n    long long c4 = c3*c3;\n\
    \    long long sq4 = sq3*sq3;\n    long long a5 = a4*a4;\n    long long b5 = b5*b5;\n\
    \    long long c5 = c4*c4;\n    long long sq5 = sq4*sq4;\n    long long a6 = a5*a5;\n\
    \    long long b6 = b6*b6;\n    long long c6 = c6*c6;\n    long long sq6 = sq5*sq5;\n\
    \    long long a7 = a6*a6;\n    long long b7 = b7*b7;\n    long long c7 = c7*c7;\n\
    \    long long sq7 = sq6*sq6;\n    long long a8 = a7*a7;\n    long long b8 = b8*b8;\n\
    \    long long c8 = c8*c8;\n    long long sq8 = sq7*sq7;\n    long long a9 = a8*a8;\n\
    \    long long b9 = b9*b9;\n    long long c9 = c9*c9;\n    long long sq9 = sq8*sq8;\n\
    \    long long a10 = a9*a9;\n    long long b10 = b9*b9;\n    long long c10 = c9*c9;\n\
    \    long long sq10 = sq9*sq9;\n    long long a11 = a10*a10;\n    long long b11\
    \ = b10*b10;\n    long long c11 = c10*c10;\n    long long sq11 = sq10*sq10;\n\
    \    long long a12 = a11*a11;\n    long long b12 = b11*b11;\n    long long c12\
    \ = c11*c11;\n    long long sq12 = sq11*sq11;\n    long long a13 = a12*\n}\nint\
    \ main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8kuyuipa.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmp8kuyuipa.cpp:60:1: error: expected\
    \ primary-expression before \u2018}\u2019 token\n   60 | }\n      | ^\n/tmp/tmp8kuyuipa.cpp:60:1:\
    \ warning: control reaches end of non-void function [-Wreturn-type]\n   60 | }\n\
    \      | ^\n"
  stdout: ''
  timestamp: 1660077300
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long long int ans = 0;\n    long long int bc = b *\
    \ c;\n    long long int ac = a * c;\n    long long int ab = a * b;\n    long long\
    \ int acb = ac + bc;\n    long long int abc = ab + bc;\n    long long int acbc\
    \ = acb + bc;\n    long long int acbca = acbc + ac;\n    long long int acbcab\
    \ = acbc + ab;\n    long long int acbcabc = acbcab + bc;\n    long long int acbcabcd\
    \ = acbcabc + cd;\n    long long int acbcabcde = acbcabcde + de;\n    long long\
    \ int acbcabcdef = acbcabcdef + ef;\n    long long int acbcabcdefg = acbcabcdef\
    \ + fg;\n    long long int acbcabcdefgh = acbcabcdefg + gh;\n    long long int\
    \ acbcabcdefghi = acbcabcdefgh + hi;\n    long long int acbcabcdefghij = acbcabcdefghi\
    \ + ij;\n    long long int acbcabcdefghijk = acbcabcdefghij + jk;\n    long long\
    \ int acbcabcdefghijkl = acbcabcdefghijk + kl;\n    long long int acbcabcdefghijkll\
    \ = acbcabcdefghijkll + ll;\n    long long int acbcabcdefghijkllm = acbcabcdefghijkllm\
    \ + mm;\n    long long int acbcabcdefghijkllmm = acbcabcdefghijkllmm + mm;\n \
    \   long long int acbcabcdefghijkllmmn = acbcabcdefghijkllmmn + nn;\n    long\
    \ long int acbcabcdefghijkllmmnn = acbcabcdefghijkllmmnn + nn;\n    long long\
    \ int acbcabcdefghijkllmmnnn = acbcabcdefghijkllmmnnn + nn;\n    long long int\
    \ acbcabcdefghijkllmmnnnn = acbcabcdefghijkllmmnnnn + nn;\n    long long int acbcabc\n\
    }\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprhmqyt9y.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmprhmqyt9y.cpp:19:40: error: \u2018cd\u2019\
    \ was not declared in this scope; did you mean \u2018c\u2019?\n   19 |     long\
    \ long int acbcabcd = acbcabc + cd;\n      |                                 \
    \       ^~\n      |                                        c\n/tmp/tmprhmqyt9y.cpp:20:43:\
    \ error: \u2018de\u2019 was not declared in this scope\n   20 |     long long\
    \ int acbcabcde = acbcabcde + de;\n      |                                   \
    \        ^~\n/tmp/tmprhmqyt9y.cpp:21:45: error: \u2018ef\u2019 was not declared\
    \ in this scope; did you mean \u2018erf\u2019?\n   21 |     long long int acbcabcdef\
    \ = acbcabcdef + ef;\n      |                                             ^~\n\
    \      |                                             erf\n/tmp/tmprhmqyt9y.cpp:22:46:\
    \ error: \u2018fg\u2019 was not declared in this scope\n   22 |     long long\
    \ int acbcabcdefg = acbcabcdef + fg;\n      |                                \
    \              ^~\n/tmp/tmprhmqyt9y.cpp:23:48: error: \u2018gh\u2019 was not declared\
    \ in this scope\n   23 |     long long int acbcabcdefgh = acbcabcdefg + gh;\n\
    \      |                                                ^~\n/tmp/tmprhmqyt9y.cpp:24:50:\
    \ error: \u2018hi\u2019 was not declared in this scope\n   24 |     long long\
    \ int acbcabcdefghi = acbcabcdefgh + hi;\n      |                            \
    \                      ^~\n/tmp/tmprhmqyt9y.cpp:25:52: error: \u2018ij\u2019 was\
    \ not declared in this scope\n   25 |     long long int acbcabcdefghij = acbcabcdefghi\
    \ + ij;\n      |                                                    ^~\n/tmp/tmprhmqyt9y.cpp:26:54:\
    \ error: \u2018jk\u2019 was not declared in this scope; did you mean \u2018jn\u2019\
    ?\n   26 |     long long int acbcabcdefghijk = acbcabcdefghij + jk;\n      | \
    \                                                     ^~\n      |            \
    \                                          jn\n/tmp/tmprhmqyt9y.cpp:27:56: error:\
    \ \u2018kl\u2019 was not declared in this scope\n   27 |     long long int acbcabcdefghijkl\
    \ = acbcabcdefghijk + kl;\n      |                                           \
    \             ^~\n/tmp/tmprhmqyt9y.cpp:28:59: er"
  stdout: ''
  timestamp: 1660077300
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    long ab = abs(b - a);\n\
    \    long ac = abs(c - a);\n    long bc = abs(b - c);\n    long abc = ab + bc;\n\
    \    if (abc > ab) {\n        return false;\n    }\n    return true;\n}\nint main()\
    \ {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4),\
    \ (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpm99zjg7q: /tmp/tmpm99zjg7q.cpp:21: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077300
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long long a1 = abs(a), b1 = abs(b), c1 = abs(c);\n\
    \    long long a2 = a1 + b1, b2 = b1 + c1, c2 = a1 + c1;\n    long long a3 = a2\
    \ + b2, b3 = b2 + c2, c3 = a2 + c2;\n    long long a4 = a3 + b3, b4 = b3 + c3,\
    \ c4 = a3 + c3;\n    long long a5 = a4 + b4, b5 = b4 + c4, c5 = a4 + c4;\n   \
    \ long long a6 = a5 + b5, b6 = b6 + c5, c6 = a5 + c5;\n    long long a7 = a6 +\
    \ b6, b7 = b7 + c6, c7 = a6 + c6;\n    long long a8 = a7 + b7, b8 = b7 + c7, c8\
    \ = a7 + c7;\n    long long a9 = a8 + b8, b9 = b8 + c8, c9 = a8 + c8;\n    long\
    \ long a10 = a9 + b9, b10 = b9 + c9, c10 = a9 + c9;\n    long long a11 = a10 +\
    \ b10, b11 = b10 + c10, c11 = a10 + c10;\n    long long a12 = a11 + b11, b12 =\
    \ b11 + c11, c12 = a11 + c11;\n    long long a13 = a12 + b12, b13 = b12 + c12,\
    \ c13 = a12 + c12;\n    long long a14 = a13 + b13, b14 = b13 + c13, c14 = a13\
    \ + c13;\n    long long a15 = a14 + b14, b15 = b14 + c14, c15 = a14 + c14;\n \
    \   long long a16 = a15 + b15, b16 = b15 + c15, c16 = a15 + c15;\n    long long\
    \ a17 = a16 + b16, b17 = b16 + c16, c17 = a16 + c16;\n    long long a18 = a17\
    \ + b17, b18 = b17 + c17, c18 = a17 + c17;\n    long long a19 = a18 + b18, b19\
    \ = b18 + c18, c19 = a18 + c18;\n    long long a20 = a19 + b19, b20 = b19 + c19,\
    \ c20 = a19 + c19;\n    long long a21 = a20 + b20, b21 = b20 + c20, c21 = a20\
    \ + c20;\n    long long a22 = a21 + b21, b22 = b21 + c21, \n}\nint main() {\n\
    \    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5))\
    \ == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzzujh7ay.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmpzzujh7ay.cpp:31:1: error: expected\
    \ unqualified-id before \u2018}\u2019 token\n   31 | }\n      | ^\n/tmp/tmpzzujh7ay.cpp:31:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660077300
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > b + c || b > a + c || c > a + b) {\n     \
    \   return false;\n    }\n    return true;\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpgp183e49: /tmp/tmpgp183e49.cpp:17: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077296
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long long a1 = abs(a), b1 = abs(b), c1 = abs(c);\n\
    \    long long a2 = a1 + b1, b2 = b1 + c1, c2 = a1 + c1;\n    long long a3 = a2\
    \ + b2, b3 = b2 + c2, c3 = a2 + c2;\n    long long a4 = a3 + b3, b4 = b3 + c3,\
    \ c4 = a3 + c3;\n    long long a5 = a4 + b4, b5 = b4 + c4, c5 = a4 + c4;\n   \
    \ long long a6 = a5 + b5, b6 = b5 + c5, c6 = a5 + c5;\n    long long a7 = a6 +\
    \ b6, b7 = b6 + c6, c7 = a6 + c6;\n    long long a8 = a7 + b7, b8 = b7 + c7, c8\
    \ = a7 + c7;\n    long long a9 = a8 + b8, b9 = b8 + c8, c9 = a8 + c8;\n    long\
    \ long a10 = a9 + b9, b10 = b9 + c9, c10 = a9 + c9;\n    long long a11 = a10 +\
    \ b10, b11 = b10 + c10, c11 = a10 + c10;\n    long long a12 = a11 + b11, b12 =\
    \ b11 + c11, c12 = a11 + c11;\n    long long a13 = a12 + b12, b13 = b12 + c12,\
    \ c13 = a12 + c12;\n    long long a14 = a13 + b13, b14 = b13 + c13, c14 = a13\
    \ + c13;\n    long long a15 = a14 + b14, b15 = b14 + c14, c15 = a14 + c14;\n \
    \   long long a16 = a15 + b15, b16 = b15 + c15, c16 = a15 + c15;\n    long long\
    \ a17 = a16 + b16, b17 = b16 + c16, c17 = a16 + c16;\n    long long a18 = a17\
    \ + b17, b18 = b17 + c17, c18 = a17 + c17;\n    long long a19 = a18 + b18, b19\
    \ = b18 + c18, c19 = a18 + c18;\n    long long a20 = a19 + b19, b20 = b19 + c19,\
    \ c20 = a19 + c19;\n    long long a21 = a20 + b20, b21 = b20 + c20, c21 = a20\
    \ + c20;\n    long long a22 = a21 + b21, b22 = b21 + c21, \n}\nint main() {\n\
    \    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5))\
    \ == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_3jp5ca4.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmp_3jp5ca4.cpp:31:1: error: expected\
    \ unqualified-id before \u2018}\u2019 token\n   31 | }\n      | ^\n/tmp/tmp_3jp5ca4.cpp:31:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660077300
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if((b - a)*(c - b) == (c - a)*(a - b)) {\n       \
    \ return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpzdu_yup7: /tmp/tmpzdu_yup7.cpp:16: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077296
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    long long int sum = a+b+c;\n\
    \    long long int sum1 = a+b+c;\n    long long int sum2 = a+b+c;\n    long long\
    \ int sum3 = a+b+c;\n    long long int sum4 = a+b+c;\n    long long int sum5 =\
    \ a+b+c;\n    long long int sum6 = a+b+c;\n    long long int sum7 = a+b+c;\n \
    \   long long int sum8 = a+b+c;\n    long long int sum9 = a+b+c;\n    long long\
    \ int sum10 = a+b+c;\n    long long int sum11 = a+b+c;\n    long long int sum12\
    \ = a+b+c;\n    long long int sum13 = a+b+c;\n    long long int sum14 = a+b+c;\n\
    \    long long int sum15 = a+b+c;\n    long long int sum16 = a+b+c;\n    long\
    \ long int sum17 = a+b+c;\n    long long int sum18 = a+b+c;\n    long long int\
    \ sum19 = a+b+c;\n    long long int sum20 = a+b+c;\n    long long int sum21 =\
    \ a+b+c;\n    long long int sum22 = a+b+c;\n    long long int sum23 = a+b+c;\n\
    \    long long int sum24 = a+b+c;\n    long long int sum25 = a+b+c;\n    long\
    \ long int sum26 = a+b+c;\n    long long int sum27 = a+b+c;\n    long long int\
    \ sum28 = a+b+c;\n    long long int sum29 = a+b+c;\n    long long int sum30 =\
    \ a+b+c;\n    long long int sum31 = a+b+c;\n    long long int sum32 = a+b+c;\n\
    \    long long int sum33 = a+b+c;\n    long long int sum34 = a+b+c;\n    long\
    \ long int sum35 = a+b+c;\n    long long int sum36 = a+b+c;\n    long long int\
    \ sum37 = a+b+c;\n    long long int sum38 = a+b+c;\n    long long int sum39 =\
    \ a+b+c;\n    long long int sum40 = a+b+c;\n    long long int sum41 = a+b+c;\n\
    \    long long int sum42 = a+b+\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmps1_6xg5d.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmps1_6xg5d.cpp:53:1: error: expected\
    \ primary-expression before \u2018}\u2019 token\n   53 | }\n      | ^\n/tmp/tmps1_6xg5d.cpp:53:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660077300
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long long a1 = abs(a), b1 = abs(b), c1 = abs(c);\n\
    \    long long a2 = a1 + b1, b2 = b1 + c1, c2 = a1 + c1;\n    long long a3 = a2\
    \ + b2, b3 = b2 + c2, c3 = a2 + c2;\n    long long a4 = a3 + b3, b4 = b3 + c3,\
    \ c4 = a3 + c3;\n    long long a5 = a4 + b4, b5 = b4 + c4, c5 = a4 + c4;\n   \
    \ long long a6 = a5 + b5, b6 = b6 + c5, c6 = a5 + c5;\n    long long a7 = a6 +\
    \ b6, b7 = b7 + c6, c7 = a6 + c6;\n    long long a8 = a7 + b7, b8 = b7 + c7, c8\
    \ = a7 + c7;\n    long long a9 = a8 + b8, b9 = b8 + c8, c9 = a8 + c8;\n    long\
    \ long a10 = a9 + b9, b10 = b9 + c9, c10 = a9 + c9;\n    long long a11 = a10 +\
    \ b10, b11 = b10 + c10, c11 = a10 + c10;\n    long long a12 = a11 + b11, b12 =\
    \ b11 + c11, c12 = a11 + c11;\n    long long a13 = a12 + b12, b13 = b12 + c12,\
    \ c13 = a12 + c12;\n    long long a14 = a13 + b13, b14 = b13 + c13, c14 = a13\
    \ + c13;\n    long long a15 = a14 + b14, b15 = b14 + c14, c15 = a14 + c14;\n \
    \   long long a16 = a15 + b15, b16 = b15 + c15, c16 = a15 + c15;\n    long long\
    \ a17 = a16 + b16, b17 = b16 + c16, c17 = a16 + c16;\n    long long a18 = a17\
    \ + b17, b18 = b17 + c17, c18 = a17 + c17;\n    long long a19 = a18 + b18, b19\
    \ = b18 + c18, c19 = a18 + c18;\n    long long a20 = a19 + b19, b20 = b19 + c19,\
    \ c20 = a19 + c19;\n    long long a21 = a20 + b20, b21 = b20 + c20, c21 = a20\
    \ + c20;\n    long long a22 = a21 + b21, b22 = b21 + c21, \n}\nint main() {\n\
    \    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5))\
    \ == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzzujh7ay.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmpzzujh7ay.cpp:31:1: error: expected\
    \ unqualified-id before \u2018}\u2019 token\n   31 | }\n      | ^\n/tmp/tmpzzujh7ay.cpp:31:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660077300
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long long a1 = (a + b + c) / 2;\n    long long a2\
    \ = (b + c + a) / 2;\n    long long a3 = (c + a + b) / 2;\n    long long a4 =\
    \ (a1 + a2 + a3) / 2;\n    long long b1 = (b + c + a) / 2;\n    long long b2 =\
    \ (b + c + a) / 2;\n    long long b3 = (c + a + b) / 2;\n    long long b4 = (b1\
    \ + b2 + b3) / 2;\n    long long c1 = (c + a + b) / 2;\n    long long c2 = (b\
    \ + c + a) / 2;\n    long long c3 = (c + a + b) / 2;\n    long long c4 = (c1 +\
    \ c2 + c3) / 2;\n    long long a5 = (a1 + a2 + a3) / 2;\n    long long b5 = (b1\
    \ + b2 + b3) / 2;\n    long long c5 = (c1 + c2 + c3) / 2;\n    long long a6 =\
    \ (a1 + a2 + a3) / 2;\n    long long b6 = (b1 + b2 + b3) / 2;\n    long long c6\
    \ = (b1 + b2 + b3) / 2;\n    long long a7 = (a1 + a2 + a3) / 2;\n    long long\
    \ b7 = (b1 + b2 + b3) / 2;\n    long long c7 = (b1 + b2 + b3) / 2;\n    long long\
    \ a8 = (a1 + a2 + a3) / 2;\n    long long b8 = (b1 + b2 + b3) / 2;\n    long long\
    \ c8 = (b1 + b2 + b3) / 2;\n    long long a9 = (a1 + a2 + a3) / 2;\n    long long\
    \ b9 = (b1 + b2 + b3) / 2;\n    long long c9 = (b1 + b2 + b3) / 2;\n    long long\
    \ a10 = (a1 + a2 + a3) / 2;\n    long long b10 = (b1 + b2 + b3) / 2;\n    long\
    \ long c10 = (b1 + b2 + b3) / 2;\n    long long a11 = (a1 + a2 + a3) / 2;\n  \
    \  long long b11 = (b1 + b2 + b3) / 2;\n    long long c11 = (b1 + b2 + b3) / 2;\n\
    \    long long a12 = (a1 + a2 + a3) / 2;\n    long long b12 = (b1 + b2 + b3) /\
    \ 2;\n    long long c12 = (b1 + b2 + b3) / 2;\n    long long a13 = (a1 + a2 +\
    \ a3) / 2;\n    long long b13 = (b1 + b2 + b3) / 2;\n    long long c13 = (b1 +\
    \ b2 + b3) / 2;\n    long long a14 = (a1 + a2 + a3\n}\nint main() {\n    auto\
    \ candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n\
    \    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5s2hxgdh.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmp5s2hxgdh.cpp:48:34: error: expected\
    \ \u2018)\u2019 before \u2018}\u2019 token\n   48 |     long long a14 = (a1 +\
    \ a2 + a3\n      |                     ~            ^\n      |               \
    \                   )\n   49 | }\n      | ~                                 \n\
    /tmp/tmp5s2hxgdh.cpp:49:1: error: expected \u2018,\u2019 or \u2018;\u2019 before\
    \ \u2018}\u2019 token\n   49 | }\n      | ^\n/tmp/tmp5s2hxgdh.cpp:49:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660077300
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if(a>b+c) return false;\n    if(a>c+b) return false;\n\
    \    if(b>c+a) return false;\n    return true;\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpqrg1xq74: /tmp/tmpqrg1xq74.cpp:17: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077296
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long ab = abs(b - a);\n    long ac = abs(c - a);\n\
    \    long bc = abs(b - c);\n    long cb = abs(c - b);\n    long abc = ab + ac;\n\
    \    long bcb = bc + cb;\n    long abbc = ab + bc;\n    long bcab = bc + ab;\n\
    \    long cabc = cb + ab;\n    long abcab = ab + cab;\n    long bcabc = bc + cab;\n\
    \    long cabbc = cab + bc;\n    long abcabc = abc + cab;\n    long bcabbc = bcb\
    \ + cab;\n    long cabcbc = cab + cb;\n    long abcabbc = abcb + cab;\n    long\
    \ bcabcbc = bcbc + cab;\n    long cabcbab = cabbc + ab;\n    long bcabcab = bcabc\
    \ + ab;\n    long cabcabc = cabca + ab;\n    long abcabbca = abcab + ba;\n   \
    \ long bcabcabc = bcabc + ba;\n    long cabcabbc = cabcab + ba;\n    long abcabcabc\
    \ = abcabc + ba;\n    long bcabcabbc = bcabcab + ba;\n    long cabcabcbc = cabcabc\
    \ + ba;\n    long abcabcabbc = abcabcabc + ba;\n    long bcabcabcbc = bcabcabbc\
    \ + ba;\n    long cabcabcbab = cabcabcb + ab;\n    long bcabcabcab = bcabcabca\
    \ + ab;\n    long cabcabcabc = cabcabca + ab;\n    long abcabcabbca = abcabcab\
    \ + ba;\n    long bcabcabcabc = bcabcabca + ba;\n    long cabcabcabbc = cabcabcab\
    \ + ba;\n    long abcabcabcabc = abcabcabca + ba;\n    long bcabcabcabbc = bcabcabcab\
    \ + ba;\n    long cabcabcabcbc = cabcabcabc + ba;\n    long abcabcabcabbc = abcabcabcabc\
    \ + ba;\n    long bcabcabcabcbc = bcabcabcabbc + ba;\n    long cabcabcabcbab =\
    \ cabcabcabcb + ab;\n    long bcabcabcabcab = bcabcabcabca + ab;\n    long cabcabcabcabc\
    \ = cabcabcabca + ab\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9gnhtlu1.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmp9gnhtlu1.cpp:18:23: error: \u2018cab\u2019\
    \ was not declared in this scope; did you mean \u2018cabc\u2019?\n   18 |    \
    \ long abcab = ab + cab;\n      |                       ^~~\n      |         \
    \              cabc\n/tmp/tmp9gnhtlu1.cpp:24:20: error: \u2018abcb\u2019 was not\
    \ declared in this scope; did you mean \u2018abcab\u2019?\n   24 |     long abcabbc\
    \ = abcb + cab;\n      |                    ^~~~\n      |                    abcab\n\
    /tmp/tmp9gnhtlu1.cpp:25:20: error: \u2018bcbc\u2019 was not declared in this scope;\
    \ did you mean \u2018bcabc\u2019?\n   25 |     long bcabcbc = bcbc + cab;\n  \
    \    |                    ^~~~\n      |                    bcabc\n/tmp/tmp9gnhtlu1.cpp:28:20:\
    \ error: \u2018cabca\u2019 was not declared in this scope; did you mean \u2018\
    cabc\u2019?\n   28 |     long cabcabc = cabca + ab;\n      |                 \
    \   ^~~~~\n      |                    cabc\n/tmp/tmp9gnhtlu1.cpp:29:29: error:\
    \ \u2018ba\u2019 was not declared in this scope; did you mean \u2018bc\u2019?\n\
    \   29 |     long abcabbca = abcab + ba;\n      |                            \
    \ ^~\n      |                             bc\n/tmp/tmp9gnhtlu1.cpp:31:21: error:\
    \ \u2018cabcab\u2019 was not declared in this scope; did you mean \u2018cabcabc\u2019\
    ?\n   31 |     long cabcabbc = cabcab + ba;\n      |                     ^~~~~~\n\
    \      |                     cabcabc\n/tmp/tmp9gnhtlu1.cpp:37:23: error: \u2018\
    cabcabcb\u2019 was not declared in this scope; did you mean \u2018cabcabcbc\u2019\
    ?\n   37 |     long cabcabcbab = cabcabcb + ab;\n      |                     \
    \  ^~~~~~~~\n      |                       cabcabcbc\n/tmp/tmp9gnhtlu1.cpp:38:23:\
    \ error: \u2018bcabcabca\u2019 was not declared in this scope; did you mean \u2018\
    bcabcabcab\u2019?\n   38 |     long bcabcabcab = bcabcabca + ab;\n      |    \
    \                   ^~~~~~~~~\n      |                       bcabcabcab\n/tmp/tmp9gnhtlu1.cpp:39:23:\
    \ error: \u2018cabcabca\u2019 was not declared in this scope; did you mean \u2018\
    cabcabc\u2019?\n   39 |     long cabcabcabc = cabcabca + ab;\n      |        \
    \               ^~~~~~~~\n      |                       cabcabc\n/tmp/tmp9gnhtlu1.cpp:40:24:\
    \ error: \u2018abcabcab\u2019 was n"
  stdout: ''
  timestamp: 1660077301
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    if(a==b){\n        if(a==c){\n\
    \            return true;\n        }\n    }\n    else if(a==c){\n        if(b==c){\n\
    \            return true;\n        }\n    }\n    else if(b==c){\n        if(a==b){\n\
    \            return true;\n        }\n    }\n    return false;\n}\nint main()\
    \ {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4),\
    \ (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpy1tkkg30: /tmp/tmpy1tkkg30.cpp:29: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077301
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    if(a==b+c){\n       \
    \ return true;\n    }\n    if(a==b){\n        if(c>b){\n            return true;\n\
    \        }\n    }\n    if(a==c){\n        if(b>c){\n            return true;\n\
    \        }\n    }\n    if(b==c){\n        if(a>c){\n            return true;\n\
    \        }\n    }\n    if(a>b+c){\n        return false;\n    }\n    if(a>b){\n\
    \        if(b>c){\n            return false;\n        }\n    }\n    if(a>c){\n\
    \        if(c>b){\n            return false;\n        }\n    }\n    if(b>c){\n\
    \        if(a>c){\n            return false;\n        }\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpm_0mkwyh: /tmp/tmpm_0mkwyh.cpp:50: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077301
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > b && a > c) {\n        return true;\n    }\n\
    \    if (b > c && b > a) {\n        return true;\n    }\n    if (c > a && c >\
    \ b) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n\
    \    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpdkdmmmn8: /tmp/tmpdkdmmmn8.cpp:23: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077297
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    if(a==b&&b==c){\n   \
    \     return true;\n    }\n    if(a==b||a==c||b==c){\n        return false;\n\
    \    }\n    long ab=(a+b)/2;\n    long bc=(b+c)/2;\n    long ac=(a+c)/2;\n   \
    \ long abc=(ab+bc)/2;\n    long abc=(ab+ac)/2;\n    long abc=(ab+bc)/ 2;\n   \
    \ long abc=(ab+ac)/2;\n    long abc=(ab+bc)/2;\n    long abc=(ab+ac)/2;\n    long\
    \ abc=(ab+bc)/2;\n    long abc=(ab+ac)/2;\n    long abc=(ab+bc)/2;\n    long abc=(ab+ac)/2;\n\
    \    long abc=(ab+bc)/2;\n    long abc=(ab+ac)/2;\n    long abc=(ab+bc)/2;\n \
    \   long abc=(ab+ac)/2;\n    long abc=(ab+bc)/2;\n    long abc=(ab+ac)/2;\n  \
    \  long abc=(ab+bc)/2;\n    long abc=(ab+ac)/2;\n    long abc=(ab+bc)/2;\n   \
    \ long abc=(ab+ac)/2;\n    long abc=(ab+bc)/2;\n    long abc=(ab+ac)/2;\n    long\
    \ abc=(ab+bc)/2;\n    long abc=(ab+ac)/2;\n    long abc=(ab+bc)/2;\n    long abc=(ab+ac)/2;\n\
    \    long abc=(ab+bc)/2;\n    long abc=(ab+ac)/2;\n    long abc=(ab+bc)/2;\n \
    \   long abc=(ab+ac)/2;\n    long abc=(ab+bc)/2;\n    long abc=(ab+ac)/2;\n  \
    \  long abc=(ab+bc)/2;\n    long abc=(ab+ac)/2;\n    long abc=(ab+bc)/2;\n   \
    \ long abc=(ab+ac)/2;\n    long abc=(ab+bc)/2;\n    long abc=(ab+ac)/2;\n    long\
    \ abc=(ab+bc)/2;\n    long abc=(ab+ac)/2;\n    long abc=(ab+bc)/2;\n    long abc=(ab+ac)/2;\n\
    \    long abc=(ab+bc)/2;\n    long abc=(ab+ac)/2;\n    long abc=(\n}\nint main()\
    \ {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4),\
    \ (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfc2ucim7.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmpfc2ucim7.cpp:20:10: error: redeclaration\
    \ of \u2018long int abc\u2019\n   20 |     long abc=(ab+ac)/2;\n      |      \
    \    ^~~\n/tmp/tmpfc2ucim7.cpp:19:10: note: \u2018long int abc\u2019 previously\
    \ declared here\n   19 |     long abc=(ab+bc)/2;\n      |          ^~~\n/tmp/tmpfc2ucim7.cpp:21:10:\
    \ error: redeclaration of \u2018long int abc\u2019\n   21 |     long abc=(ab+bc)/\
    \ 2;\n      |          ^~~\n/tmp/tmpfc2ucim7.cpp:19:10: note: \u2018long int abc\u2019\
    \ previously declared here\n   19 |     long abc=(ab+bc)/2;\n      |         \
    \ ^~~\n/tmp/tmpfc2ucim7.cpp:22:10: error: redeclaration of \u2018long int abc\u2019\
    \n   22 |     long abc=(ab+ac)/2;\n      |          ^~~\n/tmp/tmpfc2ucim7.cpp:19:10:\
    \ note: \u2018long int abc\u2019 previously declared here\n   19 |     long abc=(ab+bc)/2;\n\
    \      |          ^~~\n/tmp/tmpfc2ucim7.cpp:23:10: error: redeclaration of \u2018\
    long int abc\u2019\n   23 |     long abc=(ab+bc)/2;\n      |          ^~~\n/tmp/tmpfc2ucim7.cpp:19:10:\
    \ note: \u2018long int abc\u2019 previously declared here\n   19 |     long abc=(ab+bc)/2;\n\
    \      |          ^~~\n/tmp/tmpfc2ucim7.cpp:24:10: error: redeclaration of \u2018\
    long int abc\u2019\n   24 |     long abc=(ab+ac)/2;\n      |          ^~~\n/tmp/tmpfc2ucim7.cpp:19:10:\
    \ note: \u2018long int abc\u2019 previously declared here\n   19 |     long abc=(ab+bc)/2;\n\
    \      |          ^~~\n/tmp/tmpfc2ucim7.cpp:25:10: error: redeclaration of \u2018\
    long int abc\u2019\n   25 |     long abc=(ab+bc)/2;\n      |          ^~~\n/tmp/tmpfc2ucim7.cpp:19:10:\
    \ note: \u2018long int abc\u2019 previously declared here\n   19 |     long abc=(ab+bc)/2;\n\
    \      |          ^~~\n/tmp/tmpfc2ucim7.cpp:26:10: error: redeclaration of \u2018\
    long int abc\u2019\n   26 |     long abc=(ab+ac)/2;\n      |          ^~~\n/tmp/tmpfc2ucim7.cpp:19:10:\
    \ note: \u2018long int abc\u2019 previously declared here\n   19 |     long abc=(ab+bc)/2;\n\
    \      |          ^~~\n/tmp/tmpfc2ucim7.cpp:27:10: error: redeclaration of \u2018\
    long int abc\u2019\n   27 |     long abc=(ab+bc)/2;\n      |          ^~~\n/tmp/tmpfc2ucim7.cpp:19:10:\
    \ note: \u2018long int abc\u2019 previously declared here\n   19 |     long abc=(ab+bc)/2;"
  stdout: ''
  timestamp: 1660077301
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    if(a==b){\n        if(a==c){\n\
    \            return true;\n        }\n    }\n    else if(a==c){\n        if(b==c){\n\
    \            return true;\n        }\n    }\n    else if(b==c){\n        if(a==b){\n\
    \            return true;\n        }\n    }\n    return false;\n}\nint main()\
    \ {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4),\
    \ (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpy1tkkg30: /tmp/tmpy1tkkg30.cpp:29: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077301
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long d = b * b - 4 * a * c;\n    if (d < 0)\n    \
    \    return false;\n    long root = (long) sqrt(d);\n    long s = (-b + root)\
    \ / (2 * a);\n    long t = (-b - root) / (2 * a);\n    return (s == 0 && t ==\
    \ 0) || (s > 0 && t > 0);\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpnf91lef2: /tmp/tmpnf91lef2.cpp:19: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077299
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a == 0 || b == 0 || c == 0)\n        return false;\n\
    \    long d = b * b - 4 * a * c;\n    if (d < 0)\n        return false;\n    long\
    \ e = std::sqrt(d);\n    long f = (b + e * 0.5) * 0.5;\n    long g = (b - e *\
    \ 0.5) * 0.5;\n    long h = (a + e * 0.5) * 0.5;\n    long i = (a + b + e * 0.5)\
    \ * 0.5;\n    long j = (a + b - e * 0.5) * 0.5;\n    long k = (a + b + e * 0.5)\
    \ * 0.5;\n    long l = (a + b - e * 0.5) * 0.5;\n    long m = (a + b + e * 0.5)\
    \ * 0.5;\n    long n = (a + b - e * 0.5) * 0.5;\n    long o = (a + b - e * 0.5)\
    \ * 0.5;\n    long p = (a + b + e * 0.5) * 0.5;\n    long q = (a + b - e * 0.5)\
    \ * 0.5;\n    long r = (a + b - e * 0.5) * 0.5;\n    long s = (a + b + e * 0.5)\
    \ * 0.5;\n    long t = (a + b - e * 0.5) * 0.5;\n    long u = (a + b - e * 0.5)\
    \ * 0.5;\n    long v = (a + b + e * 0.5) * 0.5;\n    long w = (a + b - e * 0.5)\
    \ * 0.5;\n    long x = (a + b + e * 0.5) * 0.5;\n    long y = (a + b - e * 0.5)\
    \ * 0.5;\n    long z = (a + b + e * 0.5) * 0.5;\n    long A = (a + b + e * 0.5)\
    \ * 0.5;\n    long B = (a + b - e * 0.5) * 0.5;\n    long C = (a + b + e * 0.5)\
    \ * 0.5;\n    long D = (a + b - e * 0.5) * 0.5;\n    long E = (a + b + e * 0.5)\
    \ * 0.5;\n    long F = (a + b - e * 0.5) * 0.5;\n    long G = (a + b + e * 0.5)\
    \ * 0.5;\n    long H = (a + b - e * 0.5) * 0.5;\n    long I = (a + b + e * 0.5)\
    \ * 0.5;\n    long J = (a + b - e * 0.5) * 0.5;\n    long K = (a + b + e * 0.5)\
    \ * 0.5;\n    long L = (a + b - e * 0.5) * 0.5;\n    long M = (a + b + e * 0.5)\
    \ * 0.5;\n    long N = (a + b - \n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp39kortms.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmp39kortms.cpp:50:1: error: expected\
    \ primary-expression before \u2018}\u2019 token\n   50 | }\n      | ^\n/tmp/tmp39kortms.cpp:49:22:\
    \ error: expected \u2018)\u2019 before \u2018}\u2019 token\n   49 |     long N\
    \ = (a + b -\n      |              ~       ^\n      |                      )\n\
    \   50 | }\n      | ~                     \n/tmp/tmp39kortms.cpp:50:1: warning:\
    \ control reaches end of non-void function [-Wreturn-type]\n   50 | }\n      |\
    \ ^\n"
  stdout: ''
  timestamp: 1660077301
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > b && a > c) {\n        return true;\n    }\n\
    \    if (b > c && b > a) {\n        return true;\n    }\n    if (c > a && c >\
    \ b) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n\
    \    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpdkdmmmn8: /tmp/tmpdkdmmmn8.cpp:23: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077297
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    if(a==b){\n        if(a==c){\n\
    \            return true;\n        }\n    }\n    if(a==c){\n        return false;\n\
    \    }\n    if(b==c){\n        return false;\n    }\n    long long ans=0;\n  \
    \  if(a>b){\n        ans=a;\n    }\n    else{\n        ans=b;\n    }\n    if(a>c){\n\
    \        ans=ans;\n    }\n    else{\n        ans=ans;\n    }\n    long long sum=ans*ans;\n\
    \    long long diff=ans-sum;\n    if(diff==0){\n        return true;\n    }\n\
    \    return false;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpm98g6gwe: /tmp/tmpm98g6gwe.cpp:43: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077301
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    long long int ans = (a*a\
    \ + b*b + c*c) - (a*a*a + b*b*b + c*c*c);\n    if(ans == 0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpeat911yp: /tmp/tmpeat911yp.cpp:17: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077301
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long long a1 = abs(a), b1 = abs(b), c1 = abs(c);\n\
    \    long long a2 = a1 + b1, b2 = b1 + c1, c2 = a1 + c1;\n    long long a3 = a2\
    \ + b2, b3 = b2 + c2, c3 = a2 + c2;\n    long long a4 = a3 + b3, b4 = b3 + c3,\
    \ c4 = a3 + c3;\n    long long a5 = a4 + b4, b5 = b4 + c4, c5 = a4 + c4;\n   \
    \ long long a6 = a5 + b5, b6 = b5 + c5, c6 = a5 + c5;\n    long long a7 = a6 +\
    \ b6, b7 = b6 + c6, c7 = a6 + c6;\n    long long a8 = a7 + b7, b8 = b7 + c7, c8\
    \ = a7 + c7;\n    long long a9 = a8 + b8, b9 = b8 + c8, c9 = a8 + c8;\n    long\
    \ long a10 = a9 + b9, b10 = b9 + c9, c10 = a9 + c9;\n    long long a11 = a10 +\
    \ b10, b11 = b10 + c10, c11 = a10 + c10;\n    long long a12 = a11 + b11, b12 =\
    \ b11 + c11, c12 = a11 + c11;\n    long long a13 = a12 + b12, b13 = b12 + c12,\
    \ c13 = a12 + c12;\n    long long a14 = a13 + b13, b14 = b13 + c13, c14 = a13\
    \ + c13;\n    long long a15 = a14 + b14, b15 = b14 + c14, c15 = a14 + c14;\n \
    \   long long a16 = a15 + b15, b16 = b15 + c15, c16 = a15 + c15;\n    long long\
    \ a17 = a16 + b16, b17 = b16 + c16, c17 = a16 + c16;\n    long long a18 = a17\
    \ + b17, b18 = b17 + c17, c18 = a17 + c17;\n    long long a19 = a18 + b18, b19\
    \ = b18 + c18, c19 = a18 + c18;\n    long long a20 = a19 + b19, b20 = b19 + c19,\
    \ c20 = a19 + c19;\n    long long a21 = a20 + b20, b21 = b20 + c20, c21 = a20\
    \ + c20;\n    long long a22 = a21 + b21, b22 = b21 + c21, \n}\nint main() {\n\
    \    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5))\
    \ == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_3jp5ca4.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmp_3jp5ca4.cpp:31:1: error: expected\
    \ unqualified-id before \u2018}\u2019 token\n   31 | }\n      | ^\n/tmp/tmp_3jp5ca4.cpp:31:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660077300
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    long long int sum = a+b+c;\n\
    \    long long int sum1 = sum%10;\n    long long int sum2 = sum/10;\n    long\
    \ long int sum3 = sum%10;\n    long long int sum4 = sum/10;\n    long long int\
    \ sum5 = sum%10;\n    long long int sum6 = sum/10;\n    long long int sum7 = sum%10;\n\
    \    long long int sum8 = sum/10;\n    long long int sum9 = sum%10;\n    long\
    \ long int sum10 = sum/10;\n    long long int sum11 = sum%10;\n    long long int\
    \ sum12 = sum/10;\n    long long int sum13 = sum%10;\n    long long int sum14\
    \ = sum/10;\n    long long int sum15 = sum%10;\n    long long int sum16 = sum/10;\n\
    \    long long int sum17 = sum%10;\n    long long int sum18 = sum/10;\n    long\
    \ long int sum19 = sum%10;\n    long long int sum20 = sum/10;\n    long long int\
    \ sum21 = sum%10;\n    long long int sum22 = sum/10;\n    long long int sum23\
    \ = sum%10;\n    long long int sum24 = sum/10;\n    long long int sum25 = sum%10;\n\
    \    long long int sum26 = sum/10;\n    long long int sum27 = sum%10;\n    long\
    \ long int sum28 = sum/10;\n    long long int sum29 = sum%10;\n    long long int\
    \ sum30 = sum/10;\n    long long int sum31 = sum%10;\n    long long int sum32\
    \ = sum/10;\n    long long int sum33 = sum%10;\n    long long int sum34 = sum/10;\n\
    \    long long int sum35 = sum%10;\n    long long int sum36 = sum/10;\n    long\
    \ long int sum37 = sum%10;\n    long long int sum38 = sum/10;\n    long long int\
    \ sum39 = sum%10;\n    long long int sum40 = sum/10;\n    long long int sum41\
    \ = sum%10;\n    long long int sum42 = sum/10;\n    long long int sum43 = sum%10;\n\
    \    long long int sum44 = sum/10;\n    long long int sum45 = sum%10;\n    long\
    \ long int sum46 = sum/10;\n    long \n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp0d9pa5f1.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmp0d9pa5f1.cpp:58:1: error: expected\
    \ unqualified-id before \u2018}\u2019 token\n   58 | }\n      | ^\n/tmp/tmp0d9pa5f1.cpp:58:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660077301
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long long int a1 = abs(a), b1 = abs(b), c1 = abs(c);\n\
    \    long long int a2 = a1 + b1, b2 = b1 + c1, c2 = a1 + c1;\n    long long int\
    \ a3 = a2 + b2, b3 = b2 + c2, c3 = a2 + c2;\n    long long int a4 = a3 + b3, b4\
    \ = b3 + c3, c4 = a3 + c3;\n    long long int a5 = a4 + b4, b5 = b5 + c4, c5 =\
    \ a4 + c4;\n    long long int a6 = a5 + b5, b6 = b6 + c5, c6 = a5 + c5;\n    long\
    \ long int a7 = a6 + b6, b7 = b7 + c6, c7 = a6 + c6;\n    long long int a8 = a7\
    \ + b7, b8 = b7 + c7, c8 = a7 + c7;\n    long long int a9 = a8 + b8, b9 = b9 +\
    \ c8, c9 = a8 + c8;\n    long long int a10 = a9 + b9, b10 = b10 + c9, c10 = a9\
    \ + c9;\n    long long int a11 = a10 + b10, b11 = b11 + c10, c11 = a10 + c10;\n\
    \    long long int a12 = a11 + b11, b12 = b12 + c11, c12 = a11 + c11;\n    long\
    \ long int a13 = a12 + b12, b13 = b13 + c13, c13 = a12 + c12;\n    long long int\
    \ a14 = a13 + b13, b14 = b14 + c14, c14 = a13 + c13;\n    long long int a15 =\
    \ a14 + b14, b15 = b15 + c15, c15 = a14 + c14;\n    long long int a16 = a15 +\
    \ b15, b16 = b16 + c16, c16 = a15 + c15;\n    long long int a17 = a16 + b16, b17\
    \ = b17 + c17, c17 = a16 + c16;\n    long long int a18 = a17 + b17, b18 = b18\
    \ + c18, c18 = a17 + c17;\n    long long int a19 = a18 + b18, b19 = b19 + c19,\
    \ c19 = a18 + c18;\n    long long int a20 = a19 + b19, b20 = b20 + c20, c20 =\
    \ a19 + c19;\n    long long int a21 = a20 + b20, b21 = b21 + c21, c21 = a20 +\
    \ c2\n}\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp339zpxc6.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmp339zpxc6.cpp:21:48: error: \u2018c13\u2019\
    \ was not declared in this scope; did you mean \u2018b13\u2019?\n   21 |     long\
    \ long int a13 = a12 + b12, b13 = b13 + c13, c13 = a12 + c12;\n      |       \
    \                                         ^~~\n      |                       \
    \                         b13\n/tmp/tmp339zpxc6.cpp:22:48: error: \u2018c14\u2019\
    \ was not declared in this scope; did you mean \u2018b14\u2019?\n   22 |     long\
    \ long int a14 = a13 + b13, b14 = b14 + c14, c14 = a13 + c13;\n      |       \
    \                                         ^~~\n      |                       \
    \                         b14\n/tmp/tmp339zpxc6.cpp:23:48: error: \u2018c15\u2019\
    \ was not declared in this scope; did you mean \u2018b15\u2019?\n   23 |     long\
    \ long int a15 = a14 + b14, b15 = b15 + c15, c15 = a14 + c14;\n      |       \
    \                                         ^~~\n      |                       \
    \                         b15\n/tmp/tmp339zpxc6.cpp:24:48: error: \u2018c16\u2019\
    \ was not declared in this scope; did you mean \u2018b16\u2019?\n   24 |     long\
    \ long int a16 = a15 + b15, b16 = b16 + c16, c16 = a15 + c15;\n      |       \
    \                                         ^~~\n      |                       \
    \                         b16\n/tmp/tmp339zpxc6.cpp:25:48: error: \u2018c17\u2019\
    \ was not declared in this scope; did you mean \u2018b17\u2019?\n   25 |     long\
    \ long int a17 = a16 + b16, b17 = b17 + c17, c17 = a16 + c16;\n      |       \
    \                                         ^~~\n      |                       \
    \                         b17\n/tmp/tmp339zpxc6.cpp:26:48: error: \u2018c18\u2019\
    \ was not declared in this scope; did you mean \u2018b18\u2019?\n   26 |     long\
    \ long int a18 = a17 + b17, b18 = b18 + c18, c18 = a17 + c17;\n      |       \
    \                                         ^~~\n      |                       \
    \                         b18\n/tmp/tmp339zpxc6.cpp:27:48: error: \u2018c19\u2019\
    \ was not declared in this scope; did you mean \u2018b19\u2019?\n   27 |     long\
    \ long int a19 = a18 + b18, b19 = b19 + c19, c19 = a18 + c18;\n      |       \
    \                                         ^~"
  stdout: ''
  timestamp: 1660077299
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > b && a > c) {\n        return true;\n    }\n\
    \    if (b > c && b > a) {\n        return true;\n    }\n    if (c > a && c >\
    \ b) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n\
    \    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpdkdmmmn8: /tmp/tmpdkdmmmn8.cpp:23: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077297
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    if(a==b&&b==c){\n   \
    \     return true;\n    }\n    if(a==b||a==c||b==c){\n        return false;\n\
    \    }\n    if(a>b&&a>c&&b>c){\n        return true;\n    }\n    if(a>b&&a>c&&b>c){\n\
    \        return false;\n    }\n    if(a<b&&a<c&&b<c){\n        return true;\n\
    \    }\n    if(a<b&&a<c&&b<c){\n        return false;\n    }\n}\nint main() {\n\
    \    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5))\
    \ == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp42n7xj9p: /tmp/tmp42n7xj9p.cpp:32: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077301
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    if(a>b+c){\n        return\
    \ false;\n    }\n    if(a>c+b){\n        return false;\n    }\n    if(b>c+a){\n\
    \        return false;\n    }\n    return true;\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpg7jd1t78: /tmp/tmpg7jd1t78.cpp:24: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077301
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > b && a > c) {\n        return true;\n    }\n\
    \    if (b > c && b > a) {\n        return true;\n    }\n    if (c > a && c >\
    \ b) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n\
    \    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpdkdmmmn8: /tmp/tmpdkdmmmn8.cpp:23: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077297
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    if(a>b){\n        if(a>c){\n\
    \            return true;\n        }\n    }\n    if(b>c){\n        return true;\n\
    \    }\n    return false;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpmw3n36g_: /tmp/tmpmw3n36g_.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077301
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if(a>b+c) return false;\n    if(a>c+b) return false;\n\
    \    if(b>c+a) return false;\n    return true;\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpqrg1xq74: /tmp/tmpqrg1xq74.cpp:17: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077296
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    if(a==b&&b==c){\n   \
    \     return true;\n    }\n    if(a==b||a==c||b==c){\n        return false;\n\
    \    }\n    if(a>b&&a>c&&b>c){\n        return true;\n    }\n    if(a>b||a>c||b>c){\n\
    \        return false;\n    }\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp9ru65qte: /tmp/tmp9ru65qte.cpp:25: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077301
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    if(a>b+c) return false;\n\
    \    if(a>c+b) return false;\n    if(b>c+a) return false;\n    return true;\n\
    }\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpnukq786m: /tmp/tmpnukq786m.cpp:18: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077301
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a == 0 || b == 0 || c == 0)\n        return false;\n\
    \    long long ans = a * b * c;\n    long long sum = a * a + b * b + c * c;\n\
    \    long long sq = sum * sum;\n    long long det = a * c - b * b;\n    long long\
    \ det = a * c - b * b;\n    long long det = a * c - b * b;\n    long long det\
    \ = a * c - b * b;\n    long long det = a * c - b * b;\n    long long det = a\
    \ * c - b * b;\n    long long det = a * c - b * b;\n    long long det = a * c\
    \ - b * b;\n    long long det = a * c - b * b;\n    long long det = a * c - b\
    \ * b;\n    long long det = a * c - b * b;\n    long long det = a * c - b * b;\n\
    \    long long det = a * c - b * b;\n    long long det = a * c - b * b;\n    long\
    \ long det = a * c - b * b;\n    long long det = a * c - b * b;\n    long long\
    \ det = a * c - b * b;\n    long long det = a * c - b * b;\n    long long det\
    \ = a * c - b * b;\n    long long det = a * c - b * b;\n    long long det = a\
    \ * c - b * b;\n    long long det = a * c - b * b;\n    long long det = a * c\
    \ - b * b;\n    long long det = a * c - b * b;\n    long long det = a * c - b\
    \ * b;\n    long long det = a * c - b * b;\n    long long det = a * c - b * b;\n\
    \    long long det = a * c - b * b;\n    long long det = a * c - b * b;\n    long\
    \ long det = a * c - b * b;\n    long long det = a * c - b * b;\n    long long\
    \ det = a * c - b * b;\n    long long det = a * c - b * b;\n    long long det\
    \ = a * c - b * b;\n    long long det = a * c - b * b;\n    long long det = a\
    \ * c - b * b;\n    long long det = a * c - b * b;\n    long long det = a * c\
    \ - b * b;\n    long long det = a * c - b * b;\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwu4q9kaa.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmpwu4q9kaa.cpp:15:15: error: redeclaration\
    \ of \u2018long long int det\u2019\n   15 |     long long det = a * c - b * b;\n\
    \      |               ^~~\n/tmp/tmpwu4q9kaa.cpp:14:15: note: \u2018long long\
    \ int det\u2019 previously declared here\n   14 |     long long det = a * c -\
    \ b * b;\n      |               ^~~\n/tmp/tmpwu4q9kaa.cpp:16:15: error: redeclaration\
    \ of \u2018long long int det\u2019\n   16 |     long long det = a * c - b * b;\n\
    \      |               ^~~\n/tmp/tmpwu4q9kaa.cpp:14:15: note: \u2018long long\
    \ int det\u2019 previously declared here\n   14 |     long long det = a * c -\
    \ b * b;\n      |               ^~~\n/tmp/tmpwu4q9kaa.cpp:17:15: error: redeclaration\
    \ of \u2018long long int det\u2019\n   17 |     long long det = a * c - b * b;\n\
    \      |               ^~~\n/tmp/tmpwu4q9kaa.cpp:14:15: note: \u2018long long\
    \ int det\u2019 previously declared here\n   14 |     long long det = a * c -\
    \ b * b;\n      |               ^~~\n/tmp/tmpwu4q9kaa.cpp:18:15: error: redeclaration\
    \ of \u2018long long int det\u2019\n   18 |     long long det = a * c - b * b;\n\
    \      |               ^~~\n/tmp/tmpwu4q9kaa.cpp:14:15: note: \u2018long long\
    \ int det\u2019 previously declared here\n   14 |     long long det = a * c -\
    \ b * b;\n      |               ^~~\n/tmp/tmpwu4q9kaa.cpp:19:15: error: redeclaration\
    \ of \u2018long long int det\u2019\n   19 |     long long det = a * c - b * b;\n\
    \      |               ^~~\n/tmp/tmpwu4q9kaa.cpp:14:15: note: \u2018long long\
    \ int det\u2019 previously declared here\n   14 |     long long det = a * c -\
    \ b * b;\n      |               ^~~\n/tmp/tmpwu4q9kaa.cpp:20:15: error: redeclaration\
    \ of \u2018long long int det\u2019\n   20 |     long long det = a * c - b * b;\n\
    \      |               ^~~\n/tmp/tmpwu4q9kaa.cpp:14:15: note: \u2018long long\
    \ int det\u2019 previously declared here\n   14 |     long long det = a * c -\
    \ b * b;\n      |               ^~~\n/tmp/tmpwu4q9kaa.cpp:21:15: error: redeclaration\
    \ of \u2018long long int det\u2019\n   21 |     long long det = a * c - b * b;\n\
    \      |               ^~~\n/tmp/tmpwu4q9kaa.cpp:14:15: note: \u2018long long\
    \ int det\u2019 previously declared here\n "
  stdout: ''
  timestamp: 1660077301
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if(a>b+c) return false;\n    if(a>c+b) return false;\n\
    \    if(b>c+a) return false;\n    return true;\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpqrg1xq74: /tmp/tmpqrg1xq74.cpp:17: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077296
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here.\n    long long int sum =\
    \ a+b+c;\n    long long int sq = sum*sum;\n    long long int sq1 = sq*sq;\n  \
    \  long long int sq2 = sq1*sq;\n    long long int sq3 = sq2*sq;\n    long long\
    \ int sq4 = sq3*sq;\n    long long int sq5 = sq4*sq;\n    long long int sq6 =\
    \ sq5*sq;\n    long long int sq7 = sq6*sq;\n    long long int sq8 = sq7*sq;\n\
    \    long long int sq9 = sq8*sq;\n    long long int sq10 = sq9*sq;\n    long long\
    \ int sq11 = sq10*sq;\n    long long int sq12 = sq11*sq;\n    long long int sq13\
    \ = sq12*sq;\n    long long int sq14 = sq13*sq;\n    long long int sq15 = sq14*sq;\n\
    \    long long int sq16 = sq15*sq;\n    long long int sq17 = sq16*sq;\n    long\
    \ long int sq18 = sq17*sq;\n    long long int sq19 = sq18*sq;\n    long long int\
    \ sq20 = sq19*sq;\n    long long int sq21 = sq20*sq;\n    long long int sq22 =\
    \ sq21*sq;\n    long long int sq23 = sq22*sq;\n    long long int sq24 = sq23*sq;\n\
    \    long long int sq25 = sq24*sq;\n    long long int sq26 = sq25*sq;\n    long\
    \ long int sq27 = sq26*sq;\n    long long int sq28 = sq27*sq;\n    long long int\
    \ sq29 = sq28*sq;\n    long long int sq30 = sq29*sq;\n    long long int sq31 =\
    \ sq30*sq;\n    long long int sq32 = sq31*sq;\n    long long int sq33 = sq32*sq;\n\
    \    long long int sq34 = sq33*sq;\n    long long int sq35 = sq34*sq;\n    long\
    \ long int sq36 = sq35*sq;\n    long long int sq37 = sq36*sq;\n    long long int\
    \ sq38 = sq37*sq;\n    long long int sq39 = sq38*\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4lihbpbw.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmp4lihbpbw.cpp:51:1: error: expected\
    \ primary-expression before \u2018}\u2019 token\n   51 | }\n      | ^\n/tmp/tmp4lihbpbw.cpp:51:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660077301
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > b && a > c) return true;\n    if (b > c &&\
    \ b > a) return true;\n    if (c > a && c > b) return true;\n    return false;\n\
    }\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpjfcbb7a7: /tmp/tmpjfcbb7a7.cpp:17: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077300
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > b && a > c) {\n        return false;\n   \
    \ }\n    if (b > c && b > a) {\n        return false;\n    }\n    if (c > a &&\
    \ c > b) {\n        return false;\n    }\n    return true;\n}\nint main() {\n\
    \    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5))\
    \ == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp0068dtad: /tmp/tmp0068dtad.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077296
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here.\n    long long ans = (a+b+c)/2;\n\
    \    if (ans == (a+b+c)/2) {\n        return true;\n    }\n    if (ans == (a-b+c)/2)\
    \ {\n        return true;\n    }\n    if (ans == (a-b-c)/2) {\n        return\
    \ true;\n    }\n    if (ans == (a+b-c)/2) {\n        return true;\n    }\n   \
    \ if (ans == (a+b+c)/2) {\n        return true;\n    }\n    if (ans == (a-b+c)/2)\
    \ {\n        return true;\n    }\n    if (ans == (a-b-c)/2) {\n        return\
    \ true;\n    }\n    if (ans == (a+b-c)/2) {\n        return true;\n    }\n   \
    \ if (ans == (a+b+c)/2) {\n        return true;\n    }\n    if (ans == (a-b+c)/2)\
    \ {\n        return true;\n    }\n    if (ans == (a-b-c)/2) {\n        return\
    \ true;\n    }\n    if (ans == (a+b-c)/2) {\n        return true;\n    }\n   \
    \ if (ans == (a+b+c)/2) {\n        return true;\n    }\n    if (ans == (a-b+c)/2)\
    \ {\n        return true;\n    }\n    if (ans == (a-b-c)/2) {\n        return\
    \ true;\n    }\n    if (ans == (a+b-c)/2) {\n        return true;\n    }\n   \
    \ if (ans == (a+b+c)/2) {\n        return true;\n    }\n    if (ans == (a-b+c)/2)\
    \ {\n        return true;\n    }\n    if (ans == (a-b-c)/2) {\n        return\
    \ true;\n    }\n    if (ans == (a+b-c)/2) {\n        return true;\n    }\n   \
    \ if (ans == (a+b+c)/2) {\n        return true;\n    }\n    if (ans == (a-b+c)/2)\
    \ {\n        return true;\n    }\n    if (ans == (a-b-c)/2) {\n        return\
    \ true;\n    }\n    if (ans == (a+b-c)/2) {\n        return true;\n    }\n   \
    \ if (ans == (a+b+c)/2) {\n        return true;\n    }\n    if (ans == (a-b+c)/2)\
    \ {\n        return true;\n    }\n    if (ans == (a-b-c)/2) {\n        return\
    \ true;\n    }\n    if (ans == (a+b-c)/2) {\n        return true;\n    }\n   \
    \ if (ans == (a+b+c)/2) {\n        return true;\n    }\n    if (ans == (a-b+c)/2)\
    \ {\n        return true;\n    }\n    if (ans == (a-b-c)/2) {\n        return\
    \ true;\n    }\n    if (ans == (a+b-c)/2) {\n        return true;\n    }\n   \
    \ if (ans == (a+b+c)/2) {\n        return true;\n    }\n    if (ans == (a-b+c)/2)\
    \ {\n        return true;\n    }\n    if (ans == (a-b-c)/2) {\n        return\
    \ true;\n    }\n    if (ans == (a\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp7g_g_spo.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmp7g_g_spo.cpp:116:18: error: expected\
    \ \u2018)\u2019 before \u2018}\u2019 token\n  116 |     if (ans == (a\n      |\
    \                ~ ^\n      |                  )\n  117 | }\n      | ~       \
    \          \n/tmp/tmp7g_g_spo.cpp:116:18: error: expected \u2018)\u2019 before\
    \ \u2018}\u2019 token\n  116 |     if (ans == (a\n      |        ~         ^\n\
    \      |                  )\n  117 | }\n      | ~                 \n/tmp/tmp7g_g_spo.cpp:117:1:\
    \ error: expected primary-expression before \u2018}\u2019 token\n  117 | }\n \
    \     | ^\n/tmp/tmp7g_g_spo.cpp:117:1: warning: control reaches end of non-void\
    \ function [-Wreturn-type]\n  117 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660077301
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long long int sum = a+b+c;\n    long long int diff\
    \ = a-b+b-c;\n    long long int product = a*b*c;\n    long long int divisor =\
    \ 2*a*b*c;\n    long long int result = sum*sum - diff*diff;\n    long long int\
    \ temp;\n    temp = sum*sum - diff*diff;\n    long long int temp2 = temp*temp;\n\
    \    long long int temp3 = temp2*temp;\n    long long int temp4 = temp3*temp;\n\
    \    long long int temp5 = temp4*temp;\n    long long int temp6 = temp5*temp;\n\
    \    long long int temp7 = temp6*temp;\n    long long int temp8 = temp7*temp;\n\
    \    long long int temp9 = temp8*temp;\n    long long int temp10 = temp9*temp;\n\
    \    long long int temp11 = temp10*temp;\n    long long int temp12 = temp11*temp;\n\
    \    long long int temp13 = temp12*temp;\n    long long int temp14 = temp13*temp;\n\
    \    long long int temp15 = temp14*temp;\n    long long int temp16 = temp15*temp;\n\
    \    long long int temp17 = temp16*temp;\n    long long int temp18 = temp17*temp;\n\
    \    long long int temp19 = temp18*temp;\n    long long int temp20 = temp19*temp;\n\
    \    long long int temp21 = temp20*temp;\n    long long int temp22 = temp21*temp;\n\
    \    long long int temp23 = temp22*temp;\n    long long int temp24 = temp23*temp;\n\
    \    long long int temp25 = temp24*temp;\n    long long int temp26 = temp25*temp;\n\
    \    long long int temp27 = temp26*temp;\n    long long int temp28 = temp27*temp;\n\
    \    long long int temp29 = temp28*temp;\n    long long int temp30 = temp29*temp;\n\
    \    long long int temp31 = temp30*temp;\n    long long int temp32 = temp31*temp;\n\
    \    long long int temp33 = temp32*temp;\n    long long int temp34 = temp33*temp;\n\
    \    long long int temp35 = temp34*temp;\n    long long int temp36 = temp35*temp;\n\
    }\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpv99nnyv2: /tmp/tmpv99nnyv2.cpp:54: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077301
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a < 0 || b < 0 || c < 0)\n        return false;\n\
    \    long ab = abs(b - a);\n    long ac = abs(c - a);\n    long bc = abs(b - c);\n\
    \    long abc = abs(ab + ac);\n    return abc > bc;\n}\nint main() {\n    auto\
    \ candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n\
    \    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpmxtucc5n: /tmp/tmpmxtucc5n.cpp:20: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077301
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long long int a1 = abs(a), b1 = abs(b), c1 = abs(c);\n\
    \    long long int a2 = a1 + b1, c2 = a1 + c1, b2 = b1 + c1;\n    long long int\
    \ a3 = a2 + b2, c3 = a2 + c2, b3 = b2 + c2;\n    long long int a4 = a3 + b3, c4\
    \ = a3 + c3, b4 = b3 + c3;\n    long long int a5 = a4 + b4, c5 = a4 + c4, b5 =\
    \ b4 + c4;\n    long long int a6 = a5 + b5, c6 = a5 + c5, b6 = b6 + c5;\n    long\
    \ long int a7 = a6 + b6, c7 = a6 + c6, b7 = b7 + c6;\n    long long int a8 = a7\
    \ + b7, c8 = a7 + c7, b8 = b7 + c7;\n    long long int a9 = a8 + b8, c9 = a8 +\
    \ c8, b9 = b8 + c8;\n    long long int a10 = a9 + b9, c10 = a9 + c9, b10 = b9\
    \ + c9;\n    long long int a11 = a10 + b10, c11 = a10 + c10, b11 = b10 + c10;\n\
    \    long long int a12 = a11 + b11, c12 = a11 + c11, b12 = b11 + c11;\n    long\
    \ long int a13 = a12 + b12, c13 = a12 + c12, b13 = b12 + c12;\n    long long int\
    \ a14 = a13 + b13, c14 = a13 + c13, b14 = b13 + c13;\n    long long int a15 =\
    \ a14 + b14, c15 = a14 + c14, b15 = b14 + c14;\n    long long int a16 = a15 +\
    \ b15, c16 = a15 + c15, b16 = b15 + c15;\n    long long int a17 = a16 + b16, c17\
    \ = a16 + c16, b17 = b16 + c16;\n    long long int a18 = a17 + b17, c18 = a17\
    \ + c17, b18 = b17 + c17;\n    long long int a19 = a18 + b18, c19 = a18 + c18,\
    \ b19 = b18 + c18;\n    long long int a20 = a19 + b19, c20 = a19 + c19, b20 =\
    \ b19 + c19;\n    long long int a21 = a20 + b20, c21 = a20 + c21, b21 = b20 +\
    \ \n}\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_t871r1d.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmp_t871r1d.cpp:30:1: error: expected\
    \ primary-expression before \u2018}\u2019 token\n   30 | }\n      | ^\n/tmp/tmp_t871r1d.cpp:30:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660077301
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > b && a > c) {\n        return true;\n    }\n\
    \    if (b > c && b > a) {\n        return true;\n    }\n    if (c > a && c >\
    \ b) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n\
    \    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpdkdmmmn8: /tmp/tmpdkdmmmn8.cpp:23: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077297
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long long int a1 = abs(a), b1 = abs(b), c1 = abs(c);\n\
    \    long long int a2 = a1 + b1, b2 = b1 + c1, c2 = a1 + c1;\n    long long int\
    \ a3 = a2 + b2, b3 = b2 + c2, c3 = a2 + c2;\n    long long int a4 = a3 + b3, b4\
    \ = b3 + c3, c4 = a3 + c3;\n    long long int a5 = a4 + b4, b5 = b4 + c4, c5 =\
    \ a4 + c4;\n    long long int a6 = a5 + b5, b6 = b6 + c5, c6 = a5 + c5;\n    long\
    \ long int a7 = a6 + b6, b7 = b7 + c6, c7 = a6 + c6;\n    long long int a8 = a7\
    \ + b7, b8 = b7 + c7, c8 = a7 + c7;\n    long long int a9 = a8 + b8, b9 = b9 +\
    \ c8, c9 = a8 + c8;\n    long long int a10 = a9 + b9, b10 = b9 + c9, c10 = a9\
    \ + c9;\n    long long int a11 = a10 + b10, b11 = b10 + c10, c11 = a10 + c10;\n\
    \    long long int a12 = a11 + b11, b12 = b11 + c11, c12 = a11 + c11;\n    long\
    \ long int a13 = a12 + b12, b13 = b12 + c12, c13 = a12 + c12;\n    long long int\
    \ a14 = a13 + b13, b14 = b13 + c13, c14 = a13 + c13;\n    long long int a15 =\
    \ a14 + b14, b15 = b14 + c14, c15 = a14 + c14;\n    long long int a16 = a15 +\
    \ b15, b16 = b15 + c15, c16 = a15 + c15;\n    long long int a17 = a16 + b16, b17\
    \ = b16 + c16, c17 = a16 + c16;\n    long long int a18 = a17 + b17, b18 = b17\
    \ + c17, c18 = a17 + c17;\n    long long int a19 = a18 + b18, b19 = b18 + c18,\
    \ c19 = a18 + c18;\n    long long int a20 = a19 + b19, b20 = b19 + c19, c20 =\
    \ a19 + c19;\n    long long int a21 = a20 + b20, b21 = b20 + c20, c21 = a20 +\
    \ \n}\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzls_e8p5.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmpzls_e8p5.cpp:30:1: error: expected\
    \ primary-expression before \u2018}\u2019 token\n   30 | }\n      | ^\n/tmp/tmpzls_e8p5.cpp:30:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660077301
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if(a>b+c) return false;\n    if(a>c+b) return false;\n\
    \    if(b>c+a) return false;\n    return true;\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpqrg1xq74: /tmp/tmpqrg1xq74.cpp:17: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077296
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    long d = b - a;\n   \
    \ long e = c - a;\n    long f = d - e;\n    long g = e - b;\n    long h = f +\
    \ g;\n    long i = g + f;\n    long j = h + i;\n    long k = j + h;\n    long\
    \ l = k + j;\n    long m = l + k;\n    long n = m + l;\n    long o = n + m;\n\
    \    long p = o + n;\n    long q = p + o;\n    long r = q + p;\n    long s = r\
    \ + q;\n    long t = s + r;\n    long u = t + s;\n    long v = u + t;\n    long\
    \ w = v + u;\n    long x = w + v;\n    long y = x + w;\n    long z = y + x;\n\
    \    long a = z - y;\n    long b = x - z;\n    long c = y - x;\n    long d = b\
    \ - c;\n    long e = c - b;\n    long f = d - e;\n    long g = e - d;\n    long\
    \ h = f + g;\n    long i = g + f;\n    long j = h + i;\n    long k = j + h;\n\
    \    long l = k + j;\n    long m = l + k;\n    long n = m + l;\n    long o = n\
    \ + m;\n    long p = o + n;\n    long q = p + o;\n    long r = q + p;\n    long\
    \ s = r + q;\n    long t = s + r;\n    long u = t + s;\n    long v = u + t;\n\
    \    long w = v + u;\n    long x = w + v;\n    long y = x + w;\n    long z = y\
    \ + x;\n    long a = z - y;\n    long b = x - z;\n    long c = y - x;\n    long\
    \ d = b - c;\n    long e = c - b;\n    long f = d - e;\n    long g = e - d;\n\
    \    long h = f + g;\n    long i = g + f;\n    long j = h + i;\n    long k = j\
    \ + h;\n    long l = k + j;\n    long m = l + k;\n    long n = m + l;\n    long\
    \ o = n + m;\n    long p = o + n;\n    long q = p + o;\n    long r = q + p;\n\
    \    long s = r + q;\n    long t = s + r;\n    long u = t + s;\n    long v = u\
    \ + t;\n    long w = v + u;\n    long x = w + v;\n    long y = x + w;\n    long\
    \ z = y + \n}\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpz5baspq_.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmpz5baspq_.cpp:33:10: error: declaration\
    \ of \u2018long int a\u2019 shadows a parameter\n   33 |     long a = z - y;\n\
    \      |          ^\n/tmp/tmpz5baspq_.cpp:34:10: error: declaration of \u2018\
    long int b\u2019 shadows a parameter\n   34 |     long b = x - z;\n      |   \
    \       ^\n/tmp/tmpz5baspq_.cpp:35:10: error: declaration of \u2018long int c\u2019\
    \ shadows a parameter\n   35 |     long c = y - x;\n      |          ^\n/tmp/tmpz5baspq_.cpp:36:10:\
    \ error: redeclaration of \u2018long int d\u2019\n   36 |     long d = b - c;\n\
    \      |          ^\n/tmp/tmpz5baspq_.cpp:10:10: note: \u2018long int d\u2019\
    \ previously declared here\n   10 |     long d = b - a;\n      |          ^\n\
    /tmp/tmpz5baspq_.cpp:37:10: error: redeclaration of \u2018long int e\u2019\n \
    \  37 |     long e = c - b;\n      |          ^\n/tmp/tmpz5baspq_.cpp:11:10: note:\
    \ \u2018long int e\u2019 previously declared here\n   11 |     long e = c - a;\n\
    \      |          ^\n/tmp/tmpz5baspq_.cpp:38:10: error: redeclaration of \u2018\
    long int f\u2019\n   38 |     long f = d - e;\n      |          ^\n/tmp/tmpz5baspq_.cpp:12:10:\
    \ note: \u2018long int f\u2019 previously declared here\n   12 |     long f =\
    \ d - e;\n      |          ^\n/tmp/tmpz5baspq_.cpp:39:10: error: redeclaration\
    \ of \u2018long int g\u2019\n   39 |     long g = e - d;\n      |          ^\n\
    /tmp/tmpz5baspq_.cpp:13:10: note: \u2018long int g\u2019 previously declared here\n\
    \   13 |     long g = e - b;\n      |          ^\n/tmp/tmpz5baspq_.cpp:40:10:\
    \ error: redeclaration of \u2018long int h\u2019\n   40 |     long h = f + g;\n\
    \      |          ^\n/tmp/tmpz5baspq_.cpp:14:10: note: \u2018long int h\u2019\
    \ previously declared here\n   14 |     long h = f + g;\n      |          ^\n\
    /tmp/tmpz5baspq_.cpp:41:10: error: redeclaration of \u2018long int i\u2019\n \
    \  41 |     long i = g + f;\n      |          ^\n/tmp/tmpz5baspq_.cpp:15:10: note:\
    \ \u2018long int i\u2019 previously declared here\n   15 |     long i = g + f;\n\
    \      |          ^\n/tmp/tmpz5baspq_.cpp:42:10: error: redeclaration of \u2018\
    long int j\u2019\n   42 |     long j = h + i;\n      |          ^\n/tmp/tmpz5baspq_.cpp:16:10:\
    \ note: \u2018long int j\u2019 previously declared "
  stdout: ''
  timestamp: 1660077301
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a == 0 || b == 0 || c == 0)\n        return false;\n\
    \    long d = b * b - 4 * a * c;\n    if (d < 0)\n        return false;\n    long\
    \ root = (long) sqrt(d);\n    long s = (-b + root) / (2 * a);\n    long t = (-b\
    \ - root) / (2 * a);\n    return (s == 0 && t == 0);\n}\nint main() {\n    auto\
    \ candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n\
    \    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpkxp08txy: /tmp/tmpkxp08txy.cpp:21: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077301
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > b && a > c) return true;\n    if (b > c &&\
    \ b > a) return true;\n    if (c > a && c > b) return true;\n    return false;\n\
    }\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpjfcbb7a7: /tmp/tmpjfcbb7a7.cpp:17: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077300
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > b && a > c) {\n        return true;\n    }\n\
    \    if (b > c && b > a) {\n        return true;\n    }\n    if (c > a && c >\
    \ b) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n\
    \    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpdkdmmmn8: /tmp/tmpdkdmmmn8.cpp:23: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077297
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    if(a==b||a==c||b==c){\n\
    \        return true;\n    }\n    if(a==b||b==c||a==c){\n        return true;\n\
    \    }\n    if(a==b||a==c||b==c){\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpcy9heda1: /tmp/tmpcy9heda1.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077302
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long ab = abs(b - a);\n    long ac = abs(c - a);\n\
    \    long bc = abs(b - c);\n    long acb = abs(ac - bc);\n    if (ab > acb &&\
    \ ab > bc) {\n        return true;\n    }\n    return false;\n}\nint main() {\n\
    \    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5))\
    \ == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpafcv6h48: /tmp/tmpafcv6h48.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077302
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    if(a>b && b>c && c>a){\n\
    \        return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp2o9hdica: /tmp/tmp2o9hdica.cpp:17: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077302
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a < 0 || b < 0 || c < 0) {\n        return false;\n\
    \    }\n    if (a + b > c) {\n        return false;\n    }\n    if (a + c > b)\
    \ {\n        return false;\n    }\n    if (b + c > a) {\n        return false;\n\
    \    }\n    return true;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp14c499_y: /tmp/tmp14c499_y.cpp:25: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077297
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a < 0 || b < 0 || c < 0) {\n        return false;\n\
    \    }\n    if (a + b > c || a + c > b || b + c > a) {\n        return false;\n\
    \    }\n    return true;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp0ydjrn__: /tmp/tmp0ydjrn__.cpp:19: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077296
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > b && a > c) {\n        return true;\n    }\
    \ else if (b > c && b > a) {\n        return true;\n    } else if (c > a && c\
    \ > b) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\
    int main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpbkfffmow: /tmp/tmpbkfffmow.cpp:22: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077302
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long long ans = (a * b * c) - ((a * b) * (c - b));\n\
    \    if (ans < 0)\n        return false;\n    return true;\n}\nint main() {\n\
    \    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5))\
    \ == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpkpk73xi_: /tmp/tmpkpk73xi_.cpp:17: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077302
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    long long ans = (a+b+c)/2;\n\
    \    long long sum = 0;\n    long long sum1 = 0;\n    long long sum2 = 0;\n  \
    \  long long sum3 = 0;\n    long long sum4 = 0;\n    long long sum5 = 0;\n   \
    \ long long sum6 = 0;\n    long long sum7 = 0;\n    long long sum8 = 0;\n    long\
    \ long sum9 = 0;\n    long long sum10 = 0;\n    long long sum11 = 0;\n    long\
    \ long sum12 = 0;\n    long long sum13 = 0;\n    long long sum14 = 0;\n    long\
    \ long sum15 = 0;\n    long long sum16 = 0;\n    long long sum17 = 0;\n    long\
    \ long sum18 = 0;\n    long long sum19 = 0;\n    long long sum20 = 0;\n    long\
    \ long sum21 = 0;\n    long long sum22 = 0;\n    long long sum23 = 0;\n    long\
    \ long sum24 = 0;\n    long long sum25 = 0;\n    long long sum26 = 0;\n    long\
    \ long sum27 = 0;\n    long long sum28 = 0;\n    long long sum29 = 0;\n    long\
    \ long sum30 = 0;\n    long long sum31 = 0;\n    long long sum32 = 0;\n    long\
    \ long sum33 = 0;\n    long long sum34 = 0;\n    long long sum35 = 0;\n    long\
    \ long sum36 = 0;\n    long long sum37 = 0;\n    long long sum38 = 0;\n    long\
    \ long sum39 = 0;\n    long long sum40 = 0;\n    long long sum41 = 0;\n    long\
    \ long sum42 = 0;\n    long long sum43 = 0;\n    long long sum44 = 0;\n    long\
    \ long sum45 = 0;\n    long long sum46 = 0;\n    long long sum47 = 0;\n    long\
    \ long sum48 = 0;\n    long long sum49 = 0;\n    long long sum50 = 0;\n    long\
    \ long sum51 = 0;\n    long long sum52 = 0;\n    long long sum53 = 0;\n    long\
    \ long sum54 = 0;\n    long long sum55 = 0;\n    long long sum56 = 0;\n    long\
    \ long sum57 = 0;\n    long long sum58 = 0;\n    long long sum59 = 0;\n    long\
    \ long sum60 = 0;\n    long long sum61 = 0;\n    long long sum62 = 0;\n    long\
    \ long sum63 = 0;\n    long long sum64 = 0;\n    long long sum65 = 0;\n    long\
    \ long sum66 = 0;\n    long long sum67 = 0;\n    long long sum68 = 0;\n    long\
    \ long sum69 = 0;\n    long long sum70 = 0;\n    long long \n}\nint main() {\n\
    \    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5))\
    \ == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl1zdztho.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmpl1zdztho.cpp:83:1: error: expected\
    \ unqualified-id before \u2018}\u2019 token\n   83 | }\n      | ^\n/tmp/tmpl1zdztho.cpp:83:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660077302
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > b && a > c) return true;\n    if (b > c &&\
    \ b > a) return true;\n    if (c > a && c > b) return true;\n    return false;\n\
    }\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpjfcbb7a7: /tmp/tmpjfcbb7a7.cpp:17: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077300
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > b && a > c) {\n        return true;\n    }\
    \ else if (b > c && b > a) {\n        return true;\n    } else if (c > a && c\
    \ > b) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\
    int main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpbkfffmow: /tmp/tmpbkfffmow.cpp:22: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077302
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > b + c || b > a + c || c > a + b) {\n     \
    \   return false;\n    }\n    return true;\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpgp183e49: /tmp/tmpgp183e49.cpp:17: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077296
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > b && a > c) {\n        return true;\n    }\
    \ else if (b > c && b > a) {\n        return true;\n    } else if (c > a && c\
    \ > b) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\
    int main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpbkfffmow: /tmp/tmpbkfffmow.cpp:22: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077302
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    if(a==b||a==c||b==c)\n\
    \        return true;\n    if(a>b&&a>c)\n        return false;\n    if(b>c&&b>a)\n\
    \        return false;\n    if(a>b&&b>c)\n        return false;\n    if(a>c&&a>b)\n\
    \        return false;\n    if(b>c&&b>a)\n        return false;\n    if(a>b&&a>c)\n\
    \        return false;\n    if(b>c&&b>a)\n        return false;\n    if(a>b&&b>c)\n\
    \        return false;\n    if(b>c&&b>a)\n        return false;\n    if(a>b&&a>c)\n\
    \        return false;\n    if(b>c&&b>a)\n        return false;\n    if(a>b&&b>c)\n\
    \        return false;\n    if(b>c&&b>a)\n        return false;\n    if(a>b&&a>c)\n\
    \        return false;\n    if(b>c&&b>a)\n        return false;\n    if(a>b&&b>c)\n\
    \        return false;\n    if(b>c&&b>a)\n        return false;\n    if(a>b&&a>c)\n\
    \        return false;\n    if(b>c&&b>a)\n        return false;\n    if(a>b&&b>c)\n\
    \        return false;\n    if(b>c&&b>a)\n        return false;\n    if(a>b&&a>c)\n\
    \        return false;\n    if(b>c&&b>a)\n        return false;\n    if(a>b&&b>c)\n\
    \        return false;\n    if(b>c&&b>a)\n        return false;\n    if(a>b&&a>c)\n\
    \        return false;\n    if(b>c&&b>a)\n        return false;\n    if(a>b&&b>c)\n\
    \        return false;\n    if(b>c&&b>a)\n        return false;\n    if(a>b&&a>c)\n\
    \        return false;\n    if(b>c&&b>a)\n        return false;\n    if(a>b&&b>c)\n\
    \        return false;\n    if(b>c&&b>a)\n        return false;\n    if(a>b&&a>c)\n\
    \        return false;\n    if(b>c&&b>a)\n        return false;\n    if(a>b&&b>c)\n\
    \        return false;\n    if(b>c&&b>a)\n        return false;\n    if(a>b&&a>c)\n\
    \        return false;\n    if(b>c&&b>a)\n        return false;\n    if(a>b&&b>c)\n\
    \        return false;\n    if(b>c&&b>a)\n        return false;\n    if(a>b&&a>c)\n\
    \        return false;\n    if(b>c&&b>a)\n        return false;\n    if(a>b&&b>c)\n\
    \        return false;\n    if(b>c&&b>a)\n        return false;\n    if(a>b&&a>c)\n\
    \        return false;\n    if(b>c&&b>a)\n        return false;\n    if(a>b&&b>c)\n\
    \        return false;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp7lk90lpf: /tmp/tmp7lk90lpf.cpp:111: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077302
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a == 0 || b == 0 || c == 0)\n        return false;\n\
    \    long d = b * b - 4 * a * c;\n    if (d < 0)\n        return false;\n    long\
    \ sq = sqrt(d);\n    long t1 = (-b + sq) / (2 * a);\n    long t2 = (-b - sq) /\
    \ (2 * a);\n    if (t1 >= 0 && t1 <= 1)\n        return true;\n    if (t2 >= 0\
    \ && t2 <= 1)\n        return true;\n    return false;\n}\nint main() {\n    auto\
    \ candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n\
    \    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp9wgcbv22: /tmp/tmp9wgcbv22.cpp:25: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077302
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long long ans = (a * b * c) / 2;\n    long long sum\
    \ = (a + b + c) / 2;\n    long long sq1 = (a + b) * (a + b + c) / 4;\n    long\
    \ long sq2 = (a + b + c) * (a + b + c) / 4;\n    long long sq3 = (a + b + c) *\
    \ (a + b) * (a + b + c) / 8;\n    long long sq4 = (a + b + c) * (a + b + c) *\
    \ (a + b) * (a + b + c) / 16;\n    long long sq5 = (a + b + c) * (a + b + c) *\
    \ (a + b) * (a + b) * (a + b + c) * (a + b + c) / 32;\n    long long sq6 = (a\
    \ + b + c) * (a + b + c) * (a + b) * (a + b) * (a + b) * (a + b + c) * (a + b\
    \ + c) * (a + b + c) * (a + b + c) / 64;\n    long long sq7 = (a + b + c) * (a\
    \ + b + c) * (a + b) * (a + b) * (a + b) * (a + b + c) * (a + b + c) * (a + b\
    \ + c) * (a + b + c) * (a + b + c) * (a + b + c) * (a + b + c) * (a + b + c) *\
    \ (a + b + c) * (a + b + c) * (a + b + c) * (a + b + c) * (a + b + c) * (a + b\
    \ + c) * (a + b + c) * (a + b + c) * (a + b + c) * (a + b + c) * (a + b + c) *\
    \ (a + b + c) * (a + b + c) * (a + b + c) * (a + b + c) * (a + b + c) * (a + b\
    \ + c) * (a + b + c) * (a + b + c) * (a + b + c) * (a + b + c) * (a + b + c) *\
    \ (a + b + c) * (a + b + c) * (a + b + c) * (a + b + c) * (a + b + c) * (a + b\
    \ + c) * (a + b + c) * (a + b + c) * (a + b + c) * (a + b + c) * (a + b + c) *\
    \ (a + b + c) * (a + b + c) * (a + b + c) * (a + b + c) * (a + b + c) * (a + b\
    \ + c) * (a + b + c) * (a + b + c) * (a + b + c) * (a + b + c) * (a + b + c) *\
    \ (a + b + c) * (a + b + c) * (a + b + c) * (a + b + c) * (a + b + c) * (a + b\
    \ + c) * (a + b + c) * (a + b + c) * (a + \n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgn2lzwfz.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmpgn2lzwfz.cpp:18:1: error: expected\
    \ primary-expression before \u2018}\u2019 token\n   18 | }\n      | ^\n/tmp/tmpgn2lzwfz.cpp:17:923:\
    \ error: expected \u2018)\u2019 before \u2018}\u2019 token\n   17 |     long long\
    \ sq7 = (a + b + c) * (a + b + c) * (a + b) * (a + b) * (a + b) * (a + b + c)\
    \ * (a + b + c) * (a + b + c) * (a + b + c) * (a + b + c) * (a + b + c) * (a +\
    \ b + c) * (a + b + c) * (a + b + c) * (a + b + c) * (a + b + c) * (a + b + c)\
    \ * (a + b + c) * (a + b + c) * (a + b + c) * (a + b + c) * (a + b + c) * (a +\
    \ b + c) * (a + b + c) * (a + b + c) * (a + b + c) * (a + b + c) * (a + b + c)\
    \ * (a + b + c) * (a + b + c) * (a + b + c) * (a + b + c) * (a + b + c) * (a +\
    \ b + c) * (a + b + c) * (a + b + c) * (a + b + c) * (a + b + c) * (a + b + c)\
    \ * (a + b + c) * (a + b + c) * (a + b + c) * (a + b + c) * (a + b + c) * (a +\
    \ b + c) * (a + b + c) * (a + b + c) * (a + b + c) * (a + b + c) * (a + b + c)\
    \ * (a + b + c) * (a + b + c) * (a + b + c) * (a + b + c) * (a + b + c) * (a +\
    \ b + c) * (a + b + c) * (a + b + c) * (a + b + c) * (a + b + c) * (a + b + c)\
    \ * (a + b + c) * (a + b + c) * (a + b + c) * (a + b + c) * (a +\n      |    \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \            "
  stdout: ''
  timestamp: 1660077302
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if(a>b+c) return false;\n    if(a>c+b) return false;\n\
    \    if(b>c+a) return false;\n    return true;\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpqrg1xq74: /tmp/tmpqrg1xq74.cpp:17: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077296
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long long a1 = abs(a), b1 = abs(b), c1 = abs(c);\n\
    \    long long a2 = a1 + b1, c2 = a1 + c1, b2 = b1 + c1;\n    return a1 == b1\
    \ && b1 == c1 && c2 == a2;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp6wkqsmec: /tmp/tmp6wkqsmec.cpp:15: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077302
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a == 0 || b == 0 || c == 0)\n        return false;\n\
    \    long d = b * b - 4 * a * c;\n    if (d < 0)\n        return false;\n    long\
    \ x = (-b + sqrt(d)) / (2 * a);\n    long y = (-b - sqrt(d)) / (2 * a);\n    return\
    \ (x == 0 && y == 0);\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp8o17aqhv: /tmp/tmp8o17aqhv.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077302
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    long long ans = (a * b * c) - (a * c * b) - (b * a\
    \ * c);\n    if (ans == 0)\n        return true;\n    else\n        return false;\n\
    }\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpolt4nye2: /tmp/tmpolt4nye2.cpp:17: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077302
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a == 0 || b == 0 || c == 0)\n        return false;\n\
    \    long d = b * b - 4 * a * c;\n    if (d < 0)\n        return false;\n    long\
    \ root = (long) sqrt(d);\n    long t1 = (-b + root) / (2 * a);\n    long t2 =\
    \ (-b - root) / (2 * a);\n    if (t1 >= 0 && t1 <= 1)\n        return true;\n\
    \    if (t2 >= 0 && t2 <= 1)\n        return true;\n    return false;\n}\nint\
    \ main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpch4ndmaj: /tmp/tmpch4ndmaj.cpp:25: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077302
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    if(a==b){\n        if(a==c){\n\
    \            return true;\n        }\n    }\n    else if(a==c){\n        if(b==c){\n\
    \            return true;\n        }\n    }\n    else if(b==c){\n        if(a==b){\n\
    \            return true;\n        }\n    }\n    return false;\n}\nint main()\
    \ {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4),\
    \ (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpy1tkkg30: /tmp/tmpy1tkkg30.cpp:29: int main(): Assertion `candidate((3),
    (4), (5)) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660077301
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    if (a > b && a > c) {\n        return true;\n    }\n\
    \    if (b > c && b > a) {\n        return true;\n    }\n    if (c > a && c >\
    \ b) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n\
    \    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpdkdmmmn8: /tmp/tmpdkdmmmn8.cpp:23: int main(): Assertion `candidate((1),
    (2), (3)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660077297
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\nbool right_angle_triangle(long\
    \ a, long b, long c) {\n    // Write your code here\n    if(a==b&&b==c){\n   \
    \     return true;\n    }\n    if(a==b||a==c||b==c){\n        return false;\n\
    \    }\n    long ab=(a+b)/2;\n    long ac=(a+c)/2;\n    long bc=(b+c)/2;\n   \
    \ long abc=(a+b+c)/3;\n    long abc=(a+b+c)/3;\n    long abbc=(a+b+c)/3;\n   \
    \ long abcb=(a+b+c)/3;\n    long abca=(a+b+c)/3;\n    long abcb=(a+b+c)/3;\n \
    \   long abcc=(a+b+c)/3;\n    long abca=(a+b+c)/3;\n    long abcb=(a+b+c)/3;\n\
    \    long abcc=(a+b+c)/3;\n    long abcb=(a+b+c)/3;\n    long abcc=(a+b+c)/3;\n\
    \    long abca=(a+b+c)/3;\n    long abcb=(a+b+c)/3;\n    long abcc=(a+b+c)/3;\n\
    \    long abcb=(a+b+c)/3;\n    long abcc=(a+b+c)/3;\n    long abcb=(a+b+c)/3;\n\
    \    long abcc=(a+b+c)/3;\n    long abcb=(a+b+c)/3;\n    long abcc=(a+b+c)/3;\n\
    \    long abcb=(a+b+c)/3;\n    long abcc=(a+b+c)/3;\n    long abcb=(a+b+c)/3;\n\
    \    long abcc=(a+b+c)/3;\n    long abcb=(a+b+c)/3;\n    long abcc=(a+b+c)/3;\n\
    \    long abcb=(a+b+c)/3;\n    long abcc=(a+b+c)/3;\n    long abcb=(a+b+c)/3;\n\
    \    long abcc=(a+b+c)/3;\n    long abcb=(a+b+c)/3;\n    long abcc=(a+b+c)/3;\n\
    \    long abcb=(a+b+c)/3;\n    long abcc=\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplqfspu7q.cpp: In function \u2018bool right_angle_triangle(long\
    \ int, long int, long int)\u2019:\n/tmp/tmplqfspu7q.cpp:20:10: error: redeclaration\
    \ of \u2018long int abc\u2019\n   20 |     long abc=(a+b+c)/3;\n      |      \
    \    ^~~\n/tmp/tmplqfspu7q.cpp:19:10: note: \u2018long int abc\u2019 previously\
    \ declared here\n   19 |     long abc=(a+b+c)/3;\n      |          ^~~\n/tmp/tmplqfspu7q.cpp:24:10:\
    \ error: redeclaration of \u2018long int abcb\u2019\n   24 |     long abcb=(a+b+c)/3;\n\
    \      |          ^~~~\n/tmp/tmplqfspu7q.cpp:22:10: note: \u2018long int abcb\u2019\
    \ previously declared here\n   22 |     long abcb=(a+b+c)/3;\n      |        \
    \  ^~~~\n/tmp/tmplqfspu7q.cpp:26:10: error: redeclaration of \u2018long int abca\u2019\
    \n   26 |     long abca=(a+b+c)/3;\n      |          ^~~~\n/tmp/tmplqfspu7q.cpp:23:10:\
    \ note: \u2018long int abca\u2019 previously declared here\n   23 |     long abca=(a+b+c)/3;\n\
    \      |          ^~~~\n/tmp/tmplqfspu7q.cpp:27:10: error: redeclaration of \u2018\
    long int abcb\u2019\n   27 |     long abcb=(a+b+c)/3;\n      |          ^~~~\n\
    /tmp/tmplqfspu7q.cpp:22:10: note: \u2018long int abcb\u2019 previously declared\
    \ here\n   22 |     long abcb=(a+b+c)/3;\n      |          ^~~~\n/tmp/tmplqfspu7q.cpp:28:10:\
    \ error: redeclaration of \u2018long int abcc\u2019\n   28 |     long abcc=(a+b+c)/3;\n\
    \      |          ^~~~\n/tmp/tmplqfspu7q.cpp:25:10: note: \u2018long int abcc\u2019\
    \ previously declared here\n   25 |     long abcc=(a+b+c)/3;\n      |        \
    \  ^~~~\n/tmp/tmplqfspu7q.cpp:29:10: error: redeclaration of \u2018long int abcb\u2019\
    \n   29 |     long abcb=(a+b+c)/3;\n      |          ^~~~\n/tmp/tmplqfspu7q.cpp:22:10:\
    \ note: \u2018long int abcb\u2019 previously declared here\n   22 |     long abcb=(a+b+c)/3;\n\
    \      |          ^~~~\n/tmp/tmplqfspu7q.cpp:30:10: error: redeclaration of \u2018\
    long int abcc\u2019\n   30 |     long abcc=(a+b+c)/3;\n      |          ^~~~\n\
    /tmp/tmplqfspu7q.cpp:25:10: note: \u2018long int abcc\u2019 previously declared\
    \ here\n   25 |     long abcc=(a+b+c)/3;\n      |          ^~~~\n/tmp/tmplqfspu7q.cpp:31:10:\
    \ error: redeclaration of \u2018long int abca\u2019\n   31 |     long abca=(a+b+c)/3;\n\
    \      |          ^~~~\n/tmp/tmplqfspu7q.cpp:23:10: note: \u2018long int abca\u2019\
    \ previously declar"
  stdout: ''
  timestamp: 1660077302

language: cpp
name: HumanEval_16_count_distinct_characters
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ (c == 'a' || c == 'b' || c == 'c' || c == 'd' || c == 'e' || c == 'f' || c ==\
    \ 'g' || c == 'h' || c == 'i' || c == 'j' || c == 'k' || c == 'l' || c == 'm'\
    \ || c == 'n' || c == 'o' || c == 'p' || c == 'q' || c == 'r' || c == 's' || c\
    \ == 't' || c == 'u' || c == 'v' || c == 'w' || c == 'x' || c == 'y' || c == 'z');\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp_646osi1: /tmp/tmp_646osi1.cpp:15: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ (c == c); // count the number of distinct characters\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmp7cvx_m7t: /tmp/tmp7cvx_m7t.cpp:15: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (auto &c : string) {\n        count\
    \ += tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp3z9mb8w_: /tmp/tmp3z9mb8w_.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        if (std::tolower(c)\
    \ == c) count++;\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp_m9oag7j: /tmp/tmp_m9oag7j.cpp:15: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        if (c ==\
    \ 'a' || c == 'b' || c == 'c' || c == 'd' || c == 'e' || c == 'f' || c == 'g'\
    \ || c == 'h' || c == 'i' || c == 'j' || c == 'k' || c == 'l' || c == 'm' || c\
    \ == 'n' || c == 'o' || c == 'p' || c == 'q' || c == 'r' || c == 's' || c == 't'\
    \ || c == 'u' || c == 'v' || c == 'w' || c == 'x' || c == 'y' || c == 'z') {\n\
    \            count++;\n        }\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpl_3tu79m: /tmp/tmpl_3tu79m.cpp:17: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (auto &c : string) {\n        count\
    \ += tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp3z9mb8w_: /tmp/tmp3z9mb8w_.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ (c >= 'A' && c <= 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmppm5t6taq: /tmp/tmppm5t6taq.cpp:15: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        if (std::tolower(c)\
    \ == c) count++;\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp_m9oag7j: /tmp/tmp_m9oag7j.cpp:15: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ (c >= 'A' && c <= 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmppm5t6taq: /tmp/tmppm5t6taq.cpp:15: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ (c >= 'A' && c <= 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmppm5t6taq: /tmp/tmppm5t6taq.cpp:15: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        if (c ==\
    \ 'a' || c == 'b' || c == 'c' || c == 'd' || c == 'e' || c == 'f' || c == 'g'\
    \ || c == 'h' || c == 'i' || c == 'j' || c == 'k' || c == 'l' || c == 'm' || c\
    \ == 'n' || c == 'o' || c == 'p' || c == 'q' || c == 'r' || c == 's' || c == 't'\
    \ || c == 'u' || c == 'v' || c == 'w' || c == 'x' || c == 'y' || c == 'z') {\n\
    \            count++;\n        }\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpl_3tu79m: /tmp/tmpl_3tu79m.cpp:17: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (auto &c : string) {\n        count\
    \ += tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp3z9mb8w_: /tmp/tmp3z9mb8w_.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (auto &c : string) {\n        count\
    \ += std::tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto\
    \ candidate = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n\
    \    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\"\
    )) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"\
    Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmp_zuz289k: /tmp/tmp_zuz289k.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (auto &c : string) {\n        count\
    \ += tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp3z9mb8w_: /tmp/tmp3z9mb8w_.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        if (std::tolower(c)\
    \ == c) count++;\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp_m9oag7j: /tmp/tmp_m9oag7j.cpp:15: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        if (c ==\
    \ tolower(c)) count++;\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmprv7xkjbv: /tmp/tmprv7xkjbv.cpp:15: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (auto &c : string) {\n        count\
    \ += tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp3z9mb8w_: /tmp/tmp3z9mb8w_.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        if (std::tolower(c)\
    \ == c) count++;\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp_m9oag7j: /tmp/tmp_m9oag7j.cpp:15: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (auto c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpkhabuk93: /tmp/tmpkhabuk93.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (auto c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpkhabuk93: /tmp/tmpkhabuk93.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        if (std::toupper(c)\
    \ == c) count++;\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp1zquix45: /tmp/tmp1zquix45.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        if (std::tolower(c)\
    \ == c) count++;\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp_m9oag7j: /tmp/tmp_m9oag7j.cpp:15: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ (c >= 'a' && c <= 'z') + (c >= 'A' && c <= 'Z');\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpkfbatena: /tmp/tmpkfbatena.cpp:15: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (auto c : string) {\n        auto it\
    \ = std::tolower(c);\n        if (it != c) {\n            count++;\n        }\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmplncxrsfz: /tmp/tmplncxrsfz.cpp:17: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        if (std::tolower(c)\
    \ == c) count++;\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp_m9oag7j: /tmp/tmp_m9oag7j.cpp:15: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (auto &c : string) {\n        if (std::tolower(c)\
    \ == c) count++;\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpydjhytaq: /tmp/tmpydjhytaq.cpp:15: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (auto &c : string) {\n        count\
    \ += tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp3z9mb8w_: /tmp/tmp3z9mb8w_.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (auto &c : string) {\n        if (std::tolower(c)\
    \ == std::tolower(c)) {\n            count++;\n        }\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpx15ubyms: /tmp/tmpx15ubyms.cpp:17: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ (c >= 'A' && c <= 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmppm5t6taq: /tmp/tmppm5t6taq.cpp:15: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (auto &c : string) {\n        count\
    \ += tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp3z9mb8w_: /tmp/tmp3z9mb8w_.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (auto c : string) {\n        if (std::tolower(c)\
    \ == c) count++;\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpaz1eh_ee: /tmp/tmpaz1eh_ee.cpp:15: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (auto c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpkhabuk93: /tmp/tmpkhabuk93.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ (c >= 'A' && c <= 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmppm5t6taq: /tmp/tmppm5t6taq.cpp:15: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        if (std::tolower(c)\
    \ == c) count++;\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp_m9oag7j: /tmp/tmp_m9oag7j.cpp:15: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        if (std::tolower(c)\
    \ == c) count++;\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp_m9oag7j: /tmp/tmp_m9oag7j.cpp:15: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (auto &c : string) {\n        count\
    \ += tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp3z9mb8w_: /tmp/tmp3z9mb8w_.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ (c >= 'A' && c <= 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmppm5t6taq: /tmp/tmppm5t6taq.cpp:15: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (auto c : string) {\n        count +=\
    \ (c >= 'A' && c <= 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmp5ln3qn14: /tmp/tmp5ln3qn14.cpp:15: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ (c == 'a' || c == 'b' || c == 'c' || c == 'd' || c == 'e' || c == 'f' || c ==\
    \ 'g' || c == 'h' || c == 'i' || c == 'j' || c == 'k' || c == 'l' || c == 'm'\
    \ || c == 'n' || c == 'o' || c == 'p' || c == 'q' || c == 'r' || c == 's' || c\
    \ == 't' || c == 'u' || c == 'v' || c == 'w' || c == 'x' || c == 'y' || c == 'z');\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp_646osi1: /tmp/tmp_646osi1.cpp:15: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (auto &c : string) {\n        count\
    \ += tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp3z9mb8w_: /tmp/tmp3z9mb8w_.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        if (std::tolower(c)\
    \ == c) count++;\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp_m9oag7j: /tmp/tmp_m9oag7j.cpp:15: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (auto &c : string) {\n        count\
    \ += std::tolower(c) - std::tolower(c[0]) + 1;\n    }\n    return count;\n}\n\
    int main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt9i3z889.cpp: In function \u2018long int count_distinct_characters(std::string)\u2019\
    :\n/tmp/tmpt9i3z889.cpp:7:52: error: invalid types \u2018char[int]\u2019 for array\
    \ subscript\n    7 |         count += std::tolower(c) - std::tolower(c[0]) + 1;\n\
    \      |                                                    ^\n"
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (auto c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpkhabuk93: /tmp/tmpkhabuk93.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (auto c : string) {\n        auto it\
    \ = std::tolower(c);\n        if (it != c) {\n            count++;\n        }\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmplncxrsfz: /tmp/tmplncxrsfz.cpp:17: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ (c >= 'A' && c <= 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmppm5t6taq: /tmp/tmppm5t6taq.cpp:15: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ (c >= 'A' && c <= 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmppm5t6taq: /tmp/tmppm5t6taq.cpp:15: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (auto &c : string) {\n        count\
    \ += tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp3z9mb8w_: /tmp/tmp3z9mb8w_.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        if (std::tolower(c)\
    \ == c) count++;\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp_m9oag7j: /tmp/tmp_m9oag7j.cpp:15: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (auto &c: string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpktu5wd5z: /tmp/tmpktu5wd5z.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (auto c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpkhabuk93: /tmp/tmpkhabuk93.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (auto c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpkhabuk93: /tmp/tmpkhabuk93.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ (c >= 'A' && c <= 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmppm5t6taq: /tmp/tmppm5t6taq.cpp:15: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ (c == c); // count the number of distinct characters\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmp7cvx_m7t: /tmp/tmp7cvx_m7t.cpp:15: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (auto c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpkhabuk93: /tmp/tmpkhabuk93.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ (c == 'a' || c == 'b' || c == 'c' || c == 'd' || c == 'e' || c == 'f' || c ==\
    \ 'g' || c == 'h' || c == 'i' || c == 'j' || c == 'k' || c == 'l' || c == 'm'\
    \ || c == 'n' || c == 'o' || c == 'p' || c == 'q' || c == 'r' || c == 's' || c\
    \ == 't' || c == 'u' || c == 'v' || c == 'w' || c == 'x' || c == 'y' || c == 'z');\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp_646osi1: /tmp/tmp_646osi1.cpp:15: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (auto &c : string) {\n        count\
    \ += tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp3z9mb8w_: /tmp/tmp3z9mb8w_.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ (c >= 'A' && c <= 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmppm5t6taq: /tmp/tmppm5t6taq.cpp:15: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ (c >= 'A' && c <= 'Z') + (c >= 'a' && c <= 'z') + (c >= '0' && c <= '9');\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpbii5ei7t: /tmp/tmpbii5ei7t.cpp:15: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ (c >= 'a' && c <= 'z') + (c >= 'A' && c <= 'Z');\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpkfbatena: /tmp/tmpkfbatena.cpp:15: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ (c >= 'a' && c <= 'z') + (c >= 'A' && c <= 'Z');\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpkfbatena: /tmp/tmpkfbatena.cpp:15: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (auto c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpkhabuk93: /tmp/tmpkhabuk93.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ (c >= 'a' && c <= 'z') + (c >= 'A' && c <= 'Z');\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpkfbatena: /tmp/tmpkfbatena.cpp:15: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (auto c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpkhabuk93: /tmp/tmpkhabuk93.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (auto &c : string) {\n        count\
    \ += tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp3z9mb8w_: /tmp/tmp3z9mb8w_.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (auto c : string) {\n        if (std::tolower(c)\
    \ == c) count++;\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpaz1eh_ee: /tmp/tmpaz1eh_ee.cpp:15: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        if (std::tolower(c)\
    \ == c) count++;\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp_m9oag7j: /tmp/tmp_m9oag7j.cpp:15: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ (c >= 'A' && c <= 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmppm5t6taq: /tmp/tmppm5t6taq.cpp:15: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        if (std::tolower(c)\
    \ == c) count++;\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp_m9oag7j: /tmp/tmp_m9oag7j.cpp:15: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (auto &c: string) {\n        count +=\
    \ std::tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto\
    \ candidate = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n\
    \    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\"\
    )) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"\
    Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpaxeq4ahc: /tmp/tmpaxeq4ahc.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        if (c ==\
    \ 'A' || c == 'a' || c == 'B' || c == 'b' || c == 'C' || c == 'c' || c == 'D'\
    \ || c == 'd' || c == 'E' || c == 'e' || c == 'F' || c == 'f' || c == 'G' || c\
    \ == 'g' || c == 'H' || c == 'h' || c == 'I' || c == 'i' || c == 'J' || c == 'j'\
    \ || c == 'K' || c == 'k' || c == 'L' || c == 'l' || c == 'M' || c == 'm' || c\
    \ == 'N' || c == 'n' || c == 'O' || c == 'o' || c == 'P' || c == 'p' || c == 'Q'\
    \ || c == 'q' || c == 'R' || c == 'r' || c == 'S' || c == 's' || c == 'T' || c\
    \ == 't' || c == 'U' || c == 'u' || c == 'V' || c == 'v' || c == 'W' || c == 'w'\
    \ || c == 'X' || c == 'x' || c == 'Y' || c == 'y' || c == 'Z' || c == 'z') {\n\
    \            count++;\n        }\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpfxbny71z: /tmp/tmpfxbny71z.cpp:17: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (auto c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpkhabuk93: /tmp/tmpkhabuk93.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        if (c ==\
    \ 'A' || c == 'a' || c == 'B' || c == 'b' || c == 'C' || c == 'c' || c == 'D'\
    \ || c == 'd' || c == 'E' || c == 'e' || c == 'F' || c == 'f' || c == 'G' || c\
    \ == 'g' || c == 'H' || c == 'h' || c == 'I' || c == 'i' || c == 'J' || c == 'j'\
    \ || c == 'K' || c == 'k' || c == 'L' || c == 'l' || c == 'M' || c == 'm' || c\
    \ == 'N' || c == 'n' || c == 'O' || c == 'o' || c == 'P' || c == 'p' || c == 'Q'\
    \ || c == 'q' || c == 'R' || c == 'r' || c == 'S' || c == 's' || c == 'T' || c\
    \ == 't' || c == 'U' || c == 'u' || c == 'V' || c == 'v' || c == 'W' || c == 'w'\
    \ || c == 'X' || c == 'x' || c == 'Y' || c == 'y' || c == 'Z' || c == 'z') {\n\
    \            count++;\n        }\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpfxbny71z: /tmp/tmpfxbny71z.cpp:17: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ (c >= 'A' && c <= 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmppm5t6taq: /tmp/tmppm5t6taq.cpp:15: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        if (c ==\
    \ toupper(c)) {\n            count++;\n        }\n    }\n    return count;\n}\n\
    int main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpkghki750: /tmp/tmpkghki750.cpp:16: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ (c >= 'A' && c <= 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmppm5t6taq: /tmp/tmppm5t6taq.cpp:15: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        if (c ==\
    \ toupper(c)) {\n            count++;\n        }\n    }\n    return count;\n}\n\
    int main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpkghki750: /tmp/tmpkghki750.cpp:16: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        if (std::tolower(c)\
    \ == c) count++;\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp_m9oag7j: /tmp/tmp_m9oag7j.cpp:15: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (auto &c : string) {\n        count\
    \ += tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp3z9mb8w_: /tmp/tmp3z9mb8w_.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ (c >= 'A' && c <= 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmppm5t6taq: /tmp/tmppm5t6taq.cpp:15: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ (c >= 'A' && c <= 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmppm5t6taq: /tmp/tmppm5t6taq.cpp:15: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ (c >= 'A' && c <= 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmppm5t6taq: /tmp/tmppm5t6taq.cpp:15: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        if (std::toupper(c)\
    \ == c)\n            count++;\n    }\n    return count;\n}\nint main() {\n   \
    \ auto candidate = count_distinct_characters;\n    assert(candidate((\"\")) ==\
    \ (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmp685lwmq7: /tmp/tmp685lwmq7.cpp:15: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        if (std::tolower(c)\
    \ == c) count++;\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp_m9oag7j: /tmp/tmp_m9oag7j.cpp:15: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ (c >= 'a' && c <= 'z') + (c >= 'A' && c <= 'Z');\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpkfbatena: /tmp/tmpkfbatena.cpp:15: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        if (c ==\
    \ toupper(c)) {\n            count++;\n        }\n    }\n    return count;\n}\n\
    int main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpkghki750: /tmp/tmpkghki750.cpp:16: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        if (c ==\
    \ toupper(c)) {\n            count++;\n        }\n    }\n    return count;\n}\n\
    int main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: Exception
  stderr: 'tmpkghki750: /tmp/tmpkghki750.cpp:16: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpgrfr75_x: /tmp/tmpgrfr75_x.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (char c : string) {\n        if (std::tolower(c)\
    \ == c) count++;\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmp_m9oag7j: /tmp/tmp_m9oag7j.cpp:15: int main(): Assertion `candidate(("abcdecadeCADE"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\nlong count_distinct_characters(std::string\
    \ string) {\n    long count = 0;\n    for (auto c : string) {\n        count +=\
    \ tolower(c) - 'a';\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: Exception
  stderr: 'tmpkhabuk93: /tmp/tmpkhabuk93.cpp:14: int main(): Assertion `candidate(("abcde"))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660143183

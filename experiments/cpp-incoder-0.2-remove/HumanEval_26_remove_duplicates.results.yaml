language: cpp
name: HumanEval_26_remove_duplicates
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  seen.insert(i);\n            result.push_back(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp7l0ulljs: /tmp/tmp7l0ulljs.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  seen.insert(i);\n            result.push_back(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp7l0ulljs: /tmp/tmp7l0ulljs.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n   \
    \         result.push_back(i);\n            seen.insert(i);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpeh3tzpft: /tmp/tmpeh3tzpft.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103092
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n  std::vector<long> result;\n  std::set<long> seen;\n  for (long\
    \ i : numbers) {\n    if (seen.find(i) == seen.end()) {\n      result.push_back(i);\n\
    \      seen.insert(i);\n    }\n  }\n  return result;\n}\nint main() {\n    auto\
    \ candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp7zz46b5y: /tmp/tmp7zz46b5y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n   \
    \         result.push_back(i);\n            seen.insert(i);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpeh3tzpft: /tmp/tmpeh3tzpft.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103092
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long num : numbers) {\n        if (seen.find(num) == seen.end()) {\n\
    \            seen.insert(num);\n            result.push_back(num);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpd89zcign: /tmp/tmpd89zcign.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long num : numbers) {\n        if (seen.find(num) == seen.end()) {\n\
    \            seen.insert(num);\n            result.push_back(num);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpd89zcign: /tmp/tmpd89zcign.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long num : numbers) {\n        if (seen.find(num) == seen.end()) {\n\
    \            result.push_back(num);\n            seen.insert(num);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmps3zo608h: /tmp/tmps3zo608h.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103092
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long i : numbers) {\n        if (seen.count(i) == 0) {\n           \
    \ result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpzo_rh3es: /tmp/tmpzo_rh3es.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long num : numbers) {\n        if (seen.find(num) == seen.end()) {\n\
    \            result.push_back(num);\n            seen.insert(num);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmps3zo608h: /tmp/tmps3zo608h.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103092
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long num : numbers) {\n        if (seen.find(num) != seen.end()) {\n\
    \            continue;\n        }\n        seen.insert(num);\n        result.push_back(num);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpa8exgjt_: /tmp/tmpa8exgjt_.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103226
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n   \
    \         result.push_back(i);\n            seen.insert(i);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpeh3tzpft: /tmp/tmpeh3tzpft.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103092
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (auto i : numbers) {\n        if (seen.find(i) == seen.end()) {\n   \
    \         result.push_back(i);\n            seen.insert(i);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp_9g2iui8: /tmp/tmp_9g2iui8.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long num : numbers) {\n        if (seen.find(num) != seen.end()) {\n      \
    \      continue;\n        }\n        seen.insert(num);\n        result.push_back(num);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpf3t8c8mh: /tmp/tmpf3t8c8mh.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long num : numbers) {\n        if (seen.find(num) == seen.end()) {\n      \
    \      result.push_back(num);\n            seen.insert(num);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpt03nq7xi: /tmp/tmpt03nq7xi.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long i : numbers) {\n        if (seen.count(i) == 0) {\n           \
    \ result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpzo_rh3es: /tmp/tmpzo_rh3es.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long num : numbers) {\n        if (seen.find(num) == seen.end()) {\n\
    \            result.push_back(num);\n            seen.insert(num);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmps3zo608h: /tmp/tmps3zo608h.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103092
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long i : numbers) {\n        if (seen.count(i) == 0) {\n           \
    \ result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpzo_rh3es: /tmp/tmpzo_rh3es.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  seen.insert(i);\n            result.push_back(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp7l0ulljs: /tmp/tmp7l0ulljs.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n   \
    \         result.push_back(i);\n            seen.insert(i);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpeh3tzpft: /tmp/tmpeh3tzpft.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103092
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n   \
    \         seen.insert(i);\n            result.push_back(i);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpizm49ued: /tmp/tmpizm49ued.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long num : numbers) {\n        if (seen.find(num) == seen.end()) {\n      \
    \      seen.insert(num);\n            result.push_back(num);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpzj04xjne: /tmp/tmpzj04xjne.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103226
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long num : numbers) {\n        if (seen.find(num) == seen.end()) {\n\
    \            seen.insert(num);\n            result.push_back(num);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpd89zcign: /tmp/tmpd89zcign.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n   \
    \         result.push_back(i);\n            seen.insert(i);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpeh3tzpft: /tmp/tmpeh3tzpft.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103092
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  seen.insert(i);\n            result.push_back(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp7l0ulljs: /tmp/tmp7l0ulljs.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long i : numbers) {\n        if (seen.count(i) == 0) {\n           \
    \ result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpzo_rh3es: /tmp/tmpzo_rh3es.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long num : numbers) {\n        if (seen.find(num) == seen.end()) {\n      \
    \      seen.insert(num);\n            result.push_back(num);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpzj04xjne: /tmp/tmpzj04xjne.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103226
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n   \
    \         result.push_back(i);\n            seen.insert(i);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpeh3tzpft: /tmp/tmpeh3tzpft.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103092
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n  std::vector<long> result;\n  std::set<long> seen;\n  for (long\
    \ i : numbers) {\n    if (seen.find(i) == seen.end()) {\n      result.push_back(i);\n\
    \      seen.insert(i);\n    }\n  }\n  return result;\n}\nint main() {\n    auto\
    \ candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp7zz46b5y: /tmp/tmp7zz46b5y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n   \
    \         seen.insert(i);\n            result.push_back(i);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpizm49ued: /tmp/tmpizm49ued.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  seen.insert(i);\n            result.push_back(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp7l0ulljs: /tmp/tmp7l0ulljs.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long num : numbers) {\n        if (seen.find(num) == seen.end()) {\n\
    \            seen.insert(num);\n            result.push_back(num);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpd89zcign: /tmp/tmpd89zcign.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (auto i : numbers) {\n        if (seen.count(i) == 0) {\n           \
    \ result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpfdpldzqk: /tmp/tmpfdpldzqk.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n  std::vector<long> result;\n  std::set<long> seen;\n  for (long\
    \ num : numbers) {\n    if (seen.find(num) == seen.end()) {\n      result.push_back(num);\n\
    \      seen.insert(num);\n    }\n  }\n  return result;\n}\nint main() {\n    auto\
    \ candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpixmshn47: /tmp/tmpixmshn47.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long i : numbers) {\n        if (seen.count(i) == 0) {\n           \
    \ result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpzo_rh3es: /tmp/tmpzo_rh3es.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (auto i : numbers) {\n        if (seen.find(i) == seen.end()) {\n   \
    \         result.push_back(i);\n            seen.insert(i);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp_9g2iui8: /tmp/tmp_9g2iui8.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long num : numbers) {\n        if (seen.find(num) == seen.end()) {\n      \
    \      result.push_back(num);\n            seen.insert(num);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpt03nq7xi: /tmp/tmpt03nq7xi.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long num : numbers) {\n        if (seen.find(num) != seen.end()) {\n      \
    \      continue;\n        }\n        seen.insert(num);\n        result.push_back(num);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpf3t8c8mh: /tmp/tmpf3t8c8mh.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long num : numbers) {\n        if (seen.find(num) == seen.end()) {\n      \
    \      result.push_back(num);\n            seen.insert(num);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpt03nq7xi: /tmp/tmpt03nq7xi.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  seen.insert(i);\n            result.push_back(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp7l0ulljs: /tmp/tmp7l0ulljs.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  seen.insert(i);\n            result.push_back(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp7l0ulljs: /tmp/tmp7l0ulljs.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n  std::vector<long> result;\n  std::set<long> seen;\n  for (long\
    \ num : numbers) {\n    if (seen.find(num) == seen.end()) {\n      result.push_back(num);\n\
    \      seen.insert(num);\n    }\n  }\n  return result;\n}\nint main() {\n    auto\
    \ candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpixmshn47: /tmp/tmpixmshn47.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n  std::vector<long> result;\n  std::set<long> seen;\n  for (long\
    \ i : numbers) {\n    if (seen.find(i) == seen.end()) {\n      result.push_back(i);\n\
    \      seen.insert(i);\n    }\n  }\n  return result;\n}\nint main() {\n    auto\
    \ candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp7zz46b5y: /tmp/tmp7zz46b5y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n   \
    \         result.push_back(i);\n            seen.insert(i);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpeh3tzpft: /tmp/tmpeh3tzpft.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103092
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long num : numbers) {\n        if (seen.find(num) == seen.end()) {\n\
    \            result.push_back(num);\n            seen.insert(num);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmps3zo608h: /tmp/tmps3zo608h.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103092
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (auto i : numbers) {\n        if (seen.find(i) == seen.end()) {\n   \
    \         seen.insert(i);\n            result.push_back(i);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpfnyz_ia6: /tmp/tmpfnyz_ia6.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n   \
    \         result.push_back(i);\n            seen.insert(i);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpeh3tzpft: /tmp/tmpeh3tzpft.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103092
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long num : numbers) {\n        if (seen.find(num) == seen.end()) {\n      \
    \      seen.insert(num);\n            result.push_back(num);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpzj04xjne: /tmp/tmpzj04xjne.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103226
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long num : numbers) {\n        if (seen.find(num) == seen.end()) {\n\
    \            seen.insert(num);\n            result.push_back(num);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpd89zcign: /tmp/tmpd89zcign.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (auto i : numbers) {\n        if (seen.find(i) == seen.end()) {\n   \
    \         result.push_back(i);\n            seen.insert(i);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp_9g2iui8: /tmp/tmp_9g2iui8.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n   \
    \         result.push_back(i);\n            seen.insert(i);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpeh3tzpft: /tmp/tmpeh3tzpft.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103092
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n   \
    \         result.push_back(i);\n            seen.insert(i);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpeh3tzpft: /tmp/tmpeh3tzpft.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103092
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n  std::vector<long> result;\n  std::unordered_set<long> seen;\n\
    \  for (long i : numbers) {\n    if (seen.find(i) == seen.end()) {\n      result.push_back(i);\n\
    \      seen.insert(i);\n    }\n  }\n  return result;\n}\nint main() {\n    auto\
    \ candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpgrszv9cl: /tmp/tmpgrszv9cl.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long num : numbers) {\n        if (seen.find(num) == seen.end()) {\n      \
    \      result.push_back(num);\n            seen.insert(num);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpt03nq7xi: /tmp/tmpt03nq7xi.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (auto n : numbers) {\n        if (seen.find(n) == seen.end()) {\n   \
    \         seen.insert(n);\n            result.push_back(n);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpkmdf6ndu: /tmp/tmpkmdf6ndu.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  seen.insert(i);\n            result.push_back(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp7l0ulljs: /tmp/tmp7l0ulljs.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n   \
    \         result.push_back(i);\n            seen.insert(i);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpeh3tzpft: /tmp/tmpeh3tzpft.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103092
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long num : numbers) {\n        if (seen.find(num) == seen.end()) {\n      \
    \      result.push_back(num);\n            seen.insert(num);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpt03nq7xi: /tmp/tmpt03nq7xi.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n   \
    \         result.push_back(i);\n            seen.insert(i);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpeh3tzpft: /tmp/tmpeh3tzpft.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103092
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long num : numbers) {\n        if (seen.find(num) != seen.end()) {\n\
    \            continue;\n        }\n        seen.insert(num);\n        result.push_back(num);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpa8exgjt_: /tmp/tmpa8exgjt_.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103226
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n  std::vector<long> result;\n  std::set<long> seen;\n  for (long\
    \ i : numbers) {\n    if (seen.find(i) == seen.end()) {\n      result.push_back(i);\n\
    \      seen.insert(i);\n    }\n  }\n  return result;\n}\nint main() {\n    auto\
    \ candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp7zz46b5y: /tmp/tmp7zz46b5y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n   \
    \         result.push_back(i);\n            seen.insert(i);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpeh3tzpft: /tmp/tmpeh3tzpft.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103092
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long num : numbers) {\n        if (seen.find(num) == seen.end()) {\n\
    \            result.push_back(num);\n            seen.insert(num);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmps3zo608h: /tmp/tmps3zo608h.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103092
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n   \
    \         result.push_back(i);\n            seen.insert(i);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpeh3tzpft: /tmp/tmpeh3tzpft.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103092
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long num : numbers) {\n        if (seen.find(num) == seen.end()) {\n\
    \            result.push_back(num);\n            seen.insert(num);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmps3zo608h: /tmp/tmps3zo608h.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103092
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long number : numbers) {\n        if (seen.find(number) != seen.end())\
    \ {\n            continue;\n        }\n        seen.insert(number);\n        result.push_back(number);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp05di08o_: /tmp/tmp05di08o_.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  seen.insert(i);\n            result.push_back(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp7l0ulljs: /tmp/tmp7l0ulljs.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long num : numbers) {\n        if (seen.find(num) == seen.end()) {\n      \
    \      result.push_back(num);\n            seen.insert(num);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpt03nq7xi: /tmp/tmpt03nq7xi.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (auto i : numbers) {\n        if (seen.find(i) == seen.end()) {\n   \
    \         result.push_back(i);\n            seen.insert(i);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp_9g2iui8: /tmp/tmp_9g2iui8.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long num : numbers) {\n        if (seen.find(num) != seen.end()) {\n      \
    \      continue;\n        }\n        result.push_back(num);\n        seen.insert(num);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpw2z_414k: /tmp/tmpw2z_414k.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long num : numbers) {\n        if (seen.find(num) == seen.end()) {\n      \
    \      result.push_back(num);\n            seen.insert(num);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpt03nq7xi: /tmp/tmpt03nq7xi.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (auto i : numbers) {\n        if (seen.find(i) == seen.end()) {\n   \
    \         result.push_back(i);\n            seen.insert(i);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp_9g2iui8: /tmp/tmp_9g2iui8.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long i : numbers) {\n        if (seen.count(i) == 0) {\n           \
    \ result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpzo_rh3es: /tmp/tmpzo_rh3es.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  seen.insert(i);\n            result.push_back(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp7l0ulljs: /tmp/tmp7l0ulljs.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long num : numbers) {\n        if (seen.find(num) == seen.end()) {\n\
    \            seen.insert(num);\n            result.push_back(num);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpd89zcign: /tmp/tmpd89zcign.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long num : numbers) {\n        if (seen.find(num) == seen.end()) {\n      \
    \      seen.insert(num);\n            result.push_back(num);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpzj04xjne: /tmp/tmpzj04xjne.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103226
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long num : numbers) {\n        if (seen.find(num) != seen.end()) {\n\
    \            continue;\n        }\n        seen.insert(num);\n        result.push_back(num);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpa8exgjt_: /tmp/tmpa8exgjt_.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103226
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long num : numbers) {\n        if (seen.find(num) == seen.end()) {\n      \
    \      seen.insert(num);\n            result.push_back(num);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpzj04xjne: /tmp/tmpzj04xjne.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103226
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long num : numbers) {\n        if (seen.find(num) == seen.end()) {\n\
    \            seen.insert(num);\n            result.push_back(num);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpd89zcign: /tmp/tmpd89zcign.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long num : numbers) {\n        if (seen.find(num) != seen.end()) {\n\
    \            continue;\n        }\n        seen.insert(num);\n        result.push_back(num);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpa8exgjt_: /tmp/tmpa8exgjt_.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103226
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long num : numbers) {\n        if (seen.find(num) == seen.end()) {\n\
    \            seen.insert(num);\n            result.push_back(num);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpd89zcign: /tmp/tmpd89zcign.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  seen.insert(i);\n            result.push_back(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp7l0ulljs: /tmp/tmp7l0ulljs.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long num : numbers) {\n        if (seen.find(num) == seen.end()) {\n      \
    \      result.push_back(num);\n            seen.insert(num);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpt03nq7xi: /tmp/tmpt03nq7xi.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n   \
    \         result.push_back(i);\n            seen.insert(i);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpeh3tzpft: /tmp/tmpeh3tzpft.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103092
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n   \
    \         result.push_back(i);\n            seen.insert(i);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpeh3tzpft: /tmp/tmpeh3tzpft.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103092
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n   \
    \         result.push_back(i);\n            seen.insert(i);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpeh3tzpft: /tmp/tmpeh3tzpft.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103092
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  seen.insert(i);\n            result.push_back(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp7l0ulljs: /tmp/tmp7l0ulljs.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long num : numbers) {\n        if (seen.find(num) == seen.end()) {\n      \
    \      seen.insert(num);\n            result.push_back(num);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpzj04xjne: /tmp/tmpzj04xjne.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103226
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long num : numbers) {\n        if (seen.find(num) == seen.end()) {\n\
    \            seen.insert(num);\n            result.push_back(num);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpd89zcign: /tmp/tmpd89zcign.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  seen.insert(i);\n            result.push_back(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp7l0ulljs: /tmp/tmp7l0ulljs.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  seen.insert(i);\n            result.push_back(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp7l0ulljs: /tmp/tmp7l0ulljs.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long num : numbers) {\n        if (seen.find(num) == seen.end()) {\n\
    \            result.push_back(num);\n            seen.insert(num);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmps3zo608h: /tmp/tmps3zo608h.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103092
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long num : numbers) {\n        if (seen.find(num) == seen.end()) {\n\
    \            result.push_back(num);\n            seen.insert(num);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmps3zo608h: /tmp/tmps3zo608h.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103092
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n   \
    \         result.push_back(i);\n            seen.insert(i);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpeh3tzpft: /tmp/tmpeh3tzpft.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103092
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n   \
    \         result.push_back(i);\n            seen.insert(i);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpeh3tzpft: /tmp/tmpeh3tzpft.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103092
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  seen.insert(i);\n            result.push_back(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp7l0ulljs: /tmp/tmp7l0ulljs.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long num : numbers) {\n        if (seen.find(num) == seen.end()) {\n\
    \            result.push_back(num);\n            seen.insert(num);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmps3zo608h: /tmp/tmps3zo608h.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103092
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long num : numbers) {\n        if (seen.find(num) == seen.end()) {\n      \
    \      seen.insert(num);\n            result.push_back(num);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpzj04xjne: /tmp/tmpzj04xjne.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103226
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  seen.insert(i);\n            result.push_back(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp7l0ulljs: /tmp/tmp7l0ulljs.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n   \
    \         seen.insert(i);\n            result.push_back(i);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpizm49ued: /tmp/tmpizm49ued.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long num : numbers) {\n        if (seen.find(num) == seen.end()) {\n      \
    \      seen.insert(num);\n            result.push_back(num);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpzj04xjne: /tmp/tmpzj04xjne.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103226
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long num : numbers) {\n        if (seen.find(num) != seen.end()) {\n\
    \            continue;\n        }\n        seen.insert(num);\n        result.push_back(num);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpa8exgjt_: /tmp/tmpa8exgjt_.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103226
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n  std::vector<long> result;\n  std::set<long> seen;\n  for (long\
    \ i : numbers) {\n    if (seen.find(i) == seen.end()) {\n      result.push_back(i);\n\
    \      seen.insert(i);\n    }\n  }\n  return result;\n}\nint main() {\n    auto\
    \ candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp7zz46b5y: /tmp/tmp7zz46b5y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long num : numbers) {\n        if (seen.find(num) == seen.end()) {\n\
    \            seen.insert(num);\n            result.push_back(num);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpd89zcign: /tmp/tmpd89zcign.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long num : numbers) {\n        if (seen.find(num) == seen.end()) {\n\
    \            seen.insert(num);\n            result.push_back(num);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpd89zcign: /tmp/tmpd89zcign.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long num : numbers) {\n        if (seen.find(num) != seen.end()) {\n\
    \            continue;\n        }\n        seen.insert(num);\n        result.push_back(num);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpa8exgjt_: /tmp/tmpa8exgjt_.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103226
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long number : numbers) {\n        if (seen.find(number) == seen.end())\
    \ {\n            result.push_back(number);\n            seen.insert(number);\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpudhofjqt: /tmp/tmpudhofjqt.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103092
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long num : numbers) {\n        if (seen.find(num) == seen.end()) {\n\
    \            result.push_back(num);\n            seen.insert(num);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmps3zo608h: /tmp/tmps3zo608h.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103092
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (auto n : numbers) {\n        if (seen.find(n) == seen.end()) {\n   \
    \         result.push_back(n);\n            seen.insert(n);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpumfckavg: /tmp/tmpumfckavg.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103092
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n   \
    \         result.push_back(i);\n            seen.insert(i);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpeh3tzpft: /tmp/tmpeh3tzpft.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103092
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (auto i : numbers) {\n        if (seen.find(i) == seen.end()) {\n   \
    \         result.push_back(i);\n            seen.insert(i);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp_9g2iui8: /tmp/tmp_9g2iui8.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long num : numbers) {\n        if (seen.find(num) == seen.end()) {\n      \
    \      result.push_back(num);\n            seen.insert(num);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpt03nq7xi: /tmp/tmpt03nq7xi.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  seen.insert(i);\n            result.push_back(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp7l0ulljs: /tmp/tmp7l0ulljs.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long num : numbers) {\n        if (seen.find(num) == seen.end()) {\n      \
    \      seen.insert(num);\n            result.push_back(num);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpzj04xjne: /tmp/tmpzj04xjne.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103226
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (auto i : numbers) {\n        if (seen.find(i) == seen.end()) {\n   \
    \         result.push_back(i);\n            seen.insert(i);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp_9g2iui8: /tmp/tmp_9g2iui8.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n  std::vector<long> result;\n  std::set<long> seen;\n  for (long\
    \ i : numbers) {\n    if (seen.find(i) == seen.end()) {\n      result.push_back(i);\n\
    \      seen.insert(i);\n    }\n  }\n  return result;\n}\nint main() {\n    auto\
    \ candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp7zz46b5y: /tmp/tmp7zz46b5y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long num : numbers) {\n        if (seen.find(num) != seen.end()) {\n      \
    \      continue;\n        }\n        seen.insert(num);\n        result.push_back(num);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpf3t8c8mh: /tmp/tmpf3t8c8mh.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long num : numbers) {\n        if (seen.find(num) == seen.end()) {\n      \
    \      result.push_back(num);\n            seen.insert(num);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpt03nq7xi: /tmp/tmpt03nq7xi.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  seen.insert(i);\n            result.push_back(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp7l0ulljs: /tmp/tmp7l0ulljs.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (auto i : numbers) {\n        if (seen.find(i) == seen.end()) {\n   \
    \         result.push_back(i);\n            seen.insert(i);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp_9g2iui8: /tmp/tmp_9g2iui8.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (auto n : numbers) {\n        if (seen.find(n) == seen.end()) {\n          \
    \  result.push_back(n);\n            seen.insert(n);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpbm94p6qm: /tmp/tmpbm94p6qm.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long num : numbers) {\n        if (seen.find(num) == seen.end()) {\n      \
    \      result.push_back(num);\n            seen.insert(num);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpt03nq7xi: /tmp/tmpt03nq7xi.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n   \
    \         result.push_back(i);\n            seen.insert(i);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpeh3tzpft: /tmp/tmpeh3tzpft.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103092
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long num : numbers) {\n        if (seen.find(num) != seen.end()) {\n\
    \            continue;\n        }\n        seen.insert(num);\n        result.push_back(num);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpa8exgjt_: /tmp/tmpa8exgjt_.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103226
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n  std::vector<long> result;\n  std::set<long> seen;\n  for (long\
    \ i : numbers) {\n    if (seen.find(i) == seen.end()) {\n      result.push_back(i);\n\
    \      seen.insert(i);\n    }\n  }\n  return result;\n}\nint main() {\n    auto\
    \ candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp7zz46b5y: /tmp/tmp7zz46b5y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  seen.insert(i);\n            result.push_back(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp7l0ulljs: /tmp/tmp7l0ulljs.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long num : numbers) {\n        if (seen.find(num) == seen.end()) {\n      \
    \      seen.insert(num);\n            result.push_back(num);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpzj04xjne: /tmp/tmpzj04xjne.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103226
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long num : numbers) {\n        if (seen.find(num) == seen.end()) {\n      \
    \      result.push_back(num);\n            seen.insert(num);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpt03nq7xi: /tmp/tmpt03nq7xi.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long num : numbers) {\n        if (seen.find(num) == seen.end()) {\n\
    \            result.push_back(num);\n            seen.insert(num);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmps3zo608h: /tmp/tmps3zo608h.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103092
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long num : numbers) {\n        if (seen.find(num) == seen.end()) {\n      \
    \      result.push_back(num);\n            seen.insert(num);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpt03nq7xi: /tmp/tmpt03nq7xi.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::unordered_set<long> seen;\n\
    \    for (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n   \
    \         result.push_back(i);\n            seen.insert(i);\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmpeh3tzpft: /tmp/tmpeh3tzpft.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103092
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\nstd::vector<long> remove_duplicates(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::set<long> seen;\n    for\
    \ (long i : numbers) {\n        if (seen.find(i) == seen.end()) {\n          \
    \  result.push_back(i);\n            seen.insert(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: Exception
  stderr: 'tmp0kyypt9y: /tmp/tmp0kyypt9y.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,
    (long)4, (long)5}))'' failed.

    '
  stdout: ''
  timestamp: 1660103225

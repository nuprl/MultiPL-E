name: HumanEval_115_max_fill
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
  \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
  \ a single unit of water.\n// Each well has a corresponding bucket that can be used\
  \ to extract water from it, \n// and all buckets have the same capacity.\n// Your\
  \ task is to use the buckets to empty the wells.\n// Output the number of times\
  \ you need to lower the buckets.\n// Example 1:\n// Example 2:\n// Example 3:\n\
  // Constraints:\n// * all wells have the same length\n// * 1 <= grid.length <= 10^2\n\
  // * 1 <= grid[:,1].length <= 10^2\n// * grid[i][j] -> 0 | 1\n// * 1 <= capacity\
  \ <= 10\nlong max_fill(std::vector<std::vector<long>> grid, long capacity) {\n"
tests: "}\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)0,\
  \ (long)0, (long)1, (long)0}), (std::vector<long>)std::vector<long>({(long)0, (long)1,\
  \ (long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1, (long)1, (long)1,\
  \ (long)1})})), (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)0,\
  \ (long)0, (long)1, (long)1}), (std::vector<long>)std::vector<long>({(long)0, (long)0,\
  \ (long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1, (long)1, (long)1,\
  \ (long)1}), (std::vector<long>)std::vector<long>({(long)0, (long)1, (long)1, (long)1})})),\
  \ (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)0,\
  \ (long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)0, (long)0, (long)0})})),\
  \ (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)1,\
  \ (long)1, (long)1, (long)1}), (std::vector<long>)std::vector<long>({(long)1, (long)1,\
  \ (long)1, (long)1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)1,\
  \ (long)1, (long)1, (long)1}), (std::vector<long>)std::vector<long>({(long)1, (long)1,\
  \ (long)1, (long)1})})), (9)) == (2));\n}\n"
completions: ["    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long cnt = 0;\n    long ans = INT_MAX;\n    long long ans = INT_MAX;\n  \
    \  for(long i = 0; i < n; i++) {\n        for(long j = 0; j < m; j++) {\n    \
    \        if(grid[i][j] == 1) {\n                cnt += 1;\n                if(cnt\
    \ > ans) {\n                    ans = cnt;\n                }\n            }\n\
    \        }\n    }\n    for(long i = 0; i < n; i++) {\n        for(long j = 0;\
    \ j < m; j++) {\n            if(grid[i][j] == 0) {\n                cnt -= 1;\n\
    \                if(cnt < 0) {\n                    ans = cnt;\n             \
    \   }\n            }\n        }\n    }\n    return ans;", "    // Write your code\
    \ here\n    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long long ans1 = 0;\n    long long ans2 = 0;\n    long long ans3 = 0;\n \
    \   long long ans4 = 0;\n    long long ans5 = 0;\n    long long ans6 = 0;\n  \
    \  long long ans7 = 0;\n    long long ans8 = 0;\n    long long ans9 = 0;\n   \
    \ long long ans10 = 0;\n    long long ans11 = 0;\n    long long ans12 = 0;\n \
    \   long long ans13 = 0;\n    long long ans14 = 0;\n    long long ans15 = 0;\n\
    \    long long ans16 = 0;\n    long long ans17 = 0;\n    long long ans18 = 0;\n\
    \    long long ans19 = 0;\n    long long ans20 = 0;\n    long long ansp = 0;\n\
    \    long long anss = 0;\n    long long anst = 0;\n    long long ansj = 0;\n \
    \   long long ansk = 0;\n    long long ans4p = 0;\n    long long ans5p = 0;\n\
    \    long long ans6p = 0;\n    long long ans7p = 0;\n    long long ans8p = 0;\n\
    \    long long ans9p = 0;\n    long long ans10p = 0;\n    long long ans11p = 0;\n\
    \    long long ans12p = 0;\n    long long ans13p = 0;\n    long long ans14p =\
    \ 0;\n    long long ans15p = 0;\n    long long ans16p = 0;\n    long long ans17p\
    \ = 0;\n    long long ans18p = 0;\n    long long ans19p = 0;\n    long long ans20p\
    \ = 0;\n    long long anspp = 0;\n    long long ansss = 0;\n    long long anstt\
    \ = 0;\n    long long ansjt = 0;\n    long long anskt = 0;\n    long long ans4pp\
    \ = 0;\n    long long ans5pp = 0;\n    long long ans6pp = 0;\n    long long ans7pp\
    \ = 0;\n    long long ans8pp = 0;\n    long long ans9pp = 0;\n    long long ans10pp\
    \ = 0;\n    long long ans11pp = 0;\n    long long ans12pp = 0;\n    long long\
    \ ans13pp = 0;\n    long long ans14pp = 0;\n    long long ans15pp = 0;\n    long\
    \ long ans16pp = 0;\n    long long ans17pp = 0;\n    long long ans18pp = 0;\n\
    \    long long ans19pp = 0;\n    long long ans20pp = 0;\n    long long an", " \
    \   // Your code here\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long long ans = 0;\n    long long sum = 0;\n    long\
    \ long cur = 0;\n    long long max = 0;\n    long long cur2 = 0;\n    long long\
    \ max2 = 0;\n    long long cur3 = 0;\n    long long max3 = 0;\n    long long cur4\
    \ = 0;\n    long long max4 = 0;\n    long long cur5 = 0;\n    long long max5 =\
    \ 0;\n    long long cur6 = 0;\n    long long max6 = 0;\n    long long cur7 = 0;\n\
    \    long long max7 = 0;\n    long long cur8 = 0;\n    long long max8 = 0;\n \
    \   long long cur9 = 0;\n    long long max9 = 0;\n    long long cur10 = 0;\n \
    \   long long max10 = 0;\n    long long cur11 = 0;\n    long long max11 = 0;\n\
    \    long long cur12 = 0;\n    long long max12 = 0;\n    long long cur13 = 0;\n\
    \    long long max13 = 0;\n    long long cur14 = 0;\n    long long max14 = 0;\n\
    \    long long cur15 = 0;\n    long long max15 = 0;\n    long long cur16 = 0;\n\
    \    long long max16 = 0;\n    long long cur17 = 0;\n    long long max17 = 0;\n\
    \    long long cur18 = 0;\n    long long max18 = 0;\n    long long cur19 = 0;\n\
    \    long long max19 = 0;\n    long long cur20 = 0;\n    long long max20 = 0;\n\
    \    long long cur21 = 0;\n    long long max21 = 0;\n    long long cur22 = 0;\n\
    \    long long max22 = 0;\n    long long cur23 = 0;\n    long long max23 = 0;\n\
    \    long long cur24 = 0;\n    long long max24 = 0;\n    long long cur25 = 0;\n\
    \    long long max25 = 0;\n    long long cur26 = 0;\n    long long max26 = 0;\n\
    \    long long cur27 = 0;\n    long long max27 = 0;\n    long long cur28 = 0;\n\
    \    long long max28 = 0;\n    long long cur29 = 0;\n    long long max29 = 0;\n\
    \    long long cur30 = 0;\n    long long max30 = 0;\n    long long cur31 = 0;\n\
    \    long long max31 = 0;\n    long long cur32 = 0;\n    long long max32 = 0;\n\
    \    long long cur33 = 0;\n    long long max33 = 0;\n    long long cur34 = 0;\n\
    \    long long max34 = 0;\n    long long cur35 = 0;\n    long ", "    // write\
    \ your code here\n    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long count = 0;\n    long long ans = 0;\n    long long max = 0;\n    long\
    \ long min = 0;\n    long long sum = 0;\n    long long cur = 0;\n    long long\
    \ cur2 = 0;\n    long long cur3 = 0;\n    long long cur4 = 0;\n    long long cur5\
    \ = 0;\n    long long cur6 = 0;\n    long long cur7 = 0;\n    long long cur8 =\
    \ 0;\n    long long cur9 = 0;\n    long long cur10 = 0;\n    long long cur11 =\
    \ 0;\n    long long cur12 = 0;\n    long long cur13 = 0;\n    long long cur14\
    \ = 0;\n    long long cur15 = 0;\n    long long cur16 = 0;\n    long long cur17\
    \ = 0;\n    long long cur18 = 0;\n    long long cur19 = 0;\n    long long cur20\
    \ = 0;\n    long long cur21 = 0;\n    long long cur22 = 0;\n    long long cur23\
    \ = 0;\n    long long cur24 = 0;\n    long long cur25 = 0;\n    long long cur26\
    \ = 0;\n    long long cur27 = 0;\n    long long cur28 = 0;\n    long long cur29\
    \ = 0;\n    long long cur30 = 0;\n    long long cur31 = 0;\n    long long cur32\
    \ = 0;\n    long long cur33 = 0;\n    long long cur34 = 0;\n    long long cur35\
    \ = 0;\n    long long cur36 = 0;\n    long long cur37 = 0;\n    long long cur38\
    \ = 0;\n    long long cur39 = 0;\n    long long cur40 = 0;\n    long long cur41\
    \ = 0;\n    long long cur42 = 0;\n    long long cur43 = 0;\n    long long cur44\
    \ = 0;\n    long long cur45 = 0;\n    long long cur46 = 0;\n    long long cur47\
    \ = 0;\n    long long cur48 = 0;\n    long long cur49 = 0;\n    long long cur50\
    \ = 0;\n    long long cur51 = 0;\n    long long cur52 = 0;\n    long long cur53\
    \ = 0;\n    long long cur54 = 0;\n    long long cur55 = 0;\n    long long cur56\
    \ = 0;\n    long long cur57 = 0;\n    long long cur58 = 0;\n    long long cur59\
    \ = 0;\n    long long cur60 = 0;\n    long long cur61 = 0;\n    long long cur62\
    \ = 0;\n    long long cur63 = 0;\n    long long cur64 = 0;\n    long long cur65\
    \ = 0;\n    long long cur66 = 0;\n    long ", "    // write your code here\n \
    \   long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n \
    \   long count = 0;\n    long long sum = 0;\n    for(long i = 0; i < n; i++) {\n\
    \        for(long j = 0; j < m; j++) {\n            sum += grid[i][j];\n     \
    \       if(sum >= capacity) {\n                ans += 1;\n                count\
    \ = 0;\n                sum = 0;\n            }\n            else if(sum < capacity)\
    \ {\n                count++;\n                sum += grid[i][j];\n          \
    \  }\n        }\n    }\n    return ans;", "    // write your code here\n    long\
    \ ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long\
    \ count = 0;\n    long long max = 0;\n    long long min = 0;\n    long long sum\
    \ = 0;\n    long long sum2 = 0;\n    long long sum3 = 0;\n    long long sum4 =\
    \ 0;\n    long long sum5 = 0;\n    long long sum6 = 0;\n    long long sum7 = 0;\n\
    \    long long sum8 = 0;\n    long long sum9 = 0;\n    long long sum10 = 0;\n\
    \    long long sum11 = 0;\n    long long sum12 = 0;\n    long long sum13 = 0;\n\
    \    long long sum14 = 0;\n    long long sum15 = 0;\n    long long sum16 = 0;\n\
    \    long long sum17 = 0;\n    long long sum18 = 0;\n    long long sum19 = 0;\n\
    \    long long sum20 = 0;\n    long long sum21 = 0;\n    long long sum22 = 0;\n\
    \    long long sum23 = 0;\n    long long sum24 = 0;\n    long long sum25 = 0;\n\
    \    long long sum26 = 0;\n    long long sum27 = 0;\n    long long sum28 = 0;\n\
    \    long long sum29 = 0;\n    long long sum30 = 0;\n    long long sum31 = 0;\n\
    \    long long sum32 = 0;\n    long long sum33 = 0;\n    long long sum34 = 0;\n\
    \    long long sum35 = 0;\n    long long sum36 = 0;\n    long long sum37 = 0;\n\
    \    long long sum38 = 0;\n    long long sum39 = 0;\n    long long sum40 = 0;\n\
    \    long long sum41 = 0;\n    long long sum42 = 0;\n    long long sum43 = 0;\n\
    \    long long sum44 = 0;\n    long long sum45 = 0;\n    long long sum46 = 0;\n\
    \    long long sum47 = 0;\n    long long sum48 = 0;\n    long long sum49 = 0;\n\
    \    long long sum50 = 0;\n    long long sum51 = 0;\n    long long sum52 = 0;\n\
    \    long long sum53 = 0;\n    long long sum54 = 0;\n    long long sum55 = 0;\n\
    \    long long sum56 = 0;\n    long long sum57 = 0;\n    long long sum58 = 0;\n\
    \    long long sum59 = 0;\n    long long sum60 = 0;\n    long long sum61 = 0;\n\
    \    long long sum62 = 0;\n    long long sum63 = 0;\n    long long sum64 = 0;\n\
    \    long long sum65 = 0;\n    long long sum66 = 0;\n    long long sum67 = 0;\n\
    \    long long sum68 = 0;\n", "    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long an = n;\n    long bn = m;\n    long cn\
    \ = n;\n    long cd = m;\n    long dn = n;\n    long dm = m;\n    long dc = n;\n\
    \    long dd = m;\n    long dn = n;\n    long dm = m;\n    long dc = n;\n    long\
    \ dd = m;\n    long dn = n;\n    long dm = m;\n    long dc = n;\n    long dd =\
    \ m;\n    long dn = n;\n    long dm = m;\n    long dc = n;\n    long dd = m;\n\
    \    long dn = n;\n    long dm = m;\n    long dc = n;\n    long dd = m;\n    long\
    \ dn = n;\n    long dm = m;\n    long dc = n;\n    long dd = m;\n    long dn =\
    \ n;\n    long dm = m;\n    long dc = n;\n    long dd = m;\n    long dn = n;\n\
    \    long dm = m;\n    long dc = n;\n    long dd = m;\n    long dn = n;\n    long\
    \ dm = m;\n    long dc = n;\n    long dd = m;\n    long dn = n;\n    long dm =\
    \ m;\n    long dc = n;\n    long dd = m;\n    long dn = n;\n    long dm = m;\n\
    \    long dc = n;\n    long dd = m;\n    long dn = n;\n    long dm = m;\n    long\
    \ dc = n;\n    long dd = m;\n    long dn = n;\n    long dm = m;\n    long dc =\
    \ n;\n    long dd = m;\n    long dn = n;\n    long dm = m;\n    long dc = n;\n\
    \    long dd = m;\n    long dn = n;\n    long dm = m;\n    long dc = n;\n    long\
    \ dd = m;\n    long dn = n;\n    long dm = m;\n    long dc = n;\n    long dd =\
    \ m;\n    long dn = n;\n    long dm = m;\n    long dc = n;\n    long dd = m;\n\
    \    long dn = n;\n    long dm = m;\n    long dc = n;\n    long dd = m;\n    long\
    \ dn = n;\n    long dm = m;\n    long dc = n;\n    long dd = m;\n    long dn =\
    \ n;\n    long dm = m;\n", "    long ans = 0;\n    long n = grid.size();\n   \
    \ long m = grid[0].size();\n    long cnt = 0;\n    long ans1 = 0;\n    long ans2\
    \ = 0;\n    long ans3 = 0;\n    long ans_temp = 0;\n    long ans_temp1 = 0;\n\
    \    long ans_temp2 = 0;\n    long ans_temp3 = 0;\n    long ans_temp4 = 0;\n \
    \   long ans_temp5 = 0;\n    long ans_temp6 = 0;\n    long ans_temp7 = 0;\n  \
    \  long ans_temp8 = 0;\n    long ans_temp9 = 0;\n    long ans_temp10 = 0;\n  \
    \  long ans_temp11 = 0;\n    long ans_temp12 = 0;\n    long ans_temp13 = 0;\n\
    \    long ans_temp14 = 0;\n    long ans_temp15 = 0;\n    long ans_temp16 = 0;\n\
    \    long ans_temp17 = 0;\n    long ans_temp18 = 0;\n    long ans_temp19 = 0;\n\
    \    long ans_temp20 = 0;\n    long ans_temp21 = 0;\n    long ans_temp22 = 0;\n\
    \    long ans_temp23 = 0;\n    long ans_temp24 = 0;\n    long ans_temp25 = 0;\n\
    \    long ans_temp26 = 0;\n    long ans_temp27 = 0;\n    long ans_temp28 = 0;\n\
    \    long ans_temp29 = 0;\n    long ans_temp30 = 0;\n    long ans_temp31 = 0;\n\
    \    long ans_temp32 = 0;\n    long ans_temp33 = 0;\n    long ans_temp34 = 0;\n\
    \    long ans_temp35 = 0;\n    long ans_temp36 = 0;\n    long ans_temp37 = 0;\n\
    \    long ans_temp38 = 0;\n    long ans_temp39 = 0;\n    long ans_temp40 = 0;\n\
    \    long ans_temp41 = 0;\n    long ans_temp42 = 0;\n    long ans_temp43 = 0;\n\
    \    long ans_temp44 = 0;\n    long ans_temp45 = 0;\n    long ans_temp46 = 0;\n\
    \    long ans_temp47 = 0;\n    long ans_temp48 = 0;\n    long ans_temp49 = 0;\n\
    \    long ans_temp50 = 0;\n    long ans_temp51 = 0;\n    long ans_temp52 = 0;\n\
    \    long ans_temp53 = 0;\n    long ans_temp54 = 0;\n    long ans_temp55 = 0;\n\
    \    long ans_temp56 = 0;\n    long ans_temp57 = 0;\n    long ans_temp58 = 0;\n\
    \    long an", "    // Your code here\n    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long long ans = std::numeric_limits<long long>::max();\n\
    \    long long ans1 = 0;\n    long long ans2 = 0;\n    long long ans3 = 0;\n \
    \   long long ans4 = 0;\n    long long ans5 = 0;\n    long long ans6 = 0;\n  \
    \  long long ans7 = 0;\n    long long ans8 = 0;\n    long long ans9 = 0;\n   \
    \ long long ans10 = 0;\n    long long ans11 = 0;\n    long long ans12 = 0;\n \
    \   long long ans13 = 0;\n    long long ans14 = 0;\n    long long ans15 = 0;\n\
    \    long long ans16 = 0;\n    long long ans17 = 0;\n    long long ans18 = 0;\n\
    \    long long ans19 = 0;\n    long long ans20 = 0;\n    long long ansp = 0;\n\
    \    long long ansp1 = 0;\n    long long ansp2 = 0;\n    long long ansp3 = 0;\n\
    \    long long ansp4 = 0;\n    long long ansp5 = 0;\n    long long ansp6 = 0;\n\
    \    long long ansp7 = 0;\n    long long ansp8 = 0;\n    long long ansp9 = 0;\n\
    \    long long ansp10 = 0;\n    long long ansp11 = 0;\n    long long ansp12 =\
    \ 0;\n    long long ansp13 = 0;\n    long long ansp14 = 0;\n    long long ansp15\
    \ = 0;\n    long long ansp16 = 0;\n    long long ansp17 = 0;\n    long long ansp18\
    \ = 0;\n    long long ansp19 = 0;\n    long long ansp20 = 0;\n    long long ansp21\
    \ = 0;\n    long long ansp22 = 0;\n    long long ansp23 = 0;\n    long long ansp24\
    \ = 0;\n    long long ansp25 = 0;\n    long long ansp26 = 0;\n    long long ansp27\
    \ = 0;\n    long long ansp28 = 0;\n    long long ansp29 = 0;\n    long long ansp30\
    \ = 0;\n    long long ansp31 = 0;\n    long long ansp32 = 0;\n    long long ansp33\
    \ = 0;\n    long long ansp34 = 0;\n    long long ansp35 = 0;\n    long long ansp36\
    \ = 0;\n    long long ansp37 = 0;\n    long long ansp38 = 0;\n    long long ansp39\
    \ = 0;\n    long long ansp40 = 0;\n    long long ansp41 = 0;\n    long long ansp",
  "    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n  \
    \  long long an = n * m;\n    long long cnt = 0;\n    for(long i = 0; i < n; i++)\
    \ {\n        for(long j = 0; j < m; j++) {\n            if(grid[i][j] == 1) {\n\
    \                cnt += 1;\n                ans = std::max(ans, cnt);\n      \
    \          cnt -= 1;\n                ans = std::max(ans, cnt);\n            }\n\
    \        }\n    }\n    return ans;", "    // Your code here\n    long ans = 0;\n\
    \    long n = grid.size();\n    long m = grid[0].size();\n    long long an = 0;\n\
    \    long long sum = 0;\n    long long sum2 = 0;\n    long long sum3 = 0;\n  \
    \  long long sum4 = 0;\n    long long sum5 = 0;\n    long long sum6 = 0;\n   \
    \ long long sum7 = 0;\n    long long sum8 = 0;\n    long long sum9 = 0;\n    long\
    \ long sum10 = 0;\n    long long sum11 = 0;\n    long long sum12 = 0;\n    long\
    \ long sum13 = 0;\n    long long sum14 = 0;\n    long long sum15 = 0;\n    long\
    \ long sum16 = 0;\n    long long sum17 = 0;\n    long long sum18 = 0;\n    long\
    \ long sum19 = 0;\n    long long sum20 = 0;\n    long long sum21 = 0;\n    long\
    \ long sum22 = 0;\n    long long sum23 = 0;\n    long long sum24 = 0;\n    long\
    \ long sum25 = 0;\n    long long sum26 = 0;\n    long long sum27 = 0;\n    long\
    \ long sum28 = 0;\n    long long sum29 = 0;\n    long long sum30 = 0;\n    long\
    \ long sum31 = 0;\n    long long sum32 = 0;\n    long long sum33 = 0;\n    long\
    \ long sum34 = 0;\n    long long sum35 = 0;\n    long long sum36 = 0;\n    long\
    \ long sum37 = 0;\n    long long sum38 = 0;\n    long long sum39 = 0;\n    long\
    \ long sum40 = 0;\n    long long sum41 = 0;\n    long long sum42 = 0;\n    long\
    \ long sum43 = 0;\n    long long sum44 = 0;\n    long long sum45 = 0;\n    long\
    \ long sum46 = 0;\n    long long sum47 = 0;\n    long long sum48 = 0;\n    long\
    \ long sum49 = 0;\n    long long sum50 = 0;\n    long long sum51 = 0;\n    long\
    \ long sum52 = 0;\n    long long sum53 = 0;\n    long long sum54 = 0;\n    long\
    \ long sum55 = 0;\n    long long sum56 = 0;\n    long long sum57 = 0;\n    long\
    \ long sum58 = 0;\n    long long sum59 = 0;\n    long long sum60 = 0;\n    long\
    \ long sum61 = 0;\n    long long sum62 = 0;\n    long long sum63 = 0;\n    long\
    \ long sum64 = 0;\n    long long sum65 = 0;\n    long long sum66 = 0;\n    long\
    \ long sum67 = 0;\n    long long sum68 = 0;\n    long long sum69 = 0;\n    long\
    \ long ", "    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long cnt = 0;\n    std::vector<long> b(n);\n    std::vector<long> c(m);\n\
    \    for(long i = 0; i < n; i++) {\n        b[i] = 0;\n    }\n    for(long i =\
    \ 0; i < m; i++) {\n        c[i] = 0;\n    }\n    for(long i = 0; i < n; i++)\
    \ {\n        for(long j = 0; j < m; j++) {\n            if(c[j] >= capacity) {\n\
    \                cnt++;\n                c[j] = 0;\n            } else {\n   \
    \             c[j] += grid[i][j];\n            }\n        }\n    }\n    for(long\
    \ i = 0; i < n; i++) {\n        for(long j = 0; j < m; j++) {\n            if(b[j]\
    \ >= capacity) {\n                ans += cnt;\n                b[j] = 0;\n   \
    \         } else {\n                b[j] += c[j];\n            }\n        }\n\
    \    }\n    return ans;", "    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long long an = 0;\n    long long an2 = 0;\n    long\
    \ long an3 = 0;\n    long long an4 = 0;\n    long long an5 = 0;\n    long long\
    \ an6 = 0;\n    long long an7 = 0;\n    long long an8 = 0;\n    long long an9\
    \ = 0;\n    long long an10 = 0;\n    long long an11 = 0;\n    long long an12 =\
    \ 0;\n    long long an13 = 0;\n    long long an14 = 0;\n    long long an15 = 0;\n\
    \    long long an16 = 0;\n    long long an17 = 0;\n    long long an18 = 0;\n \
    \   long long an19 = 0;\n    long long an20 = 0;\n    long long an21 = 0;\n  \
    \  long long an22 = 0;\n    long long an23 = 0;\n    long long an24 = 0;\n   \
    \ long long an25 = 0;\n    long long an26 = 0;\n    long long an27 = 0;\n    long\
    \ long an28 = 0;\n    long long an29 = 0;\n    long long an30 = 0;\n    long long\
    \ an31 = 0;\n    long long an32 = 0;\n    long long an33 = 0;\n    long long an34\
    \ = 0;\n    long long an35 = 0;\n    long long an36 = 0;\n    long long an37 =\
    \ 0;\n    long long an38 = 0;\n    long long an39 = 0;\n    long long an40 = 0;\n\
    \    long long an41 = 0;\n    long long an42 = 0;\n    long long an43 = 0;\n \
    \   long long an44 = 0;\n    long long an45 = 0;\n    long long an46 = 0;\n  \
    \  long long an47 = 0;\n    long long an48 = 0;\n    long long an49 = 0;\n   \
    \ long long an50 = 0;\n    long long an51 = 0;\n    long long an52 = 0;\n    long\
    \ long an53 = 0;\n    long long an54 = 0;\n    long long an55 = 0;\n    long long\
    \ an56 = 0;\n    long long an57 = 0;\n    long long an58 = 0;\n    long long an59\
    \ = 0;\n    long long an60 = 0;\n    long long an61 = 0;\n    long long an62 =\
    \ 0;\n    long long an63 = 0;\n    long long an64 = 0;\n    long long an65 = 0;\n\
    \    long long an66 = 0;\n    long long an67 = 0;\n    long long an68 = 0;\n \
    \   long long an69 = 0;\n    long long an70 = 0;\n    long long an71 = 0;\n",
  "    // write your code here\n    long ans = 0;\n    long n = grid.size();\n   \
    \ long m = grid[0].size();\n    long ans = 0;\n    long long ans = 0;\n    long\
    \ long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long\
    \ ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans\
    \ = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n\
    \    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long\
    \ long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long\
    \ ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans\
    \ = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n\
    \    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long\
    \ long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long\
    \ ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans\
    \ = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n\
    \    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long\
    \ long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long\
    \ ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans\
    \ = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n\
    \    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long\
    \ long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long\
    \ ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans\
    \ = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n\
    \    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long\
    \ long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long\
    \ ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans\
    \ = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n\
    \    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long\
    \ long ans = 0;\n    long ", "    long ans = 0;\n    long n = grid.size();\n \
    \   long m = grid[0].size();\n    long an = n * m;\n    long long ans = an;\n\
    \    long long an = ans;\n    long long ans = an;\n    long long an = ans;\n \
    \   long long ans = an;\n    long long an = ans;\n    long long ans = an;\n  \
    \  long long an = ans;\n    long long ans = an;\n    long long an = ans;\n   \
    \ long long ans = an;\n    long long an = ans;\n    long long ans = an;\n    long\
    \ long an = ans;\n    long long ans = an;\n    long long an = ans;\n    long long\
    \ ans = an;\n    long long an = ans;\n    long long ans = an;\n    long long an\
    \ = ans;\n    long long ans = an;\n    long long an = ans;\n    long long ans\
    \ = an;\n    long long an = ans;\n    long long ans = an;\n    long long an =\
    \ ans;\n    long long ans = an;\n    long long an = ans;\n    long long ans =\
    \ an;\n    long long an = ans;\n    long long ans = an;\n    long long an = ans;\n\
    \    long long ans = an;\n    long long an = ans;\n    long long ans = an;\n \
    \   long long an = ans;\n    long long ans = an;\n    long long an = ans;\n  \
    \  long long ans = an;\n    long long an = ans;\n    long long ans = an;\n   \
    \ long long an = ans;\n    long long ans = an;\n    long long an = ans;\n    long\
    \ long ans = an;\n    long long an = ans;\n    long long ans = an;\n    long long\
    \ an = ans;\n    long long ans = an;\n    long long an = ans;\n    long long ans\
    \ = an;\n    long long an = ans;\n    long long ans = an;\n    long long an =\
    \ ans;\n    long long ans = an;\n    long long an = ans;\n    long long ans =\
    \ an;\n    long long an = ans;\n    long long ans = an;\n    long long an = ans;\n\
    \    long long ans = ", "    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long long an = 0;\n    long long cnt = 0;\n    long\
    \ long ans = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n    long long\
    \ cnt = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n    long long cnt\
    \ = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n\
    \    long long cnt = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n    long\
    \ long cnt = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n    long long\
    \ cnt = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n    long long cnt\
    \ = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n\
    \    long long cnt = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n    long\
    \ long cnt = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n    long long\
    \ cnt = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n    long long cnt\
    \ = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n\
    \    long long cnt = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n    long\
    \ long cnt = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n    long long\
    \ cnt = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n    long long cnt\
    \ = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n\
    \    long long cnt = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n    long\
    \ long cnt = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n    long long\
    \ cnt = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n    long long cnt\
    \ = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n\
    \    long long cnt = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n    long\
    \ long cnt = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n    long long\
    \ cnt = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n    long long cnt\
    \ = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n\
    \    long long cnt = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n    long\
    \ long cnt = 0;\n    long long cnt = 0;\n", "    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long cnt = 0;\n    std::vector<long> b(n);\n\
    \    std::vector<long> c(m);\n    long ans = std::numeric_limits<long>::max();\n\
    \    for(long i = 0; i < n; i++) {\n        b[i] = 0;\n    }\n    for(long i =\
    \ 0; i < m; i++) {\n        c[i] = 0;\n    }\n    for(long i = 0; i < n; i++)\
    \ {\n        for(long j = 0; j < m; j++) {\n            if(c[j] == 0) {\n    \
    \            if(b[j] == 0) {\n                    b[j] = 1;\n                \
    \    c[j] = 0;\n                    ans = std::min(ans, j - 1);\n            \
    \    }\n                else {\n                    b[j] = 0;\n              \
    \      c[j] = 1;\n                    ans = std::min(ans, j + 1);\n          \
    \      }\n            }\n        }\n    }\n    return ans;", "    // write your\
    \ code here\n    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long long ans1 = 0;\n    long long ans2 = 0;\n    long long ans3 = 0;\n \
    \   long long ans4 = 0;\n    long long ans5 = 0;\n    long long ans6 = 0;\n  \
    \  long long ans7 = 0;\n    long long ans8 = 0;\n    long long ans9 = 0;\n   \
    \ long long ans10 = 0;\n    long long ans11 = 0;\n    long long ans12 = 0;\n \
    \   long long ans13 = 0;\n    long long ans14 = 0;\n    long long ans15 = 0;\n\
    \    long long ans16 = 0;\n    long long ans17 = 0;\n    long long ans18 = 0;\n\
    \    long long ans19 = 0;\n    long long ans20 = 0;\n    long long ansp = 0;\n\
    \    long long ansp1 = 0;\n    long long ansp2 = 0;\n    long long ansp3 = 0;\n\
    \    long long ansp4 = 0;\n    long long ansp5 = 0;\n    long long ansp6 = 0;\n\
    \    long long ansp7 = 0;\n    long long ansp8 = 0;\n    long long ansp9 = 0;\n\
    \    long long ansp10 = 0;\n    long long ansp11 = 0;\n    long long ansp12 =\
    \ 0;\n    long long ansp13 = 0;\n    long long ansp14 = 0;\n    long long ansp15\
    \ = 0;\n    long long ansp16 = 0;\n    long long ansp17 = 0;\n    long long ansp18\
    \ = 0;\n    long long ansp19 = 0;\n    long long ansp20 = 0;\n    long long ansp21\
    \ = 0;\n    long long ansp22 = 0;\n    long long ansp23 = 0;\n    long long ansp24\
    \ = 0;\n    long long ansp25 = 0;\n    long long ansp26 = 0;\n    long long ansp27\
    \ = 0;\n    long long ansp28 = 0;\n    long long ansp29 = 0;\n    long long ansp30\
    \ = 0;\n    long long ansp31 = 0;\n    long long ansp32 = 0;\n    long long ansp33\
    \ = 0;\n    long long ansp34 = 0;\n    long long ansp35 = 0;\n    long long ansp36\
    \ = 0;\n    long long ansp37 = 0;\n    long long ansp38 = 0;\n    long long ansp39\
    \ = 0;\n    long long ansp40 = 0;\n    long long ansp41 = 0;\n    long long ansp42\
    \ = 0;\n    long long ansp43 = 0;\n    long long ", "    long ans = 0;\n    long\
    \ n = grid.size();\n    long m = grid[0].size();\n    long ans = std::numeric_limits<long>::max();\n\
    \    long cnt = 0;\n    long ans = std::numeric_limits<long>::max();\n    long\
    \ cnt = 0;\n    long cnt2 = 0;\n    long cnt3 = 0;\n    long cnt4 = 0;\n    long\
    \ cnt5 = 0;\n    long cnt6 = 0;\n    long cnt7 = 0;\n    long cnt8 = 0;\n    long\
    \ cnt9 = 0;\n    long cnt10 = 0;\n    long cnt11 = 0;\n    long cnt12 = 0;\n \
    \   long cnt13 = 0;\n    long cnt14 = 0;\n    long cnt15 = 0;\n    long cnt16\
    \ = 0;\n    long cnt17 = 0;\n    long cnt18 = 0;\n    long cnt19 = 0;\n    long\
    \ cnt20 = 0;\n    long cnt21 = 0;\n    long cnt22 = 0;\n    long cnt23 = 0;\n\
    \    long cnt24 = 0;\n    long cnt25 = 0;\n    long cnt26 = 0;\n    long cnt27\
    \ = 0;\n    long cnt28 = 0;\n    long cnt29 = 0;\n    long cnt30 = 0;\n    long\
    \ cnt31 = 0;\n    long cnt32 = 0;\n    long cnt33 = 0;\n    long cnt34 = 0;\n\
    \    long cnt35 = 0;\n    long cnt36 = 0;\n    long cnt37 = 0;\n    long cnt38\
    \ = 0;\n    long cnt39 = 0;\n    long cnt40 = 0;\n    long cnt41 = 0;\n    long\
    \ cnt42 = 0;\n    long cnt43 = 0;\n    long cnt44 = 0;\n    long cnt45 = 0;\n\
    \    long cnt46 = 0;\n    long cnt47 = 0;\n    long cnt48 = 0;\n    long cnt49\
    \ = 0;\n    long cnt50 = 0;\n    long cnt51 = 0;\n    long cnt52 = 0;\n    long\
    \ cnt53 = 0;\n    long cnt54 = 0;\n    long cnt55 = 0;\n    long cnt56 = 0;\n\
    \    long cnt57 = 0;\n    long cnt58 = 0;\n    long cnt59 = 0;\n    long cnt60\
    \ = 0;\n    long cnt61 = 0;\n    long cnt62 = 0;\n    long cnt63 = 0;\n    long\
    \ cnt64 = 0;\n    long cnt65 = 0;\n    long cnt66 = 0;\n    long cnt67 = 0;\n\
    \    long cnt68 = 0;\n    long cnt69 = 0;\n    long cnt70 = 0;\n    long cnt71\
    \ = 0;\n    long cnt72 = 0;\n    long cnt73 = 0;\n    long cnt74 = 0;\n    long\
    \ cnt75 = 0;\n    long cnt76 = 0;\n    long cnt77 = 0;\n    long cnt78", "   \
    \ long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n   \
    \ long cnt = 0;\n    long ans1 = 0;\n    long ans2 = 0;\n    long ans3 = 0;\n\
    \    long ans_temp = 0;\n    long ans_temp1 = 0;\n    long ans_temp2 = 0;\n  \
    \  long ans_temp3 = 0;\n    long ans_temp4 = 0;\n    long ans_temp5 = 0;\n   \
    \ long ans_temp6 = 0;\n    long ans_temp7 = 0;\n    long ans_temp8 = 0;\n    long\
    \ ans_temp9 = 0;\n    long ans_temp10 = 0;\n    long ans_temp11 = 0;\n    long\
    \ ans_temp12 = 0;\n    long ans_temp13 = 0;\n    long ans_temp14 = 0;\n    long\
    \ ans_temp15 = 0;\n    long ans_temp16 = 0;\n    long ans_temp17 = 0;\n    long\
    \ ans_temp18 = 0;\n    long ans_temp19 = 0;\n    long ans_temp20 = 0;\n    long\
    \ ans_temp21 = 0;\n    long ans_temp22 = 0;\n    long ans_temp23 = 0;\n    long\
    \ ans_temp24 = 0;\n    long ans_temp25 = 0;\n    long ans_temp26 = 0;\n    long\
    \ ans_temp27 = 0;\n    long ans_temp28 = 0;\n    long ans_temp29 = 0;\n    long\
    \ ans_temp30 = 0;\n    long ans_temp31 = 0;\n    long ans_temp32 = 0;\n    long\
    \ ans_temp33 = 0;\n    long ans_temp34 = 0;\n    long ans_temp35 = 0;\n    long\
    \ ans_temp36 = 0;\n    long ans_temp37 = 0;\n    long ans_temp38 = 0;\n    long\
    \ ans_temp39 = 0;\n    long ans_temp40 = 0;\n    long ans_temp41 = 0;\n    long\
    \ ans_temp42 = 0;\n    long ans_temp43 = 0;\n    long ans_temp44 = 0;\n    long\
    \ ans_temp45 = 0;\n    long ans_temp46 = 0;\n    long ans_temp47 = 0;\n    long\
    \ ans_temp48 = 0;\n    long ans_temp49 = 0;\n    long ans_temp50 = 0;\n    long\
    \ ans_temp51 = 0;\n    long ans_temp52 = 0;\n    long ans_temp53 = 0;\n    long\
    \ ans_temp54 = 0;\n    long ans_temp55 = 0;\n    long ans_temp56 = 0;\n    long\
    \ ans_temp57 = 0;\n    long ans_temp58 = 0;\n    long an", "    // Your code here\n\
    \    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long ans = 0;\n    long count = 0;\n    long long max = 0;\n    long long\
    \ min = 0;\n    long long sum = 0;\n    long long sum2 = 0;\n    long long sum3\
    \ = 0;\n    long long sum4 = 0;\n    long long sum5 = 0;\n    long long sum6 =\
    \ 0;\n    long long sum7 = 0;\n    long long sum8 = 0;\n    long long sum9 = 0;\n\
    \    long long sum10 = 0;\n    long long sum11 = 0;\n    long long sum12 = 0;\n\
    \    long long sum13 = 0;\n    long long sum14 = 0;\n    long long sum15 = 0;\n\
    \    long long sum16 = 0;\n    long long sum17 = 0;\n    long long sum18 = 0;\n\
    \    long long sum19 = 0;\n    long long sum20 = 0;\n    long long sum21 = 0;\n\
    \    long long sum22 = 0;\n    long long sum23 = 0;\n    long long sum24 = 0;\n\
    \    long long sum25 = 0;\n    long long sum26 = 0;\n    long long sum27 = 0;\n\
    \    long long sum28 = 0;\n    long long sum29 = 0;\n    long long sum30 = 0;\n\
    \    long long sum31 = 0;\n    long long sum32 = 0;\n    long long sum33 = 0;\n\
    \    long long sum34 = 0;\n    long long sum35 = 0;\n    long long sum36 = 0;\n\
    \    long long sum37 = 0;\n    long long sum38 = 0;\n    long long sum39 = 0;\n\
    \    long long sum40 = 0;\n    long long sum41 = 0;\n    long long sum42 = 0;\n\
    \    long long sum43 = 0;\n    long long sum44 = 0;\n    long long sum45 = 0;\n\
    \    long long sum46 = 0;\n    long long sum47 = 0;\n    long long sum48 = 0;\n\
    \    long long sum49 = 0;\n    long long sum50 = 0;\n    long long sum51 = 0;\n\
    \    long long sum52 = 0;\n    long long sum53 = 0;\n    long long sum54 = 0;\n\
    \    long long sum55 = 0;\n    long long sum56 = 0;\n    long long sum57 = 0;\n\
    \    long long sum58 = 0;\n    long long sum59 = 0;\n    long long sum60 = 0;\n\
    \    long long sum61 = 0;\n    long long sum62 = 0;\n    long long sum63 = 0;\n\
    \    long long sum64 = 0;\n    long long sum65 = 0;\n    long long sum66 = 0;\n\
    \    long long sum67 = 0;\n    long ", "    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long long an = 0;\n    long long count = 0;\n\
    \    long long cur = 0;\n    long long max = 0;\n    long long cur_cap = 0;\n\
    \    long long max_cap = 0;\n    long long cur_max = 0;\n    long long max_max\
    \ = 0;\n    long long cur_max2 = 0;\n    long long max_max2 = 0;\n    long long\
    \ cur_max3 = 0;\n    long long max_max3 = 0;\n    long long cur_max4 = 0;\n  \
    \  long long max_max4 = 0;\n    long long cur_max5 = 0;\n    long long max_max5\
    \ = 0;\n    long long cur_max6 = 0;\n    long long max_max6 = 0;\n    long long\
    \ cur_max7 = 0;\n    long long max_max7 = 0;\n    long long cur_max8 = 0;\n  \
    \  long long max_max8 = 0;\n    long long cur_max9 = 0;\n    long long max_max9\
    \ = 0;\n    long long cur_max10 = 0;\n    long long max_max10 = 0;\n    long long\
    \ cur_max11 = 0;\n    long long max_max11 = 0;\n    long long cur_max12 = 0;\n\
    \    long long max_max12 = 0;\n    long long cur_max13 = 0;\n    long long max_max13\
    \ = 0;\n    long long cur_max14 = 0;\n    long long max_max14 = 0;\n    long long\
    \ cur_max15 = 0;\n    long long max_max15 = 0;\n    long long cur_max16 = 0;\n\
    \    long long max_max16 = 0;\n    long long cur_max17 = 0;\n    long long max_max17\
    \ = 0;\n    long long cur_max18 = 0;\n    long long max_max18 = 0;\n    long long\
    \ cur_max19 = 0;\n    long long max_max19 = 0;\n    long long cur_max20 = 0;\n\
    \    long long max_max20 = 0;\n    long long cur_max21 = 0;\n    long long max_max21\
    \ = 0;\n    long long cur_max22 = 0;\n    long long max_max22 = 0;\n    long long\
    \ cur_max23 = 0;\n    long long max_max23 = 0;\n    long long cur_max24 = 0;\n\
    \    long long max_max24 = 0;\n    long long cur_max25 = 0;\n    long long max_max25\
    \ = 0;\n    long long cur_max26 = 0;\n    long long max_max26 = 0;\n    long long\
    \ cur_max27 = 0;\n    long long max_max27 = 0;\n    long long cur_max28 = 0;\n\
    \    long long max_max28 = 0;\n    long long cur_max29 = 0;\n    long long max_max29\
    \ = 0;\n    ", "    // write your code here\n    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long long an = n * m;\n    long long an2 =\
    \ an * an;\n    long long an3 = an2 * an;\n    long long an4 = an3 * an;\n   \
    \ long long an5 = an4 * an;\n    long long an6 = an5 * an;\n    long long an7\
    \ = an6 * an;\n    long long an8 = an7 * an;\n    long long an9 = an8 * an;\n\
    \    long long an10 = an9 * an;\n    long long an11 = an10 * an;\n    long long\
    \ an12 = an11 * an;\n    long long an13 = an12 * an;\n    long long an14 = an13\
    \ * an;\n    long long an15 = an14 * an;\n    long long an16 = an15 * an;\n  \
    \  long long an17 = an16 * an;\n    long long an18 = an17 * an;\n    long long\
    \ an19 = an18 * an;\n    long long an20 = an19 * an;\n    long long an21 = an20\
    \ * an;\n    long long an22 = an21 * an;\n    long long an23 = an22 * an;\n  \
    \  long long an24 = an23 * an;\n    long long an25 = an24 * an;\n    long long\
    \ an26 = an25 * an;\n    long long an27 = an26 * an;\n    long long an28 = an27\
    \ * an;\n    long long an29 = an28 * an;\n    long long an30 = an29 * an;\n  \
    \  long long an31 = an30 * an;\n    long long an32 = an31 * an;\n    long long\
    \ an33 = an32 * an;\n    long long an34 = an33 * an;\n    long long an35 = an34\
    \ * an;\n    long long an36 = an35 * an;\n    long long an37 = an36 * an;\n  \
    \  long long an38 = an37 * an;\n    long long an39 = an38 * an;\n    long long\
    \ an40 = an39 * an;\n    long long an41 = an40 * an;\n    long long an42 = an41\
    \ * an;\n    long long an4", "    // Write your code here\n    long ans = 0;\n\
    \    long n = grid.size();\n    long m = grid[0].size();\n    long ans = std::numeric_limits<long>::max();\n\
    \    for(long i = 0; i < n; i++) {\n        for(long j = 0; j < m; j++) {\n  \
    \          if(grid[i][j] == 1) {\n                long cur = grid[i][j];\n   \
    \             long cur_cap = cur;\n                while(cur_cap > 0) {\n    \
    \                if(cur_cap < capacity) {\n                        cur_cap -=\
    \ 1;\n                        ans = std::min(ans, cur_cap);\n                \
    \    }\n                    else {\n                        cur_cap -= capacity;\n\
    \                        ans = std::min(ans, cur_cap);\n                     \
    \   cur_cap -= 1;\n                    }\n                }\n            }\n \
    \       }\n    }\n    return ans;", "    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long long ans_temp = 0;\n    long long temp_ans\
    \ = 0;\n    long long temp_ans_temp = 0;\n    long long temp_ans_temp_temp = 0;\n\
    \    long long temp_ans_temp_temp_temp = 0;\n    long long temp_ans_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp = 0;\n    long\
    \ long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_",
  "    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n  \
    \  long long an = 0;\n    long long sum = 0;\n    long long sum2 = 0;\n    long\
    \ long sum3 = 0;\n    long long sum4 = 0;\n    long long sum5 = 0;\n    long long\
    \ sum6 = 0;\n    long long sum7 = 0;\n    long long sum8 = 0;\n    long long sum9\
    \ = 0;\n    long long sum10 = 0;\n    long long sum11 = 0;\n    long long sum12\
    \ = 0;\n    long long sum13 = 0;\n    long long sum14 = 0;\n    long long sum15\
    \ = 0;\n    long long sum16 = 0;\n    long long sum17 = 0;\n    long long sum18\
    \ = 0;\n    long long sum19 = 0;\n    long long sum20 = 0;\n    long long sum21\
    \ = 0;\n    long long sum22 = 0;\n    long long sum23 = 0;\n    long long sum24\
    \ = 0;\n    long long sum25 = 0;\n    long long sum26 = 0;\n    long long sum27\
    \ = 0;\n    long long sum28 = 0;\n    long long sum29 = 0;\n    long long sum30\
    \ = 0;\n    long long sum31 = 0;\n    long long sum32 = 0;\n    long long sum33\
    \ = 0;\n    long long sum34 = 0;\n    long long sum35 = 0;\n    long long sum36\
    \ = 0;\n    long long sum37 = 0;\n    long long sum38 = 0;\n    long long sum39\
    \ = 0;\n    long long sum40 = 0;\n    long long sum41 = 0;\n    long long sum42\
    \ = 0;\n    long long sum43 = 0;\n    long long sum44 = 0;\n    long long sum45\
    \ = 0;\n    long long sum46 = 0;\n    long long sum47 = 0;\n    long long sum48\
    \ = 0;\n    long long sum49 = 0;\n    long long sum50 = 0;\n    long long sum51\
    \ = 0;\n    long long sum52 = 0;\n    long long sum53 = 0;\n    long long sum54\
    \ = 0;\n    long long sum55 = 0;\n    long long sum56 = 0;\n    long long sum57\
    \ = 0;\n    long long sum58 = 0;\n    long long sum59 = 0;\n    long long sum60\
    \ = 0;\n    long long sum61 = 0;\n    long long sum62 = 0;\n    long long sum63\
    \ = 0;\n    long long sum64 = 0;\n    long long sum65 = 0;\n    long long sum66\
    \ = 0;\n    long long sum67 = 0;\n    long long sum68 = 0;\n    long long sum69\
    \ = 0;\n    long long sum70 = 0;\n    ", "    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long long ans_temp = 0;\n    long long temp_ans\
    \ = 0;\n    long long temp_ans2 = 0;\n    long long temp_ans3 = 0;\n    long long\
    \ temp_ans4 = 0;\n    long long temp_ans5 = 0;\n    long long temp_ans6 = 0;\n\
    \    long long temp_ans7 = 0;\n    long long temp_ans8 = 0;\n    long long temp_ans9\
    \ = 0;\n    long long temp_ans10 = 0;\n    long long temp_ans11 = 0;\n    long\
    \ long temp_ans12 = 0;\n    long long temp_ans13 = 0;\n    long long temp_ans14\
    \ = 0;\n    long long temp_ans15 = 0;\n    long long temp_ans16 = 0;\n    long\
    \ long temp_ans17 = 0;\n    long long temp_ans18 = 0;\n    long long temp_ans19\
    \ = 0;\n    long long temp_ans20 = 0;\n    long long temp_ans21 = 0;\n    long\
    \ long temp_ans22 = 0;\n    long long temp_ans23 = 0;\n    long long temp_ans24\
    \ = 0;\n    long long temp_ans25 = 0;\n    long long temp_ans26 = 0;\n    long\
    \ long temp_ans27 = 0;\n    long long temp_ans28 = 0;\n    long long temp_ans29\
    \ = 0;\n    long long temp_ans30 = 0;\n    long long temp_ans31 = 1;\n    long\
    \ long temp_ans32 = 0;\n    long long temp_ans33 = 0;\n    long long temp_ans34\
    \ = 0;\n    long long temp_ans35 = 0;\n    long long temp_ans36 = 0;\n    long\
    \ long temp_ans37 = 0;\n    long long temp_ans38 = 0;\n    long long temp_ans39\
    \ = 0;\n    long long temp_ans40 = 0;\n    long long temp_ans41 = 1;\n    long\
    \ long temp_ans42 = 0;\n    long long temp_ans43 = 0;\n    long long temp_ans44\
    \ = 0;\n    long long temp_ans45 = 0;\n    long long temp_ans46 = 0;\n    long\
    \ long temp_ans47 = 0;\n    long long temp_ans48 = 0;\n    long long temp_ans49\
    \ = 0;\n    long long temp_ans50 = 0;\n    long long temp_ans51 = 1;\n    long\
    \ long temp_ans52 = 0;\n    long long temp_ans53 = 0;\n    long long temp_ans54\
    \ = 0;\n    long long temp_ans55 = 0;\n    long long temp_ans56 = 0;\n    long\
    \ long temp_ans57 = 0;\n    long long temp_ans58 = 0;\n    long long temp_ans59\
    \ = 0;\n    long long temp_ans60 = 0;\n    long long temp_ans61 = 1;", "    long\
    \ ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long\
    \ long an = n;\n    long long bm = m;\n    long long ans = an;\n    long long\
    \ bn = n;\n    long long bm = m;\n    long long an = n;\n    long long bn = n;\n\
    \    long long bm = m;\n    long long ans = an;\n    long long bn = n;\n    long\
    \ long bm = m;\n    long long an = n;\n    long long bn = n;\n    long long bm\
    \ = m;\n    long long ans = an;\n    long long bn = n;\n    long long bm = m;\n\
    \    long long an = n;\n    long long bn = n;\n    long long bm = m;\n    long\
    \ long ans = an;\n    long long bn = n;\n    long long bm = m;\n    long long\
    \ an = n;\n    long long bn = n;\n    long long bm = m;\n    long long ans = an;\n\
    \    long long bn = n;\n    long long bm = m;\n    long long an = n;\n    long\
    \ long bn = n;\n    long long bm = m;\n    long long ans = an;\n    long long\
    \ bn = n;\n    long long bm = m;\n    long long an = n;\n    long long bn = n;\n\
    \    long long bm = m;\n    long long ans = an;\n    long long bn = n;\n    long\
    \ long bm = m;\n    long long an = n;\n    long long bn = n;\n    long long bm\
    \ = m;\n    long long ans = an;\n    long long bn = n;\n    long long bm = m;\n\
    \    long long an = n;\n    long long bn = n;\n    long long bm = m;\n    long\
    \ long ans = an;\n    long long bn = n;\n    long long bm = m;\n    long long\
    \ an = n;\n    long long bn = n;\n    long long bm = m;\n    long long ans = an;\n\
    \    long long bn = n;\n    long long bm = m;\n    long long an = n;\n    long\
    \ long bn = n;\n    long long bm = m;\n    long long ans = an;\n    long long\
    \ bn = n;\n    long long bm = m;\n    long long an = n;\n    long long bn = n;\n\
    \    long long bm = m;\n    long long ans = ", "    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long long an = 0;\n    long\
    \ long an2 = 0;\n    long long an3 = 0;\n    long long an4 = 0;\n    long long\
    \ an5 = 0;\n    long long an6 = 0;\n    long long an7 = 0;\n    long long an8\
    \ = 0;\n    long long an9 = 0;\n    long long an10 = 0;\n    long long an11 =\
    \ 0;\n    long long an12 = 0;\n    long long an13 = 0;\n    long long an14 = 0;\n\
    \    long long an15 = 0;\n    long long an16 = 0;\n    long long an17 = 0;\n \
    \   long long an18 = 0;\n    long long an19 = 0;\n    long long an20 = 0;\n  \
    \  long long an21 = 0;\n    long long an22 = 0;\n    long long an23 = 0;\n   \
    \ long long an24 = 0;\n    long long an25 = 0;\n    long long an26 = 0;\n    long\
    \ long an27 = 0;\n    long long an28 = 0;\n    long long an29 = 0;\n    long long\
    \ an30 = 0;\n    long long an31 = 0;\n    long long an32 = 0;\n    long long an33\
    \ = 0;\n    long long an34 = 0;\n    long long an35 = 0;\n    long long an36 =\
    \ 0;\n    long long an37 = 0;\n    long long an38 = 0;\n    long long an39 = 0;\n\
    \    long long an40 = 0;\n    long long an41 = 0;\n    long long an42 = 0;\n \
    \   long long an43 = 0;\n    long long an44 = 0;\n    long long an45 = 0;\n  \
    \  long long an46 = 0;\n    long long an47 = 0;\n    long long an48 = 0;\n   \
    \ long long an49 = 0;\n    long long an50 = 0;\n    long long an51 = 0;\n    long\
    \ long an52 = 0;\n    long long an53 = 0;\n    long long an54 = 0;\n    long long\
    \ an55 = 0;\n    long long an56 = 0;\n    long long an57 = 0;\n    long long an58\
    \ = 0;\n    long long an59 = 0;\n    long long an60 = 0;\n    long long an61 =\
    \ 0;\n    long long an62 = 0;\n    long long an63 = 0;\n    long long an64 = 0;\n\
    \    long long an65 = 0;\n    long long an66 = 0;\n    long long an67 = 0;\n \
    \   long long an68 = 0;\n    long long an69 = 0;\n    long long an70 = 0;\n  \
    \  long long an71 = 0;\n", "    long ans = 0;\n    long n = grid.size();\n   \
    \ long m = grid[0].size();\n    long long an = n * m;\n    long long an2 = an\
    \ * an;\n    long long an3 = an2 * an;\n    long long an4 = an3 * an;\n    long\
    \ long an5 = an4 * an;\n    long long an6 = an5 * an;\n    long long an7 = an6\
    \ * an;\n    long long an8 = an7 * an;\n    long long an9 = an8 * an;\n    long\
    \ long an10 = an9 * an;\n    long long an11 = an10 * an;\n    long long an12 =\
    \ an11 * an;\n    long long an13 = an12 * an;\n    long long an14 = an13 * an;\n\
    \    long long an15 = an14 * an;\n    long long an16 = an15 * an;\n    long long\
    \ an17 = an16 * an;\n    long long an18 = an17 * an;\n    long long an19 = an18\
    \ * an;\n    long long an20 = an19 * an;\n    long long an21 = an20 * an;\n  \
    \  long long an22 = an21 * an;\n    long long an23 = an22 * an;\n    long long\
    \ an24 = an23 * an;\n    long long an25 = an24 * an;\n    long long an26 = an25\
    \ * an;\n    long long an27 = an26 * an;\n    long long an28 = an27 * an;\n  \
    \  long long an29 = an28 * an;\n    long long an30 = an29 * an;\n    long long\
    \ an31 = an30 * an;\n    long long an32 = an31 * an;\n    long long an33 = an32\
    \ * an;\n    long long an34 = an33 * an;\n    long long an35 = an34 * an;\n  \
    \  long long an36 = an35 * an;\n    long long an37 = an36 * an;\n    long long\
    \ an38 = an37 * an;\n    long long an39 = an38 * an;\n    long long an40 = an39\
    \ * an;\n    long long an41 = an40 * an;\n    long long an42 = an41 * an;\n  \
    \  long long an43 = an42 * an", "    // Your code here\n    long ans = 0;\n  \
    \  long n = grid.size();\n    long m = grid[0].size();\n    long ans = 0;\n  \
    \  long count = 0;\n    long i;\n    long j;\n    long k;\n    long l;\n    long\
    \ m;\n    long n;\n    long o;\n    long p;\n    long q;\n    long r;\n    long\
    \ s;\n    long t;\n    long u;\n    long v;\n    long w;\n    long x;\n    long\
    \ y;\n    long z;\n    long A;\n    long B;\n    long C;\n    long D;\n    long\
    \ E;\n    long F;\n    long G;\n    long H;\n    long I;\n    long J;\n    long\
    \ K;\n    long L;\n    long M;\n    long N;\n    long O;\n    long P;\n    long\
    \ Q;\n    long R;\n    long S;\n    long T;\n    long U;\n    long V;\n    long\
    \ W;\n    long X;\n    long Y;\n    long Z;\n    long A;\n    long B;\n    long\
    \ C;\n    long D;\n    long E;\n    long F;\n    long G;\n    long H;\n    long\
    \ I;\n    long J;\n    long K;\n    long L;\n    long M;\n    long N;\n    long\
    \ O;\n    long P;\n    long Q;\n    long R;\n    long S;\n    long T;\n    long\
    \ U;\n    long V;\n    long W;\n    long X;\n    long Y;\n    long Z;\n    long\
    \ A;\n    long B;\n    long C;\n    long D;\n    long E;\n    long F;\n    long\
    \ G;\n    long H;\n    long I;\n    long J;\n    long K;\n    long L;\n    long\
    \ M;\n    long N;\n    long O;\n    long P;\n    long Q;\n    long R;\n    long\
    \ S;\n    long T;\n    long U;\n    long V;\n    long W;\n    long X;\n    long\
    \ Y;\n    long Z;\n    long A;\n    long B;\n    long C;\n    long D;\n", "  \
    \  // write your code here\n    long ans = 0;\n    long n = grid.size();\n   \
    \ long m = grid[0].size();\n    long long ans = 0;\n    long long ans2 = 0;\n\
    \    long long ans3 = 0;\n    long long ans4 = 0;\n    long long ans5 = 0;\n \
    \   long long ans6 = 0;\n    long long ans7 = 0;\n    long long ans8 = 0;\n  \
    \  long long ans9 = 0;\n    long long ans10 = 0;\n    long long ans11 = 0;\n \
    \   long long ans12 = 0;\n    long long ans13 = 0;\n    long long ans14 = 0;\n\
    \    long long ans15 = 0;\n    long long ans16 = 0;\n    long long ans17 = 0;\n\
    \    long long ans18 = 0;\n    long long ans19 = 0;\n    long long ans20 = 0;\n\
    \    long long ansp = 0;\n    long long ansp2 = 0;\n    long long ansp3 = 0;\n\
    \    long long ansp4 = 0;\n    long long ansp5 = 0;\n    long long ansp6 = 0;\n\
    \    long long ansp7 = 0;\n    long long ansp8 = 0;\n    long long ansp9 = 0;\n\
    \    long long ansp10 = 0;\n    long long ansp11 = 0;\n    long long ansp12 =\
    \ 0;\n    long long ansp13 = 0;\n    long long ansp14 = 0;\n    long long ansp15\
    \ = 0;\n    long long ansp16 = 0;\n    long long ansp17 = 0;\n    long long ansp18\
    \ = 0;\n    long long ansp19 = 0;\n    long long ansp20 = 0;\n    long long anspp\
    \ = 0;\n    long long anspp2 = 0;\n    long long anspp3 = 0;\n    long long anspp4\
    \ = 0;\n    long long anspp5 = 0;\n    long long anspp6 = 0;\n    long long anspp7\
    \ = 0;\n    long long anspp8 = 0;\n    long long anspp9 = 0;\n    long long anspp10\
    \ = 0;\n    long long anspp11 = 0;\n    long long anspp12 = 0;\n    long long\
    \ anspp13 = 0;\n    long long anspp14 = 0;\n    long long anspp15 = 0;\n    long\
    \ long anspp16 = 0;\n    long long anspp17 = 0;\n    long long anspp18 = 0;\n\
    \    long long anspp19 = 0;\n    long long anspp20 = 0;\n    long long ansppp\
    \ = 0;\n    long long ansppp2 = 0;\n    long long an", "    // Your code here\n\
    \    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long cnt = 0;\n    long ans = INT_MAX;\n    for(long i = 0; i < n; i++) {\n\
    \        for(long j = 0; j < m; j++) {\n            if(grid[i][j] == 1) {\n  \
    \              cnt += 1;\n                if(cnt > ans) {\n                  \
    \  ans = cnt;\n                }\n            }\n        }\n    }\n    return\
    \ ans;", "    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long long an = 0;\n    long long max = 0;\n    long long min = 0;\n    long\
    \ long sum = 0;\n    long long count = 0;\n    long long temp = 0;\n    long long\
    \ temp2 = 0;\n    long long temp3 = 0;\n    long long temp4 = 0;\n    long long\
    \ temp5 = 0;\n    long long temp6 = 0;\n    long long temp7 = 0;\n    long long\
    \ temp8 = 0;\n    long long temp9 = 0;\n    long long temp10 = 0;\n    long long\
    \ temp11 = 0;\n    long long temp12 = 0;\n    long long temp13 = 0;\n    long\
    \ long temp14 = 0;\n    long long temp15 = 0;\n    long long temp16 = 0;\n   \
    \ long long temp17 = 0;\n    long long temp18 = 0;\n    long long temp19 = 0;\n\
    \    long long temp20 = 0;\n    long long temp21 = 0;\n    long long temp22 =\
    \ 0;\n    long long temp23 = 0;\n    long long temp24 = 0;\n    long long temp25\
    \ = 0;\n    long long temp26 = 0;\n    long long temp27 = 0;\n    long long temp28\
    \ = 0;\n    long long temp29 = 0;\n    long long temp30 = 0;\n    long long temp31\
    \ = 0;\n    long long temp32 = 0;\n    long long temp33 = 0;\n    long long temp34\
    \ = 0;\n    long long temp35 = 0;\n    long long temp36 = 0;\n    long long temp37\
    \ = 0;\n    long long temp38 = 0;\n    long long temp39 = 0;\n    long long temp40\
    \ = 0;\n    long long temp41 = 0;\n    long long temp42 = 0;\n    long long temp43\
    \ = 0;\n    long long temp44 = 0;\n    long long temp45 = 0;\n    long long temp46\
    \ = 0;\n    long long temp47 = 0;\n    long long temp48 = 0;\n    long long temp49\
    \ = 0;\n    long long temp50 = 0;\n    long long temp51 = 0;\n    long long temp52\
    \ = 0;\n    long long temp53 = 0;\n    long long temp54 = 0;\n    long long temp55\
    \ = 0;\n    long long temp56 = 0;\n    long long temp57 = 0;\n    long long temp58\
    \ = 0;\n    long long temp59 = 0;\n    long long temp60 = 0;\n    long long temp61\
    \ = 0;\n    long long temp62 = 0;\n    long long temp63 = 0;\n    long long temp64\
    \ = 0;\n    long long temp65 = 0;\n    long long temp66 = 0;\n    long long temp67\
    \ = 0;", "    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long long ans = 0;\n    long long cnt = 0;\n    long long ans = 0;\n    long\
    \ long cnt = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n    long long\
    \ cnt = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n    long long cnt\
    \ = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n\
    \    long long cnt = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n    long\
    \ long cnt = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n    long long\
    \ cnt = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n    long long cnt\
    \ = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n\
    \    long long cnt = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n    long\
    \ long cnt = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n    long long\
    \ cnt = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n    long long cnt\
    \ = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n\
    \    long long cnt = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n    long\
    \ long cnt = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n    long long\
    \ cnt = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n    long long cnt\
    \ = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n\
    \    long long cnt = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n    long\
    \ long cnt = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n    long long\
    \ cnt = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n    long long cnt\
    \ = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n\
    \    long long cnt = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n    long\
    \ long cnt = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n    long long\
    \ cnt = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n    long long cnt\
    \ = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n\
    \    long long cnt = 0;\n    long long cnt = 0;\n    long long cnt = 0;\n    long\
    \ long cnt = 0;\n", "    // write your code here\n    long ans = 0;\n    long\
    \ n = grid.size();\n    long m = grid[0].size();\n    long ans = 0;\n    long\
    \ long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long\
    \ ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans\
    \ = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n\
    \    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long\
    \ long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long\
    \ ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans\
    \ = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n\
    \    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long\
    \ long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long\
    \ ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans\
    \ = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n\
    \    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long\
    \ long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long\
    \ ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans\
    \ = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n\
    \    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long\
    \ long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long\
    \ ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans\
    \ = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n\
    \    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long\
    \ long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long\
    \ ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans\
    \ = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n\
    \    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long\
    \ long ans = 0;\n    long long ans = 0;\n    long ", "    long ans = 0;\n    long\
    \ n = grid.size();\n    long m = grid[0].size();\n    long ans = 0;\n    long\
    \ count = 0;\n    long cur = 0;\n    long cur2 = 0;\n    long cur3 = 0;\n    long\
    \ cur4 = 0;\n    long cur5 = 0;\n    long cur6 = 0;\n    long cur7 = 0;\n    long\
    \ cur8 = 0;\n    long cur9 = 0;\n    long cur10 = 0;\n    long cur11 = 0;\n  \
    \  long cur12 = 0;\n    long cur13 = 0;\n    long cur14 = 0;\n    long cur15 =\
    \ 0;\n    long cur16 = 0;\n    long cur17 = 0;\n    long cur18 = 0;\n    long\
    \ cur19 = 0;\n    long cur20 = 0;\n    long cur21 = 0;\n    long cur22 = 0;\n\
    \    long cur23 = 0;\n    long cur24 = 0;\n    long cur25 = 0;\n    long cur26\
    \ = 0;\n    long cur27 = 0;\n    long cur28 = 0;\n    long cur29 = 0;\n    long\
    \ cur30 = 0;\n    long cur31 = 0;\n    long cur32 = 0;\n    long cur33 = 0;\n\
    \    long cur34 = 0;\n    long cur35 = 0;\n    long cur36 = 0;\n    long cur37\
    \ = 0;\n    long cur38 = 0;\n    long cur39 = 0;\n    long cur40 = 0;\n    long\
    \ cur41 = 0;\n    long cur42 = 0;\n    long cur43 = 0;\n    long cur44 = 0;\n\
    \    long cur45 = 0;\n    long cur46 = 0;\n    long cur47 = 0;\n    long cur48\
    \ = 0;\n    long cur49 = 0;\n    long cur50 = 0;\n    long cur51 = 0;\n    long\
    \ cur52 = 0;\n    long cur53 = 0;\n    long cur54 = 0;\n    long cur55 = 0;\n\
    \    long cur56 = 0;\n    long cur57 = 0;\n    long cur58 = 0;\n    long cur59\
    \ = 0;\n    long cur60 = 0;\n    long cur61 = 0;\n    long cur62 = 0;\n    long\
    \ cur63 = 0;\n    long cur64 = 0;\n    long cur65 = 0;\n    long cur66 = 0;\n\
    \    long cur67 = 0;\n    long cur68 = 0;\n    long cur69 = 0;\n    long cur70\
    \ = 0;\n    long cur71 = 0;\n    long cur72 = 0;\n    long cur73 = 0;\n    long\
    \ cur74 = 0;\n    long cur75 = 0;\n    long cur76 = 0;\n    long cur77 = 0;\n\
    \    long cur78 = 0;\n    long cur79 = 0;\n    long cur80 = 0;\n    long cur81\
    \ = 0;\n    long ", "    long ans = 0;\n    long n = grid.size();\n    long m\
    \ = grid[0].size();\n    long long an = n;\n    long long bm = m;\n    long long\
    \ ans = an;\n    long long bn = n;\n    long long bm = m;\n    long long bn =\
    \ n;\n    long long bm = m;\n    long long bn = n;\n    long long bm = m;\n  \
    \  long long bn = n;\n    long long bm = m;\n    long long bn = n;\n    long long\
    \ bm = m;\n    long long bn = n;\n    long long bm = m;\n    long long bn = n;\n\
    \    long long bm = m;\n    long long bn = n;\n    long long bm = m;\n    long\
    \ long bn = n;\n    long long bm = m;\n    long long bn = n;\n    long long bm\
    \ = m;\n    long long bn = n;\n    long long bm = m;\n    long long bn = n;\n\
    \    long long bm = m;\n    long long bn = n;\n    long long bm = m;\n    long\
    \ long bn = n;\n    long long bm = m;\n    long long bn = n;\n    long long bm\
    \ = m;\n    long long bn = n;\n    long long bm = m;\n    long long bn = n;\n\
    \    long long bm = m;\n    long long bn = n;\n    long long bm = m;\n    long\
    \ long bn = n;\n    long long bm = m;\n    long long bn = n;\n    long long bm\
    \ = m;\n    long long bn = n;\n    long long bm = m;\n    long long bn = n;\n\
    \    long long bm = m;\n    long long bn = n;\n    long long bm = m;\n    long\
    \ long bn = n;\n    long long bm = m;\n    long long bn = n;\n    long long bm\
    \ = m;\n    long long bn = n;\n    long long bm = m;\n    long long bn = n;\n\
    \    long long bm = m;\n    long long bn = n;\n    long long bm = m;\n    long\
    \ long bn = n;\n    long long bm = m;\n    long long bn = n;\n    long long bm\
    \ = m;\n    long long bn = n;\n    long long bm = m;\n    long long bn = n;\n\
    \    long long bm = m;\n    long long bn = n;\n    long long bm = m;\n    long\
    \ long bn = n;\n    ", "    // write your code here\n    long ans = 0;\n    long\
    \ n = grid.size();\n    long m = grid[0].size();\n    long ans = 0;\n    for(long\
    \ i = 0; i < n; i++) {\n        for(long j = 0; j < m; j++) {\n            if(grid[i][j]\
    \ == 1) {\n                ans = ans + 1;\n            }\n        }\n    }\n \
    \   return ans;", "    // write your code here\n    long ans = 0;\n    long long\
    \ n = grid.size();\n    long long m = grid[0].size();\n    long long ans = 0;\n\
    \    long long count = 0;\n    long long cur = 0;\n    long long cur2 = 0;\n \
    \   long long cur3 = 0;\n    long long cur4 = 0;\n    long long cur5 = 0;\n  \
    \  long long cur6 = 0;\n    long long cur7 = 0;\n    long long cur8 = 0;\n   \
    \ long long cur9 = 0;\n    long long cur10 = 0;\n    long long cur11 = 0;\n  \
    \  long long cur12 = 0;\n    long long cur13 = 0;\n    long long cur14 = 0;\n\
    \    long long cur15 = 0;\n    long long cur16 = 0;\n    long long cur17 = 0;\n\
    \    long long cur18 = 0;\n    long long cur19 = 0;\n    long long cur20 = 0;\n\
    \    long long cur21 = 0;\n    long long cur22 = 0;\n    long long cur23 = 0;\n\
    \    long long cur24 = 0;\n    long long cur25 = 0;\n    long long cur26 = 0;\n\
    \    long long cur27 = 0;\n    long long cur28 = 0;\n    long long cur29 = 0;\n\
    \    long long cur30 = 0;\n    long long cur31 = 0;\n    long long cur32 = 0;\n\
    \    long long cur33 = 0;\n    long long cur34 = 0;\n    long long cur35 = 0;\n\
    \    long long cur36 = 0;\n    long long cur37 = 0;\n    long long cur38 = 0;\n\
    \    long long cur39 = 0;\n    long long cur40 = 0;\n    long long cur41 = 0;\n\
    \    long long cur42 = 0;\n    long long cur43 = 0;\n    long long cur44 = 0;\n\
    \    long long cur45 = 0;\n    long long cur46 = 0;\n    long long cur47 = 0;\n\
    \    long long cur48 = 0;\n    long long cur49 = 0;\n    long long cur50 = 0;\n\
    \    long long cur51 = 0;\n    long long cur52 = 0;\n    long long cur53 = 0;\n\
    \    long long cur54 = 0;\n    long long cur55 = 0;\n    long long cur56 = 0;\n\
    \    long long cur57 = 0;\n    long long cur58 = 0;\n    long long cur59 = 0;\n\
    \    long long cur60 = 0;\n    long long cur61 = 0;\n    long long cur62 = 0;\n\
    \    long long cur63 = 0;\n    long long cur64 = 0;\n    long long cur65 = 0;\n\
    \    long long cur66 = 0;\n    long long cur67 = 0;\n    long long cur68 = 0;\n\
    \    long long ", "    // Your code here\n    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long count = 0;\n    long long ans = 0;\n \
    \   long long ans2 = 0;\n    long long ans3 = 1;\n    long long ans4 = 0;\n  \
    \  long long ans5 = 1;\n    long long ans6 = 1;\n    long long ans7 = 1;\n   \
    \ long long ans8 = 1;\n    long long ans9 = 1;\n    long long ans10 = 1;\n   \
    \ long long ans11 = 1;\n    long long ans12 = 1;\n    long long ans13 = 1;\n \
    \   long long ans14 = 1;\n    long long ans15 = 1;\n    long long ans16 = 1;\n\
    \    long long ans17 = 1;\n    long long ans18 = 1;\n    long long ans19 = 1;\n\
    \    long long ans20 = 1;\n    long long ans21 = 1;\n    long long ans22 = 1;\n\
    \    long long ans23 = 1;\n    long long ans24 = 1;\n    long long ans25 = 1;\n\
    \    long long ans26 = 1;\n    long long ans27 = 1;\n    long long ans28 = 1;\n\
    \    long long ans29 = 1;\n    long long ans30 = 1;\n    long long ans31 = 1;\n\
    \    long long ans32 = 1;\n    long long ans33 = 1;\n    long long ans34 = 1;\n\
    \    long long ans35 = 1;\n    long long ans36 = 1;\n    long long ans37 = 1;\n\
    \    long long ans38 = 1;\n    long long ans39 = 1;\n    long long ans40 = 1;\n\
    \    long long ans = 1;\n    long long ans1 = 1;\n    long long ans2 = 1;\n  \
    \  long long ans3 = 1;\n    long long ans4 = 1;\n    long long ans5 = 1;\n   \
    \ long long ans6 = 1;\n    long long ans7 = 1;\n    long long ans8 = 1;\n    long\
    \ long ans9 = 1;\n    long long ans10 = 1;\n    long long ans11 = 1;\n    long\
    \ long ans12 = 1;\n    long long ans13 = 1;\n    long long ans14 = 1;\n    long\
    \ long ans15 = 1;\n    long long ans16 = 1;\n    long long ans17 = 1;\n    long\
    \ long ans18 = 1;\n    long long ans19 = 1;\n    long long ans20 = 1;\n    long\
    \ long ans21 = 1;\n    long long ans22 = 1;\n    long long ans23 = 1;\n    long\
    \ long ans24 = 1;\n    long long ans25 = 1;\n    long long ans26 = 1;\n    long\
    \ long ans27 = 1;\n    long long ans28 = 1;\n    long long ans", "    long ans\
    \ = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long long\
    \ an = 0;\n    long long an2 = 0;\n    long long an3 = 0;\n    long long an4 =\
    \ 0;\n    long long an5 = 0;\n    long long an6 = 0;\n    long long an7 = 0;\n\
    \    long long an8 = 0;\n    long long an9 = 0;\n    long long an10 = 0;\n   \
    \ long long an11 = 0;\n    long long an12 = 0;\n    long long an13 = 0;\n    long\
    \ long an14 = 0;\n    long long an15 = 0;\n    long long an16 = 0;\n    long long\
    \ an17 = 0;\n    long long an18 = 0;\n    long long an19 = 0;\n    long long an20\
    \ = 0;\n    long long an21 = 0;\n    long long an22 = 0;\n    long long an23 =\
    \ 0;\n    long long an24 = 0;\n    long long an25 = 0;\n    long long an26 = 0;\n\
    \    long long an27 = 0;\n    long long an28 = 0;\n    long long an29 = 0;\n \
    \   long long an30 = 0;\n    long long an31 = 0;\n    long long an32 = 0;\n  \
    \  long long an33 = 0;\n    long long an34 = 0;\n    long long an35 = 0;\n   \
    \ long long an36 = 0;\n    long long an37 = 0;\n    long long an38 = 0;\n    long\
    \ long an39 = 0;\n    long long an40 = 0;\n    long long an41 = 0;\n    long long\
    \ an42 = 0;\n    long long an43 = 0;\n    long long an44 = 0;\n    long long an45\
    \ = 0;\n    long long an46 = 0;\n    long long an47 = 0;\n    long long an48 =\
    \ 0;\n    long long an49 = 0;\n    long long an50 = 0;\n    long long an51 = 0;\n\
    \    long long an52 = 0;\n    long long an53 = 0;\n    long long an54 = 0;\n \
    \   long long an55 = 0;\n    long long an56 = 0;\n    long long an57 = 0;\n  \
    \  long long an58 = 0;\n    long long an59 = 0;\n    long long an60 = 0;\n   \
    \ long long an61 = 0;\n    long long an62 = 0;\n    long long an63 = 0;\n    long\
    \ long an64 = 0;\n    long long an65 = 0;\n    long long an66 = 0;\n    long long\
    \ an67 = 0;\n    long long an68 = 0;\n    long long an69 = 0;\n    long long an70\
    \ = 0;\n    long long an71 = 0;\n", "    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long long an = 0;\n    long long an2 = 0;\n\
    \    long long an3 = 0;\n    long long an4 = 0;\n    long long an5 = 0;\n    long\
    \ long an6 = 0;\n    long long an7 = 0;\n    long long an8 = 0;\n    long long\
    \ an9 = 0;\n    long long an10 = 0;\n    long long an11 = 0;\n    long long an12\
    \ = 0;\n    long long an13 = 0;\n    long long an14 = 0;\n    long long an15 =\
    \ 0;\n    long long an16 = 0;\n    long long an17 = 0;\n    long long an18 = 0;\n\
    \    long long an19 = 0;\n    long long an20 = 0;\n    long long an21 = 0;\n \
    \   long long an22 = 0;\n    long long an23 = 0;\n    long long an24 = 0;\n  \
    \  long long an25 = 0;\n    long long an26 = 0;\n    long long an27 = 0;\n   \
    \ long long an28 = 0;\n    long long an29 = 0;\n    long long an30 = 0;\n    long\
    \ long an31 = 0;\n    long long an32 = 0;\n    long long an33 = 0;\n    long long\
    \ an34 = 0;\n    long long an35 = 0;\n    long long an36 = 0;\n    long long an37\
    \ = 0;\n    long long an38 = 0;\n    long long an39 = 0;\n    long long an40 =\
    \ 0;\n    long long an41 = 0;\n    long long an42 = 0;\n    long long an43 = 0;\n\
    \    long long an44 = 0;\n    long long an45 = 0;\n    long long an46 = 0;\n \
    \   long long an47 = 0;\n    long long an48 = 0;\n    long long an49 = 0;\n  \
    \  long long an50 = 0;\n    long long an51 = 0;\n    long long an52 = 0;\n   \
    \ long long an53 = 0;\n    long long an54 = 0;\n    long long an55 = 0;\n    long\
    \ long an56 = 0;\n    long long an57 = 0;\n    long long an58 = 0;\n    long long\
    \ an59 = 0;\n    long long an60 = 0;\n    long long an61 = 0;\n    long long an62\
    \ = 0;\n    long long an63 = 0;\n    long long an64 = 0;\n    long long an65 =\
    \ 0;\n    long long an66 = 0;\n    long long an67 = 0;\n    long long an68 = 0;\n\
    \    long long an69 = 0;\n    long long an70 = 0;\n    long long an71 = 0;\n",
  "    // Your code here\n    long ans = 0;\n    long n = grid.size();\n    long m\
    \ = grid[0].size();\n    long long ans = 0;\n    long long cnt = 0;\n    long\
    \ long max = 0;\n    long long min = 0;\n    long long sum = 0;\n    long long\
    \ sum2 = 0;\n    long long sum3 = 0;\n    long long sum4 = 0;\n    long long sum5\
    \ = 0;\n    long long sum6 = 0;\n    long long sum7 = 0;\n    long long sum8 =\
    \ 0;\n    long long sum9 = 0;\n    long long sum10 = 0;\n    long long sum11 =\
    \ 0;\n    long long sum12 = 0;\n    long long sum13 = 0;\n    long long sum14\
    \ = 0;\n    long long sum15 = 0;\n    long long sum16 = 0;\n    long long sum17\
    \ = 0;\n    long long sum18 = 0;\n    long long sum19 = 0;\n    long long sum20\
    \ = 0;\n    long long sum21 = 0;\n    long long sum22 = 0;\n    long long sum23\
    \ = 0;\n    long long sum24 = 0;\n    long long sum25 = 0;\n    long long sum26\
    \ = 0;\n    long long sum27 = 0;\n    long long sum28 = 0;\n    long long sum29\
    \ = 0;\n    long long sum30 = 0;\n    long long sum31 = 0;\n    long long sum32\
    \ = 0;\n    long long sum33 = 0;\n    long long sum34 = 0;\n    long long sum35\
    \ = 0;\n    long long sum36 = 0;\n    long long sum37 = 0;\n    long long sum38\
    \ = 0;\n    long long sum39 = 0;\n    long long sum40 = 0;\n    long long sum41\
    \ = 0;\n    long long sum42 = 0;\n    long long sum43 = 0;\n    long long sum44\
    \ = 0;\n    long long sum45 = 0;\n    long long sum46 = 0;\n    long long sum47\
    \ = 0;\n    long long sum48 = 0;\n    long long sum49 = 0;\n    long long sum50\
    \ = 0;\n    long long sum51 = 0;\n    long long sum52 = 0;\n    long long sum53\
    \ = 0;\n    long long sum54 = 0;\n    long long sum55 = 0;\n    long long sum56\
    \ = 0;\n    long long sum57 = 0;\n    long long sum58 = 0;\n    long long sum59\
    \ = 0;\n    long long sum60 = 0;\n    long long sum61 = 0;\n    long long sum62\
    \ = 0;\n    long long sum63 = 0;\n    long long sum64 = 0;\n    long long sum65\
    \ = 0;\n    long long sum66 = 0;\n    long long sum67 = 0;", "    // write your\
    \ code here\n    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long count = 0;\n    long long max = 0;\n    long long min = 0;\n    long\
    \ long sum = 0;\n    long long sum2 = 0;\n    long long sum3 = 0;\n    long long\
    \ sum4 = 0;\n    long long sum5 = 0;\n    long long sum6 = 0;\n    long long sum7\
    \ = 0;\n    long long sum8 = 0;\n    long long sum9 = 0;\n    long long sum10\
    \ = 0;\n    long long sum11 = 0;\n    long long sum12 = 0;\n    long long sum13\
    \ = 0;\n    long long sum14 = 0;\n    long long sum15 = 0;\n    long long sum16\
    \ = 0;\n    long long sum17 = 0;\n    long long sum18 = 0;\n    long long sum19\
    \ = 0;\n    long long sum20 = 0;\n    long long sum21 = 0;\n    long long sum22\
    \ = 0;\n    long long sum23 = 0;\n    long long sum24 = 0;\n    long long sum25\
    \ = 0;\n    long long sum26 = 0;\n    long long sum27 = 0;\n    long long sum28\
    \ = 0;\n    long long sum29 = 0;\n    long long sum30 = 0;\n    long long sum31\
    \ = 0;\n    long long sum32 = 0;\n    long long sum33 = 0;\n    long long sum34\
    \ = 0;\n    long long sum35 = 0;\n    long long sum36 = 0;\n    long long sum37\
    \ = 0;\n    long long sum38 = 0;\n    long long sum39 = 0;\n    long long sum40\
    \ = 0;\n    long long sum41 = 0;\n    long long sum42 = 0;\n    long long sum43\
    \ = 0;\n    long long sum44 = 0;\n    long long sum45 = 0;\n    long long sum46\
    \ = 0;\n    long long sum47 = 0;\n    long long sum48 = 0;\n    long long sum49\
    \ = 0;\n    long long sum50 = 0;\n    long long sum51 = 0;\n    long long sum52\
    \ = 0;\n    long long sum53 = 0;\n    long long sum54 = 0;\n    long long sum55\
    \ = 0;\n    long long sum56 = 0;\n    long long sum57 = 0;\n    long long sum58\
    \ = 0;\n    long long sum59 = 0;\n    long long sum60 = 0;\n    long long sum61\
    \ = 0;\n    long long sum62 = 0;\n    long long sum63 = 0;\n    long long sum64\
    \ = 0;\n    long long sum65 = 0;\n    long long sum66 = 0;\n    long long sum67\
    \ = 0;\n    long long sum68 = 0;\n", "    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long long ans = 0;\n    long long count = 0;\n\
    \    long long max = 0;\n    long long min = 0;\n    long long sum = 0;\n    long\
    \ long sum2 = 0;\n    long long sum3 = 0;\n    long long sum4 = 0;\n    long long\
    \ sum5 = 0;\n    long long sum6 = 0;\n    long long sum7 = 0;\n    long long sum8\
    \ = 0;\n    long long sum9 = 0;\n    long long sum10 = 0;\n    long long sum11\
    \ = 0;\n    long long sum12 = 0;\n    long long sum13 = 0;\n    long long sum14\
    \ = 0;\n    long long sum15 = 0;\n    long long sum16 = 0;\n    long long sum17\
    \ = 0;\n    long long sum18 = 0;\n    long long sum19 = 0;\n    long long sum20\
    \ = 0;\n    long long sum21 = 0;\n    long long sum22 = 0;\n    long long sum23\
    \ = 0;\n    long long sum24 = 0;\n    long long sum25 = 0;\n    long long sum26\
    \ = 0;\n    long long sum27 = 0;\n    long long sum28 = 0;\n    long long sum29\
    \ = 0;\n    long long sum30 = 0;\n    long long sum31 = 0;\n    long long sum32\
    \ = 0;\n    long long sum33 = 0;\n    long long sum34 = 0;\n    long long sum35\
    \ = 0;\n    long long sum36 = 0;\n    long long sum37 = 0;\n    long long sum38\
    \ = 0;\n    long long sum39 = 0;\n    long long sum40 = 0;\n    long long sum41\
    \ = 0;\n    long long sum42 = 0;\n    long long sum43 = 0;\n    long long sum44\
    \ = 0;\n    long long sum45 = 0;\n    long long sum46 = 0;\n    long long sum47\
    \ = 0;\n    long long sum48 = 0;\n    long long sum49 = 0;\n    long long sum50\
    \ = 0;\n    long long sum51 = 0;\n    long long sum52 = 0;\n    long long sum53\
    \ = 0;\n    long long sum54 = 0;\n    long long sum55 = 0;\n    long long sum56\
    \ = 0;\n    long long sum57 = 0;\n    long long sum58 = 0;\n    long long sum59\
    \ = 0;\n    long long sum60 = 0;\n    long long sum61 = 0;\n    long long sum62\
    \ = 0;\n    long long sum63 = 0;\n    long long sum64 = 0;\n    long long sum65\
    \ = 0;\n    long long sum66 = 0;\n    long long sum67 = 0;\n    long long sum68",
  "    // Your code here\n    long ans = 0;\n    long n = grid.size();\n    long m\
    \ = grid[0].size();\n    long ans = 0;\n    long ans = 0;\n    long ans = 0;\n\
    \    long ans = 0;\n    long ans = 0;\n    long ans = 0;\n    long ans = 0;\n\
    \    long ans = 0;\n    long ans = 0;\n    long ans = 0;\n    long ans = 0;\n\
    \    long ans = 0;\n    long ans = 0;\n    long ans = 0;\n    long ans = 0;\n\
    \    long ans = 0;\n    long ans = 0;\n    long ans = 0;\n    long ans = 0;\n\
    \    long ans = 0;\n    long ans = 0;\n    long ans = 0;\n    long ans = 0;\n\
    \    long ans = 0;\n    long ans = 0;\n    long ans = 0;\n    long ans = 0;\n\
    \    long ans = 0;\n    long ans = 0;\n    long ans = 0;\n    long ans = 0;\n\
    \    long ans = 0;\n    long ans = 0;\n    long ans = 0;\n    long ans = 0;\n\
    \    long ans = 0;\n    long ans = 0;\n    long ans = 0;\n    long ans = 0;\n\
    \    long ans = 0;\n    long ans = 0;\n    long ans = 0;\n    long ans = 0;\n\
    \    long ans = 0;\n    long ans = 0;\n    long ans = 0;\n    long ans = 0;\n\
    \    long ans = 0;\n    long ans = 0;\n    long ans = 0;\n    long ans = 0;\n\
    \    long ans = 0;\n    long ans = 0;\n    long ans = 0;\n    long ans = 0;\n\
    \    long ans = 0;\n    long ans = 0;\n    long ans = 0;\n    long ans = 0;\n\
    \    long ans = 0;\n    long ans = 0;\n    long ans = 0;\n    long ans = 0;\n\
    \    long ans = 0;\n    long ans = 0;\n    long ans = 0;\n    long ans = 0;\n\
    \    long ans = 0;\n    long ans = 0;\n    long ans = 0;\n    long ans = 0;\n\
    \    long ans = 0;\n    long ans = 0;\n    long ans = 0;\n    long ans = 0;\n\
    \    long ans = 0;\n    long ans = 0;\n    long ans = 0;\n    long ans = 0;\n\
    \    long ans = 0;\n    long ans = 0;\n    long ans = 0;\n    long ans = 0;\n\
    \    long ans = 0;\n    long ans = 0;\n    long ans = 0;\n    long ans = 0;\n\
    \    long ans = 0;\n    long ans = 0;\n    long ans = 0;\n    long ans = 0;\n\
    \    long ans = 0;\n    long ans = 0;\n    long ans = 0;\n    long ans = 0;\n\
    \    long ans = 0;\n    long ans = 0;\n    long ", "    long ans = 0;\n    long\
    \ n = grid.size();\n    long m = grid[0].size();\n    long long ans1 = 0;\n  \
    \  long long ans2 = 0;\n    long long ans3 = 0;\n    long long ans4 = 0;\n   \
    \ long long ans5 = 0;\n    long long ans6 = 0;\n    long long ans7 = 0;\n    long\
    \ long ans8 = 0;\n    long long ans9 = 0;\n    long long ans10 = 0;\n    long\
    \ long ans11 = 0;\n    long long ans12 = 0;\n    long long ans13 = 0;\n    long\
    \ long ans14 = 0;\n    long long ans15 = 0;\n    long long ans16 = 0;\n    long\
    \ long ans17 = 0;\n    long long ans18 = 0;\n    long long ans19 = 0;\n    long\
    \ long ans20 = 0;\n    long long ansp = 0;\n    long long ansp1 = 0;\n    long\
    \ long ansp2 = 0;\n    long long ansp3 = 0;\n    long long ansp4 = 0;\n    long\
    \ long ansp5 = 0;\n    long long ansp6 = 0;\n    long long ansp7 = 0;\n    long\
    \ long ansp8 = 0;\n    long long ansp9 = 0;\n    long long ansp10 = 0;\n    long\
    \ long ansp11 = 0;\n    long long ansp12 = 0;\n    long long ansp13 = 0;\n   \
    \ long long ansp14 = 0;\n    long long ansp15 = 0;\n    long long ansp16 = 0;\n\
    \    long long ansp17 = 0;\n    long long ansp18 = 0;\n    long long ansp19 =\
    \ 0;\n    long long ansp20 = 0;\n    long long ansp21 = 0;\n    long long ansp22\
    \ = 0;\n    long long ansp23 = 0;\n    long long ansp24 = 0;\n    long long ansp25\
    \ = 0;\n    long long ansp26 = 0;\n    long long ansp27 = 0;\n    long long ansp28\
    \ = 0;\n    long long ansp29 = 0;\n    long long ansp30 = 0;\n    long long ansp31\
    \ = 0;\n    long long ansp32 = 0;\n    long long ansp33 = 0;\n    long long ansp34\
    \ = 0;\n    long long ansp35 = 0;\n    long long ansp36 = 0;\n    long long ansp37\
    \ = 0;\n    long long ansp38 = 0;\n    long long ansp39 = 0;\n    long long ansp40\
    \ = 0;\n    long long ansp41 = 0;\n    long long ansp42 = 0;\n    long long ansp43\
    \ = 0;\n    long long ansp44 = 0;\n", "    // write your code here\n    long ans\
    \ = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long long\
    \ ans = 0;\n    long long count = 0;\n    long long cur = 0;\n    long long cur2\
    \ = 0;\n    long long cur3 = 0;\n    long long cur4 = 0;\n    long long cur5 =\
    \ 0;\n    long long cur6 = 0;\n    long long cur7 = 0;\n    long long cur8 = 0;\n\
    \    long long cur9 = 0;\n    long long cur10 = 0;\n    long long cur11 = 0;\n\
    \    long long cur12 = 0;\n    long long cur13 = 0;\n    long long cur14 = 0;\n\
    \    long long cur15 = 0;\n    long long cur16 = 0;\n    long long cur17 = 0;\n\
    \    long long cur18 = 0;\n    long long cur19 = 0;\n    long long cur20 = 0;\n\
    \    long long cur21 = 0;\n    long long cur22 = 0;\n    long long cur23 = 0;\n\
    \    long long cur24 = 0;\n    long long cur25 = 0;\n    long long cur26 = 0;\n\
    \    long long cur27 = 0;\n    long long cur28 = 0;\n    long long cur29 = 0;\n\
    \    long long cur30 = 0;\n    long long cur31 = 0;\n    long long cur32 = 0;\n\
    \    long long cur33 = 0;\n    long long cur34 = 0;\n    long long cur35 = 0;\n\
    \    long long cur36 = 0;\n    long long cur37 = 0;\n    long long cur38 = 0;\n\
    \    long long cur39 = 0;\n    long long cur40 = 0;\n    long long cur41 = 0;\n\
    \    long long cur42 = 0;\n    long long cur43 = 0;\n    long long cur44 = 0;\n\
    \    long long cur45 = 0;\n    long long cur46 = 0;\n    long long cur47 = 0;\n\
    \    long long cur48 = 0;\n    long long cur49 = 0;\n    long long cur50 = 0;\n\
    \    long long cur51 = 0;\n    long long cur52 = 0;\n    long long cur53 = 0;\n\
    \    long long cur54 = 0;\n    long long cur55 = 0;\n    long long cur56 = 0;\n\
    \    long long cur57 = 0;\n    long long cur58 = 0;\n    long long cur59 = 0;\n\
    \    long long cur60 = 0;\n    long long cur61 = 0;\n    long long cur62 = 0;\n\
    \    long long cur63 = 0;\n    long long cur64 = 0;\n    long long cur65 = 0;\n\
    \    long long cur66 = 0;\n    long long cur67 = 0;\n    long long cur68 = 0;\n\
    \    long long cur69", "    // write your code here\n    long ans = 0;\n    long\
    \ n = grid.size();\n    long m = grid[0].size();\n    long long ans = 0;\n   \
    \ long long cnt = 0;\n    long long i;\n    long long j;\n    long long k;\n \
    \   long long l;\n    long long m;\n    long long n;\n    long long o;\n    long\
    \ long p;\n    long long q;\n    long long r;\n    long long s;\n    long long\
    \ t;\n    long long u;\n    long long v;\n    long long w;\n    long long x;\n\
    \    long long y;\n    long long z;\n    long long A;\n    long long B;\n    long\
    \ long C;\n    long long D;\n    long long E;\n    long long F;\n    long long\
    \ G;\n    long long H;\n    long long I;\n    long long J;\n    long long K;\n\
    \    long long L;\n    long long M;\n    long long N;\n    long long O;\n    long\
    \ long P;\n    long long Q;\n    long long R;\n    long long S;\n    long long\
    \ T;\n    long long U;\n    long long V;\n    long long W;\n    long long X;\n\
    \    long long Y;\n    long long Z;\n    long long A;\n    long long B;\n    long\
    \ long C;\n    long long D;\n    long long E;\n    long long F;\n    long long\
    \ G;\n    long long H;\n    long long I;\n    long long J;\n    long long K;\n\
    \    long long L;\n    long long M;\n    long long N;\n    long long O;\n    long\
    \ long P;\n    long long Q;\n    long long R;\n    long long S;\n    long long\
    \ T;\n    long long U;\n    long long V;\n    long long W;\n    long long X;\n\
    \    long long Y;\n    long long Z;\n    long long A;\n    long long B;\n    long\
    \ long C;\n    long long D;\n    long long E;\n    long long F;\n    long long\
    \ G;\n    long long H;\n    long long I;\n    long long J;\n    long long K;\n\
    \    long long L;\n    long long ", "    // write your code here\n    long ans\
    \ = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long ans\
    \ = std::numeric_limits<long>::max();\n    for(long i = 0; i < n; i++) {\n   \
    \     for(long j = 0; j < m; j++) {\n            if(grid[i][j] == 1) {\n     \
    \           long cur = grid[i][j];\n                for(long k = i; k < n; k++)\
    \ {\n                    if(grid[k][j] == 1) {\n                        grid[k][j]\
    \ = 0;\n                        ans = std::min(ans, cur);\n                  \
    \  }\n                }\n                for(long k = j; k < m; k++) {\n     \
    \               if(grid[i][k] == 1) {\n                        grid[i][k] = 0;\n\
    \                        ans = std::min(ans, cur);\n                    }\n  \
    \              }\n            }\n        }\n    }\n    return ans;", "    long\
    \ ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long\
    \ long an = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = 0; j <\
    \ m; j++) {\n            if(grid[i][j] == 1) {\n                an++;\n      \
    \          ans = max(ans, an);\n                an = 0;\n            }\n     \
    \   }\n    }\n    return ans;", "    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long x = 0, y = 0;\n    long cnt = 0;\n   \
    \ long cnt2 = 0;\n    long cnt3 = 0;\n    long cnt4 = 0;\n    long cnt5 = 0;\n\
    \    long cnt6 = 0;\n    long cnt7 = 0;\n    long cnt8 = 0;\n    long cnt9 = 0;\n\
    \    long cnt10 = 0;\n    long cnt11 = 0;\n    long cnt12 = 0;\n    long cnt13\
    \ = 0;\n    long cnt14 = 0;\n    long cnt15 = 0;\n    long cnt16 = 0;\n    long\
    \ cnt17 = 0;\n    long cnt18 = 0;\n    long cnt19 = 0;\n    long cnt20 = 0;\n\
    \    long cnt21 = 0;\n    long cnt22 = 0;\n    long cnt23 = 0;\n    long cnt24\
    \ = 0;\n    long cnt25 = 0;\n    long cnt26 = 0;\n    long cnt27 = 0;\n    long\
    \ cnt28 = 0;\n    long cnt29 = 0;\n    long cnt30 = 0;\n    long cnt31 = 0;\n\
    \    long cnt32 = 0;\n    long cnt33 = 0;\n    long cnt34 = 0;\n    long cnt35\
    \ = 0;\n    long cnt36 = 0;\n    long cnt37 = 0;\n    long cnt38 = 0;\n    long\
    \ cnt39 = 0;\n    long cnt40 = 0;\n    long cnt41 = 0;\n    long cnt42 = 0;\n\
    \    long cnt43 = 0;\n    long cnt44 = 0;\n    long cnt45 = 0;\n    long cnt46\
    \ = 0;\n    long cnt47 = 0;\n    long cnt48 = 0;\n    long cnt49 = 0;\n    long\
    \ cnt50 = 0;\n    long cnt51 = 0;\n    long cnt52 = 0;\n    long cnt53 = 0;\n\
    \    long cnt54 = 0;\n    long cnt55 = 0;\n    long cnt56 = 0;\n    long cnt57\
    \ = 0;\n    long cnt58 = 0;\n    long cnt59 = 0;\n    long cnt60 = 0;\n    long\
    \ cnt61 = 0;\n    long cnt62 = 0;\n    long cnt63 = 0;\n    long cnt64 = 0;\n\
    \    long cnt65 = 0;\n    long cnt66 = 0;\n    long cnt67 = 0;\n    long cnt68\
    \ = 0;\n    long cnt69 = 0;\n    long cnt70 = 0;\n    long cnt71 = 0;\n    long\
    \ cnt72 = 0;\n    long cnt73 = 0;\n    long cnt74 = 0;\n    long cnt75 = 0;\n\
    \    long cnt76 = 0;\n    long cnt77 = 0;\n    long cnt78 = 0;\n    long cnt79\
    \ = 0;\n    long cnt80 = 0;\n    long cnt81 = 0;\n    long cnt82", "    // Your\
    \ code here\n    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long\
    \ ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans\
    \ = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n\
    \    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long\
    \ long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long\
    \ ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans\
    \ = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n\
    \    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long\
    \ long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long\
    \ ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans\
    \ = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n\
    \    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long\
    \ long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long\
    \ ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans\
    \ = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n\
    \    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long\
    \ long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long\
    \ ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans\
    \ = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n\
    \    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long\
    \ long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long\
    \ ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans\
    \ = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n\
    \    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long\
    \ long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long ", " \
    \   long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n \
    \   long long an = 0;\n    long long sum = 0;\n    long long max = 0;\n    long\
    \ long cur = 0;\n    long long cur2 = 0;\n    long long cur3 = 0;\n    long long\
    \ cur4 = 0;\n    long long cur5 = 0;\n    long long cur6 = 0;\n    long long cur7\
    \ = 0;\n    long long cur8 = 0;\n    long long cur9 = 0;\n    long long cur10\
    \ = 0;\n    long long cur11 = 0;\n    long long cur12 = 0;\n    long long cur13\
    \ = 0;\n    long long cur14 = 0;\n    long long cur15 = 0;\n    long long cur16\
    \ = 0;\n    long long cur17 = 0;\n    long long cur18 = 0;\n    long long cur19\
    \ = 0;\n    long long cur20 = 0;\n    long long cur21 = 0;\n    long long cur22\
    \ = 0;\n    long long cur23 = 0;\n    long long cur24 = 0;\n    long long cur25\
    \ = 0;\n    long long cur26 = 0;\n    long long cur27 = 0;\n    long long cur28\
    \ = 0;\n    long long cur29 = 0;\n    long long cur30 = 0;\n    long long cur31\
    \ = 0;\n    long long cur32 = 0;\n    long long cur33 = 0;\n    long long cur34\
    \ = 0;\n    long long cur35 = 0;\n    long long cur36 = 0;\n    long long cur37\
    \ = 0;\n    long long cur38 = 0;\n    long long cur39 = 0;\n    long long cur40\
    \ = 0;\n    long long cur41 = 0;\n    long long cur42 = 0;\n    long long cur43\
    \ = 0;\n    long long cur44 = 0;\n    long long cur45 = 0;\n    long long cur46\
    \ = 0;\n    long long cur47 = 0;\n    long long cur48 = 0;\n    long long cur49\
    \ = 0;\n    long long cur50 = 0;\n    long long cur51 = 0;\n    long long cur52\
    \ = 0;\n    long long cur53 = 0;\n    long long cur54 = 0;\n    long long cur55\
    \ = 0;\n    long long cur56 = 0;\n    long long cur57 = 0;\n    long long cur58\
    \ = 0;\n    long long cur59 = 0;\n    long long cur60 = 0;\n    long long cur61\
    \ = 0;\n    long long cur62 = 0;\n    long long cur63 = 0;\n    long long cur64\
    \ = 0;\n    long long cur65 = 0;\n    long long cur66 = 0;\n    long long cur67\
    \ = 0;\n    long long cur68 = 0;\n    long long ", "    // Write your code here\n\
    \    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long ans = 0;\n    long long ans2 = 0;\n    long long ans3 = 0;\n    long\
    \ long ans4 = 0;\n    long long ans5 = 0;\n    long long ans6 = 0;\n    long long\
    \ ans7 = 0;\n    long long ans8 = 0;\n    long long ans9 = 0;\n    long long ans10\
    \ = 0;\n    long long ans11 = 0;\n    long long ans12 = 0;\n    long long ans13\
    \ = 0;\n    long long ans14 = 0;\n    long long ans15 = 0;\n    long long ans16\
    \ = 0;\n    long long ans17 = 0;\n    long long ans18 = 0;\n    long long ans19\
    \ = 0;\n    long long ans20 = 0;\n    long long ans21 = 0;\n    long long ans22\
    \ = 0;\n    long long ans23 = 0;\n    long long ans24 = 0;\n    long long ans25\
    \ = 0;\n    long long ans26 = 0;\n    long long ans27 = 0;\n    long long ans28\
    \ = 0;\n    long long ans29 = 0;\n    long long ans30 = 0;\n    long long ans31\
    \ = 0;\n    long long ans32 = 0;\n    long long ans33 = 0;\n    long long ans34\
    \ = 0;\n    long long ans35 = 0;\n    long long ans36 = 0;\n    long long ans37\
    \ = 0;\n    long long ans38 = 0;\n    long long ans39 = 0;\n    long long ans40\
    \ = 0;\n    long long ans = n;\n    long long ans2 = m;\n    long long ans3 =\
    \ n;\n    long long ans4 = n;\n    long long ans5 = n;\n    long long ans6 = n;\n\
    \    long long ans7 = n;\n    long long ans8 = n;\n    long long ans9 = n;\n \
    \   long long ans10 = n;\n    long long ans11 = n;\n    long long ans12 = n;\n\
    \    long long ans13 = n;\n    long long ans14 = n;\n    long long ans15 = n;\n\
    \    long long ans16 = n;\n    long long ans17 = n;\n    long long ans18 = n;\n\
    \    long long ans19 = n;\n    long long ans20 = n;\n    long long ans21 = n;\n\
    \    long long ans22 = n;\n    long long ans23 = n;\n    long long ans24 = n;\n\
    \    long long ans25 = n;\n    long long ans26 = n;\n    long long ans27 = n;\n\
    \    long long ans28 = n;", "    // Your code here\n    long ans = 0;\n    long\
    \ long ans1 = 0;\n    long long ans2 = 0;\n    long long ans3 = 0;\n    long long\
    \ ans4 = 0;\n    long long ans5 = 0;\n    long long ans6 = 0;\n    long long ans7\
    \ = 0;\n    long long ans8 = 0;\n    long long ans9 = 0;\n    long long ans10\
    \ = 0;\n    long long ans11 = 0;\n    long long ans12 = 0;\n    long long ans13\
    \ = 0;\n    long long ans14 = 0;\n    long long ans15 = 0;\n    long long ans16\
    \ = 0;\n    long long ans17 = 0;\n    long long ans18 = 0;\n    long long ans19\
    \ = 0;\n    long long ans20 = 0;\n    long long ans21 = 0;\n    long long ans22\
    \ = 0;\n    long long ans23 = 0;\n    long long ans24 = 0;\n    long long ans25\
    \ = 0;\n    long long ans26 = 0;\n    long long ans27 = 0;\n    long long ans28\
    \ = 0;\n    long long ans29 = 0;\n    long long ans30 = 0;\n    long long ans31\
    \ = 0;\n    long long ans32 = 0;\n    long long ans33 = 0;\n    long long ans34\
    \ = 0;\n    long long ans35 = 0;\n    long long ans36 = 0;\n    long long ans37\
    \ = 0;\n    long long ans38 = 0;\n    long long ans39 = 0;\n    long long ans40\
    \ = 0;\n    long long ans = std::numeric_limits<long long>::max();\n    long long\
    \ ans1 = std::numeric_limits<long long>::max();\n    long long ans2 = std::numeric_limits<long\
    \ long>::max();\n    long long ans3 = std::numeric_limits<long long>::max();\n\
    \    long long ans4 = std::numeric_limits<long long>::max();\n    long long ans5\
    \ = std::numeric_limits<long long>::max();\n    long long ans6 = std::numeric_limits<long\
    \ long>::max();\n    long long ans7 = std::numeric_limits<long long>::max();\n\
    \    long long ans8 = std::numeric_limits<long long>::max();\n    long long ans9\
    \ = std::numeric_limits<long long>::max();\n    long long ans10 = std::numeric_limits<long\
    \ long>::max();\n    long long ans11 = std::numeric_limits<long long>::max();\n\
    \    long long ans12 = std::numeric_limits<long long>::max();\n    long long ans13\
    \ = std::numeric_limits<long long>::max();\n    long long ans14 = std::numeric_limits<long\
    \ long>::max();\n    long long ans15 = std::numeric_limits<long long>::", "  \
    \  // write your code here\n    long ans = 0;\n    long n = grid.size();\n   \
    \ long m = grid[0].size();\n    long ans = std::numeric_limits<long>::max();\n\
    \    long long ans2 = 0;\n    long long ans3 = 0;\n    long long ans4 = 0;\n \
    \   long long ans5 = 0;\n    long long ans6 = 0;\n    long long ans7 = 0;\n  \
    \  long long ans8 = 0;\n    long long ans9 = 0;\n    long long ans10 = 0;\n  \
    \  long long ans11 = 0;\n    long long ans12 = 0;\n    long long ans13 = 0;\n\
    \    long long ans14 = 0;\n    long long ans15 = 0;\n    long long ans16 = 0;\n\
    \    long long ans17 = 0;\n    long long ans18 = 0;\n    long long ans19 = 0;\n\
    \    long long ans20 = 0;\n    long long ans21 = 0;\n    long long ans22 = 0;\n\
    \    long long ans23 = 0;\n    long long ans24 = 0;\n    long long ans25 = 0;\n\
    \    long long ans26 = 0;\n    long long ans27 = 0;\n    long long ans28 = 0;\n\
    \    long long ans29 = 0;\n    long long ans30 = 0;\n    long long ans31 = 0;\n\
    \    long long ans32 = 0;\n    long long ans33 = 0;\n    long long ans34 = 0;\n\
    \    long long ans35 = 0;\n    long long ans36 = 0;\n    long long ans37 = 0;\n\
    \    long long ans38 = 0;\n    long long ans39 = 0;\n    long long ans40 = 0;\n\
    \    long long ans = std::numeric_limits<long>::max();\n    long long ans2 = std::numeric_limits<long>::max();\n\
    \    long long ans3 = std::numeric_limits<long>::max();\n    long long ans4 =\
    \ std::numeric_limits<long>::max();\n    long long ans5 = std::numeric_limits<long>::max();\n\
    \    long long ans6 = std::numeric_limits<long>::max();\n    long long ans7 =\
    \ std::numeric_limits<long>::max();\n    long long ans8 = std::numeric_limits<long>::max();\n\
    \    long long ans9 = std::numeric_limits<long>::max();\n    long long ans10 =\
    \ std::numeric_limits<long>::max();\n    long long ans11 = std::numeric_limits<long>::max();\n\
    \    long long ans12 = std::numeric_limits<long>::max();\n    long long ans13\
    \ = std::numeric_limits<long>::max();\n    long long ans14 = std::numeric_limits<long>::max();\n\
    \    long long ans15", "    // write your code here\n    long ans = 0;\n    long\
    \ n = grid.size();\n    long m = grid[0].size();\n    long ans = 0;\n    long\
    \ long max = 0;\n    long long min = 0;\n    long long sum = 0;\n    long long\
    \ count = 0;\n    long long sum2 = 0;\n    long long sum3 = 0;\n    long long\
    \ sum4 = 0;\n    long long sum5 = 0;\n    long long sum6 = 0;\n    long long sum7\
    \ = 0;\n    long long sum8 = 0;\n    long long sum9 = 0;\n    long long sum10\
    \ = 0;\n    long long sum11 = 0;\n    long long sum12 = 0;\n    long long sum13\
    \ = 0;\n    long long sum14 = 0;\n    long long sum15 = 0;\n    long long sum16\
    \ = 0;\n    long long sum17 = 0;\n    long long sum18 = 0;\n    long long sum19\
    \ = 0;\n    long long sum20 = 0;\n    long long sum21 = 0;\n    long long sum22\
    \ = 0;\n    long long sum23 = 0;\n    long long sum24 = 0;\n    long long sum25\
    \ = 0;\n    long long sum26 = 0;\n    long long sum27 = 0;\n    long long sum28\
    \ = 0;\n    long long sum29 = 0;\n    long long sum30 = 0;\n    long long sum31\
    \ = 0;\n    long long sum32 = 0;\n    long long sum33 = 0;\n    long long sum34\
    \ = 0;\n    long long sum35 = 0;\n    long long sum36 = 0;\n    long long sum37\
    \ = 0;\n    long long sum38 = 0;\n    long long sum39 = 0;\n    long long sum40\
    \ = 0;\n    long long sum41 = 0;\n    long long sum42 = 0;\n    long long sum43\
    \ = 0;\n    long long sum44 = 0;\n    long long sum45 = 0;\n    long long sum46\
    \ = 0;\n    long long sum47 = 0;\n    long long sum48 = 0;\n    long long sum49\
    \ = 0;\n    long long sum50 = 0;\n    long long sum51 = 0;\n    long long sum52\
    \ = 0;\n    long long sum53 = 0;\n    long long sum54 = 0;\n    long long sum55\
    \ = 0;\n    long long sum56 = 0;\n    long long sum57 = 0;\n    long long sum58\
    \ = 0;\n    long long sum59 = 0;\n    long long sum60 = 0;\n    long long sum61\
    \ = 0;\n    long long sum62 = 0;\n    long long sum63 = 0;\n    long long sum64\
    \ = 0;\n    long long sum65 = 0;\n    long long sum66 = 0;\n    long long sum67\
    \ = 0;\n    ", "    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long long an = 0;\n    long long count = 0;\n    long long sum = 0;\n   \
    \ for(long i = 0; i < n; i++) {\n        for(long j = 0; j < m; j++) {\n     \
    \       sum += grid[i][j];\n        }\n        an = sum;\n        sum = 0;\n \
    \       for(long j = 0; j < m; j++) {\n            sum += grid[i][j];\n      \
    \      if(sum >= capacity) {\n                ans = an;\n                an =\
    \ 0;\n                count = 0;\n                sum = 0;\n                break;\n\
    \            }\n            an = sum;\n            sum = 0;\n            count++;\n\
    \        }\n    }\n    return ans;", "    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long long an = 0;\n    long long max = 0;\n\
    \    long long min = 0;\n    long long sum = 0;\n    long long count = 0;\n  \
    \  long long cur = 0;\n    long long cur2 = 0;\n    long long cur3 = 0;\n    long\
    \ long cur4 = 0;\n    long long cur5 = 0;\n    long long cur6 = 0;\n    long long\
    \ cur7 = 0;\n    long long cur8 = 0;\n    long long cur9 = 0;\n    long long cur10\
    \ = 0;\n    long long cur11 = 0;\n    long long cur12 = 0;\n    long long cur13\
    \ = 0;\n    long long cur14 = 0;\n    long long cur15 = 0;\n    long long cur16\
    \ = 0;\n    long long cur17 = 0;\n    long long cur18 = 0;\n    long long cur19\
    \ = 0;\n    long long cur20 = 0;\n    long long cur21 = 0;\n    long long cur22\
    \ = 0;\n    long long cur23 = 0;\n    long long cur24 = 0;\n    long long cur25\
    \ = 0;\n    long long cur26 = 0;\n    long long cur27 = 0;\n    long long cur28\
    \ = 0;\n    long long cur29 = 0;\n    long long cur30 = 0;\n    long long cur31\
    \ = 0;\n    long long cur32 = 0;\n    long long cur33 = 0;\n    long long cur34\
    \ = 0;\n    long long cur35 = 0;\n    long long cur36 = 0;\n    long long cur37\
    \ = 0;\n    long long cur38 = 0;\n    long long cur39 = 0;\n    long long cur40\
    \ = 0;\n    long long cur41 = 0;\n    long long cur42 = 0;\n    long long cur43\
    \ = 0;\n    long long cur44 = 0;\n    long long cur45 = 0;\n    long long cur46\
    \ = 0;\n    long long cur47 = 0;\n    long long cur48 = 0;\n    long long cur49\
    \ = 0;\n    long long cur50 = 0;\n    long long cur51 = 0;\n    long long cur52\
    \ = 0;\n    long long cur53 = 0;\n    long long cur54 = 0;\n    long long cur55\
    \ = 0;\n    long long cur56 = 0;\n    long long cur57 = 0;\n    long long cur58\
    \ = 0;\n    long long cur59 = 0;\n    long long cur60 = 0;\n    long long cur61\
    \ = 0;\n    long long cur62 = 0;\n    long long cur63 = 0;\n    long long cur64\
    \ = 0;\n    long long cur65 = 0;\n    long long cur66 = 0;\n    long long cur67\
    \ = 0;", "    // Write your code here\n    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long ans = INT_MAX;\n    for(int i = 0; i <\
    \ n; i++) {\n        for(int j = 0; j < m; j++) {\n            long count = 0;\n\
    \            for(int k = 0; k < n; k++) {\n                if(grid[i][k] == 1)\
    \ {\n                    count += 1;\n                }\n            }\n     \
    \       long cur_cap = grid[i][j];\n            if(count > cur_cap) {\n      \
    \          ans = min(ans, count - cur_cap);\n            }\n        }\n    }\n\
    \    return ans;", "    long ans = 0;\n    long n = grid.size();\n    long m =\
    \ grid[0].size();\n    long long an = 0;\n    long long max = 0;\n    long long\
    \ min = 0;\n    long long sum = 0;\n    long long count = 0;\n    long long cur\
    \ = 0;\n    long long cur2 = 0;\n    long long cur3 = 0;\n    long long cur4 =\
    \ 0;\n    long long cur5 = 0;\n    long long cur6 = 0;\n    long long cur7 = 0;\n\
    \    long long cur8 = 0;\n    long long cur9 = 0;\n    long long cur10 = 0;\n\
    \    long long cur11 = 0;\n    long long cur12 = 0;\n    long long cur13 = 0;\n\
    \    long long cur14 = 0;\n    long long cur15 = 0;\n    long long cur16 = 0;\n\
    \    long long cur17 = 0;\n    long long cur18 = 0;\n    long long cur19 = 0;\n\
    \    long long cur20 = 0;\n    long long cur21 = 0;\n    long long cur22 = 0;\n\
    \    long long cur23 = 0;\n    long long cur24 = 0;\n    long long cur25 = 0;\n\
    \    long long cur26 = 0;\n    long long cur27 = 0;\n    long long cur28 = 0;\n\
    \    long long cur29 = 0;\n    long long cur30 = 0;\n    long long cur31 = 0;\n\
    \    long long cur32 = 0;\n    long long cur33 = 0;\n    long long cur34 = 0;\n\
    \    long long cur35 = 0;\n    long long cur36 = 0;\n    long long cur37 = 0;\n\
    \    long long cur38 = 0;\n    long long cur39 = 0;\n    long long cur40 = 0;\n\
    \    long long cur41 = 0;\n    long long cur42 = 0;\n    long long cur43 = 0;\n\
    \    long long cur44 = 0;\n    long long cur45 = 0;\n    long long cur46 = 0;\n\
    \    long long cur47 = 0;\n    long long cur48 = 0;\n    long long cur49 = 0;\n\
    \    long long cur50 = 0;\n    long long cur51 = 0;\n    long long cur52 = 0;\n\
    \    long long cur53 = 0;\n    long long cur54 = 0;\n    long long cur55 = 0;\n\
    \    long long cur56 = 0;\n    long long cur57 = 0;\n    long long cur58 = 0;\n\
    \    long long cur59 = 0;\n    long long cur60 = 0;\n    long long cur61 = 0;\n\
    \    long long cur62 = 0;\n    long long cur63 = 0;\n    long long cur64 = 0;\n\
    \    long long cur65 = 0;\n    long long cur66 = 0;\n    long long cur67 = 0;",
  "    // write your code here\n    long ans = 0;\n    long n = grid.size();\n   \
    \ long m = grid[0].size();\n    long long ans = 0;\n    long long count = 0;\n\
    \    long long sum = 0;\n    long long cur = 0;\n    long long cur2 = 0;\n   \
    \ long long cur3 = 0;\n    long long cur4 = 0;\n    long long cur5 = 0;\n    long\
    \ long cur6 = 0;\n    long long cur7 = 0;\n    long long cur8 = 0;\n    long long\
    \ cur9 = 0;\n    long long cur10 = 0;\n    long long cur11 = 0;\n    long long\
    \ cur12 = 0;\n    long long cur13 = 0;\n    long long cur14 = 0;\n    long long\
    \ cur15 = 0;\n    long long cur16 = 0;\n    long long cur17 = 0;\n    long long\
    \ cur18 = 0;\n    long long cur19 = 0;\n    long long cur20 = 0;\n    long long\
    \ cur21 = 0;\n    long long cur22 = 0;\n    long long cur23 = 0;\n    long long\
    \ cur24 = 0;\n    long long cur25 = 0;\n    long long cur26 = 0;\n    long long\
    \ cur27 = 0;\n    long long cur28 = 0;\n    long long cur29 = 0;\n    long long\
    \ cur30 = 0;\n    long long cur31 = 0;\n    long long cur32 = 0;\n    long long\
    \ cur33 = 0;\n    long long cur34 = 0;\n    long long cur35 = 0;\n    long long\
    \ cur36 = 0;\n    long long cur37 = 0;\n    long long cur38 = 0;\n    long long\
    \ cur39 = 0;\n    long long cur40 = 0;\n    long long cur41 = 0;\n    long long\
    \ cur42 = 0;\n    long long cur43 = 0;\n    long long cur44 = 0;\n    long long\
    \ cur45 = 0;\n    long long cur46 = 0;\n    long long cur47 = 0;\n    long long\
    \ cur48 = 0;\n    long long cur49 = 0;\n    long long cur50 = 0;\n    long long\
    \ cur51 = 0;\n    long long cur52 = 0;\n    long long cur53 = 0;\n    long long\
    \ cur54 = 0;\n    long long cur55 = 0;\n    long long cur56 = 0;\n    long long\
    \ cur57 = 0;\n    long long cur58 = 0;\n    long long cur59 = 0;\n    long long\
    \ cur60 = 0;\n    long long cur61 = 0;\n    long long cur62 = 0;\n    long long\
    \ cur63 = 0;\n    long long cur64 = 0;\n    long long cur65 = 0;\n    long long\
    \ cur66 = 0;\n    long long cur67 = 0;\n    long long cur68 = 0;", "    // Write\
    \ your code here\n    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long long ans = INT_MIN;\n    long long ans2 = 0;\n    long long ans3 = 0;\n\
    \    long long ans4 = 0;\n    long long ans5 = 0;\n    long long ans6 = 0;\n \
    \   long long ans7 = 0;\n    long long ans8 = 0;\n    long long ans9 = 0;\n  \
    \  long long ans10 = 0;\n    long long ans11 = 0;\n    long long ans12 = 0;\n\
    \    long long ans13 = 0;\n    long long ans14 = 0;\n    long long ans15 = 0;\n\
    \    long long ans16 = 0;\n    long long ans17 = 0;\n    long long ans18 = 0;\n\
    \    long long ans19 = 0;\n    long long ans20 = 0;\n    long long ans21 = 0;\n\
    \    long long ans22 = 0;\n    long long ans23 = 0;\n    long long ans24 = 0;\n\
    \    long long ans25 = 0;\n    long long ans26 = 0;\n    long long ans27 = 0;\n\
    \    long long ans28 = 0;\n    long long ans29 = 0;\n    long long ans30 = 0;\n\
    \    long long ans31 = 0;\n    long long ans32 = 0;\n    long long ans33 = 0;\n\
    \    long long ans34 = 0;\n    long long ans35 = 0;\n    long long ans36 = 0;\n\
    \    long long ans37 = 0;\n    long long ans38 = 0;\n    long long ans39 = 0;\n\
    \    long long ans40 = 0;\n    long long ans41 = 1;\n    long long ans42 = 1;\n\
    \    long long ans43 = 1;\n    long long ans44 = 1;\n    long long ans45 = 1;\n\
    \    long long ans46 = 1;\n    long long ans47 = 1;\n    long long ans48 = 1;\n\
    \    long long ans49 = 1;\n    long long ans50 = 1;\n    long long ans51 = 1;\n\
    \    long long ans52 = 1;\n    long long ans53 = 1;\n    long long ans54 = 1;\n\
    \    long long ans55 = 1;\n    long long ans56 = 1;\n    long long ans57 = 1;\n\
    \    long long ans58 = 1;\n    long long ans59 = 1;\n    long long ans60 = 1;\n\
    \    long long ans61 = 1;\n    long long ans62 = 1;\n    long long ans63 = 1;\n\
    \    long long ans64 = 1;\n    long long ans65 = 1;\n    long long ans66 = 1;\n\
    \    long long ans67 = 1;\n    long long ans68 = 1;\n    long long ans69", " \
    \   // Your code here\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long cnt = 0;\n    long long ans = 0;\n    long long\
    \ cnt = 0;\n    for(int i = 0; i < n; i++) {\n        for(int j = 0; j < m; j++)\
    \ {\n            if(grid[i][j] == 1) {\n                cnt += 1;\n          \
    \      ans = std::max(ans, cnt);\n            }\n        }\n    }\n    return\
    \ ans;", "    // Your code here\n    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long ans = 0;\n    long i;\n    long j;\n \
    \   long k;\n    long l;\n    long m;\n    long n;\n    long o;\n    long p;\n\
    \    long q;\n    long r;\n    long s;\n    long t;\n    long u;\n    long v;\n\
    \    long w;\n    long x;\n    long y;\n    long z;\n    long A;\n    long B;\n\
    \    long C;\n    long D;\n    long E;\n    long F;\n    long G;\n    long H;\n\
    \    long I;\n    long J;\n    long K;\n    long L;\n    long M;\n    long N;\n\
    \    long O;\n    long P;\n    long Q;\n    long R;\n    long S;\n    long T;\n\
    \    long U;\n    long V;\n    long W;\n    long X;\n    long Y;\n    long Z;\n\
    \    long A;\n    long B;\n    long C;\n    long D;\n    long E;\n    long F;\n\
    \    long G;\n    long H;\n    long I;\n    long J;\n    long K;\n    long L;\n\
    \    long M;\n    long N;\n    long O;\n    long P;\n    long Q;\n    long R;\n\
    \    long S;\n    long T;\n    long U;\n    long V;\n    long W;\n    long X;\n\
    \    long Y;\n    long Z;\n    long A;\n    long B;\n    long C;\n    long D;\n\
    \    long E;\n    long F;\n    long G;\n    long H;\n    long I;\n    long J;\n\
    \    long K;\n    long L;\n    long M;\n    long N;\n    long O;\n    long P;\n\
    \    long Q;\n    long R;\n    long S;\n    long T;\n    long U;\n    long V;\n\
    \    long W;\n    long X;\n    long Y;\n    long Z;\n    long A;\n    long B;\n\
    \    long C;\n    long D;\n    long E;", "    // write your code here\n    long\
    \ ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long\
    \ ans1 = 0;\n    long ans2 = 0;\n    long ans3 = 0;\n    long ans4 = 0;\n    long\
    \ ans5 = 0;\n    long ans6 = 0;\n    long ans7 = 0;\n    long ans8 = 0;\n    long\
    \ ans9 = 0;\n    long ans10 = 0;\n    long ans11 = 0;\n    long ans12 = 0;\n \
    \   long ans13 = 0;\n    long ans14 = 0;\n    long ans15 = 0;\n    long ans16\
    \ = 0;\n    long ans17 = 0;\n    long ans18 = 0;\n    long ans19 = 0;\n    long\
    \ ans20 = 0;\n    long ansp = 0;\n    long ansp1 = 0;\n    long ansp2 = 0;\n \
    \   long ansp3 = 0;\n    long ansp4 = 0;\n    long ansp5 = 0;\n    long ansp6\
    \ = 0;\n    long ansp7 = 0;\n    long ansp8 = 0;\n    long ansp9 = 0;\n    long\
    \ ansp10 = 0;\n    long ansp11 = 0;\n    long ansp12 = 0;\n    long ansp13 = 0;\n\
    \    long ansp14 = 0;\n    long ansp15 = 0;\n    long ansp16 = 0;\n    long ansp17\
    \ = 0;\n    long ansp18 = 0;\n    long ansp19 = 0;\n    long ansp20 = 0;\n   \
    \ long ansp21 = 0;\n    long ansp22 = 0;\n    long ansp23 = 0;\n    long ansp24\
    \ = 0;\n    long ansp25 = 0;\n    long ansp26 = 0;\n    long ansp27 = 0;\n   \
    \ long ansp28 = 0;\n    long ansp29 = 0;\n    long ansp30 = 0;\n    long ansp31\
    \ = 0;\n    long ansp32 = 0;\n    long ansp33 = 0;\n    long ansp34 = 0;\n   \
    \ long ansp35 = 0;\n    long ansp36 = 0;\n    long ansp37 = 0;\n    long ansp38\
    \ = 0;\n    long ansp39 = 0;\n    long ansp40 = 0;\n    long ansp41 = 0;\n   \
    \ long ansp42 = 0;\n    long ansp43 = 0;\n    long ansp44 = 0;\n    long ansp45\
    \ = 0;\n    long ansp46 = 0;\n    long ansp47 = 0;\n    long ansp48 = 0;\n   \
    \ long ansp49 = 0;\n    long ansp50 = 0;\n    long ansp51 = 0;\n    long ansp52\
    \ = 0;\n    long ansp", "    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long long an = n * m;\n    long long sum = 0;\n   \
    \ long long count = 0;\n    long long cur = 0;\n    long long max = 0;\n    long\
    \ long min = 0;\n    long long cur_cap = 0;\n    long long max_cap = 0;\n    long\
    \ long min_cap = 0;\n    long long cur_cap_max = 0;\n    long long max_cap_max\
    \ = 0;\n    long long min_cap_max = 0;\n    long long cur_cap_min = 0;\n    long\
    \ long max_cap_min = 0;\n    long long min_cap_min = 0;\n    long long cur_cap_min\
    \ = 0;\n    long long max_cap_min = 0;\n    long long min_cap_min = 0;\n    long\
    \ long cur_cap_min = 0;\n    long long max_cap_min = 0;\n    long long min_cap_min\
    \ = 0;\n    long long cur_cap_min = 0;\n    long long max_cap_min = 0;\n    long\
    \ long min_cap_min = 0;\n    long long cur_cap_min = 0;\n    long long max_cap_min\
    \ = 0;\n    long long min_cap_min = 0;\n    long long cur_cap_min = 0;\n    long\
    \ long max_cap_min = 0;\n    long long min_cap_min = 0;\n    long long cur_cap_min\
    \ = 0;\n    long long max_cap_min = 0;\n    long long min_cap_min = 0;\n    long\
    \ long cur_cap_min = 0;\n    long long max_cap_min = 0;\n    long long min_cap_min\
    \ = 0;\n    long long cur_cap_min = 0;\n    long long max_cap_min = 0;\n    long\
    \ long min_cap_min = 0;\n    long long cur_cap_min = 0;\n    long long max_cap_min\
    \ = 0;\n    long long min_cap_min = 0;\n    long long cur_cap_min = 0;\n    long\
    \ long max_cap_min = 0;\n    long long min_cap_min = 0;\n    long long cur_cap_min\
    \ = 0;\n    long long max_cap_min = 0;\n    long long min_cap_min = 0;\n    long\
    \ long cur_cap_min = 0;\n    long long max_cap_min = 0;\n    long long min_cap_min\
    \ = 0;\n    long long cur_cap_min = 0;\n    long long max_cap_min = 0;\n    long\
    \ long min_cap_min = 0;\n    long long cur_cap_min = 0;\n    long long max_cap_min\
    \ = 0;\n    long long min_cap_min = 0;\n    long ", "    // write your code here\n\
    \    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long long an = n;\n    long long bn = m;\n    long long cn = capacity;\n\
    \    long long ans = an;\n    long long bn = m;\n    long long cn = capacity;\n\
    \    long long an = n;\n    long long bn = m;\n    long long cn = capacity;\n\
    \    long long ans = an;\n    long long bn = m;\n    long long cn = capacity;\n\
    \    long long an = n;\n    long long bn = m;\n    long long cn = capacity;\n\
    \    long long ans = an;\n    long long bn = m;\n    long long cn = capacity;\n\
    \    long long an = n;\n    long long bn = m;\n    long long cn = capacity;\n\
    \    long long ans = an;\n    long long bn = m;\n    long long cn = capacity;\n\
    \    long long an = n;\n    long long bn = m;\n    long long cn = capacity;\n\
    \    long long ans = an;\n    long long bn = m;\n    long long cn = capacity;\n\
    \    long long an = n;\n    long long bn = m;\n    long long cn = capacity;\n\
    \    long long ans = an;\n    long long bn = m;\n    long long cn = capacity;\n\
    \    long long an = n;\n    long long bn = m;\n    long long cn = capacity;\n\
    \    long long ans = an;\n    long long bn = m;\n    long long cn = capacity;\n\
    \    long long an = n;\n    long long bn = m;\n    long long cn = capacity;\n\
    \    long long ans = an;\n    long long bn = m;\n    long long cn = capacity;\n\
    \    long long an = n;\n    long long bn = m;\n    long long cn = capacity;\n\
    \    long long ans = an;\n    long long bn = m;\n    long long cn = capacity;\n\
    \    long long an = n;\n    long long bn = m;\n    long long cn = capacity;\n\
    \    long long ans = an;\n    long long bn = m;\n    long long cn = capacity;\n\
    \    long long an = n;\n    long long bn = m;\n    long long cn = capacity;\n\
    \    long long ans = an;\n    long long bn = m;\n", "    // Your code here\n \
    \   long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n \
    \   long ans = std::numeric_limits<long>::max();\n    long long ans1 = 0;\n  \
    \  long long ans2 = 0;\n    long long ans3 = 0;\n    long long ans4 = 0;\n   \
    \ long long ans5 = 0;\n    long long ans6 = 0;\n    long long ans7 = 0;\n    long\
    \ long ans8 = 0;\n    long long ans9 = 0;\n    long long ans10 = 0;\n    long\
    \ long ans11 = 0;\n    long long ans12 = 0;\n    long long ans13 = 0;\n    long\
    \ long ans14 = 0;\n    long long ans15 = 0;\n    long long ans16 = 0;\n    long\
    \ long ans17 = 0;\n    long long ans18 = 0;\n    long long ans19 = 0;\n    long\
    \ long ans20 = 0;\n    long long ans21 = 0;\n    long long ans22 = 0;\n    long\
    \ long ans23 = 0;\n    long long ans24 = 0;\n    long long ans25 = 0;\n    long\
    \ long ans26 = 0;\n    long long ans27 = 0;\n    long long ans28 = 0;\n    long\
    \ long ans29 = 0;\n    long long ans30 = 0;\n    long long ans31 = 0;\n    long\
    \ long ans32 = 0;\n    long long ans33 = 0;\n    long long ans34 = 0;\n    long\
    \ long ans35 = 0;\n    long long ans36 = 0;\n    long long ans37 = 0;\n    long\
    \ long ans38 = 0;\n    long long ans39 = 0;\n    long long ans40 = 0;\n    long\
    \ long ans41 = 1;\n    long long ans42 = 1;\n    long long ans43 = 1;\n    long\
    \ long ans44 = 1;\n    long long ans45 = 1;\n    long long ans46 = 1;\n    long\
    \ long ans47 = 1;\n    long long ans48 = 1;\n    long long ans49 = 1;\n    long\
    \ long ans50 = 1;\n    long long ans51 = 1;\n    long long ans52 = 1;\n    long\
    \ long ans53 = 1;\n    long long ans54 = 1;\n    long long ans55 = 1;\n    long\
    \ long ans56 = 1;\n    long long ans57 = 1;\n    long long ans58 = 1;\n    long\
    \ long ans59 = 1;\n    long long ans60 = 1;\n    long long ans61 = 1;\n    long\
    \ long ans62 = 1;\n    long long ans63 = 1;\n    long long ans64 = 1;\n    long\
    \ long ans65 = 1;\n    long long ans66 = 1;\n    long long ans67 = 1;\n    long ",
  "    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n  \
    \  long long ans = 0;\n    long long cnt = 0;\n    long long max = 0;\n    long\
    \ long min = 0;\n    long long sum = 0;\n    long long cur = 0;\n    long long\
    \ temp = 0;\n    long long temp2 = 0;\n    long long temp3 = 0;\n    long long\
    \ temp4 = 0;\n    long long temp5 = 0;\n    long long temp6 = 0;\n    long long\
    \ temp7 = 0;\n    long long temp8 = 0;\n    long long temp9 = 0;\n    long long\
    \ temp10 = 0;\n    long long temp11 = 0;\n    long long temp12 = 0;\n    long\
    \ long temp13 = 0;\n    long long temp14 = 0;\n    long long temp15 = 0;\n   \
    \ long long temp16 = 0;\n    long long temp17 = 0;\n    long long temp18 = 0;\n\
    \    long long temp19 = 0;\n    long long temp20 = 0;\n    long long temp21 =\
    \ 0;\n    long long temp22 = 0;\n    long long temp23 = 0;\n    long long temp24\
    \ = 0;\n    long long temp25 = 0;\n    long long temp26 = 0;\n    long long temp27\
    \ = 0;\n    long long temp28 = 0;\n    long long temp29 = 0;\n    long long temp30\
    \ = 0;\n    long long temp31 = 0;\n    long long temp32 = 0;\n    long long temp33\
    \ = 0;\n    long long temp34 = 0;\n    long long temp35 = 0;\n    long long temp36\
    \ = 0;\n    long long temp37 = 0;\n    long long temp38 = 0;\n    long long temp39\
    \ = 0;\n    long long temp40 = 0;\n    long long temp41 = 0;\n    long long temp42\
    \ = 0;\n    long long temp43 = 0;\n    long long temp44 = 0;\n    long long temp45\
    \ = 0;\n    long long temp46 = 0;\n    long long temp47 = 0;\n    long long temp48\
    \ = 0;\n    long long temp49 = 0;\n    long long temp50 = 0;\n    long long temp51\
    \ = 0;\n    long long temp52 = 0;\n    long long temp53 = 0;\n    long long temp54\
    \ = 0;\n    long long temp55 = 0;\n    long long temp56 = 0;\n    long long temp57\
    \ = 0;\n    long long temp58 = 0;\n    long long temp59 = 0;\n    long long temp60\
    \ = 0;\n    long long temp61 = 0;\n    long long temp62 = 0;\n    long long temp63\
    \ = 0;\n    long long temp64 = 0;\n    long long temp65 = 0;\n    long long temp66\
    \ = 0;", "    // write your code here\n    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long an = 0;\n    long long ans = 0;\n    long\
    \ long max = 0;\n    long long cur = 0;\n    long long cur2 = 0;\n    long long\
    \ cur3 = 0;\n    long long cur4 = 0;\n    long long cur5 = 0;\n    long long cur6\
    \ = 0;\n    long long cur7 = 0;\n    long long cur8 = 0;\n    long long cur9 =\
    \ 0;\n    long long cur10 = 0;\n    long long cur11 = 0;\n    long long cur12\
    \ = 0;\n    long long cur13 = 0;\n    long long cur14 = 0;\n    long long cur15\
    \ = 0;\n    long long cur16 = 0;\n    long long cur17 = 0;\n    long long cur18\
    \ = 0;\n    long long cur19 = 0;\n    long long cur20 = 0;\n    long long cur21\
    \ = 0;\n    long long cur22 = 0;\n    long long cur23 = 0;\n    long long cur24\
    \ = 0;\n    long long cur25 = 0;\n    long long cur26 = 0;\n    long long cur27\
    \ = 0;\n    long long cur28 = 0;\n    long long cur29 = 0;\n    long long cur30\
    \ = 0;\n    long long cur31 = 0;\n    long long cur32 = 0;\n    long long cur33\
    \ = 0;\n    long long cur34 = 0;\n    long long cur35 = 0;\n    long long cur36\
    \ = 0;\n    long long cur37 = 0;\n    long long cur38 = 0;\n    long long cur39\
    \ = 0;\n    long long cur40 = 0;\n    long long cur41 = 0;\n    long long cur42\
    \ = 0;\n    long long cur43 = 0;\n    long long cur44 = 0;\n    long long cur45\
    \ = 0;\n    long long cur46 = 0;\n    long long cur47 = 0;\n    long long cur48\
    \ = 0;\n    long long cur49 = 0;\n    long long cur50 = 0;\n    long long cur51\
    \ = 0;\n    long long cur52 = 0;\n    long long cur53 = 0;\n    long long cur54\
    \ = 0;\n    long long cur55 = 0;\n    long long cur56 = 0;\n    long long cur57\
    \ = 0;\n    long long cur58 = 0;\n    long long cur59 = 0;\n    long long cur60\
    \ = 0;\n    long long cur61 = 0;\n    long long cur62 = 0;\n    long long cur63\
    \ = 0;\n    long long cur64 = 0;\n    long long cur65 = 0;\n    long long cur66\
    \ = 0;\n    long long cur67 = 0;\n    long long cur68 = 0;", "    // write your\
    \ code here\n    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long count = 0;\n    long cur_cap = capacity;\n    long cur_ans = 0;\n  \
    \  long cur_n = 0;\n    long cur_m = 1;\n    long cur_count = 0;\n    long cur_cur_cap\
    \ = 0;\n    long cur_cur_ans = 0;\n    long cur_cur_n = 0;\n    long cur_cur_m\
    \ = 1;\n    long cur_cur_count = 0;\n    long cur_cur_cur_cap = 0;\n    long cur_cur_cur_ans\
    \ = 0;\n    long cur_cur_cur_n = 0;\n    long cur_cur_cur_m = 1;\n    long cur_cur_cur_count\
    \ = 0;\n    long cur_cur_cur_cur_cap = 0;\n    long cur_cur_cur_cur_ans = 0;\n\
    \    long cur_cur_cur_cur_n = 0;\n    long cur_cur_cur_cur_m = 1;\n    long cur_cur_cur_cur_count\
    \ = 0;\n    long cur_cur_cur_cur_cur_cap = 0;\n    long cur_cur_cur_cur_cur_ans\
    \ = 0;\n    long cur_cur_cur_cur_cur_n = 0;\n    long cur_cur_cur_cur_m = 1;\n\
    \    long cur_cur_cur_cur_count = 0;\n    long cur_cur_cur_cur_cur_cap = 0;\n\
    \    long cur_cur_cur_cur_cur_ans = 0;\n    long cur_cur_cur_cur_cur_n = 0;\n\
    \    long cur_cur_cur_cur_m = 1;\n    long cur_cur_cur_cur_count = 0;\n    long\
    \ cur_cur_cur_cur_cur_cap = 0;\n    long cur_cur_cur_cur_cur_ans = 0;\n    long\
    \ cur_cur_cur_cur_cur_n = 0;\n    long cur_cur_cur_cur_m = 1;\n    long cur_cur_cur_cur_count\
    \ = 0;\n    long cur_cur_cur_cur_cur_cap = 0;\n    long cur_cur_cur_cur_cur_ans\
    \ = 0;\n    long cur_cur_cur_cur_cur_n = 0;\n    long cur_cur_cur_cur_m = 1;\n\
    \    long cur_cur_cur_cur_count = 0;\n    long cur_cur_cur_cur_cur_cap = 0;\n\
    \    long cur_cur_cur_cur_cur_ans = 0;\n    long cur_cur_cur_cur_cur_n = 0;\n\
    \    long cur_cur_cur_cur_m = 1;\n    long cur_cur_cur_cur_count = 0;\n    long\
    \ cur_cur_cur_cur_cur_cap = 0;\n    long cur_cur_cur_cur_cur_ans = 0;\n    long\
    \ cur_cur_cur_cur_cur_n = 0;\n    long cur_cur_cur_cur_m = 1;\n    long cur_cur_cur_cur_count\
    \ = 0;\n    long cur_cur_cur_cur_cur_cap = 0;\n    long cur_cur_cur_cur_cur_ans\
    \ = 0;\n    long cur_cur_cur_cur_cur_n = 0;\n    long cur_cur_cur_cur_m = 1;\n\
    \    long cur_cur_cur_cur_count = 0;\n    long cur_cur_cur_cur_", "    // write\
    \ your code here\n    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long count = 0;\n    long long max = 0;\n    long long min = 0;\n    long\
    \ long sum = 0;\n    long long temp = 0;\n    long long temp2 = 0;\n    long long\
    \ temp3 = 0;\n    long long temp4 = 0;\n    long long temp5 = 0;\n    long long\
    \ temp6 = 0;\n    long long temp7 = 0;\n    long long temp8 = 0;\n    long long\
    \ temp9 = 0;\n    long long temp10 = 0;\n    long long temp11 = 0;\n    long long\
    \ temp12 = 0;\n    long long temp13 = 0;\n    long long temp14 = 0;\n    long\
    \ long temp15 = 0;\n    long long temp16 = 0;\n    long long temp17 = 0;\n   \
    \ long long temp18 = 0;\n    long long temp19 = 0;\n    long long temp20 = 0;\n\
    \    long long temp21 = 0;\n    long long temp22 = 0;\n    long long temp23 =\
    \ 0;\n    long long temp24 = 0;\n    long long temp25 = 0;\n    long long temp26\
    \ = 0;\n    long long temp27 = 0;\n    long long temp28 = 0;\n    long long temp29\
    \ = 0;\n    long long temp30 = 0;\n    long long temp31 = 0;\n    long long temp32\
    \ = 0;\n    long long temp33 = 0;\n    long long temp34 = 0;\n    long long temp35\
    \ = 0;\n    long long temp36 = 0;\n    long long temp37 = 0;\n    long long temp38\
    \ = 0;\n    long long temp39 = 0;\n    long long temp40 = 0;\n    long long temp41\
    \ = 0;\n    long long temp42 = 0;\n    long long temp43 = 0;\n    long long temp44\
    \ = 0;\n    long long temp45 = 0;\n    long long temp46 = 0;\n    long long temp47\
    \ = 0;\n    long long temp48 = 0;\n    long long temp49 = 0;\n    long long temp50\
    \ = 0;\n    long long temp51 = 0;\n    long long temp52 = 0;\n    long long temp53\
    \ = 0;\n    long long temp54 = 0;\n    long long temp55 = 0;\n    long long temp56\
    \ = 0;\n    long long temp57 = 0;\n    long long temp58 = 0;\n    long long temp59\
    \ = 0;\n    long long temp60 = 0;\n    long long temp61 = 0;\n    long long temp62\
    \ = 0;\n    long long temp63 = 0;\n    long long temp64 = 0;\n    long long temp65\
    \ = 0;\n    long long temp66 = 0;\n    long long temp67 = 0;\n    ", "    // write\
    \ your code here\n    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long ans = 0;\n    long long ans2 = 0;\n    long long ans3 = 0;\n    long\
    \ long ans4 = 0;\n    long long ans5 = 0;\n    long long ans6 = 0;\n    long long\
    \ ans7 = 0;\n    long long ans8 = 0;\n    long long ans9 = 0;\n    long long ans10\
    \ = 0;\n    long long ans11 = 0;\n    long long ans12 = 0;\n    long long ans13\
    \ = 0;\n    long long ans14 = 0;\n    long long ans15 = 0;\n    long long ans16\
    \ = 0;\n    long long ans17 = 0;\n    long long ans18 = 0;\n    long long ans19\
    \ = 0;\n    long long ans20 = 0;\n    long long ansp = 0;\n    long long ansp2\
    \ = 0;\n    long long ansp3 = 0;\n    long long ansp4 = 0;\n    long long ansp5\
    \ = 0;\n    long long ansp6 = 0;\n    long long ansp7 = 0;\n    long long ansp8\
    \ = 0;\n    long long ansp9 = 0;\n    long long ansp10 = 0;\n    long long ansp11\
    \ = 0;\n    long long ansp12 = 0;\n    long long ansp13 = 0;\n    long long ansp14\
    \ = 0;\n    long long ansp15 = 0;\n    long long ansp16 = 0;\n    long long ansp17\
    \ = 0;\n    long long ansp18 = 0;\n    long long ansp19 = 0;\n    long long ansp20\
    \ = 0;\n    long long anspp = 0;\n    long long anspp2 = 0;\n    long long anspp3\
    \ = 0;\n    long long anspp4 = 0;\n    long long anspp5 = 0;\n    long long anspp6\
    \ = 0;\n    long long anspp7 = 0;\n    long long anspp8 = 0;\n    long long anspp9\
    \ = 0;\n    long long anspp10 = 0;\n    long long anspp11 = 0;\n    long long\
    \ anspp12 = 0;\n    long long anspp13 = 0;\n    long long anspp14 = 0;\n    long\
    \ long anspp15 = 0;\n    long long anspp16 = 0;\n    long long anspp17 = 0;\n\
    \    long long anspp18 = 0;\n    long long anspp19 = 0;\n    long long anspp20\
    \ = 0;\n    long long ansppp = 0;\n    long long ansppp2 = 0;\n    long long ansp",
  "    // Write your code here\n    long ans = 0;\n    long n = grid.size();\n   \
    \ long m = grid[0].size();\n    long long ans_temp = 0;\n    long long temp_ans\
    \ = 0;\n    long long temp_ans_temp = 0;\n    long long temp_ans_temp_temp = 0;\n\
    \    long long temp_ans_temp_temp_temp = 0;\n    long long temp_ans_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp = 0;\n    long\
    \ long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_", "    // Write your code here\n    long ans =\
    \ 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long count\
    \ = 0;\n    long long max = 0;\n    long long cur = 0;\n    long long cur2 = 0;\n\
    \    long long cur3 = 0;\n    long long cur4 = 0;\n    long long cur5 = 0;\n \
    \   long long cur6 = 0;\n    long long cur7 = 0;\n    long long cur8 = 0;\n  \
    \  long long cur9 = 0;\n    long long cur10 = 0;\n    long long cur11 = 0;\n \
    \   long long cur12 = 0;\n    long long cur13 = 0;\n    long long cur14 = 0;\n\
    \    long long cur15 = 0;\n    long long cur16 = 0;\n    long long cur17 = 0;\n\
    \    long long cur18 = 0;\n    long long cur19 = 0;\n    long long cur20 = 0;\n\
    \    long long cur21 = 0;\n    long long cur22 = 0;\n    long long cur23 = 0;\n\
    \    long long cur24 = 0;\n    long long cur25 = 0;\n    long long cur26 = 0;\n\
    \    long long cur27 = 0;\n    long long cur28 = 0;\n    long long cur29 = 0;\n\
    \    long long cur30 = 0;\n    long long cur31 = 0;\n    long long cur32 = 0;\n\
    \    long long cur33 = 0;\n    long long cur34 = 0;\n    long long cur35 = 0;\n\
    \    long long cur36 = 0;\n    long long cur37 = 0;\n    long long cur38 = 0;\n\
    \    long long cur39 = 0;\n    long long cur40 = 0;\n    long long cur41 = 0;\n\
    \    long long cur42 = 0;\n    long long cur43 = 0;\n    long long cur44 = 0;\n\
    \    long long cur45 = 0;\n    long long cur46 = 0;\n    long long cur47 = 0;\n\
    \    long long cur48 = 0;\n    long long cur49 = 0;\n    long long cur50 = 0;\n\
    \    long long cur51 = 0;\n    long long cur52 = 0;\n    long long cur53 = 0;\n\
    \    long long cur54 = 0;\n    long long cur55 = 0;\n    long long cur56 = 0;\n\
    \    long long cur57 = 0;\n    long long cur58 = 0;\n    long long cur59 = 0;\n\
    \    long long cur60 = 0;\n    long long cur61 = 0;\n    long long cur62 = 0;\n\
    \    long long cur63 = 0;\n    long long cur64 = 0;\n    long long cur65 = 0;\n\
    \    long long cur66 = 0;\n    long long cur67 = 0;\n    long long cur68 = 0;\n\
    \    long long cur69 = 0;", "    long ans = 0;\n    long n = grid.size();\n  \
    \  long m = grid[0].size();\n    long long an = n * m;\n    long long an2 = an\
    \ * an;\n    long long an3 = an2 * an;\n    long long an4 = an3 * an;\n    long\
    \ long an5 = an4 * an;\n    long long an6 = an5 * an;\n    long long an7 = an6\
    \ * an;\n    long long an8 = an7 * an;\n    long long an9 = an8 * an;\n    long\
    \ long an10 = an9 * an;\n    long long an11 = an10 * an;\n    long long an12 =\
    \ an11 * an;\n    long long an13 = an12 * an;\n    long long an14 = an13 * an;\n\
    \    long long an15 = an14 * an;\n    long long an16 = an15 * an;\n    long long\
    \ an17 = an16 * an;\n    long long an18 = an17 * an;\n    long long an19 = an18\
    \ * an;\n    long long an20 = an19 * an;\n    long long an21 = an20 * an;\n  \
    \  long long an22 = an21 * an;\n    long long an23 = an22 * an;\n    long long\
    \ an24 = an23 * an;\n    long long an25 = an24 * an;\n    long long an26 = an25\
    \ * an;\n    long long an27 = an26 * an;\n    long long an28 = an27 * an;\n  \
    \  long long an29 = an28 * an;\n    long long an30 = an29 * an;\n    long long\
    \ an31 = an30 * an;\n    long long an32 = an31 * an;\n    long long an33 = an32\
    \ * an;\n    long long an34 = an33 * an;\n    long long an35 = an34 * an;\n  \
    \  long long an36 = an35 * an;\n    long long an37 = an36 * an;\n    long long\
    \ an38 = an37 * an;\n    long long an39 = an38 * an;\n    long long an40 = an39\
    \ * an;\n    long long an41 = an40 * an;\n    long long an42 = an41 * an;\n  \
    \  long long an43 = an42 * an", "    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long long ans = std::numeric_limits<long long>::max();\n\
    \    for(long i = 0; i < n; i++) {\n        for(long j = 0; j < m; j++) {\n  \
    \          long long curr = grid[i][j];\n            long long curr_cap = grid[i][j\
    \ + 1];\n            long long curr_cap_new = curr_cap - 1;\n            long\
    \ long curr_cap_old = curr_cap;\n            while(curr_cap_new > 0 && curr_cap_old\
    \ > 0) {\n                curr_cap_old = curr_cap;\n                curr_cap_new\
    \ = curr_cap - 1;\n                curr_cap = curr_cap_new;\n                curr_cap_new\
    \ = curr_cap_old - 1;\n                curr_cap_old = curr_cap;\n            }\n\
    \            ans = std::min(ans, curr_cap);\n        }\n    }\n    return ans;",
  "    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n  \
    \  long long an = n * m;\n    long long an2 = an * an;\n    long long an3 = an2\
    \ * an;\n    long long an4 = an3 * an;\n    long long an5 = an4 * an;\n    long\
    \ long an6 = an5 * an;\n    long long an7 = an6 * an;\n    long long an8 = an7\
    \ * an;\n    long long an9 = an8 * an;\n    long long an10 = an9 * an;\n    long\
    \ long an11 = an10 * an;\n    long long an12 = an11 * an;\n    long long an13\
    \ = an12 * an;\n    long long an14 = an13 * an;\n    long long an15 = an14 * an;\n\
    \    long long an16 = an15 * an;\n    long long an17 = an16 * an;\n    long long\
    \ an18 = an17 * an;\n    long long an19 = an18 * an;\n    long long an20 = an19\
    \ * an;\n    long long an21 = an20 * an;\n    long long an22 = an21 * an;\n  \
    \  long long an23 = an22 * an;\n    long long an24 = an23 * an;\n    long long\
    \ an25 = an24 * an;\n    long long an26 = an25 * an;\n    long long an27 = an26\
    \ * an;\n    long long an28 = an27 * an;\n    long long an29 = an28 * an;\n  \
    \  long long an30 = an29 * an;\n    long long an31 = an30 * an;\n    long long\
    \ an32 = an31 * an;\n    long long an33 = an32 * an;\n    long long an34 = an33\
    \ * an;\n    long long an35 = an34 * an;\n    long long an36 = an35 * an;\n  \
    \  long long an37 = an36 * an;\n    long long an38 = an37 * an;\n    long long\
    \ an39 = an38 * an;\n    long long an40 = an39 * an;\n    long long an41 = an40\
    \ * an;\n    long long an42 = an41 * an;\n    long long an43 = an42 * an", " \
    \   long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n \
    \   long long dp[n + 1][m + 1];\n    memset(dp, 0, sizeof(dp));\n    \n    //\
    \ dp[i][j] represents the number of times you need to empty the i-th well \n \
    \   // to lower the j-th bucket to capacity\n    \n    // dp[0][0] is always 0\n\
    \    \n    // dp[0][0] represents the number of times you need to empty the 0-th\
    \ well to \n    // lower the 0-th bucket to capacity\n    \n    // dp[0][0] is\
    \ always 0\n    \n    for(int i = 0; i < n; i++) {\n        for(int j = 0; j <\
    \ m; j++) {\n            long long curr = 1;\n            for(int k = 0; k < i;\
    \ k++) {\n                curr *= grid[i][k];\n            }\n            for(int\
    \ k = 0; k < j; k++) {\n                curr *= grid[k][j];\n            }\n \
    \           curr *= dp[i][k];\n            \n            long long res = curr\
    \ * capacity / grid[i][j];\n            \n            ans = max(ans, res);\n \
    \           dp[i][j] = res;\n        }\n    }\n    return ans;", "    // write\
    \ your code here\n    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long count = 0;\n    long cur = 0;\n    long cur_cap = 0;\n    long cur_max\
    \ = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = 0; j < m; j++)\
    \ {\n            if(grid[i][j] == 1) {\n                cur_cap = grid[i][j];\n\
    \                cur = i;\n                cur_max = grid[i][j];\n           \
    \     while(cur_cap > capacity) {\n                    cur_cap -= grid[cur][j];\n\
    \                    cur++;\n                }\n                while(cur_cap\
    \ > 0) {\n                    grid[cur][j] -= cur_cap;\n                    cur_cap\
    \ -= grid[cur][j];\n                    cur++;\n                }\n          \
    \      count++;\n            }\n        }\n    }\n    ans = count;\n    return\
    \ ans;", "    // write your code here\n    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long long ans = 0;\n    long long count = 0;\n\
    \    long long sum = 0;\n    long long temp = 0;\n    long long temp2 = 0;\n \
    \   long long temp3 = 0;\n    long long temp4 = 0;\n    long long temp5 = 0;\n\
    \    long long temp6 = 0;\n    long long temp7 = 0;\n    long long temp8 = 0;\n\
    \    long long temp9 = 0;\n    long long temp10 = 0;\n    long long temp11 = 0;\n\
    \    long long temp12 = 0;\n    long long temp13 = 0;\n    long long temp14 =\
    \ 0;\n    long long temp15 = 0;\n    long long temp16 = 0;\n    long long temp17\
    \ = 0;\n    long long temp18 = 0;\n    long long temp19 = 0;\n    long long temp20\
    \ = 0;\n    long long temp21 = 0;\n    long long temp22 = 0;\n    long long temp23\
    \ = 0;\n    long long temp24 = 0;\n    long long temp25 = 0;\n    long long temp26\
    \ = 0;\n    long long temp27 = 0;\n    long long temp28 = 0;\n    long long temp29\
    \ = 0;\n    long long temp30 = 0;\n    long long temp31 = 0;\n    long long temp32\
    \ = 0;\n    long long temp33 = 0;\n    long long temp34 = 0;\n    long long temp35\
    \ = 0;\n    long long temp36 = 0;\n    long long temp37 = 0;\n    long long temp38\
    \ = 0;\n    long long temp39 = 0;\n    long long temp40 = 0;\n    long long temp41\
    \ = 0;\n    long long temp42 = 0;\n    long long temp43 = 0;\n    long long temp44\
    \ = 0;\n    long long temp45 = 0;\n    long long temp46 = 0;\n    long long temp47\
    \ = 0;\n    long long temp48 = 0;\n    long long temp49 = 0;\n    long long temp50\
    \ = 0;\n    long long temp51 = 0;\n    long long temp52 = 0;\n    long long temp53\
    \ = 0;\n    long long temp54 = 0;\n    long long temp55 = 0;\n    long long temp56\
    \ = 0;\n    long long temp57 = 0;\n    long long temp58 = 0;\n    long long temp59\
    \ = 0;\n    long long temp60 = 0;\n    long long temp61 = 0;\n    long long temp62\
    \ = 0;\n    long long temp63 = 0;\n    long long temp64 = 0;\n    long long temp65\
    \ = 0;\n    long long temp66 = 0;\n    long long temp67 = 0;\n    long long temp68\
    \ = 0;", "    // write your code here\n    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long ans = 0;\n    long long ans1 = 0;\n  \
    \  long long ans2 = 0;\n    long long ans3 = 0;\n    long long ans4 = 0;\n   \
    \ long long ans5 = 0;\n    long long ans6 = 0;\n    long long ans7 = 0;\n    long\
    \ long ans8 = 0;\n    long long ans9 = 0;\n    long long ans10 = 0;\n    long\
    \ long ans11 = 0;\n    long long ans12 = 0;\n    long long ans13 = 0;\n    long\
    \ long ans14 = 0;\n    long long ans15 = 0;\n    long long ans16 = 0;\n    long\
    \ long ans17 = 0;\n    long long ans18 = 0;\n    long long ans19 = 0;\n    long\
    \ long ans20 = 0;\n    long long ans21 = 0;\n    long long ans22 = 0;\n    long\
    \ long ans23 = 0;\n    long long ans24 = 0;\n    long long ans25 = 0;\n    long\
    \ long ans26 = 0;\n    long long ans27 = 0;\n    long long ans28 = 0;\n    long\
    \ long ans29 = 0;\n    long long ans30 = 0;\n    long long ans31 = 0;\n    long\
    \ long ans32 = 0;\n    long long ans33 = 0;\n    long long ans34 = 0;\n    long\
    \ long ans35 = 0;\n    long long ans36 = 0;\n    long long ans37 = 0;\n    long\
    \ long ans38 = 0;\n    long long ans39 = 0;\n    long long ans40 = 0;\n    long\
    \ long ans = n;\n    long long ans1 = m;\n    long long ans2 = n;\n    long long\
    \ ans3 = n;\n    long long ans4 = n;\n    long long ans5 = n;\n    long long ans6\
    \ = n;\n    long long ans7 = n;\n    long long ans8 = n;\n    long long ans9 =\
    \ n;\n    long long ans10 = n;\n    long long ans11 = n;\n    long long ans12\
    \ = n;\n    long long ans13 = n;\n    long long ans14 = n;\n    long long ans15\
    \ = n;\n    long long ans16 = n;\n    long long ans17 = n;\n    long long ans18\
    \ = n;\n    long long ans19 = n;\n    long long ans20 = n;\n    long long ans21\
    \ = n;\n    long long ans22 = n;\n    long long ans23 = n;\n    long long ans24\
    \ = n;\n    long long ans25 = n;\n    long long ans26 = n;\n    ", "    long ans\
    \ = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long long\
    \ an = n;\n    long long bm = m;\n    long long ans = n;\n    long long bn = m;\n\
    \    long long cn = n;\n    long long cnm = m;\n    long long cnn = n;\n    long\
    \ long cnnm = m;\n    long long cnnn = n;\n    long long cnnmn = m;\n    long\
    \ long cnnnn = n;\n    long long cnnmnm = m;\n    long long cnnnnn = n;\n    long\
    \ long cnnmnmn = m;\n    long long cnnnnnn = n;\n    long long cnnmnmnm = m;\n\
    \    long long cnnnnnnn = n;\n    long long cnnmnmnmnm = m;\n    long long cnnnnnnnn\
    \ = n;\n    long long cnnmnmnmnmn = m;\n    long long cnnnnnnnn = n;\n    long\
    \ long cnnmnmnmnmnm = m;\n    long long cnnnnnnnnn = n;\n    long long cnnmnmnmnmnm\
    \ = m;\n    long long cnnnnnnnnnn = n;\n    long long cnnmnmnmnmnm = m;\n    long\
    \ long cnnnnnnnnnn = n;\n    long long cnnmnmnmnmnm = m;\n    long long cnnnnnnnnnnn\
    \ = n;\n    long long cnnmnmnmnmnm = m;\n    long long cnnnnnnnnnnn = n;\n   \
    \ long long cnnmnmnmnmnm = m;\n    long long cnnnnnnnnnnn = n;\n    long long\
    \ cnnmnmnmnmnm = m;\n    long long cnnnnnnnnnnnn = n;\n    long long cnnmnmnmnmnm\
    \ = m;\n    long long cnnnnnnnnnnnn = n;\n    long long cnnmnmnmnmnm = m;\n  \
    \  long long cnnnnnnnnnnnn = n;\n    long long cnnmnmnmnmnm = m;\n    long long\
    \ cnnnnnnnnnnnnn = n;\n    long long cnnmnmnmnmnm = m;\n    long long cnnnnnnnnnnnnn\
    \ = n;\n    long long cnnmnmnmnmnm = m;\n    long long cnnnnnnnnnnnnn = n;\n \
    \   long long cnnmnmnmnmnm = m;\n    long long cnnnnnnnnnnnnn = n;\n", "    //\
    \ Your code here\n    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long cnt = 0;\n    long sum = 0;\n    for(long i = 0; i < n; i++) {\n   \
    \     for(long j = 0; j < m; j++) {\n            sum += grid[i][j];\n        \
    \    if(sum > capacity) {\n                cnt += 1;\n                sum -= grid[i][j];\n\
    \            }\n        }\n    }\n    ans = cnt;\n    return ans;", "    // Your\
    \ code here\n    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long cnt = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = 0;\
    \ j < m; j++) {\n            if(grid[i][j] == 1) {\n                cnt += 1;\n\
    \                if(cnt > capacity) {\n                    ans += 1;\n       \
    \             cnt = 0;\n                }\n            }\n        }\n    }\n \
    \   return ans;", "    long ans = 0;\n    long n = grid.size();\n    long m =\
    \ grid[0].size();\n    long long an = 0;\n    long long sum = 0;\n    long long\
    \ sum2 = 0;\n    long long sum3 = 0;\n    long long sum4 = 0;\n    long long sum5\
    \ = 0;\n    long long sum6 = 0;\n    long long sum7 = 0;\n    long long sum8 =\
    \ 0;\n    long long sum9 = 0;\n    long long sum10 = 0;\n    long long sum11 =\
    \ 0;\n    long long sum12 = 0;\n    long long sum13 = 0;\n    long long sum14\
    \ = 0;\n    long long sum15 = 0;\n    long long sum16 = 0;\n    long long sum17\
    \ = 0;\n    long long sum18 = 0;\n    long long sum19 = 0;\n    long long sum20\
    \ = 0;\n    long long sum21 = 0;\n    long long sum22 = 0;\n    long long sum23\
    \ = 0;\n    long long sum24 = 0;\n    long long sum25 = 0;\n    long long sum26\
    \ = 0;\n    long long sum27 = 0;\n    long long sum28 = 0;\n    long long sum29\
    \ = 0;\n    long long sum30 = 0;\n    long long sum31 = 0;\n    long long sum32\
    \ = 0;\n    long long sum33 = 0;\n    long long sum34 = 0;\n    long long sum35\
    \ = 0;\n    long long sum36 = 0;\n    long long sum37 = 0;\n    long long sum38\
    \ = 0;\n    long long sum39 = 0;\n    long long sum40 = 0;\n    long long sum41\
    \ = 0;\n    long long sum42 = 0;\n    long long sum43 = 0;\n    long long sum44\
    \ = 0;\n    long long sum45 = 0;\n    long long sum46 = 0;\n    long long sum47\
    \ = 0;\n    long long sum48 = 0;\n    long long sum49 = 0;\n    long long sum50\
    \ = 0;\n    long long sum51 = 0;\n    long long sum52 = 0;\n    long long sum53\
    \ = 0;\n    long long sum54 = 0;\n    long long sum55 = 0;\n    long long sum56\
    \ = 0;\n    long long sum57 = 0;\n    long long sum58 = 0;\n    long long sum59\
    \ = 0;\n    long long sum60 = 0;\n    long long sum61 = 0;\n    long long sum62\
    \ = 0;\n    long long sum63 = 0;\n    long long sum64 = 0;\n    long long sum65\
    \ = 0;\n    long long sum66 = 0;\n    long long sum67 = 0;\n    long long sum68\
    \ = 0;\n    long long sum69 = 0;\n    long long sum70 = 0;\n    ", "    long ans\
    \ = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long long\
    \ an = 0;\n    long long an2 = 0;\n    long long an3 = 0;\n    long long an4 =\
    \ 0;\n    long long an5 = 0;\n    long long an6 = 0;\n    long long an7 = 0;\n\
    \    long long an8 = 0;\n    long long an9 = 0;\n    long long an10 = 0;\n   \
    \ long long an11 = 0;\n    long long an12 = 0;\n    long long an13 = 0;\n    long\
    \ long an14 = 0;\n    long long an15 = 0;\n    long long an16 = 0;\n    long long\
    \ an17 = 0;\n    long long an18 = 0;\n    long long an19 = 0;\n    long long an20\
    \ = 0;\n    long long an21 = 0;\n    long long an22 = 0;\n    long long an23 =\
    \ 0;\n    long long an24 = 0;\n    long long an25 = 0;\n    long long an26 = 0;\n\
    \    long long an27 = 0;\n    long long an28 = 0;\n    long long an29 = 0;\n \
    \   long long an30 = 0;\n    long long an31 = 0;\n    long long an32 = 0;\n  \
    \  long long an33 = 0;\n    long long an34 = 0;\n    long long an35 = 0;\n   \
    \ long long an36 = 0;\n    long long an37 = 0;\n    long long an38 = 0;\n    long\
    \ long an39 = 0;\n    long long an40 = 0;\n    long long an41 = 0;\n    long long\
    \ an42 = 0;\n    long long an43 = 0;\n    long long an44 = 0;\n    long long an45\
    \ = 0;\n    long long an46 = 0;\n    long long an47 = 0;\n    long long an48 =\
    \ 0;\n    long long an49 = 0;\n    long long an50 = 0;\n    long long an51 = 0;\n\
    \    long long an52 = 0;\n    long long an53 = 0;\n    long long an54 = 0;\n \
    \   long long an55 = 0;\n    long long an56 = 0;\n    long long an57 = 0;\n  \
    \  long long an58 = 0;\n    long long an59 = 0;\n    long long an60 = 0;\n   \
    \ long long an61 = 0;\n    long long an62 = 0;\n    long long an63 = 0;\n    long\
    \ long an64 = 0;\n    long long an65 = 0;\n    long long an66 = 0;\n    long long\
    \ an67 = 0;\n    long long an68 = 0;\n    long long an69 = 0;\n    long long an70\
    \ = 0;\n    long long an71 = 0;\n", "    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long long an = std::numeric_limits<long long>::max();\n\
    \    long long an2 = std::numeric_limits<long long>::max();\n    long long an3\
    \ = std::numeric_limits<long long>::max();\n    long long an4 = std::numeric_limits<long\
    \ long>::max();\n    long long an5 = std::numeric_limits<long long>::max();\n\
    \    long long an6 = std::numeric_limits<long long>::max();\n    long long an7\
    \ = std::numeric_limits<long long>::max();\n    long long an8 = std::numeric_limits<long\
    \ long>::max();\n    long long an9 = std::numeric_limits<long long>::max();\n\
    \    long long an10 = std::numeric_limits<long long>::max();\n    long long an11\
    \ = std::numeric_limits<long long>::max();\n    long long an12 = std::numeric_limits<long\
    \ long>::max();\n    long long an13 = std::numeric_limits<long long>::max();\n\
    \    long long an14 = std::numeric_limits<long long>::max();\n    long long an15\
    \ = std::numeric_limits<long long>::max();\n    long long an16 = std::numeric_limits<long\
    \ long>::max();\n    long long an17 = std::numeric_limits<long long>::max();\n\
    \    long long an18 = std::numeric_limits<long long>::max();\n    long long an19\
    \ = std::numeric_limits<long long>::max();\n    long long an20 = std::numeric_limits<long\
    \ long>::max();\n    long long an21 = std::numeric_limits<long long>::max();\n\
    \    long long an22 = std::numeric_limits<long long>::max();\n    long long an23\
    \ = std::numeric_limits<long long>::max();\n    long long an24 = std::numeric_limits<long\
    \ long>::max();\n    long long an25 = std::numeric_limits<long long>::max();\n\
    \    long long an26 = std::numeric_limits<long long>::max();\n    long long an27\
    \ = std::numeric_limits<long long>::max();\n    long long an28 = std::numeric_limits<long\
    \ long>::max();\n    long long an29 = std::numeric_limits<long long>::max();\n\
    \    long long an30 = std::numeric_limits<long long>::max();\n    long long an31\
    \ = std::numeric_limits<long long>::max();\n    long long an32 = std::numeric_limits<long\
    \ long>::max();\n    long long an33 = std::numeric_limits<long long>::max();\n\
    \    long long an34 = std::numeric_limits", "    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long long an = 0;\n    long long sum = 0;\n\
    \    long long cur = 0;\n    long long cur2 = 0;\n    long long cur3 = 0;\n  \
    \  long long cur4 = 0;\n    long long cur5 = 0;\n    long long cur6 = 0;\n   \
    \ long long cur7 = 0;\n    long long cur8 = 0;\n    long long cur9 = 0;\n    long\
    \ long cur10 = 0;\n    long long cur11 = 0;\n    long long cur12 = 0;\n    long\
    \ long cur13 = 0;\n    long long cur14 = 0;\n    long long cur15 = 0;\n    long\
    \ long cur16 = 0;\n    long long cur17 = 0;\n    long long cur18 = 0;\n    long\
    \ long cur19 = 0;\n    long long cur20 = 0;\n    long long cur21 = 0;\n    long\
    \ long cur22 = 0;\n    long long cur23 = 0;\n    long long cur24 = 0;\n    long\
    \ long cur25 = 0;\n    long long cur26 = 0;\n    long long cur27 = 0;\n    long\
    \ long cur28 = 0;\n    long long cur29 = 0;\n    long long cur30 = 0;\n    long\
    \ long cur31 = 0;\n    long long cur32 = 0;\n    long long cur33 = 0;\n    long\
    \ long cur34 = 0;\n    long long cur35 = 0;\n    long long cur36 = 0;\n    long\
    \ long cur37 = 0;\n    long long cur38 = 0;\n    long long cur39 = 0;\n    long\
    \ long cur40 = 0;\n    long long cur41 = 0;\n    long long cur42 = 0;\n    long\
    \ long cur43 = 0;\n    long long cur44 = 0;\n    long long cur45 = 0;\n    long\
    \ long cur46 = 0;\n    long long cur47 = 0;\n    long long cur48 = 0;\n    long\
    \ long cur49 = 0;\n    long long cur50 = 0;\n    long long cur51 = 0;\n    long\
    \ long cur52 = 0;\n    long long cur53 = 0;\n    long long cur54 = 0;\n    long\
    \ long cur55 = 0;\n    long long cur56 = 0;\n    long long cur57 = 0;\n    long\
    \ long cur58 = 0;\n    long long cur59 = 0;\n    long long cur60 = 0;\n    long\
    \ long cur61 = 0;\n    long long cur62 = 0;\n    long long cur63 = 0;\n    long\
    \ long cur64 = 0;\n    long long cur65 = 0;\n    long long cur66 = 0;\n    long\
    \ long cur67 = 0;\n    long long cur68 = 0;\n    long long cur69 = 0;\n    long ",
  "    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n  \
    \  long long an = 0;\n    long long an2 = 0;\n    long long an3 = 0;\n    long\
    \ long an4 = 0;\n    long long an5 = 0;\n    long long an6 = 0;\n    long long\
    \ an7 = 0;\n    long long an8 = 0;\n    long long an9 = 0;\n    long long an10\
    \ = 0;\n    long long an11 = 0;\n    long long an12 = 0;\n    long long an13 =\
    \ 0;\n    long long an14 = 0;\n    long long an15 = 0;\n    long long an16 = 0;\n\
    \    long long an17 = 0;\n    long long an18 = 0;\n    long long an19 = 0;\n \
    \   long long an20 = 0;\n    long long an21 = 0;\n    long long an22 = 0;\n  \
    \  long long an23 = 0;\n    long long an24 = 0;\n    long long an25 = 0;\n   \
    \ long long an26 = 0;\n    long long an27 = 0;\n    long long an28 = 0;\n    long\
    \ long an29 = 0;\n    long long an30 = 0;\n    long long an31 = 0;\n    long long\
    \ an32 = 0;\n    long long an33 = 0;\n    long long an34 = 0;\n    long long an35\
    \ = 0;\n    long long an36 = 0;\n    long long an37 = 0;\n    long long an38 =\
    \ 0;\n    long long an39 = 0;\n    long long an40 = 0;\n    long long an41 = 0;\n\
    \    long long an42 = 0;\n    long long an43 = 0;\n    long long an44 = 0;\n \
    \   long long an45 = 0;\n    long long an46 = 0;\n    long long an47 = 0;\n  \
    \  long long an48 = 0;\n    long long an49 = 0;\n    long long an50 = 0;\n   \
    \ long long an51 = 0;\n    long long an52 = 0;\n    long long an53 = 0;\n    long\
    \ long an54 = 0;\n    long long an55 = 0;\n    long long an56 = 0;\n    long long\
    \ an57 = 0;\n    long long an58 = 0;\n    long long an59 = 0;\n    long long an60\
    \ = 0;\n    long long an61 = 0;\n    long long an62 = 0;\n    long long an63 =\
    \ 0;\n    long long an64 = 0;\n    long long an65 = 0;\n    long long an66 = 0;\n\
    \    long long an67 = 0;\n    long long an68 = 0;\n    long long an69 = 0;\n \
    \   long long an70 = 0;\n    long long an71 = 0;\n", "    // Write your code here\n\
    \    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long long ans_temp = 0;\n    long long temp_ans = 0;\n    long long temp_ans_temp\
    \ = 0;\n    long long temp_ans_temp2 = 0;\n    long long temp_ans_temp3 = 0;\n\
    \    long long temp_ans_temp4 = 0;\n    long long temp_ans_temp5 = 0;\n    long\
    \ long temp_ans_temp6 = 0;\n    long long temp_ans_temp7 = 0;\n    long long temp_ans_temp8\
    \ = 0;\n    long long temp_ans_temp9 = 0;\n    long long temp_ans_temp10 = 0;\n\
    \    long long temp_ans_temp11 = 0;\n    long long temp_ans_temp12 = 0;\n    long\
    \ long temp_ans_temp13 = 0;\n    long long temp_ans_temp14 = 0;\n    long long\
    \ temp_ans_temp15 = 0;\n    long long temp_ans_temp16 = 0;\n    long long temp_ans_temp17\
    \ = 0;\n    long long temp_ans_temp18 = 0;\n    long long temp_ans_temp19 = 0;\n\
    \    long long temp_ans_temp20 = 0;\n    long long temp_ans_temp21 = 0;\n    long\
    \ long temp_ans_temp22 = 0;\n    long long temp_ans_temp23 = 0;\n    long long\
    \ temp_ans_temp24 = 0;\n    long long temp_ans_temp25 = 0;\n    long long temp_ans_temp26\
    \ = 0;\n    long long temp_ans_temp27 = 0;\n    long long temp_ans_temp28 = 0;\n\
    \    long long temp_ans_temp29 = 0;\n    long long temp_ans_temp30 = 0;\n    long\
    \ long temp_ans_temp31 = 0;\n    long long temp_ans_temp32 = 0;\n    long long\
    \ temp_ans_temp33 = 0;\n    long long temp_ans_temp34 = 0;\n    long long temp_ans_temp35\
    \ = 0;\n    long long temp_ans_temp36 = 0;\n    long long temp_ans_temp37 = 0;\n\
    \    long long temp_ans_temp38 = 0;\n    long long temp_ans_temp39 = 0;\n    long\
    \ long temp_ans_temp40 = 0;\n    long long temp_ans_temp41 = 0;\n    long long\
    \ temp_ans_temp42 = 0;\n    long long temp_ans_temp43 = 0;\n    long long temp_ans_temp44\
    \ = 0;\n    long long temp_ans_temp45 = 0;\n    long long temp_ans_temp46 = 0;\n\
    \    long long temp_ans_temp47 = 0;\n    long long temp_ans_temp", "    // write\
    \ your code here\n    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long long ans = 0;\n    long long count = 0;\n    long long sum = 0;\n  \
    \  long long temp = 0;\n    long long temp2 = 0;\n    long long temp3 = 0;\n \
    \   long long temp4 = 0;\n    long long temp5 = 0;\n    long long temp6 = 0;\n\
    \    long long temp7 = 0;\n    long long temp8 = 0;\n    long long temp9 = 0;\n\
    \    long long temp10 = 0;\n    long long temp11 = 0;\n    long long temp12 =\
    \ 0;\n    long long temp13 = 0;\n    long long temp14 = 0;\n    long long temp15\
    \ = 0;\n    long long temp16 = 0;\n    long long temp17 = 0;\n    long long temp18\
    \ = 0;\n    long long temp19 = 0;\n    long long temp20 = 0;\n    long long temp21\
    \ = 0;\n    long long temp22 = 0;\n    long long temp23 = 0;\n    long long temp24\
    \ = 0;\n    long long temp25 = 0;\n    long long temp26 = 0;\n    long long temp27\
    \ = 0;\n    long long temp28 = 0;\n    long long temp29 = 0;\n    long long temp30\
    \ = 0;\n    long long temp31 = 0;\n    long long temp32 = 0;\n    long long temp33\
    \ = 0;\n    long long temp34 = 0;\n    long long temp35 = 0;\n    long long temp36\
    \ = 0;\n    long long temp37 = 0;\n    long long temp38 = 0;\n    long long temp39\
    \ = 0;\n    long long temp40 = 0;\n    long long temp41 = 0;\n    long long temp42\
    \ = 0;\n    long long temp43 = 0;\n    long long temp44 = 0;\n    long long temp45\
    \ = 0;\n    long long temp46 = 0;\n    long long temp47 = 0;\n    long long temp48\
    \ = 0;\n    long long temp49 = 0;\n    long long temp50 = 0;\n    long long temp51\
    \ = 0;\n    long long temp52 = 0;\n    long long temp53 = 0;\n    long long temp54\
    \ = 0;\n    long long temp55 = 0;\n    long long temp56 = 0;\n    long long temp57\
    \ = 0;\n    long long temp58 = 0;\n    long long temp59 = 0;\n    long long temp60\
    \ = 0;\n    long long temp61 = 0;\n    long long temp62 = 0;\n    long long temp63\
    \ = 0;\n    long long temp64 = 0;\n    long long temp65 = 0;\n    long long temp66\
    \ = 0;\n    long long temp67 = 0;\n    long long temp68 = 0;", "    // Your code\
    \ here\n    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long ans = 0;\n    long i, j;\n    for(i = 0; i < n; i++) {\n        for(j\
    \ = 0; j < m; j++) {\n            if(grid[i][j] == 1) {\n                ans +=\
    \ 1;\n                if(capacity - ans > 0) {\n                    grid[i][j]\
    \ = 0;\n                    ans = 1;\n                    capacity -= ans;\n \
    \               }\n            }\n        }\n    }\n    return ans;", "    long\
    \ ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long\
    \ long an = 0;\n    long long cnt = 0;\n    long long cnt2 = 0;\n    long long\
    \ cnt3 = 0;\n    long long cnt4 = 0;\n    long long cnt5 = 0;\n    long long cnt6\
    \ = 0;\n    long long cnt7 = 0;\n    long long cnt8 = 0;\n    long long cnt9 =\
    \ 0;\n    long long cnt10 = 0;\n    long long cnt11 = 0;\n    long long cnt12\
    \ = 0;\n    long long cnt13 = 0;\n    long long cnt14 = 0;\n    long long cnt15\
    \ = 0;\n    long long cnt16 = 0;\n    long long cnt17 = 0;\n    long long cnt18\
    \ = 0;\n    long long cnt19 = 0;\n    long long cnt20 = 0;\n    long long cnt21\
    \ = 0;\n    long long cnt22 = 0;\n    long long cnt23 = 0;\n    long long cnt24\
    \ = 0;\n    long long cnt25 = 0;\n    long long cnt26 = 0;\n    long long cnt27\
    \ = 0;\n    long long cnt28 = 0;\n    long long cnt29 = 0;\n    long long cnt30\
    \ = 0;\n    long long cnt31 = 0;\n    long long cnt32 = 0;\n    long long cnt33\
    \ = 0;\n    long long cnt34 = 0;\n    long long cnt35 = 0;\n    long long cnt36\
    \ = 0;\n    long long cnt37 = 0;\n    long long cnt38 = 0;\n    long long cnt39\
    \ = 0;\n    long long cnt40 = 0;\n    long long cnt41 = 0;\n    long long cnt42\
    \ = 0;\n    long long cnt43 = 0;\n    long long cnt44 = 0;\n    long long cnt45\
    \ = 0;\n    long long cnt46 = 0;\n    long long cnt47 = 0;\n    long long cnt48\
    \ = 0;\n    long long cnt49 = 0;\n    long long cnt50 = 0;\n    long long cnt51\
    \ = 0;\n    long long cnt52 = 0;\n    long long cnt53 = 0;\n    long long cnt54\
    \ = 0;\n    long long cnt55 = 0;\n    long long cnt56 = 0;\n    long long cnt57\
    \ = 0;\n    long long cnt58 = 0;\n    long long cnt59 = 0;\n    long long cnt60\
    \ = 0;\n    long long cnt61 = 0;\n    long long cnt62 = 0;\n    long long cnt63\
    \ = 0;\n    long long cnt64 = 0;\n    long long cnt65 = 0;\n    long long cnt66\
    \ = 0;\n    long long cnt67 = 0;\n    long long cnt68 = 0;\n    long long cnt69\
    \ = 0;\n    long long cnt70 = 0;\n    ", "    // write your code here\n    long\
    \ ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long\
    \ ans = std::numeric_limits<long>::max();\n    for(long i = 0; i < n; i++) {\n\
    \        for(long j = 0; j < m; j++) {\n            long count = 0;\n        \
    \    for(long k = 0; k < n; k++) {\n                for(long l = 0; l < m; l++)\
    \ {\n                    if(grid[i][k] == 1 && grid[k][j] == 1) {\n          \
    \              count++;\n                    }\n                }\n          \
    \  }\n            if(count > ans) {\n                ans = count;\n          \
    \  }\n        }\n    }\n    return ans;", "    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long long dp[n + 1][m + 1];\n    // dp[i][j]\
    \ means the number of ways to fill the i-th row and j-th column with water \n\
    \    // with capacity equal to grid[i][j]\n    memset(dp, 0, sizeof(dp));\n  \
    \  // dp[0][0] is always 1 because all wells have the same length\n    dp[0][0]\
    \ = 1;\n    // dp[1][0] is 1 because all wells have the same capacity\n    dp[1][0]\
    \ = capacity;\n    // dp[i][j] = dp[i-1][j] + dp[i][j-1]\n    for (int i = 1;\
    \ i <= n; i++) {\n        for (int j = 1; j <= m; j++) {\n            long long\
    \ ans = dp[i - 1][j] + dp[i][j - 1];\n            if (ans > capacity) {\n    \
    \            ans = capacity;\n            }\n            dp[i][j] = ans;\n   \
    \     }\n    }\n    // dp[n][m] means the number of ways to fill the n-th row\
    \ and m-th column with water \n    // with capacity equal to grid[n][m]\n    return\
    \ dp[n][m];", "    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long long ans1 = 0;\n    long long ans2 = 0;\n    long long ans3 = 0;\n \
    \   long long ans4 = 0;\n    long long ans5 = 0;\n    long long ans6 = 0;\n  \
    \  long long ans7 = 0;\n    long long ans8 = 0;\n    long long ans9 = 0;\n   \
    \ long long ans10 = 0;\n    long long ans11 = 0;\n    long long ans12 = 0;\n \
    \   long long ans13 = 0;\n    long long ans14 = 0;\n    long long ans15 = 0;\n\
    \    long long ans16 = 0;\n    long long ans17 = 0;\n    long long ans18 = 0;\n\
    \    long long ans19 = 0;\n    long long ans20 = 0;\n    long long ansp1 = 0;\
    \ \n    long long ansp2 = 0;\n    long long ansp3 = 0;\n    long long ansp4 =\
    \ 0;\n    long long ansp5 = 0;\n    long long ansp6 = 0;\n    long long ansp7\
    \ = 0;\n    long long ansp8 = 0;\n    long long ansp9 = 0;\n    long long ansp10\
    \ = 0;\n    long long ansp11 = 0;\n    long long ansp12 = 0;\n    long long ansp13\
    \ = 0;\n    long long ansp14 = 0;\n    long long ansp15 = 0;\n    long long ansp16\
    \ = 0;\n    long long ansp17 = 0;\n    long long ansp18 = 0;\n    long long ansp19\
    \ = 0;\n    long long ansp20 = 0;\n    long long ansp21 = 0;\n    long long ansp22\
    \ = 0;\n    long long ansp23 = 0;\n    long long ansp24 = 0;\n    long long ansp25\
    \ = 0;\n    long long ansp26 = 0;\n    long long ansp27 = 0;\n    long long ansp28\
    \ = 0;\n    long long ansp29 = 0;\n    long long ansp30 = 0;\n    long long ansp31\
    \ = 0;\n    long long ansp32 = 0;\n    long long ansp33 = 0;\n    long long ansp34\
    \ = 0;\n    long long ansp35 = 0;\n    long long ansp36 = 0;\n    long long ansp37\
    \ = 0;\n    long long ansp38 = 0;\n    long long ansp39 = 0;\n    long long ansp40\
    \ = 0;\n    long long ansp41 = 0;\n    long long ansp42 = 0;\n    long long ansp43\
    \ = 0;\n    long long ansp44 = 0;\n    long long ansp45", "    // write your code\
    \ here\n    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long ans = std::numeric_limits<long>::max();\n    long long ans1 = 0;\n \
    \   long long ans2 = 0;\n    long long ans3 = 0;\n    long long ans4 = 0;\n  \
    \  long long ans5 = 0;\n    long long ans6 = 0;\n    long long ans7 = 0;\n   \
    \ long long ans8 = 0;\n    long long ans9 = 0;\n    long long ans10 = 0;\n   \
    \ long long ans11 = 0;\n    long long ans12 = 0;\n    long long ans13 = 0;\n \
    \   long long ans14 = 0;\n    long long ans15 = 0;\n    long long ans16 = 0;\n\
    \    long long ans17 = 0;\n    long long ans18 = 0;\n    long long ans19 = 0;\n\
    \    long long ans20 = 0;\n    long long ansp = 0;\n    long long ansp1 = 0;\n\
    \    long long ansp2 = 0;\n    long long ansp3 = 0;\n    long long ansp4 = 0;\n\
    \    long long ansp5 = 0;\n    long long ansp6 = 0;\n    long long ansp7 = 0;\n\
    \    long long ansp8 = 0;\n    long long ansp9 = 0;\n    long long ansp10 = 0;\n\
    \    long long ansp11 = 0;\n    long long ansp12 = 0;\n    long long ansp13 =\
    \ 0;\n    long long ansp14 = 0;\n    long long ansp15 = 0;\n    long long ansp16\
    \ = 0;\n    long long ansp17 = 0;\n    long long ansp18 = 0;\n    long long ansp19\
    \ = 0;\n    long long ansp20 = 0;\n    long long anspp = 0;\n    long long anspp1\
    \ = 0;\n    long long anspp2 = 0;\n    long long anspp3 = 0;\n    long long anspp4\
    \ = 0;\n    long long anspp5 = 0;\n    long long anspp6 = 0;\n    long long anspp7\
    \ = 0;\n    long long anspp8 = 0;\n    long long anspp9 = 0;\n    long long anspp10\
    \ = 0;\n    long long anspp11 = 0;\n    long long anspp12 = 0;\n    long long\
    \ anspp13 = 0;\n    long long anspp14 = 0;\n    long long anspp15 = 0;\n    long\
    \ long anspp16 = 0;\n    long long anspp17 = 0;\n    long long anspp18 = 0;\n\
    \    long long anspp19 = 0;\n", "    // write your code here\n    long ans = 0;\n\
    \    long long n = grid.size();\n    long long m = grid[0].size();\n    long long\
    \ ans = 0;\n    long long count = 0;\n    long long sum = 0;\n    long long sum2\
    \ = 0;\n    long long sum3 = 0;\n    long long sum4 = 0;\n    long long sum5 =\
    \ 0;\n    long long sum6 = 0;\n    long long sum7 = 0;\n    long long sum8 = 0;\n\
    \    long long sum9 = 0;\n    long long sum10 = 0;\n    long long sum11 = 0;\n\
    \    long long sum12 = 0;\n    long long sum13 = 0;\n    long long sum14 = 0;\n\
    \    long long sum15 = 0;\n    long long sum16 = 0;\n    long long sum17 = 0;\n\
    \    long long sum18 = 0;\n    long long sum19 = 0;\n    long long sum20 = 0;\n\
    \    long long sum21 = 0;\n    long long sum22 = 0;\n    long long sum23 = 0;\n\
    \    long long sum24 = 0;\n    long long sum25 = 0;\n    long long sum26 = 0;\n\
    \    long long sum27 = 0;\n    long long sum28 = 0;\n    long long sum29 = 0;\n\
    \    long long sum30 = 0;\n    long long sum31 = 0;\n    long long sum32 = 0;\n\
    \    long long sum33 = 0;\n    long long sum34 = 0;\n    long long sum35 = 0;\n\
    \    long long sum36 = 0;\n    long long sum37 = 0;\n    long long sum38 = 0;\n\
    \    long long sum39 = 0;\n    long long sum40 = 0;\n    long long sum41 = 0;\n\
    \    long long sum42 = 0;\n    long long sum43 = 0;\n    long long sum44 = 0;\n\
    \    long long sum45 = 0;\n    long long sum46 = 0;\n    long long sum47 = 0;\n\
    \    long long sum48 = 0;\n    long long sum49 = 0;\n    long long sum50 = 0;\n\
    \    long long sum51 = 0;\n    long long sum52 = 0;\n    long long sum53 = 0;\n\
    \    long long sum54 = 0;\n    long long sum55 = 0;\n    long long sum56 = 0;\n\
    \    long long sum57 = 0;\n    long long sum58 = 0;\n    long long sum59 = 0;\n\
    \    long long sum60 = 0;\n    long long sum61 = 0;\n    long long sum62 = 0;\n\
    \    long long sum63 = 0;\n    long long sum64 = 0;\n    long long sum65 = 0;\n\
    \    long long sum66 = 0;\n    long long sum67 = 0;\n    long long sum68 = 0;\n\
    \    long long ", "    // Write your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long ans = std::numeric_limits<long>::max();\n\
    \    long long ans2 = 0;\n    long long ans3 = 0;\n    long long ans4 = 0;\n \
    \   long long ans5 = 0;\n    long long ans6 = 0;\n    long long ans7 = 0;\n  \
    \  long long ans8 = 0;\n    long long ans9 = 0;\n    long long ans10 = 0;\n  \
    \  long long ans11 = 0;\n    long long ans12 = 0;\n    long long ans13 = 0;\n\
    \    long long ans14 = 0;\n    long long ans15 = 0;\n    long long ans16 = 0;\n\
    \    long long ans17 = 0;\n    long long ans18 = 0;\n    long long ans19 = 0;\n\
    \    long long ans20 = 0;\n    long long ansp = 0;\n    long long ansp2 = 0;\n\
    \    long long ansp3 = 0;\n    long long ansp4 = 0;\n    long long ansp5 = 0;\n\
    \    long long ansp6 = 0;\n    long long ansp7 = 0;\n    long long ansp8 = 0;\n\
    \    long long ansp9 = 0;\n    long long ansp10 = 0;\n    long long ansp11 = 0;\n\
    \    long long ansp12 = 0;\n    long long ansp13 = 0;\n    long long ansp14 =\
    \ 0;\n    long long ansp15 = 0;\n    long long ansp16 = 0;\n    long long ansp17\
    \ = 0;\n    long long ansp18 = 0;\n    long long ansp19 = 0;\n    long long ansp20\
    \ = 0;\n    long long anspp = 0;\n    long long anspp2 = 0;\n    long long anspp3\
    \ = 0;\n    long long anspp4 = 0;\n    long long anspp5 = 0;\n    long long anspp6\
    \ = 0;\n    long long anspp7 = 0;\n    long long anspp8 = 0;\n    long long anspp9\
    \ = 0;\n    long long anspp10 = 0;\n    long long anspp11 = 0;\n    long long\
    \ anspp12 = 0;\n    long long anspp13 = 0;\n    long long anspp14 = 0;\n    long\
    \ long anspp15 = 0;\n    long long anspp16 = 0;\n    long long anspp17 = 0;\n\
    \    long long anspp18 = 0;\n    long long anspp19 = 0;\n    long long anspp20\
    \ = 0;\n    long long ansppp = 0;\n    long long ansp", "    // write your code\
    \ here\n    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long long ans = 0;\n    long long count = 0;\n    long long sum = 0;\n  \
    \  long long temp = 0;\n    long long temp2 = 0;\n    long long temp3 = 0;\n \
    \   long long temp4 = 0;\n    long long temp5 = 0;\n    long long temp6 = 0;\n\
    \    long long temp7 = 0;\n    long long temp8 = 0;\n    long long temp9 = 0;\n\
    \    long long temp10 = 0;\n    long long temp11 = 0;\n    long long temp12 =\
    \ 0;\n    long long temp13 = 0;\n    long long temp14 = 0;\n    long long temp15\
    \ = 0;\n    long long temp16 = 0;\n    long long temp17 = 0;\n    long long temp18\
    \ = 0;\n    long long temp19 = 0;\n    long long temp20 = 0;\n    long long temp21\
    \ = 0;\n    long long temp22 = 0;\n    long long temp23 = 0;\n    long long temp24\
    \ = 0;\n    long long temp25 = 0;\n    long long temp26 = 0;\n    long long temp27\
    \ = 0;\n    long long temp28 = 0;\n    long long temp29 = 0;\n    long long temp30\
    \ = 0;\n    long long temp31 = 0;\n    long long temp32 = 0;\n    long long temp33\
    \ = 0;\n    long long temp34 = 0;\n    long long temp35 = 0;\n    long long temp36\
    \ = 0;\n    long long temp37 = 0;\n    long long temp38 = 0;\n    long long temp39\
    \ = 0;\n    long long temp40 = 0;\n    long long temp41 = 0;\n    long long temp42\
    \ = 0;\n    long long temp43 = 0;\n    long long temp44 = 0;\n    long long temp45\
    \ = 0;\n    long long temp46 = 0;\n    long long temp47 = 0;\n    long long temp48\
    \ = 0;\n    long long temp49 = 0;\n    long long temp50 = 0;\n    long long temp51\
    \ = 0;\n    long long temp52 = 0;\n    long long temp53 = 0;\n    long long temp54\
    \ = 0;\n    long long temp55 = 0;\n    long long temp56 = 0;\n    long long temp57\
    \ = 0;\n    long long temp58 = 0;\n    long long temp59 = 0;\n    long long temp60\
    \ = 0;\n    long long temp61 = 0;\n    long long temp62 = 0;\n    long long temp63\
    \ = 0;\n    long long temp64 = 0;\n    long long temp65 = 0;\n    long long temp66\
    \ = 0;\n    long long temp67 = 0;\n    long long temp68 = 0;", "    long ans =\
    \ 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long long ans1\
    \ = 0;\n    long long ans2 = 0;\n    long long ans3 = 0;\n    long long ans4 =\
    \ 0;\n    long long ans5 = 0;\n    long long ans6 = 0;\n    long long ans7 = 0;\n\
    \    long long ans8 = 0;\n    long long ans9 = 0;\n    long long ans10 = 0;\n\
    \    long long ans11 = 0;\n    long long ans12 = 0;\n    long long ans13 = 0;\n\
    \    long long ans14 = 0;\n    long long ans15 = 0;\n    long long ans16 = 0;\n\
    \    long long ans17 = 0;\n    long long ans18 = 0;\n    long long ans19 = 0;\n\
    \    long long ans20 = 0;\n    long long ans21 = 0;\n    long long ans22 = 0;\n\
    \    long long ans23 = 0;\n    long long ans24 = 0;\n    long long ans25 = 0;\n\
    \    long long ans26 = 0;\n    long long ans27 = 0;\n    long long ans28 = 0;\n\
    \    long long ans29 = 0;\n    long long ans30 = 0;\n    long long ans31 = 0;\n\
    \    long long ans32 = 0;\n    long long ans33 = 0;\n    long long ans34 = 0;\n\
    \    long long ans35 = 0;\n    long long ans36 = 0;\n    long long ans37 = 0;\n\
    \    long long ans38 = 0;\n    long long ans39 = 0;\n    long long ans40 = 0;\n\
    \    long long ans = n;\n    long long ans1 = 0;\n    long long ans2 = 0;\n  \
    \  long long ans3 = 0;\n    long long ans4 = 0;\n    long long ans5 = 0;\n   \
    \ long long ans6 = 0;\n    long long ans7 = 0;\n    long long ans8 = 0;\n    long\
    \ long ans9 = 0;\n    long long ans10 = 0;\n    long long ans11 = 0;\n    long\
    \ long ans12 = 0;\n    long long ans13 = 0;\n    long long ans14 = 0;\n    long\
    \ long ans15 = 0;\n    long long ans16 = 0;\n    long long ans17 = 0;\n    long\
    \ long ans18 = 0;\n    long long ans19 = 0;\n    long long ans20 = 0;\n    long\
    \ long ans21 = 0;\n    long long ans22 = 0;\n    long long ans23 = 0;\n    long\
    \ long ans24 = 0;\n    long long ans25 = 0;\n    long long ans26 = 0;\n    long\
    \ long ans27 = 0;\n    long long ans28 = 0;\n    long long ans29 = 0;\n    long\
    \ long ans30 = 0;", "    long ans = 0;\n    long n = grid.size();\n    long m\
    \ = grid[0].size();\n    long ans = std::numeric_limits<long>::max();\n    long\
    \ long ans1 = 0;\n    long long ans2 = 0;\n    long long ans3 = 0;\n    long long\
    \ ans4 = 0;\n    long long ans5 = 0;\n    long long ans6 = 0;\n    long long ans7\
    \ = 0;\n    long long ans8 = 0;\n    long long ans9 = 0;\n    long long ans10\
    \ = 0;\n    long long ans11 = 0;\n    long long ans12 = 0;\n    long long ans13\
    \ = 0;\n    long long ans14 = 0;\n    long long ans15 = 0;\n    long long ans16\
    \ = 0;\n    long long ans17 = 0;\n    long long ans18 = 0;\n    long long ans19\
    \ = 0;\n    long long ans20 = 0;\n    long long ansp = 0;\n    long long ansp1\
    \ = 0;\n    long long ansp2 = 0;\n    long long ansp3 = 0;\n    long long ansp4\
    \ = 0;\n    long long ansp5 = 0;\n    long long ansp6 = 0;\n    long long ansp7\
    \ = 0;\n    long long ansp8 = 0;\n    long long ansp9 = 0;\n    long long ansp10\
    \ = 0;\n    long long ansp11 = 0;\n    long long ansp12 = 0;\n    long long ansp13\
    \ = 0;\n    long long ansp14 = 0;\n    long long ansp15 = 0;\n    long long ansp16\
    \ = 0;\n    long long ansp17 = 0;\n    long long ansp18 = 0;\n    long long ansp19\
    \ = 0;\n    long long ansp20 = 0;\n    long long anspp = 0;\n    long long anspp1\
    \ = 0;\n    long long anspp2 = 0;\n    long long anspp3 = 0;\n    long long anspp4\
    \ = 0;\n    long long anspp5 = 0;\n    long long anspp6 = 0;\n    long long anspp7\
    \ = 0;\n    long long anspp8 = 0;\n    long long anspp9 = 0;\n    long long anspp10\
    \ = 0;\n    long long anspp11 = 0;\n    long long anspp12 = 0;\n    long long\
    \ anspp13 = 0;\n    long long anspp14 = 0;\n    long long anspp15 = 0;\n    long\
    \ long anspp16 = 0;\n    long long anspp17 = 0;\n    long long anspp18 = 0;\n\
    \    long long anspp19 = 0;\n    long long ansp", "    long ans = 0;\n    long\
    \ n = grid.size();\n    long m = grid[0].size();\n    long long an = n;\n    long\
    \ long bm = m;\n    long long ans = an;\n    long long bn = n;\n    long long\
    \ bm = m;\n    long long cnt = 1;\n    long long cnt1 = 1;\n    long long cnt2\
    \ = 1;\n    long long cnt3 = 1;\n    long long cnt4 = 1;\n    long long cnt5 =\
    \ 1;\n    long long cnt6 = 1;\n    long long cnt7 = 1;\n    long long cnt8 = 1;\n\
    \    long long cnt9 = 1;\n    long long cnt10 = 1;\n    long long cnt11 = 1;\n\
    \    long long cnt12 = 1;\n    long long cnt13 = 1;\n    long long cnt14 = 1;\n\
    \    long long cnt15 = 1;\n    long long cnt16 = 1;\n    long long cnt17 = 1;\n\
    \    long long cnt18 = 1;\n    long long cnt19 = 1;\n    long long cnt20 = 1;\n\
    \    long long cnt21 = 1;\n    long long cnt22 = 1;\n    long long cnt23 = 1;\n\
    \    long long cnt24 = 1;\n    long long cnt25 = 1;\n    long long cnt26 = 1;\n\
    \    long long cnt27 = 1;\n    long long cnt28 = 1;\n    long long cnt29 = 1;\n\
    \    long long cnt30 = 1;\n    long long cnt31 = 1;\n    long long cnt32 = 1;\n\
    \    long long cnt33 = 1;\n    long long cnt34 = 1;\n    long long cnt35 = 1;\n\
    \    long long cnt36 = 1;\n    long long cnt37 = 1;\n    long long cnt38 = 1;\n\
    \    long long cnt39 = 1;\n    long long cnt40 = 1;\n    long long cnt41 = 1;\n\
    \    long long cnt42 = 1;\n    long long cnt43 = 1;\n    long long cnt44 = 1;\n\
    \    long long cnt45 = 1;\n    long long cnt46 = 1;\n    long long cnt47 = 1;\n\
    \    long long cnt48 = 1;\n    long long cnt49 = 1;\n    long long cnt50 = 1;\n\
    \    long long cnt51 = 1;\n    long long cnt52 = 1;\n    long long cnt53 = 1;\n\
    \    long long cnt54 = 1;\n    long long cnt55 = 1;\n    long long cnt56 = 1;\n\
    \    long long cnt57 = 1;\n    long long cnt58 = 1;\n    long long cnt59 = 1;\n\
    \    long long cnt60 = 1;\n    long long cnt61 = 1;\n    long long cnt62 = 1;\n\
    \    long long cnt63 = 1;\n    long long cnt", "    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long long ans_temp = 0;\n\
    \    long long temp_ans = 0;\n    long long temp_ans_temp = 0;\n    long long\
    \ temp_ans_temp_temp = 0;\n    long long temp_ans_temp_temp_temp = 0;\n    long\
    \ long temp_ans_temp_temp_temp_temp = 0;\n    long long temp_ans_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp = 0;\n    long long\
    \ temp_ans_temp_temp_temp_temp_temp_temp_temp = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp =\
    \ 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_", "    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long long ans = 0;\n    long long cnt = 0;\n\
    \    long long sum = 0;\n    long long cur = 0;\n    long long max = 0;\n    long\
    \ long min = 0;\n    long long cur_cap = 0;\n    long long min_cap = 0;\n    long\
    \ long min_cap_cur = 0;\n    long long min_cap_max = 0;\n    long long min_cap_min\
    \ = 0;\n    long long min_cap_cur_cap = 0;\n    long long min_cap_max_cap = 0;\n\
    \    long long min_cap_min_cap = 0;\n    long long min_cap_cur_cap_max = 0;\n\
    \    long long min_cap_max_cap_min = 0;\n    long long min_cap_min_cap_cur = 0;\n\
    \    long long min_cap_max_cap_min_cap = 0;\n    long long min_cap_min_cap_cur_cap\
    \ = 0;\n    long long min_cap_max_cap_min_cap_max = 0;\n    long long min_cap_min_cap_cur_cap_max\
    \ = 0;\n    long long min_cap_max_cap_min_cap_max_min = 0;\n    long long min_cap_min_cap_cur_cap_max_min\
    \ = 0;\n    long long min_cap_max_cap_min_cap_max_min_cur = 0;\n    long long\
    \ min_cap_min_cap_cur_cap_max_min_cur = 0;\n    long long min_cap_max_cap_min_cap_max_min_cur_cap\
    \ = 0;\n    long long min_cap_min_cap_cur_cap_max_min_cur_cap = 0;\n    long long\
    \ min_cap_max_cap_min_cap_max_min_cur_cap_max = 0;\n    long long min_cap_min_cap_cur_cap_max_min_cur_cap_max_min\
    \ = 0;\n    long long min_cap_max_cap_min_cap_max_min_cur_cap_max_min_cur = 0;\n\
    \    long long min_cap_min_cap_cur_cap_max_min_cur_cap_max_min_cur_cap = 0;\n\
    \    long long min_cap_max_cap_min_cap_max_min_cur_cap_max_min_cur_cap_max = 0;\n\
    \    long long min_cap_min_cap_cur_cap_max_min_cur_cap_max_min_cur_cap_max_min\
    \ = 0;\n    long long min_cap_max_cap_min_cap_max_min_cur_cap_max_min_cur_cap_max_min_cur\
    \ = 0;\n    long long min_cap_min_cap_cur_cap_max_min_cur_cap_max_min_cur_cap_max_min_cur_cap\
    \ = 0;", "    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long an = 0;\n    long long max = 0;\n    long long min = 1;\n    long long\
    \ cur = 0;\n    long long cur_cap = 0;\n    long long cur_max = 0;\n    long long\
    \ cur_min = 1;\n    long long cur_cur = 0;\n    long long cur_cur_cap = 0;\n \
    \   long long cur_cur_max = 0;\n    long long cur_cur_min = 1;\n    long long\
    \ cur_cur_cur = 0;\n    long long cur_cur_cur_cap = 0;\n    long long cur_cur_cur_max\
    \ = 0;\n    long long cur_cur_cur_min = 1;\n    long long cur_cur_cur_cur = 0;\n\
    \    long long cur_cur_cur_cur_cap = 0;\n    long long cur_cur_cur_cur_max = 0;\n\
    \    long long cur_cur_cur_cur_min = 1;\n    long long cur_cur_cur_cur_cur = 0;\n\
    \    long long cur_cur_cur_cur_cur_cap = 0;\n    long long cur_cur_cur_cur_cur_max\
    \ = 0;\n    long long cur_cur_cur_cur_min = 1;\n    long long cur_cur_cur_cur_cur\
    \ = 0;\n    long long cur_cur_cur_cur_cur_cap = 0;\n    long long cur_cur_cur_cur_cur_max\
    \ = 0;\n    long long cur_cur_cur_cur_min = 1;\n    long long cur_cur_cur_cur_cur\
    \ = 0;\n    long long cur_cur_cur_cur_cur_cap = 0;\n    long long cur_cur_cur_cur_cur_max\
    \ = 0;\n    long long cur_cur_cur_cur_min = 1;\n    long long cur_cur_cur_cur_cur\
    \ = 0;\n    long long cur_cur_cur_cur_cur_cap = 0;\n    long long cur_cur_cur_cur_cur_max\
    \ = 0;\n    long long cur_cur_cur_cur_min = 1;\n    long long cur_cur_cur_cur_cur\
    \ = 0;\n    long long cur_cur_cur_cur_cur_cap = 0;\n    long long cur_cur_cur_cur_cur_max\
    \ = 0;\n    long long cur_cur_cur_cur_min = 1;\n    long long cur_cur_cur_cur_cur\
    \ = 0;\n    long long cur_cur_cur_cur_cur_cap = 0;\n    long long cur_cur_cur_cur_cur_max\
    \ = 0;\n    long long cur_cur_cur_cur_min = 1;\n    long long cur_cur_cur_cur_cur\
    \ = 0;\n    long long cur_cur_cur_cur_cur_cap = 0;\n    long long cur_cur_cur_cur_cur_max\
    \ = 0;\n    long long cur_cur_cur_cur_min = 1;\n    long long cur_cur_cur_cur_cur\
    \ = 0;\n    long long cur_cur_cur_cur_cur_cap = 0;\n    long long cur_cur_cur_cur_cur_max\
    \ = 0;\n    long long cur_cur_cur_cur_min = 1;\n    long long cur_cur_cur_cur_",
  "    // write your code here\n    long ans = 0;\n    long n = grid.size();\n   \
    \ long m = grid[0].size();\n    long long an = 0;\n    long long ans = 0;\n  \
    \  long long temp;\n    long long temp1;\n    long long temp2;\n    long long\
    \ temp3;\n    long long temp4;\n    long long temp5;\n    long long temp6;\n \
    \   long long temp7;\n    long long temp8;\n    long long temp9;\n    long long\
    \ temp10;\n    long long temp11;\n    long long temp12;\n    long long temp13;\n\
    \    long long temp14;\n    long long temp15;\n    long long temp16;\n    long\
    \ long temp17;\n    long long temp18;\n    long long temp19;\n    long long temp20;\n\
    \    long long temp21;\n    long long temp22;\n    long long temp23;\n    long\
    \ long temp24;\n    long long temp25;\n    long long temp26;\n    long long temp27;\n\
    \    long long temp28;\n    long long temp29;\n    long long temp30;\n    long\
    \ long temp31;\n    long long temp32;\n    long long temp33;\n    long long temp34;\n\
    \    long long temp35;\n    long long temp36;\n    long long temp37;\n    long\
    \ long temp38;\n    long long temp39;\n    long long temp40;\n    long long temp41;\n\
    \    long long temp42;\n    long long temp43;\n    long long temp44;\n    long\
    \ long temp45;\n    long long temp46;\n    long long temp47;\n    long long temp48;\n\
    \    long long temp49;\n    long long temp50;\n    long long temp51;\n    long\
    \ long temp52;\n    long long temp53;\n    long long temp54;\n    long long temp55;\n\
    \    long long temp56;\n    long long temp57;\n    long long temp58;\n    long\
    \ long temp59;\n    long long temp60;\n    long long temp61;\n    long long temp62;\n\
    \    long long temp63;\n    long long temp64;\n    long long temp65;\n    long\
    \ long temp66;\n    long long temp67;\n    long long temp68;\n    long long temp69;\n\
    \    long long temp70;", "    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long ans = 0;\n    long long ans = 0;\n    long long\
    \ ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans\
    \ = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n\
    \    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long\
    \ long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long\
    \ ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans\
    \ = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n\
    \    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long\
    \ long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long\
    \ ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans\
    \ = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n\
    \    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long\
    \ long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long\
    \ ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans\
    \ = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n\
    \    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long\
    \ long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long\
    \ ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans\
    \ = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n\
    \    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long\
    \ long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long\
    \ ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans\
    \ = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n\
    \    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long\
    \ long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long\
    \ ans = 0;\n    long long ans = 0;\n    ", "    // Write your code here\n    long\
    \ ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long\
    \ x = 1;\n    long y = 1;\n    long z = 1;\n    long count = 0;\n    long sum\
    \ = 0;\n    long long ans = 0;\n    long long sum = 0;\n    long long ans = 0;\n\
    \    long long sum = 0;\n    long long ans = 0;\n    long long sum = 0;\n    long\
    \ long ans = 0;\n    long long sum = 0;\n    long long ans = 0;\n    long long\
    \ sum = 0;\n    long long ans = 0;\n    long long sum = 0;\n    long long ans\
    \ = 0;\n    long long sum = 0;\n    long long ans = 0;\n    long long sum = 0;\n\
    \    long long ans = 0;\n    long long sum = 0;\n    long long ans = 0;\n    long\
    \ long sum = 0;\n    long long ans = 0;\n    long long sum = 0;\n    long long\
    \ ans = 0;\n    long long sum = 0;\n    long long ans = 0;\n    long long sum\
    \ = 0;\n    long long ans = 0;\n    long long sum = 0;\n    long long ans = 0;\n\
    \    long long sum = 0;\n    long long ans = 0;\n    long long sum = 0;\n    long\
    \ long ans = 0;\n    long long sum = 0;\n    long long ans = 0;\n    long long\
    \ sum = 0;\n    long long ans = 0;\n    long long sum = 0;\n    long long ans\
    \ = 0;\n    long long sum = 0;\n    long long ans = 0;\n    long long sum = 0;\n\
    \    long long ans = 0;\n    long long sum = 0;\n    long long ans = 0;\n    long\
    \ long sum = 0;\n    long long ans = 0;\n    long long sum = 0;\n    long long\
    \ ans = 0;\n    long long sum = 0;\n    long long ans = 0;\n    long long sum\
    \ = 0;\n    long long ans = 0;\n    long long sum = 0;\n    long long ans = 0;\n\
    \    long long sum = 0;\n    long long ans = 0;\n    long long sum = 0;\n    long\
    \ long ans = 0;\n    long long sum = 0;\n    long long ans = 0;\n    long long\
    \ sum = 0;\n    long long ans = 0;\n    long long sum = 0;\n    long long ans\
    \ = 0;\n    long long sum = 0;\n    long long ans = 0;\n    long long sum = 0;\n\
    \    long long ans = 0;\n    long long sum = 0;\n    long long ans = 0;\n    long\
    \ long sum = 0;\n    long long ans = 0;\n    long long sum = 0;\n    long long\
    \ ans = 0;\n    long long sum = 0;\n    long long ans = 0;\n    ", "    // write\
    \ your code here\n    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long ans = std::numeric_limits<long>::max();\n    long long ans1 = 0;\n \
    \   long long ans2 = 0;\n    long long ans3 = 0;\n    long long ans4 = 0;\n  \
    \  long long ans5 = 0;\n    long long ans6 = 0;\n    long long ans7 = 0;\n   \
    \ long long ans8 = 0;\n    long long ans9 = 0;\n    long long ans10 = 0;\n   \
    \ long long ans11 = 0;\n    long long ans12 = 0;\n    long long ans13 = 0;\n \
    \   long long ans14 = 0;\n    long long ans15 = 0;\n    long long ans16 = 0;\n\
    \    long long ans17 = 0;\n    long long ans18 = 0;\n    long long ans19 = 0;\n\
    \    long long ans20 = 0;\n    long long ansp = 0;\n    long long ansp1 = 0;\n\
    \    long long ansp2 = 0;\n    long long ansp3 = 0;\n    long long ansp4 = 0;\n\
    \    long long ansp5 = 0;\n    long long ansp6 = 0;\n    long long ansp7 = 0;\n\
    \    long long ansp8 = 0;\n    long long ansp9 = 0;\n    long long ansp10 = 0;\n\
    \    long long ansp11 = 0;\n    long long ansp12 = 0;\n    long long ansp13 =\
    \ 0;\n    long long ansp14 = 0;\n    long long ansp15 = 0;\n    long long ansp16\
    \ = 0;\n    long long ansp17 = 0;\n    long long ansp18 = 0;\n    long long ansp19\
    \ = 0;\n    long long ansp20 = 0;\n    long long anspp = 0;\n    long long anspp1\
    \ = 0;\n    long long anspp2 = 0;\n    long long anspp3 = 0;\n    long long anspp4\
    \ = 0;\n    long long anspp5 = 0;\n    long long anspp6 = 0;\n    long long anspp7\
    \ = 0;\n    long long anspp8 = 0;\n    long long anspp9 = 0;\n    long long anspp10\
    \ = 0;\n    long long anspp11 = 0;\n    long long anspp12 = 0;\n    long long\
    \ anspp13 = 0;\n    long long anspp14 = 0;\n    long long anspp15 = 0;\n    long\
    \ long anspp16 = 0;\n    long long anspp17 = 0;\n    long long anspp18 = 0;\n\
    \    long long anspp19 = 0;\n", "    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long long ans1 = 0;\n    long long ans2 = 0;\n\
    \    long long ans3 = 0;\n    long long ans4 = 0;\n    long long ans5 = 0;\n \
    \   long long ans6 = 0;\n    long long ans7 = 0;\n    long long ans8 = 0;\n  \
    \  long long ans9 = 0;\n    long long ans10 = 0;\n    long long ans11 = 0;\n \
    \   long long ans12 = 0;\n    long long ans13 = 0;\n    long long ans14 = 0;\n\
    \    long long ans15 = 0;\n    long long ans16 = 0;\n    long long ans17 = 0;\n\
    \    long long ans18 = 0;\n    long long ans19 = 0;\n    long long ans20 = 0;\n\
    \    long long ansp = 0;\n    long long ansp1 = 0;\n    long long ansp2 = 0;\n\
    \    long long ansp3 = 0;\n    long long ansp4 = 0;\n    long long ansp5 = 0;\n\
    \    long long ansp6 = 0;\n    long long ansp7 = 0;\n    long long ansp8 = 0;\n\
    \    long long ansp9 = 0;\n    long long ansp10 = 0;\n    long long ansp11 = 0;\n\
    \    long long ansp12 = 0;\n    long long ansp13 = 0;\n    long long ansp14 =\
    \ 0;\n    long long ansp15 = 0;\n    long long ansp16 = 0;\n    long long ansp17\
    \ = 0;\n    long long ansp18 = 0;\n    long long ansp19 = 0;\n    long long ansp20\
    \ = 0;\n    long long anspp = 0;\n    long long anspp1 = 0;\n    long long anspp2\
    \ = 0;\n    long long anspp3 = 0;\n    long long anspp4 = 0;\n    long long anspp5\
    \ = 0;\n    long long anspp6 = 0;\n    long long anspp7 = 0;\n    long long anspp8\
    \ = 0;\n    long long anspp9 = 0;\n    long long anspp10 = 0;\n    long long anspp11\
    \ = 0;\n    long long anspp12 = 0;\n    long long anspp13 = 0;\n    long long\
    \ anspp14 = 0;\n    long long anspp15 = 0;\n    long long anspp16 = 0;\n    long\
    \ long anspp17 = 0;\n    long long anspp18 = 0;\n    long long anspp19 = 0;\n\
    \    long long anspp20 = 0;\n    long long ansppp = 0;\n    ", "    long ans =\
    \ 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long long ans1\
    \ = 0;\n    long long ans2 = 0;\n    long long ans3 = 0;\n    long long ans4 =\
    \ 0;\n    long long ans5 = 0;\n    long long ans6 = 0;\n    long long ans7 = 0;\n\
    \    long long ans8 = 0;\n    long long ans9 = 0;\n    long long ans10 = 0;\n\
    \    long long ans11 = 0;\n    long long ans12 = 0;\n    long long ans13 = 0;\n\
    \    long long ans14 = 0;\n    long long ans15 = 0;\n    long long ans16 = 0;\n\
    \    long long ans17 = 0;\n    long long ans18 = 0;\n    long long ans19 = 0;\n\
    \    long long ans20 = 0;\n    long long ansp = 0;\n    long long ansp1 = 0;\n\
    \    long long ansp2 = 0;\n    long long ansp3 = 0;\n    long long ansp4 = 0;\n\
    \    long long ansp5 = 0;\n    long long ansp6 = 0;\n    long long ansp7 = 0;\n\
    \    long long ansp8 = 0;\n    long long ansp9 = 0;\n    long long ansp10 = 0;\n\
    \    long long ansp11 = 0;\n    long long ansp12 = 0;\n    long long ansp13 =\
    \ 0;\n    long long ansp14 = 0;\n    long long ansp15 = 0;\n    long long ansp16\
    \ = 0;\n    long long ansp17 = 0;\n    long long ansp18 = 0;\n    long long ansp19\
    \ = 0;\n    long long ansp20 = 0;\n    long long ansp21 = 0;\n    long long ansp22\
    \ = 0;\n    long long ansp23 = 0;\n    long long ansp24 = 0;\n    long long ansp25\
    \ = 0;\n    long long ansp26 = 0;\n    long long ansp27 = 0;\n    long long ansp28\
    \ = 0;\n    long long ansp29 = 0;\n    long long ansp30 = 0;\n    long long ansp31\
    \ = 0;\n    long long ansp32 = 0;\n    long long ansp33 = 0;\n    long long ansp34\
    \ = 0;\n    long long ansp35 = 0;\n    long long ansp36 = 0;\n    long long ansp37\
    \ = 0;\n    long long ansp38 = 0;\n    long long ansp39 = 0;\n    long long ansp40\
    \ = 0;\n    long long ansp41 = 0;\n    long long ansp42 = 0;\n    long long ansp43\
    \ = 0;\n    long long ansp44 = 0;\n", "    // write your code here\n    long ans\
    \ = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long ans\
    \ = 1;\n    long count = 0;\n    long long ans = 1;\n    long long ans = 1;\n\
    \    long long ans = 1;\n    long long ans = 1;\n    long long ans = 1;\n    long\
    \ long ans = 1;\n    long long ans = 1;\n    long long ans = 1;\n    long long\
    \ ans = 1;\n    long long ans = 1;\n    long long ans = 1;\n    long long ans\
    \ = 1;\n    long long ans = 1;\n    long long ans = 1;\n    long long ans = 1;\n\
    \    long long ans = 1;\n    long long ans = 1;\n    long long ans = 1;\n    long\
    \ long ans = 1;\n    long long ans = 1;\n    long long ans = 1;\n    long long\
    \ ans = 1;\n    long long ans = 1;\n    long long ans = 1;\n    long long ans\
    \ = 1;\n    long long ans = 1;\n    long long ans = 1;\n    long long ans = 1;\n\
    \    long long ans = 1;\n    long long ans = 1;\n    long long ans = 1;\n    long\
    \ long ans = 1;\n    long long ans = 1;\n    long long ans = 1;\n    long long\
    \ ans = 1;\n    long long ans = 1;\n    long long ans = 1;\n    long long ans\
    \ = 1;\n    long long ans = 1;\n    long long ans = 1;\n    long long ans = 1;\n\
    \    long long ans = 1;\n    long long ans = 1;\n    long long ans = 1;\n    long\
    \ long ans = 1;\n    long long ans = 1;\n    long long ans = 1;\n    long long\
    \ ans = 1;\n    long long ans = 1;\n    long long ans = 1;\n    long long ans\
    \ = 1;\n    long long ans = 1;\n    long long ans = 1;\n    long long ans = 1;\n\
    \    long long ans = 1;\n    long long ans = 1;\n    long long ans = 1;\n    long\
    \ long ans = 1;\n    long long ans = 1;\n    long long ans = 1;\n    long long\
    \ ans = 1;\n    long long ans = 1;\n    long long ans = 1;\n    long long ans\
    \ = 1;\n    long long ans = 1;\n    long long ans = 1;\n    long long ans = 1;\n\
    \    long long ans = 1;\n    ", "    // write your code here\n    long ans = 0;\n\
    \    long n = grid.size();\n    long m = grid[0].size();\n    long long an = 0;\n\
    \    long long sum = 0;\n    long long cur = 0;\n    long long cur1 = 0;\n   \
    \ long long cur2 = 0;\n    long long cur3 = 0;\n    long long cur4 = 0;\n    long\
    \ long cur5 = 0;\n    long long cur6 = 0;\n    long long cur7 = 0;\n    long long\
    \ cur8 = 0;\n    long long cur9 = 0;\n    long long cur10 = 0;\n    long long\
    \ cur11 = 0;\n    long long cur12 = 0;\n    long long cur13 = 0;\n    long long\
    \ cur14 = 0;\n    long long cur15 = 0;\n    long long cur16 = 0;\n    long long\
    \ cur17 = 0;\n    long long cur18 = 0;\n    long long cur19 = 0;\n    long long\
    \ cur20 = 0;\n    long long cur21 = 0;\n    long long cur22 = 0;\n    long long\
    \ cur23 = 0;\n    long long cur24 = 0;\n    long long cur25 = 0;\n    long long\
    \ cur26 = 0;\n    long long cur27 = 0;\n    long long cur28 = 0;\n    long long\
    \ cur29 = 0;\n    long long cur30 = 0;\n    long long cur31 = 0;\n    long long\
    \ cur32 = 0;\n    long long cur33 = 0;\n    long long cur34 = 0;\n    long long\
    \ cur35 = 0;\n    long long cur36 = 0;\n    long long cur37 = 0;\n    long long\
    \ cur38 = 0;\n    long long cur39 = 0;\n    long long cur40 = 0;\n    long long\
    \ cur41 = 0;\n    long long cur42 = 0;\n    long long cur43 = 0;\n    long long\
    \ cur44 = 0;\n    long long cur45 = 0;\n    long long cur46 = 0;\n    long long\
    \ cur47 = 0;\n    long long cur48 = 0;\n    long long cur49 = 0;\n    long long\
    \ cur50 = 0;\n    long long cur51 = 0;\n    long long cur52 = 0;\n    long long\
    \ cur53 = 0;\n    long long cur54 = 0;\n    long long cur55 = 0;\n    long long\
    \ cur56 = 0;\n    long long cur57 = 0;\n    long long cur58 = 0;\n    long long\
    \ cur59 = 0;\n    long long cur60 = 0;\n    long long cur61 = 0;\n    long long\
    \ cur62 = 0;\n    long long cur63 = 0;\n    long long cur64 = 0;\n    long long\
    \ cur65 = 0;\n    long long cur66 = 0;\n    long long cur67 = 0;\n    long long\
    \ cur68", "    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long long an = n;\n    long long bn = m;\n    long long cn = capacity;\n\
    \    long long ans = an;\n    long long bn = bn;\n    long long cn = cn;\n   \
    \ long long an = n;\n    long long bn = m;\n    long long cn = capacity;\n   \
    \ long long ans = an;\n    long long bn = bn;\n    long long cn = cn;\n    long\
    \ long an = n;\n    long long bn = m;\n    long long cn = capacity;\n    long\
    \ long ans = an;\n    long long bn = bn;\n    long long cn = cn;\n    long long\
    \ an = n;\n    long long bn = m;\n    long long cn = capacity;\n    long long\
    \ ans = an;\n    long long bn = bn;\n    long long cn = cn;\n    long long an\
    \ = n;\n    long long bn = m;\n    long long cn = capacity;\n    long long ans\
    \ = an;\n    long long bn = bn;\n    long long cn = cn;\n    long long an = n;\n\
    \    long long bn = m;\n    long long cn = capacity;\n    long long ans = an;\n\
    \    long long bn = bn;\n    long long cn = cn;\n    long long an = n;\n    long\
    \ long bn = m;\n    long long cn = capacity;\n    long long ans = an;\n    long\
    \ long bn = bn;\n    long long cn = cn;\n    long long an = n;\n    long long\
    \ bn = m;\n    long long cn = capacity;\n    long long ans = an;\n    long long\
    \ bn = bn;\n    long long cn = cn;\n    long long an = n;\n    long long bn =\
    \ m;\n    long long cn = capacity;\n    long long ans = an;\n    long long bn\
    \ = bn;\n    long long cn = cn;\n    long long an = n;\n    long long bn = m;\n\
    \    long long cn = capacity;\n    long long ans = an;\n    long long bn = bn;\n\
    \    long long cn = cn;\n    long long an = n;\n    long long bn = m;\n    long\
    \ long cn = capacity;\n    long long ans = an;\n    long ", "    long ans = 0;\n\
    \    long n = grid.size();\n    long m = grid[0].size();\n    long ans1 = 0;\n\
    \    long ans2 = 0;\n    long ans3 = 0;\n    long ans4 = 0;\n    long ans5 = 0;\n\
    \    long ans6 = 0;\n    long ans7 = 0;\n    long ans8 = 0;\n    long ans9 = 0;\n\
    \    long ans10 = 0;\n    long ans11 = 0;\n    long ans12 = 0;\n    long ans13\
    \ = 0;\n    long ans14 = 0;\n    long ans15 = 0;\n    long ans16 = 0;\n    long\
    \ ans17 = 0;\n    long ans18 = 0;\n    long ans19 = 0;\n    long ans20 = 0;\n\
    \    long ans21 = 0;\n    long ans22 = 0;\n    long ans23 = 0;\n    long ans24\
    \ = 0;\n    long ans25 = 0;\n    long ans26 = 0;\n    long ans27 = 0;\n    long\
    \ ans28 = 0;\n    long ans29 = 0;\n    long ans30 = 0;\n    long ans31 = 0;\n\
    \    long ans32 = 0;\n    long ans33 = 0;\n    long ans34 = 0;\n    long ans35\
    \ = 0;\n    long ans36 = 0;\n    long ans37 = 0;\n    long ans38 = 0;\n    long\
    \ ans39 = 0;\n    long ans40 = 0;\n    long ans31 = 0;\n    long ans32 = 0;\n\
    \    long ans33 = 0;\n    long ans34 = 0;\n    long ans35 = 0;\n    long ans36\
    \ = 0;\n    long ans37 = 0;\n    long ans38 = 0;\n    long ans39 = 0;\n    long\
    \ ans40 = 0;\n    long ans41 = 1;\n    long ans42 = 1;\n    long ans43 = 1;\n\
    \    long ans44 = 1;\n    long ans45 = 1;\n    long ans46 = 1;\n    long ans47\
    \ = 1;\n    long ans48 = 1;\n    long ans49 = 1;\n    long ans50 = 1;\n    long\
    \ ans51 = 1;\n    long ans52 = 1;\n    long ans53 = 1;\n    long ans54 = 1;\n\
    \    long ans55 = 1;\n    long ans56 = 1;\n    long ans57 = 1;\n    long ans58\
    \ = 1;\n    long ans59 = 1;\n    long ans60 = 1;\n    long ans61 = 1;\n    long\
    \ ans62 = 1;\n    long ans63 = 1;\n    long ans64 = 1;\n    long ans65 = 1;\n\
    \    long ans66 = 1;\n    long ans67 = 1;\n    long ans68 = 1;\n    long ans69\
    \ = 1;\n    long ans70 = 1;\n    long ans = 1;\n    long ans", "    // write your\
    \ code here\n    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long ans = INT_MAX;\n    for(long i = 0; i < n; i++) {\n        for(long\
    \ j = 0; j < m; j++) {\n            long count = 0;\n            for(long k =\
    \ 0; k < n; k++) {\n                for(long l = 0; l < m; l++) {\n          \
    \          if(grid[i][k] == 1 && grid[k][j] == 1) {\n                        count++;\n\
    \                    }\n                }\n            }\n            if(count\
    \ > capacity) {\n                ans = min(ans, count - capacity);\n         \
    \   }\n        }\n    }\n    return ans;", "    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long cnt = 0;\n    long ans_cnt = 0;\n    long\
    \ long ans_cnt2 = 0;\n    long long ans_cnt3 = 0;\n    long long ans_cnt4 = 0;\n\
    \    long long ans_cnt5 = 0;\n    long long ans_cnt6 = 0;\n    long long ans_cnt7\
    \ = 0;\n    long long ans_cnt8 = 0;\n    long long ans_cnt9 = 0;\n    long long\
    \ ans_cnt10 = 0;\n    long long ans_cnt11 = 0;\n    long long ans_cnt12 = 0;\n\
    \    long long ans_cnt13 = 0;\n    long long ans_cnt14 = 0;\n    long long ans_cnt15\
    \ = 0;\n    long long ans_cnt16 = 0;\n    long long ans_cnt17 = 0;\n    long long\
    \ ans_cnt18 = 0;\n    long long ans_cnt19 = 0;\n    long long ans_cnt20 = 0;\n\
    \    long long ans_cnt21 = 0;\n    long long ans_cnt22 = 0;\n    long long ans_cnt23\
    \ = 0;\n    long long ans_cnt24 = 0;\n    long long ans_cnt25 = 0;\n    long long\
    \ ans_cnt26 = 0;\n    long long ans_cnt27 = 0;\n    long long ans_cnt28 = 0;\n\
    \    long long ans_cnt29 = 0;\n    long long ans_cnt30 = 0;\n    long long ans_cnt31\
    \ = 0;\n    long long ans_cnt32 = 0;\n    long long ans_cnt33 = 0;\n    long long\
    \ ans_cnt34 = 0;\n    long long ans_cnt35 = 0;\n    long long ans_cnt36 = 0;\n\
    \    long long ans_cnt37 = 0;\n    long long ans_cnt38 = 0;\n    long long ans_cnt39\
    \ = 0;\n    long long ans_cnt40 = 0;\n    long long ans_cnt41 = 0;\n    long long\
    \ ans_cnt42 = 0;\n    long long ans_cnt43 = 0;\n    long long ans_cnt44 = 0;\n\
    \    long long ans_cnt45 = 0;\n    long long ans_cnt46 = 0;\n    long long ans_cnt47\
    \ = 0;\n    long long ans_cnt48 = 0;\n    long long ans_cnt49 = 0;\n    long long\
    \ ans_cnt50 = 0;\n    long long ans_cnt51 = 0;\n    long long ans_cnt52 = 0;\n\
    \    long long ans_cnt53 = 0;\n    long long ans_cnt54 = 0;\n    long long ans_cnt55",
  "    // write your code here\n    long ans = 0;\n    long n = grid.size();\n   \
    \ long m = grid[0].size();\n    long ans = 0;\n    long long count = 0;\n    long\
    \ long sum = 0;\n    long long sum2 = 0;\n    long long sum3 = 0;\n    long long\
    \ sum4 = 0;\n    long long sum5 = 0;\n    long long sum6 = 0;\n    long long sum7\
    \ = 0;\n    long long sum8 = 0;\n    long long sum9 = 0;\n    long long sum10\
    \ = 0;\n    long long sum11 = 0;\n    long long sum12 = 0;\n    long long sum13\
    \ = 0;\n    long long sum14 = 0;\n    long long sum15 = 0;\n    long long sum16\
    \ = 0;\n    long long sum17 = 0;\n    long long sum18 = 0;\n    long long sum19\
    \ = 0;\n    long long sum20 = 0;\n    long long sum21 = 0;\n    long long sum22\
    \ = 0;\n    long long sum23 = 0;\n    long long sum24 = 0;\n    long long sum25\
    \ = 0;\n    long long sum26 = 0;\n    long long sum27 = 0;\n    long long sum28\
    \ = 0;\n    long long sum29 = 0;\n    long long sum30 = 0;\n    long long sum31\
    \ = 0;\n    long long sum32 = 0;\n    long long sum33 = 0;\n    long long sum34\
    \ = 0;\n    long long sum35 = 0;\n    long long sum36 = 0;\n    long long sum37\
    \ = 0;\n    long long sum38 = 0;\n    long long sum39 = 0;\n    long long sum40\
    \ = 0;\n    long long sum41 = 0;\n    long long sum42 = 0;\n    long long sum43\
    \ = 0;\n    long long sum44 = 0;\n    long long sum45 = 0;\n    long long sum46\
    \ = 0;\n    long long sum47 = 0;\n    long long sum48 = 0;\n    long long sum49\
    \ = 0;\n    long long sum50 = 0;\n    long long sum51 = 0;\n    long long sum52\
    \ = 0;\n    long long sum53 = 0;\n    long long sum54 = 0;\n    long long sum55\
    \ = 0;\n    long long sum56 = 0;\n    long long sum57 = 0;\n    long long sum58\
    \ = 0;\n    long long sum59 = 0;\n    long long sum60 = 0;\n    long long sum61\
    \ = 0;\n    long long sum62 = 0;\n    long long sum63 = 0;\n    long long sum64\
    \ = 0;\n    long long sum65 = 0;\n    long long sum66 = 0;\n    long long sum67\
    \ = 0;\n    long long sum68 = 0;\n    long long sum69 = 0;", "    long ans = 0;\n\
    \    long n = grid.size();\n    long m = grid[0].size();\n    long cnt = 0;\n\
    \    std::vector<long> b(n);\n    std::vector<long> w(m);\n    std::vector<long>\
    \ bcap(n);\n    std::vector<long> wcap(m);\n    std::vector<long> bcap_old(n);\n\
    \    std::vector<long> wcap_old(m);\n    long i, j, k;\n    long bcap_i, wcap_i;\n\
    \    long bcap_j, wcap_j;\n    long bcap_k, wcap_k;\n    long bcap_l, wcap_l;\n\
    \    long bcap_m, wcap_m;\n    long bcap_n, wcap_n;\n    long bcap_o, wcap_o;\n\
    \    long bcap_p, wcap_p;\n    long bcap_q, wcap_q;\n    long bcap_r, wcap_r;\n\
    \    long bcap_s, wcap_s;\n    long bcap_t, wcap_t;\n    long bcap_u, wcap_u;\n\
    \    long bcap_v, wcap_v;\n    long bcap_w, wcap_w;\n    long bcap_x, wcap_x;\n\
    \    long bcap_y, wcap_y;\n    long bcap_z, wcap_z;\n    long bcap_0, wcap_0;\n\
    \    long bcap_1, wcap_1;\n    long bcap_2, wcap_2;\n    long bcap_3, wcap_3;\n\
    \    long bcap_4, wcap_4;\n    long bcap_5, wcap_5;\n    long bcap_6, wcap_6;\n\
    \    long bcap_7, wcap_7;\n    long bcap_8, wcap_8;\n    long bcap_9, wcap_9;\n\
    \    long bcap_a, wcap_a;\n    long bcap_b, wcap_b;\n    long bcap_c, wcap_c;\n\
    \    long bcap_d, wcap_d;\n    long bcap_e, wcap_e;\n    long bcap_f, wcap_f;\n\
    \    long bcap_g, wcap_g;\n    long bcap_h, wcap_h;\n    long bcap_i, wcap_i;\n\
    \    long bcap_j, wcap_j;\n    long bcap_k, wcap_k;", "    // Your code here\n\
    \    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long ans = std::numeric_limits<long>::max();\n    long long ans2 = 0;\n \
    \   long long ans3 = 0;\n    long long ans4 = 0;\n    long long ans5 = 0;\n  \
    \  long long ans6 = 0;\n    long long ans7 = 0;\n    long long ans8 = 0;\n   \
    \ long long ans9 = 0;\n    long long ans10 = 0;\n    long long ans11 = 0;\n  \
    \  long long ans12 = 0;\n    long long ans13 = 0;\n    long long ans14 = 0;\n\
    \    long long ans15 = 0;\n    long long ans16 = 0;\n    long long ans17 = 0;\n\
    \    long long ans18 = 0;\n    long long ans19 = 0;\n    long long ans20 = 0;\n\
    \    long long ansp = 0;\n    long long ansp2 = 0;\n    long long ansp3 = 0;\n\
    \    long long ansp4 = 0;\n    long long ansp5 = 0;\n    long long ansp6 = 0;\n\
    \    long long ansp7 = 0;\n    long long ansp8 = 0;\n    long long ansp9 = 0;\n\
    \    long long ansp10 = 0;\n    long long ansp11 = 0;\n    long long ansp12 =\
    \ 0;\n    long long ansp13 = 0;\n    long long ansp14 = 0;\n    long long ansp15\
    \ = 0;\n    long long ansp16 = 0;\n    long long ansp17 = 0;\n    long long ansp18\
    \ = 0;\n    long long ansp19 = 0;\n    long long ansp20 = 0;\n    long long anspp\
    \ = 0;\n    long long anspp2 = 0;\n    long long anspp3 = 0;\n    long long anspp4\
    \ = 0;\n    long long anspp5 = 0;\n    long long anspp6 = 0;\n    long long anspp7\
    \ = 0;\n    long long anspp8 = 0;\n    long long anspp9 = 0;\n    long long anspp10\
    \ = 0;\n    long long anspp11 = 0;\n    long long anspp12 = 0;\n    long long\
    \ anspp13 = 0;\n    long long anspp14 = 0;\n    long long anspp15 = 0;\n    long\
    \ long anspp16 = 0;\n    long long anspp17 = 0;\n    long long anspp18 = 0;\n\
    \    long long anspp19 = 0;\n    long long anspp20 = 0;\n    long long ansppp\
    \ = 0;\n    long long ansp", "    long ans = 0;\n    long n = grid.size();\n \
    \   long m = grid[0].size();\n    long long an = 0;\n    long long count = 0;\n\
    \    long long sum = 0;\n    long long cur = 0;\n    long long cur2 = 0;\n   \
    \ long long cur3 = 0;\n    long long cur4 = 0;\n    long long cur5 = 0;\n    long\
    \ long cur6 = 0;\n    long long cur7 = 0;\n    long long cur8 = 0;\n    long long\
    \ cur9 = 0;\n    long long cur10 = 0;\n    long long cur11 = 0;\n    long long\
    \ cur12 = 0;\n    long long cur13 = 0;\n    long long cur14 = 0;\n    long long\
    \ cur15 = 0;\n    long long cur16 = 0;\n    long long cur17 = 0;\n    long long\
    \ cur18 = 0;\n    long long cur19 = 0;\n    long long cur20 = 0;\n    long long\
    \ cur21 = 0;\n    long long cur22 = 0;\n    long long cur23 = 0;\n    long long\
    \ cur24 = 0;\n    long long cur25 = 0;\n    long long cur26 = 0;\n    long long\
    \ cur27 = 0;\n    long long cur28 = 0;\n    long long cur29 = 0;\n    long long\
    \ cur30 = 0;\n    long long cur31 = 0;\n    long long cur32 = 0;\n    long long\
    \ cur33 = 0;\n    long long cur34 = 0;\n    long long cur35 = 0;\n    long long\
    \ cur36 = 0;\n    long long cur37 = 0;\n    long long cur38 = 0;\n    long long\
    \ cur39 = 0;\n    long long cur40 = 0;\n    long long cur41 = 0;\n    long long\
    \ cur42 = 0;\n    long long cur43 = 0;\n    long long cur44 = 0;\n    long long\
    \ cur45 = 0;\n    long long cur46 = 0;\n    long long cur47 = 0;\n    long long\
    \ cur48 = 0;\n    long long cur49 = 0;\n    long long cur50 = 0;\n    long long\
    \ cur51 = 0;\n    long long cur52 = 0;\n    long long cur53 = 0;\n    long long\
    \ cur54 = 0;\n    long long cur55 = 0;\n    long long cur56 = 0;\n    long long\
    \ cur57 = 0;\n    long long cur58 = 0;\n    long long cur59 = 0;\n    long long\
    \ cur60 = 0;\n    long long cur61 = 0;\n    long long cur62 = 0;\n    long long\
    \ cur63 = 0;\n    long long cur64 = 0;\n    long long cur65 = 0;\n    long long\
    \ cur66 = 0;\n    long long cur67 = 0;\n    long long cur68 = 0;\n    long long\
    \ cur", "    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long long an = 0;\n    long long an2 = 0;\n    long long an3 = 0;\n    long\
    \ long an4 = 0;\n    long long an5 = 0;\n    long long an6 = 0;\n    long long\
    \ an7 = 0;\n    long long an8 = 0;\n    long long an9 = 0;\n    long long an10\
    \ = 0;\n    long long an11 = 0;\n    long long an12 = 0;\n    long long an13 =\
    \ 0;\n    long long an14 = 0;\n    long long an15 = 0;\n    long long an16 = 0;\n\
    \    long long an17 = 0;\n    long long an18 = 0;\n    long long an19 = 0;\n \
    \   long long an20 = 0;\n    long long an21 = 0;\n    long long an22 = 0;\n  \
    \  long long an23 = 0;\n    long long an24 = 0;\n    long long an25 = 0;\n   \
    \ long long an26 = 0;\n    long long an27 = 0;\n    long long an28 = 0;\n    long\
    \ long an29 = 0;\n    long long an30 = 0;\n    long long an31 = 0;\n    long long\
    \ an32 = 0;\n    long long an33 = 0;\n    long long an34 = 0;\n    long long an35\
    \ = 0;\n    long long an36 = 0;\n    long long an37 = 0;\n    long long an38 =\
    \ 0;\n    long long an39 = 0;\n    long long an40 = 0;\n    long long an41 = 0;\n\
    \    long long an42 = 0;\n    long long an43 = 0;\n    long long an44 = 0;\n \
    \   long long an45 = 0;\n    long long an46 = 0;\n    long long an47 = 0;\n  \
    \  long long an48 = 0;\n    long long an49 = 0;\n    long long an50 = 0;\n   \
    \ long long an51 = 0;\n    long long an52 = 0;\n    long long an53 = 0;\n    long\
    \ long an54 = 0;\n    long long an55 = 0;\n    long long an56 = 0;\n    long long\
    \ an57 = 0;\n    long long an58 = 0;\n    long long an59 = 0;\n    long long an60\
    \ = 0;\n    long long an61 = 0;\n    long long an62 = 0;\n    long long an63 =\
    \ 0;\n    long long an64 = 0;\n    long long an65 = 0;\n    long long an66 = 0;\n\
    \    long long an67 = 0;\n    long long an68 = 0;\n    long long an69 = 0;\n \
    \   long long an70 = 0;\n    long long an71 = 0;\n", "    long ans = 0;\n    long\
    \ n = grid.size();\n    long m = grid[0].size();\n    long long an = n * m;\n\
    \    long long ans = an;\n    long long ant = n;\n    long long ant = m;\n   \
    \ long long ant = n;\n    long long ant = n;\n    long long ant = n;\n    long\
    \ long ant = n;\n    long long ant = n;\n    long long ant = n;\n    long long\
    \ ant = n;\n    long long ant = n;\n    long long ant = n;\n    long long ant\
    \ = n;\n    long long ant = n;\n    long long ant = n;\n    long long ant = n;\n\
    \    long long ant = n;\n    long long ant = n;\n    long long ant = n;\n    long\
    \ long ant = n;\n    long long ant = n;\n    long long ant = n;\n    long long\
    \ ant = n;\n    long long ant = n;\n    long long ant = n;\n    long long ant\
    \ = n;\n    long long ant = n;\n    long long ant = n;\n    long long ant = n;\n\
    \    long long ant = n;\n    long long ant = n;\n    long long ant = n;\n    long\
    \ long ant = n;\n    long long ant = n;\n    long long ant = n;\n    long long\
    \ ant = n;\n    long long ant = n;\n    long long ant = n;\n    long long ant\
    \ = n;\n    long long ant = n;\n    long long ant = n;\n    long long ant = n;\n\
    \    long long ant = n;\n    long long ant = n;\n    long long ant = n;\n    long\
    \ long ant = n;\n    long long ant = n;\n    long long ant = n;\n    long long\
    \ ant = n;\n    long long ant = n;\n    long long ant = n;\n    long long ant\
    \ = n;\n    long long ant = n;\n    long long ant = n;\n    long long ant = n;\n\
    \    long long ant = n;\n    long long ant = n;\n    long long ant = n;\n    long\
    \ long ant = n;\n    long long ant = n;\n    long long ant = n;\n    long long\
    \ ant = n;\n    long long ant = n;\n    long long ant = n;\n    long long ant\
    \ = n;\n    long long ant = n;\n    long long ant = n;\n    long long ant = n;\n\
    \    long long ant = n;\n", "    long ans = 0;\n    long n = grid.size();\n  \
    \  long m = grid[0].size();\n    long cnt = 0;\n    long ans = INT_MAX;\n    for(long\
    \ i = 0; i < n; i++) {\n        for(long j = 0; j < m; j++) {\n            if(grid[i][j]\
    \ == 1) {\n                cnt += 1;\n                if(cnt > ans) {\n      \
    \              ans = cnt;\n                }\n            }\n        }\n    }\n\
    \    for(long i = 0; i < n; i++) {\n        for(long j = 0; j < m; j++) {\n  \
    \          if(grid[i][j] == 0) {\n                cnt -= 1;\n                if(cnt\
    \ < 0) {\n                    ans = cnt;\n                }\n            }\n \
    \       }\n    }\n    return ans;", "    // write your code here\n    long ans\
    \ = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long count\
    \ = 0;\n    long cur = 0;\n    long max = 0;\n    long min = 0;\n    long cur_cap\
    \ = 0;\n    long min_cap = 0;\n    long max_cap = 0;\n    long min_cur = 0;\n\
    \    long min_max = 0;\n    long min_min = 0;\n    long min_cur_cap = 0;\n   \
    \ long min_max_cap = 0;\n    long min_min_cur = 0;\n    long min_min_max = 0;\n\
    \    long min_min_min = 0;\n    long min_min_cur_cap = 0;\n    long min_min_max_cap\
    \ = 0;\n    long min_min_min_cur = 0;\n    long min_min_min_max = 0;\n    long\
    \ min_min_min_min = 0;\n    long min_min_min_cur_cap = 0;\n    long min_min_min_max_cap\
    \ = 0;\n    long min_min_min_min_cur = 0;\n    long min_min_min_min_max = 0;\n\
    \    long min_min_min_min = 0;\n    long min_min_min_cur_cap = 0;\n    long min_min_min_max_cap\
    \ = 0;\n    long min_min_min_min_cur = 0;\n    long min_min_min_min_max = 0;\n\
    \    long min_min_min_min = 0;\n    long min_min_min_cur_cap = 0;\n    long min_min_min_max_cap\
    \ = 0;\n    long min_min_min_min_cur = 0;\n    long min_min_min_min_max = 0;\n\
    \    long min_min_min_min = 0;\n    long min_min_min_cur_cap = 0;\n    long min_min_min_max_cap\
    \ = 0;\n    long min_min_min_min_cur = 0;\n    long min_min_min_min_max = 0;\n\
    \    long min_min_min_min = 0;\n    long min_min_min_cur_cap = 0;\n    long min_min_min_max_cap\
    \ = 0;\n    long min_min_min_min_cur = 0;\n    long min_min_min_min_max = 0;\n\
    \    long min_min_min_min = 0;\n    long min_min_min_cur_cap = 0;\n    long min_min_min_max_cap\
    \ = 0;\n    long min_min_min_min_cur = 0;\n    long min_min_min_min_max = 0;\n\
    \    long min_min_min_min = 0;\n    long min_min_min_cur_cap = 0;\n    long min_min_min_max_cap\
    \ = 0;\n    long min_min_min_min_cur = 0;\n    long min_min_min_min_max = 0;\n\
    \    long min_min_min_min = 0;\n    long min_min_min_cur_cap = 0;\n    long min_min_min_max_cap\
    \ = 0;\n    long min_min_min_min_cur = 0;\n    long min_min_min_min_max = 0;\n\
    \    long min_min_min_min = 0;\n    long min_min_min_", "    long ans = 0;\n \
    \   long n = grid.size();\n    long m = grid[0].size();\n    long long an = n\
    \ * m;\n    long long sum = 0;\n    long long max = 0;\n    long long cur = 0;\n\
    \    long long cur2 = 0;\n    long long cur3 = 0;\n    long long cur4 = 0;\n \
    \   long long cur5 = 0;\n    long long cur6 = 0;\n    long long cur7 = 0;\n  \
    \  long long cur8 = 0;\n    long long cur9 = 0;\n    long long cur10 = 0;\n  \
    \  long long cur11 = 0;\n    long long cur12 = 0;\n    long long cur13 = 0;\n\
    \    long long cur14 = 0;\n    long long cur15 = 0;\n    long long cur16 = 0;\n\
    \    long long cur17 = 0;\n    long long cur18 = 0;\n    long long cur19 = 0;\n\
    \    long long cur20 = 0;\n    long long cur21 = 0;\n    long long cur22 = 0;\n\
    \    long long cur23 = 0;\n    long long cur24 = 0;\n    long long cur25 = 0;\n\
    \    long long cur26 = 0;\n    long long cur27 = 0;\n    long long cur28 = 0;\n\
    \    long long cur29 = 0;\n    long long cur30 = 0;\n    long long cur31 = 0;\n\
    \    long long cur32 = 0;\n    long long cur33 = 0;\n    long long cur34 = 0;\n\
    \    long long cur35 = 0;\n    long long cur36 = 0;\n    long long cur37 = 0;\n\
    \    long long cur38 = 0;\n    long long cur39 = 0;\n    long long cur40 = 0;\n\
    \    long long cur41 = 0;\n    long long cur42 = 0;\n    long long cur43 = 0;\n\
    \    long long cur44 = 0;\n    long long cur45 = 0;\n    long long cur46 = 0;\n\
    \    long long cur47 = 0;\n    long long cur48 = 0;\n    long long cur49 = 0;\n\
    \    long long cur50 = 0;\n    long long cur51 = 0;\n    long long cur52 = 0;\n\
    \    long long cur53 = 0;\n    long long cur54 = 0;\n    long long cur55 = 0;\n\
    \    long long cur56 = 0;\n    long long cur57 = 0;\n    long long cur58 = 0;\n\
    \    long long cur59 = 0;\n    long long cur60 = 0;\n    long long cur61 = 0;\n\
    \    long long cur62 = 0;\n    long long cur63 = 0;\n    long long cur64 = 0;\n\
    \    long long cur65 = 0;\n    long long cur66 = 0;\n    long long cur67 = 0;\n\
    \    long long cur68 = 0;\n    ", "    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long long an = 0;\n    long long max = 0;\n\
    \    long long min = 0;\n    long long sum = 0;\n    long long count = 0;\n  \
    \  long long temp = 0;\n    long long temp2 = 0;\n    long long temp3 = 0;\n \
    \   long long temp4 = 0;\n    long long temp5 = 0;\n    long long temp6 = 0;\n\
    \    long long temp7 = 0;\n    long long temp8 = 0;\n    long long temp9 = 0;\n\
    \    long long temp10 = 0;\n    long long temp11 = 0;\n    long long temp12 =\
    \ 0;\n    long long temp13 = 0;\n    long long temp14 = 0;\n    long long temp15\
    \ = 0;\n    long long temp16 = 0;\n    long long temp17 = 0;\n    long long temp18\
    \ = 0;\n    long long temp19 = 0;\n    long long temp20 = 0;\n    long long temp21\
    \ = 0;\n    long long temp22 = 0;\n    long long temp23 = 0;\n    long long temp24\
    \ = 0;\n    long long temp25 = 0;\n    long long temp26 = 0;\n    long long temp27\
    \ = 0;\n    long long temp28 = 0;\n    long long temp29 = 0;\n    long long temp30\
    \ = 0;\n    long long temp31 = 0;\n    long long temp32 = 0;\n    long long temp33\
    \ = 0;\n    long long temp34 = 0;\n    long long temp35 = 0;\n    long long temp36\
    \ = 0;\n    long long temp37 = 0;\n    long long temp38 = 0;\n    long long temp39\
    \ = 0;\n    long long temp40 = 0;\n    long long temp41 = 0;\n    long long temp42\
    \ = 0;\n    long long temp43 = 0;\n    long long temp44 = 0;\n    long long temp45\
    \ = 0;\n    long long temp46 = 0;\n    long long temp47 = 0;\n    long long temp48\
    \ = 0;\n    long long temp49 = 0;\n    long long temp50 = 0;\n    long long temp51\
    \ = 0;\n    long long temp52 = 0;\n    long long temp53 = 0;\n    long long temp54\
    \ = 0;\n    long long temp55 = 0;\n    long long temp56 = 0;\n    long long temp57\
    \ = 0;\n    long long temp58 = 0;\n    long long temp59 = 0;\n    long long temp60\
    \ = 0;\n    long long temp61 = 0;\n    long long temp62 = 0;\n    long long temp63\
    \ = 0;\n    long long temp64 = 0;\n    long long temp65 = 0;\n    long long temp66\
    \ = 0;\n    long long temp67 = 0;", "    // Your code here\n    long ans = 0;\n\
    \    long n = grid.size();\n    long m = grid[0].size();\n    long ans = 0;\n\
    \    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long\
    \ long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long\
    \ ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans\
    \ = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n\
    \    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long\
    \ long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long\
    \ ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans\
    \ = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n\
    \    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long\
    \ long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long\
    \ ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans\
    \ = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n\
    \    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long\
    \ long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long\
    \ ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans\
    \ = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n\
    \    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long\
    \ long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long\
    \ ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans\
    \ = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n\
    \    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long\
    \ long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long\
    \ ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans\
    \ = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n\
    \    long long ans = 0;\n    long long ans = 0;\n    long ", "    long ans = 0;\n\
    \    long n = grid.size();\n    long m = grid[0].size();\n    long long an = 0;\n\
    \    long long cnt = 0;\n    long long sum = 0;\n    long long cur = 0;\n    long\
    \ long max = 0;\n    long long cur_cap = 0;\n    long long cur_cap_max = 0;\n\
    \    long long cur_max = 0;\n    long long cur_max_max = 0;\n    long long cur_max_min\
    \ = 0;\n    long long cur_min_max = 0;\n    long long cur_min_min = 0;\n    long\
    \ long cur_min_min = 0;\n    long long cur_min_max = 0;\n    long long cur_max_min\
    \ = 0;\n    long long cur_min_min = 0;\n    long long cur_min_max = 0;\n    long\
    \ long cur_max_min = 0;\n    long long cur_min_min = 0;\n    long long cur_min_max\
    \ = 0;\n    long long cur_max_min = 0;\n    long long cur_min_min = 0;\n    long\
    \ long cur_min_max = 0;\n    long long cur_max_min = 0;\n    long long cur_min_min\
    \ = 0;\n    long long cur_min_max = 0;\n    long long cur_max_min = 0;\n    long\
    \ long cur_min_min = 0;\n    long long cur_min_max = 0;\n    long long cur_max_min\
    \ = 0;\n    long long cur_min_min = 0;\n    long long cur_min_max = 0;\n    long\
    \ long cur_max_min = 0;\n    long long cur_min_min = 0;\n    long long cur_min_max\
    \ = 0;\n    long long cur_max_min = 0;\n    long long cur_min_min = 0;\n    long\
    \ long cur_min_max = 0;\n    long long cur_max_min = 0;\n    long long cur_min_min\
    \ = 0;\n    long long cur_min_max = 0;\n    long long cur_max_min = 0;\n    long\
    \ long cur_min_min = 0;\n    long long cur_min_max = 0;\n    long long cur_max_min\
    \ = 0;\n    long long cur_min_min = 0;\n    long long cur_min_max = 0;\n    long\
    \ long cur_max_min = 0;\n    long long cur_min_min = 0;\n    long long cur_min_max\
    \ = 0;\n    long long cur_max_min = 0;\n    long long cur_min_min = 0;\n    long\
    \ long cur_min_max = 0;\n    long long cur_max_min = 0;\n    long long cur_min_min\
    \ = 0;\n    long long cur_min_max = 0;\n    long long cur_max_min = 0;\n    long\
    \ long cur_min_min = 0;\n    long long cur_min_max = 0;\n    long long cur_max_min\
    \ = 0;\n    long long cur_min_min = 0;\n    long long cur_min_max = 0;\n    long\
    \ long cur_max_min = 0;", "    // write your code here\n    long ans = 0;\n  \
    \  long n = grid.size();\n    long m = grid[0].size();\n    long ans = 0;\n  \
    \  long count = 0;\n    long i, j;\n    long sum = 0;\n    long cur = 0;\n   \
    \ for (i = 0; i < n; i++) {\n        for (j = 0; j < m; j++) {\n            if\
    \ (grid[i][j] == 1) {\n                cur++;\n                sum += cur;\n \
    \           }\n        }\n    }\n    long cur = sum;\n    long cur2 = cur;\n \
    \   long cur3 = cur;\n    long cur4 = cur;\n    long cur5 = cur;\n    long cur6\
    \ = cur;\n    long cur7 = cur;\n    long cur8 = cur;\n    long cur9 = cur;\n \
    \   long cur10 = cur;\n    long cur11 = cur;\n    long cur12 = cur;\n    long\
    \ cur13 = cur;\n    long cur14 = cur;\n    long cur15 = cur;\n    long cur16 =\
    \ cur;\n    long cur17 = cur;\n    long cur18 = cur;\n    long cur19 = cur;\n\
    \    long cur20 = cur;\n    long cur21 = cur;\n    long cur22 = cur;\n    long\
    \ cur23 = cur;\n    long cur24 = cur;\n    long cur25 = cur;\n    long cur26 =\
    \ cur;\n    long cur27 = cur;\n    long cur28 = cur;\n    long cur29 = cur;\n\
    \    long cur30 = cur;\n    long cur31 = cur;\n    long cur32 = cur;\n    long\
    \ cur33 = cur;\n    long cur34 = cur;\n    long cur35 = cur;\n    long cur36 =\
    \ cur;\n    long cur37 = cur;\n    long cur38 = cur;\n    long cur39 = cur;\n\
    \    long cur40 = cur;\n    long cur41 = cur;\n    long cur42 = cur;\n    long\
    \ cur43 = cur;\n    long cur44 = cur;\n    long cur45 = cur;\n    long cur46 =\
    \ cur;\n    long cur47 = cur;\n    long cur48 = cur;\n    long cur49 = cur;\n\
    \    long cur50 = cur;\n    long cur51 = cur;\n    long cur52 = cur;\n    long\
    \ cur53 = cur;\n    long cur54 = cur;\n    long cur55 = cur;\n    long cur5",
  "    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n  \
    \  long count = 0;\n    long long ans = 0;\n    for(long i = 0; i < n; i++) {\n\
    \        for(long j = 0; j < m; j++) {\n            if(grid[i][j] == 1) {\n  \
    \              long long cur = grid[i][j];\n                long long cur_cap\
    \ = cur;\n                for(long k = 0; k < n; k++) {\n                    for(long\
    \ l = 0; l < m; l++) {\n                        if(grid[k][l] == 0) {\n      \
    \                      cur_cap--;\n                            if(cur_cap == 0)\
    \ {\n                                grid[k][l] = 1;\n                       \
    \         count++;\n                                break;\n                 \
    \           }\n                        }\n                    }\n            \
    \    }\n                ans = max(ans, count);\n                count = 0;\n \
    \           }\n        }\n    }\n    return ans;", "    long ans = 0;\n    long\
    \ n = grid.size();\n    long m = grid[0].size();\n    long long ans_temp = 0;\n\
    \    long long temp_ans = 0;\n    long long temp_ans_temp = 0;\n    long long\
    \ temp_ans_temp_temp = 0;\n    long long temp_ans_temp_temp_temp = 0;\n    long\
    \ long temp_ans_temp_temp_temp_temp = 0;\n    long long temp_ans_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp = 0;\n    long long\
    \ temp_ans_temp_temp_temp_temp_temp_temp_temp = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp =\
    \ 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_an", "    // write your code here\n    long ans = 0;\n\
    \    long n = grid.size();\n    long m = grid[0].size();\n    long long ans =\
    \ 1;\n    for(long i = 0; i < n; i++) {\n        for(long j = 0; j < m; j++) {\n\
    \            if(grid[i][j] == 1) {\n                long long cur = grid[i][j];\n\
    \                for(long k = i; k < (i + cur); k++) {\n                    grid[k][j]\
    \ = 0;\n                }\n                for(long k = j; k < (j + cur); k++)\
    \ {\n                    grid[i][k] = 0;\n                }\n                ans\
    \ = std::max(ans, max_fill(grid, capacity));\n            }\n        }\n    }\n\
    \    return ans;", "    // write your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long ans = std::numeric_limits<long>::max();\n\
    \    long long ans2 = 0;\n    long long ans3 = 0;\n    long long ans4 = 0;\n \
    \   long long ans5 = 0;\n    long long ans6 = 0;\n    long long ans7 = 0;\n  \
    \  long long ans8 = 0;\n    long long ans9 = 0;\n    long long ans10 = 0;\n  \
    \  long long ans11 = 0;\n    long long ans12 = 0;\n    long long ans13 = 0;\n\
    \    long long ans14 = 0;\n    long long ans15 = 0;\n    long long ans16 = 0;\n\
    \    long long ans17 = 0;\n    long long ans18 = 0;\n    long long ans19 = 0;\n\
    \    long long ans20 = 0;\n    long long ansp1 = 0;\n    long long ansp2 = 0;\n\
    \    long long ansp3 = 0;\n    long long ansp4 = 0;\n    long long ansp5 = 0;\n\
    \    long long ansp6 = 0;\n    long long ansp7 = 0;\n    long long ansp8 = 0;\n\
    \    long long ansp9 = 0;\n    long long ansp10 = 0;\n    long long ansp11 = 0;\n\
    \    long long ansp12 = 0;\n    long long ansp13 = 0;\n    long long ansp14 =\
    \ 0;\n    long long ansp15 = 0;\n    long long ansp16 = 0;\n    long long ansp17\
    \ = 0;\n    long long ansp18 = 0;\n    long long ansp19 = 0;\n    long long ansp20\
    \ = 0;\n    long long ansp21 = 0;\n    long long ansp22 = 0;\n    long long ansp23\
    \ = 0;\n    long long ansp24 = 0;\n    long long ansp25 = 0;\n    long long ansp26\
    \ = 0;\n    long long ansp27 = 0;\n    long long ansp28 = 0;\n    long long ansp29\
    \ = 0;\n    long long ansp30 = 0;\n    long long ansp31 = 0;\n    long long ansp32\
    \ = 0;\n    long long ansp33 = 0;\n    long long ansp34 = 0;\n    long long ansp35\
    \ = 0;\n    long long ansp36 = 0;\n    long long ansp37 = 0;\n    long long ansp38\
    \ = 0;\n    long long ansp39 = 0;\n    long long ansp40 = 0;\n    long long ansp41\
    \ = 0;\n    long long ansp42 = 0;\n    long long ansp43 = 0;\n    long long an",
  "    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n  \
    \  long long ans = 0;\n    long long ans2 = 0;\n    long long ans3 = 0;\n    long\
    \ long ans4 = 0;\n    long long ans5 = 0;\n    long long ans6 = 0;\n    long long\
    \ ans7 = 0;\n    long long ans8 = 0;\n    long long ans9 = 0;\n    long long ans10\
    \ = 0;\n    long long ans11 = 0;\n    long long ans12 = 0;\n    long long ans13\
    \ = 0;\n    long long ans14 = 0;\n    long long ans15 = 0;\n    long long ans16\
    \ = 0;\n    long long ans17 = 0;\n    long long ans18 = 0;\n    long long ans19\
    \ = 0;\n    long long ans20 = 0;\n    long long ansp = 0;\n    long long ansp2\
    \ = 0;\n    long long ansp3 = 0;\n    long long ansp4 = 0;\n    long long ansp5\
    \ = 0;\n    long long ansp6 = 0;\n    long long ansp7 = 0;\n    long long ansp8\
    \ = 0;\n    long long ansp9 = 0;\n    long long ansp10 = 0;\n    long long ansp11\
    \ = 0;\n    long long ansp12 = 0;\n    long long ansp13 = 0;\n    long long ansp14\
    \ = 0;\n    long long ansp15 = 0;\n    long long ansp16 = 0;\n    long long ansp17\
    \ = 0;\n    long long ansp18 = 0;\n    long long ansp19 = 0;\n    long long ansp20\
    \ = 0;\n    long long anspp = 0;\n    long long anspp2 = 0;\n    long long anspp3\
    \ = 0;\n    long long anspp4 = 0;\n    long long anspp5 = 0;\n    long long anspp6\
    \ = 0;\n    long long anspp7 = 0;\n    long long anspp8 = 0;\n    long long anspp9\
    \ = 0;\n    long long anspp10 = 0;\n    long long anspp11 = 0;\n    long long\
    \ anspp12 = 0;\n    long long anspp13 = 0;\n    long long anspp14 = 0;\n    long\
    \ long anspp15 = 0;\n    long long anspp16 = 0;\n    long long anspp17 = 0;\n\
    \    long long anspp18 = 0;\n    long long anspp19 = 0;\n    long long anspp20\
    \ = 0;\n    long long ansppp = 0;\n    long long ansppp2 = 0;\n    long long ansppp3\
    \ = 0;\n    ", "    // Your code here\n    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long ans = 0;\n    long cnt = 0;\n    long\
    \ long max = 0;\n    long long cur = 0;\n    long long cur2 = 0;\n    long long\
    \ cur3 = 0;\n    long long cur4 = 0;\n    long long cur5 = 0;\n    long long cur6\
    \ = 0;\n    long long cur7 = 0;\n    long long cur8 = 0;\n    long long cur9 =\
    \ 0;\n    long long cur10 = 0;\n    long long cur11 = 0;\n    long long cur12\
    \ = 0;\n    long long cur13 = 0;\n    long long cur14 = 0;\n    long long cur15\
    \ = 0;\n    long long cur16 = 0;\n    long long cur17 = 0;\n    long long cur18\
    \ = 0;\n    long long cur19 = 0;\n    long long cur20 = 0;\n    long long cur21\
    \ = 0;\n    long long cur22 = 0;\n    long long cur23 = 0;\n    long long cur24\
    \ = 0;\n    long long cur25 = 0;\n    long long cur26 = 0;\n    long long cur27\
    \ = 0;\n    long long cur28 = 0;\n    long long cur29 = 0;\n    long long cur30\
    \ = 0;\n    long long cur31 = 0;\n    long long cur32 = 0;\n    long long cur33\
    \ = 0;\n    long long cur34 = 0;\n    long long cur35 = 0;\n    long long cur36\
    \ = 0;\n    long long cur37 = 0;\n    long long cur38 = 0;\n    long long cur39\
    \ = 0;\n    long long cur40 = 0;\n    long long cur41 = 0;\n    long long cur42\
    \ = 0;\n    long long cur43 = 0;\n    long long cur44 = 0;\n    long long cur45\
    \ = 0;\n    long long cur46 = 0;\n    long long cur47 = 0;\n    long long cur48\
    \ = 0;\n    long long cur49 = 0;\n    long long cur50 = 0;\n    long long cur51\
    \ = 0;\n    long long cur52 = 0;\n    long long cur53 = 0;\n    long long cur54\
    \ = 0;\n    long long cur55 = 0;\n    long long cur56 = 0;\n    long long cur57\
    \ = 0;\n    long long cur58 = 0;\n    long long cur59 = 0;\n    long long cur60\
    \ = 0;\n    long long cur61 = 0;\n    long long cur62 = 0;\n    long long cur63\
    \ = 0;\n    long long cur64 = 0;\n    long long cur65 = 0;\n    long long cur66\
    \ = 0;\n    long long cur67 = 0;\n    long long cur68 = 0;\n", "    long ans =\
    \ 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long long ans\
    \ = 0;\n    long long max = 0;\n    long long min = 0;\n    long long count =\
    \ 0;\n    long long sum = 0;\n    long long sum2 = 0;\n    long long sum3 = 0;\n\
    \    long long sum4 = 0;\n    long long sum5 = 0;\n    long long sum6 = 0;\n \
    \   long long sum7 = 0;\n    long long sum8 = 0;\n    long long sum9 = 0;\n  \
    \  long long sum10 = 0;\n    long long sum11 = 0;\n    long long sum12 = 0;\n\
    \    long long sum13 = 0;\n    long long sum14 = 0;\n    long long sum15 = 0;\n\
    \    long long sum16 = 0;\n    long long sum17 = 0;\n    long long sum18 = 0;\n\
    \    long long sum19 = 0;\n    long long sum20 = 0;\n    long long sum21 = 0;\n\
    \    long long sum22 = 0;\n    long long sum23 = 0;\n    long long sum24 = 0;\n\
    \    long long sum25 = 0;\n    long long sum26 = 0;\n    long long sum27 = 0;\n\
    \    long long sum28 = 0;\n    long long sum29 = 0;\n    long long sum30 = 0;\n\
    \    long long sum31 = 0;\n    long long sum32 = 0;\n    long long sum33 = 0;\n\
    \    long long sum34 = 0;\n    long long sum35 = 0;\n    long long sum36 = 0;\n\
    \    long long sum37 = 0;\n    long long sum38 = 0;\n    long long sum39 = 0;\n\
    \    long long sum40 = 0;\n    long long sum41 = 0;\n    long long sum42 = 0;\n\
    \    long long sum43 = 0;\n    long long sum44 = 0;\n    long long sum45 = 0;\n\
    \    long long sum46 = 0;\n    long long sum47 = 0;\n    long long sum48 = 0;\n\
    \    long long sum49 = 0;\n    long long sum50 = 0;\n    long long sum51 = 0;\n\
    \    long long sum52 = 0;\n    long long sum53 = 0;\n    long long sum54 = 0;\n\
    \    long long sum55 = 0;\n    long long sum56 = 0;\n    long long sum57 = 0;\n\
    \    long long sum58 = 0;\n    long long sum59 = 0;\n    long long sum60 = 0;\n\
    \    long long sum61 = 0;\n    long long sum62 = 0;\n    long long sum63 = 0;\n\
    \    long long sum64 = 0;\n    long long sum65 = 0;\n    long long sum66 = 0;\n\
    \    long long sum67 = 0;\n    long long sum68", "    long ans = 0;\n    long\
    \ n = grid.size();\n    long m = grid[0].size();\n    long x = 1;\n    long y\
    \ = 1;\n    long z = 1;\n    long temp;\n    long count = 0;\n    long long ans\
    \ = 0;\n    long long count = 0;\n    long long temp;\n    long long ans = 0;\n\
    \    long long count = 0;\n    long long temp;\n    long long ans = 0;\n    long\
    \ long count = 0;\n    long long temp;\n    long long ans = 0;\n    long long\
    \ count = 0;\n    long long temp;\n    long long ans = 0;\n    long long count\
    \ = 0;\n    long long temp;\n    long long ans = 0;\n    long long count = 0;\n\
    \    long long temp;\n    long long ans = 0;\n    long long count = 0;\n    long\
    \ long temp;\n    long long ans = 0;\n    long long count = 0;\n    long long\
    \ temp;\n    long long ans = 0;\n    long long count = 0;\n    long long temp;\n\
    \    long long ans = 0;\n    long long count = 0;\n    long long temp;\n    long\
    \ long ans = 0;\n    long long count = 0;\n    long long temp;\n    long long\
    \ ans = 0;\n    long long count = 0;\n    long long temp;\n    long long ans =\
    \ 0;\n    long long count = 0;\n    long long temp;\n    long long ans = 0;\n\
    \    long long count = 0;\n    long long temp;\n    long long ans = 0;\n    long\
    \ long count = 0;\n    long long temp;\n    long long ans = 0;\n    long long\
    \ count = 0;\n    long long temp;\n    long long ans = 0;\n    long long count\
    \ = 0;\n    long long temp;\n    long long ans = 0;\n    long long count = 0;\n\
    \    long long temp;\n    long long ans = 0;\n    long long count = 0;\n    long\
    \ long temp;\n    long long ans = 0;\n    long long count = 0;\n    long long\
    \ temp;\n    long long ans = 0;\n    long long count = 0;\n    long long temp;\n\
    \    long long ans = 0;\n    long long count = 0;\n    long long temp;\n    long\
    \ long ans = 0;\n    long long count = 0;\n    long long temp;\n    long long\
    \ ans = 0;\n    long long count = 0;\n    long long temp;\n    long long ans =\
    \ 0;\n    long long count = 0;\n    long long temp;\n    long long ans = 0;\n\
    \    long long count = 0;\n    long long temp;\n    long long ans = 0;\n    long\
    \ long count = 0;\n    long long temp;\n    long long ans = 0;\n    long long ",
  "    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n  \
    \  long long ans = 0;\n    long long count = 0;\n    long long max = 0;\n    long\
    \ long min = 0;\n    long long sum = 0;\n    long long sum2 = 0;\n    long long\
    \ sum3 = 0;\n    long long sum4 = 0;\n    long long sum5 = 0;\n    long long sum6\
    \ = 0;\n    long long sum7 = 0;\n    long long sum8 = 0;\n    long long sum9 =\
    \ 0;\n    long long sum10 = 0;\n    long long sum11 = 0;\n    long long sum12\
    \ = 0;\n    long long sum13 = 0;\n    long long sum14 = 0;\n    long long sum15\
    \ = 0;\n    long long sum16 = 0;\n    long long sum17 = 0;\n    long long sum18\
    \ = 0;\n    long long sum19 = 0;\n    long long sum20 = 0;\n    long long sum21\
    \ = 0;\n    long long sum22 = 0;\n    long long sum23 = 0;\n    long long sum24\
    \ = 0;\n    long long sum25 = 0;\n    long long sum26 = 0;\n    long long sum27\
    \ = 0;\n    long long sum28 = 0;\n    long long sum29 = 0;\n    long long sum30\
    \ = 0;\n    long long sum31 = 0;\n    long long sum32 = 0;\n    long long sum33\
    \ = 0;\n    long long sum34 = 0;\n    long long sum35 = 0;\n    long long sum36\
    \ = 0;\n    long long sum37 = 0;\n    long long sum38 = 0;\n    long long sum39\
    \ = 0;\n    long long sum40 = 0;\n    long long sum41 = 0;\n    long long sum42\
    \ = 0;\n    long long sum43 = 0;\n    long long sum44 = 0;\n    long long sum45\
    \ = 0;\n    long long sum46 = 0;\n    long long sum47 = 0;\n    long long sum48\
    \ = 0;\n    long long sum49 = 0;\n    long long sum50 = 0;\n    long long sum51\
    \ = 0;\n    long long sum52 = 0;\n    long long sum53 = 0;\n    long long sum54\
    \ = 0;\n    long long sum55 = 0;\n    long long sum56 = 0;\n    long long sum57\
    \ = 0;\n    long long sum58 = 0;\n    long long sum59 = 0;\n    long long sum60\
    \ = 0;\n    long long sum61 = 0;\n    long long sum62 = 0;\n    long long sum63\
    \ = 0;\n    long long sum64 = 0;\n    long long sum65 = 0;\n    long long sum66\
    \ = 0;\n    long long sum67 = 0;\n    long long sum68", "    long ans = 0;\n \
    \   long n = grid.size();\n    long m = grid[0].size();\n    long long ans_temp\
    \ = 0;\n    long long ans_temp_temp = 0;\n    long long ans_temp_temp_temp = 0;\n\
    \    long long ans_temp_temp_temp_temp = 0;\n    long long ans_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp = 0;\n    long\
    \ long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_",
  "    // write your code here\n    long ans = 0;\n    long n = grid.size();\n   \
    \ long m = grid[0].size();\n    long long ans = 0;\n    for(long i = 0; i < n;\
    \ i++) {\n        for(long j = 0; j < m; j++) {\n            long count = 0;\n\
    \            for(long k = 0; k < n; k++) {\n                if(grid[i][k] == 1)\
    \ {\n                    count += grid[k][j];\n                }\n           \
    \ }\n            ans = max(ans, count);\n        }\n    }\n    return ans;", " \
    \   // Write your code here\n    long ans = 0;\n    long n = grid.size();\n  \
    \  long m = grid[0].size();\n    long count = 0;\n    long cur = 0;\n    long\
    \ ans = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = 0; j < m;\
    \ j++) {\n            if(grid[i][j] == 1) {\n                cur++;\n        \
    \        count += cur;\n                if(count > capacity) {\n             \
    \       ans += (count - capacity);\n                    count = 0;\n         \
    \       }\n            }\n        }\n    }\n    return ans;", "    long ans =\
    \ 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long long an\
    \ = 0;\n    long long sum = 0;\n    long long sum2 = 0;\n    long long sum3 =\
    \ 0;\n    long long sum4 = 0;\n    long long sum5 = 0;\n    long long sum6 = 0;\n\
    \    long long sum7 = 0;\n    long long sum8 = 0;\n    long long sum9 = 0;\n \
    \   long long sum10 = 0;\n    long long sum11 = 0;\n    long long sum12 = 0;\n\
    \    long long sum13 = 0;\n    long long sum14 = 0;\n    long long sum15 = 0;\n\
    \    long long sum16 = 0;\n    long long sum17 = 0;\n    long long sum18 = 0;\n\
    \    long long sum19 = 0;\n    long long sum20 = 0;\n    long long sum21 = 0;\n\
    \    long long sum22 = 0;\n    long long sum23 = 0;\n    long long sum24 = 0;\n\
    \    long long sum25 = 0;\n    long long sum26 = 0;\n    long long sum27 = 0;\n\
    \    long long sum28 = 0;\n    long long sum29 = 0;\n    long long sum30 = 0;\n\
    \    long long sum31 = 0;\n    long long sum32 = 0;\n    long long sum33 = 0;\n\
    \    long long sum34 = 0;\n    long long sum35 = 0;\n    long long sum36 = 0;\n\
    \    long long sum37 = 0;\n    long long sum38 = 0;\n    long long sum39 = 0;\n\
    \    long long sum40 = 0;\n    long long sum41 = 0;\n    long long sum42 = 0;\n\
    \    long long sum43 = 0;\n    long long sum44 = 0;\n    long long sum45 = 0;\n\
    \    long long sum46 = 0;\n    long long sum47 = 0;\n    long long sum48 = 0;\n\
    \    long long sum49 = 0;\n    long long sum50 = 0;\n    long long sum51 = 0;\n\
    \    long long sum52 = 0;\n    long long sum53 = 0;\n    long long sum54 = 0;\n\
    \    long long sum55 = 0;\n    long long sum56 = 0;\n    long long sum57 = 0;\n\
    \    long long sum58 = 0;\n    long long sum59 = 0;\n    long long sum60 = 0;\n\
    \    long long sum61 = 0;\n    long long sum62 = 0;\n    long long sum63 = 0;\n\
    \    long long sum64 = 0;\n    long long sum65 = 0;\n    long long sum66 = 0;\n\
    \    long long sum67 = 0;\n    long long sum68 = 0;\n    long long sum69 = 0;\n\
    \    long long sum70 = 0;\n    ", "    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long cnt = 0;\n    long curr = 1;\n    long\
    \ curr_cap = capacity;\n    long min_cap = curr_cap;\n    long max_cap = curr_cap;\n\
    \    long min_cap_curr = min_cap;\n    long max_cap_curr = max_cap;\n    long\
    \ min_cap_curr_curr = min_cap_curr;\n    long max_cap_curr_curr = max_cap_curr;\n\
    \    long min_cap_curr_min_cap_curr = min_cap_curr;\n    long max_cap_curr_min_cap_curr\
    \ = max_cap_curr;\n    long min_cap_curr_max_cap_curr = min_cap_curr;\n    long\
    \ max_cap_curr_max_cap_curr = max_cap_curr;\n    long min_cap_curr_min_cap_min_cap_curr\
    \ = min_cap_curr;\n    long max_cap_curr_min_cap_min_cap_curr = max_cap_curr;\n\
    \    long min_cap_curr_max_cap_min_cap_curr = min_cap_curr;\n    long max_cap_curr_max_cap_min_cap_curr\
    \ = max_cap_curr;\n    long min_cap_curr_min_cap_max_cap_curr = min_cap_curr;\n\
    \    long max_cap_curr_min_cap_max_cap_curr = max_cap_curr;\n    long min_cap_curr_max_cap_max_cap_curr\
    \ = min_cap_curr;\n    long max_cap_curr_max_cap_max_cap_curr = max_cap_curr;\n\
    \    long min_cap_curr_min_cap_min_cap_min_cap_curr = min_cap_curr;\n    long\
    \ max_cap_curr_min_cap_min_cap_min_cap_curr = max_cap_curr;\n    long min_cap_curr_max_cap_min_cap_min_cap_curr\
    \ = min_cap_curr;\n    long max_cap_curr_max_cap_min_cap_min_cap_curr = max_cap_curr;\n\
    \    long min_cap_curr_min_cap_max_cap_min_cap_curr = min_cap_curr;\n    long\
    \ max_cap_curr_min_cap_max_cap_min_cap_curr = max_cap_curr;\n    long min_cap_curr_max_cap_max_cap_min_cap_curr\
    \ = min_", "    // Write your code here\n    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long long ans = 0;\n    for(long i = 0; i <\
    \ n; i++) {\n        for(long j = 0; j < m; j++) {\n            long count = 0;\n\
    \            for(long k = 0; k < i; k++) {\n                if(grid[i][k] == 1)\
    \ {\n                    count += 1;\n                }\n            }\n     \
    \       for(long k = 0; k < j; k++) {\n                if(grid[k][j] == 1) {\n\
    \                    count += 1;\n                }\n            }\n         \
    \   if(count == 0) {\n                ans += 1;\n            }\n        }\n  \
    \  }\n    return ans;", "    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long long ans = std::numeric_limits<long long>::max();\n\
    \    long long ans2 = 0;\n    long long ans3 = std::numeric_limits<long long>::max();\n\
    \    long long ans4 = 0;\n    long long ans5 = 0;\n    long long ans6 = 0;\n \
    \   long long ans7 = 0;\n    long long ans8 = 0;\n    long long ans9 = 0;\n  \
    \  long long ans10 = 0;\n    long long ans11 = 0;\n    long long ans12 = 0;\n\
    \    long long ans13 = 0;\n    long long ans14 = 0;\n    long long ans15 = 0;\n\
    \    long long ans16 = 0;\n    long long ans17 = 0;\n    long long ans18 = 0;\n\
    \    long long ans19 = 0;\n    long long ans20 = 0;\n    long long ans21 = 0;\n\
    \    long long ans22 = 0;\n    long long ans23 = 0;\n    long long ans24 = 0;\n\
    \    long long ans25 = 0;\n    long long ans26 = 0;\n    long long ans27 = 0;\n\
    \    long long ans28 = 0;\n    long long ans29 = 0;\n    long long ans30 = 0;\n\
    \    long long ans31 = 0;\n    long long ans32 = 0;\n    long long ans33 = 0;\n\
    \    long long ans34 = 0;\n    long long ans35 = 0;\n    long long ans36 = 0;\n\
    \    long long ans37 = 0;\n    long long ans38 = 0;\n    long long ans39 = 0;\n\
    \    long long ans40 = 0;\n    long long ans41 = 1;\n    long long ans42 = 1;\n\
    \    long long ans43 = 1;\n    long long ans44 = 1;\n    long long ans45 = 1;\n\
    \    long long ans46 = 1;\n    long long ans47 = 1;\n    long long ans48 = 1;\n\
    \    long long ans49 = 1;\n    long long ans50 = 1;\n    long long ans51 = 1;\n\
    \    long long ans52 = 1;\n    long long ans53 = 1;\n    long long ans54 = 1;\n\
    \    long long ans55 = 1;\n    long long ans56 = 1;\n    long long ans57 = 1;\n\
    \    long long ans58 = 1;\n    long long ans59 = 1;\n    long long ans60 = 1;\n\
    \    long long ans61 = 1;\n    long long ans62 = 1;\n    long long ans63 = 1;\n\
    \    long long ans64 = 1;\n    long long ans65 = 1;\n    long long ans66 = 1;\n\
    \    long long ans67 = 1;\n    long long ans68 = 1;", "    long ans = 0;\n   \
    \ long n = grid.size();\n    long m = grid[0].size();\n    long long an = 0;\n\
    \    long long an2 = 0;\n    long long an3 = 0;\n    long long an4 = 0;\n    long\
    \ long an5 = 0;\n    long long an6 = 0;\n    long long an7 = 0;\n    long long\
    \ an8 = 0;\n    long long an9 = 0;\n    long long an10 = 0;\n    long long an11\
    \ = 0;\n    long long an12 = 0;\n    long long an13 = 0;\n    long long an14 =\
    \ 0;\n    long long an15 = 0;\n    long long an16 = 0;\n    long long an17 = 0;\n\
    \    long long an18 = 0;\n    long long an19 = 0;\n    long long an20 = 0;\n \
    \   long long an21 = 0;\n    long long an22 = 0;\n    long long an23 = 0;\n  \
    \  long long an24 = 0;\n    long long an25 = 0;\n    long long an26 = 0;\n   \
    \ long long an27 = 0;\n    long long an28 = 0;\n    long long an29 = 0;\n    long\
    \ long an30 = 0;\n    long long an31 = 0;\n    long long an32 = 0;\n    long long\
    \ an33 = 0;\n    long long an34 = 0;\n    long long an35 = 0;\n    long long an36\
    \ = 0;\n    long long an37 = 0;\n    long long an38 = 0;\n    long long an39 =\
    \ 0;\n    long long an40 = 0;\n    long long an41 = 0;\n    long long an42 = 0;\n\
    \    long long an43 = 0;\n    long long an44 = 0;\n    long long an45 = 0;\n \
    \   long long an46 = 0;\n    long long an47 = 0;\n    long long an48 = 0;\n  \
    \  long long an49 = 0;\n    long long an50 = 0;\n    long long an51 = 0;\n   \
    \ long long an52 = 0;\n    long long an53 = 0;\n    long long an54 = 0;\n    long\
    \ long an55 = 0;\n    long long an56 = 0;\n    long long an57 = 0;\n    long long\
    \ an58 = 0;\n    long long an59 = 0;\n    long long an60 = 0;\n    long long an61\
    \ = 0;\n    long long an62 = 0;\n    long long an63 = 0;\n    long long an64 =\
    \ 0;\n    long long an65 = 0;\n    long long an66 = 0;\n    long long an67 = 0;\n\
    \    long long an68 = 0;\n    long long an69 = 0;\n    long long an70 = 0;\n \
    \   long long an71 = 0;\n", "    // write your code here\n    long ans = 0;\n\
    \    long n = grid.size();\n    long m = grid[0].size();\n    long ans = std::numeric_limits<long>::max();\n\
    \    for(long i = 0; i < n; i++) {\n        for(long j = 0; j < m; j++) {\n  \
    \          if(grid[i][j] == 1) {\n                long count = 0;\n          \
    \      for(long k = 0; k < i; k++) {\n                    for(long l = 0; l <\
    \ j; l++) {\n                        if(grid[k][l] == 1) {\n                 \
    \           count++;\n                        }\n                    }\n     \
    \           }\n                if(count > ans) {\n                    ans = count;\n\
    \                }\n            }\n        }\n    }\n    return ans;", "    long\
    \ ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long\
    \ long an = n;\n    long long bn = m;\n    long long cn = capacity;\n    long\
    \ long ans = an;\n    long long bn = bn;\n    long long cn = cn;\n    long long\
    \ an = n;\n    long long bn = m;\n    long long cn = capacity;\n    long long\
    \ ans = an;\n    long long bn = bn;\n    long long cn = cn;\n    long long an\
    \ = n;\n    long long bn = m;\n    long long cn = capacity;\n    long long ans\
    \ = an;\n    long long bn = bn;\n    long long cn = cn;\n    long long an = n;\n\
    \    long long bn = m;\n    long long cn = capacity;\n    long long ans = an;\n\
    \    long long bn = bn;\n    long long cn = cn;\n    long long an = n;\n    long\
    \ long bn = m;\n    long long cn = capacity;\n    long long ans = an;\n    long\
    \ long bn = bn;\n    long long cn = cn;\n    long long an = n;\n    long long\
    \ bn = m;\n    long long cn = capacity;\n    long long ans = an;\n    long long\
    \ bn = bn;\n    long long cn = cn;\n    long long an = n;\n    long long bn =\
    \ m;\n    long long cn = capacity;\n    long long ans = an;\n    long long bn\
    \ = bn;\n    long long cn = cn;\n    long long an = n;\n    long long bn = m;\n\
    \    long long cn = capacity;\n    long long ans = an;\n    long long bn = bn;\n\
    \    long long cn = cn;\n    long long an = n;\n    long long bn = m;\n    long\
    \ long cn = capacity;\n    long long ans = an;\n    long long bn = bn;\n    long\
    \ long cn = cn;\n    long long an = n;\n    long long bn = m;\n    long long cn\
    \ = capacity;\n    long long ans = an;\n    long long bn = bn;\n    long long\
    \ cn = cn;\n    long long an = n;\n    long long bn = m;\n    long long cn = capacity;\n\
    \    long long ans = an;\n    long ", "    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long long an = n * m;\n    long long sum =\
    \ 0;\n    long long cur = 0;\n    long long cur2 = 0;\n    long long cur3 = 0;\n\
    \    long long cur4 = 0;\n    long long cur5 = 0;\n    long long cur6 = 0;\n \
    \   long long cur7 = 0;\n    long long cur8 = 0;\n    long long cur9 = 0;\n  \
    \  long long cur10 = 0;\n    long long cur11 = 0;\n    long long cur12 = 0;\n\
    \    long long cur13 = 0;\n    long long cur14 = 0;\n    long long cur15 = 0;\n\
    \    long long cur16 = 0;\n    long long cur17 = 0;\n    long long cur18 = 0;\n\
    \    long long cur19 = 0;\n    long long cur20 = 0;\n    long long cur21 = 0;\n\
    \    long long cur22 = 0;\n    long long cur23 = 0;\n    long long cur24 = 0;\n\
    \    long long cur25 = 0;\n    long long cur26 = 0;\n    long long cur27 = 0;\n\
    \    long long cur28 = 0;\n    long long cur29 = 0;\n    long long cur30 = 0;\n\
    \    long long cur31 = 0;\n    long long cur32 = 0;\n    long long cur33 = 0;\n\
    \    long long cur34 = 0;\n    long long cur35 = 0;\n    long long cur36 = 0;\n\
    \    long long cur37 = 0;\n    long long cur38 = 0;\n    long long cur39 = 0;\n\
    \    long long cur40 = 0;\n    long long cur41 = 0;\n    long long cur42 = 0;\n\
    \    long long cur43 = 0;\n    long long cur44 = 0;\n    long long cur45 = 0;\n\
    \    long long cur46 = 0;\n    long long cur47 = 0;\n    long long cur48 = 0;\n\
    \    long long cur49 = 0;\n    long long cur50 = 0;\n    long long cur51 = 0;\n\
    \    long long cur52 = 0;\n    long long cur53 = 0;\n    long long cur54 = 0;\n\
    \    long long cur55 = 0;\n    long long cur56 = 0;\n    long long cur57 = 0;\n\
    \    long long cur58 = 0;\n    long long cur59 = 0;\n    long long cur60 = 0;\n\
    \    long long cur61 = 0;\n    long long cur62 = 0;\n    long long cur63 = 0;\n\
    \    long long cur64 = 0;\n    long long cur65 = 0;\n    long long cur66 = 0;\n\
    \    long long cur67 = 0;\n    long long cur68 = 0;\n    long long cur69 = 0;\n",
  "    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n  \
    \  long long an = n;\n    long long bn = m;\n    long long cn = n;\n    long long\
    \ cnm = n;\n    long long cnn = n;\n    long long cnn = n;\n    long long cnn\
    \ = n;\n    long long cnn = n;\n    long long cnn = n;\n    long long cnn = n;\n\
    \    long long cnn = n;\n    long long cnn = n;\n    long long cnn = n;\n    long\
    \ long cnn = n;\n    long long cnn = n;\n    long long cnn = n;\n    long long\
    \ cnn = n;\n    long long cnn = n;\n    long long cnn = n;\n    long long cnn\
    \ = n;\n    long long cnn = n;\n    long long cnn = n;\n    long long cnn = n;\n\
    \    long long cnn = n;\n    long long cnn = n;\n    long long cnn = n;\n    long\
    \ long cnn = n;\n    long long cnn = n;\n    long long cnn = n;\n    long long\
    \ cnn = n;\n    long long cnn = n;\n    long long cnn = n;\n    long long cnn\
    \ = n;\n    long long cnn = n;\n    long long cnn = n;\n    long long cnn = n;\n\
    \    long long cnn = n;\n    long long cnn = n;\n    long long cnn = n;\n    long\
    \ long cnn = n;\n    long long cnn = n;\n    long long cnn = n;\n    long long\
    \ cnn = n;\n    long long cnn = n;\n    long long cnn = n;\n    long long cnn\
    \ = n;\n    long long cnn = n;\n    long long cnn = n;\n    long long cnn = n;\n\
    \    long long cnn = n;\n    long long cnn = n;\n    long long cnn = n;\n    long\
    \ long cnn = n;\n    long long cnn = n;\n    long long cnn = n;\n    long long\
    \ cnn = n;\n    long long cnn = n;\n    long long cnn = n;\n    long long cnn\
    \ = n;\n    long long cnn = n;\n    long long cnn = n;\n    long long cnn = n;\n\
    \    long long cnn = n;\n    long long cnn = n;\n    long long cnn = n;\n    long\
    \ long cnn = n;\n    long long cnn = n;\n    long long cnn = n;\n    long long\
    \ cnn = n;\n    long long cnn = n;\n    long ", "    // write your code here\n\
    \    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long long an = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j\
    \ = 0; j < m; j++) {\n            if(grid[i][j] == 1) {\n                an++;\n\
    \            }\n        }\n    }\n    an = an * capacity / n;\n    ans = an;\n\
    \    return ans;", "    // write your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long ans = std::numeric_limits<long>::max();\n\
    \    for(long i = 0; i < n; i++) {\n        for(long j = 0; j < m; j++) {\n  \
    \          if(grid[i][j] == 1) {\n                long count = 0;\n          \
    \      for(long k = 0; k < i; k++) {\n                    if(grid[k][j] == 1)\
    \ {\n                        count++;\n                    }\n               \
    \ }\n                for(long k = i; k < n; k++) {\n                    if(grid[k][j]\
    \ == 1) {\n                        count++;\n                    }\n         \
    \       }\n                for(long k = i; k < n; k++) {\n                   \
    \ if(grid[k][j] == 1) {\n                        count++;\n                  \
    \  }\n                }\n                for(long k = i; k < n; k++) {\n     \
    \               if(grid[k][j] == 1) {\n                        count++;\n    \
    \                }\n                }\n                for(long k = i; k < n;\
    \ k++) {\n                    if(grid[k][j] == 1) {\n                        count++;\n\
    \                    }\n                }\n                for(long k = i; k <\
    \ n; k++) {\n                    if(grid[k][j] == 1) {\n                     \
    \   count++;\n                    }\n                }\n                for(long\
    \ k = i; k < n; k++) {\n                    if(grid[k][j] == 1) {\n          \
    \              count++;\n                    }\n                }\n          \
    \      for(long k = i; k < n; k++) {\n                    if(grid[k][j] == 1)\
    \ {\n                        count++;\n                    }\n               \
    \ }\n                for(long k = i; k < n; k++) {\n                    if(grid[k][j]\
    \ == 1) {\n                        count++;\n                    }\n         \
    \       }\n                for(long k = i; k < n; k++) {\n                   \
    \ if(grid[k][j] == 1) {\n                        count++;\n                  \
    \  }\n                }\n                for(long k = i; k < n; k++) {\n     \
    \               if(grid[k][j] == 1) {\n                        count++;\n    \
    \                }\n                }\n                for(long k = i; k < n;\
    \ k++) {\n                    if(grid[k][j] == 1) {\n                        count++;\n\
    \                    }\n                }\n                for(long k = i; k <\
    \ n; k++) {\n                    if(grid[k][j] == 1) {\n                     \
    \   count++;\n                    }\n                }\n                for(long\
    \ k = i; k < n; k++) {\n                    if(grid[k][j] == 1) {\n          \
    \              count++;\n                    }\n                }\n          \
    \      for(long k = i; k < n; k++) {\n                    if(grid[k][j] == 1)\
    \ {\n                        count++;\n                    }\n               \
    \ }\n                for(long k = i; k < n; k++) {\n                    if(grid[k",
  "    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n  \
    \  long long an = 0;\n    long long cnt = 0;\n    for(long i = 0; i < n; i++)\
    \ {\n        for(long j = 0; j < m; j++) {\n            if(grid[i][j] == 1) {\n\
    \                cnt += 1;\n                an = an+cnt;\n            }\n    \
    \    }\n    }\n    ans = an;\n    ans = ans/capacity;\n    return ans;", "   \
    \ long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n   \
    \ long count = 0;\n    long long ans1 = 0;\n    long long ans2 = 0;\n    long\
    \ long ans3 = 0;\n    long long ans4 = 0;\n    long long ans5 = 0;\n    long long\
    \ ans6 = 0;\n    long long ans7 = 0;\n    long long ans8 = 0;\n    long long ans9\
    \ = 0;\n    long long ans10 = 0;\n    long long ans11 = 0;\n    long long ans12\
    \ = 0;\n    long long ans13 = 0;\n    long long ans14 = 0;\n    long long ans15\
    \ = 0;\n    long long ans16 = 0;\n    long long ans17 = 0;\n    long long ans18\
    \ = 0;\n    long long ans19 = 0;\n    long long ans20 = 0;\n    long long ans21\
    \ = 0;\n    long long ans22 = 0;\n    long long ans23 = 0;\n    long long ans24\
    \ = 0;\n    long long ans25 = 0;\n    long long ans26 = 0;\n    long long ans27\
    \ = 0;\n    long long ans28 = 0;\n    long long ans29 = 0;\n    long long ans30\
    \ = 0;\n    long long ans31 = 0;\n    long long ans32 = 0;\n    long long ans33\
    \ = 0;\n    long long ans34 = 0;\n    long long ans35 = 0;\n    long long ans36\
    \ = 0;\n    long long ans37 = 0;\n    long long ans38 = 0;\n    long long ans39\
    \ = 0;\n    long long ans40 = 0;\n    long long ans31 = 0;\n    long long ans32\
    \ = 0;\n    long long ans33 = 0;\n    long long ans34 = 0;\n    long long ans35\
    \ = 0;\n    long long ans36 = 0;\n    long long ans37 = 0;\n    long long ans38\
    \ = 0;\n    long long ans39 = 0;\n    long long ans40 = 0;\n    long long ans31\
    \ = 0;\n    long long ans32 = 0;\n    long long ans33 = 0;\n    long long ans34\
    \ = 0;\n    long long ans35 = 0;\n    long long ans36 = 0;\n    long long ans37\
    \ = 0;\n    long long ans38 = 0;\n    long long ans39 = 0;\n    long long ans40\
    \ = 0;\n    long long ans31 = 0;\n    long long ans32 = 0;\n    long long ans33\
    \ = 0;\n    long long ans34 = 0;\n    long long ans35 = 0;\n    long long ans36\
    \ = 0;\n    long long ans37 = 0;\n    long long ans38 = 0;\n    long long ans39\
    \ = 0;\n    long long ans40 = 0;\n", "    // write your code here\n    long ans\
    \ = 0;\n    long long ans1 = 0;\n    long long ans2 = 0;\n    long long ans3 =\
    \ 0;\n    long long ans4 = 0;\n    long long ans5 = 0;\n    long long ans6 = 0;\n\
    \    long long ans7 = 0;\n    long long ans8 = 0;\n    long long ans9 = 0;\n \
    \   long long ans10 = 0;\n    long long ans11 = 0;\n    long long ans12 = 0;\n\
    \    long long ans13 = 0;\n    long long ans14 = 0;\n    long long ans15 = 0;\n\
    \    long long ans16 = 0;\n    long long ans17 = 0;\n    long long ans18 = 0;\n\
    \    long long ans19 = 0;\n    long long ans20 = 0;\n    long long ansp = 0;\n\
    \    long long ansp1 = 0;\n    long long ansp2 = 0;\n    long long ansp3 = 0;\n\
    \    long long ansp4 = 0;\n    long long ansp5 = 0;\n    long long ansp6 = 0;\n\
    \    long long ansp7 = 0;\n    long long ansp8 = 0;\n    long long ansp9 = 0;\n\
    \    long long ansp10 = 0;\n    long long ansp11 = 0;\n    long long ansp12 =\
    \ 0;\n    long long ansp13 = 0;\n    long long ansp14 = 0;\n    long long ansp15\
    \ = 0;\n    long long ansp16 = 0;\n    long long ansp17 = 0;\n    long long ansp18\
    \ = 0;\n    long long ansp19 = 0;\n    long long ansp20 = 0;\n    long long ansp21\
    \ = 0;\n    long long ansp22 = 0;\n    long long ansp23 = 0;\n    long long ansp24\
    \ = 0;\n    long long ansp25 = 0;\n    long long ansp26 = 0;\n    long long ansp27\
    \ = 0;\n    long long ansp28 = 0;\n    long long ansp29 = 0;\n    long long ansp30\
    \ = 0;\n    long long ansp31 = 0;\n    long long ansp32 = 0;\n    long long ansp33\
    \ = 0;\n    long long ansp34 = 0;\n    long long ansp35 = 0;\n    long long ansp36\
    \ = 0;\n    long long ansp37 = 0;\n    long long ansp38 = 0;\n    long long ansp39\
    \ = 0;\n    long long ansp40 = 0;\n    long long ansp41 = 0;\n    long long ansp42\
    \ = 0;\n    long long ansp43 = 0;\n    long long ansp44 = 0;\n    long long ansp45\
    \ = 0;\n    long ", "    // Your code here\n    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long count = 0;\n    long ans = std::numeric_limits<long>::max();\n\
    \    for(long i = 0; i < n; i++) {\n        for(long j = 0; j < m; j++) {\n  \
    \          long count = 0;\n            for(long k = 0; k < n; k++) {\n      \
    \          for(long l = 0; l < m; l++) {\n                    if(grid[i][k] ==\
    \ 1 && grid[k][j] == 1) {\n                        count++;\n                \
    \    }\n                }\n            }\n            if(count > capacity) {\n\
    \                ans = std::min(ans, count);\n            }\n        }\n    }\n\
    \    return ans;", "    long ans = 0;\n    long n = grid.size();\n    long m =\
    \ grid[0].size();\n    long long ans_temp = 0;\n    long long temp_ans = 0;\n\
    \    long long temp_ans_temp = 0;\n    long long temp_ans_temp2 = 0;\n    long\
    \ long temp_ans_temp3 = 0;\n    long long temp_ans_temp4 = 0;\n    long long temp_ans_temp5\
    \ = 0;\n    long long temp_ans_temp6 = 0;\n    long long temp_ans_temp7 = 0;\n\
    \    long long temp_ans_temp8 = 0;\n    long long temp_ans_temp9 = 0;\n    long\
    \ long temp_ans_temp10 = 0;\n    long long temp_ans_temp11 = 0;\n    long long\
    \ temp_ans_temp12 = 0;\n    long long temp_ans_temp13 = 0;\n    long long temp_ans_temp14\
    \ = 0;\n    long long temp_ans_temp15 = 0;\n    long long temp_ans_temp16 = 0;\n\
    \    long long temp_ans_temp17 = 0;\n    long long temp_ans_temp18 = 0;\n    long\
    \ long temp_ans_temp19 = 0;\n    long long temp_ans_temp20 = 0;\n    long long\
    \ temp_ans_temp21 = 0;\n    long long temp_ans_temp22 = 0;\n    long long temp_ans_temp23\
    \ = 0;\n    long long temp_ans_temp24 = 0;\n    long long temp_ans_temp25 = 0;\n\
    \    long long temp_ans_temp26 = 0;\n    long long temp_ans_temp27 = 0;\n    long\
    \ long temp_ans_temp28 = 0;\n    long long temp_ans_temp29 = 0;\n    long long\
    \ temp_ans_temp30 = 0;\n    long long temp_ans_temp31 = 0;\n    long long temp_ans_temp32\
    \ = 0;\n    long long temp_ans_temp33 = 0;\n    long long temp_ans_temp34 = 0;\n\
    \    long long temp_ans_temp35 = 0;\n    long long temp_ans_temp36 = 0;\n    long\
    \ long temp_ans_temp37 = 0;\n    long long temp_ans_temp38 = 0;\n    long long\
    \ temp_ans_temp39 = 0;\n    long long temp_ans_temp40 = 0;\n    long long temp_ans_temp41\
    \ = 0;\n    long long temp_ans_temp42 = 0;\n    long long temp_ans_temp43 = 0;\n\
    \    long long temp_ans_temp44 = 0;\n    long long temp_ans_temp45 = 0;\n    long\
    \ long temp_ans_temp46 = 0;\n    long long temp_ans_temp47 = 0;\n    long long\
    \ temp_ans_temp48 = 0;\n    long ", "    // write your code here\n    long ans\
    \ = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long count\
    \ = 0;\n    long cur = 0;\n    long long ans = 0;\n    for(long i = 0; i < n;\
    \ i++) {\n        for(long j = 0; j < m; j++) {\n            if(grid[i][j] ==\
    \ 1) {\n                cur++;\n                if(cur > capacity) {\n       \
    \             ans += 1;\n                    count = 0;\n                    cur\
    \ = 0;\n                }\n                else {\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return ans;", "    long\
    \ ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long\
    \ count = 0;\n    long long ans1 = 0;\n    long long ans2 = 0;\n    long long\
    \ ans3 = 0;\n    long long ans4 = 0;\n    long long ans5 = 0;\n    long long ans6\
    \ = 0;\n    long long ans7 = 0;\n    long long ans8 = 0;\n    long long ans9 =\
    \ 0;\n    long long ans10 = 0;\n    long long ans11 = 0;\n    long long ans12\
    \ = 0;\n    long long ans13 = 0;\n    long long ans14 = 0;\n    long long ans15\
    \ = 0;\n    long long ans16 = 0;\n    long long ans17 = 0;\n    long long ans18\
    \ = 0;\n    long long ans19 = 0;\n    long long ans20 = 0;\n    long long ansp1\
    \ = 0;\n    long long ansp2 = 0;\n    long long ansp3 = 0;\n    long long ansp4\
    \ = 0;\n    long long ansp5 = 0;\n    long long ansp6 = 0;\n    long long ansp7\
    \ = 0;\n    long long ansp8 = 0;\n    long long ansp9 = 0;\n    long long ansp10\
    \ = 0;\n    long long ansp11 = 0;\n    long long ansp12 = 0;\n    long long ansp13\
    \ = 0;\n    long long ansp14 = 0;\n    long long ansp15 = 0;\n    long long ansp16\
    \ = 0;\n    long long ansp17 = 0;\n    long long ansp18 = 0;\n    long long ansp19\
    \ = 0;\n    long long ansp20 = 0;\n    long long ansp21 = 0;\n    long long ansp22\
    \ = 0;\n    long long ansp23 = 0;\n    long long ansp24 = 0;\n    long long ansp25\
    \ = 0;\n    long long ansp26 = 0;\n    long long ansp27 = 0;\n    long long ansp28\
    \ = 0;\n    long long ansp29 = 0;\n    long long ansp30 = 0;\n    long long ansp31\
    \ = 0;\n    long long ansp32 = 0;\n    long long ansp33 = 0;\n    long long ansp34\
    \ = 0;\n    long long ansp35 = 0;\n    long long ansp36 = 0;\n    long long ansp37\
    \ = 0;\n    long long ansp38 = 0;\n    long long ansp39 = 0;\n    long long ansp40\
    \ = 0;\n    long long ansp41 = 0;\n    long long ansp42 = 0;\n    long long ansp43\
    \ = 0;\n    long long ansp44 = 0;\n    long ", "    // write your code here\n\
    \    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long long ans = 0;\n    long long ans2 = 0;\n    long long ans3 = 0;\n  \
    \  long long ans4 = 0;\n    long long ans5 = 0;\n    long long ans6 = 0;\n   \
    \ long long ans7 = 0;\n    long long ans8 = 0;\n    long long ans9 = 0;\n    long\
    \ long ans10 = 0;\n    long long ans11 = 0;\n    long long ans12 = 0;\n    long\
    \ long ans13 = 0;\n    long long ans14 = 0;\n    long long ans15 = 0;\n    long\
    \ long ans16 = 0;\n    long long ans17 = 0;\n    long long ans18 = 0;\n    long\
    \ long ans19 = 0;\n    long long ans20 = 0;\n    long long ansp = 0;\n    long\
    \ long ansp2 = 0;\n    long long ansp3 = 0;\n    long long ansp4 = 0;\n    long\
    \ long ansp5 = 0;\n    long long ansp6 = 0;\n    long long ansp7 = 0;\n    long\
    \ long ansp8 = 0;\n    long long ansp9 = 0;\n    long long ansp10 = 0;\n    long\
    \ long ansp11 = 0;\n    long long ansp12 = 0;\n    long long ansp13 = 0;\n   \
    \ long long ansp14 = 0;\n    long long ansp15 = 0;\n    long long ansp16 = 0;\n\
    \    long long ansp17 = 0;\n    long long ansp18 = 0;\n    long long ansp19 =\
    \ 0;\n    long long ansp20 = 0;\n    long long ansp21 = 0;\n    long long ansp22\
    \ = 0;\n    long long ansp23 = 0;\n    long long ansp24 = 0;\n    long long ansp25\
    \ = 0;\n    long long ansp26 = 0;\n    long long ansp27 = 0;\n    long long ansp28\
    \ = 0;\n    long long ansp29 = 0;\n    long long ansp30 = 0;\n    long long ansp31\
    \ = 0;\n    long long ansp32 = 0;\n    long long ansp33 = 0;\n    long long ansp34\
    \ = 0;\n    long long ansp35 = 0;\n    long long ansp36 = 0;\n    long long ansp37\
    \ = 0;\n    long long ansp38 = 0;\n    long long ansp39 = 0;\n    long long ansp40\
    \ = 0;\n    long long ansp41 = 0;\n    long long ansp42 = 0;\n    long long ansp43\
    \ = 0;\n    long long ansp44 = 0;\n    long long ", "    long ans = 0;\n    long\
    \ n = grid.size();\n    long m = grid[0].size();\n    long count = 0;\n    long\
    \ long ans = 0;\n    long long max = 0;\n    long long min = 0;\n    long long\
    \ sum = 0;\n    long long temp = 0;\n    long long ans2 = 0;\n    long long temp2\
    \ = 0;\n    long long temp3 = 0;\n    long long temp4 = 0;\n    long long temp5\
    \ = 0;\n    long long temp6 = 0;\n    long long temp7 = 0;\n    long long temp8\
    \ = 0;\n    long long temp9 = 0;\n    long long temp10 = 0;\n    long long temp11\
    \ = 0;\n    long long temp12 = 0;\n    long long temp13 = 0;\n    long long temp14\
    \ = 0;\n    long long temp15 = 0;\n    long long temp16 = 0;\n    long long temp17\
    \ = 0;\n    long long temp18 = 0;\n    long long temp19 = 0;\n    long long temp20\
    \ = 0;\n    long long temp21 = 0;\n    long long temp22 = 0;\n    long long temp23\
    \ = 0;\n    long long temp24 = 0;\n    long long temp25 = 0;\n    long long temp26\
    \ = 0;\n    long long temp27 = 0;\n    long long temp28 = 0;\n    long long temp29\
    \ = 0;\n    long long temp30 = 0;\n    long long temp31 = 0;\n    long long temp32\
    \ = 0;\n    long long temp33 = 0;\n    long long temp34 = 0;\n    long long temp35\
    \ = 0;\n    long long temp36 = 0;\n    long long temp37 = 0;\n    long long temp38\
    \ = 0;\n    long long temp39 = 0;\n    long long temp40 = 0;\n    long long temp41\
    \ = 0;\n    long long temp42 = 0;\n    long long temp43 = 0;\n    long long temp44\
    \ = 0;\n    long long temp45 = 0;\n    long long temp46 = 0;\n    long long temp47\
    \ = 0;\n    long long temp48 = 0;\n    long long temp49 = 0;\n    long long temp50\
    \ = 0;\n    long long temp51 = 0;\n    long long temp52 = 0;\n    long long temp53\
    \ = 0;\n    long long temp54 = 0;\n    long long temp55 = 0;\n    long long temp56\
    \ = 0;\n    long long temp57 = 0;\n    long long temp58 = 0;\n    long long temp59\
    \ = 0;\n    long long temp60 = 0;\n    long long temp61 = 0;\n    long long temp62\
    \ = 0;\n    long long temp63 = 0;\n    long long temp64 = 0;\n    long long temp65\
    \ = 0;\n    long long temp66 = 0;\n", "    // Your code here\n    long ans = 0;\n\
    \    long n = grid.size();\n    long m = grid[0].size();\n    long long ans1 =\
    \ 0;\n    long long ans2 = 0;\n    long long ans3 = 0;\n    long long ans4 = 0;\n\
    \    long long ans5 = 0;\n    long long ans6 = 0;\n    long long ans7 = 0;\n \
    \   long long ans8 = 0;\n    long long ans9 = 0;\n    long long ans10 = 0;\n \
    \   long long ans11 = 0;\n    long long ans12 = 0;\n    long long ans13 = 0;\n\
    \    long long ans14 = 0;\n    long long ans15 = 0;\n    long long ans16 = 0;\n\
    \    long long ans17 = 0;\n    long long ans18 = 0;\n    long long ans19 = 0;\n\
    \    long long ans20 = 0;\n    long long ansp = 0;\n    long long ansp1 = 0;\n\
    \    long long ansp2 = 0;\n    long long ansp3 = 0;\n    long long ansp4 = 0;\n\
    \    long long ansp5 = 0;\n    long long ansp6 = 0;\n    long long ansp7 = 0;\n\
    \    long long ansp8 = 0;\n    long long ansp9 = 0;\n    long long ansp10 = 0;\n\
    \    long long ansp11 = 0;\n    long long ansp12 = 0;\n    long long ansp13 =\
    \ 0;\n    long long ansp14 = 0;\n    long long ansp15 = 0;\n    long long ansp16\
    \ = 0;\n    long long ansp17 = 0;\n    long long ansp18 = 0;\n    long long ansp19\
    \ = 0;\n    long long ansp20 = 0;\n    long long anspp = 0;\n    long long anspp1\
    \ = 0;\n    long long anspp2 = 0;\n    long long anspp3 = 0;\n    long long anspp4\
    \ = 0;\n    long long anspp5 = 0;\n    long long anspp6 = 0;\n    long long anspp7\
    \ = 0;\n    long long anspp8 = 0;\n    long long anspp9 = 0;\n    long long anspp10\
    \ = 0;\n    long long anspp11 = 0;\n    long long anspp12 = 0;\n    long long\
    \ anspp13 = 0;\n    long long anspp14 = 0;\n    long long anspp15 = 0;\n    long\
    \ long anspp16 = 0;\n    long long anspp17 = 0;\n    long long anspp18 = 0;\n\
    \    long long anspp19 = 0;\n    long long anspp20 = 0;\n    long long an", " \
    \   // Write your code here\n    long ans = 0;\n    long n = grid.size();\n  \
    \  long m = grid[0].size();\n    long long ans_temp = 0;\n    long long temp_ans\
    \ = 0;\n    long long temp_ans_temp = 0;\n    long long temp_ans_temp_temp = 0;\n\
    \    long long temp_ans_temp_temp_temp = 0;\n    long long temp_ans_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp = 0;\n    long\
    \ long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_",
  "    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n  \
    \  long cnt = 0;\n    long long ans = INT_MAX;\n    \n    for(int i = 0; i < n;\
    \ i++) {\n        for(int j = 0; j < m; j++) {\n            long long cur = grid[i][j];\n\
    \            long long cur_cap = grid[i][j];\n            \n            while(cur_cap\
    \ > 0) {\n                cnt += 1;\n                cur_cap -= 1;\n         \
    \       \n                long long new_cap = cur_cap;\n                \n   \
    \             while(cur > 0) {\n                    if(cur > new_cap) {\n    \
    \                    new_cap = cur;\n                    }\n                 \
    \   cur -= 1;\n                }\n                \n                grid[i][j]\
    \ = new_cap;\n                \n                ans = max(ans, cnt);\n       \
    \     }\n        }\n    }\n    \n    return ans;", "    long ans = 0;\n    long\
    \ n = grid.size();\n    long m = grid[0].size();\n    long long ans_temp = 0;\n\
    \    long long temp_ans = 0;\n    long long temp_ans_temp = 0;\n    long long\
    \ temp_ans_temp_temp = 0;\n    long long temp_ans_temp_temp_temp = 0;\n    long\
    \ long temp_ans_temp_temp_temp_temp = 0;\n    long long temp_ans_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp = 0;\n    long long\
    \ temp_ans_temp_temp_temp_temp_temp_temp_temp = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp =\
    \ 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_", "    // write your\
    \ code here\n    long ans = 0;\n    long long n = grid.size();\n    long long\
    \ m = grid[0].size();\n    long long ans = 0;\n    long long count = 0;\n    long\
    \ long sum = 0;\n    long long temp = 0;\n    long long temp2 = 0;\n    long long\
    \ temp3 = 0;\n    long long temp4 = 0;\n    long long temp5 = 0;\n    long long\
    \ temp6 = 0;\n    long long temp7 = 0;\n    long long temp8 = 0;\n    long long\
    \ temp9 = 0;\n    long long temp10 = 0;\n    long long temp11 = 0;\n    long long\
    \ temp12 = 0;\n    long long temp13 = 0;\n    long long temp14 = 0;\n    long\
    \ long temp15 = 0;\n    long long temp16 = 0;\n    long long temp17 = 0;\n   \
    \ long long temp18 = 0;\n    long long temp19 = 0;\n    long long temp20 = 0;\n\
    \    long long temp21 = 0;\n    long long temp22 = 0;\n    long long temp23 =\
    \ 0;\n    long long temp24 = 0;\n    long long temp25 = 0;\n    long long temp26\
    \ = 0;\n    long long temp27 = 0;\n    long long temp28 = 0;\n    long long temp29\
    \ = 0;\n    long long temp30 = 0;\n    long long temp31 = 0;\n    long long temp32\
    \ = 0;\n    long long temp33 = 0;\n    long long temp34 = 0;\n    long long temp35\
    \ = 0;\n    long long temp36 = 0;\n    long long temp37 = 0;\n    long long temp38\
    \ = 0;\n    long long temp39 = 0;\n    long long temp40 = 0;\n    long long temp41\
    \ = 0;\n    long long temp42 = 0;\n    long long temp43 = 0;\n    long long temp44\
    \ = 0;\n    long long temp45 = 0;\n    long long temp46 = 0;\n    long long temp47\
    \ = 0;\n    long long temp48 = 0;\n    long long temp49 = 0;\n    long long temp50\
    \ = 0;\n    long long temp51 = 0;\n    long long temp52 = 0;\n    long long temp53\
    \ = 0;\n    long long temp54 = 0;\n    long long temp55 = 0;\n    long long temp56\
    \ = 0;\n    long long temp57 = 0;\n    long long temp58 = 0;\n    long long temp59\
    \ = 0;\n    long long temp60 = 0;\n    long long temp61 = 0;\n    long long temp62\
    \ = 0;\n    long long temp63 = 0;\n    long long temp64 = 0;\n    long long temp65\
    \ = 0;\n    long long temp66 = 0;\n    long long temp67 = 0;\n    long long temp",
  "    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n  \
    \  long long an = 0;\n    long long sum = 0;\n    long long cur = 0;\n    long\
    \ long cur2 = 0;\n    long long cur3 = 0;\n    long long cur4 = 0;\n    long long\
    \ cur5 = 0;\n    long long cur6 = 0;\n    long long cur7 = 0;\n    long long cur8\
    \ = 0;\n    long long cur9 = 0;\n    long long cur10 = 0;\n    long long cur11\
    \ = 0;\n    long long cur12 = 0;\n    long long cur13 = 0;\n    long long cur14\
    \ = 0;\n    long long cur15 = 0;\n    long long cur16 = 0;\n    long long cur17\
    \ = 0;\n    long long cur18 = 0;\n    long long cur19 = 0;\n    long long cur20\
    \ = 0;\n    long long cur21 = 0;\n    long long cur22 = 0;\n    long long cur23\
    \ = 0;\n    long long cur24 = 0;\n    long long cur25 = 0;\n    long long cur26\
    \ = 0;\n    long long cur27 = 0;\n    long long cur28 = 0;\n    long long cur29\
    \ = 0;\n    long long cur30 = 0;\n    long long cur31 = 0;\n    long long cur32\
    \ = 0;\n    long long cur33 = 0;\n    long long cur34 = 0;\n    long long cur35\
    \ = 0;\n    long long cur36 = 0;\n    long long cur37 = 0;\n    long long cur38\
    \ = 0;\n    long long cur39 = 0;\n    long long cur40 = 0;\n    long long cur41\
    \ = 0;\n    long long cur42 = 0;\n    long long cur43 = 0;\n    long long cur44\
    \ = 0;\n    long long cur45 = 0;\n    long long cur46 = 0;\n    long long cur47\
    \ = 0;\n    long long cur48 = 0;\n    long long cur49 = 0;\n    long long cur50\
    \ = 0;\n    long long cur51 = 0;\n    long long cur52 = 0;\n    long long cur53\
    \ = 0;\n    long long cur54 = 0;\n    long long cur55 = 0;\n    long long cur56\
    \ = 0;\n    long long cur57 = 0;\n    long long cur58 = 0;\n    long long cur59\
    \ = 0;\n    long long cur60 = 0;\n    long long cur61 = 0;\n    long long cur62\
    \ = 0;\n    long long cur63 = 0;\n    long long cur64 = 0;\n    long long cur65\
    \ = 0;\n    long long cur66 = 0;\n    long long cur67 = 0;\n    long long cur68\
    \ = 0;\n    long long cur69 = 0;\n    long ", "    // Write your code here\n \
    \   long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n \
    \   long long ans = 0;\n    long long count = 0;\n    long long sum = 0;\n   \
    \ long long sum2 = 0;\n    long long sum3 = 0;\n    long long sum4 = 0;\n    long\
    \ long sum5 = 0;\n    long long sum6 = 0;\n    long long sum7 = 0;\n    long long\
    \ sum8 = 0;\n    long long sum9 = 0;\n    long long sum10 = 0;\n    long long\
    \ sum11 = 0;\n    long long sum12 = 0;\n    long long sum13 = 0;\n    long long\
    \ sum14 = 0;\n    long long sum15 = 0;\n    long long sum16 = 0;\n    long long\
    \ sum17 = 0;\n    long long sum18 = 0;\n    long long sum19 = 0;\n    long long\
    \ sum20 = 0;\n    long long sum21 = 0;\n    long long sum22 = 0;\n    long long\
    \ sum23 = 0;\n    long long sum24 = 0;\n    long long sum25 = 0;\n    long long\
    \ sum26 = 0;\n    long long sum27 = 0;\n    long long sum28 = 0;\n    long long\
    \ sum29 = 0;\n    long long sum30 = 0;\n    long long sum31 = 0;\n    long long\
    \ sum32 = 0;\n    long long sum33 = 0;\n    long long sum34 = 0;\n    long long\
    \ sum35 = 0;\n    long long sum36 = 0;\n    long long sum37 = 0;\n    long long\
    \ sum38 = 0;\n    long long sum39 = 0;\n    long long sum40 = 0;\n    long long\
    \ sum41 = 0;\n    long long sum42 = 0;\n    long long sum43 = 0;\n    long long\
    \ sum44 = 0;\n    long long sum45 = 0;\n    long long sum46 = 0;\n    long long\
    \ sum47 = 0;\n    long long sum48 = 0;\n    long long sum49 = 0;\n    long long\
    \ sum50 = 0;\n    long long sum51 = 0;\n    long long sum52 = 0;\n    long long\
    \ sum53 = 0;\n    long long sum54 = 0;\n    long long sum55 = 0;\n    long long\
    \ sum56 = 0;\n    long long sum57 = 0;\n    long long sum58 = 0;\n    long long\
    \ sum59 = 0;\n    long long sum60 = 0;\n    long long sum61 = 0;\n    long long\
    \ sum62 = 0;\n    long long sum63 = 0;\n    long long sum64 = 0;\n    long long\
    \ sum65 = 0;\n    long long sum66 = 0;\n    long long sum67 = 0;\n    long long\
    \ sum68 = 0;\n    long long sum69", "    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long long ans = std::numeric_limits<long long>::max();\n\
    \    for(long i = 0; i < n; i++) {\n        for(long j = 0; j < m; j++) {\n  \
    \          long long count = 0;\n            for(long k = 0; k < n; k++) {\n \
    \               for(long l = 0; l < m; l++) {\n                    if(grid[i][k]\
    \ == 1 && grid[k][j] == 1) {\n                        count++;\n             \
    \       }\n                }\n            }\n            ans = std::min(ans, count);\n\
    \        }\n    }\n    return ans;", "    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long long an = n * m;\n    long long an2 =\
    \ an * an;\n    long long an3 = an2 * an;\n    long long an4 = an3 * an;\n   \
    \ long long an5 = an4 * an;\n    long long an6 = an5 * an;\n    long long an7\
    \ = an6 * an;\n    long long an8 = an7 * an;\n    long long an9 = an8 * an;\n\
    \    long long an10 = an9 * an;\n    long long an11 = an10 * an;\n    long long\
    \ an12 = an11 * an;\n    long long an13 = an12 * an;\n    long long an14 = an13\
    \ * an;\n    long long an15 = an14 * an;\n    long long an16 = an15 * an;\n  \
    \  long long an17 = an16 * an;\n    long long an18 = an17 * an;\n    long long\
    \ an19 = an18 * an;\n    long long an20 = an19 * an;\n    long long an21 = an20\
    \ * an;\n    long long an22 = an21 * an;\n    long long an23 = an22 * an;\n  \
    \  long long an24 = an23 * an;\n    long long an25 = an24 * an;\n    long long\
    \ an26 = an25 * an;\n    long long an27 = an26 * an;\n    long long an28 = an27\
    \ * an;\n    long long an29 = an28 * an;\n    long long an30 = an29 * an;\n  \
    \  long long an31 = an30 * an;\n    long long an32 = an31 * an;\n    long long\
    \ an33 = an32 * an;\n    long long an34 = an33 * an;\n    long long an35 = an34\
    \ * an;\n    long long an36 = an35 * an;\n    long long an37 = an36 * an;\n  \
    \  long long an38 = an37 * an;\n    long long an39 = an38 * an;\n    long long\
    \ an40 = an39 * an;\n    long long an41 = an40 * an;\n    long long an42 = an41\
    \ * an;\n    long long an43 = an42 * an", "    // Your code here\n    long ans\
    \ = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long long\
    \ an = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = 0; j < m; j++)\
    \ {\n            if(grid[i][j] == 1) {\n                an++;\n            }\n\
    \        }\n    }\n    an = an/capacity;\n    ans = an;\n    return ans;", " \
    \   long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n \
    \   long long an = 0;\n    long long max = 0;\n    long long min = 0;\n    long\
    \ long sum = 0;\n    long long count = 0;\n    long long cur = 0;\n    long long\
    \ cur2 = 0;\n    long long cur3 = 0;\n    long long cur4 = 0;\n    long long cur5\
    \ = 0;\n    long long cur6 = 0;\n    long long cur7 = 0;\n    long long cur8 =\
    \ 0;\n    long long cur9 = 0;\n    long long cur10 = 0;\n    long long cur11 =\
    \ 0;\n    long long cur12 = 0;\n    long long cur13 = 0;\n    long long cur14\
    \ = 0;\n    long long cur15 = 0;\n    long long cur16 = 0;\n    long long cur17\
    \ = 0;\n    long long cur18 = 0;\n    long long cur19 = 0;\n    long long cur20\
    \ = 0;\n    long long cur21 = 0;\n    long long cur22 = 0;\n    long long cur23\
    \ = 0;\n    long long cur24 = 0;\n    long long cur25 = 0;\n    long long cur26\
    \ = 0;\n    long long cur27 = 0;\n    long long cur28 = 0;\n    long long cur29\
    \ = 0;\n    long long cur30 = 0;\n    long long cur31 = 0;\n    long long cur32\
    \ = 0;\n    long long cur33 = 0;\n    long long cur34 = 0;\n    long long cur35\
    \ = 0;\n    long long cur36 = 0;\n    long long cur37 = 0;\n    long long cur38\
    \ = 0;\n    long long cur39 = 0;\n    long long cur40 = 0;\n    long long cur41\
    \ = 0;\n    long long cur42 = 0;\n    long long cur43 = 0;\n    long long cur44\
    \ = 0;\n    long long cur45 = 0;\n    long long cur46 = 0;\n    long long cur47\
    \ = 0;\n    long long cur48 = 0;\n    long long cur49 = 0;\n    long long cur50\
    \ = 0;\n    long long cur51 = 0;\n    long long cur52 = 0;\n    long long cur53\
    \ = 0;\n    long long cur54 = 0;\n    long long cur55 = 0;\n    long long cur56\
    \ = 0;\n    long long cur57 = 0;\n    long long cur58 = 0;\n    long long cur59\
    \ = 0;\n    long long cur60 = 0;\n    long long cur61 = 0;\n    long long cur62\
    \ = 0;\n    long long cur63 = 0;\n    long long cur64 = 0;\n    long long cur65\
    \ = 0;\n    long long cur66 = 0;\n    long long cur67 = 0;", "    long ans = 0;\n\
    \    long n = grid.size();\n    long m = grid[0].size();\n    long long an = 0;\n\
    \    long long cnt = 0;\n    std::vector<long> bckgd(n, 0);\n    std::vector<long>\
    \ bckgd(m, 0);\n    for(long i = 0; i < n; i++) {\n        for(long j = 0; j <\
    \ m; j++) {\n            if(grid[i][j] == 1) {\n                bckgd[i] += 1;\n\
    \                bckgd[j] += 1;\n            }\n        }\n    }\n    for(long\
    \ i = 0; i < n; i++) {\n        for(long j = 0; j < m; j++) {\n            if(bckgd[i]\
    \ > 0 && bckgd[j] > 0 && bckgd[i] > bckgd[j]) {\n                cnt += 1;\n \
    \               ans += 1;\n            }\n        }\n    }\n    an = cnt * capacity\
    \ / ans;\n    return an;", "    long ans = 0;\n    long n = grid.size();\n   \
    \ long m = grid[0].size();\n    long long an = 0;\n    long long sum = 0;\n  \
    \  long long sum2 = 0;\n    long long sum3 = 0;\n    long long sum4 = 0;\n   \
    \ long long sum5 = 0;\n    long long sum6 = 0;\n    long long sum7 = 0;\n    long\
    \ long sum8 = 0;\n    long long sum9 = 0;\n    long long sum10 = 0;\n    long\
    \ long sum11 = 0;\n    long long sum12 = 0;\n    long long sum13 = 0;\n    long\
    \ long sum14 = 0;\n    long long sum15 = 0;\n    long long sum16 = 0;\n    long\
    \ long sum17 = 0;\n    long long sum18 = 0;\n    long long sum19 = 0;\n    long\
    \ long sum20 = 0;\n    long long sum21 = 0;\n    long long sum22 = 0;\n    long\
    \ long sum23 = 0;\n    long long sum24 = 0;\n    long long sum25 = 0;\n    long\
    \ long sum26 = 0;\n    long long sum27 = 0;\n    long long sum28 = 0;\n    long\
    \ long sum29 = 0;\n    long long sum30 = 0;\n    long long sum31 = 0;\n    long\
    \ long sum32 = 0;\n    long long sum33 = 0;\n    long long sum34 = 0;\n    long\
    \ long sum35 = 0;\n    long long sum36 = 0;\n    long long sum37 = 0;\n    long\
    \ long sum38 = 0;\n    long long sum39 = 0;\n    long long sum40 = 0;\n    long\
    \ long sum41 = 0;\n    long long sum42 = 0;\n    long long sum43 = 0;\n    long\
    \ long sum44 = 0;\n    long long sum45 = 0;\n    long long sum46 = 0;\n    long\
    \ long sum47 = 0;\n    long long sum48 = 0;\n    long long sum49 = 0;\n    long\
    \ long sum50 = 0;\n    long long sum51 = 0;\n    long long sum52 = 0;\n    long\
    \ long sum53 = 0;\n    long long sum54 = 0;\n    long long sum55 = 0;\n    long\
    \ long sum56 = 0;\n    long long sum57 = 0;\n    long long sum58 = 0;\n    long\
    \ long sum59 = 0;\n    long long sum60 = 0;\n    long long sum61 = 0;\n    long\
    \ long sum62 = 0;\n    long long sum63 = 0;\n    long long sum64 = 0;\n    long\
    \ long sum65 = 0;\n    long long sum66 = 0;\n    long long sum67 = 0;\n    long\
    \ long sum68 = 0;\n    long long sum69 = 0;\n    long long sum70 = 0;\n    ",
  "    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n  \
    \  long long ans_temp = 0;\n    long long temp_ans = 0;\n    long long temp_ans_temp\
    \ = 0;\n    long long temp_ans_temp_temp = 0;\n    long long temp_ans_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp = 0;\n    long long temp_ans_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp = 0;\n    long long\
    \ temp_ans_temp_temp_temp_temp_temp_temp_temp = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp =\
    \ 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_", "    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long long ans = std::numeric_limits<long long>::max();\n\
    \    long long ans_temp = 0;\n    long long ans_temp2 = 0;\n    long long ans_temp3\
    \ = 0;\n    long long ans_temp4 = 0;\n    long long ans_temp5 = 0;\n    long long\
    \ ans_temp6 = 0;\n    long long ans_temp7 = 0;\n    long long ans_temp8 = 0;\n\
    \    long long ans_temp9 = 0;\n    long long ans_temp10 = 0;\n    long long ans_temp11\
    \ = 0;\n    long long ans_temp12 = 0;\n    long long ans_temp13 = 0;\n    long\
    \ long ans_temp14 = 0;\n    long long ans_temp15 = 0;\n    long long ans_temp16\
    \ = 0;\n    long long ans_temp17 = 0;\n    long long ans_temp18 = 0;\n    long\
    \ long ans_temp19 = 0;\n    long long ans_temp20 = 0;\n    long long ans_temp21\
    \ = 0;\n    long long ans_temp22 = 0;\n    long long ans_temp23 = 0;\n    long\
    \ long ans_temp24 = 0;\n    long long ans_temp25 = 0;\n    long long ans_temp26\
    \ = 0;\n    long long ans_temp27 = 0;\n    long long ans_temp28 = 0;\n    long\
    \ long ans_temp29 = 0;\n    long long ans_temp30 = 0;\n    long long ans_temp31\
    \ = 0;\n    long long ans_temp32 = 0;\n    long long ans_temp33 = 0;\n    long\
    \ long ans_temp34 = 0;\n    long long ans_temp35 = 0;\n    long long ans_temp36\
    \ = 0;\n    long long ans_temp37 = 0;\n    long long ans_temp38 = 0;\n    long\
    \ long ans_temp39 = 0;\n    long long ans_temp40 = 0;\n    long long ans_temp41\
    \ = 0;\n    long long ans_temp42 = 0;\n    long long ans_temp43 = 0;\n    long\
    \ long ans_temp44 = 0;\n    long long ans_temp45 = 0;\n    long long ans_temp46\
    \ = 0;\n    long long ans_temp47 = 0;\n    long long ans_temp48 = 0;\n    long\
    \ long ans_temp49 = 0;\n    long long ans_temp50 = 0;\n    long long ans_temp51\
    \ = 0;\n    long long ans_temp52 = 0;\n    long long ans_temp53 = 0;\n    long\
    \ long ans_temp", "    long ans = 0;\n    long n = grid.size();\n    long m =\
    \ grid[0].size();\n    long long an = n * m;\n    long long dp[an];\n    memset(dp,\
    \ -1, sizeof(dp));\n    \n    for(int i = 0; i < n; i++) {\n        for(int j\
    \ = 0; j < m; j++) {\n            long long cur = grid[i][j];\n            long\
    \ long cur_cap = cur * capacity;\n            long long cur_ans = dp[cur_cap];\n\
    \            \n            if(cur_cap <= an) {\n                dp[cur_cap] =\
    \ cur_ans;\n            } else {\n                dp[cur_cap] = std::max(cur_ans,\
    \ dp[cur_cap - 1]);\n            }\n        }\n    }\n    \n    for(int i = 0;\
    \ i < an; i++) {\n        long long cur = dp[i];\n        if(cur == -1) {\n  \
    \          ans += 1;\n        } else {\n            ans = std::max(ans, cur);\n\
    \        }\n    }\n    return ans;", "    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long ans = 0;\n    long long ans = 0;\n   \
    \ long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long\
    \ long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long\
    \ ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans\
    \ = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n\
    \    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long\
    \ long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long\
    \ ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans\
    \ = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n\
    \    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long\
    \ long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long\
    \ ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans\
    \ = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n\
    \    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long\
    \ long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long\
    \ ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans\
    \ = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n\
    \    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long\
    \ long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long\
    \ ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans\
    \ = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n\
    \    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long\
    \ long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long\
    \ ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans\
    \ = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n\
    \    long long ans = 0;\n    long long ans = 0;\n    ", "    long ans = 0;\n \
    \   long n = grid.size();\n    long m = grid[0].size();\n    long cnt = 0;\n \
    \   long ans1 = 0;\n    long ans2 = 0;\n    long ans3 = 0;\n    long ans1n = 0;\n\
    \    long ans2n = 0;\n    long ans3n = 0;\n    long ans1m = 0;\n    long ans2m\
    \ = 0;\n    long ans3m = 0;\n    long ans1p = 0;\n    long ans2p = 0;\n    long\
    \ ans3p = 0;\n    long ans1s = 0;\n    long ans2s = 0;\n    long ans3s = 0;\n\
    \    long ans1ms = 0;\n    long ans2ms = 0;\n    long ans3ms = 0;\n    long ans1ps\
    \ = 0;\n    long ans2ps = 0;\n    long ans3ps = 0;\n    long ans1msp = 0;\n  \
    \  long ans2msp = 0;\n    long ans3msp = 0;\n    long ans1psp = 0;\n    long ans2psp\
    \ = 0;\n    long ans3psp = 0;\n    long ans1msps = 0;\n    long ans2msps = 0;\n\
    \    long ans3msps = 0;\n    long ans1psps = 0;\n    long ans2psps = 0;\n    long\
    \ ans3psps = 0;\n    long ans1mspsp = 0;\n    long ans2mspsp = 0;\n    long ans3mspsp\
    \ = 0;\n    long ans1pspsp = 0;\n    long ans2pspsp = 0;\n    long ans3pspsp =\
    \ 0;\n    long ans1mspsps = 0;\n    long ans2mspsps = 0;\n    long ans3mspsps\
    \ = 0;\n    long ans1pspsps = 0;\n    long ans2pspsps = 0;\n    long ans3pspsps\
    \ = 0;\n    long ans1mspspsp = 0;\n    long ans2mspspsp = 0;\n    long ans3mspspsp\
    \ = 0;\n    long ans1pspspsp = 0;\n    long ans2pspspsp = 0;\n    long ans3pspspsp\
    \ = 0;\n    long ans1mspspsps = 0;\n    long ans2mspspsps = 0;\n    long ans3mspspsps\
    \ = 0;\n    long ans1pspspsps = 0;\n    long ans2pspspsps = 0;\n    long ans3pspspsps\
    \ = 0;\n    long ans1mspspspsp = 0;\n    long ans2mspspspsp = 0;\n", "    // write\
    \ your code here\n    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long long an = 0;\n    long long sum = 0;\n    long long count = 0;\n   \
    \ long long max = 0;\n    long long min = 0;\n    long long min_index = 0;\n \
    \   long long max_index = 0;\n    long long min_val = grid[0][0];\n    long long\
    \ max_val = grid[0][0];\n    long long min_x = grid[0][0];\n    long long max_x\
    \ = grid[0][0];\n    long long min_y = grid[0][0];\n    long long max_y = grid[0][0];\n\
    \    long long min_z = grid[0][0];\n    long long max_z = grid[0][0];\n    long\
    \ long min_w = grid[0][0];\n    long long max_w = grid[0][0];\n    long long min_h\
    \ = grid[0][0];\n    long long max_h = grid[0][0];\n    long long min_d = grid[0][0];\n\
    \    long long max_d = grid[0][0];\n    long long min_r = grid[0][0];\n    long\
    \ long max_r = grid[0][0];\n    long long min_b = grid[0][0];\n    long long max_b\
    \ = grid[0][0];\n    long long min_l = grid[0][0];\n    long long max_l = grid[0][0];\n\
    \    long long min_r = grid[0][0];\n    long long max_r = grid[0][0];\n    long\
    \ long min_b = grid[0][0];\n    long long max_b = grid[0][0];\n    long long min_l\
    \ = grid[0][0];\n    long long max_l = grid[0][0];\n    long long min_r = grid[0][0];\n\
    \    long long max_r = grid[0][0];\n    long long min_b = grid[0][0];\n    long\
    \ long max_b = grid[0][0];\n    long long min_l = grid[0][0];\n    long long max_l\
    \ = grid[0][0];\n    long long min_r = grid[0][0];\n    long long max_r = grid[0][0];\n\
    \    long long min_b = grid[0][0];\n    long long max_b = grid[0][0];\n    long\
    \ long min_l = grid[0][0];\n    long long max_l = grid[0][0];\n    long long min_r\
    \ = grid[0][0];\n    long long max_r = grid[0][0];\n    long long min_b = grid[0][0];\n\
    \    long long max_b = grid[0][0];\n    long long min_l = grid[0][0];\n    long\
    \ long max_l = grid[0][0];\n    long long min_r = grid[0][0];\n    long long max_r\
    \ = grid[0][0];\n    long long min_b = grid[0][0];\n    long long max_b = grid[0][0];\n\
    \    long long min_l = grid[0][0];\n    long long ", "    // write your code here\n\
    \    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long long ans1 = 0;\n    long long ans2 = 0;\n    long long ans3 = 0;\n \
    \   long long ans4 = 0;\n    long long ans5 = 0;\n    long long ans6 = 0;\n  \
    \  long long ans7 = 0;\n    long long ans8 = 0;\n    long long ans9 = 0;\n   \
    \ long long ans10 = 0;\n    long long ans11 = 0;\n    long long ans12 = 0;\n \
    \   long long ans13 = 0;\n    long long ans14 = 0;\n    long long ans15 = 0;\n\
    \    long long ans16 = 0;\n    long long ans17 = 0;\n    long long ans18 = 0;\n\
    \    long long ans19 = 0;\n    long long ans20 = 0;\n    long long ansp = 0;\n\
    \    long long anss = 0;\n    long long anst = 0;\n    long long ansy = 0;\n \
    \   long long ansz = 0;\n    long long ansxx = 0;\n    long long ansyy = 0;\n\
    \    long long ansyz = 0;\n    long long ansxz = 0;\n    long long ansyx = 0;\n\
    \    long long ansyzx = 0;\n    long long ansxzy = 0;\n    long long ansyzy =\
    \ 0;\n    long long ansyxz = 0;\n    long long ansyyx = 0;\n    long long ansyzyx\
    \ = 0;\n    long long ansyyz = 0;\n    long long ansyzyz = 0;\n    long long ansyyxz\
    \ = 0;\n    long long ansyzyxz = ansxx;\n    long long ansyzyzx = ansxx;\n   \
    \ long long ansyzyzy = ansyy;\n    long long ansyzyzx = ansyzyx;\n    long long\
    \ ansyzyzxz = ansyzyzx;\n    long long ansyzyzyz = ansyzyzy;\n    long long ansyzyzyx\
    \ = ansyzyzyx;\n    long long ansyzyzyxz = ansyzyzyxz;\n    long long ansyzyzyzx\
    \ = ansyzyzyzx;\n    long long ansyzyzyzxz = ansyzyzyzxz;\n    long long ansyzyzyzyz\
    \ = ansyzyzyzyz;\n    long long ansyzyzyzyx = ansyzyzyzyx;\n    long long ansyzyzyzyxz\
    \ = ansyzyzyzyxz;\n    long long ansyzy", "    // Your code here\n    long ans\
    \ = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long count\
    \ = 0;\n    long ans = 0;\n    for(long i = 0; i < n; i++) {\n        for(long\
    \ j = 0; j < m; j++) {\n            long count = 0;\n            for(long k =\
    \ 0; k < n; k++) {\n                for(long l = 0; l < m; l++) {\n          \
    \          if(grid[i][k] == 1 && grid[k][j] == 1) {\n                        count++;\n\
    \                    }\n                }\n            }\n            if(count\
    \ > capacity) {\n                ans += 1;\n                count -= capacity;\n\
    \            }\n        }\n    }\n    return ans;", "    // Your code here\n \
    \   long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n \
    \   long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long\
    \ ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans\
    \ = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n\
    \    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long\
    \ long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long\
    \ ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans\
    \ = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n\
    \    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long\
    \ long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long\
    \ ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans\
    \ = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n\
    \    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long\
    \ long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long\
    \ ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans\
    \ = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n\
    \    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long\
    \ long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long\
    \ ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans\
    \ = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n\
    \    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long\
    \ long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long\
    \ ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans\
    \ = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n\
    \    long long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long\
    \ long ans = 0;\n    long long ans = 0;\n    long long ans = 0;\n    long ", " \
    \   long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n \
    \   long long ans = 0;\n    long long count = 0;\n    long long sum = 0;\n   \
    \ long long cur = 0;\n    long long cur_cap = 0;\n    long long cur_sum = 0;\n\
    \    long long cur_cur = 0;\n    long long cur_cur_cap = 0;\n    long long cur_cur_sum\
    \ = 0;\n    long long cur_cur_cur = 0;\n    long long cur_cur_cur_cap = 0;\n \
    \   long long cur_cur_cur_sum = 0;\n    long long cur_cur_cur_cur = 0;\n    long\
    \ long cur_cur_cur_cur_cap = 0;\n    long long cur_cur_cur_cur_sum = 0;\n    long\
    \ long cur_cur_cur_cur_cur = 0;\n    long long cur_cur_cur_cur_cur_cap = 0;\n\
    \    long long cur_cur_cur_cur_cur_sum = 0;\n    long long cur_cur_cur_cur_cur_cur\
    \ = 0;\n    long long cur_cur_cur_cur_cur_cur_cap = 0;\n    long long cur_cur_cur_cur_cur_cur_sum\
    \ = 0;\n    long long cur_cur_cur_cur_cur_cur_cur = 0;\n    long long cur_cur_cur_cur_cur_cur_cur_cap\
    \ = 0;\n    long long cur_cur_cur_cur_cur_cur_sum = 0;\n    long long cur_cur_cur_cur_cur_cur_cur\
    \ = 0;\n    long long cur_cur_cur_cur_cur_cur_cur_cap = 0;\n    long long cur_cur_cur_cur_cur_cur_cur_sum\
    \ = 0;\n    long long cur_cur_cur_cur_cur_cur_cur_cur = 0;\n    long long cur_cur_cur_cur_cur_cur_cur_cur_cap\
    \ = 0;\n    long long cur_cur_cur_cur_cur_cur_cur_cur_sum = 0;\n    long long\
    \ cur_cur_cur_cur_cur_cur_cur_cur_cur = 0;\n    long long cur_cur_cur_cur_cur_cur_cur_cur_cur_cap\
    \ = 0;\n    long long cur_cur_cur_cur_cur_cur_cur_cur_sum = 0;\n    long long\
    \ cur_cur_cur_cur_cur_cur_cur_cur_cur = 0;\n    long long cur_cur_cur_cur_cur_cur_cur_cur_cur_cap\
    \ = 0;\n    long long cur_cur_cur_cur_cur_cur_cur_cur_sum = 0;\n    long long\
    \ cur_cur_cur_cur_cur_cur_cur_cur_cur = 0;\n    long long cur_cur_cur_cur_cur_cur_cur_cur_cur_cap\
    \ = 0;\n    long long cur_cur_cur_cur_cur_cur_cur_cur_cur_sum = 0;\n    long long\
    \ cur_cur_cur_cur_cur_cur_cur_cur_cur_cur = 0;\n    long long cur_cur_cur_cur_cur_cur_cur_cur_cur_cur_cap\
    \ = 0;\n    long long cur_cur_cur_cur_cur_cur_cur_cur_cur_sum = 0;\n    long long\
    \ cur_cur_cur_cur_cur_cur_cur_cur_cur_cur = 0;\n    long long ", "    long ans\
    \ = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long cnt\
    \ = 0;\n    std::vector<std::vector<long>> buckets(n);\n    for (long i = 0; i\
    \ < n; i++) {\n        buckets[i].resize(m);\n    }\n    for (long i = 0; i <\
    \ n; i++) {\n        for (long j = 0; j < m; j++) {\n            if (grid[i][j]\
    \ == 1) {\n                buckets[i][j] = 0;\n            }\n        }\n    }\n\
    \    for (long i = 0; i < n; i++) {\n        for (long j = 0; j < m; j++) {\n\
    \            if (buckets[i][j] == 0) {\n                cnt++;\n             \
    \   ans = max(ans, cnt - 1);\n            }\n        }\n    }\n    return ans;",
  "    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n  \
    \  long long an = n * m;\n    long long an2 = an * an;\n    long long an3 = an2\
    \ * an;\n    long long an4 = an3 * an;\n    long long an5 = an4 * an;\n    long\
    \ long an6 = an5 * an;\n    long long an7 = an6 * an;\n    long long an8 = an7\
    \ * an;\n    long long an9 = an8 * an;\n    long long an10 = an9 * an;\n    long\
    \ long an11 = an10 * an;\n    long long an12 = an11 * an;\n    long long an13\
    \ = an12 * an;\n    long long an14 = an13 * an;\n    long long an15 = an14 * an;\n\
    \    long long an16 = an15 * an;\n    long long an17 = an16 * an;\n    long long\
    \ an18 = an17 * an;\n    long long an19 = an18 * an;\n    long long an20 = an19\
    \ * an;\n    long long an21 = an20 * an;\n    long long an22 = an21 * an;\n  \
    \  long long an23 = an22 * an;\n    long long an24 = an23 * an;\n    long long\
    \ an25 = an24 * an;\n    long long an26 = an25 * an;\n    long long an27 = an26\
    \ * an;\n    long long an28 = an27 * an;\n    long long an29 = an28 * an;\n  \
    \  long long an30 = an29 * an;\n    long long an31 = an30 * an;\n    long long\
    \ an32 = an31 * an;\n    long long an33 = an32 * an;\n    long long an34 = an33\
    \ * an;\n    long long an35 = an34 * an;\n    long long an36 = an35 * an;\n  \
    \  long long an37 = an36 * an;\n    long long an38 = an37 * an;\n    long long\
    \ an39 = an38 * an;\n    long long an40 = an39 * an;\n    long long an41 = an40\
    \ * an;\n    long long an42 = an41 * an;\n    long long an43 = an42 * an", " \
    \   // Write your code here\n    long ans = 0;\n    long n = grid.size();\n  \
    \  long m = grid[0].size();\n    long count = 0;\n    long cur = 0;\n    long\
    \ min = 0;\n    long max = 0;\n    long cur_cap = 0;\n    long min_cap = 0;\n\
    \    long max_cap = 0;\n    long min_cur = 0;\n    long max_cur = 0;\n    long\
    \ min_max = 0;\n    long max_max = 0;\n    long min_cur_cap = 0;\n    long max_cur_cap\
    \ = 0;\n    long min_max_cap = 0;\n    long max_max_cap = 0;\n    long min_min_cur\
    \ = 0;\n    long max_min_cur = 0;\n    long min_max_max = 0;\n    long max_min_max\
    \ = 0;\n    long min_min_cur_cap = 0;\n    long max_min_cur_cap = 0;\n    long\
    \ min_max_max_cap = 0;\n    long max_max_max_cap = 0;\n    long min_min_max =\
    \ 0;\n    long max_min_max = 0;\n    long min_min_max_cap = 0;\n    long max_min_max_cap\
    \ = 0;\n    long min_min_min_cur = 0;\n    long max_min_min_cur = 0;\n    long\
    \ min_min_max_max = 0;\n    long max_min_max_max = 0;\n    long min_min_min_cur_cap\
    \ = 0;\n    long max_min_min_cur_cap = 0;\n    long min_min_max_max_cap = 0;\n\
    \    long max_min_max_max_cap = 0;\n    long min_min_min_max = 0;\n    long max_min_min_max\
    \ = 0;\n    long min_min_max_max_cap = 0;\n    long max_min_max_max_cap = 0;\n\
    \    long min_min_min_min_cur = 0;\n    long max_min_min_min_cur = 0;\n    long\
    \ min_min_max_max = 0;\n    long max_min_max_max = 0;\n    long min_min_min_cur_cap\
    \ = 0;\n    long max_min_min_cur_cap = 0;\n    long min_min_max_max_cap = 0;\n\
    \    long max_min_max_max_cap = 0;\n    long min_min_min_max = 0;\n    long max_min_min_max\
    \ = 0;\n    long min_min_max_max_cap = 0;\n    long max_min_max_max_cap = 0;\n\
    \    long min_min_min_min_cur = 0;\n    long max_min_min_min_cur = 0;\n    long\
    \ min_min_max_max = 0;\n    long max_min_max_max = 0;\n    long min_min_min_cur_cap\
    \ = 0;\n    long max_min_min_cur_cap = 0;\n    long min_min_max_max_cap = 0;\n\
    \    long max_min_max_max_cap = 0;\n    long min_min_min_max = 0;\n    long max_min_min_max\
    \ = 0;\n    long min_min_max_max_cap = 0;\n    long max_min_max_max_cap", "  \
    \  long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n  \
    \  long long dp[n + 1][m + 1];\n    // dp[i][j] stores the number of ways to empty\
    \ the i-th row and j-th column \n    // using only buckets with capacity j\n \
    \   \n    // base case\n    dp[0][0] = 1;\n    \n    // fill the dp table \n \
    \   for (int i = 1; i <= n; i++) {\n        for (int j = 1; j <= m; j++) {\n \
    \           if (grid[i][j] == 1) {\n                dp[i][j] = dp[i - 1][j] +\
    \ dp[i - 1][j - 1];\n            } else {\n                dp[i][j] = dp[i - 1][j];\n\
    \            }\n        }\n    }\n    \n    // find the max ways to fill the grid\n\
    \    for (int i = 1; i <= n; i++) {\n        for (int j = 1; j <= m; j++) {\n\
    \            if (dp[i][j] > dp[i][j - 1]) {\n                ans = std::max(ans,\
    \ dp[i][j]);\n            }\n        }\n    }\n    return ans;", "    long ans\
    \ = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long cnt\
    \ = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = 0; j < m; j++)\
    \ {\n            if(grid[i][j] == 1) {\n                cnt += 1;\n          \
    \      ans = std::max(ans, cnt);\n                cnt -= 1;\n                for(long\
    \ k = i; k < n; k++) {\n                    grid[k][j] = 0;\n                }\n\
    \                for(long k = j; k < m; k++) {\n                    grid[i][k]\
    \ = 0;\n                }\n            }\n        }\n    }\n    return ans;",
  "    // Your code here\n    long ans = 0;\n    long n = grid.size();\n    long m\
    \ = grid[0].size();\n    long long ans = 0;\n    long long count = 0;\n    long\
    \ long sum = 0;\n    long long cur = 0;\n    long long max = 0;\n    long long\
    \ min = 0;\n    long long sum = 0;\n    long long cur = 0;\n    long long max\
    \ = 0;\n    long long min = 0;\n    long long sum = 0;\n    long long cur = 0;\n\
    \    long long max = 0;\n    long long min = 0;\n    long long sum = 0;\n    long\
    \ long cur = 0;\n    long long max = 0;\n    long long min = 0;\n    long long\
    \ sum = 0;\n    long long cur = 0;\n    long long max = 0;\n    long long min\
    \ = 0;\n    long long sum = 0;\n    long long cur = 0;\n    long long max = 0;\n\
    \    long long min = 0;\n    long long sum = 0;\n    long long cur = 0;\n    long\
    \ long max = 0;\n    long long min = 0;\n    long long sum = 0;\n    long long\
    \ cur = 0;\n    long long max = 0;\n    long long min = 0;\n    long long sum\
    \ = 0;\n    long long cur = 0;\n    long long max = 0;\n    long long min = 0;\n\
    \    long long sum = 0;\n    long long cur = 0;\n    long long max = 0;\n    long\
    \ long min = 0;\n    long long sum = 0;\n    long long cur = 0;\n    long long\
    \ max = 0;\n    long long min = 0;\n    long long sum = 0;\n    long long cur\
    \ = 0;\n    long long max = 0;\n    long long min = 0;\n    long long sum = 0;\n\
    \    long long cur = 0;\n    long long max = 0;\n    long long min = 0;\n    long\
    \ long sum = 0;\n    long long cur = 0;\n    long long max = 0;\n    long long\
    \ min = 0;\n    long long sum = 0;\n    long long cur = 0;\n    long long max\
    \ = 0;\n    long long min = 0;\n    long long sum = 0;\n    long long cur = 0;\n\
    \    long long max = 0;\n    long long min = 0;\n    long long sum = 0;\n    long\
    \ long cur = 0;\n    long long max = 0;\n    long long min = 0;\n    long long\
    \ sum = 0;\n    long long cur = 0;\n    long long max = 0;\n    long long min\
    \ = 0;\n    long long sum = 0;\n    long long cur = 0;\n    long long max = 0;\n\
    \    long long min = 0;\n    long long sum = 0;\n    long long cur = 0;\n    long\
    \ long max = 0;\n    long ", "    long ans = 0;\n    long n = grid.size();\n \
    \   long m = grid[0].size();\n    long count = 0;\n    long ans1 = 0;\n    long\
    \ ans2 = 0;\n    long ans3 = 0;\n    long ans4 = 0;\n    long ans5 = 0;\n    long\
    \ ans6 = 0;\n    long ans7 = 0;\n    long ans8 = 0;\n    long ans9 = 0;\n    long\
    \ ans10 = 0;\n    long ans11 = 0;\n    long ans12 = 0;\n    long ans13 = 0;\n\
    \    long ans14 = 0;\n    long ans15 = 0;\n    long ans16 = 0;\n    long ans17\
    \ = 0;\n    long ans18 = 0;\n    long ans19 = 0;\n    long ans20 = 0;\n    long\
    \ ansp1 = 0;\n    long ansp2 = 0;\n    long ansp3 = 0;\n    long ansp4 = 0;\n\
    \    long ansp5 = 0;\n    long ansp6 = 0;\n    long ansp7 = 0;\n    long ansp8\
    \ = 0;\n    long ansp9 = 0;\n    long ansp10 = 0;\n    long ansp11 = 0;\n    long\
    \ ansp12 = 0;\n    long ansp13 = 0;\n    long ansp14 = 0;\n    long ansp15 = 0;\n\
    \    long ansp16 = 0;\n    long ansp17 = 0;\n    long ansp18 = 0;\n    long ansp19\
    \ = 0;\n    long ansp20 = 0;\n    long ansp21 = 0;\n    long ansp22 = 0;\n   \
    \ long ansp23 = 0;\n    long ansp24 = 0;\n    long ansp25 = 0;\n    long ansp26\
    \ = 0;\n    long ansp27 = 0;\n    long ansp28 = 0;\n    long ansp29 = 0;\n   \
    \ long ansp30 = 0;\n    long ansp31 = 0;\n    long ansp32 = 0;\n    long ansp33\
    \ = 0;\n    long ansp34 = 0;\n    long ansp35 = 0;\n    long ansp36 = 0;\n   \
    \ long ansp37 = 0;\n    long ansp38 = 0;\n    long ansp39 = 0;\n    long ansp40\
    \ = 0;\n    long ansp41 = 0;\n    long ansp42 = 0;\n    long ansp43 = 0;\n   \
    \ long ansp44 = 0;\n    long ansp45 = 0;\n    long ansp46 = 0;\n    long ansp47\
    \ = 0;\n    long ansp48 = 0;\n    long ansp49 = 0;\n    long ansp50 = 0;\n   \
    \ long ansp51 = 0;\n    long ansp52 = 0;\n    long ansp53 = 0;\n    long ansp",
  "    // write your code here\n    long ans = 0;\n    long n = grid.size();\n   \
    \ long m = grid[0].size();\n    long long ans_temp = 0;\n    long long temp_ans\
    \ = 0;\n    long long temp_ans_temp = 0;\n    long long temp_ans_temp_temp = 0;\n\
    \    long long temp_ans_temp_temp_temp = 0;\n    long long temp_ans_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp = 0;\n    long\
    \ long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_", "    // Your code here\n    long ans = 0;\n\
    \    long n = grid.size();\n    long m = grid[0].size();\n    long ans = std::numeric_limits<long>::max();\n\
    \    for(long i = 0; i < n; i++) {\n        for(long j = 0; j < m; j++) {\n  \
    \          if(grid[i][j] == 1) {\n                long cur = grid[i][j];\n   \
    \             for(long k = 0; k < n; k++) {\n                    if(grid[k][j]\
    \ == 1) {\n                        grid[k][j] = cur;\n                       \
    \ if(cur > ans) {\n                            ans = cur;\n                  \
    \      }\n                        grid[k][j] = 0;\n                    }\n   \
    \             }\n            }\n        }\n    }\n    return ans;", "    long\
    \ ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long\
    \ long ans1 = 0;\n    long long ans2 = 0;\n    long long ans3 = 0;\n    long long\
    \ ans4 = 0;\n    long long ans5 = 0;\n    long long ans6 = 0;\n    long long ans7\
    \ = 0;\n    long long ans8 = 0;\n    long long ans9 = 0;\n    long long ans10\
    \ = 0;\n    long long ans11 = 0;\n    long long ans12 = 0;\n    long long ans13\
    \ = 0;\n    long long ans14 = 0;\n    long long ans15 = 0;\n    long long ans16\
    \ = 0;\n    long long ans17 = 0;\n    long long ans18 = 0;\n    long long ans19\
    \ = 0;\n    long long ans20 = 0;\n    long long ans21 = 0;\n    long long ans22\
    \ = 0;\n    long long ans23 = 0;\n    long long ans24 = 0;\n    long long ans25\
    \ = 0;\n    long long ans26 = 0;\n    long long ans27 = 0;\n    long long ans28\
    \ = 0;\n    long long ans29 = 0;\n    long long ans30 = 0;\n    long long ans31\
    \ = 0;\n    long long ans32 = 0;\n    long long ans33 = 0;\n    long long ans34\
    \ = 0;\n    long long ans35 = 0;\n    long long ans36 = 0;\n    long long ans37\
    \ = 0;\n    long long ans38 = 0;\n    long long ans39 = 0;\n    long long ans40\
    \ = 0;\n    long long ans = n;\n    long long ans1 = n;\n    long long ans2 =\
    \ n;\n    long long ans3 = n;\n    long long ans4 = n;\n    long long ans5 = n;\n\
    \    long long ans6 = n;\n    long long ans7 = n;\n    long long ans8 = n;\n \
    \   long long ans9 = n;\n    long long ans10 = n;\n    long long ans11 = n;\n\
    \    long long ans12 = n;\n    long long ans13 = n;\n    long long ans14 = n;\n\
    \    long long ans15 = n;\n    long long ans16 = n;\n    long long ans17 = n;\n\
    \    long long ans18 = n;\n    long long ans19 = n;\n    long long ans20 = n;\n\
    \    long long ans21 = n;\n    long long ans22 = n;\n    long long ans23 = n;\n\
    \    long long ans24 = n;\n    long long ans25 = n;\n    long long ans26 = n;\n\
    \    long long ans27 = n;\n    long long "]
stop_tokens:
- "\n}"

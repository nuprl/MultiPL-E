language: cpp
name: HumanEval_59_largest_prime_factor
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i =\
    \ 2;\n    while (i < n) {\n        if (n % i == 0) {\n            long j = i;\n\
    \            while (j < n) {\n                if (n % j == 0) {\n            \
    \        max_factor = j;\n                    max_factor_index = i;\n        \
    \            break;\n                }\n                j++;\n            }\n\
    \        }\n        i++;\n    }\n    return max_factor_index;\n}\nint main() {\n\
    \    auto candidate = largest_prime_factor;\n    assert(candidate((15)) == (5));\n\
    \    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n  \
    \  assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
    }\n"
  status: Exception
  stderr: 'tmpt2_sgirx: /tmp/tmpt2_sgirx.cpp:27: int main(): Assertion `candidate((27))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long i = 2;\n    while (i <= sqrt(n)) {\n\
    \        if (n % i == 0) {\n            max_factor = i;\n        }\n        i\
    \ += 2;\n    }\n    return max_factor;\n}\nint main() {\n    auto candidate =\
    \ largest_prime_factor;\n    assert(candidate((15)) == (5));\n    assert(candidate((27))\
    \ == (3));\n    assert(candidate((63)) == (7));\n    assert(candidate((330)) ==\
    \ (11));\n    assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpep30uy7p: /tmp/tmpep30uy7p.cpp:17: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_prime = 1;\n    long prime = 1;\n\
    \    long i = 2;\n    while (i <= n) {\n        if (n % i == 0) {\n          \
    \  prime = i;\n            while (n % i == 0) {\n                n /= i;\n   \
    \         }\n            if (n > 1) {\n                max_factor = i;\n     \
    \           max_prime = prime;\n            }\n        }\n        i++;\n    }\n\
    \    return max_factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp30kc9wtz: /tmp/tmp30kc9wtz.cpp:26: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142974
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long factor = 1;\n    long i = 2;\n    while (i < n) {\n        if\
    \ (n % i == 0) {\n            factor = i;\n            break;\n        }\n   \
    \     ++i;\n    }\n    return factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpsw3_h1i8: /tmp/tmpsw3_h1i8.cpp:18: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long p = 2;\n    long q = n;\n    long r = n;\n    long s = 2;\n \
    \   long t = 3;\n    long u = 3;\n    long v = 3;\n    long w = 3;\n    long x\
    \ = 2;\n    long y = 2;\n    long z = 2;\n    long a = 1;\n    long b = 1;\n \
    \   long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g\
    \ = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n \
    \   long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p\
    \ = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n \
    \   long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y\
    \ = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n \
    \   long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h\
    \ = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n \
    \   long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q\
    \ = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n \
    \   long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z\
    \ = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n \
    \   long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i\
    \ = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n \
    \   long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long r\
    \ = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n \
    \   long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long a\
    \ = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n \
    \   long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long j\
    \ = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n    long \n}\nint main()\
    \ {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15)) ==\
    \ (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n\
    \    assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpvfmpe3iw.cpp: In function \u2018long int largest_prime_factor(long\
    \ int)\u2019:\n/tmp/tmpvfmpe3iw.cpp:29:10: error: declaration of \u2018long int\
    \ n\u2019 shadows a parameter\n   29 |     long n = 1;\n      |          ^\n/tmp/tmpvfmpe3iw.cpp:31:10:\
    \ error: redeclaration of \u2018long int p\u2019\n   31 |     long p = 1;\n  \
    \    |          ^\n/tmp/tmpvfmpe3iw.cpp:5:10: note: \u2018long int p\u2019 previously\
    \ declared here\n    5 |     long p = 2;\n      |          ^\n/tmp/tmpvfmpe3iw.cpp:32:10:\
    \ error: redeclaration of \u2018long int q\u2019\n   32 |     long q = 1;\n  \
    \    |          ^\n/tmp/tmpvfmpe3iw.cpp:6:10: note: \u2018long int q\u2019 previously\
    \ declared here\n    6 |     long q = n;\n      |          ^\n/tmp/tmpvfmpe3iw.cpp:33:10:\
    \ error: redeclaration of \u2018long int r\u2019\n   33 |     long r = 1;\n  \
    \    |          ^\n/tmp/tmpvfmpe3iw.cpp:7:10: note: \u2018long int r\u2019 previously\
    \ declared here\n    7 |     long r = n;\n      |          ^\n/tmp/tmpvfmpe3iw.cpp:34:10:\
    \ error: redeclaration of \u2018long int s\u2019\n   34 |     long s = 1;\n  \
    \    |          ^\n/tmp/tmpvfmpe3iw.cpp:8:10: note: \u2018long int s\u2019 previously\
    \ declared here\n    8 |     long s = 2;\n      |          ^\n/tmp/tmpvfmpe3iw.cpp:35:10:\
    \ error: redeclaration of \u2018long int t\u2019\n   35 |     long t = 1;\n  \
    \    |          ^\n/tmp/tmpvfmpe3iw.cpp:9:10: note: \u2018long int t\u2019 previously\
    \ declared here\n    9 |     long t = 3;\n      |          ^\n/tmp/tmpvfmpe3iw.cpp:36:10:\
    \ error: redeclaration of \u2018long int u\u2019\n   36 |     long u = 1;\n  \
    \    |          ^\n/tmp/tmpvfmpe3iw.cpp:10:10: note: \u2018long int u\u2019 previously\
    \ declared here\n   10 |     long u = 3;\n      |          ^\n/tmp/tmpvfmpe3iw.cpp:37:10:\
    \ error: redeclaration of \u2018long int v\u2019\n   37 |     long v = 1;\n  \
    \    |          ^\n/tmp/tmpvfmpe3iw.cpp:11:10: note: \u2018long int v\u2019 previously\
    \ declared here\n   11 |     long v = 3;\n      |          ^\n/tmp/tmpvfmpe3iw.cpp:38:10:\
    \ error: redeclaration of \u2018long int w\u2019\n   38 |     long w = 1;\n  \
    \    |          ^\n/tmp/tmpvfmpe3iw.cpp:12:10: note: \u2018long int w\u2019 previously\
    \ declared here\n   12 |     long w = 3;\n      |      "
  stdout: ''
  timestamp: 1660142974
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_i = 1;\n    long max_factor = 1;\n    while\
    \ (i < n) {\n        if (n % i == 0) {\n            max_factor = i;\n        \
    \    max_i = i;\n        }\n        i++;\n    }\n    return max_factor;\n}\nint\
    \ main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmpfbm854gj: /tmp/tmpfbm854gj.cpp:20: int main(): Assertion `candidate((27))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long i = 2;\n    while (i <= sqrt(n)) {\n\
    \        if (n % i == 0) {\n            max_factor = i;\n        }\n        i++;\n\
    \    }\n    return max_factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp_jfyxw4e: /tmp/tmp_jfyxw4e.cpp:17: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i =\
    \ 2;\n    while (i < n) {\n        if (n % i == 0) {\n            while (n % i\
    \ == 0) {\n                n /= i;\n                max_factor_index = i;\n  \
    \              max_factor = i;\n            }\n        }\n        i++;\n    }\n\
    \    return max_factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpacfwq89n: /tmp/tmpacfwq89n.cpp:22: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_factor = 1;\n    while (i <= sqrt(n)) {\n\
    \        if (n % i == 0) {\n            max_factor = i;\n        }\n        i\
    \ += 1;\n    }\n    return max_factor;\n}\nint main() {\n    auto candidate =\
    \ largest_prime_factor;\n    assert(candidate((15)) == (5));\n    assert(candidate((27))\
    \ == (3));\n    assert(candidate((63)) == (7));\n    assert(candidate((330)) ==\
    \ (11));\n    assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp6s215348: /tmp/tmp6s215348.cpp:17: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max = 2;\n    while (i < n) {\n        if (n\
    \ % i == 0) {\n            max = i;\n        }\n        i += 2;\n    }\n    return\
    \ max;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmp4qijjomr: /tmp/tmp4qijjomr.cpp:17: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 0;\n    long max_factor_index = 0;\n    for (long\
    \ i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long j = i;\n\
    \            while (j > 1) {\n                if (n % j == 0) {\n            \
    \        break;\n                }\n                j--;\n            }\n    \
    \        if (j == 1) {\n                max_factor = i;\n                max_factor_index\
    \ = i;\n            }\n        }\n    }\n    return max_factor;\n}\nint main()\
    \ {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15)) ==\
    \ (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n\
    \    assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
    }\n"
  status: Exception
  stderr: 'tmp80m8ixnf: /tmp/tmp80m8ixnf.cpp:26: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long p = 2;\n    long q = n;\n    long r = n;\n    while (q != 0)\
    \ {\n        if (q % p == 0) {\n            q = q / p;\n        } else {\n   \
    \         p = p * 2;\n        }\n    }\n    return r;\n}\nint main() {\n    auto\
    \ candidate = largest_prime_factor;\n    assert(candidate((15)) == (5));\n   \
    \ assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n    assert(candidate((330))\
    \ == (11));\n    assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_i = n;\n    long max_factor = 1;\n    while\
    \ (i < max_i) {\n        if (n % i == 0) {\n            max_factor = i;\n    \
    \        max_i = max_i / i;\n        }\n        ++i;\n    }\n    return max_factor;\n\
    }\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmp35o5f7s4: /tmp/tmp35o5f7s4.cpp:19: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long factor = 1;\n    long i = 2;\n    while (i < n) {\n        if\
    \ (n % i == 0) {\n            factor++;\n            n /= i;\n        }\n    \
    \    i++;\n    }\n    return factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpo79916o1: /tmp/tmpo79916o1.cpp:18: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long largest = i;\n    while (i < n) {\n        if\
    \ (n % i == 0) {\n            largest = i;\n        }\n        i++;\n    }\n \
    \   return largest;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpis6myyqy: /tmp/tmpis6myyqy.cpp:18: int main(): Assertion `candidate((27))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i;\n\
    \    for (i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long j\
    \ = max_factor;\n            while (n % i == 0) {\n                n = n / i;\n\
    \                j++;\n            }\n            if (j > max_factor) {\n    \
    \            max_factor = j;\n                max_factor_index = i;\n        \
    \    }\n        }\n    }\n    return max_factor_index;\n}\nint main() {\n    auto\
    \ candidate = largest_prime_factor;\n    assert(candidate((15)) == (5));\n   \
    \ assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n    assert(candidate((330))\
    \ == (11));\n    assert(candidate((13195)) == (29));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_i = i;\n    long max_factor = 1;\n    while\
    \ (i < n) {\n        if (n % i == 0) {\n            i += 1;\n        } else {\n\
    \            i = i * 2;\n        }\n        if (i > max_i) {\n            max_i\
    \ = i;\n            max_factor = i;\n        }\n    }\n    return max_factor;\n\
    }\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmpntckiq0d: /tmp/tmpntckiq0d.cpp:23: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_factor = 1;\n    while (i < n) {\n     \
    \   if (n % i == 0) {\n            max_factor = i;\n        }\n        ++i;\n\
    \    }\n    return max_factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp6mf83iej: /tmp/tmp6mf83iej.cpp:18: int main(): Assertion `candidate((27))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i =\
    \ 2;\n    long j;\n    while (i < n) {\n        j = i;\n        while (j < n)\
    \ {\n            if (n % j == 0) {\n                break;\n            }\n  \
    \          j++;\n        }\n        if (j > max_factor) {\n            max_factor\
    \ = j;\n            max_factor_index = i;\n        }\n        i++;\n    }\n  \
    \  return max_factor_index;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp_6yrk8wx: /tmp/tmp_6yrk8wx.cpp:27: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142974
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_i = n;\n    long max_factor = 1;\n    while\
    \ (i < max_i) {\n        if (n % i == 0) {\n            max_factor = i;\n    \
    \        max_i = max_i / i;\n        }\n        i++;\n    }\n    return max_factor;\n\
    }\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmpw6fytvkt: /tmp/tmpw6fytvkt.cpp:19: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_prime_factor = 1;\n    long i =\
    \ 3;\n    while(i <= sqrt(n)) {\n        if(n % i == 0) {\n            if(i *\
    \ i > n) {\n                max_factor = i;\n                max_prime_factor\
    \ = n;\n            }\n            i += 2;\n        }\n        else {\n      \
    \      i += 1;\n        }\n    }\n    return max_prime_factor;\n}\nint main()\
    \ {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15)) ==\
    \ (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n\
    \    assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
    }\n"
  status: Exception
  stderr: 'tmpz8artai4: /tmp/tmpz8artai4.cpp:24: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long largest = 2;\n    while (i <= n && n % i ==\
    \ 0) {\n        largest = i;\n        i += 2;\n    }\n    return largest;\n}\n\
    int main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmpu8dlofjs: /tmp/tmpu8dlofjs.cpp:15: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 0;\n    long max_factor_index = 0;\n    for (long\
    \ i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long factor =\
    \ i / max_factor;\n            if (factor > max_factor) {\n                max_factor\
    \ = factor;\n                max_factor_index = i;\n            }\n        }\n\
    \    }\n    return max_factor_index;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_i = n;\n    long max_factor = 1;\n    while\
    \ (i <= max_i) {\n        if (n % i == 0) {\n            max_factor = i;\n   \
    \         max_i = max_i / i;\n        }\n        i++;\n    }\n    return max_factor;\n\
    }\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmp8umi3odl: /tmp/tmp8umi3odl.cpp:20: int main(): Assertion `candidate((27))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i =\
    \ 2;\n    while (i < n) {\n        if (n % i == 0) {\n            long j = i;\n\
    \            while (j < n) {\n                if (n % j == 0) {\n            \
    \        max_factor = j;\n                    max_factor_index = i;\n        \
    \            break;\n                }\n                j++;\n            }\n\
    \        }\n        i++;\n    }\n    return max_factor;\n}\nint main() {\n   \
    \ auto candidate = largest_prime_factor;\n    assert(candidate((15)) == (5));\n\
    \    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n  \
    \  assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
    }\n"
  status: Exception
  stderr: 'tmplq54fgg9: /tmp/tmplq54fgg9.cpp:27: int main(): Assertion `candidate((27))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i;\n\
    \    long j;\n    for (i = 2; i <= n; i++) {\n        for (j = 2; j <= max_factor;\
    \ j++) {\n            if (n % j == 0) {\n                break;\n            }\n\
    \        }\n        if (j > max_factor) {\n            max_factor = j;\n     \
    \       max_factor_index = i;\n        }\n    }\n    return max_factor_index;\n\
    }\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmp4f67ha_y: /tmp/tmp4f67ha_y.cpp:24: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_factor = 1;\n    while (i <= sqrt(n)) {\n\
    \        if (n % i == 0) {\n            max_factor = i;\n        }\n        i\
    \ += 1;\n    }\n    return max_factor;\n}\nint main() {\n    auto candidate =\
    \ largest_prime_factor;\n    assert(candidate((15)) == (5));\n    assert(candidate((27))\
    \ == (3));\n    assert(candidate((63)) == (7));\n    assert(candidate((330)) ==\
    \ (11));\n    assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp6s215348: /tmp/tmp6s215348.cpp:17: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (int\
    \ i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long factor =\
    \ i / max_factor;\n            if (factor > max_factor) {\n                max_factor\
    \ = factor;\n                max_factor_index = i;\n            }\n        }\n\
    \    }\n    return max_factor_index;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpe9wzwnuj: /tmp/tmpe9wzwnuj.cpp:20: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (int\
    \ i = 2; i <= n; i++) {\n        while (n % i == 0) {\n            max_factor\
    \ = i;\n            max_factor_index = i;\n            n /= i;\n        }\n  \
    \  }\n    return max_factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long largest = i;\n    while (i <= n / i) {\n   \
    \     if (n % i == 0) {\n            largest = i;\n        }\n        ++i;\n \
    \   }\n    return largest;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpfwx6s3ww: /tmp/tmpfwx6s3ww.cpp:17: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_factor = 0;\n    while(i < n) {\n      \
    \  if(n%i == 0) {\n            if(i*i > max_factor) {\n                max_factor\
    \ = i*i;\n            }\n        }\n        i++;\n    }\n    return max_factor;\n\
    }\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmpfpdp_m7w: /tmp/tmpfpdp_m7w.cpp:19: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142974
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_i = n;\n    while (i < max_i) {\n      \
    \  if (n % i == 0) {\n            max_i = i;\n        }\n        ++i;\n    }\n\
    \    return max_i;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmprmbyc9h6: /tmp/tmprmbyc9h6.cpp:17: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (int\
    \ i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            max_factor = i;\n\
    \            max_factor_index = i;\n        }\n    }\n    return max_factor;\n\
    }\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmp0f868w7e: /tmp/tmp0f868w7e.cpp:17: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long p = 2;\n    long q = n;\n    long r = n;\n    while (q != 1)\
    \ {\n        while (r % p == 0) {\n            q = q / p;\n        }\n       \
    \ p = p * q;\n        r = n;\n    }\n    return p;\n}\nint main() {\n    auto\
    \ candidate = largest_prime_factor;\n    assert(candidate((15)) == (5));\n   \
    \ assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n    assert(candidate((330))\
    \ == (11));\n    assert(candidate((13195)) == (29));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660142979
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_i = n;\n    long max_factor = 1;\n    while\
    \ (i < max_i) {\n        if (n % i == 0) {\n            max_factor = i;\n    \
    \        max_i = max_i / i;\n        }\n        i++;\n    }\n    return max_factor;\n\
    }\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmpw6fytvkt: /tmp/tmpw6fytvkt.cpp:19: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i =\
    \ 2;\n    while (i < n) {\n        if (n % i == 0) {\n            max_factor =\
    \ i;\n            max_factor_index = i;\n        }\n        i += 2;\n    }\n \
    \   return max_factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp3vvdwvuy: /tmp/tmp3vvdwvuy.cpp:19: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (int\
    \ i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            long factor =\
    \ i / max_factor;\n            if (factor > max_factor) {\n                max_factor\
    \ = factor;\n                max_factor_index = i;\n            }\n        }\n\
    \    }\n    return max_factor_index;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp_b4y3qiw: /tmp/tmp_b4y3qiw.cpp:20: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_i = 1;\n    while (i <= n && n % i == 0)\
    \ {\n        max_i = i;\n        i += 2;\n    }\n    return max_i;\n}\nint main()\
    \ {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15)) ==\
    \ (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n\
    \    assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
    }\n"
  status: Exception
  stderr: 'tmpads92_nv: /tmp/tmpads92_nv.cpp:15: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long p = 2;\n    long q = 3;\n    long r = n;\n    while (r != 1)\
    \ {\n        while (r % p == 0) {\n            p = p * q;\n        }\n       \
    \ while (r % q == 0) {\n            q = q * p;\n        }\n        r = r / q;\n\
    \    }\n    return p;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i =\
    \ 2;\n    while (i <= n) {\n        if (n % i == 0) {\n            long j = 2;\n\
    \            while (j * i <= n) {\n                if (n % i == 0) {\n       \
    \             max_factor = i;\n                    max_factor_index = j;\n   \
    \                 break;\n                }\n                j++;\n          \
    \  }\n        }\n        i++;\n    }\n    return max_factor;\n}\nint main() {\n\
    \    auto candidate = largest_prime_factor;\n    assert(candidate((15)) == (5));\n\
    \    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n  \
    \  assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
    }\n"
  status: Exception
  stderr: 'tmph8zpwe4a: /tmp/tmph8zpwe4a.cpp:27: int main(): Assertion `candidate((27))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_i = n;\n    long max_factor = 1;\n    while\
    \ (i < max_i) {\n        if (n % i == 0) {\n            max_factor = i;\n    \
    \        max_i = max_i / i;\n        }\n        ++i;\n    }\n    return max_factor;\n\
    }\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmp35o5f7s4: /tmp/tmp35o5f7s4.cpp:19: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long largest = i;\n    while (i <= n / i) {\n   \
    \     if (n % i == 0) {\n            largest = i;\n        }\n        i++;\n \
    \   }\n    return largest;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp4lljgae7: /tmp/tmp4lljgae7.cpp:17: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i;\n\
    \    for (i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long factor\
    \ = i / max_factor;\n            if (factor > max_factor) {\n                max_factor\
    \ = factor;\n                max_factor_index = i;\n            }\n        }\n\
    \    }\n    return max_factor_index;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpgfici7rs: /tmp/tmpgfici7rs.cpp:21: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 0;\n    long max_factor_index = 0;\n    long i =\
    \ 2;\n    while (i < n) {\n        if (n % i == 0) {\n            long j = 2;\n\
    \            while (j < i) {\n                if (n % j == 0) {\n            \
    \        max_factor = j;\n                    max_factor_index = i;\n        \
    \            break;\n                }\n                j++;\n            }\n\
    \        }\n        i++;\n    }\n    return max_factor_index;\n}\nint main() {\n\
    \    auto candidate = largest_prime_factor;\n    assert(candidate((15)) == (5));\n\
    \    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n  \
    \  assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
    }\n"
  status: Exception
  stderr: 'tmpauk2ri0v: /tmp/tmpauk2ri0v.cpp:27: int main(): Assertion `candidate((27))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 0;\n    long max_factor_index = 0;\n    long i =\
    \ 2;\n    while (i <= sqrt(n)) {\n        if (n % i == 0) {\n            long\
    \ j = i;\n            while (j <= sqrt(n)) {\n                if (n % j == 0)\
    \ {\n                    max_factor_index = j;\n                    break;\n \
    \               }\n                j++;\n            }\n            if (max_factor\
    \ < max_factor_index) {\n                max_factor = max_factor_index;\n    \
    \        }\n        }\n        i++;\n    }\n    return max_factor;\n}\nint main()\
    \ {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15)) ==\
    \ (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n\
    \    assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
    }\n"
  status: Exception
  stderr: 'tmp5joe2eus: /tmp/tmp5joe2eus.cpp:28: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 0;\n    long max_factor_index = 0;\n    long i =\
    \ 2;\n    long j;\n    while (i < n) {\n        if (n % i == 0) {\n          \
    \  j = i;\n            while (j < n) {\n                if (n % j == 0) {\n  \
    \                  j++;\n                } else {\n                    break;\n\
    \                }\n            }\n            if (j > max_factor) {\n       \
    \         max_factor = j;\n                max_factor_index = i;\n           \
    \ }\n        }\n        i++;\n    }\n    return max_factor_index;\n}\nint main()\
    \ {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15)) ==\
    \ (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n\
    \    assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
    }\n"
  status: Exception
  stderr: 'tmpwfch_r79: /tmp/tmpwfch_r79.cpp:31: int main(): Assertion `candidate((27))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long largest = i;\n    while (i < n) {\n        if\
    \ (n % i == 0) {\n            largest = i;\n        }\n        i++;\n    }\n \
    \   return largest;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpis6myyqy: /tmp/tmpis6myyqy.cpp:18: int main(): Assertion `candidate((27))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long i = 2;\n    long p = 1;\n    while (i <= n)\
    \ {\n        if (n % i == 0) {\n            ans = i;\n            while (n % i\
    \ == 0) {\n                n /= i;\n                ++p;\n            }\n    \
    \    }\n        ++i;\n    }\n    return ans * p;\n}\nint main() {\n    auto candidate\
    \ = largest_prime_factor;\n    assert(candidate((15)) == (5));\n    assert(candidate((27))\
    \ == (3));\n    assert(candidate((63)) == (7));\n    assert(candidate((330)) ==\
    \ (11));\n    assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp7ywur5w5: /tmp/tmp7ywur5w5.cpp:22: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long i = 2;\n    while (i < n) {\n        if (n\
    \ % i == 0) {\n            ans = i;\n            break;\n        }\n        i++;\n\
    \    }\n    return ans;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp1skgiyuj: /tmp/tmp1skgiyuj.cpp:18: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (int\
    \ i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            long factor =\
    \ i / max_factor;\n            if (factor > max_factor) {\n                max_factor\
    \ = factor;\n                max_factor_index = i;\n            }\n        }\n\
    \    }\n    return max_factor_index;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp_b4y3qiw: /tmp/tmp_b4y3qiw.cpp:20: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_i = n;\n    long max_factor = 1;\n    while\
    \ (i < max_i) {\n        if (n % i == 0) {\n            max_factor = i;\n    \
    \        max_i = max_i / i;\n        }\n        i++;\n    }\n    return max_factor;\n\
    }\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmpw6fytvkt: /tmp/tmpw6fytvkt.cpp:19: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long factor = 2;\n    long i = 2;\n    while (i <= n/factor) {\n \
    \       if (n % i == 0) {\n            factor = i;\n        }\n        ++i;\n\
    \    }\n    return factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpy2z0i5wo: /tmp/tmpy2z0i5wo.cpp:18: int main(): Assertion `candidate((27))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (int\
    \ i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long factor =\
    \ i / max_factor;\n            if (factor > max_factor) {\n                max_factor\
    \ = factor;\n                max_factor_index = i;\n            }\n        }\n\
    \    }\n    return max_factor_index;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpe9wzwnuj: /tmp/tmpe9wzwnuj.cpp:20: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long largest = 2;\n    while (i <= n / 2) {\n   \
    \     if (n % i == 0) {\n            largest = i;\n        }\n        i++;\n \
    \   }\n    return largest;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmptdhp4qli: /tmp/tmptdhp4qli.cpp:18: int main(): Assertion `candidate((27))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660142977
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_i = n;\n    long max_factor = 1;\n    while\
    \ (i < max_i) {\n        if (n % i == 0) {\n            max_factor = i;\n    \
    \        max_i = max_i / i;\n        }\n        ++i;\n    }\n    return max_factor;\n\
    }\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmp35o5f7s4: /tmp/tmp35o5f7s4.cpp:19: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long i = 2;\n    while (i <= n) {\n        if (n\
    \ % i == 0) {\n            ans = i;\n            while (n % i == 0) {\n      \
    \          n /= i;\n            }\n        }\n        i++;\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660142977
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_factor = 1;\n    while (i < n) {\n     \
    \   if (n % i == 0) {\n            max_factor = i;\n        }\n        i++;\n\
    \    }\n    return max_factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpmlcwy016: /tmp/tmpmlcwy016.cpp:18: int main(): Assertion `candidate((27))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660142977
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (long\
    \ i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long j = max_factor;\n\
    \            while (n % i == 0) {\n                n /= i;\n                j++;\n\
    \            }\n            if (j > max_factor) {\n                max_factor\
    \ = j;\n                max_factor_index = i;\n            }\n        }\n    }\n\
    \    return max_factor_index;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660142977
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long i = 2;\n    while (i <= n / 2) {\n       \
    \ if (n % i == 0) {\n            ans = i;\n            while (n % i == 0) {\n\
    \                n /= i;\n                ++i;\n            }\n        }\n   \
    \     ++i;\n    }\n    return ans;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpwu_6sxov: /tmp/tmpwu_6sxov.cpp:21: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142977
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max = 2;\n    while (i <= n / 2) {\n       \
    \ if (n % i == 0) {\n            max = i;\n        }\n        i += 2;\n    }\n\
    \    return max;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp_gg5gvo4: /tmp/tmp_gg5gvo4.cpp:17: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142977
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_i = i;\n    while (i < n && n % i == 0)\
    \ {\n        max_i = i;\n        i += 2;\n    }\n    return max_i;\n}\nint main()\
    \ {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15)) ==\
    \ (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n\
    \    assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
    }\n"
  status: Exception
  stderr: 'tmpoxpuvt9t: /tmp/tmpoxpuvt9t.cpp:15: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142977
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long largest = i;\n    long factor = 1;\n    while\
    \ (i <= n) {\n        if (n % i == 0) {\n            factor = i;\n           \
    \ largest = i;\n        }\n        ++i;\n    }\n    return factor;\n}\nint main()\
    \ {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15)) ==\
    \ (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n\
    \    assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
    }\n"
  status: Exception
  stderr: 'tmp6v6_rfhb: /tmp/tmp6v6_rfhb.cpp:19: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142977
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long p = 2;\n    long q = n;\n    long r = n;\n    long s = 2;\n \
    \   long t = 3;\n    long u = 3;\n    long v = 3;\n    long w = 3;\n    long x\
    \ = 2;\n    long y = 2;\n    long z = 2;\n    long a = 1;\n    long b = 1;\n \
    \   long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g\
    \ = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n \
    \   long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p\
    \ = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n \
    \   long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y\
    \ = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n \
    \   long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h\
    \ = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n \
    \   long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q\
    \ = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n \
    \   long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z\
    \ = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n \
    \   long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i\
    \ = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n \
    \   long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long r\
    \ = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n \
    \   long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long a\
    \ = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n \
    \   long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long j\
    \ = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n    long \n}\nint main()\
    \ {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15)) ==\
    \ (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n\
    \    assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpvfmpe3iw.cpp: In function \u2018long int largest_prime_factor(long\
    \ int)\u2019:\n/tmp/tmpvfmpe3iw.cpp:29:10: error: declaration of \u2018long int\
    \ n\u2019 shadows a parameter\n   29 |     long n = 1;\n      |          ^\n/tmp/tmpvfmpe3iw.cpp:31:10:\
    \ error: redeclaration of \u2018long int p\u2019\n   31 |     long p = 1;\n  \
    \    |          ^\n/tmp/tmpvfmpe3iw.cpp:5:10: note: \u2018long int p\u2019 previously\
    \ declared here\n    5 |     long p = 2;\n      |          ^\n/tmp/tmpvfmpe3iw.cpp:32:10:\
    \ error: redeclaration of \u2018long int q\u2019\n   32 |     long q = 1;\n  \
    \    |          ^\n/tmp/tmpvfmpe3iw.cpp:6:10: note: \u2018long int q\u2019 previously\
    \ declared here\n    6 |     long q = n;\n      |          ^\n/tmp/tmpvfmpe3iw.cpp:33:10:\
    \ error: redeclaration of \u2018long int r\u2019\n   33 |     long r = 1;\n  \
    \    |          ^\n/tmp/tmpvfmpe3iw.cpp:7:10: note: \u2018long int r\u2019 previously\
    \ declared here\n    7 |     long r = n;\n      |          ^\n/tmp/tmpvfmpe3iw.cpp:34:10:\
    \ error: redeclaration of \u2018long int s\u2019\n   34 |     long s = 1;\n  \
    \    |          ^\n/tmp/tmpvfmpe3iw.cpp:8:10: note: \u2018long int s\u2019 previously\
    \ declared here\n    8 |     long s = 2;\n      |          ^\n/tmp/tmpvfmpe3iw.cpp:35:10:\
    \ error: redeclaration of \u2018long int t\u2019\n   35 |     long t = 1;\n  \
    \    |          ^\n/tmp/tmpvfmpe3iw.cpp:9:10: note: \u2018long int t\u2019 previously\
    \ declared here\n    9 |     long t = 3;\n      |          ^\n/tmp/tmpvfmpe3iw.cpp:36:10:\
    \ error: redeclaration of \u2018long int u\u2019\n   36 |     long u = 1;\n  \
    \    |          ^\n/tmp/tmpvfmpe3iw.cpp:10:10: note: \u2018long int u\u2019 previously\
    \ declared here\n   10 |     long u = 3;\n      |          ^\n/tmp/tmpvfmpe3iw.cpp:37:10:\
    \ error: redeclaration of \u2018long int v\u2019\n   37 |     long v = 1;\n  \
    \    |          ^\n/tmp/tmpvfmpe3iw.cpp:11:10: note: \u2018long int v\u2019 previously\
    \ declared here\n   11 |     long v = 3;\n      |          ^\n/tmp/tmpvfmpe3iw.cpp:38:10:\
    \ error: redeclaration of \u2018long int w\u2019\n   38 |     long w = 1;\n  \
    \    |          ^\n/tmp/tmpvfmpe3iw.cpp:12:10: note: \u2018long int w\u2019 previously\
    \ declared here\n   12 |     long w = 3;\n      |      "
  stdout: ''
  timestamp: 1660142974
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long largest = i;\n    while (i < n) {\n        if\
    \ (n % i == 0) {\n            largest = i;\n        }\n        i++;\n    }\n \
    \   return largest;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpis6myyqy: /tmp/tmpis6myyqy.cpp:18: int main(): Assertion `candidate((27))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_i = n;\n    long max_factor = 1;\n    while\
    \ (i < max_i) {\n        if (n % i == 0) {\n            max_factor = i;\n    \
    \        max_i = max_i / i;\n        }\n        i++;\n    }\n    return max_factor;\n\
    }\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmpw6fytvkt: /tmp/tmpw6fytvkt.cpp:19: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long largest = i;\n    while (i < n) {\n        if\
    \ (n % i == 0) {\n            largest = i;\n        }\n        i++;\n    }\n \
    \   return largest;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpis6myyqy: /tmp/tmpis6myyqy.cpp:18: int main(): Assertion `candidate((27))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_factor = 1;\n    while (i <= n / i) {\n\
    \        if (n % i == 0) {\n            max_factor = i;\n        }\n        ++i;\n\
    \    }\n    return max_factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp6q1bpc4o: /tmp/tmp6q1bpc4o.cpp:17: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142977
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (long\
    \ i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long factor =\
    \ i / max_factor;\n            if (factor > max_factor) {\n                max_factor\
    \ = factor;\n                max_factor_index = i;\n            }\n        }\n\
    \    }\n    return max_factor_index;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpckp38v7j: /tmp/tmpckp38v7j.cpp:20: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142978
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_i = n;\n    long max_factor = 1;\n    while\
    \ (i <= max_i) {\n        if (n % i == 0) {\n            max_factor = i;\n   \
    \         max_i = max_factor;\n        }\n        ++i;\n    }\n    return max_factor;\n\
    }\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmpj5kmjqtq: /tmp/tmpj5kmjqtq.cpp:19: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142977
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long largest = i;\n    while (i < n) {\n        if\
    \ (n % i == 0) {\n            largest = i;\n        }\n        ++i;\n    }\n \
    \   return largest;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp2ql397qd: /tmp/tmp2ql397qd.cpp:18: int main(): Assertion `candidate((27))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660142977
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long p = 2;\n    long q = n;\n    long r = n;\n    long s = 2;\n \
    \   long t = 3;\n    long u = 3;\n    long v = 3;\n    long w = 3;\n    long x\
    \ = 3;\n    long y = 3;\n    long z = 3;\n    long a = 1;\n    long b = 1;\n \
    \   long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g\
    \ = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n \
    \   long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p\
    \ = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n \
    \   long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y\
    \ = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n \
    \   long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h\
    \ = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n \
    \   long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q\
    \ = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n \
    \   long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z\
    \ = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n \
    \   long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i\
    \ = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n \
    \   long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long r\
    \ = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n \
    \   long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long a\
    \ = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n \
    \   long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long j\
    \ = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n    long \n}\nint main()\
    \ {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15)) ==\
    \ (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n\
    \    assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpmpi7njf2.cpp: In function \u2018long int largest_prime_factor(long\
    \ int)\u2019:\n/tmp/tmpmpi7njf2.cpp:29:10: error: declaration of \u2018long int\
    \ n\u2019 shadows a parameter\n   29 |     long n = 1;\n      |          ^\n/tmp/tmpmpi7njf2.cpp:31:10:\
    \ error: redeclaration of \u2018long int p\u2019\n   31 |     long p = 1;\n  \
    \    |          ^\n/tmp/tmpmpi7njf2.cpp:5:10: note: \u2018long int p\u2019 previously\
    \ declared here\n    5 |     long p = 2;\n      |          ^\n/tmp/tmpmpi7njf2.cpp:32:10:\
    \ error: redeclaration of \u2018long int q\u2019\n   32 |     long q = 1;\n  \
    \    |          ^\n/tmp/tmpmpi7njf2.cpp:6:10: note: \u2018long int q\u2019 previously\
    \ declared here\n    6 |     long q = n;\n      |          ^\n/tmp/tmpmpi7njf2.cpp:33:10:\
    \ error: redeclaration of \u2018long int r\u2019\n   33 |     long r = 1;\n  \
    \    |          ^\n/tmp/tmpmpi7njf2.cpp:7:10: note: \u2018long int r\u2019 previously\
    \ declared here\n    7 |     long r = n;\n      |          ^\n/tmp/tmpmpi7njf2.cpp:34:10:\
    \ error: redeclaration of \u2018long int s\u2019\n   34 |     long s = 1;\n  \
    \    |          ^\n/tmp/tmpmpi7njf2.cpp:8:10: note: \u2018long int s\u2019 previously\
    \ declared here\n    8 |     long s = 2;\n      |          ^\n/tmp/tmpmpi7njf2.cpp:35:10:\
    \ error: redeclaration of \u2018long int t\u2019\n   35 |     long t = 1;\n  \
    \    |          ^\n/tmp/tmpmpi7njf2.cpp:9:10: note: \u2018long int t\u2019 previously\
    \ declared here\n    9 |     long t = 3;\n      |          ^\n/tmp/tmpmpi7njf2.cpp:36:10:\
    \ error: redeclaration of \u2018long int u\u2019\n   36 |     long u = 1;\n  \
    \    |          ^\n/tmp/tmpmpi7njf2.cpp:10:10: note: \u2018long int u\u2019 previously\
    \ declared here\n   10 |     long u = 3;\n      |          ^\n/tmp/tmpmpi7njf2.cpp:37:10:\
    \ error: redeclaration of \u2018long int v\u2019\n   37 |     long v = 1;\n  \
    \    |          ^\n/tmp/tmpmpi7njf2.cpp:11:10: note: \u2018long int v\u2019 previously\
    \ declared here\n   11 |     long v = 3;\n      |          ^\n/tmp/tmpmpi7njf2.cpp:38:10:\
    \ error: redeclaration of \u2018long int w\u2019\n   38 |     long w = 1;\n  \
    \    |          ^\n/tmp/tmpmpi7njf2.cpp:12:10: note: \u2018long int w\u2019 previously\
    \ declared here\n   12 |     long w = 3;\n      |      "
  stdout: ''
  timestamp: 1660142977
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (long\
    \ i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long j;\n    \
    \        for (j = i; j <= n; j += i) {\n                if (n % j == 0) {\n  \
    \                  break;\n                }\n            }\n            if (j\
    \ > max_factor) {\n                max_factor = j;\n                max_factor_index\
    \ = i;\n            }\n        }\n    }\n    return max_factor;\n}\nint main()\
    \ {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15)) ==\
    \ (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n\
    \    assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
    }\n"
  status: Exception
  stderr: 'tmpbbndz7_1: /tmp/tmpbbndz7_1.cpp:25: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142978
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_factor = 1;\n    while (i <= n / i) {\n\
    \        if (n % i == 0) {\n            max_factor = i;\n        }\n        ++i;\n\
    \    }\n    return max_factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp6q1bpc4o: /tmp/tmp6q1bpc4o.cpp:17: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142977
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long largest = i;\n    while (i < n) {\n        if\
    \ (n % i == 0) {\n            largest = i;\n        }\n        i++;\n    }\n \
    \   return largest;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpis6myyqy: /tmp/tmpis6myyqy.cpp:18: int main(): Assertion `candidate((27))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_factor = 1;\n    while (i <= sqrt(n)) {\n\
    \        if (n % i == 0) {\n            max_factor = i;\n        }\n        ++i;\n\
    \    }\n    return max_factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmplua1vwmv: /tmp/tmplua1vwmv.cpp:17: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142978
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_i = n;\n    while (i < max_i) {\n      \
    \  if (n % i == 0) {\n            max_i = i;\n        }\n        ++i;\n    }\n\
    \    return max_i;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmprmbyc9h6: /tmp/tmprmbyc9h6.cpp:17: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i =\
    \ 2;\n    while (i < n) {\n        if (n % i == 0) {\n            long j = i;\n\
    \            while (j < n) {\n                if (n % j == 0) {\n            \
    \        max_factor_index = j;\n                    break;\n                }\n\
    \                j++;\n            }\n            if (max_factor_index > max_factor)\
    \ {\n                max_factor = max_factor_index;\n            }\n        }\n\
    \        i++;\n    }\n    return max_factor;\n}\nint main() {\n    auto candidate\
    \ = largest_prime_factor;\n    assert(candidate((15)) == (5));\n    assert(candidate((27))\
    \ == (3));\n    assert(candidate((63)) == (7));\n    assert(candidate((330)) ==\
    \ (11));\n    assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmprcj86o3e: /tmp/tmprcj86o3e.cpp:29: int main(): Assertion `candidate((27))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660142977
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_factor = 1;\n    while (i < n) {\n     \
    \   if (n % i == 0) {\n            max_factor = i;\n        }\n        i++;\n\
    \    }\n    return max_factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpmlcwy016: /tmp/tmpmlcwy016.cpp:18: int main(): Assertion `candidate((27))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660142977
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_factor = 1;\n    while (i < n) {\n     \
    \   if (n % i == 0) {\n            max_factor = i;\n        }\n        i += 2;\n\
    \    }\n    return max_factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpeh3zsijs: /tmp/tmpeh3zsijs.cpp:17: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142977
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_i = n;\n    while (i < max_i) {\n      \
    \  if (n % i == 0) {\n            long j = 2;\n            long max_j = i;\n \
    \           while (j < max_j) {\n                if (i % j == 0) {\n         \
    \           break;\n                }\n                j++;\n            }\n \
    \           if (j == max_j) {\n                return i;\n            }\n    \
    \    }\n        i++;\n    }\n    return n;\n}\nint main() {\n    auto candidate\
    \ = largest_prime_factor;\n    assert(candidate((15)) == (5));\n    assert(candidate((27))\
    \ == (3));\n    assert(candidate((63)) == (7));\n    assert(candidate((330)) ==\
    \ (11));\n    assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp_91qonwz: /tmp/tmp_91qonwz.cpp:27: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142977
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 0;\n    long max_factor_index = 0;\n    long i =\
    \ 2;\n    while (i < n) {\n        if (n % i == 0) {\n            long j = i;\n\
    \            while (j < n) {\n                if (n % j == 0) {\n            \
    \        break;\n                }\n                j++;\n            }\n    \
    \        if (j > i) {\n                i = j;\n            }\n        }\n    \
    \    i++;\n    }\n    while (max_factor < i && max_factor_index < i) {\n     \
    \   max_factor = i;\n        max_factor_index = i;\n        i++;\n    }\n    return\
    \ max_factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n \
    \   assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n   \
    \ assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n   \
    \ assert(candidate((13195)) == (29));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660142982
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_i = n;\n    while (i < max_i) {\n      \
    \  if (n % i == 0) {\n            max_i = i;\n        }\n        ++i;\n    }\n\
    \    return max_i;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmprmbyc9h6: /tmp/tmprmbyc9h6.cpp:17: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (int\
    \ i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long factor =\
    \ i / max_factor;\n            if (factor > max_factor) {\n                max_factor\
    \ = factor;\n                max_factor_index = i;\n            }\n        }\n\
    \    }\n    return max_factor_index;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpe9wzwnuj: /tmp/tmpe9wzwnuj.cpp:20: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_i = n;\n    while (i < max_i) {\n      \
    \  if (n % i == 0) {\n            long j = 2;\n            while (j < i) {\n \
    \               if (i % j == 0) {\n                    max_i = i;\n          \
    \          break;\n                }\n                j++;\n            }\n  \
    \      }\n        i++;\n    }\n    return max_i;\n}\nint main() {\n    auto candidate\
    \ = largest_prime_factor;\n    assert(candidate((15)) == (5));\n    assert(candidate((27))\
    \ == (3));\n    assert(candidate((63)) == (7));\n    assert(candidate((330)) ==\
    \ (11));\n    assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp_l4pzt0g: /tmp/tmp_l4pzt0g.cpp:24: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142977
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i;\n\
    \    for (i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            max_factor\
    \ = i;\n            max_factor_index = i;\n        }\n    }\n    return max_factor;\n\
    }\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmp44v6xnit: /tmp/tmp44v6xnit.cpp:18: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142978
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (long\
    \ i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long factor =\
    \ i / max_factor;\n            if (factor > max_factor) {\n                max_factor\
    \ = factor;\n                max_factor_index = i;\n            }\n        }\n\
    \    }\n    return max_factor_index;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpckp38v7j: /tmp/tmpckp38v7j.cpp:20: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142978
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long i = 2;\n    while (i <= sqrt(n)) {\n\
    \        if (n % i == 0) {\n            max_factor = i;\n        }\n        i\
    \ += 1;\n    }\n    return max_factor;\n}\nint main() {\n    auto candidate =\
    \ largest_prime_factor;\n    assert(candidate((15)) == (5));\n    assert(candidate((27))\
    \ == (3));\n    assert(candidate((63)) == (7));\n    assert(candidate((330)) ==\
    \ (11));\n    assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpg0akhleh: /tmp/tmpg0akhleh.cpp:17: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142977
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_factor = 1;\n    while (i < n) {\n     \
    \   if (n % i == 0) {\n            max_factor = i;\n        }\n        ++i;\n\
    \    }\n    return max_factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp6mf83iej: /tmp/tmp6mf83iej.cpp:18: int main(): Assertion `candidate((27))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long p = 2;\n    long q = 3;\n    long r = n;\n    while (r > 1) {\n\
    \        while (r % p == 0) {\n            q = p * q;\n            r = r / p;\n\
    \        }\n        p = p * q;\n    }\n    return p;\n}\nint main() {\n    auto\
    \ candidate = largest_prime_factor;\n    assert(candidate((15)) == (5));\n   \
    \ assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n    assert(candidate((330))\
    \ == (11));\n    assert(candidate((13195)) == (29));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660142982
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i =\
    \ 2;\n    long j;\n    for (; i <= n; i++) {\n        for (j = i; j < n; j +=\
    \ i) {\n            if (n % j == 0) {\n                break;\n            }\n\
    \        }\n        if (j > max_factor) {\n            max_factor = j;\n     \
    \       max_factor_index = i;\n        }\n    }\n    return max_factor_index;\n\
    }\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmpr8qf7vu2: /tmp/tmpr8qf7vu2.cpp:24: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142977
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 0;\n    long max_factor_index = 0;\n    long i =\
    \ 2;\n    while (i < n) {\n        if (n % i == 0) {\n            long j = 2;\n\
    \            while (j < i) {\n                if (i % j == 0) {\n            \
    \        break;\n                }\n                j++;\n            }\n    \
    \        if (j > i) {\n                max_factor = i;\n                max_factor_index\
    \ = j;\n            }\n        }\n        i++;\n    }\n    return max_factor;\n\
    }\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmpnf235xsc: /tmp/tmpnf235xsc.cpp:28: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142978
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long p = 2;\n    long q = n;\n    long r = n;\n    long s = 2;\n \
    \   long t = 2;\n    long u = 2;\n    long v = 2;\n    long w = 2;\n    long x\
    \ = 2;\n    long y = 2;\n    long z = 2;\n    long A = 2;\n    long B = 2;\n \
    \   long C = 2;\n    long D = 2;\n    long E = 2;\n    long F = 2;\n    long G\
    \ = 2;\n    long H = 2;\n    long I = 2;\n    long J = 2;\n    long K = 2;\n \
    \   long L = 2;\n    long M = 2;\n    long N = 2;\n    long O = 2;\n    long P\
    \ = 2;\n    long Q = 2;\n    long R = 2;\n    long S = 2;\n    long T = 2;\n \
    \   long U = 2;\n    long V = 2;\n    long W = 2;\n    long X = 2;\n    long Y\
    \ = 2;\n    long Z = 2;\n    long aa = 2;\n    long ab = 2;\n    long ac = 2;\n\
    \    long ad = 2;\n    long ae = 2;\n    long af = 2;\n    long ag = 2;\n    long\
    \ ah = 2;\n    long ai = 2;\n    long aj = 2;\n    long ak = 2;\n    long al =\
    \ 2;\n    long am = 2;\n    long an = 2;\n    long ao = 2;\n    long ap = 2;\n\
    \    long aq = 2;\n    long ar = 2;\n    long as = 2;\n    long at = 2;\n    long\
    \ au = 2;\n    long av = 2;\n    long aw = 2;\n    long ax = 2;\n    long ay =\
    \ 2;\n    long az = 2;\n    long ba = 2;\n    long bb = 2;\n    long bc = 2;\n\
    \    long bd = 2;\n    long be = 2;\n    long bf = 2;\n    long bg = 2;\n    long\
    \ bh = 2;\n    long bi = 2;\n    long bj = 2;\n    long bk = 2;\n    long bl =\
    \ 2;\n    long bm = 2;\n    long bn = 2;\n    long bo = 2;\n    long bp = 2;\n\
    \    long bq = 2;\n    long br = 2;\n    long bs = 2;\n    long bt = 2;\n    long\
    \ bu = 2;\n    long bv = 2;\n    long bw = 2;\n    long bx = 2;\n    long by =\
    \ 2;\n    long bz = 2;\n    long ca = 2;\n    long cb = 2;\n    long cc = 2;\n\
    \    long cd = 2;\n    long ce = 2;\n    long cf = 2;\n    long cg = 2;\n    long\
    \ ch = 2;\n    long ci = 2;\n    long cj = 2;\n    long ck = 2;\n    long cl =\
    \ 2;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmppo0r7by_: /tmp/tmppo0r7by_.cpp:109: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142977
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (int\
    \ i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long factor =\
    \ i / max_factor;\n            if (factor > max_factor) {\n                max_factor\
    \ = factor;\n                max_factor_index = i;\n            }\n        }\n\
    \    }\n    return max_factor_index;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpe9wzwnuj: /tmp/tmpe9wzwnuj.cpp:20: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (int\
    \ i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long factor =\
    \ i / max_factor;\n            if (factor > max_factor) {\n                max_factor\
    \ = factor;\n                max_factor_index = i;\n            }\n        }\n\
    \    }\n    return max_factor_index;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpe9wzwnuj: /tmp/tmpe9wzwnuj.cpp:20: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_i = n;\n    long max_factor = 1;\n    while\
    \ (i <= max_i) {\n        if (n % i == 0) {\n            max_factor = i;\n   \
    \         max_i = max_i / i;\n        }\n        ++i;\n    }\n    return max_factor;\n\
    }\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmpyd1_92yy: /tmp/tmpyd1_92yy.cpp:20: int main(): Assertion `candidate((27))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660142977
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i =\
    \ 2;\n    while (i < n) {\n        if (n % i == 0) {\n            long j = i;\n\
    \            while (j < n) {\n                if (n % j == 0) {\n            \
    \        max_factor_index = j;\n                    break;\n                }\n\
    \                j++;\n            }\n            max_factor = i;\n          \
    \  break;\n        }\n        i++;\n    }\n    return max_factor;\n}\nint main()\
    \ {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15)) ==\
    \ (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n\
    \    assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
    }\n"
  status: Exception
  stderr: 'tmplk0nbwj9: /tmp/tmplk0nbwj9.cpp:27: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142978
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_factor = 0;\n    while (i <= n) {\n    \
    \    if (n % i == 0) {\n            max_factor = i;\n        }\n        i++;\n\
    \    }\n    return max_factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpl20xenwy: /tmp/tmpl20xenwy.cpp:17: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142977
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long largest = i;\n    while (i < n) {\n        if\
    \ (n % i == 0) {\n            largest = i;\n        }\n        i++;\n    }\n \
    \   return largest;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpis6myyqy: /tmp/tmpis6myyqy.cpp:18: int main(): Assertion `candidate((27))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (int\
    \ i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            long j = max_factor;\n\
    \            while (n % i == 0) {\n                n /= i;\n                j++;\n\
    \            }\n            if (j > max_factor) {\n                max_factor\
    \ = j;\n                max_factor_index = i;\n            }\n        }\n    }\n\
    \    return max_factor_index;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660142982
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (int\
    \ i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long factor =\
    \ i / max_factor;\n            if (factor > max_factor) {\n                max_factor\
    \ = factor;\n                max_factor_index = i;\n            }\n        }\n\
    \    }\n    return max_factor_index;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpe9wzwnuj: /tmp/tmpe9wzwnuj.cpp:20: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (int\
    \ i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            long factor =\
    \ i / max_factor;\n            if (factor > max_factor) {\n                max_factor\
    \ = factor;\n                max_factor_index = i;\n            }\n        }\n\
    \    }\n    return max_factor_index;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp_b4y3qiw: /tmp/tmp_b4y3qiw.cpp:20: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long largest = i;\n    while (i <= n / i) {\n   \
    \     if (n % i == 0) {\n            largest = i;\n        }\n        ++i;\n \
    \   }\n    return largest;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpfwx6s3ww: /tmp/tmpfwx6s3ww.cpp:17: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long i = 2;\n    while (i <= n / 2) {\n       \
    \ if (n % i == 0) {\n            ans = i;\n            while (n % i == 0) {\n\
    \                n /= i;\n            }\n        }\n        i++;\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmpc_wvy3ne: /tmp/tmpc_wvy3ne.cpp:20: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142977
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long i = 2;\n    while (i <= n / 2) {\n\
    \        if (n % i == 0) {\n            while (i <= n / 2 && n % i == 0) {\n \
    \               ++i;\n            }\n            if (i > max_factor) {\n     \
    \           max_factor = i;\n            }\n        }\n        ++i;\n    }\n \
    \   return max_factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpo_e2f6c7: /tmp/tmpo_e2f6c7.cpp:22: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142977
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i;\n\
    \    for (i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long j;\n\
    \            for (j = i; j <= n; j += i) {\n                if (n % j == 0) {\n\
    \                    break;\n                }\n            }\n            if\
    \ (j > max_factor) {\n                max_factor = j;\n                max_factor_index\
    \ = i;\n            }\n        }\n    }\n    return max_factor_index;\n}\nint\
    \ main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmph8klj12r: /tmp/tmph8klj12r.cpp:26: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142977
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_i = n;\n    long max_factor = 1;\n    while\
    \ (i < max_i) {\n        if (n % i == 0) {\n            max_factor = i;\n    \
    \        max_i = max_i / i;\n        }\n        ++i;\n    }\n    return max_factor;\n\
    }\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmp35o5f7s4: /tmp/tmp35o5f7s4.cpp:19: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long largest = i;\n    while (i < n) {\n        if\
    \ (n % i == 0) {\n            largest = i;\n        }\n        i++;\n    }\n \
    \   return largest;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpis6myyqy: /tmp/tmpis6myyqy.cpp:18: int main(): Assertion `candidate((27))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 0;\n    long max_factor_index = 0;\n    for (long\
    \ i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long j = i;\n\
    \            while (j > 1) {\n                if (n % j == 0) {\n            \
    \        break;\n                }\n                j--;\n            }\n    \
    \        if (j > max_factor) {\n                max_factor = j;\n            \
    \    max_factor_index = i;\n            }\n        }\n    }\n    return max_factor_index;\n\
    }\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmpqtp1s4_u: /tmp/tmpqtp1s4_u.cpp:26: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142977
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i =\
    \ 2;\n    while (i <= n && max_factor < n) {\n        if (n % i == 0) {\n    \
    \        max_factor = i;\n            max_factor_index = i;\n        }\n     \
    \   i += 2;\n    }\n    return max_factor_index;\n}\nint main() {\n    auto candidate\
    \ = largest_prime_factor;\n    assert(candidate((15)) == (5));\n    assert(candidate((27))\
    \ == (3));\n    assert(candidate((63)) == (7));\n    assert(candidate((330)) ==\
    \ (11));\n    assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpdo2oaw30: /tmp/tmpdo2oaw30.cpp:19: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142977
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long p = 2;\n    while (p < n && n % p == 0) {\n        p = p * 2\
    \ + 1;\n    }\n    return p;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpn40ucn1l: /tmp/tmpn40ucn1l.cpp:13: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142978
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_i = n;\n    long max_factor = 1;\n    while\
    \ (i < max_i) {\n        if (n % i == 0) {\n            max_factor = i;\n    \
    \        max_i = max_i / i;\n        }\n        i++;\n    }\n    return max_factor;\n\
    }\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmpw6fytvkt: /tmp/tmpw6fytvkt.cpp:19: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long largest = i;\n    while (i <= n / i) {\n   \
    \     if (n % i == 0) {\n            largest = i;\n        }\n        i++;\n \
    \   }\n    return largest;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp4lljgae7: /tmp/tmp4lljgae7.cpp:17: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_factor = 1;\n    while (i < n) {\n     \
    \   if (n % i == 0) {\n            max_factor = i;\n        }\n        i++;\n\
    \    }\n    return max_factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpmlcwy016: /tmp/tmpmlcwy016.cpp:18: int main(): Assertion `candidate((27))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660142977
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (int\
    \ i = 1; i <= n; i++) {\n        // If n is divisible by i, then n is prime\n\
    \        if (n % i == 0) {\n            // If n is larger than the largest prime\
    \ factor so far, update max_factor\n            if (n > max_factor) {\n      \
    \          max_factor = n;\n                max_factor_index = i;\n          \
    \  }\n        }\n    }\n    return max_factor;\n}\nint main() {\n    auto candidate\
    \ = largest_prime_factor;\n    assert(candidate((15)) == (5));\n    assert(candidate((27))\
    \ == (3));\n    assert(candidate((63)) == (7));\n    assert(candidate((330)) ==\
    \ (11));\n    assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp8qyc98o3: /tmp/tmp8qyc98o3.cpp:21: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142977
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max = 2;\n    while (i <= n && n % i == 0) {\n\
    \        max = i;\n        i += 2;\n    }\n    return max;\n}\nint main() {\n\
    \    auto candidate = largest_prime_factor;\n    assert(candidate((15)) == (5));\n\
    \    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n  \
    \  assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
    }\n"
  status: Exception
  stderr: 'tmpgjzmcqyo: /tmp/tmpgjzmcqyo.cpp:15: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142978
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long i = 2;\n    while (i < n) {\n     \
    \   if (n % i == 0) {\n            max_factor = i;\n        }\n        i++;\n\
    \    }\n    return max_factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp3opwadd1: /tmp/tmp3opwadd1.cpp:18: int main(): Assertion `candidate((27))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660142978
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long largest = i;\n    while (i < n) {\n        if\
    \ (n % i == 0) {\n            largest = i;\n        }\n        i++;\n    }\n \
    \   return largest;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpis6myyqy: /tmp/tmpis6myyqy.cpp:18: int main(): Assertion `candidate((27))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_i = i;\n    long max_p = i;\n    while (i\
    \ < n) {\n        if (n % i == 0) {\n            max_p = i;\n            max_i\
    \ = i;\n        }\n        i += 2;\n    }\n    return max_p;\n}\nint main() {\n\
    \    auto candidate = largest_prime_factor;\n    assert(candidate((15)) == (5));\n\
    \    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n  \
    \  assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
    }\n"
  status: Exception
  stderr: 'tmp8tbsn8r4: /tmp/tmp8tbsn8r4.cpp:19: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142978
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 0;\n    long i = 2;\n    while (i < n) {\n     \
    \   if (n % i == 0) {\n            max_factor = i;\n        }\n        i++;\n\
    \    }\n    return max_factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpxghifc1_: /tmp/tmpxghifc1_.cpp:18: int main(): Assertion `candidate((27))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660142978
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i;\n\
    \    for(i = 2; i <= n; i++) {\n        if(n % i == 0) {\n            if(i * i\
    \ > n) {\n                max_factor = 1;\n                max_factor_index =\
    \ 0;\n            }\n            else {\n                max_factor = i;\n   \
    \             max_factor_index = i;\n            }\n        }\n    }\n    return\
    \ max_factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n \
    \   assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n   \
    \ assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n   \
    \ assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpd56ww1pn: /tmp/tmpd56ww1pn.cpp:24: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142978
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long largest = i;\n    while (i <= n) {\n       \
    \ if (n % i == 0) {\n            largest = i;\n        }\n        i++;\n    }\n\
    \    return largest;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp0ixkuhu3: /tmp/tmp0ixkuhu3.cpp:17: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142978
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long p = 2;\n    long q = n;\n    long r = n;\n    while (q != 0)\
    \ {\n        if (q % 2 == 0) {\n            q = (q / 2);\n        } else {\n \
    \           while (q % p == 0) {\n                p++;\n            }\n      \
    \      q = (q / p);\n        }\n        r = (r * p);\n    }\n    return r;\n}\n\
    int main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmpeqfyhhjg: /tmp/tmpeqfyhhjg.cpp:23: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142978
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (int\
    \ i = 2; i <= n; ++i) {\n        if (n % i == 0) {\n            max_factor_index\
    \ = i;\n            max_factor = i;\n        }\n    }\n    return max_factor;\n\
    }\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmpjqdbmmg8: /tmp/tmpjqdbmmg8.cpp:17: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142978
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_factor = 1;\n    while (i <= sqrt(n)) {\n\
    \        if (n % i == 0) {\n            max_factor = i;\n        }\n        ++i;\n\
    \    }\n    return max_factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmplua1vwmv: /tmp/tmplua1vwmv.cpp:17: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142978
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i =\
    \ 2;\n    while (i <= sqrt(n)) {\n        if (n % i == 0) {\n            max_factor\
    \ = i;\n            max_factor_index = i;\n        }\n        i += 2;\n    }\n\
    \    return max_factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpuhq3z5c6: /tmp/tmpuhq3z5c6.cpp:19: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142980
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i;\n\
    \    for (i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long factor\
    \ = i / max_factor;\n            if (factor > max_factor) {\n                max_factor\
    \ = factor;\n                max_factor_index = i;\n            }\n        }\n\
    \    }\n    return max_factor_index;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpgfici7rs: /tmp/tmpgfici7rs.cpp:21: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (long\
    \ i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long factor =\
    \ 1;\n            while (n % i == 0) {\n                n /= i;\n            \
    \    factor++;\n            }\n            if (factor > max_factor) {\n      \
    \          max_factor = factor;\n                max_factor_index = i;\n     \
    \       }\n        }\n    }\n    return max_factor_index;\n}\nint main() {\n \
    \   auto candidate = largest_prime_factor;\n    assert(candidate((15)) == (5));\n\
    \    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n  \
    \  assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
    }\n"
  status: Exception
  stderr: 'tmpaxu8ojsg: /tmp/tmpaxu8ojsg.cpp:24: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142980
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_factor = 1;\n    while (i < n) {\n     \
    \   if (n % i == 0) {\n            max_factor = i;\n        }\n        i++;\n\
    \    }\n    return max_factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpmlcwy016: /tmp/tmpmlcwy016.cpp:18: int main(): Assertion `candidate((27))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660142977
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long i = 2;\n    while(i <= n/2) {\n        if(n%i\
    \ == 0) {\n            ans = i;\n            break;\n        }\n        i += 2;\n\
    \    }\n    return ans;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpdhq8ofzm: /tmp/tmpdhq8ofzm.cpp:18: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142980
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_i = n;\n    while (i < max_i) {\n      \
    \  if (n % i == 0) {\n            long j = i;\n            while (j * j <= n)\
    \ {\n                if (n % j == 0) {\n                    max_i = n;\n     \
    \               break;\n                }\n                j++;\n            }\n\
    \        }\n        i++;\n    }\n    return max_i;\n}\nint main() {\n    auto\
    \ candidate = largest_prime_factor;\n    assert(candidate((15)) == (5));\n   \
    \ assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n    assert(candidate((330))\
    \ == (11));\n    assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpulh0m4go: /tmp/tmpulh0m4go.cpp:24: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142980
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long a = 2, b = 2, c = 2, d = 2, e = 2;\n    while (a <= n) {\n  \
    \      while (n % a == 0) {\n            n /= a;\n        }\n        while (n\
    \ % b == 0) {\n            n /= b;\n        }\n        while (n % c == 0) {\n\
    \            n /= c;\n        }\n        while (n % d == 0) {\n            n /=\
    \ d;\n        }\n        while (n % e == 0) {\n            n /= e;\n        }\n\
    \        if (n > 1) {\n            long temp = n;\n            n = a;\n      \
    \      a = b;\n            b = temp;\n        }\n        if (n > 2) {\n      \
    \      long temp = n;\n            n = c;\n            c = d;\n            d =\
    \ temp;\n        }\n        if (n > 3) {\n            long temp = n;\n       \
    \     n = e;\n            e = n;\n        }\n    }\n    return n;\n}\nint main()\
    \ {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15)) ==\
    \ (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n\
    \    assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
    }\n"
  status: Exception
  stderr: 'tmpy2c3czss: /tmp/tmpy2c3czss.cpp:44: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142980
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long factor = 1;\n    long i = 2;\n    while (i < n) {\n        if\
    \ (n % i == 0) {\n            factor *= i;\n            n /= i;\n        }\n \
    \       ++i;\n    }\n    return factor;\n}\nint main() {\n    auto candidate =\
    \ largest_prime_factor;\n    assert(candidate((15)) == (5));\n    assert(candidate((27))\
    \ == (3));\n    assert(candidate((63)) == (7));\n    assert(candidate((330)) ==\
    \ (11));\n    assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpvhka81gl: /tmp/tmpvhka81gl.cpp:18: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142980
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 0;\n    long max_factor_index = 0;\n    long i =\
    \ 2;\n    while (i <= sqrt(n)) {\n        if (n % i == 0) {\n            long\
    \ j = 2;\n            while (j * i <= n) {\n                if (n % j == 0) {\n\
    \                    break;\n                }\n                j++;\n       \
    \     }\n            if (j * i > n) {\n                max_factor = i;\n     \
    \           max_factor_index = j;\n            }\n        }\n        i++;\n  \
    \  }\n    return max_factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpnca1p46f: /tmp/tmpnca1p46f.cpp:28: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142980
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_factor = 1;\n    while (i < n) {\n     \
    \   if (n % i == 0) {\n            max_factor = i;\n        }\n        i += 2;\n\
    \    }\n    return max_factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpeh3zsijs: /tmp/tmpeh3zsijs.cpp:17: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142977
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_i = i;\n    long max_p = 1;\n    while (i\
    \ < n) {\n        if (n % i == 0) {\n            i += 1;\n            continue;\n\
    \        }\n        while (n % i == 0) {\n            i += 1;\n        }\n   \
    \     if (i > max_i) {\n            max_i = i;\n            max_p = 1;\n     \
    \   }\n        if (i == n) {\n            break;\n        }\n    }\n    return\
    \ max_p;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660142984
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_factor = 1;\n    while (i <= n / i) {\n\
    \        if (n % i == 0) {\n            max_factor = i;\n        }\n        ++i;\n\
    \    }\n    return max_factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp6q1bpc4o: /tmp/tmp6q1bpc4o.cpp:17: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142977
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_factor = 1;\n    while (i < n) {\n     \
    \   if (n % i == 0) {\n            max_factor = i;\n        }\n        i += 2;\n\
    \    }\n    return max_factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpeh3zsijs: /tmp/tmpeh3zsijs.cpp:17: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142977
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_factor = 1;\n    while (i <= n / i) {\n\
    \        if (n % i == 0) {\n            max_factor = i;\n        }\n        i++;\n\
    \    }\n    return max_factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpl_weckp8: /tmp/tmpl_weckp8.cpp:17: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142980
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_i = n;\n    long max_factor = 1;\n    while\
    \ (i < max_i) {\n        if (n % i == 0) {\n            max_factor = i;\n    \
    \        max_i = max_i / i;\n        }\n        i++;\n    }\n    return max_factor;\n\
    }\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmpw6fytvkt: /tmp/tmpw6fytvkt.cpp:19: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long p = 2;\n    long q = n;\n    long r = n;\n    long s = 2;\n \
    \   long t = 0;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x\
    \ = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n \
    \   long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g\
    \ = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n \
    \   long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p\
    \ = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n \
    \   long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y\
    \ = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n \
    \   long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h\
    \ = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n \
    \   long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q\
    \ = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n \
    \   long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z\
    \ = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n \
    \   long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i\
    \ = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n \
    \   long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long r\
    \ = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n \
    \   long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long a\
    \ = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n \
    \   long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long j\
    \ = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n    long \n}\nint main()\
    \ {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15)) ==\
    \ (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n\
    \    assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpdzlqfj89.cpp: In function \u2018long int largest_prime_factor(long\
    \ int)\u2019:\n/tmp/tmpdzlqfj89.cpp:29:10: error: declaration of \u2018long int\
    \ n\u2019 shadows a parameter\n   29 |     long n = 1;\n      |          ^\n/tmp/tmpdzlqfj89.cpp:31:10:\
    \ error: redeclaration of \u2018long int p\u2019\n   31 |     long p = 1;\n  \
    \    |          ^\n/tmp/tmpdzlqfj89.cpp:5:10: note: \u2018long int p\u2019 previously\
    \ declared here\n    5 |     long p = 2;\n      |          ^\n/tmp/tmpdzlqfj89.cpp:32:10:\
    \ error: redeclaration of \u2018long int q\u2019\n   32 |     long q = 1;\n  \
    \    |          ^\n/tmp/tmpdzlqfj89.cpp:6:10: note: \u2018long int q\u2019 previously\
    \ declared here\n    6 |     long q = n;\n      |          ^\n/tmp/tmpdzlqfj89.cpp:33:10:\
    \ error: redeclaration of \u2018long int r\u2019\n   33 |     long r = 1;\n  \
    \    |          ^\n/tmp/tmpdzlqfj89.cpp:7:10: note: \u2018long int r\u2019 previously\
    \ declared here\n    7 |     long r = n;\n      |          ^\n/tmp/tmpdzlqfj89.cpp:34:10:\
    \ error: redeclaration of \u2018long int s\u2019\n   34 |     long s = 1;\n  \
    \    |          ^\n/tmp/tmpdzlqfj89.cpp:8:10: note: \u2018long int s\u2019 previously\
    \ declared here\n    8 |     long s = 2;\n      |          ^\n/tmp/tmpdzlqfj89.cpp:35:10:\
    \ error: redeclaration of \u2018long int t\u2019\n   35 |     long t = 1;\n  \
    \    |          ^\n/tmp/tmpdzlqfj89.cpp:9:10: note: \u2018long int t\u2019 previously\
    \ declared here\n    9 |     long t = 0;\n      |          ^\n/tmp/tmpdzlqfj89.cpp:36:10:\
    \ error: redeclaration of \u2018long int u\u2019\n   36 |     long u = 1;\n  \
    \    |          ^\n/tmp/tmpdzlqfj89.cpp:10:10: note: \u2018long int u\u2019 previously\
    \ declared here\n   10 |     long u = 1;\n      |          ^\n/tmp/tmpdzlqfj89.cpp:37:10:\
    \ error: redeclaration of \u2018long int v\u2019\n   37 |     long v = 1;\n  \
    \    |          ^\n/tmp/tmpdzlqfj89.cpp:11:10: note: \u2018long int v\u2019 previously\
    \ declared here\n   11 |     long v = 1;\n      |          ^\n/tmp/tmpdzlqfj89.cpp:38:10:\
    \ error: redeclaration of \u2018long int w\u2019\n   38 |     long w = 1;\n  \
    \    |          ^\n/tmp/tmpdzlqfj89.cpp:12:10: note: \u2018long int w\u2019 previously\
    \ declared here\n   12 |     long w = 1;\n      |      "
  stdout: ''
  timestamp: 1660142979
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_i = n;\n    long max_factor = 1;\n    while\
    \ (i < max_i) {\n        if (n % i == 0) {\n            max_factor = i;\n    \
    \        max_i = max_i / i;\n        }\n        i++;\n    }\n    return max_factor;\n\
    }\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmpw6fytvkt: /tmp/tmpw6fytvkt.cpp:19: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long i = 2;\n    while (i <= sqrt(n)) {\n\
    \        if (n % i == 0) {\n            max_factor = i;\n        }\n        i++;\n\
    \    }\n    return max_factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp_jfyxw4e: /tmp/tmp_jfyxw4e.cpp:17: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_factor = 1;\n    while (i <= n / i) {\n\
    \        if (n % i == 0) {\n            max_factor = i;\n        }\n        ++i;\n\
    \    }\n    return max_factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp6q1bpc4o: /tmp/tmp6q1bpc4o.cpp:17: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142977
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long largest = i;\n    while (i <= n / i) {\n   \
    \     if (n % i == 0) {\n            largest = i;\n        }\n        i++;\n \
    \   }\n    return largest;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp4lljgae7: /tmp/tmp4lljgae7.cpp:17: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (int\
    \ i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            while (n % i ==\
    \ 0) {\n                n /= i;\n                max_factor_index = i;\n     \
    \       }\n            max_factor = i;\n        }\n    }\n    return max_factor;\n\
    }\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660142979
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_i = i;\n    while (i < n) {\n        if\
    \ (n % i == 0) {\n            n = n / i;\n            max_i = i;\n        }\n\
    \        i++;\n    }\n    return max_i;\n}\nint main() {\n    auto candidate =\
    \ largest_prime_factor;\n    assert(candidate((15)) == (5));\n    assert(candidate((27))\
    \ == (3));\n    assert(candidate((63)) == (7));\n    assert(candidate((330)) ==\
    \ (11));\n    assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmph1s0tsx1: /tmp/tmph1s0tsx1.cpp:18: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142980
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long i = 2;\n    long j;\n    while (i <=\
    \ n / 2) {\n        j = i * 2;\n        while (j < n) {\n            if (n % j\
    \ == 0) {\n                break;\n            }\n            j++;\n        }\n\
    \        if (j > max_factor) {\n            max_factor = j;\n        }\n     \
    \   i++;\n    }\n    return max_factor;\n}\nint main() {\n    auto candidate =\
    \ largest_prime_factor;\n    assert(candidate((15)) == (5));\n    assert(candidate((27))\
    \ == (3));\n    assert(candidate((63)) == (7));\n    assert(candidate((330)) ==\
    \ (11));\n    assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp19oy19m6: /tmp/tmp19oy19m6.cpp:25: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142980
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long largest = i;\n    while (i < n) {\n        if\
    \ (n % i == 0) {\n            largest = i;\n        }\n        i += 2;\n    }\n\
    \    return largest;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpkz6me_uz: /tmp/tmpkz6me_uz.cpp:17: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142980
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i;\n\
    \    for (i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            max_factor\
    \ = i;\n            max_factor_index = i;\n        }\n    }\n    return max_factor;\n\
    }\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmp44v6xnit: /tmp/tmp44v6xnit.cpp:18: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142978
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long i = 2;\n    while (i <= n / 2) {\n       \
    \ while (n % i == 0) {\n            ans = i;\n            n = n / i;\n       \
    \ }\n        i++;\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = largest_prime_factor;\n    assert(candidate((15)) == (5));\n    assert(candidate((27))\
    \ == (3));\n    assert(candidate((63)) == (7));\n    assert(candidate((330)) ==\
    \ (11));\n    assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmprvwndzpc: /tmp/tmprvwndzpc.cpp:18: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142980
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_i = n;\n    long max_factor = 1;\n    while\
    \ (i <= max_i) {\n        if (n % i == 0) {\n            max_factor = i;\n   \
    \         max_i = max_i / i;\n        }\n        ++i;\n    }\n    return max_factor;\n\
    }\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmpyd1_92yy: /tmp/tmpyd1_92yy.cpp:20: int main(): Assertion `candidate((27))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660142977
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (int\
    \ i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            max_factor = i;\n\
    \            max_factor_index = i;\n        }\n    }\n    return max_factor;\n\
    }\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmp0f868w7e: /tmp/tmp0f868w7e.cpp:17: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_i = n;\n    while (i < max_i) {\n      \
    \  if (n % i == 0) {\n            while (n % i == 0) {\n                n /= i;\n\
    \            }\n            if (n > 1) {\n                return n;\n        \
    \    }\n        }\n        i++;\n    }\n    return n;\n}\nint main() {\n    auto\
    \ candidate = largest_prime_factor;\n    assert(candidate((15)) == (5));\n   \
    \ assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n    assert(candidate((330))\
    \ == (11));\n    assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp8jph4ee8: /tmp/tmp8jph4ee8.cpp:23: int main(): Assertion `candidate((27))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660142980
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long largest = i;\n    while (i < n) {\n        if\
    \ (n % i == 0) {\n            largest = i;\n        }\n        ++i;\n    }\n \
    \   return largest;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp2ql397qd: /tmp/tmp2ql397qd.cpp:18: int main(): Assertion `candidate((27))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660142977
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (long\
    \ i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long factor =\
    \ i / max_factor;\n            if (factor > max_factor) {\n                max_factor\
    \ = factor;\n                max_factor_index = i;\n            }\n        }\n\
    \    }\n    return max_factor_index;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpckp38v7j: /tmp/tmpckp38v7j.cpp:20: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142978
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long i = 2;\n    while (i <= sqrt(n)) {\n     \
    \   if (n % i == 0) {\n            ans = i;\n            break;\n        }\n \
    \       i += 2;\n    }\n    return ans;\n}\nint main() {\n    auto candidate =\
    \ largest_prime_factor;\n    assert(candidate((15)) == (5));\n    assert(candidate((27))\
    \ == (3));\n    assert(candidate((63)) == (7));\n    assert(candidate((330)) ==\
    \ (11));\n    assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpqxkqgzxt: /tmp/tmpqxkqgzxt.cpp:18: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142980
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long largest = 2;\n    while (i <= n / 2) {\n   \
    \     if (n % i == 0) {\n            largest = i;\n        }\n        ++i;\n \
    \   }\n    return largest;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpqf4elk19: /tmp/tmpqf4elk19.cpp:18: int main(): Assertion `candidate((27))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660142980
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (long\
    \ i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            max_factor = i;\n\
    \            max_factor_index = i;\n        }\n    }\n    return max_factor;\n\
    }\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmp2zctowpx: /tmp/tmp2zctowpx.cpp:17: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142980
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_factor = 1;\n    while (i < n) {\n     \
    \   if (n % i == 0) {\n            max_factor = i;\n        }\n        ++i;\n\
    \    }\n    return max_factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp6mf83iej: /tmp/tmp6mf83iej.cpp:18: int main(): Assertion `candidate((27))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_prime = 1;\n    long i = 2;\n \
    \   while (i <= n && max_prime * i <= n) {\n        if (n % i == 0) {\n      \
    \      max_factor *= i;\n            max_prime = i;\n        }\n        i += 2;\n\
    \    }\n    return max_factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpet_mh212: /tmp/tmpet_mh212.cpp:19: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142980
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (int\
    \ i = 1; i <= n; i++) {\n        while (n % i == 0) {\n            max_factor\
    \ = i;\n            max_factor_index = i;\n            n /= i;\n        }\n  \
    \  }\n    return max_factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660142985
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_factor = 1;\n    while (i <= n && n % i\
    \ == 0) {\n        max_factor = i;\n        i++;\n    }\n    return max_factor;\n\
    }\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmp9ajboj9j: /tmp/tmp9ajboj9j.cpp:15: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142980
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long largest = n;\n    while (i <= largest) {\n \
    \       if (n % i == 0) {\n            largest = i;\n        }\n        ++i;\n\
    \    }\n    return largest;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp_50_w7dc: /tmp/tmp_50_w7dc.cpp:17: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142980
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_i = n;\n    long max_factor = 1;\n    while\
    \ (i <= max_i) {\n        if (n % i == 0) {\n            max_factor = i;\n   \
    \         max_i = max_i / i;\n        }\n        i++;\n    }\n    return max_factor;\n\
    }\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmp8umi3odl: /tmp/tmp8umi3odl.cpp:20: int main(): Assertion `candidate((27))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long i = 2;\n    while (i < n) {\n        if (n\
    \ % i == 0) {\n            ans = i;\n            break;\n        }\n        i\
    \ += 2;\n    }\n    return ans;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp1jgv35kg: /tmp/tmp1jgv35kg.cpp:18: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142980
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long i = 2;\n    while (i <= sqrt(n)) {\n\
    \        if (n % i == 0) {\n            max_factor = i;\n        }\n        ++i;\n\
    \    }\n    return max_factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpghhoohle: /tmp/tmpghhoohle.cpp:17: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142980
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_factor = 0;\n    while(i <= sqrt(n)) {\n\
    \        if(n%i == 0) {\n            max_factor = i;\n            break;\n   \
    \     }\n        ++i;\n    }\n    return max_factor;\n}\nint main() {\n    auto\
    \ candidate = largest_prime_factor;\n    assert(candidate((15)) == (5));\n   \
    \ assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n    assert(candidate((330))\
    \ == (11));\n    assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp57_m_j2e: /tmp/tmp57_m_j2e.cpp:18: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142980
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long p = 2;\n    long q = n;\n    long r = n;\n    long s = 2;\n \
    \   while (p < q) {\n        while (r % p == 0) {\n            r /= p;\n     \
    \   }\n        while (s % p == 0) {\n            s /= p;\n        }\n        if\
    \ (p * p > r * s) {\n            p = r;\n            q = s;\n        } else {\n\
    \            p = s;\n            q = r;\n        }\n    }\n    return p;\n}\n\
    int main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660142985
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long i = 2;\n    while (i <= n / 2) {\n       \
    \ if (n % i == 0) {\n            ans = i;\n            while (n % i == 0) {\n\
    \                n /= i;\n            }\n        }\n        ++i;\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmpmjd8ax6c: /tmp/tmpmjd8ax6c.cpp:20: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142980
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_factor = 1;\n    while (i < n) {\n     \
    \   if (n % i == 0) {\n            max_factor = i;\n        }\n        i++;\n\
    \    }\n    return max_factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpmlcwy016: /tmp/tmpmlcwy016.cpp:18: int main(): Assertion `candidate((27))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660142977
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (int\
    \ i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            while (n % i ==\
    \ 0) {\n                n /= i;\n                max_factor_index = i;\n     \
    \       }\n        }\n    }\n    return max_factor_index;\n}\nint main() {\n \
    \   auto candidate = largest_prime_factor;\n    assert(candidate((15)) == (5));\n\
    \    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n  \
    \  assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
    }\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660142985
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long p = 2;\n    long q = n;\n    while (p < q) {\n        while (n\
    \ % p == 0) {\n            n /= p;\n        }\n        while (n % q == 0) {\n\
    \            n /= q;\n        }\n        if (n > 1) {\n            return n;\n\
    \        }\n        p += 1;\n        q += 1;\n    }\n    return n;\n}\nint main()\
    \ {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15)) ==\
    \ (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n\
    \    assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
    }\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660142985
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i =\
    \ 2;\n    while (i < n) {\n        if (n % i == 0) {\n            max_factor =\
    \ i;\n            max_factor_index = i;\n        }\n        i++;\n    }\n    return\
    \ max_factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n \
    \   assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n   \
    \ assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n   \
    \ assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpsdyr_fgl: /tmp/tmpsdyr_fgl.cpp:20: int main(): Assertion `candidate((27))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660142980
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long p = 2;\n    long q = n;\n    long r = n;\n    long s = 2;\n \
    \   while (p < q) {\n        while (r % p == 0) {\n            r /= p;\n     \
    \   }\n        while (r % s == 0) {\n            r /= s;\n        }\n        while\
    \ (r % p == 0) {\n            r /= p;\n        }\n        while (r % q == 0) {\n\
    \            r /= q;\n        }\n        p += 1;\n        s += 1;\n    }\n   \
    \ return r;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n   \
    \ assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63))\
    \ == (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmpod2a92aq: /tmp/tmpod2a92aq.cpp:29: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142980
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long a = 2, b = n;\n    long c = 1;\n    while (a < b) {\n       \
    \ while (b % a == 0) {\n            b /= a;\n        }\n        while (b % c ==\
    \ 0) {\n            b /= c;\n        }\n        if (b > 1) {\n            c +=\
    \ 1;\n        }\n        a += 1;\n    }\n    return c;\n}\nint main() {\n    auto\
    \ candidate = largest_prime_factor;\n    assert(candidate((15)) == (5));\n   \
    \ assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n    assert(candidate((330))\
    \ == (11));\n    assert(candidate((13195)) == (29));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660142985
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_i = n;\n    while (i < max_i) {\n      \
    \  if (n % i == 0) {\n            max_i = i;\n        }\n        i++;\n    }\n\
    \    return max_i;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp_2e47fjr: /tmp/tmp_2e47fjr.cpp:17: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142980
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_i = n;\n    while (i < max_i) {\n      \
    \  if (n % i == 0) {\n            max_i = i;\n        }\n        ++i;\n    }\n\
    \    return max_i;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmprmbyc9h6: /tmp/tmprmbyc9h6.cpp:17: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_factor = 1;\n    while (i < n) {\n     \
    \   if (n % i == 0) {\n            max_factor = i;\n        }\n        i += 2;\n\
    \    }\n    return max_factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpeh3zsijs: /tmp/tmpeh3zsijs.cpp:17: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142977
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i =\
    \ 2;\n    while (i <= sqrt(n)) {\n        if (n % i == 0) {\n            max_factor\
    \ = i;\n            max_factor_index = i;\n        }\n        ++i;\n    }\n  \
    \  return max_factor_index;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp59zgnhgf: /tmp/tmp59zgnhgf.cpp:19: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142980
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 0;\n    long max_factor_index = 0;\n    long i;\n\
    \    for (i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long factor\
    \ = i / max_factor;\n            if (factor > max_factor) {\n                max_factor\
    \ = factor;\n                max_factor_index = i;\n            }\n        }\n\
    \    }\n    return max_factor_index;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660142981
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 0;\n    long i = 2;\n    while (i <= sqrt(n)) {\n\
    \        if (n % i == 0) {\n            max_factor = i;\n        }\n        ++i;\n\
    \    }\n    return max_factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpjyltwk_v: /tmp/tmpjyltwk_v.cpp:17: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142980
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long a = 2, b = 2, c = 2, d = 2, e = 2;\n    while (a < n) {\n   \
    \     if (n % a == 0) {\n            while (n % a == 0) {\n                n /=\
    \ a;\n                ++a;\n            }\n        }\n        if (n % b == 0)\
    \ {\n            while (n % b == 0) {\n                n /= b;\n             \
    \   ++b;\n            }\n        }\n        if (n % c == 0) {\n            while\
    \ (n % c == 0) {\n                n /= c;\n                ++c;\n            }\n\
    \        }\n        if (n % d == 0) {\n            while (n % d == 0) {\n    \
    \            n /= d;\n                ++d;\n            }\n        }\n       \
    \ if (n % e == 0) {\n            while (n % e == 0) {\n                n /= e;\n\
    \                ++e;\n            }\n        }\n    }\n    return n;\n}\nint\
    \ main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660142985
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long largest = i;\n    while (i < n) {\n        if\
    \ (n % i == 0) {\n            largest = i;\n        }\n        i += 2;\n    }\n\
    \    return largest;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpkz6me_uz: /tmp/tmpkz6me_uz.cpp:17: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142980
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_i = n;\n    long max_factor = 1;\n    while\
    \ (i < max_i) {\n        if (n % i == 0) {\n            max_factor = i;\n    \
    \        max_i = max_i / i;\n        }\n        i++;\n    }\n    return max_factor;\n\
    }\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmpw6fytvkt: /tmp/tmpw6fytvkt.cpp:19: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i =\
    \ 2;\n    while (i < n) {\n        if (n % i == 0) {\n            long j = i;\n\
    \            while (j < n) {\n                if (n % j == 0) {\n            \
    \        max_factor = j;\n                    max_factor_index = i;\n        \
    \            break;\n                }\n                j++;\n            }\n\
    \        }\n        i++;\n    }\n    return max_factor_index;\n}\nint main() {\n\
    \    auto candidate = largest_prime_factor;\n    assert(candidate((15)) == (5));\n\
    \    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n  \
    \  assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
    }\n"
  status: Exception
  stderr: 'tmpt2_sgirx: /tmp/tmpt2_sgirx.cpp:27: int main(): Assertion `candidate((27))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_factor = 1;\n    while(i <= sqrt(n)) {\n\
    \        if(n%i == 0) {\n            max_factor = i;\n        }\n        ++i;\n\
    \    }\n    return max_factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp2snhhuco: /tmp/tmp2snhhuco.cpp:17: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142981
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 0;\n    long i = 2;\n    while (i <= sqrt(n)) {\n\
    \        if (n % i == 0) {\n            max_factor = i;\n        }\n        ++i;\n\
    \    }\n    return max_factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpjyltwk_v: /tmp/tmpjyltwk_v.cpp:17: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142980
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_prime_factor = 1;\n    long i;\n\
    \    for (i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long j;\n\
    \            for (j = i; j <= max_factor; j++) {\n                if (n % j ==\
    \ 0) {\n                    break;\n                }\n            }\n       \
    \     if (j > max_factor) {\n                max_factor = j;\n               \
    \ max_prime_factor = i;\n            }\n        }\n    }\n    return max_prime_factor;\n\
    }\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmpnbmgkg6_: /tmp/tmpnbmgkg6_.cpp:26: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142981
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (int\
    \ i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            long factor =\
    \ 1;\n            while (n % i == 0) {\n                n /= i;\n            \
    \    factor++;\n            }\n            if (factor > max_factor) {\n      \
    \          max_factor = factor;\n                max_factor_index = i;\n     \
    \       }\n        }\n    }\n    return max_factor_index;\n}\nint main() {\n \
    \   auto candidate = largest_prime_factor;\n    assert(candidate((15)) == (5));\n\
    \    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n  \
    \  assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
    }\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660142985
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max = 2;\n    while (i <= n && n % i == 0) {\n\
    \        max = i;\n        i += 2;\n    }\n    return max;\n}\nint main() {\n\
    \    auto candidate = largest_prime_factor;\n    assert(candidate((15)) == (5));\n\
    \    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n  \
    \  assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
    }\n"
  status: Exception
  stderr: 'tmpgjzmcqyo: /tmp/tmpgjzmcqyo.cpp:15: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142978
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i =\
    \ 2;\n    while (i < n) {\n        if (n % i == 0) {\n            long factor\
    \ = i / max_factor;\n            if (factor > max_factor) {\n                max_factor\
    \ = factor;\n                max_factor_index = i;\n            }\n        }\n\
    \        i++;\n    }\n    return max_factor_index;\n}\nint main() {\n    auto\
    \ candidate = largest_prime_factor;\n    assert(candidate((15)) == (5));\n   \
    \ assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n    assert(candidate((330))\
    \ == (11));\n    assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpyijp76dk: /tmp/tmpyijp76dk.cpp:22: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142981
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_factor = 1;\n    while (i <= n / i) {\n\
    \        if (n % i == 0) {\n            max_factor = i;\n        }\n        ++i;\n\
    \    }\n    return max_factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp6q1bpc4o: /tmp/tmp6q1bpc4o.cpp:17: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142977
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_factor = 1;\n    while (i < n) {\n     \
    \   if (n % i == 0) {\n            max_factor = i;\n        }\n        ++i;\n\
    \    }\n    return max_factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp6mf83iej: /tmp/tmp6mf83iej.cpp:18: int main(): Assertion `candidate((27))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_i = 1;\n    long max_factor = 1;\n    while\
    \ (i < n) {\n        if (n % i == 0) {\n            max_factor = i;\n        \
    \    max_i = i;\n        }\n        i++;\n    }\n    return max_factor;\n}\nint\
    \ main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmpfbm854gj: /tmp/tmpfbm854gj.cpp:20: int main(): Assertion `candidate((27))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_i = i;\n    long max_factor = 1;\n    while\
    \ (i < n) {\n        if (n % i == 0) {\n            max_factor = i;\n        \
    \    max_i = i;\n        }\n        ++i;\n    }\n    return max_factor;\n}\nint\
    \ main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmpeo9whw9u: /tmp/tmpeo9whw9u.cpp:20: int main(): Assertion `candidate((27))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660142981
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long i = 2;\n    while (i < n) {\n     \
    \   if (n % i == 0) {\n            max_factor = i;\n        }\n        i++;\n\
    \    }\n    return max_factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp3opwadd1: /tmp/tmp3opwadd1.cpp:18: int main(): Assertion `candidate((27))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660142978
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long i = 2;\n    while (i < n) {\n        if (n\
    \ % i == 0) {\n            ans = i;\n            while (n % i == 0) {\n      \
    \          n /= i;\n            }\n        }\n        i++;\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmpcdfdyq3h: /tmp/tmpcdfdyq3h.cpp:20: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142981
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_i = n;\n    long max_factor = 1;\n    while\
    \ (i < max_i) {\n        if (n % i == 0) {\n            max_factor = i;\n    \
    \        max_i = max_i / i;\n        }\n        i++;\n    }\n    return max_factor;\n\
    }\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmpw6fytvkt: /tmp/tmpw6fytvkt.cpp:19: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_i = i;\n    long max_factor = 1;\n    while\
    \ (i < n) {\n        if (n % i == 0) {\n            max_factor = i;\n        \
    \    max_i = i;\n        }\n        i++;\n    }\n    return max_factor;\n}\nint\
    \ main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmplnylbxtf: /tmp/tmplnylbxtf.cpp:20: int main(): Assertion `candidate((27))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660142981
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (long\
    \ i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long j = 1;\n\
    \            while (j * i <= n) {\n                j++;\n            }\n     \
    \       if (j * i > max_factor) {\n                max_factor = j * i;\n     \
    \           max_factor_index = i;\n            }\n        }\n    }\n    return\
    \ max_factor_index;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpxc3ttuzs: /tmp/tmpxc3ttuzs.cpp:23: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142981

name: HumanEval_101_words_string
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
  \ of words separated by commas or spaces. Your task is\n// to split the string into\
  \ words and return an array of the words.\n// For example:\nstd::vector<std::string>\
  \ words_string(std::string s) {\n"
tests: "}\nint main() {\n    auto candidate = words_string;\n    assert(candidate((\"\
  Hi, my name is John\")) == (std::vector<std::string>({(std::string)\"Hi\", (std::string)\"\
  my\", (std::string)\"name\", (std::string)\"is\", (std::string)\"John\"})));\n \
  \   assert(candidate((\"One, two, three, four, five, six\")) == (std::vector<std::string>({(std::string)\"\
  One\", (std::string)\"two\", (std::string)\"three\", (std::string)\"four\", (std::string)\"\
  five\", (std::string)\"six\"})));\n    assert(candidate((\"Hi, my name\")) == (std::vector<std::string>({(std::string)\"\
  Hi\", (std::string)\"my\", (std::string)\"name\"})));\n    assert(candidate((\"\
  One,, two, three, four, five, six,\")) == (std::vector<std::string>({(std::string)\"\
  One\", (std::string)\"two\", (std::string)\"three\", (std::string)\"four\", (std::string)\"\
  five\", (std::string)\"six\"})));\n    assert(candidate((\"\")) == (std::vector<std::string>()));\n\
  \    assert(candidate((\"ahmed     , gamal\")) == (std::vector<std::string>({(std::string)\"\
  ahmed\", (std::string)\"gamal\"})));\n}\n"
completions: ["    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while(std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::istringstream iss(s);\n    while (std::getline(iss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        result.push_back(word);\n\
    \    }\n    return result;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss;\n    ss.str(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss;\n    ss << s;\n    std::string item;\n    while\
    \ (std::getline(ss, item, ',')) {\n        words.push_back(item);\n    }\n   \
    \ return words;", "    std::vector<std::string> words;\n    std::string word;\n\
    \    std::stringstream ss(s);\n    while (std::getline(ss, word, ',')) {\n   \
    \     words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss;\n    ss << s;\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss;\n    ss.str(s);\n \
    \   while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n  \
    \  }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while(std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss;\n    ss.str(s);\n \
    \   while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n  \
    \  }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss;\n    ss.str(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss;\n    ss.str(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "  std::vector<std::string> result;\n  std::string\
    \ word;\n  for (auto &c : s) {\n    if (c == ',' || c == ' ') {\n      result.push_back(word);\n\
    \      word.clear();\n    } else {\n      word += c;\n    }\n  }\n  result.push_back(word);\n\
    \  return result;", "  std::vector<std::string> words;\n  std::string word;\n\
    \  for (int i = 0; i < s.length(); i++) {\n    if (s[i] == ' ' || s[i] == ',')\
    \ {\n      words.push_back(word);\n      word.clear();\n    } else {\n      word\
    \ += s[i];\n    }\n  }\n  words.push_back(word);\n  return words;", "    std::vector<std::string>\
    \ result;\n    std::string word;\n    std::stringstream ss(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        result.push_back(word);\n    }\n    return result;",
  "    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while(std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss;\n    ss << s;\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::istringstream iss(s);\n    while (std::getline(iss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss;\n    ss << s;\n    while (std::getline(ss, word, ',')) {\n        result.push_back(word);\n\
    \    }\n    return result;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::istringstream iss(s);\n    while (std::getline(iss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "  std::vector<std::string> words;\n  std::string\
    \ word;\n  std::stringstream ss(s);\n  while (std::getline(ss, word, ',')) {\n\
    \    words.push_back(word);\n  }\n  return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::istringstream iss(s);\n    while (std::getline(iss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss;\n    ss.str(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "  std::vector<std::string>\
    \ result;\n  std::string word;\n  for (int i = 0; i < s.size(); i++) {\n    if\
    \ (s[i] == ' ' || s[i] == ',') {\n      if (!word.size()) {\n        word = s.substr(i,\
    \ 1);\n      } else {\n        result.push_back(word);\n        word = s.substr(i,\
    \ 1);\n      }\n    } else {\n      word = word + s[i];\n    }\n  }\n  result.push_back(word);\n\
    \  return result;", "    std::vector<std::string> words;\n    std::string word;\n\
    \    std::stringstream ss;\n    ss << s;\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \ std::vector<std::string> words;\n  std::string word;\n  for (int i = 0; i <\
    \ s.size(); i++) {\n    if (s[i] == ' ' || s[i] == ',') {\n      word = word;\n\
    \      words.push_back(word);\n      word.clear();\n    } else {\n      word +=\
    \ s[i];\n    }\n  }\n  return words;", "    std::vector<std::string> words;\n\
    \    std::string word;\n    std::stringstream ss(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss;\n    ss << s;\n    std::string item;\n    while\
    \ (std::getline(ss, item, ',')) {\n        words.push_back(item);\n    }\n   \
    \ return words;", "    std::vector<std::string> result;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (std::getline(ss, word, ',')) {\n \
    \       result.push_back(word);\n    }\n    return result;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::istringstream iss(s);\n    while (std::getline(iss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while(std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss;\n    ss << s;\n   \
    \ while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n    }\n\
    \    return words;", "    std::vector<std::string> words;\n    std::string word;\n\
    \    std::stringstream ss(s);\n    while (std::getline(ss, word, ',')) {\n   \
    \     words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss;\n    ss << s;\n   \
    \ while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n    }\n\
    \    return words;", "    std::vector<std::string> words;\n    std::string word;\n\
    \    std::stringstream ss(s);\n    while (std::getline(ss, word, ',')) {\n   \
    \     words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss;\n    ss << s;\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::istringstream\
    \ iss(s);\n    while (iss >> word) {\n        words.push_back(word);\n    }\n\
    \    return words;", "    std::vector<std::string> words;\n    std::string word;\n\
    \    std::stringstream ss(s);\n    while(std::getline(ss, word, ','))\n      \
    \  words.push_back(word);\n    return words;", "    std::vector<std::string> result;\n\
    \    std::string word;\n    std::stringstream ss(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        result.push_back(word);\n    }\n    return result;",
  "    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::istringstream\
    \ iss(s);\n    while (std::getline(iss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while(std::getline(ss, word, ','))\n\
    \        words.push_back(word);\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "  std::vector<std::string> words;\n  std::string\
    \ word;\n  for (auto c : s) {\n    if (c == ',' || c == ' ') {\n      words.push_back(word);\n\
    \      word.clear();\n    } else {\n      word += c;\n    }\n  }\n  words.push_back(word);\n\
    \  return words;", "    std::vector<std::string> words;\n    std::string word;\n\
    \    std::stringstream ss(s);\n    while (std::getline(ss, word, ',')) {\n   \
    \     words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ result;\n    std::string word;\n    std::stringstream ss(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        result.push_back(word);\n    }\n    return result;",
  "    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss;\n    ss << s;\n    while (std::getline(ss, word, ',')) {\n        result.push_back(word);\n\
    \    }\n    return result;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::istringstream iss(s);\n    while (std::getline(iss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::istringstream iss(s);\n    while (std::getline(iss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while(std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::istringstream iss(s);\n    while (std::getline(iss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss;\n    ss << s;\n    std::string item;\n    while\
    \ (std::getline(ss, item, ',')) {\n        words.push_back(item);\n    }\n   \
    \ return words;", "    std::vector<std::string> words;\n    std::string word;\n\
    \    std::stringstream ss(s);\n    while (std::getline(ss, word, ',')) {\n   \
    \     words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::istringstream iss(s);\n    while (std::getline(iss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss;\n    ss << s;\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::istringstream iss(s);\n    while (std::getline(iss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while(std::getline(ss, word, ','))\n\
    \        words.push_back(word);\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::istringstream iss(s);\n    while (std::getline(iss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while(std::getline(ss, word, ','))\n\
    \    {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::istringstream iss(s);\n    while (std::getline(iss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::istringstream iss(s);\n    while (std::getline(iss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss;\n    ss << s;\n   \
    \ while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n    }\n\
    \    return words;", "    std::vector<std::string> words;\n    std::string word;\n\
    \    std::stringstream ss(s);\n    while (std::getline(ss, word, ',')) {\n   \
    \     words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while(std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while(std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss;\n    ss << s;\n   \
    \ while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n    }\n\
    \    return words;", "    std::vector<std::string> words;\n    std::string word;\n\
    \    std::stringstream ss;\n    ss << s;\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::istringstream iss(s);\n    while (std::getline(iss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss;\n    ss.str(s);\n \
    \   while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n  \
    \  }\n    return words;", "    std::vector<std::string> result;\n    std::string\
    \ word;\n    std::stringstream ss;\n    ss << s;\n    while (std::getline(ss,\
    \ word, ',')) {\n        result.push_back(word);\n    }\n    return result;",
  "    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss;\n    ss.str(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss;\n    ss << s;\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss;\n    ss << s;\n   \
    \ while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n    }\n\
    \    return words;", "    std::vector<std::string> words;\n    std::string word;\n\
    \    std::stringstream ss(s);\n    while (std::getline(ss, word, ',')) {\n   \
    \     words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "  std::vector<std::string>\
    \ words;\n  std::string word;\n  for (int i = 0; i < s.length(); i++) {\n    if\
    \ (s[i] == ' ' || s[i] == ',') {\n      words.push_back(word);\n      word.clear();\n\
    \    } else {\n      word += s[i];\n    }\n  }\n  words.push_back(word);\n  return\
    \ words;", "    std::vector<std::string> words;\n    std::string word;\n    std::istringstream\
    \ iss(s);\n    while (std::getline(iss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss;\n    ss << s;\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss;\n    ss << s;\n   \
    \ while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n    }\n\
    \    return words;", "    std::vector<std::string> result;\n    std::string word;\n\
    \    std::stringstream ss(s);\n    while (std::getline(ss, word, ',')) {\n   \
    \     result.push_back(word);\n    }\n    return result;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss;\n    ss << s;\n   \
    \ while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n    }\n\
    \    return words;", "    std::vector<std::string> result;\n    std::stringstream\
    \ ss(s);\n    std::string item;\n    while (std::getline(ss, item, ',')) {\n \
    \       result.push_back(item);\n    }\n    return result;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::istringstream iss(s);\n    while (iss\
    \ >> word) {\n        words.push_back(word);\n    }\n    return words;", "   \
    \ std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while(std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss;\n    ss.str(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "  std::vector<std::string> words;\n  std::string\
    \ word;\n  for (int i = 0; i < s.size(); i++) {\n    if (s[i] == ' ' || s[i] ==\
    \ ',') {\n      if (word != \"\") {\n        words.push_back(word);\n        word\
    \ = \"\";\n      }\n    } else {\n      word += s[i];\n    }\n  }\n  if (word\
    \ != \"\") {\n    words.push_back(word);\n  }\n  return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \ std::vector<std::string> words;\n  std::string word;\n  for (int i = 0; i <\
    \ s.size(); i++) {\n    if (s[i] == ' ' || s[i] == ',') {\n      words.push_back(word);\n\
    \      word.clear();\n    } else {\n      word += s[i];\n    }\n  }\n  words.push_back(word);\n\
    \  return words;", "    std::vector<std::string> words;\n    std::string word;\n\
    \    std::stringstream ss(s);\n    while (std::getline(ss, word, ',')) {\n   \
    \     words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ result;\n    std::string word;\n    std::stringstream ss(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        result.push_back(word);\n    }\n    return result;",
  "    std::vector<std::string> result;\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    while (std::getline(ss, word, ',')) {\n        result.push_back(word);\n\
    \    }\n    return result;", "  std::vector<std::string> words;\n  std::string\
    \ word;\n  std::istringstream iss(s);\n  while (iss >> word) {\n    words.push_back(word);\n\
    \  }\n  return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss;\n    ss.str(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \ std::vector<std::string> result;\n  std::string word;\n  for (auto c : s) {\n\
    \    if (c == ' ' || c == ',')\n      continue;\n    word = c;\n    result.push_back(word);\n\
    \  }\n  return result;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::istringstream iss(s);\n    while (std::getline(iss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "  std::vector<std::string>\
    \ words;\n  std::string word;\n  for (int i = 0; i < s.size(); i++) {\n    if\
    \ (s[i] == ' ' || s[i] == ',')\n      continue;\n    word = s.substr(i, 1);\n\
    \    words.push_back(word);\n  }\n  return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss;\n    ss << s;\n   \
    \ while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n    }\n\
    \    return words;", "    std::vector<std::string> words;\n    std::string word;\n\
    \    std::stringstream ss(s);\n    while (std::getline(ss, word, ',')) {\n   \
    \     words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::istringstream iss(s);\n    while (std::getline(iss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss;\n    ss << s;\n    std::string item;\n    while (std::getline(ss, item,\
    \ ',')) {\n        word = item;\n        result.push_back(word);\n    }\n    return\
    \ result;", "    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while(std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss(s);\n    while(std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss;\n    ss.str(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while(std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss;\n    ss << s;\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "    std::vector<std::string> words;\n    std::string\
    \ word;\n    std::stringstream ss(s);\n    while (std::getline(ss, word, ','))\
    \ {\n        words.push_back(word);\n    }\n    return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::stringstream ss(s);\n    while (std::getline(ss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \   std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;", "  std::vector<std::string> words;\n  std::string\
    \ word;\n  for (int i = 0; i < s.size(); i++) {\n    if (s[i] == ' ' || s[i] ==\
    \ ',') {\n      if (word != \"\") {\n        words.push_back(word);\n        word.clear();\n\
    \      }\n    } else {\n      word += s[i];\n    }\n  }\n  if (word != \"\") {\n\
    \    words.push_back(word);\n  }\n  return words;", "    std::vector<std::string>\
    \ words;\n    std::string word;\n    std::istringstream iss(s);\n    while (std::getline(iss,\
    \ word, ',')) {\n        words.push_back(word);\n    }\n    return words;", " \
    \ std::vector<std::string> words;\n  std::string word;\n  for (int i = 0; i <\
    \ s.length(); i++) {\n    if (s[i] == ' ' || s[i] == ',') {\n      word = word;\n\
    \      words.push_back(word);\n      word.clear();\n    } else {\n      word +=\
    \ s[i];\n    }\n  }\n  return words;"]
stop_tokens:
- "\n}"

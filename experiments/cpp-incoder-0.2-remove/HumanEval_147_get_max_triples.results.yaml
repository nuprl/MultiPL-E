language: cpp
name: HumanEval_147_get_max_triples
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i = 0; i<n; i++){\n        a[i] = i*i-i+1;\n   \
    \ }\n    long long int ans = 0;\n    for(int i = 0; i<n; i++){\n        for(int\
    \ j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n                if(a[i]\
    \ + a[j] + a[k] == 3){\n                    ans++;\n                }\n      \
    \      }\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: Exception
  stderr: 'tmps8x657zb: /tmp/tmps8x657zb.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113786
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n    }\n  \
    \  long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(a[i]+a[j]+a[k]==3){\n \
    \                   ans++;\n                }\n            }\n        }\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n   \
    \ assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpda1k_znz: /tmp/tmpda1k_znz.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    vector<long>\
    \ a(n);\n    long ans = 0;\n    for(int i = 0; i<n; i++){\n        for(int j =\
    \ i+1; j<n; j++){\n            for(int k = j+1; k<n; k++){\n                if(a[i]\
    \ + a[j] + a[k] == 3){\n                    ans += 1;\n                }\n   \
    \         }\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9km6h8of.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmp9km6h8of.cpp:12:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   12 |     vector<long> a(n);\n      |     ^~~~~~\n/tmp/tmp9km6h8of.cpp:12:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp9km6h8of.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp9km6h8of.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmp9km6h8of.cpp:12:12:\
    \ error: expected primary-expression before \u2018long\u2019\n   12 |     vector<long>\
    \ a(n);\n      |            ^~~~\n/tmp/tmp9km6h8of.cpp:17:20: error: \u2018a\u2019\
    \ was not declared in this scope\n   17 |                 if(a[i] + a[j] + a[k]\
    \ == 3){\n      |                    ^\n"
  stdout: ''
  timestamp: 1660113786
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int cnt = 0;\n    for(int i = 0; i<n; i++){\n\
    \        a[i] = i*i-i+1;\n    }\n    for(int i = 0; i<n; i++){\n        for(int\
    \ j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n                if(a[i]\
    \ + a[j] + a[k] == 3){\n                    cnt++;\n                }\n      \
    \      }\n        }\n    }\n    return cnt;\n}\nint main() {\n    auto candidate\
    \ = get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: Exception
  stderr: 'tmppjhemv_k: /tmp/tmppjhemv_k.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n    }\n  \
    \  long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=i+1;j<n;j++){\n\
    \            for(int k=j+1;k<n;k++){\n                if(a[i]+a[j]+a[k]==3){\n\
    \                    ans++;\n                }\n            }\n        }\n   \
    \ }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpd74lnyi_: /tmp/tmpd74lnyi_.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n    }\n  \
    \  long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=i+1;j<n;j++){\n\
    \            for(int k=j+1;k<n;k++){\n                if(a[i]+a[j]+a[k]==3){\n\
    \                    ans++;\n                }\n            }\n        }\n   \
    \ }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpd74lnyi_: /tmp/tmpd74lnyi_.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n    }\n  \
    \  long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=i+1;j<n;j++){\n\
    \            for(int k=j+1;k<n;k++){\n                if(a[i]+a[j]+a[k]==3){\n\
    \                    ans++;\n                }\n            }\n        }\n   \
    \ }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpd74lnyi_: /tmp/tmpd74lnyi_.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i = 0; i < n; i++){\n        a[i] = i * i - i +\
    \ 1;\n    }\n    long long int max_triple = 0;\n    for(int i = 0; i < n; i++){\n\
    \        for(int j = i+1; j < n; j++){\n            for(int k = j+1; k < n; k++){\n\
    \                if(a[i] + a[j] + a[k] % 3 == 0){\n                    max_triple++;\n\
    \                }\n            }\n        }\n    }\n    return max_triple;\n\
    }\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp3b733h9t: /tmp/tmp3b733h9t.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int sum = 0;\n    for(int i = 0; i < n; i++){\n\
    \        a[i] = i * i - i + 1;\n        sum += a[i];\n    }\n    long long int\
    \ max = 0;\n    for(int i = 0; i < n; i++){\n        for(int j = 0; j < n; j++){\n\
    \            for(int k = 0; k < n; k++){\n                if(i<j && j<k && a[i]\
    \ + a[j] + a[k] == sum){\n                    max = max(max, a[i]);\n        \
    \        }\n            }\n        }\n    }\n    return max;\n}\nint main() {\n\
    \    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n \
    \   assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n   \
    \ assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpygbngnnq.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmpygbngnnq.cpp:23:40: error: \u2018max\u2019 cannot be used as a function\n\
    \   23 |                     max = max(max, a[i]);\n      |                  \
    \                      ^\n"
  stdout: ''
  timestamp: 1660113786
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int cnt = 0;\n    for(int i = 0; i < n; i++) {\n\
    \        a[i] = i * i - i + 1;\n    }\n    for(int i = 0; i < n; i++) {\n    \
    \    for(int j = i + 1; j < n; j++) {\n            for(int k = j + 1; k < n; k++)\
    \ {\n                if(a[i] + a[j] + a[k] == 3) {\n                    cnt++;\n\
    \                }\n            }\n        }\n    }\n    return cnt;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpn6dg45qz: /tmp/tmpn6dg45qz.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int sum = 0;\n    for(int i = 0; i < n; i++) {\n\
    \        a[i] = i * i - i + 1;\n        sum += a[i];\n    }\n    for(int i = 0;\
    \ i < n; i++) {\n        for(int j = i + 1; j < n; j++) {\n            for(int\
    \ k = j + 1; k < n; k++) {\n                if(a[i] + a[j] + a[k] == sum) {\n\
    \                    return 1;\n                }\n            }\n        }\n\
    \    }\n    return 0;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmphnj_1mtw: /tmp/tmphnj_1mtw.cpp:31: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int sum = 0;\n    for(int i = 0; i<n; i++){\n\
    \        a[i] = i*i-1;\n        sum += a[i];\n    }\n    for(int i = 0; i<n; i++){\n\
    \        for(int j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n  \
    \              if(i<j && j<k){\n                    if(a[i] + a[j] + a[k] == sum){\n\
    \                        return 1;\n                    }\n                }\n\
    \            }\n        }\n    }\n    return 0;\n}\nint main() {\n    auto candidate\
    \ = get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: Exception
  stderr: 'tmpz3vuvqal: /tmp/tmpz3vuvqal.cpp:33: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    vector<int>\
    \ a(n);\n    long ans = 0;\n    for(int i = 1; i <= n; i++) {\n        for(int\
    \ j = i; j <= n; j++) {\n            for(int k = j; k <= n; k++) {\n         \
    \       if(i + j + k == n) {\n                    ans += 1;\n                \
    \    a[i] = a[j];\n                    a[j] = a[k];\n                    a[k]\
    \ = i;\n                }\n            }\n        }\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptuqh07gr.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmptuqh07gr.cpp:12:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   12 |     vector<int> a(n);\n      |     ^~~~~~\n/tmp/tmptuqh07gr.cpp:12:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmptuqh07gr.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmptuqh07gr.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmptuqh07gr.cpp:12:12:\
    \ error: expected primary-expression before \u2018int\u2019\n   12 |     vector<int>\
    \ a(n);\n      |            ^~~\n/tmp/tmptuqh07gr.cpp:19:21: error: \u2018a\u2019\
    \ was not declared in this scope\n   19 |                     a[i] = a[j];\n \
    \     |                     ^\n"
  stdout: ''
  timestamp: 1660113786
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    vector<long>\
    \ a(n);\n    for(long i = 0; i<n; i++){\n        a[i] = i*i-i+1;\n    }\n    sort(a.begin(),\
    \ a.end());\n    long ans = 0;\n    for(long i = 0; i<n; i++){\n        for(long\
    \ j=i+1; j<n; j++){\n            for(long k=j+1; k<n; k++){\n                if(a[i]+a[j]+a[k]==3){\n\
    \                    ans++;\n                }\n            }\n        }\n   \
    \ }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxswg6s6d.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmpxswg6s6d.cpp:12:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   12 |     vector<long> a(n);\n      |     ^~~~~~\n/tmp/tmpxswg6s6d.cpp:12:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpxswg6s6d.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpxswg6s6d.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmpxswg6s6d.cpp:12:12:\
    \ error: expected primary-expression before \u2018long\u2019\n   12 |     vector<long>\
    \ a(n);\n      |            ^~~~\n/tmp/tmpxswg6s6d.cpp:14:9: error: \u2018a\u2019\
    \ was not declared in this scope\n   14 |         a[i] = i*i-i+1;\n      |   \
    \      ^\n/tmp/tmpxswg6s6d.cpp:16:10: error: \u2018a\u2019 was not declared in\
    \ this scope\n   16 |     sort(a.begin(), a.end());\n      |          ^\n/tmp/tmpxswg6s6d.cpp:16:5:\
    \ error: \u2018sort\u2019 was not declared in this scope; did you mean \u2018\
    std::sort\u2019?\n   16 |     sort(a.begin(), a.end());\n      |     ^~~~\n  \
    \    |     std::sort\nIn file included from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpxswg6s6d.cpp:2:\n/usr/include/c++/9/pstl/glue_algorithm_defs.h:296"
  stdout: ''
  timestamp: 1660113786
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i = 0; i<n; i++){\n        a[i] = i*i - i + 1;\n\
    \    }\n    long long int ans = 0;\n    for(int i = 0; i<n; i++){\n        for(int\
    \ j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n                if(i<j\
    \ && j<k && a[i] + a[j] + a[k] % 3 == 0){\n                    ans++;\n      \
    \          }\n            }\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpsck7868o: /tmp/tmpsck7868o.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    vector<int>\
    \ a(n);\n    long count = 0;\n    for(int i = 1; i < n; i++) {\n        for(int\
    \ j = i; j < n; j++) {\n            for(int k = j; k < n; k++) {\n           \
    \     if(a[i] + a[j] + a[k] == 3) {\n                    count++;\n          \
    \      }\n            }\n        }\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n \
    \   assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n   \
    \ assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkqplkupc.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmpkqplkupc.cpp:12:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   12 |     vector<int> a(n);\n      |     ^~~~~~\n/tmp/tmpkqplkupc.cpp:12:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpkqplkupc.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpkqplkupc.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmpkqplkupc.cpp:12:12:\
    \ error: expected primary-expression before \u2018int\u2019\n   12 |     vector<int>\
    \ a(n);\n      |            ^~~\n/tmp/tmpkqplkupc.cpp:17:20: error: \u2018a\u2019\
    \ was not declared in this scope\n   17 |                 if(a[i] + a[j] + a[k]\
    \ == 3) {\n      |                    ^\n"
  stdout: ''
  timestamp: 1660113786
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int sum = 0;\n    for(int i = 0; i<n; i++){\n\
    \        a[i] = i*i-i+1;\n        sum += a[i];\n    }\n    for(int i = 0; i<n;\
    \ i++){\n        for(int j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n\
    \                if(a[i] + a[j] + a[k] == sum){\n                    return 1;\n\
    \                }\n            }\n        }\n    }\n    return 0;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpjawtx4sn: /tmp/tmpjawtx4sn.cpp:31: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int sum = 0;\n    for(int i = 0; i < n; i++){\n\
    \        a[i] = i * i - i + 1;\n        sum += a[i];\n    }\n    for(int i = 0;\
    \ i < n; i++){\n        for(int j = i+1; j < n; j++){\n            for(int k =\
    \ j+1; k < n; k++){\n                if(a[i] + a[j] + a[k] == sum){\n        \
    \            return 1;\n                }\n            }\n        }\n    }\n \
    \   return 0;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp0uj_u_ej: /tmp/tmp0uj_u_ej.cpp:31: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n    }\n  \
    \  long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=i+1;j<n;j++){\n\
    \            for(int k=j+1;k<n;k++){\n                if(a[i]+a[j]+a[k]==3){\n\
    \                    ans++;\n                }\n            }\n        }\n   \
    \ }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpd74lnyi_: /tmp/tmpd74lnyi_.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i = 0; i < n; i++){\n        a[i] = i * i - i +\
    \ 1;\n    }\n    long long int ans = 0;\n    for(int i = 0; i < n; i++){\n   \
    \     for(int j = i+1; j < n; j++){\n            for(int k = j+1; k < n; k++){\n\
    \                if(a[i] + a[j] + a[k] == 3){\n                    ans++;\n  \
    \              }\n            }\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpok_pi83e: /tmp/tmpok_pi83e.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int sum = 0;\n    for(int i = 0; i<n; i++){\n\
    \        a[i] = i*i - i + 1;\n        sum += a[i];\n    }\n    for(int i = 0;\
    \ i<n; i++){\n        for(int j = 0; j<n; j++){\n            for(int k = 0; k<n;\
    \ k++){\n                if(a[i] + a[j] + a[k] == sum){\n                    return\
    \ 1;\n                }\n            }\n        }\n    }\n    return 0;\n}\nint\
    \ main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) ==\
    \ (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n\
    \    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp6h29sk_6: /tmp/tmp6h29sk_6.cpp:31: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int sum = 0;\n    for(int i = 0; i < n; i++){\n\
    \        a[i] = i * i - i + 1;\n        sum += a[i];\n    }\n    for(int i = 0;\
    \ i < n; i++){\n        for(int j = i + 1; j < n; j++){\n            for(int k\
    \ = j + 1; k < n; k++){\n                if(a[i] + a[j] + a[k] == sum){\n    \
    \                return 1;\n                }\n            }\n        }\n    }\n\
    \    return 0;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpsalx64g4: /tmp/tmpsalx64g4.cpp:31: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i = 0; i < n; i++){\n        a[i] = i * i - i +\
    \ 1;\n    }\n    long long int ans = 0;\n    for(int i = 0; i < n; i++){\n   \
    \     for(int j = i + 1; j < n; j++){\n            for(int k = j + 1; k < n; k++){\n\
    \                if(a[i] + a[j] + a[k] == 3){\n                    ans++;\n  \
    \              }\n            }\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp_w3mu1oo: /tmp/tmp_w3mu1oo.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i = 0; i<n; i++){\n        a[i] = i * i - i + 1;\n\
    \    }\n    long long int ans = 0;\n    for(int i = 1; i<n; i++){\n        for(int\
    \ j = 1; j<n; j++){\n            for(int k = 1; k<n; k++){\n                if(a[i]\
    \ + a[j] + a[k] == 3){\n                    ans++;\n                }\n      \
    \      }\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: Exception
  stderr: 'tmpheul58qs: /tmp/tmpheul58qs.cpp:31: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i = 0; i < n; i++){\n        a[i] = i * i - i +\
    \ 1;\n    }\n    long long int max_triples = 0;\n    for(int i = 0; i < n; i++){\n\
    \        for(int j = 0; j < n; j++){\n            for(int k = 0; k < n; k++){\n\
    \                if(a[i] < a[j] && a[i] < a[k]){\n                    max_triples\
    \ += 1;\n                }\n            }\n        }\n    }\n    return max_triples;\n\
    }\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpg24xxjyb: /tmp/tmpg24xxjyb.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    vector<int>\
    \ a(n);\n    long ans = 0;\n    for(int i = 1; i < n; i++) {\n        for(int\
    \ j = i; j < n; j++) {\n            for(int k = j; k < n; k++) {\n           \
    \     if(a[i] + a[j] + a[k] == (3 * i) + (3 * j) + (3 * k)) {\n              \
    \      ans += 1;\n                }\n            }\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpu__6cveb.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmpu__6cveb.cpp:12:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   12 |     vector<int> a(n);\n      |     ^~~~~~\n/tmp/tmpu__6cveb.cpp:12:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpu__6cveb.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpu__6cveb.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmpu__6cveb.cpp:12:12:\
    \ error: expected primary-expression before \u2018int\u2019\n   12 |     vector<int>\
    \ a(n);\n      |            ^~~\n/tmp/tmpu__6cveb.cpp:17:20: error: \u2018a\u2019\
    \ was not declared in this scope\n   17 |                 if(a[i] + a[j] + a[k]\
    \ == (3 * i) + (3 * j) + (3 * k)) {\n      |                    ^\n"
  stdout: ''
  timestamp: 1660113786
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int sum = 0;\n    for(int i = 0; i<n; i++){\n\
    \        a[i] = i*i-1;\n        sum += a[i];\n    }\n    for(int i = 0; i<n; i++){\n\
    \        for(int j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n  \
    \              if(i<j && j<k){\n                    if(a[i] + a[j] + a[k] == sum){\n\
    \                        return i+j+k;\n                    }\n              \
    \  }\n            }\n        }\n    }\n    return 0;\n}\nint main() {\n    auto\
    \ candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: Exception
  stderr: 'tmpew9uqlie: /tmp/tmpew9uqlie.cpp:33: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int count = 0;\n    for(int i = 0; i<n; i++){\n\
    \        a[i] = i*i - i + 1;\n    }\n    for(int i = 0; i<n; i++){\n        for(int\
    \ j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n                if(i<j\
    \ && i<k && j<k){\n                    if(a[i] + a[j] + a[k] == 3){\n        \
    \                count++;\n                    }\n                }\n        \
    \    }\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: Exception
  stderr: 'tmpswmc7wl6: /tmp/tmpswmc7wl6.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    vector<long>\
    \ a(n);\n    long sum = 0;\n    long temp = 0;\n    long count = 0;\n    for(int\
    \ i = 1; i <= n; i++) {\n        temp = i * i - i + 1;\n        for(int j = 1;\
    \ j <= n; j++) {\n            if(i + j > n) {\n                break;\n      \
    \      }\n            if(a[j] == 0) {\n                a[j] = temp;\n        \
    \        sum += temp;\n                count++;\n            }\n        }\n  \
    \  }\n    return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_xifucqc.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmp_xifucqc.cpp:12:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   12 |     vector<long> a(n);\n      |     ^~~~~~\n/tmp/tmp_xifucqc.cpp:12:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp_xifucqc.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp_xifucqc.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmp_xifucqc.cpp:12:12:\
    \ error: expected primary-expression before \u2018long\u2019\n   12 |     vector<long>\
    \ a(n);\n      |            ^~~~\n/tmp/tmp_xifucqc.cpp:22:16: error: \u2018a\u2019\
    \ was not declared in this scope\n   22 |             if(a[j] == 0) {\n      |\
    \                ^\n"
  stdout: ''
  timestamp: 1660113786
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n    }\n  \
    \  long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(i<j && i<k && j<k){\n \
    \                   if(a[i]+a[j]+a[k]==3){\n                        ans++;\n \
    \                   }\n                }\n            }\n        }\n    }\n  \
    \  return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpv6gkm3o1: /tmp/tmpv6gkm3o1.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113786
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int sum = 0;\n    for(int i = 0; i<n; i++){\n\
    \        a[i] = i*i-i+1;\n        sum += a[i];\n    }\n    for(int i = 0; i<n;\
    \ i++){\n        for(int j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n\
    \                if(a[i] + a[j] + a[k] == sum){\n                    return 1;\n\
    \                }\n            }\n        }\n    }\n    return 0;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpjawtx4sn: /tmp/tmpjawtx4sn.cpp:31: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i = 0; i<n; i++){\n        a[i] = i*i-i+1;\n   \
    \ }\n    sort(a, a+n);\n    long long int ans = 0;\n    for(int i = 0; i<n; i++){\n\
    \        for(int j = i+1; j<n; j++){\n            for(int k = j+1; k<n; k++){\n\
    \                if(a[i]+a[j]+a[k] == 3){\n                    ans++;\n      \
    \          }\n            }\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3lzhu_6d.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmp3lzhu_6d.cpp:16:5: error: \u2018sort\u2019 was not declared in this\
    \ scope; did you mean \u2018std::sort\u2019?\n   16 |     sort(a, a+n);\n    \
    \  |     ^~~~\n      |     std::sort\nIn file included from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp3lzhu_6d.cpp:2:\n/usr/include/c++/9/pstl/glue_algorithm_defs.h:296:1:\
    \ note: \u2018std::sort\u2019 declared here\n  296 | sort(_ExecutionPolicy&& __exec,\
    \ _RandomAccessIterator __first, _RandomAccessIterator __last);\n      | ^~~~\n"
  stdout: ''
  timestamp: 1660113786
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    vector<long>\
    \ a(n);\n    long sum = 0;\n    for(int i = 0; i < n; i++) {\n        sum += a[i]\
    \ = i * i - i + 1;\n    }\n    long ans = 0;\n    for(int i = 0; i < n; i++) {\n\
    \        for(int j = i + 1; j < n; j++) {\n            for(int k = j + 1; k <\
    \ n; k++) {\n                if(sum % 3 == 0) {\n                    ans++;\n\
    \                }\n                sum += a[k];\n            }\n        }\n \
    \   }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpg7l257nz.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmpg7l257nz.cpp:12:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   12 |     vector<long> a(n);\n      |     ^~~~~~\n/tmp/tmpg7l257nz.cpp:12:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpg7l257nz.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpg7l257nz.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmpg7l257nz.cpp:12:12:\
    \ error: expected primary-expression before \u2018long\u2019\n   12 |     vector<long>\
    \ a(n);\n      |            ^~~~\n/tmp/tmpg7l257nz.cpp:15:16: error: \u2018a\u2019\
    \ was not declared in this scope\n   15 |         sum += a[i] = i * i - i + 1;\n\
    \      |                ^\n/tmp/tmpg7l257nz.cpp:24:24: error: \u2018a\u2019 was\
    \ not declared in this scope\n   24 |                 sum += a[k];\n      |  \
    \                      ^\n"
  stdout: ''
  timestamp: 1660113786
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int sum = 0;\n    for(int i = 0; i<n; i++){\n\
    \        a[i] = i*i-i+1;\n    }\n    for(int i = 0; i<n; i++){\n        for(int\
    \ j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n                if(i<j\
    \ && j<k){\n                    if(a[i]+a[j]+a[k]==3){\n                     \
    \   sum++;\n                    }\n                }\n            }\n        }\n\
    \    }\n    return sum;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp1ys2zrwe: /tmp/tmp1ys2zrwe.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    vector<long>\
    \ a(n);\n    long sum = 0;\n    long count = 0;\n    for(int i = 1; i < n; i++)\
    \ {\n        sum += a[i];\n        for(int j = i; j < n; j++) {\n            sum\
    \ += a[j];\n            for(int k = j; k < n; k++) {\n                sum += a[k];\n\
    \                if((sum % 3) == 0) {\n                    count++;\n        \
    \        }\n            }\n        }\n    }\n    return count;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpveaet5w2.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmpveaet5w2.cpp:12:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   12 |     vector<long> a(n);\n      |     ^~~~~~\n/tmp/tmpveaet5w2.cpp:12:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpveaet5w2.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpveaet5w2.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmpveaet5w2.cpp:12:12:\
    \ error: expected primary-expression before \u2018long\u2019\n   12 |     vector<long>\
    \ a(n);\n      |            ^~~~\n/tmp/tmpveaet5w2.cpp:16:16: error: \u2018a\u2019\
    \ was not declared in this scope\n   16 |         sum += a[i];\n      |      \
    \          ^\n"
  stdout: ''
  timestamp: 1660113786
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int triples = 0;\n    for(int i = 0; i<n; i++){\n\
    \        a[i] = i*i-i+1;\n    }\n    for(int i = 0; i<n; i++){\n        for(int\
    \ j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n                if(i<j\
    \ && i<k && j<k){\n                    if(a[i]+a[j]+a[k]==3){\n              \
    \          triples++;\n                    }\n                }\n            }\n\
    \        }\n    }\n    return triples;\n}\nint main() {\n    auto candidate =\
    \ get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: Exception
  stderr: 'tmpk7q2ex2q: /tmp/tmpk7q2ex2q.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i = 0; i<n; i++){\n        a[i] = i*i-i+1;\n   \
    \ }\n    long long int ans = 0;\n    for(int i = 0; i<n; i++){\n        for(int\
    \ j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n                if(i<j\
    \ && j<k){\n                    if(a[i]+a[j]+a[k]==3){\n                     \
    \   ans++;\n                    }\n                }\n            }\n        }\n\
    \    }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmporvhaa5x: /tmp/tmporvhaa5x.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n    }\n  \
    \  long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(i<j && j<k && a[i]+a[j]+a[k]==3){\n\
    \                    ans++;\n                }\n            }\n        }\n   \
    \ }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpxrwn_s35: /tmp/tmpxrwn_s35.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i = 0; i<n; i++){\n        a[i] = i*i-1;\n    }\n\
    \    long long int ans = 0;\n    for(int i = 0; i<n; i++){\n        for(int j\
    \ = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n                if(i<j\
    \ && i<k && j<k){\n                    if(a[i]+a[j]+a[k]==3){\n              \
    \          ans++;\n                    }\n                }\n            }\n \
    \       }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpo52368id: /tmp/tmpo52368id.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i = 0; i<n; i++){\n        a[i] = i*i-1;\n    }\n\
    \    long long int ans = 0;\n    for(int i = 1; i<n; i++){\n        for(int j\
    \ = 1; j<n; j++){\n            for(int k = 1; k<n; k++){\n                if(a[i]\
    \ + a[j] + a[k] == 3){\n                    ans++;\n                }\n      \
    \      }\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: Exception
  stderr: 'tmpm5ff0lgj: /tmp/tmpm5ff0lgj.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    vector<long>\
    \ a(n);\n    long sum = 0;\n    long max_triples = 0;\n    for(int i = 0; i<n;\
    \ i++){\n        a[i] = i*i - i + 1;\n        sum += a[i];\n        if(sum > max_triples){\n\
    \            max_triples = sum;\n        }\n    }\n    return max_triples;\n}\n\
    int main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphpydy59g.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmphpydy59g.cpp:12:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   12 |     vector<long> a(n);\n      |     ^~~~~~\n/tmp/tmphpydy59g.cpp:12:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmphpydy59g.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmphpydy59g.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmphpydy59g.cpp:12:12:\
    \ error: expected primary-expression before \u2018long\u2019\n   12 |     vector<long>\
    \ a(n);\n      |            ^~~~\n/tmp/tmphpydy59g.cpp:16:9: error: \u2018a\u2019\
    \ was not declared in this scope\n   16 |         a[i] = i*i - i + 1;\n      |\
    \         ^\n"
  stdout: ''
  timestamp: 1660113786
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int sum = 0;\n    for(int i = 0; i < n; i++){\n\
    \        a[i] = i * i - i + 1;\n        sum += a[i];\n    }\n    for(int i = 0;\
    \ i < n; i++){\n        for(int j = i + 1; j < n; j++){\n            for(int k\
    \ = j + 1; k < n; k++){\n                if(a[i] + a[j] + a[k] == sum){\n    \
    \                return 1;\n                }\n            }\n        }\n    }\n\
    \    return 0;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpsalx64g4: /tmp/tmpsalx64g4.cpp:31: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i = 0; i < n; i++){\n        a[i] = i * i - i +\
    \ 1;\n    }\n    long long int ans = 0;\n    for(int i = 0; i < n; i++){\n   \
    \     for(int j = i + 1; j < n; j++){\n            for(int k = j + 1; k < n; k++){\n\
    \                if(a[i] + a[j] + a[k] == 3){\n                    ans++;\n  \
    \              }\n            }\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp_w3mu1oo: /tmp/tmp_w3mu1oo.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int sum = 0;\n    for(int i = 0; i<n; i++){\n\
    \        a[i] = i*(i+1)-1;\n        sum += a[i];\n    }\n    for(int i = 0; i<n;\
    \ i++){\n        for(int j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n\
    \                if(i<j && j<k){\n                    if(a[i] + a[j] + a[k] ==\
    \ sum){\n                        return 1;\n                    }\n          \
    \      }\n            }\n        }\n    }\n    return 0;\n}\nint main() {\n  \
    \  auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n   \
    \ assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: Exception
  stderr: 'tmppyknm98o: /tmp/tmppyknm98o.cpp:34: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    vector<long>\
    \ a(n);\n    long sum = 0;\n    for(int i = 0; i<n; i++){\n        sum+=a[i]*a[i]+a[i];\n\
    \        a[i]=a[i]*a[i]-a[i];\n    }\n    long ans = 0;\n    for(int i = 0; i<n;\
    \ i++){\n        for(int j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n\
    \                if(i<j && j<k){\n                    if(a[i]+a[j]+a[k]==sum){\n\
    \                        ans++;\n                    }\n                }\n  \
    \          }\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzdchssmr.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmpzdchssmr.cpp:12:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   12 |     vector<long> a(n);\n      |     ^~~~~~\n/tmp/tmpzdchssmr.cpp:12:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpzdchssmr.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpzdchssmr.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmpzdchssmr.cpp:12:12:\
    \ error: expected primary-expression before \u2018long\u2019\n   12 |     vector<long>\
    \ a(n);\n      |            ^~~~\n/tmp/tmpzdchssmr.cpp:15:14: error: \u2018a\u2019\
    \ was not declared in this scope\n   15 |         sum+=a[i]*a[i]+a[i];\n     \
    \ |              ^\n/tmp/tmpzdchssmr.cpp:23:24: error: \u2018a\u2019 was not declared\
    \ in this scope\n   23 |                     if(a[i]+a[j]+a[k]==sum){\n      |\
    \                        ^\n"
  stdout: ''
  timestamp: 1660113787
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n    }\n  \
    \  long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(i<j && j<k && a[i]+a[j]+a[k]==3){\n\
    \                    ans++;\n                }\n            }\n        }\n   \
    \ }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpxrwn_s35: /tmp/tmpxrwn_s35.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i = 0; i<n; i++){\n        a[i] = i*(i-1)+i+1;\n\
    \    }\n    long long int ans = 0;\n    for(int i = 1; i<n; i++){\n        for(int\
    \ j = 1; j<n; j++){\n            for(int k = 1; k<n; k++){\n                if(a[i]+a[j]+a[k]\
    \ == 3*(i+j+k)){\n                    ans++;\n                }\n            }\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp_agy6sr_: /tmp/tmp_agy6sr_.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    vector<long>\
    \ a(n);\n    for(int i = 0; i < n; i++) {\n        a[i] = i * i - i + 1;\n   \
    \ }\n    sort(a.begin(), a.end());\n    long ans = 0;\n    for(int i = 0; i <\
    \ n; i++) {\n        for(int j = i + 1; j < n; j++) {\n            for(int k =\
    \ j + 1; k < n; k++) {\n                if(a[i] + a[j] + a[k] == 3) {\n      \
    \              ans++;\n                }\n            }\n        }\n    }\n  \
    \  return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpucetqvl1.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmpucetqvl1.cpp:12:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   12 |     vector<long> a(n);\n      |     ^~~~~~\n/tmp/tmpucetqvl1.cpp:12:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpucetqvl1.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpucetqvl1.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmpucetqvl1.cpp:12:12:\
    \ error: expected primary-expression before \u2018long\u2019\n   12 |     vector<long>\
    \ a(n);\n      |            ^~~~\n/tmp/tmpucetqvl1.cpp:14:9: error: \u2018a\u2019\
    \ was not declared in this scope\n   14 |         a[i] = i * i - i + 1;\n    \
    \  |         ^\n/tmp/tmpucetqvl1.cpp:16:10: error: \u2018a\u2019 was not declared\
    \ in this scope\n   16 |     sort(a.begin(), a.end());\n      |          ^\n/tmp/tmpucetqvl1.cpp:16:5:\
    \ error: \u2018sort\u2019 was not declared in this scope; did you mean \u2018\
    std::sort\u2019?\n   16 |     sort(a.begin(), a.end());\n      |     ^~~~\n  \
    \    |     std::sort\nIn file included from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpucetqvl1.cpp:2:\n/usr/include/c++/9/pstl/glue_algorithm_defs"
  stdout: ''
  timestamp: 1660113786
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    vector<long>\
    \ a(n);\n    long ans = 0;\n    for(long i = 1; i < n; i++) {\n        for(long\
    \ j = i; j < n; j++) {\n            for(long k = j; k < n; k++) {\n          \
    \      if(i + j + k == a[i]) {\n                    ans += 1;\n              \
    \  }\n            }\n        }\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpullo3nng.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmpullo3nng.cpp:12:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   12 |     vector<long> a(n);\n      |     ^~~~~~\n/tmp/tmpullo3nng.cpp:12:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpullo3nng.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpullo3nng.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmpullo3nng.cpp:12:12:\
    \ error: expected primary-expression before \u2018long\u2019\n   12 |     vector<long>\
    \ a(n);\n      |            ^~~~\n/tmp/tmpullo3nng.cpp:17:33: error: \u2018a\u2019\
    \ was not declared in this scope\n   17 |                 if(i + j + k == a[i])\
    \ {\n      |                                 ^\n"
  stdout: ''
  timestamp: 1660113786
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int sum = 0;\n    for(int i = 1; i < n; i++) {\n\
    \        a[i] = i * i - i + 1;\n        sum += a[i];\n    }\n    for(int i = 1;\
    \ i < n; i++) {\n        for(int j = 1; j < n; j++) {\n            for(int k =\
    \ 1; k < n; k++) {\n                if(a[i] + a[j] + a[k] == sum) {\n        \
    \            return 1;\n                }\n            }\n        }\n    }\n \
    \   return 0;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp6982_xge: /tmp/tmp6982_xge.cpp:31: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int sum = 0;\n    for(int i = 0; i<n; i++){\n\
    \        a[i] = i * i - i + 1;\n        sum += a[i];\n    }\n    for(int i = 0;\
    \ i<n; i++){\n        for(int j = 0; j<n; j++){\n            for(int k = 0; k<n;\
    \ k++){\n                if(i<j && j<k){\n                    if(a[i] + a[j] +\
    \ a[k] == sum){\n                        return 1;\n                    }\n  \
    \              }\n            }\n        }\n    }\n    return 0;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpt2rmrsox: /tmp/tmpt2rmrsox.cpp:33: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n    }\n  \
    \  long long int sum=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(i<j && i<k && j<k){\n \
    \                   if(a[i]+a[j]+a[k]==3){\n                        sum++;\n \
    \                   }\n                }\n            }\n        }\n    }\n  \
    \  return sum;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpr5b_8ixq: /tmp/tmpr5b_8ixq.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int triples = 0;\n    for(int i = 0; i<n; i++){\n\
    \        a[i] = i*i-1;\n    }\n    for(int i = 1; i<n; i++){\n        for(int\
    \ j = 1; j<n; j++){\n            for(int k = 1; k<n; k++){\n                if(i<j\
    \ && i<k && j<k){\n                    if(a[i] + a[j] + a[k]==3){\n          \
    \              triples++;\n                    }\n                }\n        \
    \    }\n        }\n    }\n    return triples;\n}\nint main() {\n    auto candidate\
    \ = get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: Exception
  stderr: 'tmpjoojli8h: /tmp/tmpjoojli8h.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int count = 0;\n    for(int i = 1; i < n; i++)\
    \ {\n        a[i] = i * i - i + 1;\n    }\n    for(int i = 1; i < n; i++) {\n\
    \        for(int j = 1; j < n; j++) {\n            for(int k = 1; k < n; k++)\
    \ {\n                if(a[i] + a[j] + a[k] == 3) {\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\nint\
    \ main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) ==\
    \ (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n\
    \    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpa1wopqqw: /tmp/tmpa1wopqqw.cpp:31: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113789
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n    }\n  \
    \  long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(a[i]+a[j]+a[k]==3){\n \
    \                   ans++;\n                }\n            }\n        }\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n   \
    \ assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpda1k_znz: /tmp/tmpda1k_znz.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n    }\n  \
    \  long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(i<j && j<k && a[i]+a[j]+a[k]==3){\n\
    \                    ans++;\n                }\n            }\n        }\n   \
    \ }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpxrwn_s35: /tmp/tmpxrwn_s35.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n    }\n  \
    \  long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(i<j && j<k){\n        \
    \            if(a[i]+a[j]+a[k]==3){\n                        ans++;\n        \
    \            }\n                }\n            }\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp5v4gbmt2: /tmp/tmp5v4gbmt2.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113789
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int count = 0;\n    for(int i = 1; i <= n; i++)\
    \ {\n        a[i] = i * i - i + 1;\n    }\n    for(int i = 1; i <= n; i++) {\n\
    \        for(int j = 1; j <= n; j++) {\n            for(int k = 1; k <= n; k++)\
    \ {\n                if(a[i] + a[j] + a[k] == 3) {\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\nint\
    \ main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) ==\
    \ (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n\
    \    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpozumy5sf: /tmp/tmpozumy5sf.cpp:31: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113789
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n    }\n  \
    \  long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(i<j && j<k && a[i]+a[j]+a[k]==3){\n\
    \                    ans++;\n                }\n            }\n        }\n   \
    \ }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpxrwn_s35: /tmp/tmpxrwn_s35.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int sum = 0;\n    for(int i = 0; i<n; i++){\n\
    \        a[i] = i*i-i+1;\n        sum += a[i];\n    }\n    for(int i = 0; i<n;\
    \ i++){\n        for(int j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n\
    \                if(i<j && j<k){\n                    if(a[i] + a[j] + a[k] ==\
    \ sum){\n                        return 1;\n                    }\n          \
    \      }\n            }\n        }\n    }\n    return 0;\n}\nint main() {\n  \
    \  auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n   \
    \ assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: Exception
  stderr: 'tmp62okp3sy: /tmp/tmp62okp3sy.cpp:33: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113789
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int sum = 0;\n    for(int i = 0; i < n; i++){\n\
    \        a[i] = i * i - i + 1;\n        sum += a[i];\n    }\n    for(int i = 0;\
    \ i < n; i++){\n        for(int j = 0; j < n; j++){\n            for(int k = 0;\
    \ k < n; k++){\n                if(a[i] < a[j] && a[i] < a[k]){\n            \
    \        if(a[j] + a[k] == sum){\n                        return 1;\n        \
    \            }\n                }\n            }\n        }\n    }\n    return\
    \ 0;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpa33uuc6y: /tmp/tmpa33uuc6y.cpp:33: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113789
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int sum = 0;\n    for(int i = 0; i<n; i++){\n\
    \        a[i] = i*(i+1)-1;\n        sum += a[i];\n    }\n    for(int i = 0; i<n;\
    \ i++){\n        for(int j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n\
    \                if(i<j && j<k){\n                    if(a[i] + a[j] + a[k] ==\
    \ sum){\n                        return 1;\n                    }\n          \
    \      }\n            }\n        }\n    }\n    return 0;\n}\nint main() {\n  \
    \  auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n   \
    \ assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: Exception
  stderr: 'tmppyknm98o: /tmp/tmppyknm98o.cpp:34: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int sum = 0;\n    for(int i = 0; i < n; i++){\n\
    \        a[i] = i * i - i + 1;\n        sum += a[i];\n    }\n    for(int i = 0;\
    \ i < n; i++){\n        for(int j = i + 1; j < n; j++){\n            for(int k\
    \ = j + 1; k < n; k++){\n                if(a[i] + a[j] + a[k] == sum){\n    \
    \                return 1;\n                }\n            }\n        }\n    }\n\
    \    return 0;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpsalx64g4: /tmp/tmpsalx64g4.cpp:31: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int sum = 0;\n    for(int i = 0; i<n; i++){\n\
    \        a[i] = i*i - i + 1;\n        sum += a[i];\n    }\n    long long int ans\
    \ = 0;\n    for(int i = 0; i<n; i++){\n        for(int j = 0; j<n; j++){\n   \
    \         for(int k = 0; k<n; k++){\n                if(a[i] + a[j] + a[k] ==\
    \ sum){\n                    ans++;\n                }\n            }\n      \
    \  }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp9kdzvvk0: /tmp/tmp9kdzvvk0.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113790
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int count = 0;\n    for(int i = 0; i<n; i++){\n\
    \        a[i] = i * i - i + 1;\n    }\n    for(int i = 0; i<n; i++){\n       \
    \ for(int j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n         \
    \       if(i<j && j<k){\n                    if(a[i] + a[j] + a[k] == 3){\n  \
    \                      count++;\n                    }\n                }\n  \
    \          }\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: Exception
  stderr: 'tmpeh3hs6in: /tmp/tmpeh3hs6in.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113790
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int sum = 0;\n    for(int i = 0; i<n; i++){\n\
    \        a[i] = i*i - i + 1;\n        sum += a[i];\n    }\n    long long int ans\
    \ = 0;\n    for(int i = 0; i<n; i++){\n        for(int j = 0; j<n; j++){\n   \
    \         for(int k = 0; k<n; k++){\n                if(i<j && j<k && a[i] + a[j]\
    \ + a[k] == sum){\n                    ans++;\n                }\n           \
    \ }\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate =\
    \ get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: Exception
  stderr: 'tmp_rxo5w8_: /tmp/tmp_rxo5w8_.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113789
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int cnt = 0;\n    for(int i = 1; i <= n; i++){\n\
    \        a[i] = i * i - i + 1;\n    }\n    for(int i = 1; i <= n; i++){\n    \
    \    for(int j = 1; j <= n; j++){\n            for(int k = 1; k <= n; k++){\n\
    \                if(a[i] + a[j] + a[k] == 3){\n                    cnt++;\n  \
    \              }\n            }\n        }\n    }\n    return cnt;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpg3huu6dy: /tmp/tmpg3huu6dy.cpp:31: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113789
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    vector<long>\
    \ a(n);\n    long ans = 0;\n    for(int i = 0; i < n; i++) {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for(int i = 0; i < n; i++) {\n        for(int j = i\
    \ + 1; j < n; j++) {\n            for(int k = j + 1; k < n; k++) {\n         \
    \       if(a[i] + a[j] + a[k] == 3) {\n                    ans++;\n          \
    \      }\n            }\n        }\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n \
    \   assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n   \
    \ assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4lso8jze.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmp4lso8jze.cpp:12:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   12 |     vector<long> a(n);\n      |     ^~~~~~\n/tmp/tmp4lso8jze.cpp:12:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp4lso8jze.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp4lso8jze.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmp4lso8jze.cpp:12:12:\
    \ error: expected primary-expression before \u2018long\u2019\n   12 |     vector<long>\
    \ a(n);\n      |            ^~~~\n/tmp/tmp4lso8jze.cpp:15:9: error: \u2018a\u2019\
    \ was not declared in this scope\n   15 |         a[i] = i * i - i + 1;\n    \
    \  |         ^\n/tmp/tmp4lso8jze.cpp:20:20: error: \u2018a\u2019 was not declared\
    \ in this scope\n   20 |                 if(a[i] + a[j] + a[k] == 3) {\n     \
    \ |                    ^\n"
  stdout: ''
  timestamp: 1660113789
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i = 0; i<n; i++){\n        a[i] = i*i-1;\n    }\n\
    \    long long int sum = 0;\n    for(int i = 0; i<n; i++){\n        for(int j\
    \ = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n                if(i<j\
    \ && j<k){\n                    if(a[i]+a[j]+a[k]==3){\n                     \
    \   sum++;\n                    }\n                }\n            }\n        }\n\
    \    }\n    return sum;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpqeq9kvbz: /tmp/tmpqeq9kvbz.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113790
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i=0;i<n;i++)\n    {\n        a[i]=i*i-i+1;\n   \
    \ }\n    long long int ans=0;\n    for(int i=0;i<n;i++)\n    {\n        for(int\
    \ j=0;j<n;j++)\n        {\n            for(int k=0;k<n;k++)\n            {\n \
    \               if(i<j && j<k && a[i]+a[j]+a[k]==3)\n                {\n     \
    \               ans++;\n                }\n            }\n        }\n    }\n \
    \   return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpqb3ysvap: /tmp/tmpqb3ysvap.cpp:35: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113789
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i=0;i<n;i++)\n    {\n        a[i]=i*i-i+1;\n   \
    \ }\n    long long int ans=0;\n    for(int i=0;i<n;i++)\n    {\n        for(int\
    \ j=i+1;j<n;j++)\n        {\n            for(int k=j+1;k<n;k++)\n            {\n\
    \                if(a[i]+a[j]+a[k]==3)\n                {\n                  \
    \  ans++;\n                }\n            }\n        }\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmplvpdvaya: /tmp/tmplvpdvaya.cpp:35: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113789
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n    }\n  \
    \  long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(i<j && i<k && j<k){\n \
    \                   if(a[i]+a[j]+a[k]==3){\n                        ans++;\n \
    \                   }\n                }\n            }\n        }\n    }\n  \
    \  return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpv6gkm3o1: /tmp/tmpv6gkm3o1.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113786
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n    }\n  \
    \  long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(a[i]+a[j]+a[k]==3){\n \
    \                   ans++;\n                }\n            }\n        }\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n   \
    \ assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpda1k_znz: /tmp/tmpda1k_znz.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    vector<long>\
    \ a(n);\n    for(int i = 0; i < n; i++){\n        a[i] = i * i - i + 1;\n    }\n\
    \    sort(a.begin(), a.end());\n    long ans = 0;\n    for(int i = 0; i < n; i++){\n\
    \        for(int j = i + 1; j < n; j++){\n            for(int k = j + 1; k < n;\
    \ k++){\n                if(a[i] + a[j] + a[k] == 3){\n                    ans++;\n\
    \                }\n            }\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpeyg16uns.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmpeyg16uns.cpp:12:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   12 |     vector<long> a(n);\n      |     ^~~~~~\n/tmp/tmpeyg16uns.cpp:12:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpeyg16uns.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpeyg16uns.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmpeyg16uns.cpp:12:12:\
    \ error: expected primary-expression before \u2018long\u2019\n   12 |     vector<long>\
    \ a(n);\n      |            ^~~~\n/tmp/tmpeyg16uns.cpp:14:9: error: \u2018a\u2019\
    \ was not declared in this scope\n   14 |         a[i] = i * i - i + 1;\n    \
    \  |         ^\n/tmp/tmpeyg16uns.cpp:16:10: error: \u2018a\u2019 was not declared\
    \ in this scope\n   16 |     sort(a.begin(), a.end());\n      |          ^\n/tmp/tmpeyg16uns.cpp:16:5:\
    \ error: \u2018sort\u2019 was not declared in this scope; did you mean \u2018\
    std::sort\u2019?\n   16 |     sort(a.begin(), a.end());\n      |     ^~~~\n  \
    \    |     std::sort\nIn file included from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpeyg16uns.cpp:2:\n/usr/include/c++/9/pstl/glue_algorithm_defs"
  stdout: ''
  timestamp: 1660113789
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    vector<long>\
    \ a(n);\n    long ans = 0;\n    for(int i = 1; i <= n; i++) {\n        for(int\
    \ j = i; j <= n; j++) {\n            for(int k = j; k <= n; k++) {\n         \
    \       if(i + j + k == n) {\n                    ans += 1;\n                \
    \    a[i] = i * i - i + 1;\n                    a[j] = i * j - j + 1;\n      \
    \              a[k] = i * k - k + 1;\n                }\n            }\n     \
    \   }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfeymosik.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmpfeymosik.cpp:12:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   12 |     vector<long> a(n);\n      |     ^~~~~~\n/tmp/tmpfeymosik.cpp:12:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpfeymosik.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpfeymosik.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmpfeymosik.cpp:12:12:\
    \ error: expected primary-expression before \u2018long\u2019\n   12 |     vector<long>\
    \ a(n);\n      |            ^~~~\n/tmp/tmpfeymosik.cpp:19:21: error: \u2018a\u2019\
    \ was not declared in this scope\n   19 |                     a[i] = i * i - i\
    \ + 1;\n      |                     ^\n"
  stdout: ''
  timestamp: 1660113788
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int sum = 0;\n    for(int i = 0; i<n; i++){\n\
    \        a[i] = i*i-i+1;\n    }\n    for(int i = 0; i<n; i++){\n        for(int\
    \ j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n                if(i<j\
    \ && j<k){\n                    if(a[i]+a[j]+a[k]==3){\n                     \
    \   sum++;\n                    }\n                }\n            }\n        }\n\
    \    }\n    return sum;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp1ys2zrwe: /tmp/tmp1ys2zrwe.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int sum = 0;\n    for(int i = 0; i<n; i++){\n\
    \        a[i] = i*i-i+1;\n        sum += a[i];\n    }\n    for(int i = 0; i<n;\
    \ i++){\n        for(int j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n\
    \                if(i<j && j<k && a[i] + a[j] + a[k] == sum){\n              \
    \      return 1;\n                }\n            }\n        }\n    }\n    return\
    \ 0;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp_6nor75u: /tmp/tmp_6nor75u.cpp:31: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113790
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i = 0; i<n; i++){\n        a[i] = i*i-1;\n    }\n\
    \    long long int ans = 0;\n    for(int i = 0; i<n; i++){\n        for(int j\
    \ = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n                if(i<j\
    \ && j<k && a[i] + a[j] + a[k] == 3){\n                    ans++;\n          \
    \      }\n            }\n        }\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n \
    \   assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n   \
    \ assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpj7b55j46: /tmp/tmpj7b55j46.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113790
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n    }\n  \
    \  long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=i+1;j<n;j++){\n\
    \            for(int k=j+1;k<n;k++){\n                if(a[i]+a[j]+a[k]==3){\n\
    \                    ans++;\n                }\n            }\n        }\n   \
    \ }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpd74lnyi_: /tmp/tmpd74lnyi_.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n    }\n  \
    \  long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(a[i]+a[j]+a[k]==3){\n \
    \                   ans++;\n                }\n            }\n        }\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n   \
    \ assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpda1k_znz: /tmp/tmpda1k_znz.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    vector<long>\
    \ a(n);\n    long sum = 0;\n    long count = 0;\n    for(int i = 0; i<n; i++)\
    \ {\n        sum += a[i];\n    }\n    for(int i = 0; i<n; i++) {\n        for(int\
    \ j = 0; j<n; j++) {\n            for(int k = 0; k<n; k++) {\n               \
    \ if(i<j && i<k && j<k) {\n                    if(a[i] + a[j] + a[k] == sum) {\n\
    \                        count++;\n                    }\n                }\n\
    \            }\n        }\n    }\n    return count;\n}\nint main() {\n    auto\
    \ candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8m4yt11o.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmp8m4yt11o.cpp:12:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   12 |     vector<long> a(n);\n      |     ^~~~~~\n/tmp/tmp8m4yt11o.cpp:12:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp8m4yt11o.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp8m4yt11o.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmp8m4yt11o.cpp:12:12:\
    \ error: expected primary-expression before \u2018long\u2019\n   12 |     vector<long>\
    \ a(n);\n      |            ^~~~\n/tmp/tmp8m4yt11o.cpp:16:16: error: \u2018a\u2019\
    \ was not declared in this scope\n   16 |         sum += a[i];\n      |      \
    \          ^\n/tmp/tmp8m4yt11o.cpp:22:24: error: \u2018a\u2019 was not declared\
    \ in this scope\n   22 |                     if(a[i] + a[j] + a[k] == sum) {\n\
    \      |                        ^\n"
  stdout: ''
  timestamp: 1660113789
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int cnt = 0;\n    for(int i = 1; i <= n; i++)\
    \ {\n        a[i] = i * i - i + 1;\n    }\n    for(int i = 1; i <= n; i++) {\n\
    \        for(int j = 1; j <= n; j++) {\n            for(int k = 1; k <= n; k++)\
    \ {\n                if(a[i] + a[j] + a[k] == 3) {\n                    cnt++;\n\
    \                }\n            }\n        }\n    }\n    return cnt;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpj4t4kn03: /tmp/tmpj4t4kn03.cpp:31: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113789
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int ans = 0;\n    for(int i = 0; i<n; i++){\n\
    \        a[i] = i*i-i+1;\n    }\n    for(int i = 0; i<n; i++){\n        for(int\
    \ j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n                if(i<j\
    \ && j<k && a[i]+a[j]+a[k]==3){\n                    ans++;\n                }\n\
    \            }\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: Exception
  stderr: 'tmpmcsalhvs: /tmp/tmpmcsalhvs.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113789
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i = 0; i<n; i++){\n        a[i] = i*(i-1)+i+1;\n\
    \    }\n    long long int max_triple = 0;\n    for(int i = 0; i<n; i++){\n   \
    \     for(int j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n     \
    \           if(i<j && j<k){\n                    if(a[i]+a[j]+a[k] % 3 == 0){\n\
    \                        max_triple++;\n                    }\n              \
    \  }\n            }\n        }\n    }\n    return max_triple;\n}\nint main() {\n\
    \    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n \
    \   assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n   \
    \ assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp3m1e8rrb: /tmp/tmp3m1e8rrb.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113790
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    vector<long>\
    \ a(n);\n    for(long i = 1; i < n; i++) {\n        for(long j = i; j < n; j++)\
    \ {\n            for(long k = j; k < n; k++) {\n                a[i] = a[i] +\
    \ a[j] + a[k];\n            }\n        }\n    }\n    sort(a.begin(), a.end());\n\
    \    long ans = 0;\n    for(long i = 1; i < n; i++) {\n        for(long j = i;\
    \ j < n; j++) {\n            for(long k = j; k < n; k++) {\n                if(a[i]\
    \ < a[j] && a[i] < a[k]) {\n                    ans++;\n                }\n  \
    \          }\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp15fiys7a.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmp15fiys7a.cpp:12:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   12 |     vector<long> a(n);\n      |     ^~~~~~\n/tmp/tmp15fiys7a.cpp:12:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp15fiys7a.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp15fiys7a.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmp15fiys7a.cpp:12:12:\
    \ error: expected primary-expression before \u2018long\u2019\n   12 |     vector<long>\
    \ a(n);\n      |            ^~~~\n/tmp/tmp15fiys7a.cpp:16:17: error: \u2018a\u2019\
    \ was not declared in this scope\n   16 |                 a[i] = a[i] + a[j] +\
    \ a[k];\n      |                 ^\n/tmp/tmp15fiys7a.cpp:20:10: error: \u2018\
    a\u2019 was not declared in this scope\n   20 |     sort(a.begin(), a.end());\n\
    \      |          ^\n/tmp/tmp15fiys7a.cpp:20:5: error: \u2018sort\u2019 was not\
    \ declared in this scope; did you mean \u2018std::sort\u2019?\n   20 |     sort(a.begin(),\
    \ a.end());\n      |     ^~~~\n      |     std::sort\nIn file included from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp15fiys7a.cpp:2:\n/usr/include/c++/9/ps"
  stdout: ''
  timestamp: 1660113789
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int count = 0;\n    for(int i = 1; i < n; i++)\
    \ {\n        for(int j = 1; j < n; j++) {\n            for(int k = 1; k < n; k++)\
    \ {\n                if(i + j + k == n) count++;\n                if(a[i] + a[j]\
    \ + a[k] == n) count++;\n            }\n        }\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpm40y65ii: /tmp/tmpm40y65ii.cpp:26: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113789
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int sum = 0;\n    for(int i = 0; i<n; i++){\n\
    \        a[i] = i*(i+1)-1;\n        sum += a[i];\n    }\n    for(int i = 0; i<n;\
    \ i++){\n        for(int j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n\
    \                if(i<j && j<k){\n                    if(a[i] + a[j] + a[k] ==\
    \ sum){\n                        return 1;\n                    }\n          \
    \      }\n            }\n        }\n    }\n    return 0;\n}\nint main() {\n  \
    \  auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n   \
    \ assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: Exception
  stderr: 'tmppyknm98o: /tmp/tmppyknm98o.cpp:34: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    vector<long>\
    \ a(n);\n    long sum = 0;\n    for(int i = 0; i<n; i++){\n        a[i] = i*i\
    \ - i + 1;\n        sum += a[i];\n    }\n    long ans = 0;\n    for(int i = 0;\
    \ i<n; i++){\n        for(int j = 0; j<n; j++){\n            for(int k = 0; k<n;\
    \ k++){\n                if(i<j && i<k && j<k){\n                    if(a[i] +\
    \ a[j] + a[k] == sum){\n                        ans++;\n                    }\n\
    \                }\n            }\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwnfcxr0w.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmpwnfcxr0w.cpp:12:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   12 |     vector<long> a(n);\n      |     ^~~~~~\n/tmp/tmpwnfcxr0w.cpp:12:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpwnfcxr0w.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpwnfcxr0w.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmpwnfcxr0w.cpp:12:12:\
    \ error: expected primary-expression before \u2018long\u2019\n   12 |     vector<long>\
    \ a(n);\n      |            ^~~~\n/tmp/tmpwnfcxr0w.cpp:15:9: error: \u2018a\u2019\
    \ was not declared in this scope\n   15 |         a[i] = i*i - i + 1;\n      |\
    \         ^\n/tmp/tmpwnfcxr0w.cpp:23:24: error: \u2018a\u2019 was not declared\
    \ in this scope\n   23 |                     if(a[i] + a[j] + a[k] == sum){\n\
    \      |                        ^\n"
  stdout: ''
  timestamp: 1660113789
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i = 0; i<n; i++){\n        a[i] = i*i-1;\n    }\n\
    \    long long int ans = 0;\n    for(int i = 1; i<n; i++){\n        for(int j=i;\
    \ j<n; j++){\n            for(int k=j; k<n; k++){\n                if(a[i]+a[j]+a[k]\
    \ % 3 == 0){\n                    ans++;\n                }\n            }\n \
    \       }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpmmgml7l9: /tmp/tmpmmgml7l9.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113790
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int sum = 0;\n    for(int i = 0; i<n; i++){\n\
    \        a[i] = i*i-1;\n        sum += a[i];\n    }\n    for(int i = 0; i<n; i++){\n\
    \        for(int j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n  \
    \              if(i<j && j<k){\n                    if(a[i] + a[j] + a[k] == sum){\n\
    \                        return 1;\n                    }\n                }\n\
    \            }\n        }\n    }\n    return 0;\n}\nint main() {\n    auto candidate\
    \ = get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: Exception
  stderr: 'tmpz3vuvqal: /tmp/tmpz3vuvqal.cpp:33: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    vector<int>\
    \ a(n);\n    long ans = 0;\n    for(int i = 0; i<n; i++){\n        a[i] = i*i-1;\n\
    \    }\n    for(int i = 0; i<n; i++){\n        for(int j = 0; j<n; j++){\n   \
    \         for(int k = 0; k<n; k++){\n                if(a[i] + a[j] + a[k] ==\
    \ 3){\n                    ans++;\n                }\n            }\n        }\n\
    \    }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2dnwvbl7.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmp2dnwvbl7.cpp:12:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   12 |     vector<int> a(n);\n      |     ^~~~~~\n/tmp/tmp2dnwvbl7.cpp:12:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp2dnwvbl7.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp2dnwvbl7.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmp2dnwvbl7.cpp:12:12:\
    \ error: expected primary-expression before \u2018int\u2019\n   12 |     vector<int>\
    \ a(n);\n      |            ^~~\n/tmp/tmp2dnwvbl7.cpp:15:9: error: \u2018a\u2019\
    \ was not declared in this scope\n   15 |         a[i] = i*i-1;\n      |     \
    \    ^\n/tmp/tmp2dnwvbl7.cpp:20:20: error: \u2018a\u2019 was not declared in this\
    \ scope\n   20 |                 if(a[i] + a[j] + a[k] == 3){\n      |       \
    \             ^\n"
  stdout: ''
  timestamp: 1660113789
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int sum = 0;\n    for(int i = 1; i < n; i++) {\n\
    \        a[i] = i * i - i + 1;\n        sum += a[i];\n    }\n    for(int i = 1;\
    \ i < n; i++) {\n        for(int j = 1; j < n; j++) {\n            for(int k =\
    \ 1; k < n; k++) {\n                if(a[i] + a[j] + a[k] == sum && i != j &&\
    \ j != k && i != k) {\n                    return 1;\n                }\n    \
    \        }\n        }\n    }\n    return 0;\n}\nint main() {\n    auto candidate\
    \ = get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: Exception
  stderr: 'tmpxn0_f73m: /tmp/tmpxn0_f73m.cpp:31: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113790
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i = 0; i<n; i++){\n        a[i] = i*i-1;\n    }\n\
    \    long long int sum = 0;\n    for(int i = 0; i<n; i++){\n        for(int j\
    \ = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n                if(i<j\
    \ && i<k && j<k){\n                    if(a[i] + a[j] + a[k] == 3){\n        \
    \                sum += 1;\n                    }\n                }\n       \
    \     }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: Exception
  stderr: 'tmp0ycpkq8s: /tmp/tmp0ycpkq8s.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113789
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int cnt = 0;\n    for(int i = 0; i<n; i++){\n\
    \        a[i] = i*i-i+1;\n    }\n    for(int i = 1; i<n; i++){\n        for(int\
    \ j=i; j<n; j++){\n            for(int k=j; k<n; k++){\n                if(a[i]+a[j]+a[k]==3){\n\
    \                    cnt++;\n                }\n            }\n        }\n   \
    \ }\n    return cnt;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpe5b0rhn3: /tmp/tmpe5b0rhn3.cpp:31: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113790
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i = 0; i<n; i++){\n        a[i] = i*i-1;\n    }\n\
    \    long long int max_triples = 0;\n    for(int i = 0; i<n; i++){\n        for(int\
    \ j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n                if(i<j\
    \ && i<k && j<k){\n                    if(a[i] + a[j] + a[k] % 3 == 0){\n    \
    \                    max_triples++;\n                    }\n                }\n\
    \            }\n        }\n    }\n    return max_triples;\n}\nint main() {\n \
    \   auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n  \
    \  assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: Exception
  stderr: 'tmpiuw3a5jd: /tmp/tmpiuw3a5jd.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113789
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    vector<long>\
    \ a(n);\n    long sum = 0;\n    for(int i = 0; i<n; i++){\n        a[i] = i*i\
    \ - i + 1;\n        sum += a[i];\n    }\n    long ans = 0;\n    for(int i = 0;\
    \ i<n; i++){\n        for(int j = 0; j<n; j++){\n            for(int k = 0; k<n;\
    \ k++){\n                if(i<j && j<k){\n                    if(a[i] + a[j] +\
    \ a[k] == sum){\n                        ans++;\n                    }\n     \
    \           }\n            }\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkz6a9a06.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmpkz6a9a06.cpp:12:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   12 |     vector<long> a(n);\n      |     ^~~~~~\n/tmp/tmpkz6a9a06.cpp:12:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpkz6a9a06.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpkz6a9a06.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmpkz6a9a06.cpp:12:12:\
    \ error: expected primary-expression before \u2018long\u2019\n   12 |     vector<long>\
    \ a(n);\n      |            ^~~~\n/tmp/tmpkz6a9a06.cpp:15:9: error: \u2018a\u2019\
    \ was not declared in this scope\n   15 |         a[i] = i*i - i + 1;\n      |\
    \         ^\n/tmp/tmpkz6a9a06.cpp:23:24: error: \u2018a\u2019 was not declared\
    \ in this scope\n   23 |                     if(a[i] + a[j] + a[k] == sum){\n\
    \      |                        ^\n"
  stdout: ''
  timestamp: 1660113789
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n    }\n  \
    \  long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=i+1;j<n;j++){\n\
    \            for(int k=j+1;k<n;k++){\n                if(a[i]+a[j]+a[k]==3){\n\
    \                    ans++;\n                }\n            }\n        }\n   \
    \ }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpd74lnyi_: /tmp/tmpd74lnyi_.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    vector<long>\
    \ a(n);\n    long sum = 0;\n    long temp = 0;\n    for(int i = 0; i<n; i++){\n\
    \        sum += a[i] * a[i] + a[i];\n    }\n    for(int i = 0; i<n; i++){\n  \
    \      temp = a[i] * a[i] + a[i] + a[i];\n        if(temp % 3 == 0){\n       \
    \     a.push_back(a[i]);\n        }\n    }\n    sort(a.begin(), a.end());\n  \
    \  long ans = 0;\n    for(int i = 0; i<n; i++){\n        for(int j = 0; j<n; j++){\n\
    \            for(int k = 0; k<n; k++){\n                if(i<j && i<k && j<k){\n\
    \                    if(a[i] + a[j] + a[k] == sum){\n                        ans++;\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsa4diryo.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmpsa4diryo.cpp:12:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   12 |     vector<long> a(n);\n      |     ^~~~~~\n/tmp/tmpsa4diryo.cpp:12:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpsa4diryo.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpsa4diryo.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmpsa4diryo.cpp:12:12:\
    \ error: expected primary-expression before \u2018long\u2019\n   12 |     vector<long>\
    \ a(n);\n      |            ^~~~\n/tmp/tmpsa4diryo.cpp:16:16: error: \u2018a\u2019\
    \ was not declared in this scope\n   16 |         sum += a[i] * a[i] + a[i];\n\
    \      |                ^\n/tmp/tmpsa4diryo.cpp:19:16: error: \u2018a\u2019 was\
    \ not declared in this scope\n   19 |         temp = a[i] * a[i] + a[i] + a[i];\n\
    \      |                ^\n/tmp/tmpsa4diryo.cpp:24:10: error: \u2018a\u2019 was\
    \ not declared in this scope\n   24 |     sort(a.begin(), a.end());\n      | \
    \         ^\n/tmp/tmpsa4diryo.cpp:24:5: error: \u2018sort\u2019 was not declared\
    \ in this scope; did you mean \u2018std::sort\u2019?\n   24 |     sort(a.begin(),\
    \ a.end());\n      |     ^~~~\n      |     std::sort\nIn file included from /usr/include/c++/9/algorithm:71,\n\
    \   "
  stdout: ''
  timestamp: 1660113789
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int sum = 0;\n    for(int i = 1; i < n; i++) {\n\
    \        a[i] = i * i - i + 1;\n        sum += a[i];\n    }\n    long long int\
    \ ans = 0;\n    for(int i = 1; i < n; i++) {\n        for(int j = 1; j < n; j++)\
    \ {\n            for(int k = 1; k < n; k++) {\n                if(a[i] + a[j]\
    \ + a[k] == sum) {\n                    ans++;\n                }\n          \
    \  }\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate =\
    \ get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: Exception
  stderr: 'tmp_bnmk3s_: /tmp/tmp_bnmk3s_.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113789
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int sum = 0;\n    for(int i = 0; i<n; i++){\n\
    \        a[i] = i*i-i+1;\n        sum += a[i];\n    }\n    for(int i = 0; i<n;\
    \ i++){\n        for(int j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n\
    \                if(i<j && i<k && j<k){\n                    if(a[i] + a[j] +\
    \ a[k] == sum){\n                        return 1;\n                    }\n  \
    \              }\n            }\n        }\n    }\n    return 0;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpsz8ucmsa: /tmp/tmpsz8ucmsa.cpp:33: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113790
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i = 0; i<n; i++){\n        a[i] = i * i - i + 1;\n\
    \    }\n    long long int ans = 0;\n    for(int i = 0; i<n; i++){\n        for(int\
    \ j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n                if(i<j\
    \ && j<k && a[i] + a[j] + a[k] == 3){\n                    ans++;\n          \
    \      }\n            }\n        }\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n \
    \   assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n   \
    \ assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp07tyqalb: /tmp/tmp07tyqalb.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113790
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i = 0; i<n; i++){\n        a[i] = i * i - i + 1;\n\
    \    }\n    long long int sum = 0;\n    for(int i = 0; i<n; i++){\n        for(int\
    \ j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n                if(i<j\
    \ && i<k && j<k){\n                    if(a[i] + a[j] + a[k] == 3){\n        \
    \                sum += 1;\n                    }\n                }\n       \
    \     }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: Exception
  stderr: 'tmp11iio2dh: /tmp/tmp11iio2dh.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113789
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    vector<long>\
    \ a(n);\n    long sum = 0;\n    for(int i = 0; i<n; i++){\n        a[i] = i *\
    \ i - i + 1;\n        sum += a[i];\n    }\n    long ans = 0;\n    for(int i =\
    \ 0; i<n; i++){\n        for(int j = 0; j<n; j++){\n            for(int k = 0;\
    \ k<n; k++){\n                if(i<j && i<k && j<k){\n                    if(a[i]\
    \ + a[j] + a[k] == sum){\n                        ans++;\n                   \
    \ }\n                }\n            }\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn093iw87.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmpn093iw87.cpp:12:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   12 |     vector<long> a(n);\n      |     ^~~~~~\n/tmp/tmpn093iw87.cpp:12:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpn093iw87.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpn093iw87.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmpn093iw87.cpp:12:12:\
    \ error: expected primary-expression before \u2018long\u2019\n   12 |     vector<long>\
    \ a(n);\n      |            ^~~~\n/tmp/tmpn093iw87.cpp:15:9: error: \u2018a\u2019\
    \ was not declared in this scope\n   15 |         a[i] = i * i - i + 1;\n    \
    \  |         ^\n/tmp/tmpn093iw87.cpp:23:24: error: \u2018a\u2019 was not declared\
    \ in this scope\n   23 |                     if(a[i] + a[j] + a[k] == sum){\n\
    \      |                        ^\n"
  stdout: ''
  timestamp: 1660113789
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n    }\n  \
    \  long long int sum=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(i<j && i<k && j<k){\n \
    \                   if(a[i]+a[j]+a[k]==3){\n                        sum++;\n \
    \                   }\n                }\n            }\n        }\n    }\n  \
    \  return sum;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpr5b_8ixq: /tmp/tmpr5b_8ixq.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*(i-1)+i+1;\n    }\n\
    \    long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=i+1;j<n;j++){\n\
    \            for(int k=j+1;k<n;k++){\n                if(a[i]+a[j]+a[k]==3*(i+1)*(j+1)*(k+1)){\n\
    \                    ans++;\n                }\n            }\n        }\n   \
    \ }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp95nhzv0v: /tmp/tmp95nhzv0v.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113789
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i=0;i<n;i++)\n        a[i]=i*i-i+1;\n    long long\
    \ int ans=0;\n    for(int i=0;i<n;i++)\n        for(int j=i+1;j<n;j++)\n     \
    \       for(int k=j+1;k<n;k++)\n                if(a[i]+a[j]+a[k]==3*(i+j+k))\n\
    \                    ans++;\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: Exception
  stderr: 'tmpztfuguw7: /tmp/tmpztfuguw7.cpp:25: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113790
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int sum = 0;\n    for(int i = 0; i<n; i++){\n\
    \        a[i] = i*i-i+1;\n        sum += a[i];\n    }\n    for(int i = 0; i<n;\
    \ i++){\n        for(int j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n\
    \                if(i<j && j<k){\n                    if(a[i] + a[j] + a[k] ==\
    \ sum){\n                        return 1;\n                    }\n          \
    \      }\n            }\n        }\n    }\n    return 0;\n}\nint main() {\n  \
    \  auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n   \
    \ assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: Exception
  stderr: 'tmp62okp3sy: /tmp/tmp62okp3sy.cpp:33: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113789
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i = 0; i < n; i++) {\n        a[i] = i * i - i +\
    \ 1;\n    }\n    long long int ans = 0;\n    for(int i = 0; i < n; i++) {\n  \
    \      for(int j = i + 1; j < n; j++) {\n            for(int k = j + 1; k < n;\
    \ k++) {\n                if(a[i] + a[j] + a[k] % 3 == 0) {\n                \
    \    ans++;\n                }\n            }\n        }\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp54r6lb9c: /tmp/tmp54r6lb9c.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113790
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i = 0; i<n; i++){\n        a[i] = i*(i-1)+i+1;\n\
    \    }\n    long long int ans = 0;\n    for(int i = 1; i<n; i++){\n        for(int\
    \ j = 1; j<n; j++){\n            for(int k = 1; k<n; k++){\n                if(a[i]+a[j]+a[k]\
    \ == 3){\n                    ans++;\n                }\n            }\n     \
    \   }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpts7bn1pi: /tmp/tmpts7bn1pi.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113790
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int sum = 0;\n    for(int i = 0; i<n; i++){\n\
    \        a[i] = i*i - i + 1;\n        sum += a[i];\n    }\n    for(int i = 0;\
    \ i<n; i++){\n        for(int j = 0; j<n; j++){\n            for(int k = 0; k<n;\
    \ k++){\n                if(i<j && j<k){\n                    if(a[i] + a[j] +\
    \ a[k] == sum){\n                        return 1;\n                    }\n  \
    \              }\n            }\n        }\n    }\n    return 0;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpj7oowfjs: /tmp/tmpj7oowfjs.cpp:33: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113790
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int count = 0;\n    for(int i = 0; i<n; i++){\n\
    \        a[i] = i*i-i+1;\n    }\n    for(int i = 0; i<n; i++){\n        for(int\
    \ j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n                if(i<j\
    \ && j<k){\n                    if(a[i]+a[j]+a[k]==3){\n                     \
    \   count++;\n                    }\n                }\n            }\n      \
    \  }\n    }\n    return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpe9j56kq_: /tmp/tmpe9j56kq_.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113790
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i = 0; i < n; i++){\n        a[i] = i * i - i +\
    \ 1;\n    }\n    long long int max_triple = 0;\n    for(int i = 0; i < n; i++){\n\
    \        for(int j = i+1; j < n; j++){\n            for(int k = j+1; k < n; k++){\n\
    \                if(a[i] + a[j] + a[k] % 3 == 0){\n                    max_triple++;\n\
    \                }\n            }\n        }\n    }\n    return max_triple;\n\
    }\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp3b733h9t: /tmp/tmp3b733h9t.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*(i-1)+i+1;\n    }\n\
    \    long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(i<j && j<k){\n        \
    \            if(a[i]+a[j]+a[k]==3*(i+j+k)){\n                        ans++;\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp0w516gpf: /tmp/tmp0w516gpf.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113790
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int sum = 0;\n    for(int i = 0; i<n; i++){\n\
    \        a[i] = i*i-i+1;\n        sum += a[i];\n    }\n    for(int i = 0; i<n;\
    \ i++){\n        for(int j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n\
    \                if(i<j && j<k){\n                    if(a[i] + a[j] + a[k] ==\
    \ sum){\n                        return 1;\n                    }\n          \
    \      }\n            }\n        }\n    }\n    return 0;\n}\nint main() {\n  \
    \  auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n   \
    \ assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: Exception
  stderr: 'tmp62okp3sy: /tmp/tmp62okp3sy.cpp:33: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113789
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    vector<long>\
    \ a(n);\n    long sum = 0;\n    for(int i = 0; i<n; i++){\n        a[i] = i*i-i+1;\n\
    \        sum += a[i];\n    }\n    long ans = 0;\n    for(int i = 0; i<n; i++){\n\
    \        for(int j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n  \
    \              if(i<j && j<k){\n                    if(a[i]+a[j]+a[k] == sum){\n\
    \                        ans++;\n                    }\n                }\n  \
    \          }\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpx8fvv5me.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmpx8fvv5me.cpp:12:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   12 |     vector<long> a(n);\n      |     ^~~~~~\n/tmp/tmpx8fvv5me.cpp:12:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpx8fvv5me.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpx8fvv5me.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmpx8fvv5me.cpp:12:12:\
    \ error: expected primary-expression before \u2018long\u2019\n   12 |     vector<long>\
    \ a(n);\n      |            ^~~~\n/tmp/tmpx8fvv5me.cpp:15:9: error: \u2018a\u2019\
    \ was not declared in this scope\n   15 |         a[i] = i*i-i+1;\n      |   \
    \      ^\n/tmp/tmpx8fvv5me.cpp:23:24: error: \u2018a\u2019 was not declared in\
    \ this scope\n   23 |                     if(a[i]+a[j]+a[k] == sum){\n      |\
    \                        ^\n"
  stdout: ''
  timestamp: 1660113790
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    vector<long>\
    \ a(n);\n    long sum = 0;\n    long temp;\n    for(int i = 0; i<n; i++){\n  \
    \      sum = 0;\n        for(int j = 0; j<n; j++){\n            for(int k = 0;\
    \ k<n; k++){\n                temp = a[i] + a[j] + a[k];\n                if(temp%3\
    \ ==0){\n                    sum += temp;\n                }\n            }\n\
    \        }\n        a[i] = sum;\n    }\n    long ans = 0;\n    for(int i = 0;\
    \ i<n; i++){\n        for(int j = 0; j<n; j++){\n            for(int k = 0; k<n;\
    \ k++){\n                if(a[i] + a[j] + a[k]%3 ==0){\n                    ans++;\n\
    \                }\n            }\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0e9xlpdf.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmp0e9xlpdf.cpp:12:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   12 |     vector<long> a(n);\n      |     ^~~~~~\n/tmp/tmp0e9xlpdf.cpp:12:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp0e9xlpdf.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp0e9xlpdf.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmp0e9xlpdf.cpp:12:12:\
    \ error: expected primary-expression before \u2018long\u2019\n   12 |     vector<long>\
    \ a(n);\n      |            ^~~~\n/tmp/tmp0e9xlpdf.cpp:19:24: error: \u2018a\u2019\
    \ was not declared in this scope\n   19 |                 temp = a[i] + a[j] +\
    \ a[k];\n      |                        ^\n/tmp/tmp0e9xlpdf.cpp:25:9: error: \u2018\
    a\u2019 was not declared in this scope\n   25 |         a[i] = sum;\n      | \
    \        ^\n/tmp/tmp0e9xlpdf.cpp:31:20: error: \u2018a\u2019 was not declared\
    \ in this scope\n   31 |                 if(a[i] + a[j] + a[k]%3 ==0){\n     \
    \ |                    ^\n"
  stdout: ''
  timestamp: 1660113789
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    vector<long>\
    \ a(n);\n    long sum = 0;\n    for(int i = 1; i < n; i++) {\n        sum += a[i];\n\
    \        a[i] = sum;\n    }\n    long ans = 0;\n    for(int i = 1; i < n; i++)\
    \ {\n        for(int j = i + 1; j < n; j++) {\n            for(int k = j + 1;\
    \ k < n; k++) {\n                if(a[i] + a[j] + a[k] == sum) {\n           \
    \         ans++;\n                }\n            }\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3yezb4oa.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmp3yezb4oa.cpp:12:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   12 |     vector<long> a(n);\n      |     ^~~~~~\n/tmp/tmp3yezb4oa.cpp:12:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp3yezb4oa.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp3yezb4oa.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmp3yezb4oa.cpp:12:12:\
    \ error: expected primary-expression before \u2018long\u2019\n   12 |     vector<long>\
    \ a(n);\n      |            ^~~~\n/tmp/tmp3yezb4oa.cpp:15:16: error: \u2018a\u2019\
    \ was not declared in this scope\n   15 |         sum += a[i];\n      |      \
    \          ^\n/tmp/tmp3yezb4oa.cpp:22:20: error: \u2018a\u2019 was not declared\
    \ in this scope\n   22 |                 if(a[i] + a[j] + a[k] == sum) {\n   \
    \   |                    ^\n"
  stdout: ''
  timestamp: 1660113791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i = 0; i<n; i++){\n        a[i] = i*i-i+1;\n   \
    \ }\n    long long int ans = 0;\n    for(int i = 1; i<n; i++){\n        for(int\
    \ j = 1; j<n; j++){\n            for(int k = 1; k<n; k++){\n                if(a[i]+a[j]+a[k]\
    \ == 3){\n                    ans++;\n                }\n            }\n     \
    \   }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpuoen73pw: /tmp/tmpuoen73pw.cpp:31: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113792
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n    }\n  \
    \  long long int sum=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(i<j && j<k){\n        \
    \            if(a[i]+a[j]+a[k]==3){\n                        sum++;\n        \
    \            }\n                }\n            }\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp97lbcqfu: /tmp/tmp97lbcqfu.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113792
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    vector<long>\
    \ a(n);\n    for(int i = 0; i<n; i++){\n        a[i] = i * i - i + 1;\n    }\n\
    \    sort(a.begin(), a.end());\n    long ans = 0;\n    for(int i = 0; i<n; i++){\n\
    \        for(int j = i+1; j<n; j++){\n            for(int k = j+1; k<n; k++){\n\
    \                if(a[i] + a[j] + a[k] == 3){\n                    ans++;\n  \
    \              }\n            }\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp05jo9jb9.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmp05jo9jb9.cpp:12:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   12 |     vector<long> a(n);\n      |     ^~~~~~\n/tmp/tmp05jo9jb9.cpp:12:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp05jo9jb9.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp05jo9jb9.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmp05jo9jb9.cpp:12:12:\
    \ error: expected primary-expression before \u2018long\u2019\n   12 |     vector<long>\
    \ a(n);\n      |            ^~~~\n/tmp/tmp05jo9jb9.cpp:14:9: error: \u2018a\u2019\
    \ was not declared in this scope\n   14 |         a[i] = i * i - i + 1;\n    \
    \  |         ^\n/tmp/tmp05jo9jb9.cpp:16:10: error: \u2018a\u2019 was not declared\
    \ in this scope\n   16 |     sort(a.begin(), a.end());\n      |          ^\n/tmp/tmp05jo9jb9.cpp:16:5:\
    \ error: \u2018sort\u2019 was not declared in this scope; did you mean \u2018\
    std::sort\u2019?\n   16 |     sort(a.begin(), a.end());\n      |     ^~~~\n  \
    \    |     std::sort\nIn file included from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp05jo9jb9.cpp:2:\n/usr/include/c++/9/pstl/glue_algorithm_defs"
  stdout: ''
  timestamp: 1660113791
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n    }\n  \
    \  sort(a, a+n);\n    long long int ans=0;\n    for(int i=0;i<n;i++){\n      \
    \  for(int j=i+1;j<n;j++){\n            for(int k=j+1;k<n;k++){\n            \
    \    if(a[i]+a[j]+a[k]==3){\n                    ans++;\n                }\n \
    \           }\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2n822c9e.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmp2n822c9e.cpp:16:5: error: \u2018sort\u2019 was not declared in this\
    \ scope; did you mean \u2018std::sort\u2019?\n   16 |     sort(a, a+n);\n    \
    \  |     ^~~~\n      |     std::sort\nIn file included from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp2n822c9e.cpp:2:\n/usr/include/c++/9/pstl/glue_algorithm_defs.h:296:1:\
    \ note: \u2018std::sort\u2019 declared here\n  296 | sort(_ExecutionPolicy&& __exec,\
    \ _RandomAccessIterator __first, _RandomAccessIterator __last);\n      | ^~~~\n"
  stdout: ''
  timestamp: 1660113791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i = 0; i<n; i++){\n        a[i] = i*i-i+1;\n   \
    \ }\n    long long int ans = 0;\n    for(int i = 1; i<n; i++){\n        for(int\
    \ j = 1; j<n; j++){\n            for(int k = 1; k<n; k++){\n                if(a[i]\
    \ + a[j] + a[k] == 3){\n                    ans++;\n                }\n      \
    \      }\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: Exception
  stderr: 'tmp6_tgmjyj: /tmp/tmp6_tgmjyj.cpp:31: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i = 0; i < n; i++){\n        a[i] = i * i - i +\
    \ 1;\n    }\n    long long int ans = 0;\n    for(int i = 0; i < n; i++){\n   \
    \     for(int j = 0; j < n; j++){\n            for(int k = 0; k < n; k++){\n \
    \               if(a[i] < a[j] && a[i] < a[k]){\n                    if(a[j] <\
    \ a[k]){\n                        ans += 1;\n                    }\n         \
    \       }\n            }\n        }\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n \
    \   assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n   \
    \ assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpwzsyxt17: /tmp/tmpwzsyxt17.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113792
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i = 0; i < n; i++){\n        a[i] = i * i - i +\
    \ 1;\n    }\n    long long int ans = 0;\n    for(int i = 0; i < n; i++){\n   \
    \     for(int j = i+1; j < n; j++){\n            for(int k = j+1; k < n; k++){\n\
    \                if(a[i] + a[j] + a[k] == 3){\n                    ans++;\n  \
    \              }\n            }\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpok_pi83e: /tmp/tmpok_pi83e.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i = 0; i<n; i++){\n        a[i] = i*i-1;\n    }\n\
    \    long long int ans = 0;\n    for(int i = 0; i<n; i++){\n        for(int j\
    \ = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n                if(i<j\
    \ && i<k && j<k){\n                    if(a[i]+a[j]+a[k]==3){\n              \
    \          ans++;\n                    }\n                }\n            }\n \
    \       }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpo52368id: /tmp/tmpo52368id.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i = 0; i < n; i++) {\n        a[i] = i * i - i +\
    \ 1;\n    }\n    long long int ans = 0;\n    for(int i = 0; i < n; i++) {\n  \
    \      for(int j = 0; j < n; j++) {\n            for(int k = 0; k < n; k++) {\n\
    \                if(i + j + k == a[i]) {\n                    ans++;\n       \
    \         }\n            }\n        }\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n \
    \   assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n   \
    \ assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp9vj3hm7j: /tmp/tmp9vj3hm7j.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113792
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i = 0; i<n; i++){\n        a[i] = i*i-1;\n    }\n\
    \    long long int ans = 0;\n    for(int i = 0; i<n; i++){\n        for(int j\
    \ = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n                if(i<j\
    \ && j<k){\n                    if(a[i]+a[j]+a[k]==3){\n                     \
    \   ans++;\n                    }\n                }\n            }\n        }\n\
    \    }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpyxen8qdw: /tmp/tmpyxen8qdw.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113792
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    vector<int>\
    \ a(n);\n    long ans = 0;\n    for(int i = 0; i<n; i++){\n        a[i] = i*i-i+1;\n\
    \    }\n    for(int i = 0; i<n; i++){\n        for(int j = 0; j<n; j++){\n   \
    \         for(int k = 0; k<n; k++){\n                if(i<j && j<k){\n       \
    \             if(a[i]+a[j]+a[k]==3){\n                        ans++;\n       \
    \             }\n                }\n            }\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6mldbkb3.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmp6mldbkb3.cpp:12:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   12 |     vector<int> a(n);\n      |     ^~~~~~\n/tmp/tmp6mldbkb3.cpp:12:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp6mldbkb3.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp6mldbkb3.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmp6mldbkb3.cpp:12:12:\
    \ error: expected primary-expression before \u2018int\u2019\n   12 |     vector<int>\
    \ a(n);\n      |            ^~~\n/tmp/tmp6mldbkb3.cpp:15:9: error: \u2018a\u2019\
    \ was not declared in this scope\n   15 |         a[i] = i*i-i+1;\n      |   \
    \      ^\n/tmp/tmp6mldbkb3.cpp:21:24: error: \u2018a\u2019 was not declared in\
    \ this scope\n   21 |                     if(a[i]+a[j]+a[k]==3){\n      |    \
    \                    ^\n"
  stdout: ''
  timestamp: 1660113791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int sum = 0;\n    for(int i = 0; i<n; i++){\n\
    \        a[i] = i*i - i + 1;\n        sum += a[i];\n    }\n    for(int i = 0;\
    \ i<n; i++){\n        for(int j = 0; j<n; j++){\n            for(int k = 0; k<n;\
    \ k++){\n                if(i<j && j<k){\n                    if(a[i] + a[j] +\
    \ a[k] == sum){\n                        return 1;\n                    }\n  \
    \              }\n            }\n        }\n    }\n    return 0;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpj7oowfjs: /tmp/tmpj7oowfjs.cpp:33: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113790
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i = 0; i<n; i++){\n        a[i] = i*i - i + 1;\n\
    \    }\n    long long int ans = 0;\n    for(int i = 1; i<n; i++){\n        for(int\
    \ j = 1; j<n; j++){\n            for(int k = 1; k<n; k++){\n                if(a[i]\
    \ + a[j] + a[k] % 3 == 0){\n                    ans++;\n                }\n  \
    \          }\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkr52z1bb: /tmp/tmpkr52z1bb.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113792
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    vector<long>\
    \ a(n);\n    long sum = 0;\n    long temp;\n    for(int i = 0; i<n; i++) {\n \
    \       temp = a[i] * a[i] + a[i] + 1;\n        sum += temp;\n        a[i] = temp;\n\
    \    }\n    return sum;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaj85q4c7.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmpaj85q4c7.cpp:12:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   12 |     vector<long> a(n);\n      |     ^~~~~~\n/tmp/tmpaj85q4c7.cpp:12:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpaj85q4c7.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpaj85q4c7.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmpaj85q4c7.cpp:12:12:\
    \ error: expected primary-expression before \u2018long\u2019\n   12 |     vector<long>\
    \ a(n);\n      |            ^~~~\n/tmp/tmpaj85q4c7.cpp:16:16: error: \u2018a\u2019\
    \ was not declared in this scope\n   16 |         temp = a[i] * a[i] + a[i] +\
    \ 1;\n      |                ^\n"
  stdout: ''
  timestamp: 1660113791
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int sum = 0;\n    for(int i = 0; i < n; i++) {\n\
    \        a[i] = i * i - i + 1;\n        sum += a[i];\n    }\n    long long int\
    \ max_triple = 0;\n    for(int i = 0; i < n; i++) {\n        for(int j = 0; j\
    \ < n; j++) {\n            for(int k = 0; k < n; k++) {\n                if(a[i]\
    \ < a[j] && a[i] < a[k] && a[j] < a[k]) {\n                    max_triple = max(a[i],\
    \ a[j], a[k]);\n                    break;\n                }\n            }\n\
    \        }\n    }\n    return max_triple;\n}\nint main() {\n    auto candidate\
    \ = get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqxe840bo.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmpqxe840bo.cpp:23:34: error: \u2018max\u2019 was not declared in this\
    \ scope; did you mean \u2018std::max\u2019?\n   23 |                     max_triple\
    \ = max(a[i], a[j], a[k]);\n      |                                  ^~~\n   \
    \   |                                  std::max\nIn file included from /usr/include/c++/9/algorithm:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpqxe840bo.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:3468:5:\
    \ note: \u2018std::max\u2019 declared here\n 3468 |     max(initializer_list<_Tp>\
    \ __l, _Compare __comp)\n      |     ^~~\n"
  stdout: ''
  timestamp: 1660113791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*(i+1)-1;\n    }\n\
    \    long long int sum=0;\n    for(int i=0;i<n;i++){\n        for(int j=i+1;j<n;j++){\n\
    \            for(int k=j+1;k<n;k++){\n                if(a[i]+a[j]+a[k]==3){\n\
    \                    sum++;\n                }\n            }\n        }\n   \
    \ }\n    return sum;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpa4nfggic: /tmp/tmpa4nfggic.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113792
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    vector<long>\
    \ a(n);\n    long ans = 0;\n    for(int i = 0; i<n; i++) {\n        for(int j\
    \ = i+1; j<n; j++) {\n            for(int k = j+1; k<n; k++) {\n             \
    \   if(a[i] + a[j] + a[k] == 3*(i+j+k)) {\n                    ans += 1;\n   \
    \             }\n            }\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2xgx74h_.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmp2xgx74h_.cpp:12:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   12 |     vector<long> a(n);\n      |     ^~~~~~\n/tmp/tmp2xgx74h_.cpp:12:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp2xgx74h_.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp2xgx74h_.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmp2xgx74h_.cpp:12:12:\
    \ error: expected primary-expression before \u2018long\u2019\n   12 |     vector<long>\
    \ a(n);\n      |            ^~~~\n/tmp/tmp2xgx74h_.cpp:17:20: error: \u2018a\u2019\
    \ was not declared in this scope\n   17 |                 if(a[i] + a[j] + a[k]\
    \ == 3*(i+j+k)) {\n      |                    ^\n"
  stdout: ''
  timestamp: 1660113791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i = 0; i<n; i++){\n        a[i] = i * i - i + 1;\n\
    \    }\n    long long int max_triples = 0;\n    for(int i = 1; i<n; i++){\n  \
    \      for(int j=i; j<n; j++){\n            for(int k=j; k<n; k++){\n        \
    \        if(a[i] + a[j] + a[k] == 3){\n                    max_triples++;\n  \
    \              }\n            }\n        }\n    }\n    return max_triples;\n}\n\
    int main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpixwncx2d: /tmp/tmpixwncx2d.cpp:31: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113792
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int sum = 0;\n    for(int i = 1; i < n; i++){\n\
    \        a[i] = i * i - i + 1;\n        sum += a[i];\n    }\n    for(int i = 1;\
    \ i < n; i++){\n        for(int j = 1; j < n; j++){\n            for(int k = 1;\
    \ k < n; k++){\n                if(a[i] < a[j] && a[i] < a[k]){\n            \
    \        if(a[j] < a[k]){\n                        sum += a[j];\n            \
    \        }\n                    else{\n                        sum += a[k];\n\
    \                    }\n                }\n                else{\n           \
    \         if(a[j] < a[k]){\n                        sum += a[j];\n           \
    \         }\n                    else{\n                        sum += a[k];\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return sum;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpt6zyt610: /tmp/tmpt6zyt610.cpp:44: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113792
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i = 0; i<n; i++){\n        a[i] = i*(i-1)+i+1;\n\
    \    }\n    long long int ans = 0;\n    for(int i = 0; i<n; i++){\n        for(int\
    \ j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n                if(i<j\
    \ && j<k){\n                    if(a[i]+a[j]+a[k]==3){\n                     \
    \   ans++;\n                    }\n                }\n            }\n        }\n\
    \    }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkrsexy8x: /tmp/tmpkrsexy8x.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113792
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int sum = 0;\n    for(int i = 1; i < n; i++) {\n\
    \        a[i] = i * i - i + 1;\n        sum += a[i];\n    }\n    for(int i = 1;\
    \ i < n; i++) {\n        for(int j = 1; j < n; j++) {\n            for(int k =\
    \ 1; k < n; k++) {\n                if(a[i] + a[j] + a[k] == sum) {\n        \
    \            return 1;\n                }\n            }\n        }\n    }\n \
    \   return 0;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp6982_xge: /tmp/tmp6982_xge.cpp:31: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n    }\n  \
    \  long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(i<j && j<k){\n        \
    \            if(a[i]+a[j]+a[k]==3){\n                        ans++;\n        \
    \            }\n                }\n            }\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp5v4gbmt2: /tmp/tmp5v4gbmt2.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113789
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n    }\n  \
    \  long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(i<j && j<k && a[i]+a[j]+a[k]==3){\n\
    \                    ans++;\n                }\n            }\n        }\n   \
    \ }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpxrwn_s35: /tmp/tmpxrwn_s35.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i = 0; i<n; i++){\n        a[i] = i*(i+1)-1;\n \
    \   }\n    long long int ans = 0;\n    for(int i = 0; i<n; i++){\n        for(int\
    \ j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n                if(i<j\
    \ && j<k){\n                    if(a[i] + a[j] + a[k] == 3){\n               \
    \         ans++;\n                    }\n                }\n            }\n  \
    \      }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpcz4zhk76: /tmp/tmpcz4zhk76.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113792
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i = 0; i < n; i++){\n        a[i] = i * i - i +\
    \ 1;\n    }\n    long long int ans = 0;\n    for(int i = 0; i < n; i++){\n   \
    \     for(int j = i + 1; j < n; j++){\n            for(int k = j + 1; k < n; k++){\n\
    \                if(a[i] + a[j] + a[k] == 3){\n                    ans++;\n  \
    \              }\n            }\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp_w3mu1oo: /tmp/tmp_w3mu1oo.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int ans = 0;\n    for(int i = 1; i <= n; i++)\
    \ {\n        a[i] = i * i - i + 1;\n    }\n    for(int i = 1; i <= n; i++) {\n\
    \        for(int j = 1; j <= n; j++) {\n            for(int k = 1; k <= n; k++)\
    \ {\n                if(i + j + k == a[i]) {\n                    ans++;\n   \
    \             }\n            }\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp5b_d3wyp: /tmp/tmp5b_d3wyp.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113792
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    vector<long>\
    \ a(n);\n    long sum = 0;\n    long temp = 0;\n    long count = 0;\n    for(int\
    \ i = 0; i<n; i++) {\n        temp = a[i]*a[i]-a[i]+a[i];\n        if(temp%3 ==\
    \ 0) {\n            count++;\n            sum += temp;\n        }\n        a[i]\
    \ = temp;\n    }\n    return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprznplc2f.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmprznplc2f.cpp:12:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   12 |     vector<long> a(n);\n      |     ^~~~~~\n/tmp/tmprznplc2f.cpp:12:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmprznplc2f.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmprznplc2f.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmprznplc2f.cpp:12:12:\
    \ error: expected primary-expression before \u2018long\u2019\n   12 |     vector<long>\
    \ a(n);\n      |            ^~~~\n/tmp/tmprznplc2f.cpp:17:16: error: \u2018a\u2019\
    \ was not declared in this scope\n   17 |         temp = a[i]*a[i]-a[i]+a[i];\n\
    \      |                ^\n"
  stdout: ''
  timestamp: 1660113792
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*(i-1)+i+1;\n    }\n\
    \    long long int sum=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(i<j && i<k && j<k){\n \
    \                   if(a[i]+a[j]+a[k]==3*(i+j+k)){\n                        sum++;\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return sum;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpea5ep0n5: /tmp/tmpea5ep0n5.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113792
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int cnt = 0;\n    for(int i = 0; i<n; i++){\n\
    \        a[i] = i*(i-1)+i+1;\n    }\n    for(int i = 0; i<n; i++){\n        for(int\
    \ j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n                if(i<j\
    \ && i<k && j<k){\n                    if(a[i] + a[j] + a[k] == 3){\n        \
    \                cnt++;\n                    }\n                }\n          \
    \  }\n        }\n    }\n    return cnt;\n}\nint main() {\n    auto candidate =\
    \ get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: Exception
  stderr: 'tmpdjh40lj6: /tmp/tmpdjh40lj6.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113792
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int count = 0;\n    for(int i = 1; i <= n; i++){\n\
    \        a[i] = i * i - i + 1;\n    }\n    for(int i = 1; i <= n; i++){\n    \
    \    for(int j = 1; j <= n; j++){\n            for(int k = 1; k <= n; k++){\n\
    \                if(a[i] + a[j] + a[k] == 3){\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\nint\
    \ main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) ==\
    \ (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n\
    \    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpbt7iz4rj: /tmp/tmpbt7iz4rj.cpp:31: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113792
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i = 0; i<n; i++){\n        a[i] = i*i-i+1;\n   \
    \ }\n    long long int ans = 0;\n    for(int i = 1; i<n; i++){\n        for(int\
    \ j = 1; j<n; j++){\n            for(int k = 1; k<n; k++){\n                if(a[i]+a[j]+a[k]\
    \ == 3){\n                    ans++;\n                }\n            }\n     \
    \   }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpuoen73pw: /tmp/tmpuoen73pw.cpp:31: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113792
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int count = 0;\n    for(int i = 0; i<n; i++){\n\
    \        a[i] = i*i-i+1;\n    }\n    for(int i = 0; i<n; i++){\n        for(int\
    \ j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n                if(a[i]+a[j]+a[k]\
    \ == 3){\n                    count++;\n                }\n            }\n   \
    \     }\n    }\n    return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp584o5c6q: /tmp/tmp584o5c6q.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113792
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int sum = 0;\n    for(int i = 0; i<n; i++){\n\
    \        a[i] = i*i-i+1;\n        sum += a[i];\n    }\n    for(int i = 0; i<n;\
    \ i++){\n        for(int j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n\
    \                if(i<j && j<k){\n                    if(a[i] + a[j] + a[k] ==\
    \ sum){\n                        return 1;\n                    }\n          \
    \      }\n            }\n        }\n    }\n    return 0;\n}\nint main() {\n  \
    \  auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n   \
    \ assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: Exception
  stderr: 'tmp62okp3sy: /tmp/tmp62okp3sy.cpp:33: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113789
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i = 0; i<n; i++){\n        a[i] = i*i-i+1;\n   \
    \ }\n    long long int ans = 0;\n    for(int i = 0; i<n; i++){\n        for(int\
    \ j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n                if(a[i]\
    \ + a[j] + a[k] % 3 == 0){\n                    ans++;\n                }\n  \
    \          }\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: Exception
  stderr: 'tmptxf0ucy5: /tmp/tmptxf0ucy5.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113792
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    vector<long>\
    \ a(n);\n    for(long i = 1; i < n; i++) {\n        a[i] = i * i - i + 1;\n  \
    \  }\n    long ans = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j\
    \ = i + 1; j < n; j++) {\n            for(long k = j + 1; k < n; k++) {\n    \
    \            if(a[i] + a[j] + a[k] == 3) {\n                    ans++;\n     \
    \           }\n            }\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8zfxjs3m.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmp8zfxjs3m.cpp:12:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   12 |     vector<long> a(n);\n      |     ^~~~~~\n/tmp/tmp8zfxjs3m.cpp:12:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp8zfxjs3m.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp8zfxjs3m.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmp8zfxjs3m.cpp:12:12:\
    \ error: expected primary-expression before \u2018long\u2019\n   12 |     vector<long>\
    \ a(n);\n      |            ^~~~\n/tmp/tmp8zfxjs3m.cpp:14:9: error: \u2018a\u2019\
    \ was not declared in this scope\n   14 |         a[i] = i * i - i + 1;\n    \
    \  |         ^\n/tmp/tmp8zfxjs3m.cpp:20:20: error: \u2018a\u2019 was not declared\
    \ in this scope\n   20 |                 if(a[i] + a[j] + a[k] == 3) {\n     \
    \ |                    ^\n"
  stdout: ''
  timestamp: 1660113792
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int count = 0;\n    for(int i = 0; i<n; i++){\n\
    \        a[i] = i*i-i+1;\n    }\n    for(int i = 0; i<n; i++){\n        for(int\
    \ j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n                if(i<j\
    \ && j<k && a[i]+a[j]+a[k]==3){\n                    count++;\n              \
    \  }\n            }\n        }\n    }\n    return count;\n}\nint main() {\n  \
    \  auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n   \
    \ assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: Exception
  stderr: 'tmp5hepcr8i: /tmp/tmp5hepcr8i.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113792
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i = 0; i<n; i++){\n        a[i] = i*i-i+1;\n   \
    \ }\n    long long int ans = 0;\n    for(int i = 1; i<n; i++){\n        for(int\
    \ j=i; j<n; j++){\n            for(int k=j; k<n; k++){\n                if(a[i]+a[j]+a[k]\
    \ % 3 == 0){\n                    ans++;\n                }\n            }\n \
    \       }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpn2g1ejhh: /tmp/tmpn2g1ejhh.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113792
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i = 0; i < n; i++) {\n        a[i] = i * i - i +\
    \ 1;\n    }\n    long long int max_triples = 0;\n    for(int i = 0; i < n; i++)\
    \ {\n        for(int j = 0; j < n; j++) {\n            for(int k = 0; k < n; k++)\
    \ {\n                if(i + j + k == a[i]) {\n                    max_triples++;\n\
    \                }\n            }\n        }\n    }\n    return max_triples;\n\
    }\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpqmwylt4c: /tmp/tmpqmwylt4c.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113792
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int sum = 0;\n    for(int i = 0; i < n; i++){\n\
    \        a[i] = i * i - i + 1;\n        sum += a[i];\n    }\n    for(int i = 0;\
    \ i < n; i++){\n        for(int j = i + 1; j < n; j++){\n            for(int k\
    \ = j + 1; k < n; k++){\n                if(a[i] + a[j] + a[k] == sum){\n    \
    \                return 1;\n                }\n            }\n        }\n    }\n\
    \    return 0;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpsalx64g4: /tmp/tmpsalx64g4.cpp:31: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int cnt = 0;\n    for(int i = 1; i <= n; i++)\
    \ {\n        a[i] = i * i - i + 1;\n    }\n    for(int i = 1; i <= n; i++) {\n\
    \        for(int j = 1; j <= n; j++) {\n            for(int k = 1; k <= n; k++)\
    \ {\n                if(a[i] + a[j] + a[k] == 3) {\n                    cnt++;\n\
    \                }\n            }\n        }\n    }\n    return cnt;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpj4t4kn03: /tmp/tmpj4t4kn03.cpp:31: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113789
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i = 0; i < n; i++) {\n        a[i] = i * i - i +\
    \ 1;\n    }\n    long long int ans = 0;\n    for(int i = 0; i < n; i++) {\n  \
    \      for(int j = i + 1; j < n; j++) {\n            for(int k = j + 1; k < n;\
    \ k++) {\n                if(a[i] + a[j] + a[k] == 3) {\n                    ans++;\n\
    \                }\n            }\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpginix2ys: /tmp/tmpginix2ys.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113792
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n    }\n  \
    \  long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(a[i]+a[j]+a[k]==3){\n \
    \                   ans++;\n                }\n            }\n        }\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n   \
    \ assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpda1k_znz: /tmp/tmpda1k_znz.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i = 0; i<n; i++){\n        a[i] = i * i - i + 1;\n\
    \    }\n    long long int ans = 0;\n    for(int i = 0; i<n; i++){\n        for(int\
    \ j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n                if(a[i]\
    \ + a[j] + a[k] == 3){\n                    ans++;\n                }\n      \
    \      }\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: Exception
  stderr: 'tmpyjdb8xw4: /tmp/tmpyjdb8xw4.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113792
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n    }\n  \
    \  long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(i<j && j<k && a[i]+a[j]+a[k]==3){\n\
    \                    ans++;\n                }\n            }\n        }\n   \
    \ }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpxrwn_s35: /tmp/tmpxrwn_s35.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int cnt = 0;\n    for(int i = 1; i <= n; i++){\n\
    \        a[i] = i * i - i + 1;\n    }\n    for(int i = 1; i <= n; i++){\n    \
    \    for(int j = 1; j <= n; j++){\n            for(int k = 1; k <= n; k++){\n\
    \                if(a[i] + a[j] + a[k] == 3){\n                    cnt += 1;\n\
    \                }\n            }\n        }\n    }\n    return cnt;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpxnlff3zt: /tmp/tmpxnlff3zt.cpp:31: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113793
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    vector<long>\
    \ a(n);\n    long sum = 0;\n    for(int i = 0; i<n; i++) {\n        sum += a[i];\n\
    \    }\n    for(int i = 0; i<n; i++) {\n        for(int j = 0; j<n; j++) {\n \
    \           for(int k = 0; k<n; k++) {\n                if(i<j && i<k && j<k)\
    \ {\n                    if(a[i] + a[j] + a[k] == sum) {\n                   \
    \     cout << a[i] << \" \" << a[j] << \" \" << a[k] << endl;\n              \
    \      }\n                }\n            }\n        }\n    }\n    return 0;\n\
    }\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyxc056a7.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmpyxc056a7.cpp:12:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   12 |     vector<long> a(n);\n      |     ^~~~~~\n/tmp/tmpyxc056a7.cpp:12:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpyxc056a7.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpyxc056a7.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmpyxc056a7.cpp:12:12:\
    \ error: expected primary-expression before \u2018long\u2019\n   12 |     vector<long>\
    \ a(n);\n      |            ^~~~\n/tmp/tmpyxc056a7.cpp:15:16: error: \u2018a\u2019\
    \ was not declared in this scope\n   15 |         sum += a[i];\n      |      \
    \          ^\n/tmp/tmpyxc056a7.cpp:21:24: error: \u2018a\u2019 was not declared\
    \ in this scope\n   21 |                     if(a[i] + a[j] + a[k] == sum) {\n\
    \      |                        ^\n/tmp/tmpyxc056a7.cpp:22:25: error: \u2018cout\u2019\
    \ was not declared in this scope; did you mean \u2018std::cout\u2019?\n   22 |\
    \                         cout << a[i] << \" \" << a[j] << \" \" << a[k] << endl;\n\
    \      |                         ^~~~\n      |                         std::cout\n\
    In file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:75,\n\
    \                 from "
  stdout: ''
  timestamp: 1660113792
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n    }\n  \
    \  long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(i<j && j<k){\n        \
    \            if(a[i]+a[j]+a[k]==3){\n                        ans++;\n        \
    \            }\n                }\n            }\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp5v4gbmt2: /tmp/tmp5v4gbmt2.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113789
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    vector<int>\
    \ a(n);\n    for(int i = 0; i < n; i++) {\n        a[i] = i * i - i + 1;\n   \
    \ }\n    sort(a.begin(), a.end());\n    long ans = 0;\n    for(int i = 0; i <\
    \ n; i++) {\n        for(int j = i + 1; j < n; j++) {\n            for(int k =\
    \ j + 1; k < n; k++) {\n                if(a[i] + a[j] + a[k] == 3) {\n      \
    \              ans++;\n                    break;\n                }\n       \
    \     }\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzwdvh7ph.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmpzwdvh7ph.cpp:12:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   12 |     vector<int> a(n);\n      |     ^~~~~~\n/tmp/tmpzwdvh7ph.cpp:12:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpzwdvh7ph.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpzwdvh7ph.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmpzwdvh7ph.cpp:12:12:\
    \ error: expected primary-expression before \u2018int\u2019\n   12 |     vector<int>\
    \ a(n);\n      |            ^~~\n/tmp/tmpzwdvh7ph.cpp:14:9: error: \u2018a\u2019\
    \ was not declared in this scope\n   14 |         a[i] = i * i - i + 1;\n    \
    \  |         ^\n/tmp/tmpzwdvh7ph.cpp:16:10: error: \u2018a\u2019 was not declared\
    \ in this scope\n   16 |     sort(a.begin(), a.end());\n      |          ^\n/tmp/tmpzwdvh7ph.cpp:16:5:\
    \ error: \u2018sort\u2019 was not declared in this scope; did you mean \u2018\
    std::sort\u2019?\n   16 |     sort(a.begin(), a.end());\n      |     ^~~~\n  \
    \    |     std::sort\nIn file included from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpzwdvh7ph.cpp:2:\n/usr/include/c++/9/pstl/glue_algorithm_defs.h:2"
  stdout: ''
  timestamp: 1660113792
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i = 0; i<n; i++){\n        a[i] = i*i-i+1;\n   \
    \ }\n    long long int ans = 0;\n    for(int i = 1; i<n; i++){\n        for(int\
    \ j = 1; j<n; j++){\n            for(int k = 1; k<n; k++){\n                if(a[i]+a[j]+a[k]\
    \ == 3){\n                    ans++;\n                }\n            }\n     \
    \   }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpuoen73pw: /tmp/tmpuoen73pw.cpp:31: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113792
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n    }\n  \
    \  long long int sum=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(i<j && i<k && j<k){\n \
    \                   if(a[i]+a[j]+a[k]==3){\n                        sum++;\n \
    \                   }\n                }\n            }\n        }\n    }\n  \
    \  return sum;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpr5b_8ixq: /tmp/tmpr5b_8ixq.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n    }\n  \
    \  long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(i<j && i<k && j<k){\n \
    \                   if(a[i]+a[j]+a[k]==3){\n                        ans++;\n \
    \                   }\n                }\n            }\n        }\n    }\n  \
    \  return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpv6gkm3o1: /tmp/tmpv6gkm3o1.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113786
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n    }\n  \
    \  long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(i<j && j<k){\n        \
    \            if(a[i]+a[j]+a[k]==3){\n                        ans++;\n        \
    \            }\n                }\n            }\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp5v4gbmt2: /tmp/tmp5v4gbmt2.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113789
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n    }\n  \
    \  long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=i+1;j<n;j++){\n\
    \            for(int k=j+1;k<n;k++){\n                if(a[i]+a[j]+a[k]==3){\n\
    \                    ans++;\n                }\n            }\n        }\n   \
    \ }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpd74lnyi_: /tmp/tmpd74lnyi_.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n    }\n  \
    \  long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(i<j && i<k && j<k){\n \
    \                   if(a[i]+a[j]+a[k]==3){\n                        ans++;\n \
    \                   }\n                }\n            }\n        }\n    }\n  \
    \  return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpv6gkm3o1: /tmp/tmpv6gkm3o1.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113786
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int count = 0;\n    for(int i = 1; i <= n; i++)\
    \ {\n        a[i] = i * i - i + 1;\n    }\n    for(int i = 1; i <= n; i++) {\n\
    \        for(int j = 1; j <= n; j++) {\n            for(int k = 1; k <= n; k++)\
    \ {\n                if(a[i] + a[j] + a[k] == 3) {\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\nint\
    \ main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) ==\
    \ (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n\
    \    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpozumy5sf: /tmp/tmpozumy5sf.cpp:31: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113789
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    vector<long>\
    \ a(n);\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n    }\n    sort(a.begin(),a.end());\n\
    \    long ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=i+1;j<n;j++){\n\
    \            for(int k=j+1;k<n;k++){\n                if(a[i]+a[j]+a[k]==3){\n\
    \                    ans++;\n                }\n            }\n        }\n   \
    \ }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzyewy6br.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmpzyewy6br.cpp:12:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   12 |     vector<long> a(n);\n      |     ^~~~~~\n/tmp/tmpzyewy6br.cpp:12:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpzyewy6br.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpzyewy6br.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmpzyewy6br.cpp:12:12:\
    \ error: expected primary-expression before \u2018long\u2019\n   12 |     vector<long>\
    \ a(n);\n      |            ^~~~\n/tmp/tmpzyewy6br.cpp:14:9: error: \u2018a\u2019\
    \ was not declared in this scope\n   14 |         a[i]=i*i-i+1;\n      |     \
    \    ^\n/tmp/tmpzyewy6br.cpp:16:10: error: \u2018a\u2019 was not declared in this\
    \ scope\n   16 |     sort(a.begin(),a.end());\n      |          ^\n/tmp/tmpzyewy6br.cpp:16:5:\
    \ error: \u2018sort\u2019 was not declared in this scope; did you mean \u2018\
    std::sort\u2019?\n   16 |     sort(a.begin(),a.end());\n      |     ^~~~\n   \
    \   |     std::sort\nIn file included from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpzyewy6br.cpp:2:\n/usr/include/c++/9/pstl/glue_algorithm_defs.h:296:1: "
  stdout: ''
  timestamp: 1660113792
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int ans = 0;\n    for(int i = 0; i<n; i++){\n\
    \        a[i] = i * i - i + 1;\n    }\n    for(int i = 0; i<n; i++){\n       \
    \ for(int j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n         \
    \       if(a[i] + a[j] + a[k] == 3){\n                    ans++;\n           \
    \     }\n            }\n        }\n    }\n    return ans;\n}\nint main() {\n \
    \   auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n  \
    \  assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: Exception
  stderr: 'tmp1fs3whrs: /tmp/tmp1fs3whrs.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113793
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int sum = 0;\n    for(int i = 0; i<n; i++){\n\
    \        a[i] = i*i - i + 1;\n        sum += a[i];\n    }\n    long long int ans\
    \ = 0;\n    for(int i = 0; i<n; i++){\n        for(int j = 0; j<n; j++){\n   \
    \         for(int k = 0; k<n; k++){\n                if(a[i] + a[j] + a[k] ==\
    \ sum){\n                    ans++;\n                }\n            }\n      \
    \  }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp9kdzvvk0: /tmp/tmp9kdzvvk0.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113790
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i = 0; i<n; i++){\n        a[i] = i*i-i+1;\n   \
    \ }\n    long long int ans = 0;\n    for(int i = 0; i<n; i++){\n        for(int\
    \ j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n                if(i<j\
    \ && j<k){\n                    if(a[i]+a[j]+a[k]==3){\n                     \
    \   ans++;\n                    }\n                }\n            }\n        }\n\
    \    }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmporvhaa5x: /tmp/tmporvhaa5x.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*(i+1)-1;\n    }\n\
    \    long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(a[i]+a[j]+a[k]==3){\n \
    \                   ans++;\n                }\n            }\n        }\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n   \
    \ assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpt3wle9cm: /tmp/tmpt3wle9cm.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113793
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n    }\n  \
    \  long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(a[i]+a[j]+a[k]==3){\n \
    \                   ans++;\n                }\n            }\n        }\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n   \
    \ assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpda1k_znz: /tmp/tmpda1k_znz.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int sum = 0;\n    for(int i = 0; i<n; i++){\n\
    \        a[i] = i*i - i + 1;\n        sum += a[i];\n    }\n    long long int ans\
    \ = 0;\n    for(int i = 0; i<n; i++){\n        for(int j = 0; j<n; j++){\n   \
    \         for(int k = 0; k<n; k++){\n                if(i<j && j<k){\n       \
    \             if(a[i] + a[j] + a[k] == sum){\n                        ans++;\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp0uyusz9v: /tmp/tmp0uyusz9v.cpp:34: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113793
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    vector<long>\
    \ a(n);\n    long sum = 0;\n    long temp = 0;\n    long temp2 = 0;\n    for(int\
    \ i = 0; i<n; i++){\n        sum = 0;\n        temp = 0;\n        temp2 = 0;\n\
    \        for(int j = 0; j<n; j++){\n            if(i<j){\n                sum\
    \ += a[j];\n                temp += a[j];\n                temp2 += a[j];\n  \
    \          }\n        }\n        if(sum%3 == 0){\n            if(i<n){\n     \
    \           a[i] = temp;\n            }\n        }\n    }\n    long ans = 0;\n\
    \    for(int i = 0; i<n; i++){\n        for(int j = 0; j<n; j++){\n          \
    \  for(int k = 0; k<n; k++){\n                if(i<j && j<k){\n              \
    \      if(a[i] + a[j] + a[k]==0){\n                        ans++;\n          \
    \          }\n                }\n            }\n        }\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr5dt04nn.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmpr5dt04nn.cpp:12:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   12 |     vector<long> a(n);\n      |     ^~~~~~\n/tmp/tmpr5dt04nn.cpp:12:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpr5dt04nn.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpr5dt04nn.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmpr5dt04nn.cpp:12:12:\
    \ error: expected primary-expression before \u2018long\u2019\n   12 |     vector<long>\
    \ a(n);\n      |            ^~~~\n/tmp/tmpr5dt04nn.cpp:22:24: error: \u2018a\u2019\
    \ was not declared in this scope\n   22 |                 sum += a[j];\n     \
    \ |                        ^\n/tmp/tmpr5dt04nn.cpp:29:17: error: \u2018a\u2019\
    \ was not declared in this scope\n   29 |                 a[i] = temp;\n     \
    \ |                 ^\n/tmp/tmpr5dt04nn.cpp:38:24: error: \u2018a\u2019 was not\
    \ declared in this scope\n   38 |                     if(a[i] + a[j] + a[k]==0){\n\
    \      |                        ^\n"
  stdout: ''
  timestamp: 1660113792
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i = 0; i<n; i++){\n        a[i] = i*i-i+1;\n   \
    \ }\n    long long int ans = 0;\n    for(int i = 1; i<n; i++){\n        for(int\
    \ j = 1; j<n; j++){\n            for(int k = 1; k<n; k++){\n                if(a[i]+a[j]+a[k]==3){\n\
    \                    ans++;\n                }\n            }\n        }\n   \
    \ }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpyptjdgc6: /tmp/tmpyptjdgc6.cpp:31: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113793
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int sum = 0;\n    for(int i = 0; i<n; i++){\n\
    \        a[i] = i*i-i+1;\n        sum += a[i];\n    }\n    for(int i = 0; i<n;\
    \ i++){\n        for(int j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n\
    \                if(a[i] + a[j] + a[k] == sum){\n                    return 1;\n\
    \                }\n            }\n        }\n    }\n    return 0;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpjawtx4sn: /tmp/tmpjawtx4sn.cpp:31: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n    }\n  \
    \  sort(a,a+n);\n    long long int ans=0;\n    for(int i=0;i<n;i++){\n       \
    \ for(int j=i+1;j<n;j++){\n            for(int k=j+1;k<n;k++){\n             \
    \   if(a[i]+a[j]+a[k]==3){\n                    ans++;\n                }\n  \
    \          }\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7whbjhf6.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmp7whbjhf6.cpp:16:5: error: \u2018sort\u2019 was not declared in this\
    \ scope; did you mean \u2018std::sort\u2019?\n   16 |     sort(a,a+n);\n     \
    \ |     ^~~~\n      |     std::sort\nIn file included from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp7whbjhf6.cpp:2:\n/usr/include/c++/9/pstl/glue_algorithm_defs.h:296:1:\
    \ note: \u2018std::sort\u2019 declared here\n  296 | sort(_ExecutionPolicy&& __exec,\
    \ _RandomAccessIterator __first, _RandomAccessIterator __last);\n      | ^~~~\n"
  stdout: ''
  timestamp: 1660113792
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n    }\n  \
    \  long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(i<j && j<k && a[i]+a[j]+a[k]==3){\n\
    \                    ans++;\n                }\n            }\n        }\n   \
    \ }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpxrwn_s35: /tmp/tmpxrwn_s35.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    vector<long>\
    \ a(n);\n    for(int i = 0; i < n; i++){\n        a[i] = i * i - i + 1;\n    }\n\
    \    sort(a.begin(), a.end());\n    long ans = 0;\n    for(int i = 0; i < n; i++){\n\
    \        for(int j = i + 1; j < n; j++){\n            for(int k = j + 1; k < n;\
    \ k++){\n                if(a[i] + a[j] + a[k] == 3){\n                    ans++;\n\
    \                    break;\n                }\n            }\n        }\n   \
    \ }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwxa88oq4.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmpwxa88oq4.cpp:12:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   12 |     vector<long> a(n);\n      |     ^~~~~~\n/tmp/tmpwxa88oq4.cpp:12:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpwxa88oq4.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpwxa88oq4.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmpwxa88oq4.cpp:12:12:\
    \ error: expected primary-expression before \u2018long\u2019\n   12 |     vector<long>\
    \ a(n);\n      |            ^~~~\n/tmp/tmpwxa88oq4.cpp:14:9: error: \u2018a\u2019\
    \ was not declared in this scope\n   14 |         a[i] = i * i - i + 1;\n    \
    \  |         ^\n/tmp/tmpwxa88oq4.cpp:16:10: error: \u2018a\u2019 was not declared\
    \ in this scope\n   16 |     sort(a.begin(), a.end());\n      |          ^\n/tmp/tmpwxa88oq4.cpp:16:5:\
    \ error: \u2018sort\u2019 was not declared in this scope; did you mean \u2018\
    std::sort\u2019?\n   16 |     sort(a.begin(), a.end());\n      |     ^~~~\n  \
    \    |     std::sort\nIn file included from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpwxa88oq4.cpp:2:\n/usr/include/c++/9/pstl/glue_algorithm_defs"
  stdout: ''
  timestamp: 1660113792
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i = 0; i<n; i++){\n        a[i] = i*i-i+1;\n   \
    \ }\n    long long int ans = 0;\n    for(int i = 1; i<n; i++){\n        for(int\
    \ j = 1; j<n; j++){\n            for(int k = 1; k<n; k++){\n                if(a[i]\
    \ + a[j] + a[k] == 3){\n                    ans++;\n                }\n      \
    \      }\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: Exception
  stderr: 'tmp6_tgmjyj: /tmp/tmp6_tgmjyj.cpp:31: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113791
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int sum = 0;\n    for(int i = 0; i<n; i++){\n\
    \        a[i] = i*i-i+1;\n        sum += a[i];\n    }\n    for(int i = 0; i<n;\
    \ i++){\n        for(int j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n\
    \                if(i<j && j<k){\n                    if(a[i] + a[j] + a[k] ==\
    \ sum){\n                        return 1;\n                    }\n          \
    \      }\n            }\n        }\n    }\n    return 0;\n}\nint main() {\n  \
    \  auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n   \
    \ assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: Exception
  stderr: 'tmp62okp3sy: /tmp/tmp62okp3sy.cpp:33: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113789
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int sum = 0;\n    for(int i = 0; i<n; i++){\n\
    \        a[i] = i*(i+1)-1;\n        sum += a[i];\n    }\n    for(int i = 0; i<n;\
    \ i++){\n        for(int j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n\
    \                if(a[i] + a[j] + a[k] == sum){\n                    return 1;\n\
    \                }\n            }\n        }\n    }\n    return 0;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpima0jwrl: /tmp/tmpima0jwrl.cpp:32: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113793
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n    }\n  \
    \  long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(i<j && i<k && j<k){\n \
    \                   if(a[i]+a[j]+a[k]==3){\n                        ans++;\n \
    \                   }\n                }\n            }\n        }\n    }\n  \
    \  return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpv6gkm3o1: /tmp/tmpv6gkm3o1.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113786
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    vector<long>\
    \ a(n);\n    long sum = 0;\n    for(long i = 0; i< n; i++){\n        a[i] = i\
    \ * i - i + 1;\n        sum += a[i];\n    }\n    long ans = 0;\n    for(long i\
    \ = 0; i< n; i++){\n        for(long j= i+1; j< n; j++){\n            for(long\
    \ k= j+1; k< n; k++){\n                if(a[i] + a[j] + a[k] == sum){\n      \
    \              ans++;\n                }\n            }\n        }\n    }\n  \
    \  return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp9oz1ub1.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmpp9oz1ub1.cpp:12:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   12 |     vector<long> a(n);\n      |     ^~~~~~\n/tmp/tmpp9oz1ub1.cpp:12:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpp9oz1ub1.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpp9oz1ub1.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmpp9oz1ub1.cpp:12:12:\
    \ error: expected primary-expression before \u2018long\u2019\n   12 |     vector<long>\
    \ a(n);\n      |            ^~~~\n/tmp/tmpp9oz1ub1.cpp:15:9: error: \u2018a\u2019\
    \ was not declared in this scope\n   15 |         a[i] = i * i - i + 1;\n    \
    \  |         ^\n/tmp/tmpp9oz1ub1.cpp:22:20: error: \u2018a\u2019 was not declared\
    \ in this scope\n   22 |                 if(a[i] + a[j] + a[k] == sum){\n    \
    \  |                    ^\n"
  stdout: ''
  timestamp: 1660113792
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int count = 0;\n    for(int i = 0; i<n; i++){\n\
    \        a[i] = i*i-i+1;\n    }\n    for(int i = 0; i<n; i++){\n        for(int\
    \ j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n                if(i<j\
    \ && i<k && j<k){\n                    if(a[i]+a[j]+a[k]==3){\n              \
    \          count++;\n                    }\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpavyaybpb: /tmp/tmpavyaybpb.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113793
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i = 0; i < n; i++){\n        a[i] = i * i - i +\
    \ 1;\n    }\n    long long int ans = 0;\n    for(int i = 0; i < n; i++){\n   \
    \     for(int j = 0; j < n; j++){\n            for(int k = 0; k < n; k++){\n \
    \               if(i == j && j == k){\n                    continue;\n       \
    \         }\n                if(a[i] + a[j] + a[k] == 3){\n                  \
    \  ans++;\n                }\n            }\n        }\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp_s_cipx8: /tmp/tmp_s_cipx8.cpp:33: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113793
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    vector<long>\
    \ a(n);\n    long sum = 0;\n    long count = 0;\n    for(int i = 0; i<n; i++){\n\
    \        a[i] = i*i-1;\n        sum += a[i];\n    }\n    for(int i = 0; i<n; i++){\n\
    \        for(int j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n  \
    \              if(i<j && j<k){\n                    if(a[i] + a[j] + a[k] == sum){\n\
    \                        count++;\n                    }\n                }\n\
    \            }\n        }\n    }\n    return count;\n}\nint main() {\n    auto\
    \ candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkoclwwp5.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmpkoclwwp5.cpp:12:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   12 |     vector<long> a(n);\n      |     ^~~~~~\n/tmp/tmpkoclwwp5.cpp:12:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpkoclwwp5.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpkoclwwp5.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmpkoclwwp5.cpp:12:12:\
    \ error: expected primary-expression before \u2018long\u2019\n   12 |     vector<long>\
    \ a(n);\n      |            ^~~~\n/tmp/tmpkoclwwp5.cpp:16:9: error: \u2018a\u2019\
    \ was not declared in this scope\n   16 |         a[i] = i*i-1;\n      |     \
    \    ^\n/tmp/tmpkoclwwp5.cpp:23:24: error: \u2018a\u2019 was not declared in this\
    \ scope\n   23 |                     if(a[i] + a[j] + a[k] == sum){\n      | \
    \                       ^\n"
  stdout: ''
  timestamp: 1660113793
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int sum = 0;\n    for(int i = 0; i<n; i++){\n\
    \        a[i] = i*i-1;\n        sum += a[i];\n    }\n    for(int i = 0; i<n; i++){\n\
    \        for(int j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n  \
    \              if(i<j && j<k && a[i] + a[j] + a[k] == sum){\n                \
    \    return 1;\n                }\n            }\n        }\n    }\n    return\
    \ 0;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkkimx6im: /tmp/tmpkkimx6im.cpp:31: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113793
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n    }\n  \
    \  long long int count=0;\n    for(int i=0;i<n;i++){\n        for(int j=i+1;j<n;j++){\n\
    \            for(int k=j+1;k<n;k++){\n                if(a[i]+a[j]+a[k]==3){\n\
    \                    count++;\n                }\n            }\n        }\n \
    \   }\n    return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpls4xu9as: /tmp/tmpls4xu9as.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113793
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i = 0; i<n; i++){\n        a[i] = i*(i-1)+i+1;\n\
    \    }\n    long long int ans = 0;\n    for(int i = 1; i<n; i++){\n        for(int\
    \ j=i; j<n; j++){\n            for(int k=j; k<n; k++){\n                if(a[i]+a[j]+a[k]==3){\n\
    \                    ans++;\n                }\n            }\n        }\n   \
    \ }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp06_3124_: /tmp/tmp06_3124_.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113793
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i = 0; i < n; i++){\n        a[i] = i * i - i +\
    \ 1;\n    }\n    long long int ans = 0;\n    for(int i = 0; i < n; i++){\n   \
    \     for(int j = i + 1; j < n; j++){\n            for(int k = j + 1; k < n; k++){\n\
    \                if(a[i] + a[j] + a[k] == 3){\n                    ans++;\n  \
    \              }\n            }\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp_w3mu1oo: /tmp/tmp_w3mu1oo.cpp:30: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    long long int sum = 0;\n    for(int i = 1; i < n; i++) {\n\
    \        a[i] = i * i - i + 1;\n        sum += a[i];\n    }\n    for(int i = 1;\
    \ i < n; i++) {\n        for(int j = 1; j < n; j++) {\n            for(int k =\
    \ 1; k < n; k++) {\n                if(a[i] + a[j] + a[k] == sum) {\n        \
    \            return 1;\n                }\n            }\n        }\n    }\n \
    \   return 0;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp6982_xge: /tmp/tmp6982_xge.cpp:31: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113787
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    vector<long>\
    \ a(n);\n    long sum = 0;\n    for(int i = 1; i < n; i++){\n        sum += a[i]\
    \ * a[i] - a[i] + a[i];\n        a[i] = a[i] * a[i] - a[i] + a[i];\n    }\n  \
    \  return sum % 3;\n}\nint main() {\n    auto candidate = get_max_triples;\n \
    \   assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp49tmqsps.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmp49tmqsps.cpp:12:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   12 |     vector<long> a(n);\n      |     ^~~~~~\n/tmp/tmp49tmqsps.cpp:12:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp49tmqsps.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp49tmqsps.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmp49tmqsps.cpp:12:12:\
    \ error: expected primary-expression before \u2018long\u2019\n   12 |     vector<long>\
    \ a(n);\n      |            ^~~~\n/tmp/tmp49tmqsps.cpp:15:16: error: \u2018a\u2019\
    \ was not declared in this scope\n   15 |         sum += a[i] * a[i] - a[i] +\
    \ a[i];\n      |                ^\n"
  stdout: ''
  timestamp: 1660113793
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n\
    // The only valid triple is (1, 7, 13).\nlong get_max_triples(long n) {\n    long\
    \ long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n    }\n  \
    \  long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(i<j && i<k && j<k){\n \
    \                   if(a[i]+a[j]+a[k]==3){\n                        ans++;\n \
    \                   }\n                }\n            }\n        }\n    }\n  \
    \  return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpv6gkm3o1: /tmp/tmpv6gkm3o1.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113786

language: cpp
name: HumanEval_75_is_multiply_prime
results:
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = a *\
    \ 3;\n    long long int c = a * 5;\n    long long int d = a * 7;\n    long long\
    \ int e = (a + b + c + d) * 9;\n    long long int f = (a + b + c + d + e) * 11;\n\
    \    long long int g = (a + b + c + d + e + f) * 13;\n    long long int h = (a\
    \ + b + c + d + e + f + g) * 15;\n    long long int i = (a + b + c + d + e + f\
    \ + g + h) * 17;\n    long long int j = (a + b + c + d + e + f + g + h + i) *\
    \ 19;\n    long long int k = (a + b + c + d + e + f + g + h + i + j) * 21;\n \
    \   long long int l = (a + b + c + d + e + f + g + h + i + j + k) * 23;\n    long\
    \ long int m = (a + b + c + d + e + f + g + h + i + j + k + l) * 25;\n    long\
    \ long int n = (a + b + c + d + e + f + g + h + i + j + k + l + m) * 27;\n   \
    \ long long int o = (a + b + c + d + e + f + g + h + i + j + k + l + m + n) *\
    \ 29;\n    long long int p = (a + b + c + d + e + f + g + h + i + j + k + l +\
    \ m + n + o) * 31;\n    long long int q = (a + b + c + d + e + f + g + h + i +\
    \ j + k + l + m + n + o + p) * 33;\n    long long int r = (a + b + c + d + e +\
    \ f + g + h + i + j + k + l + m + n + o + p + q) * 35;\n    long long int s =\
    \ (a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q + r) * 37;\n\
    \    long long int t = (a + b + c + d + e + f + g + h + i + j + k + l + m + n\
    \ + o + p + q + r + s) * 39;\n    long long int u = (a + b + c + d + e + f + g\
    \ + h + i + j + k + l + m + n + o + p + q + r + s + t) * 41;\n    long long int\
    \ v = (a + b + c + d + e + f + \n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp96nkzq3f.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmp96nkzq3f.cpp:30:1: error: expected primary-expression before \u2018\
    }\u2019 token\n   30 | }\n      | ^\n/tmp/tmp96nkzq3f.cpp:29:47: error: expected\
    \ \u2018)\u2019 before \u2018}\u2019 token\n   29 |     long long int v = (a +\
    \ b + c + d + e + f +\n      |                       ~                       ^\n\
    \      |                                               )\n   30 | }\n      | ~\
    \                                              \n/tmp/tmp96nkzq3f.cpp:30:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n   30 |\
    \ }\n      | ^\n"
  stdout: ''
  timestamp: 1660099760
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    while (b <= a) {\n        if (a % b == 0) {\n           \
    \ while (c <= a / b) {\n                if (a % c == 0) {\n                  \
    \  while (d <= a / c) {\n                        if (a % d == 0) {\n         \
    \                   return true;\n                        }\n                \
    \        d++;\n                    }\n                }\n                c++;\n\
    \            }\n        }\n        b++;\n    }\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n\
    \    assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp1bii43ds: /tmp/tmp1bii43ds.cpp:31: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099760
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int e = 3, f = 5, g = 7;\n    long long int h =\
    \ 2, i = 5, j = 5;\n    long long int k = 2, l = 5;\n    long long int m = 2,\
    \ n = 5;\n    long long int o = 3, p = 5, q = 7;\n    long long int r = 2, s =\
    \ 5, t = 7;\n    long long int u = 3, v = 5, w = 7;\n    long long int x = 2,\
    \ y = 5, z = 5;\n    long long int A = 3, B = 5, C = 7;\n    long long int D =\
    \ 3, E = 5, F = 7;\n    long long int G = 3, H = 5, I = 7;\n    long long int\
    \ J = 3, K = 5, L = 7;\n    long long int M = 3, N = 5, O = 7;\n    long long\
    \ int P = 3, Q = 5, R = 7;\n    long long int S = 3, T = 5, U = 7;\n    long long\
    \ int V = 3, W = 5, X = 7;\n    long long int Y = 3, Z = 5, A = 7;\n    long long\
    \ int B = 3, C = 5, D = 7;\n    long long int E = 3, F = 5, G = 7;\n    long long\
    \ int H = 3, I = 5, J = 7;\n    long long int K = 3, L = 5, M = 7;\n    long long\
    \ int N = 3, O = 5, P = 7;\n    long long int Q = 3, R = 5, S = 7;\n    long long\
    \ int T = 3, U = 5, V = 7;\n    long long int W = 3, X = 5, Y = 7;\n    long long\
    \ int Z = 3, A = 5, B = 7;\n    long long int C = 3, D = 5, E = 7;\n    long long\
    \ int F = 3, G = 5, H = 7;\n    long long int I = 3, J = 5, K = 7;\n    long long\
    \ int L = 3, M = 5, N = 7;\n    long long int O = 3, P = 5, Q = 7;\n    long long\
    \ int R = 3, S = 5, T = 7;\n    long long int U = 3, V = 5, W = 7;\n    long long\
    \ int X = 3, Y = 5, Z = 7;\n    long long int A = 3, B = 5, C = 7;\n    long long\
    \ int D = 3, E = 5, F = 7;\n    long long int G = 3, H = 5, I = 7;\n    long long\
    \ int J = 3, K = 5, L = 7;\n    long long int M = 3, N = 5, O = 7;\n    long long\
    \ int P = 3, Q = 5, R = 7;\n    long long int S = 3, T = 5, U = 7;\n    long long\
    \ int V\n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpa4i5yaae.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpa4i5yaae.cpp:26:33: error: redeclaration of \u2018long long int A\u2019\
    \n   26 |     long long int Y = 3, Z = 5, A = 7;\n      |                    \
    \             ^\n/tmp/tmpa4i5yaae.cpp:18:19: note: \u2018long long int A\u2019\
    \ previously declared here\n   18 |     long long int A = 3, B = 5, C = 7;\n \
    \     |                   ^\n/tmp/tmpa4i5yaae.cpp:27:19: error: redeclaration\
    \ of \u2018long long int B\u2019\n   27 |     long long int B = 3, C = 5, D =\
    \ 7;\n      |                   ^\n/tmp/tmpa4i5yaae.cpp:18:26: note: \u2018long\
    \ long int B\u2019 previously declared here\n   18 |     long long int A = 3,\
    \ B = 5, C = 7;\n      |                          ^\n/tmp/tmpa4i5yaae.cpp:27:26:\
    \ error: redeclaration of \u2018long long int C\u2019\n   27 |     long long int\
    \ B = 3, C = 5, D = 7;\n      |                          ^\n/tmp/tmpa4i5yaae.cpp:18:33:\
    \ note: \u2018long long int C\u2019 previously declared here\n   18 |     long\
    \ long int A = 3, B = 5, C = 7;\n      |                                 ^\n/tmp/tmpa4i5yaae.cpp:27:33:\
    \ error: redeclaration of \u2018long long int D\u2019\n   27 |     long long int\
    \ B = 3, C = 5, D = 7;\n      |                                 ^\n/tmp/tmpa4i5yaae.cpp:19:19:\
    \ note: \u2018long long int D\u2019 previously declared here\n   19 |     long\
    \ long int D = 3, E = 5, F = 7;\n      |                   ^\n/tmp/tmpa4i5yaae.cpp:28:19:\
    \ error: redeclaration of \u2018long long int E\u2019\n   28 |     long long int\
    \ E = 3, F = 5, G = 7;\n      |                   ^\n/tmp/tmpa4i5yaae.cpp:19:26:\
    \ note: \u2018long long int E\u2019 previously declared here\n   19 |     long\
    \ long int D = 3, E = 5, F = 7;\n      |                          ^\n/tmp/tmpa4i5yaae.cpp:28:26:\
    \ error: redeclaration of \u2018long long int F\u2019\n   28 |     long long int\
    \ E = 3, F = 5, G = 7;\n      |                          ^\n/tmp/tmpa4i5yaae.cpp:19:33:\
    \ note: \u2018long long int F\u2019 previously declared here\n   19 |     long\
    \ long int D = 3, E = 5, F = 7;\n      |                                 ^\n/tmp/tmpa4i5yaae.cpp:28:33:\
    \ error: redeclaration of \u2018long "
  stdout: ''
  timestamp: 1660099760
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    while (b <= a) {\n        if (a % b == 0 && a % c == 0 &&\
    \ a % d == 0) {\n            return true;\n        }\n        b += 2;\n      \
    \  c += 2;\n        d += 2;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpzo2qmm7h: /tmp/tmpzo2qmm7h.cpp:23: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099761
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long b = 3, c = 5, d\
    \ = 7;\n    long long int sum = 0;\n    long long int flag = 0;\n    long long\
    \ int count = 0;\n    long long int limit = 100;\n    long long int counter =\
    \ 0;\n    long long int counter2 = 0;\n    long long int counter3 = 0;\n    long\
    \ long int counter4 = 0;\n    long long int counter5 = 0;\n    long long int counter6\
    \ = 0;\n    long long int counter7 = 0;\n    long long int counter8 = 0;\n   \
    \ long long int counter9 = 0;\n    long long int counter10 = 0;\n    long long\
    \ int counter11 = 0;\n    long long int counter12 = 0;\n    long long int counter13\
    \ = 0;\n    long long int counter14 = 0;\n    long long int counter15 = 0;\n \
    \   long long int counter16 = 0;\n    long long int counter17 = 0;\n    long long\
    \ int counter18 = 0;\n    long long int counter19 = 0;\n    long long int counter20\
    \ = 0;\n    long long int counter21 = 0;\n    long long int counter22 = 0;\n \
    \   long long int counter23 = 0;\n    long long int counter24 = 0;\n    long long\
    \ int counter25 = 0;\n    long long int counter26 = 0;\n    long long int counter27\
    \ = 0;\n    long long int counter28 = 0;\n    long long int counter29 = 0;\n \
    \   long long int counter30 = 0;\n    long long int counter31 = 0;\n    long long\
    \ int counter32 = 0;\n    long long int counter33 = 0;\n    long long int counter34\
    \ = 0;\n    long long int counter35 = 0;\n    long long int counter36 = 0;\n \
    \   long long int counter37 = 0;\n    long long int counter38 = 0;\n    long long\
    \ int counter39 = 0;\n    long long int counter40 = 0;\n    long long int counter41\
    \ = 0;\n    long long int counter42 = 0;\n    long long int counter43 = 0;\n \
    \   long long int counter44 = 0;\n    long long int counter45 = 0;\n    long long\
    \ int counter46 = 0;\n    long long int counter47 = 0;\n    long long int counter48\
    \ = 0;\n    long long int counter49 = 0;\n    long long int counter50 = 0;\n \
    \   long long int counter51 = 0;\n    long long int counter52 = 0;\n    long long\
    \ int counter53 = 0;\n    long long int counter54 = 0;\n    long long int counter55\
    \ = 0;\n    long long int counter56 = 0;\n    long long int counter57 = 0;\n \
    \   long long int counter58 = 0;\n    long long int counter59 = 0;\n    long long\
    \ int counter60 = 0;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp2tokh0ne: /tmp/tmp2tokh0ne.cpp:77: int main(): Assertion `candidate((5))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660099761
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    while (b <= a) {\n        if (a % b == 0 && a % c == 0 &&\
    \ a % d == 0) {\n            return true;\n        }\n        b += 2;\n      \
    \  c += 2;\n        d += 2;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpzo2qmm7h: /tmp/tmpzo2qmm7h.cpp:23: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099761
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int sum = 0;\n    long long int flag = 0;\n   \
    \ while (b <= a) {\n        if (a % b == 0) {\n            flag = 1;\n       \
    \     break;\n        }\n        b += 2;\n    }\n    if (flag == 1) {\n      \
    \  while (b <= a) {\n            if (a % b == 0) {\n                flag = 1;\n\
    \                break;\n            }\n            b += 2;\n        }\n    }\n\
    \    if (flag == 1) {\n        while (b <= a) {\n            if (a % b == 0) {\n\
    \                flag = 1;\n                break;\n            }\n          \
    \  b += 2;\n        }\n    }\n    if (flag == 1) {\n        while (b <= a) {\n\
    \            if (a % b == 0) {\n                flag = 1;\n                break;\n\
    \            }\n            b += 2;\n        }\n    }\n    if (flag == 1) {\n\
    \        while (b <= a) {\n            if (a % b == 0) {\n                flag\
    \ = 1;\n                break;\n            }\n            b += 2;\n        }\n\
    \    }\n    if (flag == 1) {\n        while (b <= a) {\n            if (a % b\
    \ == 0) {\n                flag = 1;\n                break;\n            }\n\
    \            b += 2;\n        }\n    }\n    if (flag == 1) {\n        while (b\
    \ <= a) {\n            if (a % b == 0) {\n                flag = 1;\n        \
    \        break;\n            }\n            b += 2;\n        }\n    }\n    if\
    \ (flag == 1) {\n        while (b <= a) {\n            if (a % b == 0) {\n   \
    \             flag = 1;\n                break;\n            }\n            b\
    \ += 2;\n        }\n    }\n    if (flag == 1) {\n        while (b <= a) {\n  \
    \          if (a % b == 0) {\n                flag = 1;\n                break;\n\
    \            }\n            b += 2;\n        }\n    }\n    if (flag == 1) {\n\
    \        while (b <= a) {\n            if (a % b == 0) {\n                flag\
    \ = 1;\n                break;\n            }\n            b += 2;\n        }\n\
    \    }\n    if (flag == 1) {\n        while (b <= a) {\n            if (a % b\
    \ == 0) {\n                flag = 1;\n                break;\n            }\n\
    \            b += 2;\n        }\n    }\n    if (flag == 1) {\n        while (b\
    \ <= a) {\n            if (a % b == 0) {\n                flag = 1;\n        \
    \        break;\n            }\n            b += 2;\n        }\n    }\n    if\
    \ (flag == 1) {\n        while (b <= a) {\n            if (a % b == 0) {\n   \
    \             flag = 1;\n                break;\n            }\n            b\
    \ += 2;\n        }\n    }\n    if (flag == 1) {\n        while (b <= a) {\n  \
    \          if (a % b == 0) {\n                flag = 1;\n                break;\n\
    \            }\n            b += 2;\n        }\n    }\n    if (flag == 1) {\n\
    \        while (b <= a) {\n            if (a % b == 0) {\n                flag\
    \ = 1;\n                break;\n            }\n            b += 2;\n        }\n\
    \    }\n    if (flag == 1) {\n        while (b <= a) {\n            if (a % \n\
    }\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp38uj0y93.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmp38uj0y93.cpp:148:1: error: expected primary-expression before \u2018\
    }\u2019 token\n  148 | }\n      | ^\n/tmp/tmp38uj0y93.cpp:147:20: error: expected\
    \ \u2018)\u2019 before \u2018}\u2019 token\n  147 |             if (a %\n    \
    \  |                ~   ^\n      |                    )\n  148 | }\n      | ~\
    \                   \n/tmp/tmp38uj0y93.cpp:148:1: error: expected primary-expression\
    \ before \u2018}\u2019 token\n  148 | }\n      | ^\n/tmp/tmp38uj0y93.cpp:149:12:\
    \ error: a function-definition is not allowed here before \u2018{\u2019 token\n\
    \  149 | int main() {\n      |            ^\n/tmp/tmp38uj0y93.cpp:161:1: error:\
    \ expected \u2018}\u2019 at end of input\n  161 | }\n      | ^\n/tmp/tmp38uj0y93.cpp:145:20:\
    \ note: to match this \u2018{\u2019\n  145 |     if (flag == 1) {\n      |   \
    \                 ^\n/tmp/tmp38uj0y93.cpp:161:1: error: expected \u2018}\u2019\
    \ at end of input\n  161 | }\n      | ^\n/tmp/tmp38uj0y93.cpp:8:32: note: to match\
    \ this \u2018{\u2019\n    8 | bool is_multiply_prime(long a) {\n      |      \
    \                          ^\n/tmp/tmp38uj0y93.cpp:161:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n  161 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660099760
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    int count = 0;\n    for(int\
    \ i = 3; i <= a; i++) {\n        for(int j = 2; j < i; j++) {\n            if(i%j\
    \ == 0) {\n                count++;\n                break;\n            }\n \
    \       }\n        if(count == 3) {\n            return true;\n        }\n   \
    \ }\n    return false;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpze7w21wh: /tmp/tmpze7w21wh.cpp:28: int main(): Assertion `candidate((10))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660099761
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int d = a / b;\n    long long int e = a % b;\n\
    \    long long int f = e / c;\n    long long int g = e % c;\n    long long int\
    \ h = f / d;\n    long long int i = f % d;\n    long long int j = g / d;\n   \
    \ long long int k = g % d;\n    long long int l = h / d;\n    long long int m\
    \ = h % d;\n    long long int n = i / d;\n    long long int o = i % d;\n    long\
    \ long int p = j / d;\n    long long int q = j % d;\n    long long int r = k /\
    \ d;\n    long long int s = k % d;\n    long long int t = l / d;\n    long long\
    \ int u = l % d;\n    long long int v = m / d;\n    long long int w = m % d;\n\
    \    long long int x = n / d;\n    long long int y = n % d;\n    long long int\
    \ z = o / d;\n    long long int aa = o % d;\n    long long int bb = p * q;\n \
    \   long long int cc = s * t;\n    long long int dd = u * v;\n    long long int\
    \ ee = w * x;\n    long long int ff = aa * bb;\n    long long int gg = cc * dd;\n\
    \    long long int hh = ee * ff;\n    long long int ii = gg * hh;\n    long long\
    \ int jj = ii * jj;\n    long long int kk = jj * kk;\n    return kk == a;\n}\n\
    int main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaherpmb7.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpaherpmb7.cpp:10:19: error: redeclaration of \u2018long long int d\u2019\
    \n   10 |     long long int d = a / b;\n      |                   ^\n/tmp/tmpaherpmb7.cpp:9:33:\
    \ note: \u2018long long int d\u2019 previously declared here\n    9 |     long\
    \ long int b = 3, c = 5, d = 7;\n      |                                 ^\n"
  stdout: ''
  timestamp: 1660099760
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int n = 3*a*a;\n\
    \    long long int m = 3*a*a*a;\n    long long int d = m*m;\n    long long int\
    \ r = m*a*a;\n    long long int t = n*n;\n    long long int u = a*a*a;\n    long\
    \ long int v = 3*a*a*a*a;\n    long long int w = 3*a*a*a*a*a;\n    long long int\
    \ x = 3*a*a*a*a*a*a;\n    long long int y = 3*a*a*a*a*a*a*a;\n    long long int\
    \ z = 3*a*a*a*a*a*a*a*a;\n    long long int s = 3*a*a*a*a*a*a*a*a*a;\n    long\
    \ long int k = 3*a*a*a*a*a*a*a*a*a*a;\n    long long int l = 3*a*a*a*a*a*a*a*a*a*a*a;\n\
    \    long long int m = n*a*a*a*a*a*a*a*a*a*a*a*a;\n    long long int n = 3*a*a*a*a*a*a*a*a*a*a*a*a*a;\n\
    \    long long int o = 3*a*a*a*a*a*a*a*a*a*a*a*a*a*a;\n    long long int p = 3*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a;\n\
    \    long long int q = 3*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a;\n    long long int r\
    \ = 3*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a;\n    long long int s = 3*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a;\n\
    \    long long int t = 3*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a;\n    long long\
    \ int u = 3*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a;\n    long long int v =\
    \ 3*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a;\n    long long int w = 3*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a;\n\
    \    long long int x = 3*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a;\n    long\
    \ long int y = 3*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*\n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp703c5mkb.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmp703c5mkb.cpp:23:19: error: redeclaration of \u2018long long int m\u2019\
    \n   23 |     long long int m = n*a*a*a*a*a*a*a*a*a*a*a*a;\n      |          \
    \         ^\n/tmp/tmp703c5mkb.cpp:10:19: note: \u2018long long int m\u2019 previously\
    \ declared here\n   10 |     long long int m = 3*a*a*a;\n      |             \
    \      ^\n/tmp/tmp703c5mkb.cpp:24:19: error: redeclaration of \u2018long long\
    \ int n\u2019\n   24 |     long long int n = 3*a*a*a*a*a*a*a*a*a*a*a*a*a;\n  \
    \    |                   ^\n/tmp/tmp703c5mkb.cpp:9:19: note: \u2018long long int\
    \ n\u2019 previously declared here\n    9 |     long long int n = 3*a*a;\n   \
    \   |                   ^\n/tmp/tmp703c5mkb.cpp:28:19: error: redeclaration of\
    \ \u2018long long int r\u2019\n   28 |     long long int r = 3*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a;\n\
    \      |                   ^\n/tmp/tmp703c5mkb.cpp:12:19: note: \u2018long long\
    \ int r\u2019 previously declared here\n   12 |     long long int r = m*a*a;\n\
    \      |                   ^\n/tmp/tmp703c5mkb.cpp:29:19: error: redeclaration\
    \ of \u2018long long int s\u2019\n   29 |     long long int s = 3*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a;\n\
    \      |                   ^\n/tmp/tmp703c5mkb.cpp:20:19: note: \u2018long long\
    \ int s\u2019 previously declared here\n   20 |     long long int s = 3*a*a*a*a*a*a*a*a*a;\n\
    \      |                   ^\n/tmp/tmp703c5mkb.cpp:30:19: error: redeclaration\
    \ of \u2018long long int t\u2019\n   30 |     long long int t = 3*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a;\n\
    \      |                   ^\n/tmp/tmp703c5mkb.cpp:13:19: note: \u2018long long\
    \ int t\u2019 previously declared here\n   13 |     long long int t = n*n;\n \
    \     |                   ^\n/tmp/tmp703c5mkb.cpp:31:19: error: redeclaration\
    \ of \u2018long long int u\u2019\n   31 |     long long int u = 3*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a;\n\
    \      |                   ^\n/tmp/tmp703c5mkb.cpp:14:19: note: \u2018long long\
    \ int u\u2019 previously declared here\n   14 |     long long int u = a*a*a;\n\
    \      |                   ^\n/tmp/tmp703c5mkb.cpp:32:19: error: redeclaration\
    \ of \u2018long long int "
  stdout: ''
  timestamp: 1660099760
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    int flag = 0;\n    long\
    \ b = 2;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 0;\n\
    \    long g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long\
    \ k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n\
    \    long p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long\
    \ t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n\
    \    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long\
    \ c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 0;\n    long g = 1;\n\
    \    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long\
    \ l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n\
    \    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long\
    \ u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n\
    \    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long\
    \ d = 1;\n    long e = 1;\n    long f = 0;\n    long g = 1;\n    long h = 1;\n\
    \    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long\
    \ m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n\
    \    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long\
    \ v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n\
    \    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long\
    \ e = 1;\n    long f = 0;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n\
    \    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n    long\
    \ n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n\
    \    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n    long\
    \ w = 1;\n    long x = 1;\n    long y = \n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4g7zaeof.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmp4g7zaeof.cpp:35:10: error: declaration of \u2018long int a\u2019 shadows\
    \ a parameter\n   35 |     long a = 1;\n      |          ^\n/tmp/tmp4g7zaeof.cpp:36:10:\
    \ error: redeclaration of \u2018long int b\u2019\n   36 |     long b = 1;\n  \
    \    |          ^\n/tmp/tmp4g7zaeof.cpp:10:10: note: \u2018long int b\u2019 previously\
    \ declared here\n   10 |     long b = 2;\n      |          ^\n/tmp/tmp4g7zaeof.cpp:37:10:\
    \ error: redeclaration of \u2018long int c\u2019\n   37 |     long c = 1;\n  \
    \    |          ^\n/tmp/tmp4g7zaeof.cpp:11:10: note: \u2018long int c\u2019 previously\
    \ declared here\n   11 |     long c = 1;\n      |          ^\n/tmp/tmp4g7zaeof.cpp:38:10:\
    \ error: redeclaration of \u2018long int d\u2019\n   38 |     long d = 1;\n  \
    \    |          ^\n/tmp/tmp4g7zaeof.cpp:12:10: note: \u2018long int d\u2019 previously\
    \ declared here\n   12 |     long d = 1;\n      |          ^\n/tmp/tmp4g7zaeof.cpp:39:10:\
    \ error: redeclaration of \u2018long int e\u2019\n   39 |     long e = 1;\n  \
    \    |          ^\n/tmp/tmp4g7zaeof.cpp:13:10: note: \u2018long int e\u2019 previously\
    \ declared here\n   13 |     long e = 1;\n      |          ^\n/tmp/tmp4g7zaeof.cpp:40:10:\
    \ error: redeclaration of \u2018long int f\u2019\n   40 |     long f = 0;\n  \
    \    |          ^\n/tmp/tmp4g7zaeof.cpp:14:10: note: \u2018long int f\u2019 previously\
    \ declared here\n   14 |     long f = 0;\n      |          ^\n/tmp/tmp4g7zaeof.cpp:41:10:\
    \ error: redeclaration of \u2018long int g\u2019\n   41 |     long g = 1;\n  \
    \    |          ^\n/tmp/tmp4g7zaeof.cpp:15:10: note: \u2018long int g\u2019 previously\
    \ declared here\n   15 |     long g = 1;\n      |          ^\n/tmp/tmp4g7zaeof.cpp:42:10:\
    \ error: redeclaration of \u2018long int h\u2019\n   42 |     long h = 1;\n  \
    \    |          ^\n/tmp/tmp4g7zaeof.cpp:16:10: note: \u2018long int h\u2019 previously\
    \ declared here\n   16 |     long h = 1;\n      |          ^\n/tmp/tmp4g7zaeof.cpp:43:10:\
    \ error: redeclaration of \u2018long int i\u2019\n   43 |     long i = 1;\n  \
    \    |          ^\n/tmp/tmp4g7zaeof.cpp:17:10: note: \u2018long int i\u2019 previously\
    \ declared here\n   17 |     long i = 1;\n      |        "
  stdout: ''
  timestamp: 1660099760
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = a;\n\
    \    long long int c = 1;\n    long long int d = 1;\n    long long int e = 1;\n\
    \    long long int f = 0;\n    long long int g = 0;\n    long long int h = 0;\n\
    \    long long int i = 0;\n    long long int j = 0;\n    long long int k = 0;\n\
    \    long long int l = 0;\n    long long int m = 0;\n    long long int n = 0;\n\
    \    long long int o = 0;\n    long long int p = 0;\n    long long int q = 0;\n\
    \    long long int r = 0;\n    long long int s = 0;\n    long long int t = 0;\n\
    \    long long int u = 0;\n    long long int v = 0;\n    long long int w = 0;\n\
    \    long long int x = 0;\n    long long int y = 0;\n    long long int z = 0;\n\
    \    long long int A = 0;\n    long long int B = 0;\n    long long int C = 0;\n\
    \    long long int D = 0;\n    long long int E = 0;\n    long long int F = 0;\n\
    \    long long int G = 0;\n    long long int H = 0;\n    long long int I = 0;\n\
    \    long long int J = 0;\n    long long int K = 0;\n    long long int L = 0;\n\
    \    long long int M = 0;\n    long long int N = 0;\n    long long int O = 0;\n\
    \    long long int P = 0;\n    long long int Q = 0;\n    long long int R = 0;\n\
    \    long long int S = 0;\n    long long int T = 0;\n    long long int U = 0;\n\
    \    long long int V = 0;\n    long long int W = 0;\n    long long int X = 0;\n\
    \    long long int Y = 0;\n    long long int Z = 0;\n    long long int A2 = 0;\n\
    \    long long int B2 = 0;\n    long long int C2 = 0;\n    long long int D2 =\
    \ 0;\n    long long int E2 = 0;\n    long long int F2 = 0;\n    long long int\
    \ G2 = 0;\n    long long int H2 = 0;\n    long long int I2 = 0;\n    long long\
    \ int J2 = 0;\n    long long int K2 = 0;\n    long long int L2 = 0;\n    long\
    \ long int M2 = 0;\n    long long int N2 = 0;\n    long long int O2 = 0;\n   \
    \ long long int P2 = 0;\n    long long int Q2 = 0;\n    long long int R2 = 0;\n\
    \    long long int S2 = 0;\n    long long int T2 = 0;\n    long long int U2 =\
    \ 0;\n    long long int V2 = 0;\n    long long int \n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptkug95b8.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmptkug95b8.cpp:83:1: error: expected unqualified-id before \u2018}\u2019\
    \ token\n   83 | }\n      | ^\n/tmp/tmptkug95b8.cpp:83:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660099760
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long b = 3, c = 5, d\
    \ = 7;\n    while(a != 0) {\n        if(a%b == 0 && a%c == 0 && a%d==0) {\n  \
    \          return true;\n        }\n        b +=2;\n        c +=2;\n        d\
    \ +=2;\n    }\n    return false;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660099765
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long b = 3, c = 5, d\
    \ = 7;\n    while (b <= a) {\n        if (a % b == 0 && a % c == 0 && a % d ==\
    \ 0) {\n            return true;\n        }\n        b += 2;\n        c += 2;\n\
    \        d += 2;\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmpgjx0t2y7: /tmp/tmpgjx0t2y7.cpp:23: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099760
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int p = a;\n    long long int q = 1;\n    long\
    \ long int r = 1;\n    long long int s = 1;\n    long long int t = 1;\n    long\
    \ long int u = 1;\n    long long int v = 1;\n    long long int w = 1;\n    long\
    \ long int x = 1;\n    long long int y = 1;\n    long long int z = 1;\n    long\
    \ long int aa = 1;\n    long long int bb = 1;\n    long long int cc = 1;\n   \
    \ long long int dd = 1;\n    long long int ee = 1;\n    long long int ff = 1;\n\
    \    long long int gg = 1;\n    long long int hh = 1;\n    long long int ii =\
    \ 1;\n    long long int jj = 1;\n    long long int kk = 1;\n    long long int\
    \ ll = 1;\n    long long int mm = 1;\n    long long int nn = 1;\n    long long\
    \ int oo = 1;\n    long long int pp = 1;\n    long long int qq = 1;\n    long\
    \ long int rr = 1;\n    long long int ss = 0;\n    long long int tt = 0;\n   \
    \ long long int uu = 0;\n    long long int vv = 0;\n    long long int ww = 0;\n\
    \    long long int xx = 0;\n    long long int yy = 0;\n    long long int zz =\
    \ 0;\n    long long int aaa = 0;\n    long long int bbb = 0;\n    long long int\
    \ ccc = 0;\n    long long int ddd = 0;\n    long long int eee = 0;\n    long long\
    \ int fff = 0;\n    long long int ggg = 0;\n    long long int hhh = 0;\n    long\
    \ long int iii = 0;\n    long long int jjj = 0;\n    long long int kkk = 0;\n\
    \    long long int lll = 0;\n    long long int mmm = 0;\n    long long int nnn\
    \ = 0;\n    long long int ooo = 0;\n    long long int ppp = 0;\n    long long\
    \ int qqq = 0;\n    long long int rrr = 0;\n    long long int ss = 0;\n    long\
    \ long int tt = 0;\n    long long int uu = 0;\n    long long int vv = 0;\n   \
    \ long long int ww = 0;\n    long long int xx = 0;\n    long long int yy = 0;\n\
    \    long long int zz = 0;\n    long long int aaa = 0;\n    long long int bbb\
    \ = 0;\n    long long int ccc = 0;\n    long long int ddd = 0;\n    long long\
    \ int eee = 0;\n    long long int \n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpv3w3d7fg.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpv3w3d7fg.cpp:65:19: error: redeclaration of \u2018long long int ss\u2019\
    \n   65 |     long long int ss = 0;\n      |                   ^~\n/tmp/tmpv3w3d7fg.cpp:39:19:\
    \ note: \u2018long long int ss\u2019 previously declared here\n   39 |     long\
    \ long int ss = 0;\n      |                   ^~\n/tmp/tmpv3w3d7fg.cpp:66:19:\
    \ error: redeclaration of \u2018long long int tt\u2019\n   66 |     long long\
    \ int tt = 0;\n      |                   ^~\n/tmp/tmpv3w3d7fg.cpp:40:19: note:\
    \ \u2018long long int tt\u2019 previously declared here\n   40 |     long long\
    \ int tt = 0;\n      |                   ^~\n/tmp/tmpv3w3d7fg.cpp:67:19: error:\
    \ redeclaration of \u2018long long int uu\u2019\n   67 |     long long int uu\
    \ = 0;\n      |                   ^~\n/tmp/tmpv3w3d7fg.cpp:41:19: note: \u2018\
    long long int uu\u2019 previously declared here\n   41 |     long long int uu\
    \ = 0;\n      |                   ^~\n/tmp/tmpv3w3d7fg.cpp:68:19: error: redeclaration\
    \ of \u2018long long int vv\u2019\n   68 |     long long int vv = 0;\n      |\
    \                   ^~\n/tmp/tmpv3w3d7fg.cpp:42:19: note: \u2018long long int\
    \ vv\u2019 previously declared here\n   42 |     long long int vv = 0;\n     \
    \ |                   ^~\n/tmp/tmpv3w3d7fg.cpp:69:19: error: redeclaration of\
    \ \u2018long long int ww\u2019\n   69 |     long long int ww = 0;\n      |   \
    \                ^~\n/tmp/tmpv3w3d7fg.cpp:43:19: note: \u2018long long int ww\u2019\
    \ previously declared here\n   43 |     long long int ww = 0;\n      |       \
    \            ^~\n/tmp/tmpv3w3d7fg.cpp:70:19: error: redeclaration of \u2018long\
    \ long int xx\u2019\n   70 |     long long int xx = 0;\n      |              \
    \     ^~\n/tmp/tmpv3w3d7fg.cpp:44:19: note: \u2018long long int xx\u2019 previously\
    \ declared here\n   44 |     long long int xx = 0;\n      |                  \
    \ ^~\n/tmp/tmpv3w3d7fg.cpp:71:19: error: redeclaration of \u2018long long int\
    \ yy\u2019\n   71 |     long long int yy = 0;\n      |                   ^~\n\
    /tmp/tmpv3w3d7fg.cpp:45:19: note: \u2018long long int yy\u2019 previously declared\
    \ here\n   45 |     long long int yy = 0;\n      |               "
  stdout: ''
  timestamp: 1660099760
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = a;\n\
    \    long long int c = 0;\n    long long int d = 0;\n    long long int e = 0;\n\
    \    long long int f = 0;\n    long long int g = 0;\n    long long int h = 0;\n\
    \    long long int i = 0;\n    long long int j = 0;\n    long long int k = 0;\n\
    \    long long int l = 0;\n    long long int m = 0;\n    long long int n = 0;\n\
    \    long long int o = 0;\n    long long int p = 0;\n    long long int q = 0;\n\
    \    long long int r = 0;\n    long long int s = 0;\n    long long int t = 0;\n\
    \    long long int u = 0;\n    long long int v = 0;\n    long long int w = 0;\n\
    \    long long int x = 0;\n    long long int y = 0;\n    long long int z = 0;\n\
    \    long long int A = 0;\n    long long int B = 0;\n    long long int C = 0;\n\
    \    long long int D = 0;\n    long long int E = 0;\n    long long int F = 0;\n\
    \    long long int G = 0;\n    long long int H = 0;\n    long long int I = 0;\n\
    \    long long int J = 0;\n    long long int K = 0;\n    long long int L = 0;\n\
    \    long long int M = 0;\n    long long int N = 0;\n    long long int O = 0;\n\
    \    long long int P = 0;\n    long long int Q = 0;\n    long long int R = 0;\n\
    \    long long int S = 0;\n    long long int T = 0;\n    long long int U = 0;\n\
    \    long long int V = 0;\n    long long int W = 0;\n    long long int X = 0;\n\
    \    long long int Y = 0;\n    long long int Z = 0;\n    long long int A = 0;\n\
    \    long long int B = 0;\n    long long int C = 0;\n    long long int D = 0;\n\
    \    long long int E = 0;\n    long long int F = 0;\n    long long int G = 0;\n\
    \    long long int H = 0;\n    long long int I = 0;\n    long long int J = 0;\n\
    \    long long int K = 0;\n    long long int L = 0;\n    long long int M = 0;\n\
    \    long long int N = 0;\n    long long int O = 0;\n    long long int P = 0;\n\
    \    long long int Q = 0;\n    long long int R = 0;\n    long long int S = 0;\n\
    \    long long int T = 0;\n    long long int U = 0;\n    long long int V = 0;\n\
    \    long long int \n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpp3ox0shb.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpp3ox0shb.cpp:60:19: error: redeclaration of \u2018long long int A\u2019\
    \n   60 |     long long int A = 0;\n      |                   ^\n/tmp/tmpp3ox0shb.cpp:34:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   34 |     long\
    \ long int A = 0;\n      |                   ^\n/tmp/tmpp3ox0shb.cpp:61:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   61 |     long long int B =\
    \ 0;\n      |                   ^\n/tmp/tmpp3ox0shb.cpp:35:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   35 |     long long int B = 0;\n\
    \      |                   ^\n/tmp/tmpp3ox0shb.cpp:62:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   62 |     long long int C = 0;\n      |  \
    \                 ^\n/tmp/tmpp3ox0shb.cpp:36:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   36 |     long long int C = 0;\n      |        \
    \           ^\n/tmp/tmpp3ox0shb.cpp:63:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   63 |     long long int D = 0;\n      |                \
    \   ^\n/tmp/tmpp3ox0shb.cpp:37:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   37 |     long long int D = 0;\n      |                   ^\n\
    /tmp/tmpp3ox0shb.cpp:64:19: error: redeclaration of \u2018long long int E\u2019\
    \n   64 |     long long int E = 0;\n      |                   ^\n/tmp/tmpp3ox0shb.cpp:38:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   38 |     long\
    \ long int E = 0;\n      |                   ^\n/tmp/tmpp3ox0shb.cpp:65:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   65 |     long long int F =\
    \ 0;\n      |                   ^\n/tmp/tmpp3ox0shb.cpp:39:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   39 |     long long int F = 0;\n\
    \      |                   ^\n/tmp/tmpp3ox0shb.cpp:66:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   66 |     long long int G = 0;\n      |  \
    \                 ^\n/tmp/tmpp3ox0shb.cpp:40:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   40 |     long long int G = 0;\n      |        \
    \           ^\n/tmp/tmpp3ox0shb.cpp:67:19: error: "
  stdout: ''
  timestamp: 1660099760
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int result = 1;\n    long long int limit = (long\
    \ long) sqrt(a);\n    while(c <= limit) {\n        if(a%c == 0)\n            return\
    \ false;\n        c += d;\n        d += 2;\n    }\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n\
    \    assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmps6zambd2: /tmp/tmps6zambd2.cpp:22: int main(): Assertion `candidate((5))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660099761
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    while (b <= a) {\n        if (a % b == 0) {\n           \
    \ if (a % c == 0) {\n                if (a % d == 0) {\n                    return\
    \ true;\n                }\n            }\n        }\n        b += 2;\n      \
    \  c += 2;\n        d += 2;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp1h4nsxw2: /tmp/tmp1h4nsxw2.cpp:27: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099761
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    while (b <= a) {\n        if (a % b == 0) {\n           \
    \ while (c <= a / b) {\n                if (a % c == 0 && a % d == 0) {\n    \
    \                return true;\n                }\n                c++;\n     \
    \       }\n        }\n        b++;\n    }\n    return false;\n}\nint main() {\n\
    \    auto candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n\
    \    assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpa55uqwzo: /tmp/tmpa55uqwzo.cpp:26: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099761
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = a;\n\
    \    long long int c = 0;\n    long long int d = 1;\n    long long int e = 1;\n\
    \    long long int f = 1;\n    long long int g = 1;\n    long long int h = 1;\n\
    \    long long int i = 1;\n    long long int j = 1;\n    long long int k = 1;\n\
    \    long long int l = 1;\n    long long int m = 1;\n    long long int n = 1;\n\
    \    long long int o = 1;\n    long long int p = 1;\n    long long int q = 1;\n\
    \    long long int r = 1;\n    long long int s = 1;\n    long long int t = 1;\n\
    \    long long int u = 1;\n    long long int v = 1;\n    long long int w = 1;\n\
    \    long long int x = 1;\n    long long int y = 1;\n    long long int z = 1;\n\
    \    long long int A = 1;\n    long long int B = 1;\n    long long int C = 1;\n\
    \    long long int D = 1;\n    long long int E = 1;\n    long long int F = 1;\n\
    \    long long int G = 1;\n    long long int H = 1;\n    long long int I = 1;\n\
    \    long long int J = 1;\n    long long int K = 1;\n    long long int L = 1;\n\
    \    long long int M = 1;\n    long long int N = 1;\n    long long int O = 1;\n\
    \    long long int P = 1;\n    long long int Q = 1;\n    long long int R = 1;\n\
    \    long long int S = 1;\n    long long int T = 1;\n    long long int U = 1;\n\
    \    long long int V = 1;\n    long long int W = 1;\n    long long int X = 1;\n\
    \    long long int Y = 1;\n    long long int Z = 1;\n    long long int A = 1;\n\
    \    long long int B = 1;\n    long long int C = 1;\n    long long int D = 1;\n\
    \    long long int E = 1;\n    long long int F = 1;\n    long long int G = 1;\n\
    \    long long int H = 1;\n    long long int I = 1;\n    long long int J = 1;\n\
    \    long long int K = 1;\n    long long int L = 1;\n    long long int M = 1;\n\
    \    long long int N = 1;\n    long long int O = 1;\n    long long int P = 1;\n\
    \    long long int Q = 1;\n    long long int R = 1;\n    long long int S = 1;\n\
    \    long long int T = 1;\n    long long int U = 1;\n    long long int V = 1;\n\
    \    \n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpq976dwch.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpq976dwch.cpp:60:19: error: redeclaration of \u2018long long int A\u2019\
    \n   60 |     long long int A = 1;\n      |                   ^\n/tmp/tmpq976dwch.cpp:34:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   34 |     long\
    \ long int A = 1;\n      |                   ^\n/tmp/tmpq976dwch.cpp:61:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   61 |     long long int B =\
    \ 1;\n      |                   ^\n/tmp/tmpq976dwch.cpp:35:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   35 |     long long int B = 1;\n\
    \      |                   ^\n/tmp/tmpq976dwch.cpp:62:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   62 |     long long int C = 1;\n      |  \
    \                 ^\n/tmp/tmpq976dwch.cpp:36:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   36 |     long long int C = 1;\n      |        \
    \           ^\n/tmp/tmpq976dwch.cpp:63:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   63 |     long long int D = 1;\n      |                \
    \   ^\n/tmp/tmpq976dwch.cpp:37:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   37 |     long long int D = 1;\n      |                   ^\n\
    /tmp/tmpq976dwch.cpp:64:19: error: redeclaration of \u2018long long int E\u2019\
    \n   64 |     long long int E = 1;\n      |                   ^\n/tmp/tmpq976dwch.cpp:38:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   38 |     long\
    \ long int E = 1;\n      |                   ^\n/tmp/tmpq976dwch.cpp:65:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   65 |     long long int F =\
    \ 1;\n      |                   ^\n/tmp/tmpq976dwch.cpp:39:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   39 |     long long int F = 1;\n\
    \      |                   ^\n/tmp/tmpq976dwch.cpp:66:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   66 |     long long int G = 1;\n      |  \
    \                 ^\n/tmp/tmpq976dwch.cpp:40:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   40 |     long long int G = 1;\n      |        \
    \           ^\n/tmp/tmpq976dwch.cpp:67:19: error: "
  stdout: ''
  timestamp: 1660099760
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int res = 0;\n    while (b <= a) {\n        if\
    \ (a % b == 0) {\n            while (c <= a / b) {\n                if (a % c\
    \ == 0) {\n                    while (d <= a / c) {\n                        if\
    \ (a % d == 0) {\n                            res = 1;\n                     \
    \       break;\n                        }\n                        d++;\n    \
    \                }\n                    break;\n                }\n          \
    \      c++;\n            }\n            break;\n        }\n        b++;\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n \
    \   assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp0ovrcfhs: /tmp/tmp0ovrcfhs.cpp:35: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099760
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5;\n    long long int d = 2;\n    long long int e = 1;\n    long long int\
    \ f = 2;\n    long long int g = 1;\n    long long int h = 1;\n    long long int\
    \ i = 2;\n    long long int j = 1;\n    long long int k = 1;\n    long long int\
    \ l = 1;\n    long long int m = 1;\n    long long int n = 1;\n    long long int\
    \ o = 1;\n    long long int p = 1;\n    long long int q = 1;\n    long long int\
    \ r = 1;\n    long long int s = 1;\n    long long int t = 1;\n    long long int\
    \ u = 1;\n    long long int v = 1;\n    long long int w = 1;\n    long long int\
    \ x = 1;\n    long long int y = 1;\n    long long int z = 1;\n    long long int\
    \ aa = 1;\n    long long int bb = 1;\n    long long int cc = 1;\n    long long\
    \ int dd = 1;\n    long long int ee = 1;\n    long long int ff = 1;\n    long\
    \ long int gg = 1;\n    long long int hh = 1;\n    long long int ii = 0;\n   \
    \ long long int jj = 0;\n    long long int kk = 0;\n    long long int ll = 0;\n\
    \    long long int mm = 1;\n    long long int nn = 0;\n    long long int oo =\
    \ 0;\n    long long int pp = 0;\n    long long int qq = 0;\n    long long int\
    \ rr = 0;\n    long long int ss = 0;\n    long long int tt = 0;\n    long long\
    \ int uu = 0;\n    long long int vv = 0;\n    long long int ww = 0;\n    long\
    \ long int xx = 0;\n    long long int yy = 0;\n    long long int zz = 0;\n   \
    \ long long int aaa = 0;\n    long long int bbb = 0;\n    long long int ccc =\
    \ 0;\n    long long int ddd = 0;\n    long long int eee = 0;\n    long long int\
    \ fff = 0;\n    long long int ggg = 0;\n    long long int hhh = 0;\n    long long\
    \ int iii = 0;\n    long long int jjj = 0;\n    long long int kkk = 0;\n    long\
    \ long int lll = 0;\n    long long int mmm = 0;\n    long long int nnn = 0;\n\
    \    long long int ooo = 0;\n    long long int ppp = 0;\n    long long int qqq\
    \ = 0;\n    long long int rrr = 0;\n    long long int sss = 0;\n    long long\
    \ int ttt = 0;\n    long long \n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpxxmlrtzz.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpxxmlrtzz.cpp:80:1: error: expected unqualified-id before \u2018}\u2019\
    \ token\n   80 | }\n      | ^\n/tmp/tmpxxmlrtzz.cpp:80:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660099760
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int res = 0;\n    while(a != 0) {\n        if(a%b\
    \ == 0 && a%c == 0 && a%d == 0) {\n            res = 1;\n            break;\n\
    \        }\n        b += 2;\n        c += 2;\n        d += 2;\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660099765
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int i = 2;\n    long long int j = 2;\n    long\
    \ long int k = 2;\n    while (i * i <= a) {\n        if (a % i == 0) {\n     \
    \       while (a % j == 0) {\n                if (a % k == 0) {\n            \
    \        return false;\n                }\n                k++;\n            }\n\
    \            while (a % j != 0) {\n                if (a % k == 0) {\n       \
    \             return false;\n                }\n                k++;\n       \
    \     }\n        }\n        i++;\n        j++;\n        k++;\n    }\n    return\
    \ true;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmphrz95oun: /tmp/tmphrz95oun.cpp:36: int main(): Assertion `candidate((5))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660099761
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int temp;\n    long long int count = 0;\n    while(c\
    \ <= a) {\n        temp = a;\n        while(temp % d == 0) {\n            temp\
    \ /= d;\n            count++;\n        }\n        if(count == 3) {\n         \
    \   return true;\n        }\n        d += 2;\n    }\n    return false;\n}\nint\
    \ main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660099765
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int temp;\n    while (b <= a) {\n        temp =\
    \ b;\n        while (c <= temp) {\n            if (temp % c == 0)\n          \
    \      return false;\n            c++;\n        }\n        temp += d;\n      \
    \  while (d <= temp) {\n            if (temp % d == 0)\n                return\
    \ false;\n            d++;\n        }\n        b++;\n        c++;\n        d++;\n\
    \    }\n    return true;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpfdslpy4j: /tmp/tmpfdslpy4j.cpp:33: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099761
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int result = 0;\n    while(a != 0) {\n        if(b\
    \ == c && c == d) {\n            result = 1;\n            break;\n        }\n\
    \        if(b == c || c == d) {\n            result = 1;\n            break;\n\
    \        }\n        if(b == d) {\n            result = 1;\n            break;\n\
    \        }\n        if(b == c && d != 0) {\n            result = 1;\n        \
    \    break;\n        }\n        if(b == c && d == 0) {\n            result = 1;\n\
    \            break;\n        }\n        if(b == d) {\n            result = 1;\n\
    \            break;\n        }\n        if(b == c && d != 0) {\n            result\
    \ = 1;\n            break;\n        }\n        if(b == c && d == 0) {\n      \
    \      result = 1;\n            break;\n        }\n        if(b == d) {\n    \
    \        result = 1;\n            break;\n        }\n        if(b == c && d !=\
    \ 0) {\n            result = 1;\n            break;\n        }\n        if(b ==\
    \ c && d == 0) {\n            result = 1;\n            break;\n        }\n   \
    \     if(b == d) {\n            result = 1;\n            break;\n        }\n \
    \       if(b == c && d != 0) {\n            result = 1;\n            break;\n\
    \        }\n        if(b == c && d == 0) {\n            result = 1;\n        \
    \    break;\n        }\n        if(b == d) {\n            result = 1;\n      \
    \      break;\n        }\n        if(b == c && d != 0) {\n            result =\
    \ 1;\n            break;\n        }\n        if(b == c && d == 0) {\n        \
    \    result = 1;\n            break;\n        }\n        if(b == d) {\n      \
    \      result = 1;\n            break;\n        }\n        if(b == c && d != 0)\
    \ {\n            result = 1;\n            break;\n        }\n        if(b == c\
    \ && d == 0) {\n            result = 1;\n            break;\n        }\n     \
    \   if(b == d) {\n            result = 1;\n            break;\n        }\n   \
    \     if(b == c && d != 0) {\n            result = 1;\n            break;\n  \
    \      }\n        if(b == c && d == 0) {\n            result = 1;\n          \
    \  break;\n        }\n        if(b == d) {\n            result = 1;\n        \
    \    break;\n        }\n        if(b == c && d != 0) {\n            result = 1;\n\
    \            break;\n        }\n        if(b == c && d == 0) {\n            result\
    \ = 1;\n            break;\n        }\n        if(b == d) {\n            result\
    \ = 1;\n            break;\n        }\n        if(b == c && d != 0) {\n      \
    \      result = 1;\n            break;\n        }\n        if(b == c && d == 0)\
    \ {\n            result = 1;\n            break;\n        }\n        if(b == d)\
    \ {\n            result = 1;\n            break;\n        }\n        if(b == c\
    \ && d != 0) {\n            result = 1;\n            break;\n        }\n     \
    \   if(b == c && d == 0) {\n            result = 1;\n            break;\n    \
    \    }\n        if(b == d) {\n            result = 1;\n            break;\n  \
    \      }\n        if(b == c && d != 0) {\n            result = 1;\n          \
    \  break;\n        }\n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpovzbru6y.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpovzbru6y.cpp:149:12: error: a function-definition is not allowed here\
    \ before \u2018{\u2019 token\n  149 | int main() {\n      |            ^\n/tmp/tmpovzbru6y.cpp:161:1:\
    \ error: expected \u2018}\u2019 at end of input\n  161 | }\n      | ^\n/tmp/tmpovzbru6y.cpp:8:32:\
    \ note: to match this \u2018{\u2019\n    8 | bool is_multiply_prime(long a) {\n\
    \      |                                ^\n/tmp/tmpovzbru6y.cpp:161:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n  161 |\
    \ }\n      | ^\n"
  stdout: ''
  timestamp: 1660099760
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int temp;\n    bool flag = true;\n    long long\
    \ int count = 0;\n    while (b <= a) {\n        temp = a / b;\n        if (temp\
    \ == 0)\n            break;\n        if (temp % 2 == 0)\n            count++;\n\
    \        if (temp % 3 == 0)\n            count++;\n        if (temp % 5 == 0)\n\
    \            count++;\n        if (temp % 7 == 0)\n            count++;\n    \
    \    if (temp % 11 == 0)\n            count++;\n        if (temp % 13 == 0)\n\
    \            count++;\n        if (temp % 17 == 0)\n            count++;\n   \
    \     if (temp % 19 == 0)\n            count++;\n        if (temp % 23 == 0)\n\
    \            count++;\n        if (temp % 29 == 0)\n            count++;\n   \
    \     if (temp % 31 == 0)\n            count++;\n        if (temp % 37 == 0)\n\
    \            count++;\n        if (temp % 41 == 0)\n            count++;\n   \
    \     if (temp % 43 == 0)\n            count++;\n        if (temp % 47 == 0)\n\
    \            count++;\n        if (temp % 53 == 0)\n            count++;\n   \
    \     if (temp % 59 == 0)\n            count++;\n        if (temp % 61 == 0)\n\
    \            count++;\n        if (temp % 67 == 0)\n            count++;\n   \
    \     if (temp % 71 == 0)\n            count++;\n        if (temp % 73 == 0)\n\
    \            count++;\n        if (temp % 79 == 0)\n            count++;\n   \
    \     if (temp % 83 == 0)\n            count++;\n        if (temp % 89 == 0)\n\
    \            count++;\n        if (temp % 97 == 0)\n            count++;\n   \
    \     if (temp % 101 == 0)\n            count++;\n        if (temp % 103 == 0)\n\
    \            count++;\n        if (temp % 107 == 0)\n            count++;\n  \
    \      if (temp % 111 == 0)\n            count++;\n        if (temp % 113 == 0)\n\
    \            count++;\n        if (temp % 117 == 0)\n            count++;\n  \
    \      if (temp % 121 == 0)\n            count++;\n        if (temp % 123 == 0)\n\
    \            count++;\n        if (temp % 127 == 0)\n            count++;\n  \
    \      if (temp % 131 == 0)\n            count++;\n        if (temp % 137 == 0)\n\
    \            count++;\n        if (temp % 141 == 0)\n            count++;\n  \
    \      if (temp % 147 == 0)\n            count++;\n        if (temp % 151 == 0)\n\
    \            count++;\n        if (temp % 157 == 0)\n            count++;\n  \
    \      if (temp % 163 == 0)\n            count++;\n        if (temp % 167 == 0)\n\
    \            count++;\n        if (temp % 17\n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjln7xo44.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpjln7xo44.cpp:101:22: error: expected \u2018)\u2019 before \u2018}\u2019\
    \ token\n  101 |         if (temp % 17\n      |            ~         ^\n     \
    \ |                      )\n  102 | }\n      | ~                     \n/tmp/tmpjln7xo44.cpp:102:1:\
    \ error: expected primary-expression before \u2018}\u2019 token\n  102 | }\n \
    \     | ^\n/tmp/tmpjln7xo44.cpp:103:12: error: a function-definition is not allowed\
    \ here before \u2018{\u2019 token\n  103 | int main() {\n      |            ^\n\
    /tmp/tmpjln7xo44.cpp:115:1: error: expected \u2018}\u2019 at end of input\n  115\
    \ | }\n      | ^\n/tmp/tmpjln7xo44.cpp:8:32: note: to match this \u2018{\u2019\
    \n    8 | bool is_multiply_prime(long a) {\n      |                          \
    \      ^\n/tmp/tmpjln7xo44.cpp:115:1: warning: no return statement in function\
    \ returning non-void [-Wreturn-type]\n  115 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660099760
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = a;\n\
    \    long long int c = 1;\n    long long int d = 1;\n    long long int e = 1;\n\
    \    long long int f = 0;\n    long long int g = 1;\n    long long int h = 1;\n\
    \    long long int i = 0;\n    long long int j = 1;\n    long long int k = 1;\n\
    \    long long int l = 1;\n    long long int m = 1;\n    long long int n = 1;\n\
    \    long long int o = 1;\n    long long int p = 1;\n    long long int q = 1;\n\
    \    long long int r = 1;\n    long long int s = 1;\n    long long int t = 1;\n\
    \    long long int u = 1;\n    long long int v = 1;\n    long long int w = 1;\n\
    \    long long int x = 1;\n    long long int y = 1;\n    long long int z = 1;\n\
    \    long long int A = 1;\n    long long int B = 1;\n    long long int C = 1;\n\
    \    long long int D = 1;\n    long long int E = 1;\n    long long int F = 0;\n\
    \    long long int G = 1;\n    long long int H = 1;\n    long long int I = 1;\n\
    \    long long int J = 1;\n    long long int K = 1;\n    long long int L = 1;\n\
    \    long long int M = 1;\n    long long int N = 1;\n    long long int O = 1;\n\
    \    long long int P = 1;\n    long long int Q = 1;\n    long long int R = 1;\n\
    \    long long int S = 1;\n    long long int T = 1;\n    long long int U = 1;\n\
    \    long long int V = 1;\n    long long int W = 1;\n    long long int X = 1;\n\
    \    long long int Y = 1;\n    long long int Z = 1;\n    long long int A = 1;\n\
    \    long long int B = 1;\n    long long int C = 1;\n    long long int D = 1;\n\
    \    long long int E = 1;\n    long long int F = 0;\n    long long int G = 1;\n\
    \    long long int H = 1;\n    long long int I = 1;\n    long long int J = 1;\n\
    \    long long int K = 1;\n    long long int L = 1;\n    long long int M = 1;\n\
    \    long long int N = 1;\n    long long int O = 1;\n    long long int P = 1;\n\
    \    long long int Q = 1;\n    long long int R = 1;\n    long long int S = 1;\n\
    \    long long int T = 1;\n    long long int U = 1;\n    long long int V = 1;\n\
    \    long \n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppijhmc0d.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmppijhmc0d.cpp:60:19: error: redeclaration of \u2018long long int A\u2019\
    \n   60 |     long long int A = 1;\n      |                   ^\n/tmp/tmppijhmc0d.cpp:34:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   34 |     long\
    \ long int A = 1;\n      |                   ^\n/tmp/tmppijhmc0d.cpp:61:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   61 |     long long int B =\
    \ 1;\n      |                   ^\n/tmp/tmppijhmc0d.cpp:35:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   35 |     long long int B = 1;\n\
    \      |                   ^\n/tmp/tmppijhmc0d.cpp:62:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   62 |     long long int C = 1;\n      |  \
    \                 ^\n/tmp/tmppijhmc0d.cpp:36:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   36 |     long long int C = 1;\n      |        \
    \           ^\n/tmp/tmppijhmc0d.cpp:63:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   63 |     long long int D = 1;\n      |                \
    \   ^\n/tmp/tmppijhmc0d.cpp:37:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   37 |     long long int D = 1;\n      |                   ^\n\
    /tmp/tmppijhmc0d.cpp:64:19: error: redeclaration of \u2018long long int E\u2019\
    \n   64 |     long long int E = 1;\n      |                   ^\n/tmp/tmppijhmc0d.cpp:38:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   38 |     long\
    \ long int E = 1;\n      |                   ^\n/tmp/tmppijhmc0d.cpp:65:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   65 |     long long int F =\
    \ 0;\n      |                   ^\n/tmp/tmppijhmc0d.cpp:39:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   39 |     long long int F = 0;\n\
    \      |                   ^\n/tmp/tmppijhmc0d.cpp:66:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   66 |     long long int G = 1;\n      |  \
    \                 ^\n/tmp/tmppijhmc0d.cpp:40:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   40 |     long long int G = 1;\n      |        \
    \           ^\n/tmp/tmppijhmc0d.cpp:67:19: error: "
  stdout: ''
  timestamp: 1660099760
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int e = 0;\n    long long int f = 1;\n    long\
    \ long int g = 0;\n    long long int h = 0;\n    long long int i = 2;\n    long\
    \ long int j = 0;\n    long long int k = 0;\n    long long int l = 0;\n    long\
    \ long int m = 1;\n    long long int n = 1;\n    long long int o = 1;\n    long\
    \ long int p = 1;\n    long long int q = 1;\n    long long int r = 1;\n    long\
    \ long int s = 1;\n    long long int t = 1;\n    long long int u = 1;\n    long\
    \ long int v = 1;\n    long long int w = 1;\n    long long int x = 1;\n    long\
    \ long int y = 1;\n    long long int z = 1;\n    long long int A = 1;\n    long\
    \ long int B = 1;\n    long long int C = 1;\n    long long int D = 1;\n    long\
    \ long int E = 1;\n    long long int F = 1;\n    long long int G = 1;\n    long\
    \ long int H = 1;\n    long long int I = 1;\n    long long int J = 1;\n    long\
    \ long int K = 1;\n    long long int L = 1;\n    long long int M = 1;\n    long\
    \ long int N = 1;\n    long long int O = 1;\n    long long int P = 1;\n    long\
    \ long int Q = 1;\n    long long int R = 1;\n    long long int S = 1;\n    long\
    \ long int T = 1;\n    long long int U = 1;\n    long long int V = 1;\n    long\
    \ long int W = 1;\n    long long int X = 1;\n    long long int Y = 1;\n    long\
    \ long int Z = 1;\n    long long int A = 1;\n    long long int B = 1;\n    long\
    \ long int C = 1;\n    long long int D = 1;\n    long long int E = 1;\n    long\
    \ long int F = 1;\n    long long int G = 1;\n    long long int H = 1;\n    long\
    \ long int I = 1;\n    long long int J = 1;\n    long long int K = 1;\n    long\
    \ long int L = 1;\n    long long int M = 1;\n    long long int N = 1;\n    long\
    \ long int O = 1;\n    long long int P = 1;\n    long long int Q = 1;\n    long\
    \ long int R = 1;\n    long long int S = 1;\n    long long int T = 1;\n    long\
    \ long int U = 1;\n    long long int V = 1;\n    long long int W = 1;\n    long\
    \ long \n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9t8m9zo0.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmp9t8m9zo0.cpp:58:19: error: redeclaration of \u2018long long int A\u2019\
    \n   58 |     long long int A = 1;\n      |                   ^\n/tmp/tmp9t8m9zo0.cpp:32:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   32 |     long\
    \ long int A = 1;\n      |                   ^\n/tmp/tmp9t8m9zo0.cpp:59:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   59 |     long long int B =\
    \ 1;\n      |                   ^\n/tmp/tmp9t8m9zo0.cpp:33:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   33 |     long long int B = 1;\n\
    \      |                   ^\n/tmp/tmp9t8m9zo0.cpp:60:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   60 |     long long int C = 1;\n      |  \
    \                 ^\n/tmp/tmp9t8m9zo0.cpp:34:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   34 |     long long int C = 1;\n      |        \
    \           ^\n/tmp/tmp9t8m9zo0.cpp:61:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   61 |     long long int D = 1;\n      |                \
    \   ^\n/tmp/tmp9t8m9zo0.cpp:35:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   35 |     long long int D = 1;\n      |                   ^\n\
    /tmp/tmp9t8m9zo0.cpp:62:19: error: redeclaration of \u2018long long int E\u2019\
    \n   62 |     long long int E = 1;\n      |                   ^\n/tmp/tmp9t8m9zo0.cpp:36:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   36 |     long\
    \ long int E = 1;\n      |                   ^\n/tmp/tmp9t8m9zo0.cpp:63:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   63 |     long long int F =\
    \ 1;\n      |                   ^\n/tmp/tmp9t8m9zo0.cpp:37:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   37 |     long long int F = 1;\n\
    \      |                   ^\n/tmp/tmp9t8m9zo0.cpp:64:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   64 |     long long int G = 1;\n      |  \
    \                 ^\n/tmp/tmp9t8m9zo0.cpp:38:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   38 |     long long int G = 1;\n      |        \
    \           ^\n/tmp/tmp9t8m9zo0.cpp:65:19: error: "
  stdout: ''
  timestamp: 1660099760
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int res = 0;\n    while (b <= a) {\n        if\
    \ (a % b == 0) {\n            if (a % c == 0) {\n                if (a % d ==\
    \ 0) {\n                    res = 1;\n                    break;\n           \
    \     }\n                else {\n                    res = 0;\n              \
    \      break;\n                }\n            }\n            else {\n        \
    \        res = 0;\n                break;\n            }\n        }\n        else\
    \ {\n            res = 0;\n            break;\n        }\n        b++;\n     \
    \   c++;\n        d++;\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmpkvhug096: /tmp/tmpkvhug096.cpp:41: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099760
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = a;\n\
    \    long long int c = 0;\n    long long int d = 0;\n    long long int e = 0;\n\
    \    long long int f = 0;\n    long long int g = 0;\n    long long int h = 0;\n\
    \    long long int i = 0;\n    long long int j = 0;\n    long long int k = 0;\n\
    \    long long int l = 0;\n    long long int m = 0;\n    long long int n = 0;\n\
    \    long long int o = 0;\n    long long int p = 0;\n    long long int q = 0;\n\
    \    long long int r = 0;\n    long long int s = 0;\n    long long int t = 0;\n\
    \    long long int u = 0;\n    long long int v = 0;\n    long long int w = 0;\n\
    \    long long int x = 0;\n    long long int y = 0;\n    long long int z = 0;\n\
    \    long long int aa = 0;\n    long long int bb = 0;\n    long long int cc =\
    \ 0;\n    long long int dd = 0;\n    long long int ee = 0;\n    long long int\
    \ ff = 0;\n    long long int gg = 0;\n    long long int hh = 0;\n    long long\
    \ int ii = 0;\n    long long int jj = 0;\n    long long int kk = 0;\n    long\
    \ long int ll = 0;\n    long long int mm = 0;\n    long long int nn = 0;\n   \
    \ long long int oo = 0;\n    long long int pp = 0;\n    long long int qq = 0;\n\
    \    long long int rr = 0;\n    long long int ss = 0;\n    long long int tt =\
    \ 0;\n    long long int uu = 0;\n    long long int vv = 0;\n    long long int\
    \ ww = 0;\n    long long int xx = 0;\n    long long int yy = 0;\n    long long\
    \ int zz = 0;\n    long long int aaa = 0;\n    long long int bbb = 0;\n    long\
    \ long int ccc = 0;\n    long long int ddd = 0;\n    long long int eee = 0;\n\
    \    long long int fff = 0;\n    long long int ggg = 0;\n    long long int hhh\
    \ = 0;\n    long long int iii = 0;\n    long long int jjj = 0;\n    long long\
    \ int kkk = 0;\n    long long int lll = 0;\n    long long int mmm = 0;\n    long\
    \ long int nnn = 0;\n    long long int ooo = 0;\n    long long int ppp = 0;\n\
    \    long long int qqq = 0;\n    long long int rrr = 0;\n    long long int sss\
    \ = 0;\n    long long int ttt = 0;\n    long \n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprlt2y__4.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmprlt2y__4.cpp:81:1: error: expected unqualified-id before \u2018}\u2019\
    \ token\n   81 | }\n      | ^\n/tmp/tmprlt2y__4.cpp:81:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660099760
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = a;\n\
    \    long long int c = 1;\n    long long int d = 1;\n    long long int e = 1;\n\
    \    long long int f = 0;\n    long long int g = 0;\n    long long int h = 0;\n\
    \    long long int i = 0;\n    long long int j = 0;\n    long long int k = 0;\n\
    \    long long int l = 0;\n    long long int m = 0;\n    long long int n = 0;\n\
    \    long long int o = 0;\n    long long int p = 0;\n    long long int q = 0;\n\
    \    long long int r = 0;\n    long long int s = 0;\n    long long int t = 0;\n\
    \    long long int u = 0;\n    long long int v = 0;\n    long long int w = 0;\n\
    \    long long int x = 0;\n    long long int y = 0;\n    long long int z = 0;\n\
    \    long long int A = 0;\n    long long int B = 0;\n    long long int C = 0;\n\
    \    long long int D = 0;\n    long long int E = 0;\n    long long int F = 0;\n\
    \    long long int G = 0;\n    long long int H = 0;\n    long long int I = 0;\n\
    \    long long int J = 0;\n    long long int K = 0;\n    long long int L = 0;\n\
    \    long long int M = 0;\n    long long int N = 0;\n    long long int O = 0;\n\
    \    long long int P = 0;\n    long long int Q = 0;\n    long long int R = 0;\n\
    \    long long int S = 0;\n    long long int T = 0;\n    long long int U = 0;\n\
    \    long long int V = 0;\n    long long int W = 0;\n    long long int X = 0;\n\
    \    long long int Y = 0;\n    long long int Z = 0;\n    long long int A = 0;\n\
    \    long long int B = 0;\n    long long int C = 0;\n    long long int D = 0;\n\
    \    long long int E = 0;\n    long long int F = 0;\n    long long int G = 0;\n\
    \    long long int H = 0;\n    long long int I = 0;\n    long long int J = 0;\n\
    \    long long int K = 0;\n    long long int L = 0;\n    long long int M = 0;\n\
    \    long long int N = 0;\n    long long int O = 0;\n    long long int P = 0;\n\
    \    long long int Q = 0;\n    long long int R = 0;\n    long long int S = 0;\n\
    \    long long int T = 0;\n    long long int U = 0;\n    long long int V = 0;\n\
    \    long long int \n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpa48wm216.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpa48wm216.cpp:60:19: error: redeclaration of \u2018long long int A\u2019\
    \n   60 |     long long int A = 0;\n      |                   ^\n/tmp/tmpa48wm216.cpp:34:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   34 |     long\
    \ long int A = 0;\n      |                   ^\n/tmp/tmpa48wm216.cpp:61:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   61 |     long long int B =\
    \ 0;\n      |                   ^\n/tmp/tmpa48wm216.cpp:35:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   35 |     long long int B = 0;\n\
    \      |                   ^\n/tmp/tmpa48wm216.cpp:62:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   62 |     long long int C = 0;\n      |  \
    \                 ^\n/tmp/tmpa48wm216.cpp:36:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   36 |     long long int C = 0;\n      |        \
    \           ^\n/tmp/tmpa48wm216.cpp:63:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   63 |     long long int D = 0;\n      |                \
    \   ^\n/tmp/tmpa48wm216.cpp:37:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   37 |     long long int D = 0;\n      |                   ^\n\
    /tmp/tmpa48wm216.cpp:64:19: error: redeclaration of \u2018long long int E\u2019\
    \n   64 |     long long int E = 0;\n      |                   ^\n/tmp/tmpa48wm216.cpp:38:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   38 |     long\
    \ long int E = 0;\n      |                   ^\n/tmp/tmpa48wm216.cpp:65:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   65 |     long long int F =\
    \ 0;\n      |                   ^\n/tmp/tmpa48wm216.cpp:39:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   39 |     long long int F = 0;\n\
    \      |                   ^\n/tmp/tmpa48wm216.cpp:66:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   66 |     long long int G = 0;\n      |  \
    \                 ^\n/tmp/tmpa48wm216.cpp:40:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   40 |     long long int G = 0;\n      |        \
    \           ^\n/tmp/tmpa48wm216.cpp:67:19: error: "
  stdout: ''
  timestamp: 1660099760
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = a;\n\
    \    long long int c = 1;\n    long long int d = 1;\n    long long int e = 1;\n\
    \    long long int f = 0;\n    long long int g = 1;\n    long long int h = 1;\n\
    \    long long int i = 1;\n    long long int j = 1;\n    long long int k = 1;\n\
    \    long long int l = 1;\n    long long int m = 1;\n    long long int n = 1;\n\
    \    long long int o = 1;\n    long long int p = 1;\n    long long int q = 1;\n\
    \    long long int r = 1;\n    long long int s = 1;\n    long long int t = 1;\n\
    \    long long int u = 1;\n    long long int v = 1;\n    long long int w = 1;\n\
    \    long long int x = 1;\n    long long int y = 1;\n    long long int z = 1;\n\
    \    long long int A = 1;\n    long long int B = 1;\n    long long int C = 1;\n\
    \    long long int D = 1;\n    long long int E = 1;\n    long long int F = 0;\n\
    \    long long int G = 1;\n    long long int H = 1;\n    long long int I = 1;\n\
    \    long long int J = 1;\n    long long int K = 1;\n    long long int L = 1;\n\
    \    long long int M = 1;\n    long long int N = 1;\n    long long int O = 1;\n\
    \    long long int P = 1;\n    long long int Q = 1;\n    long long int R = 1;\n\
    \    long long int S = 1;\n    long long int T = 1;\n    long long int U = 1;\n\
    \    long long int V = 1;\n    long long int W = 1;\n    long long int X = 1;\n\
    \    long long int Y = 1;\n    long long int Z = 1;\n    long long int A = 1;\n\
    \    long long int B = 1;\n    long long int C = 1;\n    long long int D = 1;\n\
    \    long long int E = 1;\n    long long int F = 0;\n    long long int G = 1;\n\
    \    long long int H = 1;\n    long long int I = 1;\n    long long int J = 1;\n\
    \    long long int K = 1;\n    long long int L = 1;\n    long long int M = 1;\n\
    \    long long int N = 1;\n    long long int O = 1;\n    long long int P = 1;\n\
    \    long long int Q = 1;\n    long long int R = 1;\n    long long int S = 1;\n\
    \    long long int T = 1;\n    long long int U = 1;\n    long long int V = 1;\n\
    \    \n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppz1igvwn.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmppz1igvwn.cpp:60:19: error: redeclaration of \u2018long long int A\u2019\
    \n   60 |     long long int A = 1;\n      |                   ^\n/tmp/tmppz1igvwn.cpp:34:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   34 |     long\
    \ long int A = 1;\n      |                   ^\n/tmp/tmppz1igvwn.cpp:61:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   61 |     long long int B =\
    \ 1;\n      |                   ^\n/tmp/tmppz1igvwn.cpp:35:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   35 |     long long int B = 1;\n\
    \      |                   ^\n/tmp/tmppz1igvwn.cpp:62:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   62 |     long long int C = 1;\n      |  \
    \                 ^\n/tmp/tmppz1igvwn.cpp:36:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   36 |     long long int C = 1;\n      |        \
    \           ^\n/tmp/tmppz1igvwn.cpp:63:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   63 |     long long int D = 1;\n      |                \
    \   ^\n/tmp/tmppz1igvwn.cpp:37:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   37 |     long long int D = 1;\n      |                   ^\n\
    /tmp/tmppz1igvwn.cpp:64:19: error: redeclaration of \u2018long long int E\u2019\
    \n   64 |     long long int E = 1;\n      |                   ^\n/tmp/tmppz1igvwn.cpp:38:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   38 |     long\
    \ long int E = 1;\n      |                   ^\n/tmp/tmppz1igvwn.cpp:65:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   65 |     long long int F =\
    \ 0;\n      |                   ^\n/tmp/tmppz1igvwn.cpp:39:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   39 |     long long int F = 0;\n\
    \      |                   ^\n/tmp/tmppz1igvwn.cpp:66:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   66 |     long long int G = 1;\n      |  \
    \                 ^\n/tmp/tmppz1igvwn.cpp:40:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   40 |     long long int G = 1;\n      |        \
    \           ^\n/tmp/tmppz1igvwn.cpp:67:19: error: "
  stdout: ''
  timestamp: 1660099760
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    int flag = 0;\n    for(int\
    \ i=2;i<a;i++){\n        if(a%i==0){\n            flag = 1;\n            break;\n\
    \        }\n    }\n    if(flag==1){\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpu6e2hjca: /tmp/tmpu6e2hjca.cpp:26: int main(): Assertion `candidate((10))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660099761
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = a;\n\
    \    long long int c = 1;\n    long long int d = 1;\n    long long int e = 1;\n\
    \    long long int f = 0;\n    long long int g = 0;\n    long long int h = 0;\n\
    \    long long int i = 2;\n    long long int j = 2;\n    long long int k = 2;\n\
    \    long long int l = 2;\n    long long int m = 2;\n    long long int n = 2;\n\
    \    long long int o = 2;\n    long long int p = 2;\n    long long int q = 2;\n\
    \    long long int r = 2;\n    long long int s = 2;\n    long long int t = 2;\n\
    \    long long int u = 2;\n    long long int v = 2;\n    long long int w = 2;\n\
    \    long long int x = 2;\n    long long int y = 2;\n    long long int z = 2;\n\
    \    long long int aa = 2;\n    long long int ab = 2;\n    long long int ac =\
    \ 2;\n    long long int ad = 2;\n    long long int ae = 2;\n    long long int\
    \ af = 2;\n    long long int ag = 2;\n    long long int ah = 2;\n    long long\
    \ int ai = 2;\n    long long int aj = 2;\n    long long int ak = 2;\n    long\
    \ long int al = 2;\n    long long int am = 2;\n    long long int an = 2;\n   \
    \ long long int ao = 2;\n    long long int ap = 2;\n    long long int aq = 2;\n\
    \    long long int ar = 2;\n    long long int as = 2;\n    long long int at =\
    \ 2;\n    long long int au = 2;\n    long long int av = 2;\n    long long int\
    \ aw = 2;\n    long long int ax = 2;\n    long long int ay = 2;\n    long long\
    \ int az = 2;\n    long long int a = 2;\n    long long int b = 3;\n    long long\
    \ int c = 3;\n    long long int d = 5;\n    long long int e = 7;\n    long long\
    \ int f = 9;\n    long long int g = 11;\n    long long int h = 13;\n    long long\
    \ int i = 17;\n    long long int j = 21;\n    long long int k = 23;\n    long\
    \ long int l = 29;\n    long long int m = 53;\n    long long int n = 59;\n   \
    \ long long int o = 67;\n    long long int p = 71;\n    long long int q = 79;\n\
    \    long long int r = 83;\n    long long int s = 89;\n    long long int t = 97;\n\
    \    long long int \n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpl46nzwc3.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpl46nzwc3.cpp:60:19: error: declaration of \u2018long long int a\u2019\
    \ shadows a parameter\n   60 |     long long int a = 2;\n      |             \
    \      ^\n/tmp/tmpl46nzwc3.cpp:61:19: error: redeclaration of \u2018long long\
    \ int b\u2019\n   61 |     long long int b = 3;\n      |                   ^\n\
    /tmp/tmpl46nzwc3.cpp:9:19: note: \u2018long long int b\u2019 previously declared\
    \ here\n    9 |     long long int b = a;\n      |                   ^\n/tmp/tmpl46nzwc3.cpp:62:19:\
    \ error: redeclaration of \u2018long long int c\u2019\n   62 |     long long int\
    \ c = 3;\n      |                   ^\n/tmp/tmpl46nzwc3.cpp:10:19: note: \u2018\
    long long int c\u2019 previously declared here\n   10 |     long long int c =\
    \ 1;\n      |                   ^\n/tmp/tmpl46nzwc3.cpp:63:19: error: redeclaration\
    \ of \u2018long long int d\u2019\n   63 |     long long int d = 5;\n      |  \
    \                 ^\n/tmp/tmpl46nzwc3.cpp:11:19: note: \u2018long long int d\u2019\
    \ previously declared here\n   11 |     long long int d = 1;\n      |        \
    \           ^\n/tmp/tmpl46nzwc3.cpp:64:19: error: redeclaration of \u2018long\
    \ long int e\u2019\n   64 |     long long int e = 7;\n      |                \
    \   ^\n/tmp/tmpl46nzwc3.cpp:12:19: note: \u2018long long int e\u2019 previously\
    \ declared here\n   12 |     long long int e = 1;\n      |                   ^\n\
    /tmp/tmpl46nzwc3.cpp:65:19: error: redeclaration of \u2018long long int f\u2019\
    \n   65 |     long long int f = 9;\n      |                   ^\n/tmp/tmpl46nzwc3.cpp:13:19:\
    \ note: \u2018long long int f\u2019 previously declared here\n   13 |     long\
    \ long int f = 0;\n      |                   ^\n/tmp/tmpl46nzwc3.cpp:66:19: error:\
    \ redeclaration of \u2018long long int g\u2019\n   66 |     long long int g =\
    \ 11;\n      |                   ^\n/tmp/tmpl46nzwc3.cpp:14:19: note: \u2018long\
    \ long int g\u2019 previously declared here\n   14 |     long long int g = 0;\n\
    \      |                   ^\n/tmp/tmpl46nzwc3.cpp:67:19: error: redeclaration\
    \ of \u2018long long int h\u2019\n   67 |     long long int h = 13;\n      | \
    \                  ^\n/tmp/tmpl46nzwc3.cpp:15"
  stdout: ''
  timestamp: 1660099760
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int n = 3,\
    \ m = 2, i = 2;\n    bool flag = true;\n    while (i * i <= a) {\n        if (a\
    \ % i == 0) {\n            flag = false;\n            break;\n        }\n    \
    \    i++;\n    }\n    if (flag) {\n        while (m * m <= a) {\n            if\
    \ (a % m == 0) {\n                flag = false;\n                break;\n    \
    \        }\n            m++;\n        }\n    }\n    return flag;\n}\nint main()\
    \ {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n\
    \    assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp9ug38yuh: /tmp/tmp9ug38yuh.cpp:31: int main(): Assertion `candidate((5))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660099760
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int result = 1;\n    long long int i = 2;\n   \
    \ while(i <= a) {\n        if(i*i <= a) {\n            if(i*i == a) {\n      \
    \          if(i*i == b) {\n                    if(i*i == c) {\n              \
    \          if(i*i == d) {\n                            result = 1;\n         \
    \               }\n                        else {\n                          \
    \  result = 0;\n                        }\n                    }\n           \
    \         else {\n                        result = 0;\n                    }\n\
    \                }\n                else {\n                    result = 0;\n\
    \                }\n            }\n            else {\n                result\
    \ = 0;\n            }\n        }\n        else {\n            result = 0;\n  \
    \      }\n        i++;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmpo7awt98o: /tmp/tmpo7awt98o.cpp:46: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099760
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int e = 3, f = 5, g = 7;\n    long long int h =\
    \ 3, i = 5, j = 7;\n    long long int k = 3, l = 5, m = 7;\n    long long int\
    \ n = 5, o = 5;\n    long long int p = 5, q = 7;\n    long long int r = 5, s =\
    \ 7;\n    long long int t = 5, u = 7;\n    long long int v = 5, w = 7;\n    long\
    \ long int x = 5, y = 7;\n    long long int z = 5;\n    long long int a = a, b\
    \ = b, c = c, d = d, e = e, f = f, g = g, h = h, i = i, j = j, k = k, l = l, m\
    \ = m, n = n, o = o, p = p, q = q, r = r, s = s, t = t, u = u, v = v, w = w, x\
    \ = x, y = y, z = z;\n    long long int a = a, b = b, c = c, d = d, e = e, f =\
    \ f, g = g, h = h, i = i, j = j, k = k, l = l, m = m, n = n, o = o, p = p, q =\
    \ q, r = r, s = s, t = t, u = u, v = v, w = w, x = x, y = y, z = z;\n    long\
    \ long int a = a, b = b, c = c, d = d, e = e, f = f, g = g, h = h, i = i, j =\
    \ j, k = k, l = l, m = m, n = n, o = o, p = p, q = q, r = r, s = s, t = t, u =\
    \ u, v = v, w = w, x = x, y = y, z = z;\n    long long int a = a, b = b, c = c,\
    \ d = d, e = e, f = f, g = g, h = h, i = i, j = j, k = k, l = l, m = m, n = n,\
    \ o = o, p = p, q = q, r = r, s = s, t = t, u = u, v = v, w = w, x = x, y = y,\
    \ z = z;\n    long long int a = a, b = b, c = c, d = d, e = e, f = f, g = g, h\
    \ = h, i = i, j = j, k = k, l = l, m = m, n = n, o = o, p = p, q = q, r = r, s\
    \ = s, t = t, u = u, v = v, w = w, x = x, y = y, z = z;\n    long long int a =\
    \ a, b = b, c = c, d = d, e = e, f = f, g = g, h = h, i = i, j = j, k = k, l =\
    \ l, m = m, n = n, o = o, p = p, q = q, r = r, s = s, t = t, u = u, v = v, w =\
    \ w, x = x, y = y, z = z;\n    long long int a = a, b = b, c = c, d = d, e = e,\
    \ f = f, g = g, h = h, i = i, j = j, k = k, l = l, m = m, n = n, o = o, p = p,\
    \ q = q, r = r, s = s, t = t, u = u, v = v, w = w, x = x, y = y, z = z;\n    long\
    \ long int \n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcf0bmpj6.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpcf0bmpj6.cpp:20:19: error: declaration of \u2018long long int a\u2019\
    \ shadows a parameter\n   20 |     long long int a = a, b = b, c = c, d = d, e\
    \ = e, f = f, g = g, h = h, i = i, j = j, k = k, l = l, m = m, n = n, o = o, p\
    \ = p, q = q, r = r, s = s, t = t, u = u, v = v, w = w, x = x, y = y, z = z;\n\
    \      |                   ^\n/tmp/tmpcf0bmpj6.cpp:20:26: error: redeclaration\
    \ of \u2018long long int b\u2019\n   20 |     long long int a = a, b = b, c =\
    \ c, d = d, e = e, f = f, g = g, h = h, i = i, j = j, k = k, l = l, m = m, n =\
    \ n, o = o, p = p, q = q, r = r, s = s, t = t, u = u, v = v, w = w, x = x, y =\
    \ y, z = z;\n      |                          ^\n/tmp/tmpcf0bmpj6.cpp:9:19: note:\
    \ \u2018long long int b\u2019 previously declared here\n    9 |     long long\
    \ int b = 3, c = 5, d = 7;\n      |                   ^\n/tmp/tmpcf0bmpj6.cpp:20:33:\
    \ error: redeclaration of \u2018long long int c\u2019\n   20 |     long long int\
    \ a = a, b = b, c = c, d = d, e = e, f = f, g = g, h = h, i = i, j = j, k = k,\
    \ l = l, m = m, n = n, o = o, p = p, q = q, r = r, s = s, t = t, u = u, v = v,\
    \ w = w, x = x, y = y, z = z;\n      |                                 ^\n/tmp/tmpcf0bmpj6.cpp:9:26:\
    \ note: \u2018long long int c\u2019 previously declared here\n    9 |     long\
    \ long int b = 3, c = 5, d = 7;\n      |                          ^\n/tmp/tmpcf0bmpj6.cpp:20:40:\
    \ error: redeclaration of \u2018long long int d\u2019\n   20 |     long long int\
    \ a = a, b = b, c = c, d = d, e = e, f = f, g = g, h = h, i = i, j = j, k = k,\
    \ l = l, m = m, n = n, o = o, p = p, q = q, r = r, s = s, t = t, u = u, v = v,\
    \ w = w, x = x, y = y, z = z;\n      |                                       \
    \ ^\n/tmp/tmpcf0bmpj6.cpp:9:33: note: \u2018long long int d\u2019 previously declared\
    \ here\n    9 |     long long int b = 3, c = 5, d = 7;\n      |              \
    \                   ^\n/tmp/tmpcf0bmpj6.cpp:20:47: error: redeclaration of \u2018\
    long long int e\u2019\n   20 |     long long int a = a, b = b, c = c, d = d, e\
    \ = e, f = f, g = g, h = h, i = i, j = j, k = k, l = l, m = "
  stdout: ''
  timestamp: 1660099760
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long b = 3, c = 5, d\
    \ = 3, e = 5, f = 5, g = 5, h = 5;\n    while (b <= a) {\n        if (a % b ==\
    \ 0) {\n            while (c <= a) {\n                if (a % c == 0) {\n    \
    \                while (d <= a) {\n                        if (a % d == 0) {\n\
    \                            while (e <= a) {\n                              \
    \  if (a % e == 0) {\n                                    while (f <= a) {\n \
    \                                       if (a % f == 0) {\n                  \
    \                          while (g <= a) {\n                                \
    \                if (a % g == 0) {\n                                         \
    \           while (h <= a) {\n                                               \
    \         if ((a % h) == 0) {\n                                              \
    \              if (b * c * d * e * f * g * h == a) {\n                       \
    \                                         return true;\n                     \
    \                                       }\n                                  \
    \                          else {\n                                          \
    \                      return false;\n                                       \
    \                     }\n                                                    \
    \    }\n                                                        else {\n     \
    \                                                       return false;\n      \
    \                                                  }\n                       \
    \                             }\n                                            \
    \    }\n                                                else {\n             \
    \                                       return false;\n                      \
    \                          }\n                                            }\n\
    \                                        }\n                                 \
    \       else {\n                                            return false;\n  \
    \                                      }\n                                   \
    \ }\n                                }\n                                else {\n\
    \                                    return false;\n                         \
    \       }\n                            }\n                        }\n        \
    \                else {\n                            return false;\n         \
    \               }\n                    }\n                }\n                else\
    \ {\n                    return false;\n                }\n            }\n   \
    \     }\n        else {\n            return false;\n        }\n        b += 3;\n\
    \        c += 5;\n        d += 3;\n        e += 5;\n        f += 5;\n        g\
    \ += 5;\n        h += 5;\n    }\n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp_eqcxo9c: /tmp/tmp_eqcxo9c.cpp:76: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099760
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    int n = a;\n    long\
    \ b = 2;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 0;\n\
    \    long g = 0;\n    long h = 0;\n    long i = 1;\n    long j = 1;\n    long\
    \ k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n\
    \    long p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long\
    \ t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n\
    \    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long\
    \ c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 0;\n    long g = 0;\n\
    \    long h = 0;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long\
    \ l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n\
    \    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long\
    \ u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n\
    \    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long\
    \ d = 1;\n    long e = 1;\n    long f = 0;\n    long g = 0;\n    long h = 0;\n\
    \    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long\
    \ m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n\
    \    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long\
    \ v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n\
    \    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long\
    \ e = 1;\n    long f = 0;\n    long g = 0;\n    long h = 0;\n    long i = 1;\n\
    \    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n    long\
    \ n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n\
    \    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n    long\
    \ w = 1;\n    long x = 1;\n    long y = \n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnidihe70.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpnidihe70.cpp:22:10: error: conflicting declaration \u2018long int n\u2019\
    \n   22 |     long n = 1;\n      |          ^\n/tmp/tmpnidihe70.cpp:9:9: note:\
    \ previous declaration as \u2018int n\u2019\n    9 |     int n = a;\n      | \
    \        ^\n/tmp/tmpnidihe70.cpp:35:10: error: declaration of \u2018long int a\u2019\
    \ shadows a parameter\n   35 |     long a = 1;\n      |          ^\n/tmp/tmpnidihe70.cpp:36:10:\
    \ error: redeclaration of \u2018long int b\u2019\n   36 |     long b = 1;\n  \
    \    |          ^\n/tmp/tmpnidihe70.cpp:10:10: note: \u2018long int b\u2019 previously\
    \ declared here\n   10 |     long b = 2;\n      |          ^\n/tmp/tmpnidihe70.cpp:37:10:\
    \ error: redeclaration of \u2018long int c\u2019\n   37 |     long c = 1;\n  \
    \    |          ^\n/tmp/tmpnidihe70.cpp:11:10: note: \u2018long int c\u2019 previously\
    \ declared here\n   11 |     long c = 1;\n      |          ^\n/tmp/tmpnidihe70.cpp:38:10:\
    \ error: redeclaration of \u2018long int d\u2019\n   38 |     long d = 1;\n  \
    \    |          ^\n/tmp/tmpnidihe70.cpp:12:10: note: \u2018long int d\u2019 previously\
    \ declared here\n   12 |     long d = 1;\n      |          ^\n/tmp/tmpnidihe70.cpp:39:10:\
    \ error: redeclaration of \u2018long int e\u2019\n   39 |     long e = 1;\n  \
    \    |          ^\n/tmp/tmpnidihe70.cpp:13:10: note: \u2018long int e\u2019 previously\
    \ declared here\n   13 |     long e = 1;\n      |          ^\n/tmp/tmpnidihe70.cpp:40:10:\
    \ error: redeclaration of \u2018long int f\u2019\n   40 |     long f = 0;\n  \
    \    |          ^\n/tmp/tmpnidihe70.cpp:14:10: note: \u2018long int f\u2019 previously\
    \ declared here\n   14 |     long f = 0;\n      |          ^\n/tmp/tmpnidihe70.cpp:41:10:\
    \ error: redeclaration of \u2018long int g\u2019\n   41 |     long g = 0;\n  \
    \    |          ^\n/tmp/tmpnidihe70.cpp:15:10: note: \u2018long int g\u2019 previously\
    \ declared here\n   15 |     long g = 0;\n      |          ^\n/tmp/tmpnidihe70.cpp:42:10:\
    \ error: redeclaration of \u2018long int h\u2019\n   42 |     long h = 0;\n  \
    \    |          ^\n/tmp/tmpnidihe70.cpp:16:10: note: \u2018long int h\u2019 previously\
    \ declared here\n   16 |     long h = 0;\n      |          ^"
  stdout: ''
  timestamp: 1660099760
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    while (b < a) {\n        if (a % b == 0 && a % c == 0 &&\
    \ a % d == 0) {\n            return true;\n        }\n        b += 2;\n      \
    \  c += 2;\n        d += 2;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpvouyjn9a: /tmp/tmpvouyjn9a.cpp:23: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099760
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int result = 1;\n    while (b <= a) {\n       \
    \ if (a % b == 0) {\n            while (c <= a / b) {\n                if (a %\
    \ c == 0 && a % d == 0) {\n                    result = false;\n             \
    \       break;\n                }\n                c++;\n            }\n     \
    \   }\n        b++;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmplu3txzyu: /tmp/tmplu3txzyu.cpp:27: int main(): Assertion `candidate((5))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660099760
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int sum = 0;\n    long long int counter = 0;\n\
    \    long long int counter2 = 0;\n    long long int counter3 = 0;\n    long long\
    \ int counter4 = 0;\n    long long int counter5 = 0;\n    long long int counter6\
    \ = 0;\n    long long int counter7 = 0;\n    long long int counter8 = 0;\n   \
    \ long long int counter9 = 0;\n    long long int counter10 = 0;\n    long long\
    \ int counter11 = 0;\n    long long int counter12 = 0;\n    long long int counter13\
    \ = 0;\n    long long int counter14 = 0;\n    long long int counter15 = 0;\n \
    \   long long int counter16 = 0;\n    long long int counter17 = 0;\n    long long\
    \ int counter18 = 0;\n    long long int counter19 = 0;\n    long long int counter20\
    \ = 0;\n    long long int counter21 = 0;\n    long long int counter22 = 0;\n \
    \   long long int counter23 = 0;\n    long long int counter24 = 0;\n    long long\
    \ int counter25 = 0;\n    long long int counter26 = 0;\n    long long int counter27\
    \ = 0;\n    long long int counter28 = 0;\n    long long int counter29 = 0;\n \
    \   long long int counter30 = 0;\n    long long int counter31 = 0;\n    long long\
    \ int counter32 = 0;\n    long long int counter33 = 0;\n    long long int counter34\
    \ = 0;\n    long long int counter35 = 0;\n    long long int counter36 = 0;\n \
    \   long long int counter37 = 0;\n    long long int counter38 = 0;\n    long long\
    \ int counter39 = 0;\n    long long int counter40 = 0;\n    long long int counter41\
    \ = 0;\n    long long int counter42 = 0;\n    long long int counter43 = 0;\n \
    \   long long int counter44 = 0;\n    long long int counter45 = 0;\n    long long\
    \ int counter46 = 0;\n    long long int counter47 = 0;\n    long long int counter48\
    \ = 0;\n    long long int counter49 = 0;\n    long long int counter50 = 0;\n \
    \   long long int counter51 = 0;\n    long long int counter52 = 0;\n    long long\
    \ int counter53 = 0;\n    long long int counter54 = 0;\n    long long int counter55\
    \ = 0;\n    long long int counter56 = 0;\n    long long int counter57 = 0;\n \
    \   long long int counter58 = 0;\n    long long int counter59 = 0;\n    long long\
    \ int counter60 = 0;\n    long long int counter61 = 0;\n    long long int counter62\
    \ = 0;\n    long \n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpjqnfivpu.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpjqnfivpu.cpp:74:1: error: expected unqualified-id before \u2018}\u2019\
    \ token\n   74 | }\n      | ^\n/tmp/tmpjqnfivpu.cpp:74:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660099760
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = a;\n\
    \    long long int c = 1;\n    long long int d = 1;\n    long long int e = 1;\n\
    \    long long int f = 0;\n    long long int g = 0;\n    long long int h = 0;\n\
    \    long long int i = 1;\n    long long int j = 1;\n    long long int k = 1;\n\
    \    long long int l = 1;\n    long long int m = 1;\n    long long int n = 1;\n\
    \    long long int o = 1;\n    long long int p = 1;\n    long long int q = 1;\n\
    \    long long int r = 1;\n    long long int s = 1;\n    long long int t = 1;\n\
    \    long long int u = 1;\n    long long int v = 1;\n    long long int w = 1;\n\
    \    long long int x = 1;\n    long long int y = 1;\n    long long int z = 1;\n\
    \    long long int A = 1;\n    long long int B = 1;\n    long long int C = 1;\n\
    \    long long int D = 1;\n    long long int E = 1;\n    long long int F = 0;\n\
    \    long long int G = 0;\n    long long int H = 0;\n    long long int I = 1;\n\
    \    long long int J = 1;\n    long long int K = 1;\n    long long int L = 1;\n\
    \    long long int M = 1;\n    long long int N = 1;\n    long long int O = 1;\n\
    \    long long int P = 1;\n    long long int Q = 1;\n    long long int R = 1;\n\
    \    long long int S = 1;\n    long long int T = 1;\n    long long int U = 1;\n\
    \    long long int V = 1;\n    long long int W = 1;\n    long long int X = 1;\n\
    \    long long int Y = 1;\n    long long int Z = 1;\n    long long int A = 1;\n\
    \    long long int B = 1;\n    long long int C = 1;\n    long long int D = 1;\n\
    \    long long int E = 1;\n    long long int F = 0;\n    long long int G = 0;\n\
    \    long long int H = 0;\n    long long int I = 1;\n    long long int J = 1;\n\
    \    long long int K = 1;\n    long long int L = 1;\n    long long int M = 1;\n\
    \    long long int N = 1;\n    long long int O = 1;\n    long long int P = 1;\n\
    \    long long int Q = 1;\n    long long int R = 1;\n    long long int S = 1;\n\
    \    long long int T = 1;\n    long long int U = 1;\n    long long int V = 1;\n\
    \    \n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpk_x4e6np.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpk_x4e6np.cpp:60:19: error: redeclaration of \u2018long long int A\u2019\
    \n   60 |     long long int A = 1;\n      |                   ^\n/tmp/tmpk_x4e6np.cpp:34:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   34 |     long\
    \ long int A = 1;\n      |                   ^\n/tmp/tmpk_x4e6np.cpp:61:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   61 |     long long int B =\
    \ 1;\n      |                   ^\n/tmp/tmpk_x4e6np.cpp:35:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   35 |     long long int B = 1;\n\
    \      |                   ^\n/tmp/tmpk_x4e6np.cpp:62:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   62 |     long long int C = 1;\n      |  \
    \                 ^\n/tmp/tmpk_x4e6np.cpp:36:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   36 |     long long int C = 1;\n      |        \
    \           ^\n/tmp/tmpk_x4e6np.cpp:63:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   63 |     long long int D = 1;\n      |                \
    \   ^\n/tmp/tmpk_x4e6np.cpp:37:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   37 |     long long int D = 1;\n      |                   ^\n\
    /tmp/tmpk_x4e6np.cpp:64:19: error: redeclaration of \u2018long long int E\u2019\
    \n   64 |     long long int E = 1;\n      |                   ^\n/tmp/tmpk_x4e6np.cpp:38:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   38 |     long\
    \ long int E = 1;\n      |                   ^\n/tmp/tmpk_x4e6np.cpp:65:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   65 |     long long int F =\
    \ 0;\n      |                   ^\n/tmp/tmpk_x4e6np.cpp:39:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   39 |     long long int F = 0;\n\
    \      |                   ^\n/tmp/tmpk_x4e6np.cpp:66:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   66 |     long long int G = 0;\n      |  \
    \                 ^\n/tmp/tmpk_x4e6np.cpp:40:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   40 |     long long int G = 0;\n      |        \
    \           ^\n/tmp/tmpk_x4e6np.cpp:67:19: error: "
  stdout: ''
  timestamp: 1660099760
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    while (b <= a) {\n        if (a % b == 0) {\n           \
    \ while (c <= a / b) {\n                if (a % c == 0 && c % d == 0) {\n    \
    \                return true;\n                }\n                c++;\n     \
    \       }\n        }\n        b++;\n    }\n    return false;\n}\nint main() {\n\
    \    auto candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n\
    \    assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpu3dh58f7: /tmp/tmpu3dh58f7.cpp:26: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099761
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int result = 1;\n    long long int limit = 100;\n\
    \    while(a != 0) {\n        if(b == c) {\n            if(b == d) {\n       \
    \         if((a % b) == 0) {\n                    result = 1;\n              \
    \      break;\n                }\n            }\n            else {\n        \
    \        if((a % b) == 0) {\n                    result = 1;\n               \
    \     break;\n                }\n            }\n        }\n        else {\n  \
    \          if((a % b) == 0) {\n                if((a % c) == 0) {\n          \
    \          result = 1;\n                    break;\n                }\n      \
    \      }\n            else {\n                if((a % c) == 0) {\n           \
    \         result = 1;\n                    break;\n                }\n       \
    \     }\n        }\n        b += 2;\n        c += 2;\n        d += 2;\n    }\n\
    \    if(result != 1) {\n        return false;\n    }\n    else {\n        return\
    \ true;\n    }\n}\nint main() {\n    auto candidate = is_multiply_prime;\n   \
    \ assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp_gmxccyc: /tmp/tmp_gmxccyc.cpp:54: int main(): Assertion `candidate((5))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660099759
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    while(a != 0) {\n        if(a%b == 0 && a % c == 0 && a %\
    \ d == 0) {\n            return true;\n        }\n        b +=2;\n        c +=2;\n\
    \        d +=2;\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660099766
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int res = 0;\n    while(a != 0) {\n        if(a%b\
    \ == 0 && a%c == 0 && a%d==0) {\n            res = 1;\n            break;\n  \
    \      }\n        b += 2;\n        c += 2;\n        d += 2;\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660099767
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    while (b <= a) {\n        if (a % b == 0 && a % c == 0 &&\
    \ a % d == 0) {\n            return true;\n        }\n        b += 2;\n      \
    \  c += 2;\n        d += 2;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpzo2qmm7h: /tmp/tmpzo2qmm7h.cpp:23: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099761
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    int count = 0;\n    long\
    \ b = a;\n    while (b > 1) {\n        if (a % b == 0) {\n            count++;\n\
    \        }\n        b--;\n    }\n    if (count == 3) {\n        return true;\n\
    \    }\n    return false;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp6gdiz5e_: /tmp/tmp6gdiz5e_.cpp:25: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099763
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int d = a / b;\n    long long int e = a % b;\n\
    \    long long int f = e / c;\n    long long int g = e % c;\n    long long int\
    \ h = g / d;\n    long long int i = g % d;\n    long long int j = h / i;\n   \
    \ long long int k = h % i;\n    long long int l = j / k;\n    long long int m\
    \ = j % k;\n    long long int n = m / l;\n    long long int o = m % l;\n    long\
    \ long int p = o / n;\n    long long int q = o % n;\n    long long int r = p /\
    \ q;\n    long long int s = p % q;\n    long long int t = r / s;\n    long long\
    \ int u = r % s;\n    long long int v = t / u;\n    long long int w = t % u;\n\
    \    long long int x = v / w;\n    long long int y = v % w;\n    long long int\
    \ z = x / y;\n    long long int a = x % y;\n    long long int b = a / z;\n   \
    \ long long int c = a % z;\n    long long int d = b / c;\n    long long int e\
    \ = b % c;\n    long long int f = e / d;\n    long long int g = e % d;\n    long\
    \ long int h = f / g;\n    long long int i = f % g;\n    long long int j = h /\
    \ i;\n    long long int k = h % i;\n    long long int l = j / k;\n    long long\
    \ int m = j % k;\n    long long int n = m / l;\n    long long int o = m % l;\n\
    \    long long int p = o / n;\n    long long int q = o % n;\n    long long int\
    \ r = p / q;\n    long long int s = p % q;\n    long long int t = r / s;\n   \
    \ long long int u = r % s;\n    long long int v = t / u;\n    long long int w\
    \ = t % u;\n    long long int x = v / w;\n    long long int y = v % w;\n    long\
    \ long int z = x / y;\n    long long int a = x % y;\n    long long int b = a /\
    \ z;\n    long long int c = a % z;\n    long long int d = b / c;\n    long long\
    \ int e = b % c;\n    long \n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyzblo0nz.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpyzblo0nz.cpp:10:19: error: redeclaration of \u2018long long int d\u2019\
    \n   10 |     long long int d = a / b;\n      |                   ^\n/tmp/tmpyzblo0nz.cpp:9:33:\
    \ note: \u2018long long int d\u2019 previously declared here\n    9 |     long\
    \ long int b = 3, c = 5, d = 7;\n      |                                 ^\n/tmp/tmpyzblo0nz.cpp:33:19:\
    \ error: declaration of \u2018long long int a\u2019 shadows a parameter\n   33\
    \ |     long long int a = x % y;\n      |                   ^\n/tmp/tmpyzblo0nz.cpp:34:19:\
    \ error: redeclaration of \u2018long long int b\u2019\n   34 |     long long int\
    \ b = a / z;\n      |                   ^\n/tmp/tmpyzblo0nz.cpp:9:19: note: \u2018\
    long long int b\u2019 previously declared here\n    9 |     long long int b =\
    \ 3, c = 5, d = 7;\n      |                   ^\n/tmp/tmpyzblo0nz.cpp:35:19: error:\
    \ redeclaration of \u2018long long int c\u2019\n   35 |     long long int c =\
    \ a % z;\n      |                   ^\n/tmp/tmpyzblo0nz.cpp:9:26: note: \u2018\
    long long int c\u2019 previously declared here\n    9 |     long long int b =\
    \ 3, c = 5, d = 7;\n      |                          ^\n/tmp/tmpyzblo0nz.cpp:36:19:\
    \ error: redeclaration of \u2018long long int d\u2019\n   36 |     long long int\
    \ d = b / c;\n      |                   ^\n/tmp/tmpyzblo0nz.cpp:9:33: note: \u2018\
    long long int d\u2019 previously declared here\n    9 |     long long int b =\
    \ 3, c = 5, d = 7;\n      |                                 ^\n/tmp/tmpyzblo0nz.cpp:37:19:\
    \ error: redeclaration of \u2018long long int e\u2019\n   37 |     long long int\
    \ e = b % c;\n      |                   ^\n/tmp/tmpyzblo0nz.cpp:11:19: note: \u2018\
    long long int e\u2019 previously declared here\n   11 |     long long int e =\
    \ a % b;\n      |                   ^\n/tmp/tmpyzblo0nz.cpp:38:19: error: redeclaration\
    \ of \u2018long long int f\u2019\n   38 |     long long int f = e / d;\n     \
    \ |                   ^\n/tmp/tmpyzblo0nz.cpp:12:19: note: \u2018long long int\
    \ f\u2019 previously declared here\n   12 |     long long int f = e / c;\n   \
    \   |                   ^\n/tmp/tmpyzblo0nz.cpp:39:19: error: r"
  stdout: ''
  timestamp: 1660099762
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int p = 1;\n    long long int q = 1;\n    long\
    \ long int r = 1;\n    long long int s = 1;\n    long long int t = 1;\n    long\
    \ long int u = 1;\n    long long int v = 1;\n    long long int w = 1;\n    long\
    \ long int x = 1;\n    long long int y = 1;\n    long long int z = 1;\n    long\
    \ long int a = a;\n    long long int b = b;\n    long long int c = c;\n    long\
    \ long int d = d;\n    long long int p = p;\n    long long int q = q;\n    long\
    \ long int r = r;\n    long long int s = s;\n    long long int t = t;\n    long\
    \ long int u = u;\n    long long int v = v;\n    long long int w = w;\n    long\
    \ long int x = x;\n    long long int y = y;\n    long long int z = z;\n    long\
    \ long int a = a;\n    long long int b = b;\n    long long int c = c;\n    long\
    \ long int d = d;\n    long long int p = p;\n    long long int q = q;\n    long\
    \ long int r = r;\n    long long int s = s;\n    long long int t = t;\n    long\
    \ long int u = u;\n    long long int v = v;\n    long long int w = w;\n    long\
    \ long int x = x;\n    long long int y = y;\n    long long int z = z;\n    long\
    \ long int a = a;\n    long long int b = b;\n    long long int c = c;\n    long\
    \ long int d = d;\n    long long int p = p;\n    long long int q = q;\n    long\
    \ long int r = r;\n    long long int s = s;\n    long long int t = t;\n    long\
    \ long int u = u;\n    long long int v = v;\n    long long int w = w;\n    long\
    \ long int x = x;\n    long long int y = y;\n    long long int z = z;\n    long\
    \ long int a = a;\n    long long int b = b;\n    long long int c = c;\n    long\
    \ long int d = d;\n    long long int p = p;\n    long long int q = q;\n    long\
    \ long int r = r;\n    long long int s = s;\n    long long int t = t;\n    long\
    \ long int u = u;\n    long long int v = v;\n    long long int w = w;\n    long\
    \ long int x = x;\n    long long int y = \n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2dsbk98p.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmp2dsbk98p.cpp:21:19: error: declaration of \u2018long long int a\u2019\
    \ shadows a parameter\n   21 |     long long int a = a;\n      |             \
    \      ^\n/tmp/tmp2dsbk98p.cpp:22:19: error: redeclaration of \u2018long long\
    \ int b\u2019\n   22 |     long long int b = b;\n      |                   ^\n\
    /tmp/tmp2dsbk98p.cpp:9:19: note: \u2018long long int b\u2019 previously declared\
    \ here\n    9 |     long long int b = 3, c = 5, d = 7;\n      |              \
    \     ^\n/tmp/tmp2dsbk98p.cpp:23:19: error: redeclaration of \u2018long long int\
    \ c\u2019\n   23 |     long long int c = c;\n      |                   ^\n/tmp/tmp2dsbk98p.cpp:9:26:\
    \ note: \u2018long long int c\u2019 previously declared here\n    9 |     long\
    \ long int b = 3, c = 5, d = 7;\n      |                          ^\n/tmp/tmp2dsbk98p.cpp:24:19:\
    \ error: redeclaration of \u2018long long int d\u2019\n   24 |     long long int\
    \ d = d;\n      |                   ^\n/tmp/tmp2dsbk98p.cpp:9:33: note: \u2018\
    long long int d\u2019 previously declared here\n    9 |     long long int b =\
    \ 3, c = 5, d = 7;\n      |                                 ^\n/tmp/tmp2dsbk98p.cpp:25:19:\
    \ error: redeclaration of \u2018long long int p\u2019\n   25 |     long long int\
    \ p = p;\n      |                   ^\n/tmp/tmp2dsbk98p.cpp:10:19: note: \u2018\
    long long int p\u2019 previously declared here\n   10 |     long long int p =\
    \ 1;\n      |                   ^\n/tmp/tmp2dsbk98p.cpp:26:19: error: redeclaration\
    \ of \u2018long long int q\u2019\n   26 |     long long int q = q;\n      |  \
    \                 ^\n/tmp/tmp2dsbk98p.cpp:11:19: note: \u2018long long int q\u2019\
    \ previously declared here\n   11 |     long long int q = 1;\n      |        \
    \           ^\n/tmp/tmp2dsbk98p.cpp:27:19: error: redeclaration of \u2018long\
    \ long int r\u2019\n   27 |     long long int r = r;\n      |                \
    \   ^\n/tmp/tmp2dsbk98p.cpp:12:19: note: \u2018long long int r\u2019 previously\
    \ declared here\n   12 |     long long int r = 1;\n      |                   ^\n\
    /tmp/tmp2dsbk98p.cpp:28:19: error: redeclaration of \u2018long long int s\u2019\
    \n   28 |     long long int"
  stdout: ''
  timestamp: 1660099762
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    while (b <= a) {\n        if (a % b == 0 && a % c == 0 &&\
    \ a % d == 0) {\n            return true;\n        }\n        b += 2;\n      \
    \  c += 2;\n        d += 2;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpzo2qmm7h: /tmp/tmpzo2qmm7h.cpp:23: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099761
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 0;\n\
    \    long long int c = 0;\n    long long int d = 0;\n    long long int e = 0;\n\
    \    long long int f = 0;\n    long long int g = 0;\n    long long int h = 0;\n\
    \    long long int i = 0;\n    long long int j = 0;\n    long long int k = 0;\n\
    \    long long int l = 0;\n    long long int m = 0;\n    long long int n = 0;\n\
    \    long long int o = 0;\n    long long int p = 0;\n    long long int q = 0;\n\
    \    long long int r = 0;\n    long long int s = 0;\n    long long int t = 0;\n\
    \    long long int u = 0;\n    long long int v = 0;\n    long long int w = 0;\n\
    \    long long int x = 0;\n    long long int y = 0;\n    long long int z = 0;\n\
    \    long long int A = 0;\n    long long int B = 0;\n    long long int C = 0;\n\
    \    long long int D = 0;\n    long long int E = 0;\n    long long int F = 0;\n\
    \    long long int G = 0;\n    long long int H = 0;\n    long long int I = 0;\n\
    \    long long int J = 0;\n    long long int K = 0;\n    long long int L = 0;\n\
    \    long long int M = 0;\n    long long int N = 0;\n    long long int O = 0;\n\
    \    long long int P = 0;\n    long long int Q = 0;\n    long long int R = 0;\n\
    \    long long int S = 0;\n    long long int T = 0;\n    long long int U = 0;\n\
    \    long long int V = 0;\n    long long int W = 0;\n    long long int X = 0;\n\
    \    long long int Y = 0;\n    long long int Z = 0;\n    long long int A = 0;\n\
    \    long long int B = 0;\n    long long int C = 0;\n    long long int D = 0;\n\
    \    long long int E = 0;\n    long long int F = 0;\n    long long int G = 0;\n\
    \    long long int H = 0;\n    long long int I = 0;\n    long long int J = 0;\n\
    \    long long int K = 0;\n    long long int L = 0;\n    long long int M = 0;\n\
    \    long long int N = 0;\n    long long int O = 0;\n    long long int P = 0;\n\
    \    long long int Q = 0;\n    long long int R = 0;\n    long long int S = 0;\n\
    \    long long int T = 0;\n    long long int U = 0;\n    long long int V = 0;\n\
    \    long long int \n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmphpyp33up.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmphpyp33up.cpp:60:19: error: redeclaration of \u2018long long int A\u2019\
    \n   60 |     long long int A = 0;\n      |                   ^\n/tmp/tmphpyp33up.cpp:34:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   34 |     long\
    \ long int A = 0;\n      |                   ^\n/tmp/tmphpyp33up.cpp:61:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   61 |     long long int B =\
    \ 0;\n      |                   ^\n/tmp/tmphpyp33up.cpp:35:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   35 |     long long int B = 0;\n\
    \      |                   ^\n/tmp/tmphpyp33up.cpp:62:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   62 |     long long int C = 0;\n      |  \
    \                 ^\n/tmp/tmphpyp33up.cpp:36:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   36 |     long long int C = 0;\n      |        \
    \           ^\n/tmp/tmphpyp33up.cpp:63:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   63 |     long long int D = 0;\n      |                \
    \   ^\n/tmp/tmphpyp33up.cpp:37:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   37 |     long long int D = 0;\n      |                   ^\n\
    /tmp/tmphpyp33up.cpp:64:19: error: redeclaration of \u2018long long int E\u2019\
    \n   64 |     long long int E = 0;\n      |                   ^\n/tmp/tmphpyp33up.cpp:38:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   38 |     long\
    \ long int E = 0;\n      |                   ^\n/tmp/tmphpyp33up.cpp:65:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   65 |     long long int F =\
    \ 0;\n      |                   ^\n/tmp/tmphpyp33up.cpp:39:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   39 |     long long int F = 0;\n\
    \      |                   ^\n/tmp/tmphpyp33up.cpp:66:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   66 |     long long int G = 0;\n      |  \
    \                 ^\n/tmp/tmphpyp33up.cpp:40:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   40 |     long long int G = 0;\n      |        \
    \           ^\n/tmp/tmphpyp33up.cpp:67:19: error: "
  stdout: ''
  timestamp: 1660099762
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int n = 3*a*a;\n\
    \    long long int d = sqrt(n);\n    long long int p = 1;\n    long long int q\
    \ = 1;\n    long long int r = 1;\n    long long int k = 0;\n    long long int\
    \ m = 1;\n    long long int t = 1;\n    long long int u = 1;\n    long long int\
    \ v = 1;\n    long long int w = 1;\n    long long int x = 1;\n    long long int\
    \ y = 1;\n    long long int z = 1;\n    long long int w = 1;\n    long long int\
    \ x = 1;\n    long long int y = 1;\n    long long int z = 1;\n    long long int\
    \ w = 1;\n    long long int x = 1;\n    long long int y = 1;\n    long long int\
    \ z = 1;\n    long long int w = 1;\n    long long int x = 1;\n    long long int\
    \ y = 1;\n    long long int z = 1;\n    long long int w = 1;\n    long long int\
    \ x = 1;\n    long long int y = 1;\n    long long int z = 1;\n    long long int\
    \ w = 1;\n    long long int x = 1;\n    long long int y = 1;\n    long long int\
    \ z = 1;\n    long long int w = 1;\n    long long int x = 1;\n    long long int\
    \ y = 1;\n    long long int z = 1;\n    long long int w = 1;\n    long long int\
    \ x = 1;\n    long long int y = 1;\n    long long int z = 1;\n    long long int\
    \ w = 1;\n    long long int x = 1;\n    long long int y = 1;\n    long long int\
    \ z = 1;\n    long long int w = 1;\n    long long int x = 1;\n    long long int\
    \ y = 1;\n    long long int z = 1;\n    long long int w = 1;\n    long long int\
    \ x = 1;\n    long long int y = 1;\n    long long int z = 1;\n    long long int\
    \ w = 1;\n    long long int x = 1;\n    long long int y = 1;\n    long long int\
    \ z = 1;\n    long long int w = 1;\n    long long int x = 1;\n    long long int\
    \ y = 1;\n    long long int z = 1;\n    long long int w = 1;\n    long long int\
    \ x = 1;\n    long long int y = 1;\n    long long int z = 1;\n    long long int\
    \ w = 1;\n    long long int x = 1;\n    long long int y = 1;\n    long long int\
    \ z = 1;\n    long long int w = 1;\n    long long int x = 1;\n    long long int\
    \ \n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmps9giel46.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmps9giel46.cpp:23:19: error: redeclaration of \u2018long long int w\u2019\
    \n   23 |     long long int w = 1;\n      |                   ^\n/tmp/tmps9giel46.cpp:19:19:\
    \ note: \u2018long long int w\u2019 previously declared here\n   19 |     long\
    \ long int w = 1;\n      |                   ^\n/tmp/tmps9giel46.cpp:24:19: error:\
    \ redeclaration of \u2018long long int x\u2019\n   24 |     long long int x =\
    \ 1;\n      |                   ^\n/tmp/tmps9giel46.cpp:20:19: note: \u2018long\
    \ long int x\u2019 previously declared here\n   20 |     long long int x = 1;\n\
    \      |                   ^\n/tmp/tmps9giel46.cpp:25:19: error: redeclaration\
    \ of \u2018long long int y\u2019\n   25 |     long long int y = 1;\n      |  \
    \                 ^\n/tmp/tmps9giel46.cpp:21:19: note: \u2018long long int y\u2019\
    \ previously declared here\n   21 |     long long int y = 1;\n      |        \
    \           ^\n/tmp/tmps9giel46.cpp:26:19: error: redeclaration of \u2018long\
    \ long int z\u2019\n   26 |     long long int z = 1;\n      |                \
    \   ^\n/tmp/tmps9giel46.cpp:22:19: note: \u2018long long int z\u2019 previously\
    \ declared here\n   22 |     long long int z = 1;\n      |                   ^\n\
    /tmp/tmps9giel46.cpp:27:19: error: redeclaration of \u2018long long int w\u2019\
    \n   27 |     long long int w = 1;\n      |                   ^\n/tmp/tmps9giel46.cpp:19:19:\
    \ note: \u2018long long int w\u2019 previously declared here\n   19 |     long\
    \ long int w = 1;\n      |                   ^\n/tmp/tmps9giel46.cpp:28:19: error:\
    \ redeclaration of \u2018long long int x\u2019\n   28 |     long long int x =\
    \ 1;\n      |                   ^\n/tmp/tmps9giel46.cpp:20:19: note: \u2018long\
    \ long int x\u2019 previously declared here\n   20 |     long long int x = 1;\n\
    \      |                   ^\n/tmp/tmps9giel46.cpp:29:19: error: redeclaration\
    \ of \u2018long long int y\u2019\n   29 |     long long int y = 1;\n      |  \
    \                 ^\n/tmp/tmps9giel46.cpp:21:19: note: \u2018long long int y\u2019\
    \ previously declared here\n   21 |     long long int y = 1;\n      |        \
    \           ^\n/tmp/tmps9giel46.cpp:30:19: error: "
  stdout: ''
  timestamp: 1660099762
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    while (b < a) {\n        if (a % b == 0 && a % c == 0 &&\
    \ a % d == 0) {\n            return true;\n        }\n        b += 2;\n      \
    \  c += 2;\n        d += 2;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpvouyjn9a: /tmp/tmpvouyjn9a.cpp:23: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099760
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int ans = 1;\n    while(c <= a) {\n        if(a%c\
    \ == 0) {\n            ans = ans * b;\n        }\n        b += 2;\n        c +=\
    \ 2;\n    }\n    return ans == a;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpgttu_8bd: /tmp/tmpgttu_8bd.cpp:23: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099763
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int n = 3,\
    \ m = 2;\n    long long int d = a%n;\n    long long int b = a%m;\n    long long\
    \ int c = a%m;\n    long long int d = a%n;\n    long long int b = a%m;\n    long\
    \ long int c = a%m;\n    long long int d = a%n;\n    long long int b = a%m;\n\
    \    long long int c = a%m;\n    long long int d = a%n;\n    long long int b =\
    \ a%m;\n    long long int c = a%m;\n    long long int d = a%n;\n    long long\
    \ int b = a%m;\n    long long int c = a%m;\n    long long int d = a%n;\n    long\
    \ long int b = a%m;\n    long long int c = a%m;\n    long long int d = a%n;\n\
    \    long long int b = a%m;\n    long long int c = a%m;\n    long long int d =\
    \ a%n;\n    long long int b = a%m;\n    long long int c = a%m;\n    long long\
    \ int d = a%n;\n    long long int b = a%m;\n    long long int c = a%m;\n    long\
    \ long int d = a%n;\n    long long int b = a%m;\n    long long int c = a%m;\n\
    \    long long int d = a%n;\n    long long int b = a%m;\n    long long int c =\
    \ a%m;\n    long long int d = a%n;\n    long long int b = a%m;\n    long long\
    \ int c = a%m;\n    long long int d = a%n;\n    long long int b = a%m;\n    long\
    \ long int c = a%m;\n    long long int d = a%n;\n    long long int b = a%m;\n\
    \    long long int c = a%m;\n    long long int d = a%n;\n    long long int b =\
    \ a%m;\n    long long int c = a%m;\n    long long int d = a%n;\n    long long\
    \ int b = a%m;\n    long long int c = a%m;\n    long long int d = a%n;\n    long\
    \ long int b = a%m;\n    long long int c = a%m;\n    long long int d = a%n;\n\
    \    long long int b = a%m;\n    long long int c = a%m;\n    long long int d =\
    \ a%n;\n    long long int b = a%\n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwiom8w68.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpwiom8w68.cpp:13:19: error: redeclaration of \u2018long long int d\u2019\
    \n   13 |     long long int d = a%n;\n      |                   ^\n/tmp/tmpwiom8w68.cpp:10:19:\
    \ note: \u2018long long int d\u2019 previously declared here\n   10 |     long\
    \ long int d = a%n;\n      |                   ^\n/tmp/tmpwiom8w68.cpp:14:19:\
    \ error: redeclaration of \u2018long long int b\u2019\n   14 |     long long int\
    \ b = a%m;\n      |                   ^\n/tmp/tmpwiom8w68.cpp:11:19: note: \u2018\
    long long int b\u2019 previously declared here\n   11 |     long long int b =\
    \ a%m;\n      |                   ^\n/tmp/tmpwiom8w68.cpp:15:19: error: redeclaration\
    \ of \u2018long long int c\u2019\n   15 |     long long int c = a%m;\n      |\
    \                   ^\n/tmp/tmpwiom8w68.cpp:12:19: note: \u2018long long int c\u2019\
    \ previously declared here\n   12 |     long long int c = a%m;\n      |      \
    \             ^\n/tmp/tmpwiom8w68.cpp:16:19: error: redeclaration of \u2018long\
    \ long int d\u2019\n   16 |     long long int d = a%n;\n      |              \
    \     ^\n/tmp/tmpwiom8w68.cpp:10:19: note: \u2018long long int d\u2019 previously\
    \ declared here\n   10 |     long long int d = a%n;\n      |                 \
    \  ^\n/tmp/tmpwiom8w68.cpp:17:19: error: redeclaration of \u2018long long int\
    \ b\u2019\n   17 |     long long int b = a%m;\n      |                   ^\n/tmp/tmpwiom8w68.cpp:11:19:\
    \ note: \u2018long long int b\u2019 previously declared here\n   11 |     long\
    \ long int b = a%m;\n      |                   ^\n/tmp/tmpwiom8w68.cpp:18:19:\
    \ error: redeclaration of \u2018long long int c\u2019\n   18 |     long long int\
    \ c = a%m;\n      |                   ^\n/tmp/tmpwiom8w68.cpp:12:19: note: \u2018\
    long long int c\u2019 previously declared here\n   12 |     long long int c =\
    \ a%m;\n      |                   ^\n/tmp/tmpwiom8w68.cpp:19:19: error: redeclaration\
    \ of \u2018long long int d\u2019\n   19 |     long long int d = a%n;\n      |\
    \                   ^\n/tmp/tmpwiom8w68.cpp:10:19: note: \u2018long long int d\u2019\
    \ previously declared here\n   10 |     long long int d = a%n;\n      |      \
    \             ^\n/tmp/tm"
  stdout: ''
  timestamp: 1660099762
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int p = 2;\n    while (b <= a) {\n        if (a\
    \ % p == 0) {\n            return false;\n        }\n        if (a % p == 1) {\n\
    \            return true;\n        }\n        if (a % p == 2) {\n            return\
    \ false;\n        }\n        if (a % p == 3) {\n            return false;\n  \
    \      }\n        if (a % p == 4) {\n            return false;\n        }\n  \
    \      if (a % p == 5) {\n            return false;\n        }\n        if (a\
    \ % p == 6) {\n            return false;\n        }\n        if (a % p == 7) {\n\
    \            return false;\n        }\n        if (a % p == 8) {\n           \
    \ return false;\n        }\n        if (a % p == 9) {\n            return false;\n\
    \        }\n        if (a % p == 10) {\n            return false;\n        }\n\
    \        if (a % p == 11) {\n            return false;\n        }\n        if\
    \ (a % p == 12) {\n            return false;\n        }\n        if (a % p ==\
    \ 13) {\n            return false;\n        }\n        if (a % p == 14) {\n  \
    \          return false;\n        }\n        if (a % p == 15) {\n            return\
    \ false;\n        }\n        if (a % p == 16) {\n            return false;\n \
    \       }\n        if (a % p == 17) {\n            return false;\n        }\n\
    \        if (a % p == 18) {\n            return false;\n        }\n        if\
    \ (a % p == 19) {\n            return false;\n        }\n        if (a % p ==\
    \ 20) {\n            return false;\n        }\n        if (a % p == 21) {\n  \
    \          return false;\n        }\n        if (a % p == 22) {\n            return\
    \ false;\n        }\n        if (a % p == 23) {\n            return false;\n \
    \       }\n        if (a % p == 24) {\n            return false;\n        }\n\
    \        if (a % p == 25) {\n            return false;\n        }\n        if\
    \ (a % p == 26) {\n            return false;\n        }\n        if (a % p ==\
    \ 27) {\n            return false;\n        }\n        if (a % p == 28) {\n  \
    \          return false;\n        }\n        if (a % p == 29) {\n            return\
    \ false;\n        }\n        if (a % p == 30) {\n            return false;\n \
    \       }\n        if (a % p == 31) {\n            return false;\n        }\n\
    \        if (a % p == 32) {\n            return false;\n        }\n        if\
    \ (a % p == 33) {\n            return false;\n        }\n        if (a % p ==\
    \ 34) {\n            return false;\n        }\n        if (a % p == 35) {\n  \
    \          return false;\n        }\n        if (a % p == 36) {\n            return\
    \ false;\n        }\n        if (a % p == 37) {\n            return false;\n \
    \       }\n        if (a % p == 38) {\n            return false;\n        }\n\n\
    }\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp84tyqil1.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmp84tyqil1.cpp:131:12: error: a function-definition is not allowed here\
    \ before \u2018{\u2019 token\n  131 | int main() {\n      |            ^\n/tmp/tmp84tyqil1.cpp:143:1:\
    \ error: expected \u2018}\u2019 at end of input\n  143 | }\n      | ^\n/tmp/tmp84tyqil1.cpp:8:32:\
    \ note: to match this \u2018{\u2019\n    8 | bool is_multiply_prime(long a) {\n\
    \      |                                ^\n/tmp/tmp84tyqil1.cpp:143:1: warning:\
    \ control reaches end of non-void function [-Wreturn-type]\n  143 | }\n      |\
    \ ^\n"
  stdout: ''
  timestamp: 1660099762
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int temp;\n    while(a != 0) {\n        temp =\
    \ a;\n        a = a % b;\n        b = temp % c;\n        c = temp % d;\n     \
    \   d = temp;\n    }\n    return a == 1;\n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660099763
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int result = 1;\n    while (b <= a) {\n       \
    \ if (a % b == 0) {\n            while (c <= a) {\n                if (a % c ==\
    \ 0) {\n                    while (d <= a) {\n                        if (a %\
    \ d == 0) {\n                            if (b * c * d == a) {\n             \
    \                   return true;\n                            }\n            \
    \                else {\n                                return false;\n     \
    \                       }\n                        }\n                       \
    \ else {\n                            return false;\n                        }\n\
    \                    }\n                }\n                else {\n          \
    \          return false;\n                }\n            }\n        }\n      \
    \  else {\n            return false;\n        }\n        b += 2;\n        c +=\
    \ 2;\n        d += 2;\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmpvded9gnp: /tmp/tmpvded9gnp.cpp:46: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099763
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 0;\n\
    \    long long int c = 0;\n    long long int d = 0;\n    long long int e = 0;\n\
    \    long long int f = 0;\n    long long int g = 0;\n    long long int h = 0;\n\
    \    long long int i = 0;\n    long long int j = 0;\n    long long int k = 0;\n\
    \    long long int l = 0;\n    long long int m = 0;\n    long long int n = 0;\n\
    \    long long int o = 0;\n    long long int p = 0;\n    long long int q = 0;\n\
    \    long long int r = 0;\n    long long int s = 0;\n    long long int t = 0;\n\
    \    long long int u = 0;\n    long long int v = 0;\n    long long int w = 0;\n\
    \    long long int x = 0;\n    long long int y = 0;\n    long long int z = 0;\n\
    \    long long int A = 0;\n    long long int B = 0;\n    long long int C = 0;\n\
    \    long long int D = 0;\n    long long int E = 0;\n    long long int F = 0;\n\
    \    long long int G = 0;\n    long long int H = 0;\n    long long int I = 0;\n\
    \    long long int J = 0;\n    long long int K = 0;\n    long long int L = 0;\n\
    \    long long int M = 0;\n    long long int N = 0;\n    long long int O = 0;\n\
    \    long long int P = 0;\n    long long int Q = 0;\n    long long int R = 0;\n\
    \    long long int S = 0;\n    long long int T = 0;\n    long long int U = 0;\n\
    \    long long int V = 0;\n    long long int W = 0;\n    long long int X = 0;\n\
    \    long long int Y = 0;\n    long long int Z = 0;\n    long long int A = 0;\n\
    \    long long int B = 0;\n    long long int C = 0;\n    long long int D = 0;\n\
    \    long long int E = 0;\n    long long int F = 0;\n    long long int G = 0;\n\
    \    long long int H = 0;\n    long long int I = 0;\n    long long int J = 0;\n\
    \    long long int K = 0;\n    long long int L = 0;\n    long long int M = 0;\n\
    \    long long int N = 0;\n    long long int O = 0;\n    long long int P = 0;\n\
    \    long long int Q = 0;\n    long long int R = 0;\n    long long int S = 0;\n\
    \    long long int T = 0;\n    long long int U = 0;\n    long long int V = 0;\n\
    \    long long int \n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmphpyp33up.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmphpyp33up.cpp:60:19: error: redeclaration of \u2018long long int A\u2019\
    \n   60 |     long long int A = 0;\n      |                   ^\n/tmp/tmphpyp33up.cpp:34:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   34 |     long\
    \ long int A = 0;\n      |                   ^\n/tmp/tmphpyp33up.cpp:61:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   61 |     long long int B =\
    \ 0;\n      |                   ^\n/tmp/tmphpyp33up.cpp:35:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   35 |     long long int B = 0;\n\
    \      |                   ^\n/tmp/tmphpyp33up.cpp:62:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   62 |     long long int C = 0;\n      |  \
    \                 ^\n/tmp/tmphpyp33up.cpp:36:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   36 |     long long int C = 0;\n      |        \
    \           ^\n/tmp/tmphpyp33up.cpp:63:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   63 |     long long int D = 0;\n      |                \
    \   ^\n/tmp/tmphpyp33up.cpp:37:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   37 |     long long int D = 0;\n      |                   ^\n\
    /tmp/tmphpyp33up.cpp:64:19: error: redeclaration of \u2018long long int E\u2019\
    \n   64 |     long long int E = 0;\n      |                   ^\n/tmp/tmphpyp33up.cpp:38:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   38 |     long\
    \ long int E = 0;\n      |                   ^\n/tmp/tmphpyp33up.cpp:65:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   65 |     long long int F =\
    \ 0;\n      |                   ^\n/tmp/tmphpyp33up.cpp:39:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   39 |     long long int F = 0;\n\
    \      |                   ^\n/tmp/tmphpyp33up.cpp:66:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   66 |     long long int G = 0;\n      |  \
    \                 ^\n/tmp/tmphpyp33up.cpp:40:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   40 |     long long int G = 0;\n      |        \
    \           ^\n/tmp/tmphpyp33up.cpp:67:19: error: "
  stdout: ''
  timestamp: 1660099762
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int ans = 0;\n    while (b <= a) {\n        if\
    \ (a % b == 0) {\n            ans += 1;\n        }\n        if (a % c == 0) {\n\
    \            ans += 1;\n        }\n        if (a % d == 0) {\n            ans\
    \ += 1;\n        }\n        b += 2;\n        c += 2;\n        d += 2;\n    }\n\
    \    return ans == 3;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpp_s9gupj: /tmp/tmpp_s9gupj.cpp:30: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099763
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    while (b <= a) {\n        if (a % b == 0) {\n           \
    \ if (a % c == 0) {\n                if (a % d == 0) {\n                    return\
    \ true;\n                }\n            }\n        }\n        b += 2;\n      \
    \  c += 2;\n        d += 2;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp1h4nsxw2: /tmp/tmp1h4nsxw2.cpp:27: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099761
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    while(a != 0) {\n        if(a % b == 0 && a % c == 0 && a\
    \ % d == 0) {\n            return true;\n        }\n        ++b;\n        ++c;\n\
    \        ++d;\n    }\n    return false;\n}\nint main() {\n    auto candidate =\
    \ is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660099767
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int sum = 0;\n    long long int counter = 0;\n\
    \    long long int temp = 0;\n    long long int counter2 = 0;\n    long long int\
    \ temp2 = 0;\n    long long int counter3 = 0;\n    long long int temp3 = 0;\n\
    \    long long int counter4 = 0;\n    long long int temp4 = 0;\n    long long\
    \ int counter5 = 0;\n    long long int temp5 = 0;\n    long long int counter6\
    \ = 0;\n    long long int temp6 = 0;\n    long long int counter7 = 0;\n    long\
    \ long int temp7 = 0;\n    long long int counter8 = 0;\n    long long int temp8\
    \ = 0;\n    long long int counter9 = 0;\n    long long int temp9 = 0;\n    long\
    \ long int counter10 = 0;\n    long long int temp10 = 0;\n    long long int counter11\
    \ = 0;\n    long long int temp11 = 0;\n    long long int counter12 = 0;\n    long\
    \ long int temp12 = 0;\n    long long int counter13 = 0;\n    long long int temp13\
    \ = 0;\n    long long int counter14 = 0;\n    long long int temp14 = 0;\n    long\
    \ long int counter15 = 0;\n    long long int temp15 = 0;\n    long long int counter16\
    \ = 0;\n    long long int temp16 = 0;\n    long long int counter17 = 0;\n    long\
    \ long int temp17 = 0;\n    long long int counter18 = 0;\n    long long int temp18\
    \ = 0;\n    long long int counter19 = 0;\n    long long int temp19 = 0;\n    long\
    \ long int counter20 = 0;\n    long long int temp20 = 0;\n    long long int counter21\
    \ = 0;\n    long long int temp21 = 0;\n    long long int counter22 = 0;\n    long\
    \ long int temp22 = 0;\n    long long int counter23 = 0;\n    long long int temp23\
    \ = 0;\n    long long int counter24 = 0;\n    long long int temp24 = 0;\n    long\
    \ long int counter25 = 0;\n    long long int temp25 = 0;\n    long long int counter26\
    \ = 0;\n    long long int temp26 = 0;\n    long long int counter27 = 0;\n    long\
    \ long int temp27 = 0;\n    long long int counter28 = 0;\n    long long int temp28\
    \ = 0;\n    long long int counter29 = 0;\n    long long int temp29 = 0;\n    long\
    \ long int counter30 = 0;\n    long long int temp30 = 0;\n    long long int counter31\
    \ = 0;\n    long long int temp31 = 0;\n    long long int counter32 = 0;\n}\nint\
    \ main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp3pvcrplq: /tmp/tmp3pvcrplq.cpp:77: int main(): Assertion `candidate((5))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660099763
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    while (b <= a) {\n        if (a % b == 0) {\n           \
    \ while (c <= a / b) {\n                if (a % c == 0 && a % d == 0) {\n    \
    \                return true;\n                }\n                c++;\n     \
    \       }\n        }\n        b++;\n    }\n    return false;\n}\nint main() {\n\
    \    auto candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n\
    \    assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpa55uqwzo: /tmp/tmpa55uqwzo.cpp:26: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099761
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int e = 3, f = 5, g = 7;\n    long long int h =\
    \ 3, i = 5, j = 5;\n    long long int k = 2, l = 2;\n    long long int m = 2,\
    \ n = 2;\n    long long int o = 2, p = 2;\n    long long int q = 3, r = 5, s =\
    \ 7;\n    long long int t = 2, u = 2;\n    long long int v = 2, w = 2;\n    long\
    \ long int x = 2, y = 2;\n    long long int z = 3, aa = 5, ab = 7;\n    long long\
    \ int ac = 5, ad = 7;\n    long long int ae = 3, af = 5;\n    long long int ag\
    \ = 5, ah = 7;\n    long long int ai = 5, aj = 7;\n    long long int ak = 2, al\
    \ = 2;\n    long long int am = 2, an = 2;\n    long long int ao = 2, ap = 2;\n\
    \    long long int aq = 2, ar = 5;\n    long long int as = 7, at = 2;\n    long\
    \ long int au = 2, av = 2;\n    long long int aw = 2, ax = 2;\n    long long int\
    \ ay = 2, az = 3;\n    long long int aa += 3, ab += 3;\n    long long int ac +=\
    \ 3, ad += 3;\n    long long int ae += 3, af += 3;\n    long long int ag += 3,\
    \ ah += 3;\n    long long int ai += 3, aj += 3;\n    long long int ak += 3, al\
    \ += 3;\n    long long int am += 3, an += 3;\n    long long int ao += 3, ap +=\
    \ 3;\n    long long int aq += 3, ar += 3;\n    long long int as += 3, at += 3;\n\
    \    long long int au += 3, av += 3;\n    long long int aw += 3, ax += 3;\n  \
    \  long long int ay += 3, az += 3;\n    long long int aa += 3, ab += 3;\n    long\
    \ long int ac += 3, ad += 3;\n    long long int ae += 3, af += 3;\n    long long\
    \ int ag += 3, ah += 3;\n    long long int ai += 3, aj += 3;\n    long long int\
    \ ak += 3, al += 3;\n    long long int am += 3, an += 3;\n    long long int ao\
    \ += 3, ap += 3;\n    long long int aq += 3, ar += 3;\n    long long int as +=\
    \ 3, at += 3;\n    long long int au += 3, av += 3;\n    long long int \n}\nint\
    \ main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm0vmx47m.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpm0vmx47m.cpp:32:22: error: expected initializer before \u2018+=\u2019\
    \ token\n   32 |     long long int aa += 3, ab += 3;\n      |                \
    \      ^~\n/tmp/tmpm0vmx47m.cpp:33:22: error: expected initializer before \u2018\
    +=\u2019 token\n   33 |     long long int ac += 3, ad += 3;\n      |         \
    \             ^~\n/tmp/tmpm0vmx47m.cpp:34:22: error: expected initializer before\
    \ \u2018+=\u2019 token\n   34 |     long long int ae += 3, af += 3;\n      | \
    \                     ^~\n/tmp/tmpm0vmx47m.cpp:35:22: error: expected initializer\
    \ before \u2018+=\u2019 token\n   35 |     long long int ag += 3, ah += 3;\n \
    \     |                      ^~\n/tmp/tmpm0vmx47m.cpp:36:22: error: expected initializer\
    \ before \u2018+=\u2019 token\n   36 |     long long int ai += 3, aj += 3;\n \
    \     |                      ^~\n/tmp/tmpm0vmx47m.cpp:37:22: error: expected initializer\
    \ before \u2018+=\u2019 token\n   37 |     long long int ak += 3, al += 3;\n \
    \     |                      ^~\n/tmp/tmpm0vmx47m.cpp:38:22: error: expected initializer\
    \ before \u2018+=\u2019 token\n   38 |     long long int am += 3, an += 3;\n \
    \     |                      ^~\n/tmp/tmpm0vmx47m.cpp:39:22: error: expected initializer\
    \ before \u2018+=\u2019 token\n   39 |     long long int ao += 3, ap += 3;\n \
    \     |                      ^~\n/tmp/tmpm0vmx47m.cpp:40:22: error: expected initializer\
    \ before \u2018+=\u2019 token\n   40 |     long long int aq += 3, ar += 3;\n \
    \     |                      ^~\n/tmp/tmpm0vmx47m.cpp:41:22: error: expected initializer\
    \ before \u2018+=\u2019 token\n   41 |     long long int as += 3, at += 3;\n \
    \     |                      ^~\n/tmp/tmpm0vmx47m.cpp:42:22: error: expected initializer\
    \ before \u2018+=\u2019 token\n   42 |     long long int au += 3, av += 3;\n \
    \     |                      ^~\n/tmp/tmpm0vmx47m.cpp:43:22: error: expected initializer\
    \ before \u2018+=\u2019 token\n   43 |     long long int aw += 3, ax += 3;\n \
    \     |                      ^~\n/tmp/tmpm0vmx47m.cpp:44:22: error: expected initializer\
    \ before \u2018+=\u2019 token\n   44 |     long long int ay += 3, az += 3;\n \
    \   "
  stdout: ''
  timestamp: 1660099762
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int res = 0;\n    while (b <= a) {\n        if\
    \ (a % b == 0) {\n            while (c <= a) {\n                if (a % c == 0)\
    \ {\n                    while (d <= a) {\n                        if (a % d ==\
    \ 0) {\n                            res = 1;\n                            break;\n\
    \                        }\n                        d++;\n                   \
    \ }\n                    break;\n                }\n                c++;\n   \
    \         }\n            break;\n        }\n        b++;\n    }\n    return res;\n\
    }\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpj0l1452v: /tmp/tmpj0l1452v.cpp:37: int main(): Assertion `candidate((10))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660099763
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 0;\n\
    \    long long int c = 0;\n    long long int d = 0;\n    long long int e = 0;\n\
    \    long long int f = 0;\n    long long int g = 0;\n    long long int h = 0;\n\
    \    long long int i = 0;\n    long long int j = 0;\n    long long int k = 0;\n\
    \    long long int l = 0;\n    long long int m = 0;\n    long long int n = 0;\n\
    \    long long int o = 0;\n    long long int p = 0;\n    long long int q = 0;\n\
    \    long long int r = 0;\n    long long int s = 0;\n    long long int t = 0;\n\
    \    long long int u = 0;\n    long long int v = 0;\n    long long int w = 0;\n\
    \    long long int x = 0;\n    long long int y = 0;\n    long long int z = 0;\n\
    \    long long int A = 0;\n    long long int B = 0;\n    long long int C = 0;\n\
    \    long long int D = 0;\n    long long int E = 0;\n    long long int F = 0;\n\
    \    long long int G = 0;\n    long long int H = 0;\n    long long int I = 0;\n\
    \    long long int J = 0;\n    long long int K = 0;\n    long long int L = 0;\n\
    \    long long int M = 0;\n    long long int N = 0;\n    long long int O = 0;\n\
    \    long long int P = 0;\n    long long int Q = 0;\n    long long int R = 0;\n\
    \    long long int S = 0;\n    long long int T = 0;\n    long long int U = 0;\n\
    \    long long int V = 0;\n    long long int W = 0;\n    long long int X = 0;\n\
    \    long long int Y = 0;\n    long long int Z = 0;\n    long long int A = 0;\n\
    \    long long int B = 0;\n    long long int C = 0;\n    long long int D = 0;\n\
    \    long long int E = 0;\n    long long int F = 0;\n    long long int G = 0;\n\
    \    long long int H = 0;\n    long long int I = 0;\n    long long int J = 0;\n\
    \    long long int K = 0;\n    long long int L = 0;\n    long long int M = 0;\n\
    \    long long int N = 0;\n    long long int O = 0;\n    long long int P = 0;\n\
    \    long long int Q = 0;\n    long long int R = 0;\n    long long int S = 0;\n\
    \    long long int T = 0;\n    long long int U = 0;\n    long long int V = 0;\n\
    \    long long int \n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmphpyp33up.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmphpyp33up.cpp:60:19: error: redeclaration of \u2018long long int A\u2019\
    \n   60 |     long long int A = 0;\n      |                   ^\n/tmp/tmphpyp33up.cpp:34:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   34 |     long\
    \ long int A = 0;\n      |                   ^\n/tmp/tmphpyp33up.cpp:61:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   61 |     long long int B =\
    \ 0;\n      |                   ^\n/tmp/tmphpyp33up.cpp:35:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   35 |     long long int B = 0;\n\
    \      |                   ^\n/tmp/tmphpyp33up.cpp:62:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   62 |     long long int C = 0;\n      |  \
    \                 ^\n/tmp/tmphpyp33up.cpp:36:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   36 |     long long int C = 0;\n      |        \
    \           ^\n/tmp/tmphpyp33up.cpp:63:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   63 |     long long int D = 0;\n      |                \
    \   ^\n/tmp/tmphpyp33up.cpp:37:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   37 |     long long int D = 0;\n      |                   ^\n\
    /tmp/tmphpyp33up.cpp:64:19: error: redeclaration of \u2018long long int E\u2019\
    \n   64 |     long long int E = 0;\n      |                   ^\n/tmp/tmphpyp33up.cpp:38:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   38 |     long\
    \ long int E = 0;\n      |                   ^\n/tmp/tmphpyp33up.cpp:65:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   65 |     long long int F =\
    \ 0;\n      |                   ^\n/tmp/tmphpyp33up.cpp:39:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   39 |     long long int F = 0;\n\
    \      |                   ^\n/tmp/tmphpyp33up.cpp:66:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   66 |     long long int G = 0;\n      |  \
    \                 ^\n/tmp/tmphpyp33up.cpp:40:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   40 |     long long int G = 0;\n      |        \
    \           ^\n/tmp/tmphpyp33up.cpp:67:19: error: "
  stdout: ''
  timestamp: 1660099762
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    while (b < a) {\n        if (a % b == 0 && a % c == 0 &&\
    \ a % d == 0) {\n            return true;\n        }\n        b += 2;\n      \
    \  c += 2;\n        d += 2;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpvouyjn9a: /tmp/tmpvouyjn9a.cpp:23: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099760
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int res = 0;\n    while (b <= a) {\n        if\
    \ (a % b == 0 && a % c == 0 && a % d == 0) {\n            res = 1;\n         \
    \   break;\n        }\n        b += 2;\n        c += 2;\n        d += 2;\n   \
    \ }\n    return res;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpyg2onx_6: /tmp/tmpyg2onx_6.cpp:25: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099763
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int n = 3,\
    \ m = 2;\n    long long int count = 0;\n    while (n * m <= a) {\n        if (a\
    \ % n == 0 && a % m == 0) {\n            count++;\n        }\n        m++;\n \
    \       n++;\n    }\n    if (count == 3) {\n        return true;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp3gz37xni: /tmp/tmp3gz37xni.cpp:26: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099763
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    while (b <= a) {\n        if (a % b == 0 && a % c == 0 &&\
    \ a % d == 0) {\n            return true;\n        }\n        b += 2;\n      \
    \  c += 2;\n        d += 2;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpzo2qmm7h: /tmp/tmpzo2qmm7h.cpp:23: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099761
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = a;\n\
    \    long long int c = 0;\n    long long int d = 0;\n    long long int e = 0;\n\
    \    long long int f = 0;\n    long long int g = 0;\n    long long int h = 0;\n\
    \    long long int i = 0;\n    long long int j = 0;\n    long long int k = 0;\n\
    \    long long int l = 0;\n    long long int m = 0;\n    long long int n = 0;\n\
    \    long long int o = 0;\n    long long int p = 0;\n    long long int q = 0;\n\
    \    long long int r = 0;\n    long long int s = 0;\n    long long int t = 0;\n\
    \    long long int u = 0;\n    long long int v = 0;\n    long long int w = 0;\n\
    \    long long int x = 0;\n    long long int y = 0;\n    long long int z = 0;\n\
    \    long long int A = 0;\n    long long int B = 0;\n    long long int C = 0;\n\
    \    long long int D = 0;\n    long long int E = 0;\n    long long int F = 0;\n\
    \    long long int G = 0;\n    long long int H = 0;\n    long long int I = 0;\n\
    \    long long int J = 0;\n    long long int K = 0;\n    long long int L = 0;\n\
    \    long long int M = 0;\n    long long int N = 0;\n    long long int O = 0;\n\
    \    long long int P = 0;\n    long long int Q = 0;\n    long long int R = 0;\n\
    \    long long int S = 0;\n    long long int T = 0;\n    long long int U = 0;\n\
    \    long long int V = 0;\n    long long int W = 0;\n    long long int X = 0;\n\
    \    long long int Y = 0;\n    long long int Z = 0;\n    long long int A2 = 0;\n\
    \    long long int B2 = 0;\n    long long int C2 = 0;\n    long long int D2 =\
    \ 0;\n    long long int E2 = 0;\n    long long int F2 = 0;\n    long long int\
    \ G2 = 0;\n    long long int H2 = 0;\n    long long int I2 = 0;\n    long long\
    \ int J2 = 0;\n    long long int K2 = 0;\n    long long int L2 = 0;\n    long\
    \ long int M2 = 0;\n    long long int N2 = 0;\n    long long int O2 = 0;\n   \
    \ long long int P2 = 0;\n    long long int Q2 = 0;\n    long long int R2 = 0;\n\
    \    long long int S2 = 0;\n    long long int T2 = 0;\n    long long int U2 =\
    \ 0;\n    long long int V2 = 0;\n    long long int \n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp44_i1278.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmp44_i1278.cpp:83:1: error: expected unqualified-id before \u2018}\u2019\
    \ token\n   83 | }\n      | ^\n/tmp/tmp44_i1278.cpp:83:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660099762
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    while(c <= a) {\n        if(a%c == 0) {\n            if(a%d\
    \ == 0) {\n                if(a%b == 0) {\n                    return true;\n\
    \                }\n                else {\n                    return false;\n\
    \                }\n            }\n            else {\n                return\
    \ false;\n            }\n        }\n        else {\n            return false;\n\
    \        }\n        b += 2;\n        c += 2;\n        d += 2;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpozdu29wr: /tmp/tmpozdu29wr.cpp:36: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099763
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int result = 1;\n    long long int temp;\n    while(a\
    \ != 0) {\n        temp = a;\n        a = a % b;\n        result = result * temp;\n\
    \        b = c * b;\n        c = d * c;\n        d = temp;\n    }\n    return\
    \ (result == 1);\n}\nint main() {\n    auto candidate = is_multiply_prime;\n \
    \   assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660099763
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = a;\n\
    \    long long int c = 1;\n    long long int d = 1;\n    long long int e = 1;\n\
    \    long long int f = 0;\n    long long int g = 0;\n    long long int h = 0;\n\
    \    long long int i = 0;\n    long long int j = 0;\n    long long int k = 0;\n\
    \    long long int l = 0;\n    long long int m = 0;\n    long long int n = 0;\n\
    \    long long int o = 0;\n    long long int p = 0;\n    long long int q = 0;\n\
    \    long long int r = 0;\n    long long int s = 0;\n    long long int t = 0;\n\
    \    long long int u = 0;\n    long long int v = 0;\n    long long int w = 0;\n\
    \    long long int x = 0;\n    long long int y = 0;\n    long long int z = 0;\n\
    \    long long int A = 0;\n    long long int B = 0;\n    long long int C = 0;\n\
    \    long long int D = 0;\n    long long int E = 0;\n    long long int F = 0;\n\
    \    long long int G = 0;\n    long long int H = 0;\n    long long int I = 0;\n\
    \    long long int J = 0;\n    long long int K = 0;\n    long long int L = 0;\n\
    \    long long int M = 0;\n    long long int N = 0;\n    long long int O = 0;\n\
    \    long long int P = 0;\n    long long int Q = 0;\n    long long int R = 0;\n\
    \    long long int S = 0;\n    long long int T = 0;\n    long long int U = 0;\n\
    \    long long int V = 0;\n    long long int W = 0;\n    long long int X = 0;\n\
    \    long long int Y = 0;\n    long long int Z = 0;\n    long long int A = 0;\n\
    \    long long int B = 0;\n    long long int C = 0;\n    long long int D = 0;\n\
    \    long long int E = 0;\n    long long int F = 0;\n    long long int G = 0;\n\
    \    long long int H = 0;\n    long long int I = 0;\n    long long int J = 0;\n\
    \    long long int K = 0;\n    long long int L = 0;\n    long long int M = 0;\n\
    \    long long int N = 0;\n    long long int O = 0;\n    long long int P = 0;\n\
    \    long long int Q = 0;\n    long long int R = 0;\n    long long int S = 0;\n\
    \    long long int T = 0;\n    long long int U = 0;\n    long long int V = 0;\n\
    \    long long int \n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpa48wm216.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpa48wm216.cpp:60:19: error: redeclaration of \u2018long long int A\u2019\
    \n   60 |     long long int A = 0;\n      |                   ^\n/tmp/tmpa48wm216.cpp:34:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   34 |     long\
    \ long int A = 0;\n      |                   ^\n/tmp/tmpa48wm216.cpp:61:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   61 |     long long int B =\
    \ 0;\n      |                   ^\n/tmp/tmpa48wm216.cpp:35:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   35 |     long long int B = 0;\n\
    \      |                   ^\n/tmp/tmpa48wm216.cpp:62:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   62 |     long long int C = 0;\n      |  \
    \                 ^\n/tmp/tmpa48wm216.cpp:36:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   36 |     long long int C = 0;\n      |        \
    \           ^\n/tmp/tmpa48wm216.cpp:63:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   63 |     long long int D = 0;\n      |                \
    \   ^\n/tmp/tmpa48wm216.cpp:37:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   37 |     long long int D = 0;\n      |                   ^\n\
    /tmp/tmpa48wm216.cpp:64:19: error: redeclaration of \u2018long long int E\u2019\
    \n   64 |     long long int E = 0;\n      |                   ^\n/tmp/tmpa48wm216.cpp:38:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   38 |     long\
    \ long int E = 0;\n      |                   ^\n/tmp/tmpa48wm216.cpp:65:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   65 |     long long int F =\
    \ 0;\n      |                   ^\n/tmp/tmpa48wm216.cpp:39:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   39 |     long long int F = 0;\n\
    \      |                   ^\n/tmp/tmpa48wm216.cpp:66:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   66 |     long long int G = 0;\n      |  \
    \                 ^\n/tmp/tmpa48wm216.cpp:40:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   40 |     long long int G = 0;\n      |        \
    \           ^\n/tmp/tmpa48wm216.cpp:67:19: error: "
  stdout: ''
  timestamp: 1660099760
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int temp;\n    while(a != 0) {\n        temp =\
    \ a;\n        a = a % b;\n        b = temp;\n        temp = a;\n        a = a\
    \ % c;\n        c = temp;\n        temp = a;\n        a = a % d;\n        d =\
    \ temp;\n    }\n    if(b == c && b == d)\n        return true;\n    return false;\n\
    }\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmplcwlztai: /tmp/tmplcwlztai.cpp:29: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099763
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = a;\n\
    \    long long int c = a;\n    long long int d = a;\n    long long int e = a;\n\
    \    long long int f = a;\n    long long int g = a;\n    long long int h = a;\n\
    \    long long int i = a;\n    long long int j = a;\n    long long int k = a;\n\
    \    long long int l = a;\n    long long int m = a;\n    long long int n = a;\n\
    \    long long int o = a;\n    long long int p = a;\n    long long int q = a;\n\
    \    long long int r = a;\n    long long int s = a;\n    long long int t = a;\n\
    \    long long int u = a;\n    long long int v = a;\n    long long int w = a;\n\
    \    long long int x = a;\n    long long int y = a;\n    long long int z = a;\n\
    \    long long int a = a;\n    long long int b = a;\n    long long int c = a;\n\
    \    long long int d = a;\n    long long int e = a;\n    long long int f = a;\n\
    \    long long int g = a;\n    long long int h = a;\n    long long int i = a;\n\
    \    long long int j = a;\n    long long int k = a;\n    long long int l = a;\n\
    \    long long int m = a;\n    long long int n = a;\n    long long int o = a;\n\
    \    long long int p = a;\n    long long int q = a;\n    long long int r = a;\n\
    \    long long int s = a;\n    long long int t = a;\n    long long int u = a;\n\
    \    long long int v = a;\n    long long int w = a;\n    long long int x = a;\n\
    \    long long int y = a;\n    long long int z = a;\n    long long int a = a;\n\
    \    long long int b = a;\n    long long int c = a;\n    long long int d = a;\n\
    \    long long int e = a;\n    long long int f = a;\n    long long int g = a;\n\
    \    long long int h = a;\n    long long int i = a;\n    long long int j = a;\n\
    \    long long int k = a;\n    long long int l = a;\n    long long int m = a;\n\
    \    long long int n = a;\n    long long int o = a;\n    long long int p = a;\n\
    \    long long int q = a;\n    long long int r = a;\n    long long int s = a;\n\
    \    long long int t = a;\n    long long int u = a;\n    long long int v = \n\
    }\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp32i26s34.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmp32i26s34.cpp:34:19: error: declaration of \u2018long long int a\u2019\
    \ shadows a parameter\n   34 |     long long int a = a;\n      |             \
    \      ^\n/tmp/tmp32i26s34.cpp:35:19: error: redeclaration of \u2018long long\
    \ int b\u2019\n   35 |     long long int b = a;\n      |                   ^\n\
    /tmp/tmp32i26s34.cpp:9:19: note: \u2018long long int b\u2019 previously declared\
    \ here\n    9 |     long long int b = a;\n      |                   ^\n/tmp/tmp32i26s34.cpp:36:19:\
    \ error: redeclaration of \u2018long long int c\u2019\n   36 |     long long int\
    \ c = a;\n      |                   ^\n/tmp/tmp32i26s34.cpp:10:19: note: \u2018\
    long long int c\u2019 previously declared here\n   10 |     long long int c =\
    \ a;\n      |                   ^\n/tmp/tmp32i26s34.cpp:37:19: error: redeclaration\
    \ of \u2018long long int d\u2019\n   37 |     long long int d = a;\n      |  \
    \                 ^\n/tmp/tmp32i26s34.cpp:11:19: note: \u2018long long int d\u2019\
    \ previously declared here\n   11 |     long long int d = a;\n      |        \
    \           ^\n/tmp/tmp32i26s34.cpp:38:19: error: redeclaration of \u2018long\
    \ long int e\u2019\n   38 |     long long int e = a;\n      |                \
    \   ^\n/tmp/tmp32i26s34.cpp:12:19: note: \u2018long long int e\u2019 previously\
    \ declared here\n   12 |     long long int e = a;\n      |                   ^\n\
    /tmp/tmp32i26s34.cpp:39:19: error: redeclaration of \u2018long long int f\u2019\
    \n   39 |     long long int f = a;\n      |                   ^\n/tmp/tmp32i26s34.cpp:13:19:\
    \ note: \u2018long long int f\u2019 previously declared here\n   13 |     long\
    \ long int f = a;\n      |                   ^\n/tmp/tmp32i26s34.cpp:40:19: error:\
    \ redeclaration of \u2018long long int g\u2019\n   40 |     long long int g =\
    \ a;\n      |                   ^\n/tmp/tmp32i26s34.cpp:14:19: note: \u2018long\
    \ long int g\u2019 previously declared here\n   14 |     long long int g = a;\n\
    \      |                   ^\n/tmp/tmp32i26s34.cpp:41:19: error: redeclaration\
    \ of \u2018long long int h\u2019\n   41 |     long long int h = a;\n      |  \
    \                 ^\n/tmp/tmp32i26s34.cpp:15:1"
  stdout: ''
  timestamp: 1660099762
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = a;\n\
    \    long long int c = 1;\n    long long int d = 1;\n    long long int e = 1;\n\
    \    long long int f = 0;\n    long long int g = 0;\n    long long int h = 0;\n\
    \    long long int i = 0;\n    long long int j = 0;\n    long long int k = 0;\n\
    \    long long int l = 0;\n    long long int m = 0;\n    long long int n = 0;\n\
    \    long long int o = 0;\n    long long int p = 0;\n    long long int q = 0;\n\
    \    long long int r = 0;\n    long long int s = 0;\n    long long int t = 0;\n\
    \    long long int u = 0;\n    long long int v = 0;\n    long long int w = 0;\n\
    \    long long int x = 0;\n    long long int y = 0;\n    long long int z = 0;\n\
    \    long long int aa = 0;\n    long long int bb = 0;\n    long long int cc =\
    \ 0;\n    long long int dd = 0;\n    long long int ee = 0;\n    long long int\
    \ ff = 0;\n    long long int gg = 0;\n    long long int hh = 0;\n    long long\
    \ int ii = 0;\n    long long int jj = 0;\n    long long int kk = 0;\n    long\
    \ long int ll = 0;\n    long long int mm = 0;\n    long long int nn = 0;\n   \
    \ long long int oo = 0;\n    long long int pp = 0;\n    long long int qq = 0;\n\
    \    long long int rr = 0;\n    long long int ss = 0;\n    long long int tt =\
    \ 0;\n    long long int uu = 0;\n    long long int vv = 0;\n    long long int\
    \ ww = 0;\n    long long int xx = 0;\n    long long int yy = 0;\n    long long\
    \ int zz = 0;\n    long long int aaa = 0;\n    long long int bbb = 0;\n    long\
    \ long int ccc = 0;\n    long long int ddd = 0;\n    long long int eee = 0;\n\
    \    long long int fff = 0;\n    long long int ggg = 0;\n    long long int hhh\
    \ = 0;\n    long long int iii = 0;\n    long long int jjj = 0;\n    long long\
    \ int kkk = 0;\n    long long int lll = 0;\n    long long int mmm = 0;\n    long\
    \ long int nnn = 0;\n    long long int ooo = 0;\n    long long int ppp = 0;\n\
    \    long long int qqq = 0;\n    long long int rrr = 0;\n    long long int ss\
    \ = 0;\n    long long int ttt = 0;\n    long \n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzt6mm3_z.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpzt6mm3_z.cpp:78:19: error: redeclaration of \u2018long long int ss\u2019\
    \n   78 |     long long int ss = 0;\n      |                   ^~\n/tmp/tmpzt6mm3_z.cpp:52:19:\
    \ note: \u2018long long int ss\u2019 previously declared here\n   52 |     long\
    \ long int ss = 0;\n      |                   ^~\n/tmp/tmpzt6mm3_z.cpp:81:1: error:\
    \ expected unqualified-id before \u2018}\u2019 token\n   81 | }\n      | ^\n/tmp/tmpzt6mm3_z.cpp:81:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660099762
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = a;\n\
    \    long long int c = 1;\n    long long int d = 1;\n    long long int e = 1;\n\
    \    long long int f = 1;\n    long long int g = 1;\n    long long int h = 1;\n\
    \    long long int i = 1;\n    long long int j = 1;\n    long long int k = 1;\n\
    \    long long int l = 1;\n    long long int m = 1;\n    long long int n = 1;\n\
    \    long long int o = 1;\n    long long int p = 1;\n    long long int q = 1;\n\
    \    long long int r = 1;\n    long long int s = 1;\n    long long int t = 1;\n\
    \    long long int u = 1;\n    long long int v = 1;\n    long long int w = 1;\n\
    \    long long int x = 1;\n    long long int y = 1;\n    long long int z = 1;\n\
    \    long long int a = 1;\n    long long int b = 1;\n    long long int c = 1;\n\
    \    long long int d = 1;\n    long long int e = 1;\n    long long int f = 1;\n\
    \    long long int g = 1;\n    long long int h = 1;\n    long long int i = 1;\n\
    \    long long int j = 1;\n    long long int k = 1;\n    long long int l = 1;\n\
    \    long long int m = 1;\n    long long int n = 1;\n    long long int o = 1;\n\
    \    long long int p = 1;\n    long long int q = 1;\n    long long int r = 1;\n\
    \    long long int s = 1;\n    long long int t = 1;\n    long long int u = 1;\n\
    \    long long int v = 1;\n    long long int w = 1;\n    long long int x = 1;\n\
    \    long long int y = 1;\n    long long int z = 1;\n    long long int a = 1;\n\
    \    long long int b = 1;\n    long long int c = 1;\n    long long int d = 1;\n\
    \    long long int e = 1;\n    long long int f = 1;\n    long long int g = 1;\n\
    \    long long int h = 1;\n    long long int i = 1;\n    long long int j = 1;\n\
    \    long long int k = 1;\n    long long int l = 1;\n    long long int m = 1;\n\
    \    long long int n = 1;\n    long long int o = 1;\n    long long int p = 1;\n\
    \    long long int q = 1;\n    long long int r = 1;\n    long long int s = 1;\n\
    \    long long int t = 1;\n    long long int u = 1;\n    long long int v = 1;\n\
    \    \n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpg252gt_c.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpg252gt_c.cpp:34:19: error: declaration of \u2018long long int a\u2019\
    \ shadows a parameter\n   34 |     long long int a = 1;\n      |             \
    \      ^\n/tmp/tmpg252gt_c.cpp:35:19: error: redeclaration of \u2018long long\
    \ int b\u2019\n   35 |     long long int b = 1;\n      |                   ^\n\
    /tmp/tmpg252gt_c.cpp:9:19: note: \u2018long long int b\u2019 previously declared\
    \ here\n    9 |     long long int b = a;\n      |                   ^\n/tmp/tmpg252gt_c.cpp:36:19:\
    \ error: redeclaration of \u2018long long int c\u2019\n   36 |     long long int\
    \ c = 1;\n      |                   ^\n/tmp/tmpg252gt_c.cpp:10:19: note: \u2018\
    long long int c\u2019 previously declared here\n   10 |     long long int c =\
    \ 1;\n      |                   ^\n/tmp/tmpg252gt_c.cpp:37:19: error: redeclaration\
    \ of \u2018long long int d\u2019\n   37 |     long long int d = 1;\n      |  \
    \                 ^\n/tmp/tmpg252gt_c.cpp:11:19: note: \u2018long long int d\u2019\
    \ previously declared here\n   11 |     long long int d = 1;\n      |        \
    \           ^\n/tmp/tmpg252gt_c.cpp:38:19: error: redeclaration of \u2018long\
    \ long int e\u2019\n   38 |     long long int e = 1;\n      |                \
    \   ^\n/tmp/tmpg252gt_c.cpp:12:19: note: \u2018long long int e\u2019 previously\
    \ declared here\n   12 |     long long int e = 1;\n      |                   ^\n\
    /tmp/tmpg252gt_c.cpp:39:19: error: redeclaration of \u2018long long int f\u2019\
    \n   39 |     long long int f = 1;\n      |                   ^\n/tmp/tmpg252gt_c.cpp:13:19:\
    \ note: \u2018long long int f\u2019 previously declared here\n   13 |     long\
    \ long int f = 1;\n      |                   ^\n/tmp/tmpg252gt_c.cpp:40:19: error:\
    \ redeclaration of \u2018long long int g\u2019\n   40 |     long long int g =\
    \ 1;\n      |                   ^\n/tmp/tmpg252gt_c.cpp:14:19: note: \u2018long\
    \ long int g\u2019 previously declared here\n   14 |     long long int g = 1;\n\
    \      |                   ^\n/tmp/tmpg252gt_c.cpp:41:19: error: redeclaration\
    \ of \u2018long long int h\u2019\n   41 |     long long int h = 1;\n      |  \
    \                 ^\n/tmp/tmpg252gt_c.cpp:15:1"
  stdout: ''
  timestamp: 1660099763
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5;\n    while (b < a) {\n        if (a % b == 0) {\n            while (c\
    \ % b == 0) {\n                c = c + 1;\n            }\n            if (c %\
    \ b == 0) {\n                return true;\n            }\n        }\n        b\
    \ = b + 1;\n    }\n    return false;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp2vvuu6a4: /tmp/tmp2vvuu6a4.cpp:26: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099763
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    while(c <= a) {\n        if(a%c == 0 && c != d)\n       \
    \     return false;\n        c += 2;\n    }\n    return true;\n}\nint main() {\n\
    \    auto candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n\
    \    assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpc46zbgjy: /tmp/tmpc46zbgjy.cpp:20: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099763
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 0;\n\
    \    long long int c = 0;\n    long long int d = 0;\n    long long int e = 0;\n\
    \    long long int f = 0;\n    long long int g = 0;\n    long long int h = 0;\n\
    \    long long int i = 0;\n    long long int j = 0;\n    long long int k = 0;\n\
    \    long long int l = 0;\n    long long int m = 0;\n    long long int n = 0;\n\
    \    long long int o = 0;\n    long long int p = 0;\n    long long int q = 0;\n\
    \    long long int r = 0;\n    long long int s = 0;\n    long long int t = 0;\n\
    \    long long int u = 0;\n    long long int v = 0;\n    long long int w = 0;\n\
    \    long long int x = 0;\n    long long int y = 0;\n    long long int z = 0;\n\
    \    long long int A = 0;\n    long long int B = 0;\n    long long int C = 0;\n\
    \    long long int D = 0;\n    long long int E = 0;\n    long long int F = 0;\n\
    \    long long int G = 0;\n    long long int H = 0;\n    long long int I = 0;\n\
    \    long long int J = 0;\n    long long int K = 0;\n    long long int L = 0;\n\
    \    long long int M = 0;\n    long long int N = 0;\n    long long int O = 0;\n\
    \    long long int P = 0;\n    long long int Q = 0;\n    long long int R = 0;\n\
    \    long long int S = 0;\n    long long int T = 0;\n    long long int U = 0;\n\
    \    long long int V = 0;\n    long long int W = 0;\n    long long int X = 0;\n\
    \    long long int Y = 0;\n    long long int Z = 0;\n    long long int A = 0;\n\
    \    long long int B = 0;\n    long long int C = 0;\n    long long int D = 0;\n\
    \    long long int E = 0;\n    long long int F = 0;\n    long long int G = 0;\n\
    \    long long int H = 0;\n    long long int I = 0;\n    long long int J = 0;\n\
    \    long long int K = 0;\n    long long int L = 0;\n    long long int M = 0;\n\
    \    long long int N = 0;\n    long long int O = 0;\n    long long int P = 0;\n\
    \    long long int Q = 0;\n    long long int R = 0;\n    long long int S = 0;\n\
    \    long long int T = 0;\n    long long int U = 0;\n    long long int V = 0;\n\
    \    long long int \n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmphpyp33up.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmphpyp33up.cpp:60:19: error: redeclaration of \u2018long long int A\u2019\
    \n   60 |     long long int A = 0;\n      |                   ^\n/tmp/tmphpyp33up.cpp:34:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   34 |     long\
    \ long int A = 0;\n      |                   ^\n/tmp/tmphpyp33up.cpp:61:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   61 |     long long int B =\
    \ 0;\n      |                   ^\n/tmp/tmphpyp33up.cpp:35:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   35 |     long long int B = 0;\n\
    \      |                   ^\n/tmp/tmphpyp33up.cpp:62:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   62 |     long long int C = 0;\n      |  \
    \                 ^\n/tmp/tmphpyp33up.cpp:36:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   36 |     long long int C = 0;\n      |        \
    \           ^\n/tmp/tmphpyp33up.cpp:63:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   63 |     long long int D = 0;\n      |                \
    \   ^\n/tmp/tmphpyp33up.cpp:37:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   37 |     long long int D = 0;\n      |                   ^\n\
    /tmp/tmphpyp33up.cpp:64:19: error: redeclaration of \u2018long long int E\u2019\
    \n   64 |     long long int E = 0;\n      |                   ^\n/tmp/tmphpyp33up.cpp:38:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   38 |     long\
    \ long int E = 0;\n      |                   ^\n/tmp/tmphpyp33up.cpp:65:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   65 |     long long int F =\
    \ 0;\n      |                   ^\n/tmp/tmphpyp33up.cpp:39:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   39 |     long long int F = 0;\n\
    \      |                   ^\n/tmp/tmphpyp33up.cpp:66:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   66 |     long long int G = 0;\n      |  \
    \                 ^\n/tmp/tmphpyp33up.cpp:40:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   40 |     long long int G = 0;\n      |        \
    \           ^\n/tmp/tmphpyp33up.cpp:67:19: error: "
  stdout: ''
  timestamp: 1660099762
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5;\n    long long int d = 2;\n    long long int e = 2;\n    long long int\
    \ f = 3;\n    long long int g = 5;\n    long long int h = 2;\n    long long int\
    \ i = 2;\n    long long int j = 3;\n    long long int k = 5;\n    long long int\
    \ l = 2;\n    long long int m = 2;\n    long long int n = 2;\n    long long int\
    \ o = 2;\n    long long int p = 2;\n    long long int q = 3;\n    long long int\
    \ r = 2;\n    long long int s = 2;\n    long long int t = 2;\n    long long int\
    \ u = 2;\n    long long int v = 3;\n    long long int w = 5;\n    long long int\
    \ x = 2;\n    long long int y = 2;\n    long long int z = 2;\n    long long int\
    \ A = a;\n    long long int B = a;\n    long long int C = a;\n    long long int\
    \ D = a;\n    long long int E = a;\n    long long int F = a;\n    long long int\
    \ G = a;\n    long long int H = a;\n    long long int I = a;\n    long long int\
    \ J = a;\n    long long int K = a;\n    long long int L = a;\n    long long int\
    \ M = a;\n    long long int N = a;\n    long long int O = a;\n    long long int\
    \ P = a;\n    long long int Q = a;\n    long long int R = a;\n    long long int\
    \ S = a;\n    long long int T = a;\n    long long int U = a;\n    long long int\
    \ V = a;\n    long long int W = a;\n    long long int X = a;\n    long long int\
    \ Y = a;\n    long long int Z = a;\n    long long int a = a;\n    long long int\
    \ b = b;\n    long long int c = c;\n    long long int d = d;\n    long long int\
    \ e = e;\n    long long int f = f;\n    long long int g = g;\n    long long int\
    \ h = h;\n    long long int i = i;\n    long long int j = j;\n    long long int\
    \ k = k;\n    long long int l = l;\n    long long int m = m;\n    long long int\
    \ n = n;\n    long long int o = o;\n    long long int p = p;\n    long long int\
    \ q = q;\n    long long int r = r;\n    long long int s = \n}\nint main() {\n\
    \    auto candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n\
    \    assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpewvb_wcd.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpewvb_wcd.cpp:59:19: error: declaration of \u2018long long int a\u2019\
    \ shadows a parameter\n   59 |     long long int a = a;\n      |             \
    \      ^\n/tmp/tmpewvb_wcd.cpp:60:19: error: redeclaration of \u2018long long\
    \ int b\u2019\n   60 |     long long int b = b;\n      |                   ^\n\
    /tmp/tmpewvb_wcd.cpp:9:19: note: \u2018long long int b\u2019 previously declared\
    \ here\n    9 |     long long int b = 3, c = 5;\n      |                   ^\n\
    /tmp/tmpewvb_wcd.cpp:61:19: error: redeclaration of \u2018long long int c\u2019\
    \n   61 |     long long int c = c;\n      |                   ^\n/tmp/tmpewvb_wcd.cpp:9:26:\
    \ note: \u2018long long int c\u2019 previously declared here\n    9 |     long\
    \ long int b = 3, c = 5;\n      |                          ^\n/tmp/tmpewvb_wcd.cpp:62:19:\
    \ error: redeclaration of \u2018long long int d\u2019\n   62 |     long long int\
    \ d = d;\n      |                   ^\n/tmp/tmpewvb_wcd.cpp:10:19: note: \u2018\
    long long int d\u2019 previously declared here\n   10 |     long long int d =\
    \ 2;\n      |                   ^\n/tmp/tmpewvb_wcd.cpp:63:19: error: redeclaration\
    \ of \u2018long long int e\u2019\n   63 |     long long int e = e;\n      |  \
    \                 ^\n/tmp/tmpewvb_wcd.cpp:11:19: note: \u2018long long int e\u2019\
    \ previously declared here\n   11 |     long long int e = 2;\n      |        \
    \           ^\n/tmp/tmpewvb_wcd.cpp:64:19: error: redeclaration of \u2018long\
    \ long int f\u2019\n   64 |     long long int f = f;\n      |                \
    \   ^\n/tmp/tmpewvb_wcd.cpp:12:19: note: \u2018long long int f\u2019 previously\
    \ declared here\n   12 |     long long int f = 3;\n      |                   ^\n\
    /tmp/tmpewvb_wcd.cpp:65:19: error: redeclaration of \u2018long long int g\u2019\
    \n   65 |     long long int g = g;\n      |                   ^\n/tmp/tmpewvb_wcd.cpp:13:19:\
    \ note: \u2018long long int g\u2019 previously declared here\n   13 |     long\
    \ long int g = 5;\n      |                   ^\n/tmp/tmpewvb_wcd.cpp:66:19: error:\
    \ redeclaration of \u2018long long int h\u2019\n   66 |     long long int h =\
    \ h;\n      |                   ^\n/tmp/"
  stdout: ''
  timestamp: 1660099763
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    while (b <= a) {\n        if (a % b == 0 && a % c == 0 &&\
    \ a % d == 0) {\n            return true;\n        }\n        b += 2;\n      \
    \  c += 2;\n        d += 2;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpzo2qmm7h: /tmp/tmpzo2qmm7h.cpp:23: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099761
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    while (b < a) {\n        if (a % b == 0 && a % c == 0 &&\
    \ a % d == 0) {\n            return true;\n        }\n        ++b;\n        ++c;\n\
    \        ++d;\n    }\n    return false;\n}\nint main() {\n    auto candidate =\
    \ is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmpahelv5ku: /tmp/tmpahelv5ku.cpp:23: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099763
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    int count = 0;\n    for\
    \ (int i = 2; i <= a; i++) {\n        if ((a % i) == 0) {\n            count++;\n\
    \        }\n    }\n    if (count == 3) {\n        return true;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpkcx_xsd4: /tmp/tmpkcx_xsd4.cpp:23: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099763
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    while (b <= a) {\n        if (a % b == 0) {\n           \
    \ while (c <= a) {\n                if (a % c == 0) {\n                    while\
    \ (d <= a) {\n                        if (a % d == 0) {\n                    \
    \        return true;\n                        }\n                        d++;\n\
    \                    }\n                }\n                c++;\n            }\n\
    \        }\n        b++;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpwz22cjr5: /tmp/tmpwz22cjr5.cpp:33: int main(): Assertion `candidate((10))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660099763
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5;\n    while (b <= a) {\n        if ((a % b) == 0) {\n            while\
    \ (c <= a) {\n                if ((a % c) == 0) {\n                    return\
    \ false;\n                }\n                c++;\n            }\n        }\n\
    \        b++;\n    }\n    return true;\n}\nint main() {\n    auto candidate =\
    \ is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmpanmbiscx: /tmp/tmpanmbiscx.cpp:26: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099763
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5;\n    long long int d = 2;\n    while (b <= a) {\n        if (a % b ==\
    \ 0) {\n            while (c <= a / b) {\n                if (a % c == 0) {\n\
    \                    return false;\n                }\n                c++;\n\
    \            }\n        }\n        b++;\n    }\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n\
    \    assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpzfdwm_dq: /tmp/tmpzfdwm_dq.cpp:26: int main(): Assertion `candidate((5))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660099763
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int p = 2;\n    long long int q = 3;\n    long\
    \ long int r = 5;\n    long long int s = 7;\n    long long int t = 2;\n    long\
    \ long int u = 3;\n    long long int v = 5;\n    long long int w = 7;\n    long\
    \ long int x = 2;\n    long long int y = 3;\n    long long int z = 5;\n    long\
    \ long int a = 1;\n    long long int b = 1;\n    long long int c = 1;\n    long\
    \ long int d = 1;\n    long long int e = 1;\n    long long int f = 1;\n    long\
    \ long int g = 1;\n    long long int h = 1;\n    long long int i = 1;\n    long\
    \ long int j = 1;\n    long long int k = 1;\n    long long int l = 1;\n    long\
    \ long int m = 1;\n    long long int n = 1;\n    long long int o = 1;\n    long\
    \ long int p = 1;\n    long long int q = 1;\n    long long int r = 1;\n    long\
    \ long int s = 1;\n    long long int t = 1;\n    long long int u = 1;\n    long\
    \ long int v = 1;\n    long long int w = 1;\n    long long int x = 1;\n    long\
    \ long int y = 1;\n    long long int z = 1;\n    long long int a = 1;\n    long\
    \ long int b = 1;\n    long long int c = 1;\n    long long int d = 1;\n    long\
    \ long int e = 1;\n    long long int f = 1;\n    long long int g = 1;\n    long\
    \ long int h = 1;\n    long long int i = 1;\n    long long int j = 1;\n    long\
    \ long int k = 1;\n    long long int l = 1;\n    long long int m = 1;\n    long\
    \ long int n = 1;\n    long long int o = 1;\n    long long int p = 1;\n    long\
    \ long int q = 1;\n    long long int r = 1;\n    long long int s = 1;\n    long\
    \ long int t = 1;\n    long long int u = 1;\n    long long int v = 1;\n    long\
    \ long int w = 1;\n    long long int x = 1;\n    long long int y = 1;\n    long\
    \ long int z = 1;\n    long long int a = 1;\n    long long int b = 1;\n    long\
    \ long int c = 1;\n    long long int d = 1;\n    long long int e = 1;\n    long\
    \ long int f = 1;\n    long long int g = 1;\n    long long int h = 1;\n    long\
    \ long \n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4g8l7q53.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmp4g8l7q53.cpp:21:19: error: declaration of \u2018long long int a\u2019\
    \ shadows a parameter\n   21 |     long long int a = 1;\n      |             \
    \      ^\n/tmp/tmp4g8l7q53.cpp:22:19: error: redeclaration of \u2018long long\
    \ int b\u2019\n   22 |     long long int b = 1;\n      |                   ^\n\
    /tmp/tmp4g8l7q53.cpp:9:19: note: \u2018long long int b\u2019 previously declared\
    \ here\n    9 |     long long int b = 3, c = 5, d = 7;\n      |              \
    \     ^\n/tmp/tmp4g8l7q53.cpp:23:19: error: redeclaration of \u2018long long int\
    \ c\u2019\n   23 |     long long int c = 1;\n      |                   ^\n/tmp/tmp4g8l7q53.cpp:9:26:\
    \ note: \u2018long long int c\u2019 previously declared here\n    9 |     long\
    \ long int b = 3, c = 5, d = 7;\n      |                          ^\n/tmp/tmp4g8l7q53.cpp:24:19:\
    \ error: redeclaration of \u2018long long int d\u2019\n   24 |     long long int\
    \ d = 1;\n      |                   ^\n/tmp/tmp4g8l7q53.cpp:9:33: note: \u2018\
    long long int d\u2019 previously declared here\n    9 |     long long int b =\
    \ 3, c = 5, d = 7;\n      |                                 ^\n/tmp/tmp4g8l7q53.cpp:36:19:\
    \ error: redeclaration of \u2018long long int p\u2019\n   36 |     long long int\
    \ p = 1;\n      |                   ^\n/tmp/tmp4g8l7q53.cpp:10:19: note: \u2018\
    long long int p\u2019 previously declared here\n   10 |     long long int p =\
    \ 2;\n      |                   ^\n/tmp/tmp4g8l7q53.cpp:37:19: error: redeclaration\
    \ of \u2018long long int q\u2019\n   37 |     long long int q = 1;\n      |  \
    \                 ^\n/tmp/tmp4g8l7q53.cpp:11:19: note: \u2018long long int q\u2019\
    \ previously declared here\n   11 |     long long int q = 3;\n      |        \
    \           ^\n/tmp/tmp4g8l7q53.cpp:38:19: error: redeclaration of \u2018long\
    \ long int r\u2019\n   38 |     long long int r = 1;\n      |                \
    \   ^\n/tmp/tmp4g8l7q53.cpp:12:19: note: \u2018long long int r\u2019 previously\
    \ declared here\n   12 |     long long int r = 5;\n      |                   ^\n\
    /tmp/tmp4g8l7q53.cpp:39:19: error: redeclaration of \u2018long long int s\u2019\
    \n   39 |     long long int"
  stdout: ''
  timestamp: 1660099763
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    while (b <= a) {\n        if (a % b == 0 && a % c == 0 &&\
    \ a % d == 0) {\n            return true;\n        }\n        b += 2;\n      \
    \  c += 2;\n        d += 2;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpzo2qmm7h: /tmp/tmpzo2qmm7h.cpp:23: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099761
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = a%1000;\n\
    \    long long int c = a%1000;\n    long long int d = a%1000;\n    long long int\
    \ e1 = a%1000;\n    long long int e2 = a%1000;\n    long long int e3 = a%1000;\n\
    \    long long int f1 = a%1000;\n    long long int f2 = a%1000;\n    long long\
    \ int f3 = a%1000;\n    long long int g1 = a%1000;\n    long long int g2 = a%1000;\n\
    \    long long int g3 = a%1000;\n    long long int h1 = a%1000;\n    long long\
    \ int h2 = a%1000;\n    long long int h3 = a%1000;\n    long long int i1 = a%1000;\n\
    \    long long int i2 = a%1000;\n    long long int i3 = a%1000;\n    long long\
    \ int j1 = a%1000;\n    long long int j2 = a%1000;\n    long long int j3 = a%1000;\n\
    \    long long int k1 = a%1000;\n    long long int k2 = a%1000;\n    long long\
    \ int k3 = a%1000;\n    long long int l1 = a%1000;\n    long long int l2 = a%1000;\n\
    \    long long int l3 = a%1000;\n    long long int m1 = a%1000;\n    long long\
    \ int m2 = a%1000;\n    long long int m3 = a%1000;\n    long long int n1 = a%1000;\n\
    \    long long int n2 = a%1000;\n    long long int n3 = a%1000;\n    long long\
    \ int o1 = a%1000;\n    long long int o2 = a%1000;\n    long long int o3 = a%1000;\n\
    \    long long int p1 = a%1000;\n    long long int p2 = a%1000;\n    long long\
    \ int p3 = a%1000;\n    long long int q1 = a%1000;\n    long long int q2 = a%1000;\n\
    \    long long int q3 = a%1000;\n    long long int r1 = a%1000;\n    long long\
    \ int r2 = a%1000;\n    long long int r3 = a%1000;\n    long long int s1 = a%1000;\n\
    \    long long int s2 = a%1000;\n    long long int s3 = a%1000;\n    long long\
    \ \n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpahzn__ce.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpahzn__ce.cpp:58:1: error: expected unqualified-id before \u2018}\u2019\
    \ token\n   58 | }\n      | ^\n/tmp/tmpahzn__ce.cpp:58:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660099763
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    int count = 0;\n    for\
    \ (int i = 2; i <= a; i++) {\n        if ((a % i) == 0) {\n            count++;\n\
    \        }\n    }\n    if (count == 3) {\n        return true;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpkcx_xsd4: /tmp/tmpkcx_xsd4.cpp:23: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099763
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    while (b <= a) {\n        if (a % b == 0 && a % c == 0 &&\
    \ a % d == 0) {\n            return true;\n        }\n        b += 2;\n      \
    \  c += 2;\n        d += 2;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpzo2qmm7h: /tmp/tmpzo2qmm7h.cpp:23: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099761
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long b = 3, c = 5, d\
    \ = 7;\n    while (b <= a) {\n        if (a % b == 0 && b % c == 0) {\n      \
    \      if (a % c == 0 && b % d == 0) {\n                return true;\n       \
    \     }\n        }\n        b += 2;\n        c += 2;\n        d += 2;\n    }\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmph22198q7: /tmp/tmph22198q7.cpp:25: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099763
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = a;\n\
    \    long long int c = 2;\n    long long int d = 2;\n    long long int e = 2;\n\
    \    long long int f = 3;\n    long long int g = 3;\n    long long int h = 3;\n\
    \    long long int i = 3;\n    long long int j = 3;\n    long long int k = 3;\n\
    \    long long int l = 3;\n    long long int m = 3;\n    long long int n = 3;\n\
    \    long long int o = 3;\n    long long int p = 3;\n    long long int q = 3;\n\
    \    long long int r = 2;\n    long long int s = 2;\n    long long int t = 2;\n\
    \    long long int u = 2;\n    long long int v = 3;\n    long long int w = 3;\n\
    \    long long int x = 2;\n    long long int y = 2;\n    long long int z = 2;\n\
    \    long long int A = 3;\n    long long int B = 3;\n    long long int C = 3;\n\
    \    long long int D = 3;\n    long long int E = 3;\n    long long int F = 3;\n\
    \    long long int G = 3;\n    long long int H = 3;\n    long long int I = 3;\n\
    \    long long int J = 3;\n    long long int K = 3;\n    long long int L = 3;\n\
    \    long long int M = 3;\n    long long int N = 3;\n    long long int O = 3;\n\
    \    long long int P = 3;\n    long long int Q = 3;\n    long long int R = 2;\n\
    \    long long int S = 2;\n    long long int T = 2;\n    long long int U = 2;\n\
    \    long long int V = 3;\n    long long int W = 3;\n    long long int X = 2;\n\
    \    long long int Y = 2;\n    long long int Z = 2;\n    long long int A = 3;\n\
    \    long long int B = 3;\n    long long int C = 3;\n    long long int D = 3;\n\
    \    long long int E = 3;\n    long long int F = 3;\n    long long int G = 3;\n\
    \    long long int H = 3;\n    long long int I = 3;\n    long long int J = 3;\n\
    \    long long int K = 3;\n    long long int L = 3;\n    long long int M = 3;\n\
    \    long long int N = 3;\n    long long int O = 3;\n    long long int P = 3;\n\
    \    long long int Q = 3;\n    long long int R = 2;\n    long long int S = 2;\n\
    \    long long int T = 2;\n    long long int U = 2;\n    long long int V = 3;\n\
    \    \n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0v6vlnjy.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmp0v6vlnjy.cpp:60:19: error: redeclaration of \u2018long long int A\u2019\
    \n   60 |     long long int A = 3;\n      |                   ^\n/tmp/tmp0v6vlnjy.cpp:34:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   34 |     long\
    \ long int A = 3;\n      |                   ^\n/tmp/tmp0v6vlnjy.cpp:61:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   61 |     long long int B =\
    \ 3;\n      |                   ^\n/tmp/tmp0v6vlnjy.cpp:35:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   35 |     long long int B = 3;\n\
    \      |                   ^\n/tmp/tmp0v6vlnjy.cpp:62:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   62 |     long long int C = 3;\n      |  \
    \                 ^\n/tmp/tmp0v6vlnjy.cpp:36:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   36 |     long long int C = 3;\n      |        \
    \           ^\n/tmp/tmp0v6vlnjy.cpp:63:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   63 |     long long int D = 3;\n      |                \
    \   ^\n/tmp/tmp0v6vlnjy.cpp:37:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   37 |     long long int D = 3;\n      |                   ^\n\
    /tmp/tmp0v6vlnjy.cpp:64:19: error: redeclaration of \u2018long long int E\u2019\
    \n   64 |     long long int E = 3;\n      |                   ^\n/tmp/tmp0v6vlnjy.cpp:38:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   38 |     long\
    \ long int E = 3;\n      |                   ^\n/tmp/tmp0v6vlnjy.cpp:65:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   65 |     long long int F =\
    \ 3;\n      |                   ^\n/tmp/tmp0v6vlnjy.cpp:39:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   39 |     long long int F = 3;\n\
    \      |                   ^\n/tmp/tmp0v6vlnjy.cpp:66:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   66 |     long long int G = 3;\n      |  \
    \                 ^\n/tmp/tmp0v6vlnjy.cpp:40:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   40 |     long long int G = 3;\n      |        \
    \           ^\n/tmp/tmp0v6vlnjy.cpp:67:19: error: "
  stdout: ''
  timestamp: 1660099763
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = a;\n\
    \    long long int c = 1;\n    long long int d = 1;\n    long long int e = 1;\n\
    \    long long int f = 1;\n    long long int g = 1;\n    long long int h = 1;\n\
    \    long long int i = 1;\n    long long int j = 1;\n    long long int k = 1;\n\
    \    long long int l = 1;\n    long long int m = 1;\n    long long int n = 1;\n\
    \    long long int o = 1;\n    long long int p = 1;\n    long long int q = 1;\n\
    \    long long int r = 1;\n    long long int s = 1;\n    long long int t = 1;\n\
    \    long long int u = 1;\n    long long int v = 1;\n    long long int w = 1;\n\
    \    long long int x = 1;\n    long long int y = 1;\n    long long int z = 1;\n\
    \    long long int a = 1;\n    long long int b = 1;\n    long long int c = 1;\n\
    \    long long int d = 1;\n    long long int e = 1;\n    long long int f = 1;\n\
    \    long long int g = 1;\n    long long int h = 1;\n    long long int i = 1;\n\
    \    long long int j = 1;\n    long long int k = 1;\n    long long int l = 1;\n\
    \    long long int m = 1;\n    long long int n = 1;\n    long long int o = 1;\n\
    \    long long int p = 1;\n    long long int q = 1;\n    long long int r = 1;\n\
    \    long long int s = 1;\n    long long int t = 1;\n    long long int u = 1;\n\
    \    long long int v = 1;\n    long long int w = 1;\n    long long int x = 1;\n\
    \    long long int y = 1;\n    long long int z = 1;\n    long long int a = 1;\n\
    \    long long int b = 1;\n    long long int c = 1;\n    long long int d = 1;\n\
    \    long long int e = 1;\n    long long int f = 1;\n    long long int g = 1;\n\
    \    long long int h = 1;\n    long long int i = 1;\n    long long int j = 1;\n\
    \    long long int k = 1;\n    long long int l = 1;\n    long long int m = 1;\n\
    \    long long int n = 1;\n    long long int o = 1;\n    long long int p = 1;\n\
    \    long long int q = 1;\n    long long int r = 1;\n    long long int s = 1;\n\
    \    long long int t = 1;\n    long long int u = 1;\n    long long int v = 1;\n\
    \    \n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpg252gt_c.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpg252gt_c.cpp:34:19: error: declaration of \u2018long long int a\u2019\
    \ shadows a parameter\n   34 |     long long int a = 1;\n      |             \
    \      ^\n/tmp/tmpg252gt_c.cpp:35:19: error: redeclaration of \u2018long long\
    \ int b\u2019\n   35 |     long long int b = 1;\n      |                   ^\n\
    /tmp/tmpg252gt_c.cpp:9:19: note: \u2018long long int b\u2019 previously declared\
    \ here\n    9 |     long long int b = a;\n      |                   ^\n/tmp/tmpg252gt_c.cpp:36:19:\
    \ error: redeclaration of \u2018long long int c\u2019\n   36 |     long long int\
    \ c = 1;\n      |                   ^\n/tmp/tmpg252gt_c.cpp:10:19: note: \u2018\
    long long int c\u2019 previously declared here\n   10 |     long long int c =\
    \ 1;\n      |                   ^\n/tmp/tmpg252gt_c.cpp:37:19: error: redeclaration\
    \ of \u2018long long int d\u2019\n   37 |     long long int d = 1;\n      |  \
    \                 ^\n/tmp/tmpg252gt_c.cpp:11:19: note: \u2018long long int d\u2019\
    \ previously declared here\n   11 |     long long int d = 1;\n      |        \
    \           ^\n/tmp/tmpg252gt_c.cpp:38:19: error: redeclaration of \u2018long\
    \ long int e\u2019\n   38 |     long long int e = 1;\n      |                \
    \   ^\n/tmp/tmpg252gt_c.cpp:12:19: note: \u2018long long int e\u2019 previously\
    \ declared here\n   12 |     long long int e = 1;\n      |                   ^\n\
    /tmp/tmpg252gt_c.cpp:39:19: error: redeclaration of \u2018long long int f\u2019\
    \n   39 |     long long int f = 1;\n      |                   ^\n/tmp/tmpg252gt_c.cpp:13:19:\
    \ note: \u2018long long int f\u2019 previously declared here\n   13 |     long\
    \ long int f = 1;\n      |                   ^\n/tmp/tmpg252gt_c.cpp:40:19: error:\
    \ redeclaration of \u2018long long int g\u2019\n   40 |     long long int g =\
    \ 1;\n      |                   ^\n/tmp/tmpg252gt_c.cpp:14:19: note: \u2018long\
    \ long int g\u2019 previously declared here\n   14 |     long long int g = 1;\n\
    \      |                   ^\n/tmp/tmpg252gt_c.cpp:41:19: error: redeclaration\
    \ of \u2018long long int h\u2019\n   41 |     long long int h = 1;\n      |  \
    \                 ^\n/tmp/tmpg252gt_c.cpp:15:1"
  stdout: ''
  timestamp: 1660099763
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int n = 3,\
    \ m = 2;\n    long long int count = 0;\n    while(n <= a) {\n        if(n % 2\
    \ == 0) {\n            while(m <= n/2) {\n                if(n % m == 0) {\n \
    \                   count++;\n                    break;\n                }\n\
    \                m++;\n            }\n        }\n        n++;\n    }\n    if(count\
    \ == 3) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n\
    \    assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpwjpe7101: /tmp/tmpwjpe7101.cpp:31: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099763
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = a *\
    \ 2;\n    long long int c = a * 3;\n    long long int d = a * 5;\n    long long\
    \ int e = (b + c) * 2;\n    long long int f = (b + c) * 3;\n    long long int\
    \ g = (b + c) * 5;\n    long long int h = (d + e) * 2;\n    long long int i =\
    \ (d + e) * 3;\n    long long int j = (d + e) * 5;\n    long long int k = (f +\
    \ g) * 2;\n    long long int l = (f + g) * 3;\n    long long int m = (f + g) *\
    \ 5;\n    long long int n = (h + i) * 2;\n    long long int o = (h + i) * 3;\n\
    \    long long int p = (h + i) * 5;\n    long long int q = (j + k) * 2;\n    long\
    \ long int r = (j + k) * 3;\n    long long int s = (j + k) * 5;\n    long long\
    \ int t = (l + m) * 2;\n    long long int u = (l + m) * 3;\n    long long int\
    \ v = (l + m) * 5;\n    long long int w = (n + o) * 2;\n    long long int x =\
    \ (n + o) * 3;\n    long long int y = (n + o) * 5;\n    long long int z = (p +\
    \ q) * 2;\n    long long int aa = (p + q) * 3;\n    long long int bb = (p + q)\
    \ * 5;\n    long long int cc = (r + s) * 2;\n    long long int dd = (r + s) *\
    \ 3;\n    long long int ee = (r + s) * 5;\n    long long int ff = (t + u) * 2;\n\
    \    long long int gg = (t + u) * 3;\n    long long int hh = (t + u) * 5;\n  \
    \  long long int ii = (v + w) * 2;\n    long long int jj = (v + w) * 3;\n    long\
    \ long int kk = (v + w) * 5;\n    long long int ll = (x + y) * 2;\n    long long\
    \ int mm = (x + y) * 3;\n    long long int nn = (x + y) * 5;\n    long long int\
    \ oo = (z + aa) * 2;\n    long long int pp = (z + aa) * 3;\n    long long int\
    \ qq = (z + aa) * 5;\n    long long int rr = (cc + dd) * 2;\n    long long int\
    \ ss = (cc + dd) * 3;\n    long long int tt = (cc + dd) * 5;\n}\nint main() {\n\
    \    auto candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n\
    \    assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpwqtzs_7a: /tmp/tmpwqtzs_7a.cpp:57: int main(): Assertion `candidate((5))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660099763
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int p = 0, q = 0;\n    long long int n = 0;\n \
    \   long long int m = 1;\n    long long int x = 1;\n    long long int y = 1;\n\
    \    long long int z = 1;\n    long long int w = 1;\n    long long int u = 1;\n\
    \    long long int v = 1;\n    long long int w = 1;\n    long long int u = 1;\n\
    \    long long int v = 1;\n    long long int w = 1;\n    long long int u = 1;\n\
    \    long long int v = 1;\n    long long int w = 1;\n    long long int u = 1;\n\
    \    long long int v = 1;\n    long long int w = 1;\n    long long int u = 1;\n\
    \    long long int v = 1;\n    long long int w = 1;\n    long long int u = 1;\n\
    \    long long int v = 1;\n    long long int w = 1;\n    long long int u = 1;\n\
    \    long long int v = 1;\n    long long int w = 1;\n    long long int u = 1;\n\
    \    long long int v = 1;\n    long long int w = 1;\n    long long int u = 1;\n\
    \    long long int v = 1;\n    long long int w = 1;\n    long long int u = 1;\n\
    \    long long int v = 1;\n    long long int w = 1;\n    long long int u = 1;\n\
    \    long long int v = 1;\n    long long int w = 1;\n    long long int u = 1;\n\
    \    long long int v = 1;\n    long long int w = 1;\n    long long int u = 1;\n\
    \    long long int v = 1;\n    long long int w = 1;\n    long long int u = 1;\n\
    \    long long int v = 1;\n    long long int w = 1;\n    long long int u = 1;\n\
    \    long long int v = 1;\n    long long int w = 1;\n    long long int u = 1;\n\
    \    long long int v = 1;\n    long long int w = 1;\n    long long int u = 1;\n\
    \    long long int v = 1;\n    long long int w = 1;\n    long long int u = 1;\n\
    \    long long int v = 1;\n    long long int w = 1;\n    long long int u = 1;\n\
    \    long long int v = 1;\n    long long int w = 1;\n    long long int u = 1;\n\
    \    long long int v = 1;\n    long long int w = 1;\n    long long int u = 1;\n\
    \    long long int v = 1;\n    long long int w = 1;\n    long long int u = 1;\n\
    \    \n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_i0ps8cz.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmp_i0ps8cz.cpp:19:19: error: redeclaration of \u2018long long int w\u2019\
    \n   19 |     long long int w = 1;\n      |                   ^\n/tmp/tmp_i0ps8cz.cpp:16:19:\
    \ note: \u2018long long int w\u2019 previously declared here\n   16 |     long\
    \ long int w = 1;\n      |                   ^\n/tmp/tmp_i0ps8cz.cpp:20:19: error:\
    \ redeclaration of \u2018long long int u\u2019\n   20 |     long long int u =\
    \ 1;\n      |                   ^\n/tmp/tmp_i0ps8cz.cpp:17:19: note: \u2018long\
    \ long int u\u2019 previously declared here\n   17 |     long long int u = 1;\n\
    \      |                   ^\n/tmp/tmp_i0ps8cz.cpp:21:19: error: redeclaration\
    \ of \u2018long long int v\u2019\n   21 |     long long int v = 1;\n      |  \
    \                 ^\n/tmp/tmp_i0ps8cz.cpp:18:19: note: \u2018long long int v\u2019\
    \ previously declared here\n   18 |     long long int v = 1;\n      |        \
    \           ^\n/tmp/tmp_i0ps8cz.cpp:22:19: error: redeclaration of \u2018long\
    \ long int w\u2019\n   22 |     long long int w = 1;\n      |                \
    \   ^\n/tmp/tmp_i0ps8cz.cpp:16:19: note: \u2018long long int w\u2019 previously\
    \ declared here\n   16 |     long long int w = 1;\n      |                   ^\n\
    /tmp/tmp_i0ps8cz.cpp:23:19: error: redeclaration of \u2018long long int u\u2019\
    \n   23 |     long long int u = 1;\n      |                   ^\n/tmp/tmp_i0ps8cz.cpp:17:19:\
    \ note: \u2018long long int u\u2019 previously declared here\n   17 |     long\
    \ long int u = 1;\n      |                   ^\n/tmp/tmp_i0ps8cz.cpp:24:19: error:\
    \ redeclaration of \u2018long long int v\u2019\n   24 |     long long int v =\
    \ 1;\n      |                   ^\n/tmp/tmp_i0ps8cz.cpp:18:19: note: \u2018long\
    \ long int v\u2019 previously declared here\n   18 |     long long int v = 1;\n\
    \      |                   ^\n/tmp/tmp_i0ps8cz.cpp:25:19: error: redeclaration\
    \ of \u2018long long int w\u2019\n   25 |     long long int w = 1;\n      |  \
    \                 ^\n/tmp/tmp_i0ps8cz.cpp:16:19: note: \u2018long long int w\u2019\
    \ previously declared here\n   16 |     long long int w = 1;\n      |        \
    \           ^\n/tmp/tmp_i0ps8cz.cpp:26:19: error: "
  stdout: ''
  timestamp: 1660099763
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int result = 1;\n    long long int temp = 0;\n\
    \    while(a != 0) {\n        temp = a % b;\n        if (temp == 0) return false;\n\
    \        result = result * temp;\n        a = a / b;\n    }\n    while(c != 1)\
    \ {\n        temp = c % d;\n        if (temp == 0) return false;\n        result\
    \ = result * temp;\n        c = c / d;\n    }\n    if (result == 1) return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpzl1yi3kt: /tmp/tmpzl1yi3kt.cpp:30: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099764
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int temp;\n    while(a != 0) {\n        temp =\
    \ a;\n        a = a % b;\n        b = temp % c;\n        c = temp % d;\n     \
    \   d = temp;\n    }\n    return a == 1;\n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660099763
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int p = 1;\n    long long int q = 1;\n    long\
    \ long int r = 1;\n    long long int s = 1;\n    long long int t = 1;\n    long\
    \ long int u = 1;\n    long long int v = 1;\n    long long int w = 1;\n    long\
    \ long int x = 1;\n    long long int y = 1;\n    long long int z = 1;\n    long\
    \ long int a = a;\n    long long int b = b;\n    long long int c = c;\n    long\
    \ long int d = d;\n    long long int p = p;\n    long long int q = q;\n    long\
    \ long int r = r;\n    long long int s = s;\n    long long int t = t;\n    long\
    \ long int u = u;\n    long long int v = v;\n    long long int w = w;\n    long\
    \ long int x = x;\n    long long int y = y;\n    long long int z = z;\n    long\
    \ long int a = a;\n    long long int b = b;\n    long long int c = c;\n    long\
    \ long int d = d;\n    long long int p = p;\n    long long int q = q;\n    long\
    \ long int r = r;\n    long long int s = s;\n    long long int t = t;\n    long\
    \ long int u = u;\n    long long int v = v;\n    long long int w = w;\n    long\
    \ long int x = x;\n    long long int y = y;\n    long long int z = z;\n    long\
    \ long int a = a;\n    long long int b = b;\n    long long int c = c;\n    long\
    \ long int d = d;\n    long long int p = p;\n    long long int q = q;\n    long\
    \ long int r = r;\n    long long int s = s;\n    long long int t = t;\n    long\
    \ long int u = u;\n    long long int v = v;\n    long long int w = w;\n    long\
    \ long int x = x;\n    long long int y = y;\n    long long int z = z;\n    long\
    \ long int a = a;\n    long long int b = b;\n    long long int c = c;\n    long\
    \ long int d = d;\n    long long int p = p;\n    long long int q = q;\n    long\
    \ long int r = r;\n    long long int s = s;\n    long long int t = t;\n    long\
    \ long int u = u;\n    long long int v = v;\n    long long int w = w;\n    long\
    \ long int x = x;\n    long long int y = \n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2dsbk98p.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmp2dsbk98p.cpp:21:19: error: declaration of \u2018long long int a\u2019\
    \ shadows a parameter\n   21 |     long long int a = a;\n      |             \
    \      ^\n/tmp/tmp2dsbk98p.cpp:22:19: error: redeclaration of \u2018long long\
    \ int b\u2019\n   22 |     long long int b = b;\n      |                   ^\n\
    /tmp/tmp2dsbk98p.cpp:9:19: note: \u2018long long int b\u2019 previously declared\
    \ here\n    9 |     long long int b = 3, c = 5, d = 7;\n      |              \
    \     ^\n/tmp/tmp2dsbk98p.cpp:23:19: error: redeclaration of \u2018long long int\
    \ c\u2019\n   23 |     long long int c = c;\n      |                   ^\n/tmp/tmp2dsbk98p.cpp:9:26:\
    \ note: \u2018long long int c\u2019 previously declared here\n    9 |     long\
    \ long int b = 3, c = 5, d = 7;\n      |                          ^\n/tmp/tmp2dsbk98p.cpp:24:19:\
    \ error: redeclaration of \u2018long long int d\u2019\n   24 |     long long int\
    \ d = d;\n      |                   ^\n/tmp/tmp2dsbk98p.cpp:9:33: note: \u2018\
    long long int d\u2019 previously declared here\n    9 |     long long int b =\
    \ 3, c = 5, d = 7;\n      |                                 ^\n/tmp/tmp2dsbk98p.cpp:25:19:\
    \ error: redeclaration of \u2018long long int p\u2019\n   25 |     long long int\
    \ p = p;\n      |                   ^\n/tmp/tmp2dsbk98p.cpp:10:19: note: \u2018\
    long long int p\u2019 previously declared here\n   10 |     long long int p =\
    \ 1;\n      |                   ^\n/tmp/tmp2dsbk98p.cpp:26:19: error: redeclaration\
    \ of \u2018long long int q\u2019\n   26 |     long long int q = q;\n      |  \
    \                 ^\n/tmp/tmp2dsbk98p.cpp:11:19: note: \u2018long long int q\u2019\
    \ previously declared here\n   11 |     long long int q = 1;\n      |        \
    \           ^\n/tmp/tmp2dsbk98p.cpp:27:19: error: redeclaration of \u2018long\
    \ long int r\u2019\n   27 |     long long int r = r;\n      |                \
    \   ^\n/tmp/tmp2dsbk98p.cpp:12:19: note: \u2018long long int r\u2019 previously\
    \ declared here\n   12 |     long long int r = 1;\n      |                   ^\n\
    /tmp/tmp2dsbk98p.cpp:28:19: error: redeclaration of \u2018long long int s\u2019\
    \n   28 |     long long int"
  stdout: ''
  timestamp: 1660099762
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int ans = 1;\n    long long int flag = 0;\n   \
    \ long long int flag2 = 0;\n    long long int flag3 = 0;\n    long long int flag4\
    \ = 0;\n    long long int flag5 = 0;\n    long long int flag6 = 0;\n    long long\
    \ int flag7 = 0;\n    long long int flag8 = 0;\n    long long int flag9 = 0;\n\
    \    long long int flag10 = 0;\n    long long int flag11 = 0;\n    long long int\
    \ flag12 = 0;\n    long long int flag13 = 0;\n    long long int flag14 = 0;\n\
    \    long long int flag15 = 0;\n    long long int flag16 = 0;\n    long long int\
    \ flag17 = 0;\n    long long int flag18 = 0;\n    long long int flag19 = 0;\n\
    \    long long int flag20 = 0;\n    long long int flag21 = 0;\n    long long int\
    \ flag22 = 0;\n    long long int flag23 = 0;\n    long long int flag24 = 0;\n\
    \    long long int flag25 = 0;\n    long long int flag26 = 0;\n    long long int\
    \ flag27 = 0;\n    long long int flag28 = 0;\n    long long int flag29 = 0;\n\
    \    long long int flag30 = 0;\n    long long int flag31 = 0;\n    long long int\
    \ flag32 = 0;\n    long long int flag33 = 0;\n    long long int flag34 = 0;\n\
    \    long long int flag35 = 0;\n    long long int flag36 = 0;\n    long long int\
    \ flag37 = 0;\n    long long int flag38 = 0;\n    long long int flag39 = 0;\n\
    \    long long int flag40 = 0;\n    long long int flag41 = 0;\n    long long int\
    \ flag42 = 0;\n    long long int flag43 = 0;\n    long long int flag44 = 0;\n\
    \    long long int flag45 = 0;\n    long long int flag46 = 0;\n    long long int\
    \ flag47 = 0;\n    long long int flag48 = 0;\n    long long int flag49 = 0;\n\
    \    long long int flag50 = 0;\n    long long int flag51 = 0;\n    long long int\
    \ flag52 = 0;\n    long long int flag53 = 0;\n    long long int flag54 = 0;\n\
    \    long long int flag55 = 0;\n    long long int flag56 = 0;\n    long long int\
    \ flag57 = 0;\n    long long int flag58 = 0;\n    long long int flag59 = 0;\n\
    \    long long int flag60 = 0;\n    long long int flag61 = 0;\n    long long int\
    \ flag62 = 0;\n    \n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp2dtytzzl: /tmp/tmp2dtytzzl.cpp:77: int main(): Assertion `candidate((5))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660099764
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = a;\n\
    \    long long int c = 0;\n    long long int d = 0;\n    long long int e = 0;\n\
    \    long long int f = 0;\n    long long int g = 0;\n    long long int h = 0;\n\
    \    long long int i = 0;\n    long long int j = 0;\n    long long int k = 0;\n\
    \    long long int l = 0;\n    long long int m = 0;\n    long long int n = 0;\n\
    \    long long int o = 0;\n    long long int p = 0;\n    long long int q = 0;\n\
    \    long long int r = 0;\n    long long int s = 0;\n    long long int t = 0;\n\
    \    long long int u = 0;\n    long long int v = 0;\n    long long int w = 0;\n\
    \    long long int x = 0;\n    long long int y = 0;\n    long long int z = 0;\n\
    \    long long int A = 0;\n    long long int B = 0;\n    long long int C = 0;\n\
    \    long long int D = 0;\n    long long int E = 0;\n    long long int F = 0;\n\
    \    long long int G = 0;\n    long long int H = 0;\n    long long int I = 0;\n\
    \    long long int J = 0;\n    long long int K = 0;\n    long long int L = 0;\n\
    \    long long int M = 0;\n    long long int N = 0;\n    long long int O = 0;\n\
    \    long long int P = 0;\n    long long int Q = 0;\n    long long int R = 0;\n\
    \    long long int S = 0;\n    long long int T = 0;\n    long long int U = 0;\n\
    \    long long int V = 0;\n    long long int W = 0;\n    long long int X = 0;\n\
    \    long long int Y = 0;\n    long long int Z = 0;\n    long long int A2 = 0;\n\
    \    long long int B2 = 0;\n    long long int C2 = 0;\n    long long int D2 =\
    \ 0;\n    long long int E2 = 0;\n    long long int F2 = 0;\n    long long int\
    \ G2 = 0;\n    long long int H2 = 0;\n    long long int I2 = 0;\n    long long\
    \ int J2 = 0;\n    long long int K2 = 0;\n    long long int L2 = 0;\n    long\
    \ long int M2 = 0;\n    long long int N2 = 0;\n    long long int O2 = 0;\n   \
    \ long long int P2 = 0;\n    long long int Q2 = 0;\n    long long int R2 = 0;\n\
    \    long long int S2 = 0;\n    long long int T2 = 0;\n    long long int U2 =\
    \ 0;\n    long long int V2 = 0;\n    long long int \n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp44_i1278.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmp44_i1278.cpp:83:1: error: expected unqualified-id before \u2018}\u2019\
    \ token\n   83 | }\n      | ^\n/tmp/tmp44_i1278.cpp:83:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660099762
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = a;\n\
    \    long long int c = 2;\n    long long int d = 2;\n    long long int e = 2;\n\
    \    long long int f = 3;\n    long long int g = 3;\n    long long int h = 2;\n\
    \    long long int i = 3;\n    long long int j = 2;\n    long long int k = 2;\n\
    \    long long int l = 2;\n    long long int m = 2;\n    long long int n = 2;\n\
    \    long long int o = 2;\n    long long int p = 2;\n    long long int q = 2;\n\
    \    long long int r = 2;\n    long long int s = 2;\n    long long int t = 2;\n\
    \    long long int u = 2;\n    long long int v = 2;\n    long long int w = 2;\n\
    \    long long int x = 2;\n    long long int y = 2;\n    long long int z = 2;\n\
    \    long long int A = 2;\n    long long int B = 2;\n    long long int C = 2;\n\
    \    long long int D = 2;\n    long long int E = 2;\n    long long int F = 3;\n\
    \    long long int G = 3;\n    long long int H = 2;\n    long long int I = 3;\n\
    \    long long int J = 2;\n    long long int K = 2;\n    long long int L = 2;\n\
    \    long long int M = 2;\n    long long int N = 2;\n    long long int O = 2;\n\
    \    long long int P = 2;\n    long long int Q = 2;\n    long long int R = 2;\n\
    \    long long int S = 2;\n    long long int T = 2;\n    long long int U = 2;\n\
    \    long long int V = 2;\n    long long int W = 2;\n    long long int X = 2;\n\
    \    long long int Y = 2;\n    long long int Z = 2;\n    long long int A = 2;\n\
    \    long long int B = 2;\n    long long int C = 2;\n    long long int D = 2;\n\
    \    long long int E = 2;\n    long long int F = 3;\n    long long int G = 3;\n\
    \    long long int H = 2;\n    long long int I = 3;\n    long long int J = 2;\n\
    \    long long int K = 2;\n    long long int L = 2;\n    long long int M = 2;\n\
    \    long long int N = 2;\n    long long int O = 2;\n    long long int P = 2;\n\
    \    long long int Q = 2;\n    long long int R = 2;\n    long long int S = 2;\n\
    \    long long int T = 2;\n    long long int U = 2;\n    long long int V = 2;\n\
    \    \n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpd4i47_29.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpd4i47_29.cpp:60:19: error: redeclaration of \u2018long long int A\u2019\
    \n   60 |     long long int A = 2;\n      |                   ^\n/tmp/tmpd4i47_29.cpp:34:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   34 |     long\
    \ long int A = 2;\n      |                   ^\n/tmp/tmpd4i47_29.cpp:61:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   61 |     long long int B =\
    \ 2;\n      |                   ^\n/tmp/tmpd4i47_29.cpp:35:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   35 |     long long int B = 2;\n\
    \      |                   ^\n/tmp/tmpd4i47_29.cpp:62:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   62 |     long long int C = 2;\n      |  \
    \                 ^\n/tmp/tmpd4i47_29.cpp:36:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   36 |     long long int C = 2;\n      |        \
    \           ^\n/tmp/tmpd4i47_29.cpp:63:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   63 |     long long int D = 2;\n      |                \
    \   ^\n/tmp/tmpd4i47_29.cpp:37:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   37 |     long long int D = 2;\n      |                   ^\n\
    /tmp/tmpd4i47_29.cpp:64:19: error: redeclaration of \u2018long long int E\u2019\
    \n   64 |     long long int E = 2;\n      |                   ^\n/tmp/tmpd4i47_29.cpp:38:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   38 |     long\
    \ long int E = 2;\n      |                   ^\n/tmp/tmpd4i47_29.cpp:65:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   65 |     long long int F =\
    \ 3;\n      |                   ^\n/tmp/tmpd4i47_29.cpp:39:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   39 |     long long int F = 3;\n\
    \      |                   ^\n/tmp/tmpd4i47_29.cpp:66:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   66 |     long long int G = 3;\n      |  \
    \                 ^\n/tmp/tmpd4i47_29.cpp:40:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   40 |     long long int G = 3;\n      |        \
    \           ^\n/tmp/tmpd4i47_29.cpp:67:19: error: "
  stdout: ''
  timestamp: 1660099764
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    int count = 0;\n    long\
    \ b = a;\n    while (b > 0) {\n        if (b%2 == 0) {\n            if (count==0)\
    \ {\n                count++;\n            }\n            else {\n           \
    \     count--;\n            }\n        }\n        else if (b%3 == 0) {\n     \
    \       if (count==0) {\n                count++;\n            }\n           \
    \ else {\n                count--;\n            }\n        }\n        else if\
    \ (b%5 == 0) {\n            if (count==0) {\n                count++;\n      \
    \      }\n            else {\n                count--;\n            }\n      \
    \  }\n        b/=2;\n    }\n    if (count == 0) {\n        return true;\n    }\n\
    \    else {\n        return false;\n    }\n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmp1_fzj_kv: /tmp/tmp1_fzj_kv.cpp:47: int main(): Assertion `candidate((5))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660099764
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = a;\n\
    \    long long int c = 1;\n    long long int d = 1;\n    long long int e = 1;\n\
    \    long long int f = 0;\n    long long int g = 1;\n    long long int h = 1;\n\
    \    long long int i = 1;\n    long long int j = 1;\n    long long int k = 1;\n\
    \    long long int l = 1;\n    long long int m = 1;\n    long long int n = 1;\n\
    \    long long int o = 1;\n    long long int p = 1;\n    long long int q = 1;\n\
    \    long long int r = 1;\n    long long int s = 1;\n    long long int t = 1;\n\
    \    long long int u = 1;\n    long long int v = 1;\n    long long int w = 1;\n\
    \    long long int x = 1;\n    long long int y = 1;\n    long long int z = 1;\n\
    \    long long int a = 1;\n    long long int b = 1;\n    long long int c = 1;\n\
    \    long long int d = 1;\n    long long int e = 1;\n    long long int f = 0;\n\
    \    long long int g = 1;\n    long long int h = 1;\n    long long int i = 1;\n\
    \    long long int j = 1;\n    long long int k = 1;\n    long long int l = 1;\n\
    \    long long int m = 1;\n    long long int n = 1;\n    long long int o = 1;\n\
    \    long long int p = 1;\n    long long int q = 1;\n    long long int r = 1;\n\
    \    long long int s = 1;\n    long long int t = 1;\n    long long int u = 1;\n\
    \    long long int v = 1;\n    long long int w = 1;\n    long long int x = 1;\n\
    \    long long int y = 1;\n    long long int z = 1;\n    long long int a = 1;\n\
    \    long long int b = 1;\n    long long int c = 1;\n    long long int d = 1;\n\
    \    long long int e = 1;\n    long long int f = 0;\n    long long int g = 1;\n\
    \    long long int h = 1;\n    long long int i = 1;\n    long long int j = 1;\n\
    \    long long int k = 1;\n    long long int l = 1;\n    long long int m = 1;\n\
    \    long long int n = 1;\n    long long int o = 1;\n    long long int p = 1;\n\
    \    long long int q = 1;\n    long long int r = 1;\n    long long int s = 1;\n\
    \    long long int t = 1;\n    long long int u = 1;\n    long long int v = 1;\n\
    \    \n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprkoo4vwh.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmprkoo4vwh.cpp:34:19: error: declaration of \u2018long long int a\u2019\
    \ shadows a parameter\n   34 |     long long int a = 1;\n      |             \
    \      ^\n/tmp/tmprkoo4vwh.cpp:35:19: error: redeclaration of \u2018long long\
    \ int b\u2019\n   35 |     long long int b = 1;\n      |                   ^\n\
    /tmp/tmprkoo4vwh.cpp:9:19: note: \u2018long long int b\u2019 previously declared\
    \ here\n    9 |     long long int b = a;\n      |                   ^\n/tmp/tmprkoo4vwh.cpp:36:19:\
    \ error: redeclaration of \u2018long long int c\u2019\n   36 |     long long int\
    \ c = 1;\n      |                   ^\n/tmp/tmprkoo4vwh.cpp:10:19: note: \u2018\
    long long int c\u2019 previously declared here\n   10 |     long long int c =\
    \ 1;\n      |                   ^\n/tmp/tmprkoo4vwh.cpp:37:19: error: redeclaration\
    \ of \u2018long long int d\u2019\n   37 |     long long int d = 1;\n      |  \
    \                 ^\n/tmp/tmprkoo4vwh.cpp:11:19: note: \u2018long long int d\u2019\
    \ previously declared here\n   11 |     long long int d = 1;\n      |        \
    \           ^\n/tmp/tmprkoo4vwh.cpp:38:19: error: redeclaration of \u2018long\
    \ long int e\u2019\n   38 |     long long int e = 1;\n      |                \
    \   ^\n/tmp/tmprkoo4vwh.cpp:12:19: note: \u2018long long int e\u2019 previously\
    \ declared here\n   12 |     long long int e = 1;\n      |                   ^\n\
    /tmp/tmprkoo4vwh.cpp:39:19: error: redeclaration of \u2018long long int f\u2019\
    \n   39 |     long long int f = 0;\n      |                   ^\n/tmp/tmprkoo4vwh.cpp:13:19:\
    \ note: \u2018long long int f\u2019 previously declared here\n   13 |     long\
    \ long int f = 0;\n      |                   ^\n/tmp/tmprkoo4vwh.cpp:40:19: error:\
    \ redeclaration of \u2018long long int g\u2019\n   40 |     long long int g =\
    \ 1;\n      |                   ^\n/tmp/tmprkoo4vwh.cpp:14:19: note: \u2018long\
    \ long int g\u2019 previously declared here\n   14 |     long long int g = 1;\n\
    \      |                   ^\n/tmp/tmprkoo4vwh.cpp:41:19: error: redeclaration\
    \ of \u2018long long int h\u2019\n   41 |     long long int h = 1;\n      |  \
    \                 ^\n/tmp/tmprkoo4vwh.cpp:15:1"
  stdout: ''
  timestamp: 1660099764
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int p = 1;\n    long long int q = 1;\n    long\
    \ long int r = 1;\n    long long int s = 1;\n    long long int t = 1;\n    long\
    \ long int u = 1;\n    long long int v = 1;\n    long long int w = 1;\n    long\
    \ long int x = 1;\n    long long int y = 1;\n    long long int z = 1;\n    long\
    \ long int a = a;\n    long long int b = b;\n    long long int c = c;\n    long\
    \ long int d = d;\n    long long int p = p;\n    long long int q = q;\n    long\
    \ long int r = r;\n    long long int s = s;\n    long long int t = t;\n    long\
    \ long int u = u;\n    long long int v = v;\n    long long int w = w;\n    long\
    \ long int x = x;\n    long long int y = y;\n    long long int z = z;\n    long\
    \ long int a = a;\n    long long int b = b;\n    long long int c = c;\n    long\
    \ long int d = d;\n    long long int p = p;\n    long long int q = q;\n    long\
    \ long int r = r;\n    long long int s = s;\n    long long int t = t;\n    long\
    \ long int u = u;\n    long long int v = v;\n    long long int w = w;\n    long\
    \ long int x = x;\n    long long int y = y;\n    long long int z = z;\n    long\
    \ long int a = a;\n    long long int b = b;\n    long long int c = c;\n    long\
    \ long int d = d;\n    long long int p = p;\n    long long int q = q;\n    long\
    \ long int r = r;\n    long long int s = s;\n    long long int t = t;\n    long\
    \ long int u = u;\n    long long int v = v;\n    long long int w = w;\n    long\
    \ long int x = x;\n    long long int y = y;\n    long long int z = z;\n    long\
    \ long int a = a;\n    long long int b = b;\n    long long int c = c;\n    long\
    \ long int d = d;\n    long long int p = p;\n    long long int q = q;\n    long\
    \ long int r = r;\n    long long int s = s;\n    long long int t = t;\n    long\
    \ long int u = u;\n    long long int v = v;\n    long long int w = w;\n    long\
    \ long int x = x;\n    long long int y = \n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2dsbk98p.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmp2dsbk98p.cpp:21:19: error: declaration of \u2018long long int a\u2019\
    \ shadows a parameter\n   21 |     long long int a = a;\n      |             \
    \      ^\n/tmp/tmp2dsbk98p.cpp:22:19: error: redeclaration of \u2018long long\
    \ int b\u2019\n   22 |     long long int b = b;\n      |                   ^\n\
    /tmp/tmp2dsbk98p.cpp:9:19: note: \u2018long long int b\u2019 previously declared\
    \ here\n    9 |     long long int b = 3, c = 5, d = 7;\n      |              \
    \     ^\n/tmp/tmp2dsbk98p.cpp:23:19: error: redeclaration of \u2018long long int\
    \ c\u2019\n   23 |     long long int c = c;\n      |                   ^\n/tmp/tmp2dsbk98p.cpp:9:26:\
    \ note: \u2018long long int c\u2019 previously declared here\n    9 |     long\
    \ long int b = 3, c = 5, d = 7;\n      |                          ^\n/tmp/tmp2dsbk98p.cpp:24:19:\
    \ error: redeclaration of \u2018long long int d\u2019\n   24 |     long long int\
    \ d = d;\n      |                   ^\n/tmp/tmp2dsbk98p.cpp:9:33: note: \u2018\
    long long int d\u2019 previously declared here\n    9 |     long long int b =\
    \ 3, c = 5, d = 7;\n      |                                 ^\n/tmp/tmp2dsbk98p.cpp:25:19:\
    \ error: redeclaration of \u2018long long int p\u2019\n   25 |     long long int\
    \ p = p;\n      |                   ^\n/tmp/tmp2dsbk98p.cpp:10:19: note: \u2018\
    long long int p\u2019 previously declared here\n   10 |     long long int p =\
    \ 1;\n      |                   ^\n/tmp/tmp2dsbk98p.cpp:26:19: error: redeclaration\
    \ of \u2018long long int q\u2019\n   26 |     long long int q = q;\n      |  \
    \                 ^\n/tmp/tmp2dsbk98p.cpp:11:19: note: \u2018long long int q\u2019\
    \ previously declared here\n   11 |     long long int q = 1;\n      |        \
    \           ^\n/tmp/tmp2dsbk98p.cpp:27:19: error: redeclaration of \u2018long\
    \ long int r\u2019\n   27 |     long long int r = r;\n      |                \
    \   ^\n/tmp/tmp2dsbk98p.cpp:12:19: note: \u2018long long int r\u2019 previously\
    \ declared here\n   12 |     long long int r = 1;\n      |                   ^\n\
    /tmp/tmp2dsbk98p.cpp:28:19: error: redeclaration of \u2018long long int s\u2019\
    \n   28 |     long long int"
  stdout: ''
  timestamp: 1660099762
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int e = 3, f = 5, g = 7;\n    long long int h =\
    \ 3, i = 5, j = 7;\n    long long int k = 5, l = 5, m = 5;\n    long long int\
    \ n = 5, o = 5;\n    long long int p = 5, q = 5;\n    long long int r = 5, s =\
    \ 5;\n    long long int t = 5, u = 5;\n    long long int v = 5, w = 5;\n    long\
    \ long int x = 5, y = 5;\n    long long int z = 5;\n    long long int a = 5, b\
    \ = 5, c = 5, d = 5, e = 5, f = 5, g = 5, h = 5, i = 5, j = 5, k = 5, l = 5, m\
    \ = 5, n = 5, o = 5, p = 5, q = 5, r = 5, s = 5, t = 5, u = 5, v = 5, w = 5, x\
    \ = 5, y = 5, z = 5;\n    long long int a = 5, b = 5, c = 5, d = 5, e = 5, f =\
    \ 5, g = 5, h = 5, i = 5, j = 5, k = 5, l = 5, m = 5, n = 5, o = 5, p = 5, q =\
    \ 5, r = 5, s = 5, t = 5, u = 5, v = 5, w = 5, x = 5, y = 5, z = 5;\n    long\
    \ long int a = 5, b = 5, c = 5, d = 5, e = 5, f = 5, g = 5, h = 5, i = 5, j =\
    \ 5, k = 5, l = 5, m = 5, n = 5, o = 5, p = 5, q = 5, r = 5, s = 5, t = 5, u =\
    \ 5, v = 5, w = 5, x = 5, y = 5, z = 5;\n    long long int a = 5, b = 5, c = 5,\
    \ d = 5, e = 5, f = 5, g = 5, h = 5, i = 5, j = 5, k = 5, l = 5, m = 5, n = 5,\
    \ o = 5, p = 5, q = 5, r = 5, s = 5, t = 5, u = 5, v = 5, w = 5, x = 5, y = 5,\
    \ z = 5;\n    long long int a = 5, b = 5, c = 5, d = 5, e = 5, f = 5, g = 5, h\
    \ = 5, i = 5, j = 5, k = 5, l = 5, m = 5, n = 5, o = 5, p = 5, q = 5, r = 5, s\
    \ = 5, t = 5, u = 5, v = 5, w = 5, x = 5, y = 5, z = 5;\n    long long int a =\
    \ 5, b = 5, c = 5, d = 5, e = 5, f = 5, g = 5, h = 5, i = 5, j = 5, k = 5, l =\
    \ 5, m = 5, n = 5, o = 5, p = 5, q = 5, r = 5, s = 5, t = 5, u = 5, v = 5, w =\
    \ 5, x = 5, y = 5, z = 5;\n    long long int a = 5, b = 5, c = 5, d = 5, e = 5,\
    \ f = 5, g = 5, h = 5, i = 5, j = 5, k = 5, l = 5, m = 5, n = 5, o = 5, p = 5,\
    \ q = 5, r = 5, s = 5, t = 5, u = 5, v = 5, w = 5, x = 5, y = 5, z = 5;\n    long\
    \ long int a = \n}\nint main() {\n    auto candidate = is_multiply_prime;\n  \
    \  assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp_sg3m8pv.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmp_sg3m8pv.cpp:20:19: error: declaration of \u2018long long int a\u2019\
    \ shadows a parameter\n   20 |     long long int a = 5, b = 5, c = 5, d = 5, e\
    \ = 5, f = 5, g = 5, h = 5, i = 5, j = 5, k = 5, l = 5, m = 5, n = 5, o = 5, p\
    \ = 5, q = 5, r = 5, s = 5, t = 5, u = 5, v = 5, w = 5, x = 5, y = 5, z = 5;\n\
    \      |                   ^\n/tmp/tmp_sg3m8pv.cpp:20:26: error: redeclaration\
    \ of \u2018long long int b\u2019\n   20 |     long long int a = 5, b = 5, c =\
    \ 5, d = 5, e = 5, f = 5, g = 5, h = 5, i = 5, j = 5, k = 5, l = 5, m = 5, n =\
    \ 5, o = 5, p = 5, q = 5, r = 5, s = 5, t = 5, u = 5, v = 5, w = 5, x = 5, y =\
    \ 5, z = 5;\n      |                          ^\n/tmp/tmp_sg3m8pv.cpp:9:19: note:\
    \ \u2018long long int b\u2019 previously declared here\n    9 |     long long\
    \ int b = 3, c = 5, d = 7;\n      |                   ^\n/tmp/tmp_sg3m8pv.cpp:20:33:\
    \ error: redeclaration of \u2018long long int c\u2019\n   20 |     long long int\
    \ a = 5, b = 5, c = 5, d = 5, e = 5, f = 5, g = 5, h = 5, i = 5, j = 5, k = 5,\
    \ l = 5, m = 5, n = 5, o = 5, p = 5, q = 5, r = 5, s = 5, t = 5, u = 5, v = 5,\
    \ w = 5, x = 5, y = 5, z = 5;\n      |                                 ^\n/tmp/tmp_sg3m8pv.cpp:9:26:\
    \ note: \u2018long long int c\u2019 previously declared here\n    9 |     long\
    \ long int b = 3, c = 5, d = 7;\n      |                          ^\n/tmp/tmp_sg3m8pv.cpp:20:40:\
    \ error: redeclaration of \u2018long long int d\u2019\n   20 |     long long int\
    \ a = 5, b = 5, c = 5, d = 5, e = 5, f = 5, g = 5, h = 5, i = 5, j = 5, k = 5,\
    \ l = 5, m = 5, n = 5, o = 5, p = 5, q = 5, r = 5, s = 5, t = 5, u = 5, v = 5,\
    \ w = 5, x = 5, y = 5, z = 5;\n      |                                       \
    \ ^\n/tmp/tmp_sg3m8pv.cpp:9:33: note: \u2018long long int d\u2019 previously declared\
    \ here\n    9 |     long long int b = 3, c = 5, d = 7;\n      |              \
    \                   ^\n/tmp/tmp_sg3m8pv.cpp:20:47: error: redeclaration of \u2018\
    long long int e\u2019\n   20 |     long long int a = 5, b = 5, c = 5, d = 5, e\
    \ = 5, f = 5, g = 5, h = 5, i = 5, j = 5, k = 5, l = 5, m = "
  stdout: ''
  timestamp: 1660099764
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int counter = 0;\n    while(c <= a) {\n       \
    \ if(a%c == 0){\n            counter++;\n        }\n        c += b;\n    }\n \
    \   if(counter == 3){\n        return true;\n    }\n    return false;\n}\nint\
    \ main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpw6mvgayq: /tmp/tmpw6mvgayq.cpp:25: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099765
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = a;\n\
    \    long long int c = 1;\n    long long int d = 1;\n    long long int e = 1;\n\
    \    long long int f = 0;\n    long long int g = 1;\n    long long int h = 1;\n\
    \    long long int i = 1;\n    long long int j = 1;\n    long long int k = 1;\n\
    \    long long int l = 1;\n    long long int m = 1;\n    long long int n = 1;\n\
    \    long long int o = 1;\n    long long int p = 1;\n    long long int q = 1;\n\
    \    long long int r = 1;\n    long long int s = 1;\n    long long int t = 1;\n\
    \    long long int u = 1;\n    long long int v = 1;\n    long long int w = 1;\n\
    \    long long int x = 1;\n    long long int y = 1;\n    long long int z = 1;\n\
    \    long long int aa = 1;\n    long long int bb = 1;\n    long long int cc =\
    \ 1;\n    long long int dd = 1;\n    long long int ee = 1;\n    long long int\
    \ ff = 1;\n    long long int gg = 1;\n    long long int hh = 1;\n    long long\
    \ int ii = 0;\n    long long int jj = 0;\n    long long int kk = 0;\n    long\
    \ long int ll = 0;\n    long long int mm = 1;\n    long long int nn = 0;\n   \
    \ long long int oo = 0;\n    long long int pp = 1;\n    long long int qq = 1;\n\
    \    long long int rr = 0;\n    long long int ss = 0;\n    long long int tt =\
    \ 0;\n    long long int uu = 1;\n    long long int vv = 1;\n    long long int\
    \ ww = 1;\n    long long int xx = 0;\n    long long int yy = 0;\n    long long\
    \ int zz = 0;\n    long long int aaa = 0;\n    long long int bbb = 0;\n    long\
    \ long int ccc = 0;\n    long long int ddd = 0;\n    long long int eee = 0;\n\
    \    long long int fff = 0;\n    long long int ggg = 0;\n    long long int hhh\
    \ = 0;\n    long long int iii = 0;\n    long long int jjj = 0;\n    long long\
    \ int kkk = 0;\n    long long int lll = 0;\n    long long int mmm = 0;\n    long\
    \ long int nnn = 0;\n    long long int ooo = 0;\n    long long int ppp = 0;\n\
    \    long long int qqq = 0;\n    long long int rrr = 0;\n    long long int ss\
    \ = 0;\n    long long int ttt = 0;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpiksq1v5u.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpiksq1v5u.cpp:78:19: error: redeclaration of \u2018long long int ss\u2019\
    \n   78 |     long long int ss = 0;\n      |                   ^~\n/tmp/tmpiksq1v5u.cpp:52:19:\
    \ note: \u2018long long int ss\u2019 previously declared here\n   52 |     long\
    \ long int ss = 0;\n      |                   ^~\n/tmp/tmpiksq1v5u.cpp:80:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n   80 |\
    \ }\n      | ^\n"
  stdout: ''
  timestamp: 1660099764
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int result = 1;\n    while(a != 0) {\n        if(b\
    \ == c) {\n            if(b == d) {\n                if((a % b) == 0) {\n    \
    \                result = 1;\n                    break;\n                }\n\
    \                else {\n                    result = 0;\n                   \
    \ break;\n                }\n            }\n            else {\n             \
    \   result = 0;\n                break;\n            }\n        }\n        else\
    \ {\n            if(b % 2 == 0) {\n                if((a % b) == 0) {\n      \
    \              result = 1;\n                    break;\n                }\n  \
    \              else {\n                    result = 0;\n                    break;\n\
    \                }\n            }\n            else {\n                if((a %\
    \ b) == 0) {\n                    result = 0;\n                    break;\n  \
    \              }\n                else {\n                    result = 1;\n  \
    \                  break;\n                }\n            }\n        }\n     \
    \   b += 2;\n        c += 2;\n        d += 2;\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpo_ver_96: /tmp/tmpo_ver_96.cpp:58: int main(): Assertion `candidate((5))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660099765
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int flag = 0;\n    while (b <= a) {\n        if\
    \ (a % b == 0) {\n            flag = 1;\n            break;\n        }\n     \
    \   b += 2;\n    }\n    while (c * c <= a) {\n        if ((a % c) == 0) {\n  \
    \          flag = 1;\n            break;\n        }\n        c += 2;\n    }\n\
    \    while ((d * d) <= a) {\n        if ((a % d) == 0) {\n            flag = 1;\n\
    \            break;\n        }\n        d += 2;\n    }\n    if (flag == 1) {\n\
    \        return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmpud8915t1: /tmp/tmpud8915t1.cpp:39: int main(): Assertion `candidate((5))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660099765
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int n = 3,\
    \ m = 2;\n    long long int count = 0;\n    while(a % n != 0) {\n        n +=\
    \ 1;\n    }\n    while(m <= n) {\n        while(a % m == 0) {\n            a /=\
    \ m;\n            count += 1;\n        }\n        m += 1;\n    }\n    return count\
    \ == 3;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpljjl2h8c: /tmp/tmpljjl2h8c.cpp:26: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099765
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5;\n    while (b <= a) {\n        if (a % b == 0 && a % c == 0)\n      \
    \      return true;\n        b += 2;\n        c += 2;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpkxscg75z: /tmp/tmpkxscg75z.cpp:22: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099765
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    while (b <= a) {\n        if (a % b == 0 && b % c == 0 &&\
    \ b % d == 0) {\n            return true;\n        }\n        b += 2;\n      \
    \  c += 2;\n        d += 2;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp9ldphvsl: /tmp/tmp9ldphvsl.cpp:23: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099765
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long b = 3, c = 5, d\
    \ = 7;\n    while (b <= a) {\n        if (a % b == 0 && a % c == 0 && a % d ==\
    \ 0) {\n            return true;\n        }\n        b += 2;\n        c += 2;\n\
    \        d += 2;\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmpgjx0t2y7: /tmp/tmpgjx0t2y7.cpp:23: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099760
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    while (b <= a) {\n        if (a % b == 0) {\n           \
    \ while (c <= a) {\n                if (a % c == 0) {\n                    while\
    \ (d <= a) {\n                        if (a % d == 0) {\n                    \
    \        if (b * c * d == a) {\n                                return true;\n\
    \                            }\n                        }\n                  \
    \      d++;\n                    }\n                }\n                c++;\n\
    \            }\n            b++;\n        }\n    }\n    return false;\n}\nint\
    \ main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660099770
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int e = 0;\n    long long int f = 0;\n    long\
    \ long int g = 0;\n    long long int h = 0;\n    long long int i = 0;\n    long\
    \ long int j = 0;\n    long long int k = 0;\n    long long int l = 0;\n    long\
    \ long int m = 0;\n    long long int n = 0;\n    long long int o = 0;\n    long\
    \ long int p = 0;\n    long long int q = 0;\n    long long int r = 0;\n    long\
    \ long int s = 0;\n    long long int t = 0;\n    long long int u = 0;\n    long\
    \ long int v = 0;\n    long long int w = 0;\n    long long int x = 0;\n    long\
    \ long int y = 0;\n    long long int z = 0;\n    long long int A = 0;\n    long\
    \ long int B = 0;\n    long long int C = 0;\n    long long int D = 0;\n    long\
    \ long int E = 0;\n    long long int F = 0;\n    long long int G = 0;\n    long\
    \ long int H = 0;\n    long long int I = 0;\n    long long int J = 0;\n    long\
    \ long int K = 0;\n    long long int L = 0;\n    long long int M = 0;\n    long\
    \ long int N = 0;\n    long long int O = 0;\n    long long int P = 0;\n    long\
    \ long int Q = 0;\n    long long int R = 0;\n    long long int S = 0;\n    long\
    \ long int T = 0;\n    long long int U = 0;\n    long long int V = 0;\n    long\
    \ long int W = 0;\n    long long int X = 0;\n    long long int Y = 0;\n    long\
    \ long int Z = 0;\n    long long int A = 0;\n    long long int B = 0;\n    long\
    \ long int C = 0;\n    long long int D = 0;\n    long long int E = 0;\n    long\
    \ long int F = 0;\n    long long int G = 0;\n    long long int H = 0;\n    long\
    \ long int I = 0;\n    long long int J = 0;\n    long long int K = 0;\n    long\
    \ long int L = 0;\n    long long int M = 0;\n    long long int N = 0;\n    long\
    \ long int O = 0;\n    long long int P = 0;\n    long long int Q = 0;\n    long\
    \ long int R = 0;\n    long long int S = 0;\n    long long int T = 0;\n    long\
    \ long int U = 0;\n    long long int V = 0;\n    long long int W = 0;\n    long\
    \ long int X = 0;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp7atxcp7c.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmp7atxcp7c.cpp:58:19: error: redeclaration of \u2018long long int A\u2019\
    \n   58 |     long long int A = 0;\n      |                   ^\n/tmp/tmp7atxcp7c.cpp:32:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   32 |     long\
    \ long int A = 0;\n      |                   ^\n/tmp/tmp7atxcp7c.cpp:59:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   59 |     long long int B =\
    \ 0;\n      |                   ^\n/tmp/tmp7atxcp7c.cpp:33:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   33 |     long long int B = 0;\n\
    \      |                   ^\n/tmp/tmp7atxcp7c.cpp:60:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   60 |     long long int C = 0;\n      |  \
    \                 ^\n/tmp/tmp7atxcp7c.cpp:34:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   34 |     long long int C = 0;\n      |        \
    \           ^\n/tmp/tmp7atxcp7c.cpp:61:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   61 |     long long int D = 0;\n      |                \
    \   ^\n/tmp/tmp7atxcp7c.cpp:35:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   35 |     long long int D = 0;\n      |                   ^\n\
    /tmp/tmp7atxcp7c.cpp:62:19: error: redeclaration of \u2018long long int E\u2019\
    \n   62 |     long long int E = 0;\n      |                   ^\n/tmp/tmp7atxcp7c.cpp:36:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   36 |     long\
    \ long int E = 0;\n      |                   ^\n/tmp/tmp7atxcp7c.cpp:63:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   63 |     long long int F =\
    \ 0;\n      |                   ^\n/tmp/tmp7atxcp7c.cpp:37:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   37 |     long long int F = 0;\n\
    \      |                   ^\n/tmp/tmp7atxcp7c.cpp:64:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   64 |     long long int G = 0;\n      |  \
    \                 ^\n/tmp/tmp7atxcp7c.cpp:38:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   38 |     long long int G = 0;\n      |        \
    \           ^\n/tmp/tmp7atxcp7c.cpp:65:19: error: "
  stdout: ''
  timestamp: 1660099765
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 0;\n\
    \    long long int c = 0;\n    long long int d = 0;\n    long long int e = 0;\n\
    \    long long int f = 0;\n    long long int g = 0;\n    long long int h = 0;\n\
    \    long long int i = 0;\n    long long int j = 0;\n    long long int k = 0;\n\
    \    long long int l = 0;\n    long long int m = 0;\n    long long int n = 0;\n\
    \    long long int o = 0;\n    long long int p = 0;\n    long long int q = 0;\n\
    \    long long int r = 0;\n    long long int s = 0;\n    long long int t = 0;\n\
    \    long long int u = 0;\n    long long int v = 0;\n    long long int w = 0;\n\
    \    long long int x = 0;\n    long long int y = 0;\n    long long int z = 0;\n\
    \    long long int A = 0;\n    long long int B = 0;\n    long long int C = 0;\n\
    \    long long int D = 0;\n    long long int E = 0;\n    long long int F = 0;\n\
    \    long long int G = 0;\n    long long int H = 0;\n    long long int I = 0;\n\
    \    long long int J = 0;\n    long long int K = 0;\n    long long int L = 0;\n\
    \    long long int M = 0;\n    long long int N = 0;\n    long long int O = 0;\n\
    \    long long int P = 0;\n    long long int Q = 0;\n    long long int R = 0;\n\
    \    long long int S = 0;\n    long long int T = 0;\n    long long int U = 0;\n\
    \    long long int V = 0;\n    long long int W = 0;\n    long long int X = 0;\n\
    \    long long int Y = 0;\n    long long int Z = 0;\n    long long int A2 = 0;\n\
    \    long long int B2 = 0;\n    long long int C2 = 0;\n    long long int D2 =\
    \ 0;\n    long long int E2 = 0;\n    long long int F2 = 0;\n    long long int\
    \ G2 = 0;\n    long long int H2 = 0;\n    long long int I2 = 0;\n    long long\
    \ int J2 = 0;\n    long long int K2 = 0;\n    long long int L2 = 0;\n    long\
    \ long int M2 = 0;\n    long long int N2 = 0;\n    long long int O2 = 0;\n   \
    \ long long int P2 = 0;\n    long long int Q2 = 0;\n    long long int R2 = 0;\n\
    \    long long int S2 = 0;\n    long long int T2 = 0;\n    long long int U2 =\
    \ 0;\n    long long int V2 = 0;\n    long long int \n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpis7swtmu.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpis7swtmu.cpp:83:1: error: expected unqualified-id before \u2018}\u2019\
    \ token\n   83 | }\n      | ^\n/tmp/tmpis7swtmu.cpp:83:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660099765
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int result = 1;\n    long long int i;\n    for\
    \ (i = 2; i <= a; i++) {\n        if (i % 2 == 0) {\n            if (i % d ==\
    \ 0) {\n                result = result * i;\n            }\n        }\n     \
    \   else {\n            if (i % c == 0) {\n                result = result * i;\n\
    \            }\n        }\n    }\n    if (result == a) {\n        return true;\n\
    \    }\n    else {\n        return false;\n    }\n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmpd7eqetyj: /tmp/tmpd7eqetyj.cpp:33: int main(): Assertion `candidate((5))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660099765
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5;\n    long long int d = 2;\n    long long int e = 2;\n    long long int\
    \ f = 3;\n    long long int g = 5;\n    long long int h = 2;\n    long long int\
    \ i = 2;\n    long long int j = 2;\n    long long int k = 2;\n    long long int\
    \ l = 2;\n    long long int m = 2;\n    long long int n = 2;\n    long long int\
    \ o = 2;\n    long long int p = 2;\n    long long int q = 2;\n    long long int\
    \ r = 2;\n    long long int s = 2;\n    long long int t = 2;\n    long long int\
    \ u = 2;\n    long long int v = 2;\n    long long int w = 2;\n    long long int\
    \ x = 2;\n    long long int y = 2;\n    long long int z = 2;\n    long long int\
    \ A = 2;\n    long long int B = 2;\n    long long int C = 2;\n    long long int\
    \ D = 2;\n    long long int E = 2;\n    long long int F = 2;\n    long long int\
    \ G = 2;\n    long long int H = 2;\n    long long int I = 2;\n    long long int\
    \ J = 2;\n    long long int K = 2;\n    long long int L = 2;\n    long long int\
    \ M = 2;\n    long long int N = 2;\n    long long int O = 2;\n    long long int\
    \ P = 2;\n    long long int Q = 2;\n    long long int R = 2;\n    long long int\
    \ S = 2;\n    long long int T = 2;\n    long long int U = 2;\n    long long int\
    \ V = 2;\n    long long int W = 2;\n    long long int X = 2;\n    long long int\
    \ Y = 2;\n    long long int Z = 2;\n    long long int A = 2;\n    long long int\
    \ B = 2;\n    long long int C = 2;\n    long long int D = 2;\n    long long int\
    \ E = 2;\n    long long int F = 2;\n    long long int G = 2;\n    long long int\
    \ H = 2;\n    long long int I = 2;\n    long long int J = 2;\n    long long int\
    \ K = 2;\n    long long int L = 2;\n    long long int M = 2;\n    long long int\
    \ N = 2;\n    long long int O = 2;\n    long long int P = 2;\n    long long int\
    \ Q = 2;\n    long long int R = 2;\n    long long int S = 2;\n    long long int\
    \ T = 2;\n    long long int U = 2;\n    long long int V = 2;\n    long long int\
    \ W\n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp46pyqwk6.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmp46pyqwk6.cpp:59:19: error: redeclaration of \u2018long long int A\u2019\
    \n   59 |     long long int A = 2;\n      |                   ^\n/tmp/tmp46pyqwk6.cpp:33:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   33 |     long\
    \ long int A = 2;\n      |                   ^\n/tmp/tmp46pyqwk6.cpp:60:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   60 |     long long int B =\
    \ 2;\n      |                   ^\n/tmp/tmp46pyqwk6.cpp:34:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   34 |     long long int B = 2;\n\
    \      |                   ^\n/tmp/tmp46pyqwk6.cpp:61:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   61 |     long long int C = 2;\n      |  \
    \                 ^\n/tmp/tmp46pyqwk6.cpp:35:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   35 |     long long int C = 2;\n      |        \
    \           ^\n/tmp/tmp46pyqwk6.cpp:62:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   62 |     long long int D = 2;\n      |                \
    \   ^\n/tmp/tmp46pyqwk6.cpp:36:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   36 |     long long int D = 2;\n      |                   ^\n\
    /tmp/tmp46pyqwk6.cpp:63:19: error: redeclaration of \u2018long long int E\u2019\
    \n   63 |     long long int E = 2;\n      |                   ^\n/tmp/tmp46pyqwk6.cpp:37:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   37 |     long\
    \ long int E = 2;\n      |                   ^\n/tmp/tmp46pyqwk6.cpp:64:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   64 |     long long int F =\
    \ 2;\n      |                   ^\n/tmp/tmp46pyqwk6.cpp:38:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   38 |     long long int F = 2;\n\
    \      |                   ^\n/tmp/tmp46pyqwk6.cpp:65:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   65 |     long long int G = 2;\n      |  \
    \                 ^\n/tmp/tmp46pyqwk6.cpp:39:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   39 |     long long int G = 2;\n      |        \
    \           ^\n/tmp/tmp46pyqwk6.cpp:66:19: error: "
  stdout: ''
  timestamp: 1660099765
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int res = 0;\n    while(a != 0) {\n        if(a%b\
    \ == 0 && a%c == 0 && a%d==0) {\n            res = 1;\n            break;\n  \
    \      }\n        b += 2;\n        c += 2;\n        d += 2;\n        a /= 10;\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpvlrnifs6: /tmp/tmpvlrnifs6.cpp:26: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099765
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 0;\n\
    \    long long int c = 0;\n    long long int d = 0;\n    long long int e = 0;\n\
    \    long long int f = 0;\n    long long int g = 0;\n    long long int h = 0;\n\
    \    long long int i = 0;\n    long long int j = 0;\n    long long int k = 0;\n\
    \    long long int l = 0;\n    long long int m = 0;\n    long long int n = 0;\n\
    \    long long int o = 0;\n    long long int p = 0;\n    long long int q = 0;\n\
    \    long long int r = 0;\n    long long int s = 0;\n    long long int t = 0;\n\
    \    long long int u = 0;\n    long long int v = 0;\n    long long int w = 0;\n\
    \    long long int x = 0;\n    long long int y = 0;\n    long long int z = 0;\n\
    \    long long int A = 0;\n    long long int B = 0;\n    long long int C = 0;\n\
    \    long long int D = 0;\n    long long int E = 0;\n    long long int F = 0;\n\
    \    long long int G = 0;\n    long long int H = 0;\n    long long int I = 0;\n\
    \    long long int J = 0;\n    long long int K = 0;\n    long long int L = 0;\n\
    \    long long int M = 0;\n    long long int N = 0;\n    long long int O = 0;\n\
    \    long long int P = 0;\n    long long int Q = 0;\n    long long int R = 0;\n\
    \    long long int S = 0;\n    long long int T = 0;\n    long long int U = 0;\n\
    \    long long int V = 0;\n    long long int W = 0;\n    long long int X = 0;\n\
    \    long long int Y = 0;\n    long long int Z = 0;\n    long long int A = 0;\n\
    \    long long int B = 0;\n    long long int C = 0;\n    long long int D = 0;\n\
    \    long long int E = 0;\n    long long int F = 0;\n    long long int G = 0;\n\
    \    long long int H = 0;\n    long long int I = 0;\n    long long int J = 0;\n\
    \    long long int K = 0;\n    long long int L = 0;\n    long long int M = 0;\n\
    \    long long int N = 0;\n    long long int O = 0;\n    long long int P = 0;\n\
    \    long long int Q = 0;\n    long long int R = 0;\n    long long int S = 0;\n\
    \    long long int T = 0;\n    long long int U = 0;\n    long long int V = 0;\n\
    \    long long int \n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmphpyp33up.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmphpyp33up.cpp:60:19: error: redeclaration of \u2018long long int A\u2019\
    \n   60 |     long long int A = 0;\n      |                   ^\n/tmp/tmphpyp33up.cpp:34:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   34 |     long\
    \ long int A = 0;\n      |                   ^\n/tmp/tmphpyp33up.cpp:61:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   61 |     long long int B =\
    \ 0;\n      |                   ^\n/tmp/tmphpyp33up.cpp:35:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   35 |     long long int B = 0;\n\
    \      |                   ^\n/tmp/tmphpyp33up.cpp:62:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   62 |     long long int C = 0;\n      |  \
    \                 ^\n/tmp/tmphpyp33up.cpp:36:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   36 |     long long int C = 0;\n      |        \
    \           ^\n/tmp/tmphpyp33up.cpp:63:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   63 |     long long int D = 0;\n      |                \
    \   ^\n/tmp/tmphpyp33up.cpp:37:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   37 |     long long int D = 0;\n      |                   ^\n\
    /tmp/tmphpyp33up.cpp:64:19: error: redeclaration of \u2018long long int E\u2019\
    \n   64 |     long long int E = 0;\n      |                   ^\n/tmp/tmphpyp33up.cpp:38:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   38 |     long\
    \ long int E = 0;\n      |                   ^\n/tmp/tmphpyp33up.cpp:65:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   65 |     long long int F =\
    \ 0;\n      |                   ^\n/tmp/tmphpyp33up.cpp:39:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   39 |     long long int F = 0;\n\
    \      |                   ^\n/tmp/tmphpyp33up.cpp:66:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   66 |     long long int G = 0;\n      |  \
    \                 ^\n/tmp/tmphpyp33up.cpp:40:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   40 |     long long int G = 0;\n      |        \
    \           ^\n/tmp/tmphpyp33up.cpp:67:19: error: "
  stdout: ''
  timestamp: 1660099762
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    while (b <= a) {\n        if (a % b == 0) {\n           \
    \ while (c <= a / b) {\n                if (a % c == 0) {\n                  \
    \  while (d <= a / c) {\n                        if (a % d == 0) {\n         \
    \                   if (b * c * d == a) {\n                                return\
    \ true;\n                            }\n                        }\n          \
    \              d++;\n                    }\n                }\n              \
    \  c++;\n            }\n            b++;\n        }\n        a++;\n    }\n   \
    \ return false;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n  \
    \  assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660099770
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    while (b <= a) {\n        if (a % b == 0 && a % c == 0 &&\
    \ a % d == 0) {\n            return true;\n        }\n        b += 2;\n      \
    \  c += 2;\n        d += 2;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpzo2qmm7h: /tmp/tmpzo2qmm7h.cpp:23: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099761
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int e = 3, f = 5, g = 7;\n    long long int h =\
    \ 5, i = 7, j = 3, k = 5, l = 5, m = 5, n = 5, o = 5;\n    long long int p = 5,\
    \ q = 7, r = 5, s = 5, t = 5, u = 5;\n    long long int v = 5, w = 7, x = 5, y\
    \ = 7, z = 5;\n    long long int a = 5, b = 7, c = 5, d = 7, e = 3, f = 5, g =\
    \ 7;\n    long long int h = 5, i = 7, j = 3, k = 5, l = 5, m = 5, n = 5, o = 5;\n\
    \    long long int p = 5, q = 7, r = 5, s = 5, t = 5, u = 5;\n    long long int\
    \ v = 5, w = 7, x = 5, y = 7, z = 5;\n    long long int a = 5, b = 7, c = 5, d\
    \ = 7, e = 3, f = 5, g = 7;\n    long long int h = 5, i = 7, j = 3, k = 5, l =\
    \ 5, m = 5, n = 5, o = 5;\n    long long int p = 5, q = 7, r = 5, s = 5, t = 5,\
    \ u = 5;\n    long long int v = 5, w = 7, x = 5, y = 7, z = 5;\n    long long\
    \ int a = 5, b = 7, c = 5, d = 7, e = 3, f = 5, g = 7;\n    long long int h =\
    \ 5, i = 7, j = 3, k = 5, l = 5, m = 5, n = 5, o = 5;\n    long long int p = 5,\
    \ q = 7, r = 5, s = 5, t = 5, u = 5;\n    long long int v = 5, w = 7, x = 5, y\
    \ = 7, z = 5;\n    long long int a = 5, b = 7, c = 5, d = 7, e = 3, f = 5, g =\
    \ 7;\n    long long int h = 5, i = 7, j = 3, k = 5, l = 5, m = 5, n = 5, o = 5;\n\
    \    long long int p = 5, q = 7, r = 5, s = 5, t = 5, u = 5;\n    long long int\
    \ v = 5, w = 7, x = 5, y = 7, z = 5;\n    long long int a = 5, b = 7, c = 5, d\
    \ = 7, e = 3, f = 5, g = 7;\n    long long int h = 5, i = 7, j = 3, k = 5, l =\
    \ 5, m = 5, n = 5, o = 5;\n    long long int p = 5, q = 7, r = 5, s = 5, t = 5,\
    \ u = 5;\n    long long int v = 5, w = 7, x = 5, y = 7, z = 5;\n    long long\
    \ int a = 5, b = 7, c = 5, d = 7, e = 3, f = 5, g = 7;\n    long long int h =\
    \ 5, i = 7, j = 3, k = 5, l = 5, m = 5, n = 5, o = 5;\n    long long int p = 5,\
    \ q = 7, r = 5, s = 5, t = 5, u = 5;\n    long long int v = \n}\nint main() {\n\
    \    auto candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n\
    \    assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmbn3gv6k.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpmbn3gv6k.cpp:14:19: error: declaration of \u2018long long int a\u2019\
    \ shadows a parameter\n   14 |     long long int a = 5, b = 7, c = 5, d = 7, e\
    \ = 3, f = 5, g = 7;\n      |                   ^\n/tmp/tmpmbn3gv6k.cpp:14:26:\
    \ error: redeclaration of \u2018long long int b\u2019\n   14 |     long long int\
    \ a = 5, b = 7, c = 5, d = 7, e = 3, f = 5, g = 7;\n      |                  \
    \        ^\n/tmp/tmpmbn3gv6k.cpp:9:19: note: \u2018long long int b\u2019 previously\
    \ declared here\n    9 |     long long int b = 3, c = 5, d = 7;\n      |     \
    \              ^\n/tmp/tmpmbn3gv6k.cpp:14:33: error: redeclaration of \u2018long\
    \ long int c\u2019\n   14 |     long long int a = 5, b = 7, c = 5, d = 7, e =\
    \ 3, f = 5, g = 7;\n      |                                 ^\n/tmp/tmpmbn3gv6k.cpp:9:26:\
    \ note: \u2018long long int c\u2019 previously declared here\n    9 |     long\
    \ long int b = 3, c = 5, d = 7;\n      |                          ^\n/tmp/tmpmbn3gv6k.cpp:14:40:\
    \ error: redeclaration of \u2018long long int d\u2019\n   14 |     long long int\
    \ a = 5, b = 7, c = 5, d = 7, e = 3, f = 5, g = 7;\n      |                  \
    \                      ^\n/tmp/tmpmbn3gv6k.cpp:9:33: note: \u2018long long int\
    \ d\u2019 previously declared here\n    9 |     long long int b = 3, c = 5, d\
    \ = 7;\n      |                                 ^\n/tmp/tmpmbn3gv6k.cpp:14:47:\
    \ error: redeclaration of \u2018long long int e\u2019\n   14 |     long long int\
    \ a = 5, b = 7, c = 5, d = 7, e = 3, f = 5, g = 7;\n      |                  \
    \                             ^\n/tmp/tmpmbn3gv6k.cpp:10:19: note: \u2018long\
    \ long int e\u2019 previously declared here\n   10 |     long long int e = 3,\
    \ f = 5, g = 7;\n      |                   ^\n/tmp/tmpmbn3gv6k.cpp:14:54: error:\
    \ redeclaration of \u2018long long int f\u2019\n   14 |     long long int a =\
    \ 5, b = 7, c = 5, d = 7, e = 3, f = 5, g = 7;\n      |                      \
    \                                ^\n/tmp/tmpmbn3gv6k.cpp:10:26: note: \u2018long\
    \ long int f\u2019 previously declared here\n   10 |     long long int e = 3,\
    \ f = 5, g = 7;\n      |            "
  stdout: ''
  timestamp: 1660099765
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    while (b <= a) {\n        if (a % b == 0) {\n           \
    \ if (a % c == 0) {\n                if (a % d == 0) {\n                    return\
    \ true;\n                }\n            }\n        }\n        b += 2;\n      \
    \  c += 2;\n        d += 2;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp1h4nsxw2: /tmp/tmp1h4nsxw2.cpp:27: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099761
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    while (b <= a) {\n        if (a % b == 0 && a % c == 0 &&\
    \ a % d == 0) {\n            return true;\n        }\n        b += 2;\n      \
    \  c += 2;\n        d += 2;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpzo2qmm7h: /tmp/tmpzo2qmm7h.cpp:23: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099761
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int ans = 1;\n    long long int i = 2;\n    long\
    \ long int j = 2;\n    long long int k = 2;\n    long long int l = 2;\n    long\
    \ long int m = 2;\n    long long int n = 2;\n    long long int o = 2;\n    long\
    \ long int p = 2;\n    long long int q = 2;\n    long long int r = 2;\n    long\
    \ long int s = 2;\n    long long int t = 2;\n    long long int u = 2;\n    long\
    \ long int v = 2;\n    long long int w = 2;\n    long long int x = 2;\n    long\
    \ long int y = 2;\n    long long int z = 2;\n    long long int A = 2;\n    long\
    \ long int B = 2;\n    long long int C = 2;\n    long long int D = 2;\n    long\
    \ long int E = 2;\n    long long int F = 2;\n    long long int G = 2;\n    long\
    \ long int H = 2;\n    long long int I = 2;\n    long long int J = 2;\n    long\
    \ long int K = 2;\n    long long int L = 2;\n    long long int M = 2;\n    long\
    \ long int N = 2;\n    long long int O = 2;\n    long long int P = 2;\n    long\
    \ long int Q = 2;\n    long long int R = 2;\n    long long int S = 2;\n    long\
    \ long int T = 2;\n    long long int U = 2;\n    long long int V = 2;\n    long\
    \ long int W = 2;\n    long long int X = 2;\n    long long int Y = 2;\n    long\
    \ long int Z = 2;\n    long long int A = 2;\n    long long int B = 2;\n    long\
    \ long int C = 2;\n    long long int D = 2;\n    long long int E = 2;\n    long\
    \ long int F = 2;\n    long long int G = 2;\n    long long int H = 2;\n    long\
    \ long int I = 2;\n    long long int J = 2;\n    long long int K = 2;\n    long\
    \ long int L = 2;\n    long long int M = 2;\n    long long int N = 2;\n    long\
    \ long int O = 2;\n    long long int P = 2;\n    long long int Q = 2;\n    long\
    \ long int R = 2;\n    long long int S = 2;\n    long long int T = 2;\n    long\
    \ long int U = 2;\n    long long int V = 2;\n    long long int W = 2;\n    long\
    \ long int X = 2;\n    long long int Y = 2;\n    long long int Z = 2;\n    long\
    \ \n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf3mog3cg.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpf3mog3cg.cpp:55:19: error: redeclaration of \u2018long long int A\u2019\
    \n   55 |     long long int A = 2;\n      |                   ^\n/tmp/tmpf3mog3cg.cpp:29:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   29 |     long\
    \ long int A = 2;\n      |                   ^\n/tmp/tmpf3mog3cg.cpp:56:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   56 |     long long int B =\
    \ 2;\n      |                   ^\n/tmp/tmpf3mog3cg.cpp:30:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   30 |     long long int B = 2;\n\
    \      |                   ^\n/tmp/tmpf3mog3cg.cpp:57:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   57 |     long long int C = 2;\n      |  \
    \                 ^\n/tmp/tmpf3mog3cg.cpp:31:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   31 |     long long int C = 2;\n      |        \
    \           ^\n/tmp/tmpf3mog3cg.cpp:58:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   58 |     long long int D = 2;\n      |                \
    \   ^\n/tmp/tmpf3mog3cg.cpp:32:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   32 |     long long int D = 2;\n      |                   ^\n\
    /tmp/tmpf3mog3cg.cpp:59:19: error: redeclaration of \u2018long long int E\u2019\
    \n   59 |     long long int E = 2;\n      |                   ^\n/tmp/tmpf3mog3cg.cpp:33:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   33 |     long\
    \ long int E = 2;\n      |                   ^\n/tmp/tmpf3mog3cg.cpp:60:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   60 |     long long int F =\
    \ 2;\n      |                   ^\n/tmp/tmpf3mog3cg.cpp:34:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   34 |     long long int F = 2;\n\
    \      |                   ^\n/tmp/tmpf3mog3cg.cpp:61:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   61 |     long long int G = 2;\n      |  \
    \                 ^\n/tmp/tmpf3mog3cg.cpp:35:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   35 |     long long int G = 2;\n      |        \
    \           ^\n/tmp/tmpf3mog3cg.cpp:62:19: error: "
  stdout: ''
  timestamp: 1660099765
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5;\n    long long int d = 2;\n    while (b <= a) {\n        if (a % b ==\
    \ 0) {\n            while (a % d == 0) {\n                a /= d;\n          \
    \      c += 1;\n            }\n        }\n        b += 1;\n        d += 2;\n \
    \   }\n    return c == 3;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpgh3_99ir: /tmp/tmpgh3_99ir.cpp:26: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099765
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 0;\n\
    \    long long int c = 0;\n    long long int d = 0;\n    long long int e = 0;\n\
    \    long long int f = 0;\n    long long int g = 0;\n    long long int h = 0;\n\
    \    long long int i = 0;\n    long long int j = 0;\n    long long int k = 0;\n\
    \    long long int l = 0;\n    long long int m = 0;\n    long long int n = 0;\n\
    \    long long int o = 0;\n    long long int p = 0;\n    long long int q = 0;\n\
    \    long long int r = 0;\n    long long int s = 0;\n    long long int t = 0;\n\
    \    long long int u = 0;\n    long long int v = 0;\n    long long int w = 0;\n\
    \    long long int x = 0;\n    long long int y = 0;\n    long long int z = 0;\n\
    \    long long int aa = 0;\n    long long int bb = 0;\n    long long int cc =\
    \ 0;\n    long long int dd = 0;\n    long long int ee = 0;\n    long long int\
    \ ff = 0;\n    long long int gg = 0;\n    long long int hh = 0;\n    long long\
    \ int ii = 0;\n    long long int jj = 0;\n    long long int kk = 0;\n    long\
    \ long int ll = 0;\n    long long int mm = 0;\n    long long int nn = 0;\n   \
    \ long long int oo = 0;\n    long long int pp = 0;\n    long long int qq = 0;\n\
    \    long long int rr = 0;\n    long long int ss = 0;\n    long long int tt =\
    \ 0;\n    long long int uu = 0;\n    long long int vv = 0;\n    long long int\
    \ ww = 0;\n    long long int xx = 0;\n    long long int yy = 0;\n    long long\
    \ int zz = 0;\n    long long int aaa = 0;\n    long long int bbb = 0;\n    long\
    \ long int ccc = 0;\n    long long int ddd = 0;\n    long long int eee = 0;\n\
    \    long long int fff = 0;\n    long long int ggg = 0;\n    long long int hhh\
    \ = 0;\n    long long int iii = 0;\n    long long int jjj = 0;\n    long long\
    \ int kkk = 0;\n    long long int lll = 0;\n    long long int mmm = 0;\n    long\
    \ long int nnn = 0;\n    long long int ooo = 0;\n    long long int ppp = 0;\n\
    \    long long int qqq = 0;\n    long long int rrr = 0;\n    long long int ss\
    \ = 0;\n    long long int ttt = 0;\n    long \n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphd8hyfuk.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmphd8hyfuk.cpp:78:19: error: redeclaration of \u2018long long int ss\u2019\
    \n   78 |     long long int ss = 0;\n      |                   ^~\n/tmp/tmphd8hyfuk.cpp:52:19:\
    \ note: \u2018long long int ss\u2019 previously declared here\n   52 |     long\
    \ long int ss = 0;\n      |                   ^~\n/tmp/tmphd8hyfuk.cpp:81:1: error:\
    \ expected unqualified-id before \u2018}\u2019 token\n   81 | }\n      | ^\n/tmp/tmphd8hyfuk.cpp:81:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660099765
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    while (b <= a) {\n        if (a % b == 0) {\n           \
    \ while (c <= a / b) {\n                if (a % c == 0) {\n                  \
    \  while (d <= a / c) {\n                        if (a % d == 0) {\n         \
    \                   return true;\n                        }\n                \
    \        d++;\n                    }\n                }\n                c++;\n\
    \            }\n        }\n        b++;\n    }\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n\
    \    assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp1bii43ds: /tmp/tmp1bii43ds.cpp:31: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099760
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = a;\n\
    \    long long int c = 1;\n    long long int d = 1;\n    long long int e = 1;\n\
    \    long long int f = 0;\n    long long int g = 1;\n    long long int h = 1;\n\
    \    long long int i = 1;\n    long long int j = 1;\n    long long int k = 1;\n\
    \    long long int l = 1;\n    long long int m = 1;\n    long long int n = 1;\n\
    \    long long int o = 1;\n    long long int p = 1;\n    long long int q = 1;\n\
    \    long long int r = 1;\n    long long int s = 1;\n    long long int t = 1;\n\
    \    long long int u = 1;\n    long long int v = 1;\n    long long int w = 1;\n\
    \    long long int x = 1;\n    long long int y = 1;\n    long long int z = 1;\n\
    \    long long int a = 1;\n    long long int b = 1;\n    long long int c = 1;\n\
    \    long long int d = 1;\n    long long int e = 1;\n    long long int f = 0;\n\
    \    long long int g = 1;\n    long long int h = 1;\n    long long int i = 1;\n\
    \    long long int j = 1;\n    long long int k = 1;\n    long long int l = 1;\n\
    \    long long int m = 1;\n    long long int n = 1;\n    long long int o = 1;\n\
    \    long long int p = 1;\n    long long int q = 1;\n    long long int r = 1;\n\
    \    long long int s = 1;\n    long long int t = 1;\n    long long int u = 1;\n\
    \    long long int v = 1;\n    long long int w = 1;\n    long long int x = 1;\n\
    \    long long int y = 1;\n    long long int z = 1;\n    long long int a = 1;\n\
    \    long long int b = 1;\n    long long int c = 1;\n    long long int d = 1;\n\
    \    long long int e = 1;\n    long long int f = 0;\n    long long int g = 1;\n\
    \    long long int h = 1;\n    long long int i = 1;\n    long long int j = 1;\n\
    \    long long int k = 1;\n    long long int l = 1;\n    long long int m = 1;\n\
    \    long long int n = 1;\n    long long int o = 1;\n    long long int p = 1;\n\
    \    long long int q = 1;\n    long long int r = 1;\n    long long int s = 1;\n\
    \    long long int t = 1;\n    long long int u = 1;\n    long long int v = 1;\n\
    \    \n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprkoo4vwh.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmprkoo4vwh.cpp:34:19: error: declaration of \u2018long long int a\u2019\
    \ shadows a parameter\n   34 |     long long int a = 1;\n      |             \
    \      ^\n/tmp/tmprkoo4vwh.cpp:35:19: error: redeclaration of \u2018long long\
    \ int b\u2019\n   35 |     long long int b = 1;\n      |                   ^\n\
    /tmp/tmprkoo4vwh.cpp:9:19: note: \u2018long long int b\u2019 previously declared\
    \ here\n    9 |     long long int b = a;\n      |                   ^\n/tmp/tmprkoo4vwh.cpp:36:19:\
    \ error: redeclaration of \u2018long long int c\u2019\n   36 |     long long int\
    \ c = 1;\n      |                   ^\n/tmp/tmprkoo4vwh.cpp:10:19: note: \u2018\
    long long int c\u2019 previously declared here\n   10 |     long long int c =\
    \ 1;\n      |                   ^\n/tmp/tmprkoo4vwh.cpp:37:19: error: redeclaration\
    \ of \u2018long long int d\u2019\n   37 |     long long int d = 1;\n      |  \
    \                 ^\n/tmp/tmprkoo4vwh.cpp:11:19: note: \u2018long long int d\u2019\
    \ previously declared here\n   11 |     long long int d = 1;\n      |        \
    \           ^\n/tmp/tmprkoo4vwh.cpp:38:19: error: redeclaration of \u2018long\
    \ long int e\u2019\n   38 |     long long int e = 1;\n      |                \
    \   ^\n/tmp/tmprkoo4vwh.cpp:12:19: note: \u2018long long int e\u2019 previously\
    \ declared here\n   12 |     long long int e = 1;\n      |                   ^\n\
    /tmp/tmprkoo4vwh.cpp:39:19: error: redeclaration of \u2018long long int f\u2019\
    \n   39 |     long long int f = 0;\n      |                   ^\n/tmp/tmprkoo4vwh.cpp:13:19:\
    \ note: \u2018long long int f\u2019 previously declared here\n   13 |     long\
    \ long int f = 0;\n      |                   ^\n/tmp/tmprkoo4vwh.cpp:40:19: error:\
    \ redeclaration of \u2018long long int g\u2019\n   40 |     long long int g =\
    \ 1;\n      |                   ^\n/tmp/tmprkoo4vwh.cpp:14:19: note: \u2018long\
    \ long int g\u2019 previously declared here\n   14 |     long long int g = 1;\n\
    \      |                   ^\n/tmp/tmprkoo4vwh.cpp:41:19: error: redeclaration\
    \ of \u2018long long int h\u2019\n   41 |     long long int h = 1;\n      |  \
    \                 ^\n/tmp/tmprkoo4vwh.cpp:15:1"
  stdout: ''
  timestamp: 1660099764
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    while (b <= a) {\n        if (a % b == 0 && a % c == 0 &&\
    \ a % d == 0) {\n            return true;\n        }\n        b += 2;\n      \
    \  c += 2;\n        d += 2;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpzo2qmm7h: /tmp/tmpzo2qmm7h.cpp:23: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099761
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int n = 3*a*a;\n\
    \    for(int i = 2; i <= n/2; i++) {\n        if(n%i==0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmpaos3p1zs: /tmp/tmpaos3p1zs.cpp:20: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099766
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5;\n    long long int d = 2;\n    long long int e = 1;\n    long long int\
    \ f = 0;\n    long long int g = 0;\n    long long int h = 0;\n    long long int\
    \ i = 2;\n    long long int j = 2;\n    long long int k = 2;\n    long long int\
    \ l = 2;\n    long long int m = 2;\n    long long int n = 2;\n    long long int\
    \ o = 2;\n    long long int p = 2;\n    long long int q = 2;\n    long long int\
    \ r = 2;\n    long long int s = 2;\n    long long int t = 2;\n    long long int\
    \ u = 2;\n    long long int v = 2;\n    long long int w = 2;\n    long long int\
    \ x = 2;\n    long long int y = 2;\n    long long int z = 2;\n    long long int\
    \ A = 2;\n    long long int B = 2;\n    long long int C = 2;\n    long long int\
    \ D = 2;\n    long long int E = 2;\n    long long int F = 2;\n    long long int\
    \ G = 2;\n    long long int H = 2;\n    long long int I = 2;\n    long long int\
    \ J = 2;\n    long long int K = 2;\n    long long int L = 2;\n    long long int\
    \ M = 2;\n    long long int N = 2;\n    long long int O = 2;\n    long long int\
    \ P = 2;\n    long long int Q = 2;\n    long long int R = 2;\n    long long int\
    \ S = 2;\n    long long int T = 2;\n    long long int U = 2;\n    long long int\
    \ V = 2;\n    long long int W = 2;\n    long long int X = 2;\n    long long int\
    \ Y = 2;\n    long long int Z = 2;\n    long long int A = 2;\n    long long int\
    \ B = 2;\n    long long int C = 2;\n    long long int D = 2;\n    long long int\
    \ E = 2;\n    long long int F = 2;\n    long long int G = 2;\n    long long int\
    \ H = 2;\n    long long int I = 2;\n    long long int J = 2;\n    long long int\
    \ K = 2;\n    long long int L = 2;\n    long long int M = 2;\n    long long int\
    \ N = 2;\n    long long int O = 2;\n    long long int P = 2;\n    long long int\
    \ Q = 2;\n    long long int R = 2;\n    long long int S = 2;\n    long long int\
    \ T = 2;\n    long long int U = 2;\n    long long int V = 2;\n    long long int\
    \ W\n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr1a4djrs.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpr1a4djrs.cpp:59:19: error: redeclaration of \u2018long long int A\u2019\
    \n   59 |     long long int A = 2;\n      |                   ^\n/tmp/tmpr1a4djrs.cpp:33:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   33 |     long\
    \ long int A = 2;\n      |                   ^\n/tmp/tmpr1a4djrs.cpp:60:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   60 |     long long int B =\
    \ 2;\n      |                   ^\n/tmp/tmpr1a4djrs.cpp:34:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   34 |     long long int B = 2;\n\
    \      |                   ^\n/tmp/tmpr1a4djrs.cpp:61:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   61 |     long long int C = 2;\n      |  \
    \                 ^\n/tmp/tmpr1a4djrs.cpp:35:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   35 |     long long int C = 2;\n      |        \
    \           ^\n/tmp/tmpr1a4djrs.cpp:62:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   62 |     long long int D = 2;\n      |                \
    \   ^\n/tmp/tmpr1a4djrs.cpp:36:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   36 |     long long int D = 2;\n      |                   ^\n\
    /tmp/tmpr1a4djrs.cpp:63:19: error: redeclaration of \u2018long long int E\u2019\
    \n   63 |     long long int E = 2;\n      |                   ^\n/tmp/tmpr1a4djrs.cpp:37:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   37 |     long\
    \ long int E = 2;\n      |                   ^\n/tmp/tmpr1a4djrs.cpp:64:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   64 |     long long int F =\
    \ 2;\n      |                   ^\n/tmp/tmpr1a4djrs.cpp:38:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   38 |     long long int F = 2;\n\
    \      |                   ^\n/tmp/tmpr1a4djrs.cpp:65:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   65 |     long long int G = 2;\n      |  \
    \                 ^\n/tmp/tmpr1a4djrs.cpp:39:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   39 |     long long int G = 2;\n      |        \
    \           ^\n/tmp/tmpr1a4djrs.cpp:66:19: error: "
  stdout: ''
  timestamp: 1660099765
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5;\n    while (b <= a) {\n        if (a % b == 0 && a % c == 0)\n      \
    \      return true;\n        b += 2;\n        c += 2;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpkxscg75z: /tmp/tmpkxscg75z.cpp:22: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099765
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = a;\n\
    \    long long int c = 1;\n    long long int d = 1;\n    long long int e = 1;\n\
    \    long long int f = 0;\n    long long int g = 1;\n    long long int h = 1;\n\
    \    long long int i = 0;\n    long long int j = 1;\n    long long int k = 1;\n\
    \    long long int l = 1;\n    long long int m = 1;\n    long long int n = 1;\n\
    \    long long int o = 1;\n    long long int p = 1;\n    long long int q = 1;\n\
    \    long long int r = 1;\n    long long int s = 1;\n    long long int t = 1;\n\
    \    long long int u = 1;\n    long long int v = 1;\n    long long int w = 1;\n\
    \    long long int x = 1;\n    long long int y = 1;\n    long long int z = 1;\n\
    \    long long int A = 1;\n    long long int B = 1;\n    long long int C = 1;\n\
    \    long long int D = 1;\n    long long int E = 1;\n    long long int F = 1;\n\
    \    long long int G = 1;\n    long long int H = 1;\n    long long int I = 1;\n\
    \    long long int J = 1;\n    long long int K = 1;\n    long long int L = 1;\n\
    \    long long int M = 1;\n    long long int N = 1;\n    long long int O = 1;\n\
    \    long long int P = 1;\n    long long int Q = 1;\n    long long int R = 1;\n\
    \    long long int S = 1;\n    long long int T = 1;\n    long long int U = 1;\n\
    \    long long int V = 1;\n    long long int W = 1;\n    long long int X = 1;\n\
    \    long long int Y = 1;\n    long long int Z = 1;\n    long long int A = 1;\n\
    \    long long int B = 1;\n    long long int C = 1;\n    long long int D = 1;\n\
    \    long long int E = 1;\n    long long int F = 1;\n    long long int G = 1;\n\
    \    long long int H = 1;\n    long long int I = 1;\n    long long int J = 1;\n\
    \    long long int K = 1;\n    long long int L = 1;\n    long long int M = 1;\n\
    \    long long int N = 1;\n    long long int O = 1;\n    long long int P = 1;\n\
    \    long long int Q = 1;\n    long long int R = 1;\n    long long int S = 1;\n\
    \    long long int T = 1;\n    long long int U = 1;\n    long long int V = 1;\n\
    \    long \n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_cz5phlj.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmp_cz5phlj.cpp:60:19: error: redeclaration of \u2018long long int A\u2019\
    \n   60 |     long long int A = 1;\n      |                   ^\n/tmp/tmp_cz5phlj.cpp:34:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   34 |     long\
    \ long int A = 1;\n      |                   ^\n/tmp/tmp_cz5phlj.cpp:61:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   61 |     long long int B =\
    \ 1;\n      |                   ^\n/tmp/tmp_cz5phlj.cpp:35:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   35 |     long long int B = 1;\n\
    \      |                   ^\n/tmp/tmp_cz5phlj.cpp:62:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   62 |     long long int C = 1;\n      |  \
    \                 ^\n/tmp/tmp_cz5phlj.cpp:36:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   36 |     long long int C = 1;\n      |        \
    \           ^\n/tmp/tmp_cz5phlj.cpp:63:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   63 |     long long int D = 1;\n      |                \
    \   ^\n/tmp/tmp_cz5phlj.cpp:37:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   37 |     long long int D = 1;\n      |                   ^\n\
    /tmp/tmp_cz5phlj.cpp:64:19: error: redeclaration of \u2018long long int E\u2019\
    \n   64 |     long long int E = 1;\n      |                   ^\n/tmp/tmp_cz5phlj.cpp:38:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   38 |     long\
    \ long int E = 1;\n      |                   ^\n/tmp/tmp_cz5phlj.cpp:65:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   65 |     long long int F =\
    \ 1;\n      |                   ^\n/tmp/tmp_cz5phlj.cpp:39:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   39 |     long long int F = 1;\n\
    \      |                   ^\n/tmp/tmp_cz5phlj.cpp:66:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   66 |     long long int G = 1;\n      |  \
    \                 ^\n/tmp/tmp_cz5phlj.cpp:40:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   40 |     long long int G = 1;\n      |        \
    \           ^\n/tmp/tmp_cz5phlj.cpp:67:19: error: "
  stdout: ''
  timestamp: 1660099765
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = a;\n\
    \    long long int c = 0;\n    long long int d = 0;\n    long long int e = 0;\n\
    \    long long int f = 0;\n    long long int g = 0;\n    long long int h = 0;\n\
    \    long long int i = 0;\n    long long int j = 0;\n    long long int k = 0;\n\
    \    long long int l = 0;\n    long long int m = 0;\n    long long int n = 0;\n\
    \    long long int o = 0;\n    long long int p = 0;\n    long long int q = 0;\n\
    \    long long int r = 0;\n    long long int s = 0;\n    long long int t = 0;\n\
    \    long long int u = 0;\n    long long int v = 0;\n    long long int w = 0;\n\
    \    long long int x = 0;\n    long long int y = 0;\n    long long int z = 0;\n\
    \    long long int A = 0;\n    long long int B = 0;\n    long long int C = 0;\n\
    \    long long int D = 0;\n    long long int E = 0;\n    long long int F = 0;\n\
    \    long long int G = 0;\n    long long int H = 0;\n    long long int I = 0;\n\
    \    long long int J = 0;\n    long long int K = 0;\n    long long int L = 0;\n\
    \    long long int M = 0;\n    long long int N = 0;\n    long long int O = 0;\n\
    \    long long int P = 0;\n    long long int Q = 0;\n    long long int R = 0;\n\
    \    long long int S = 0;\n    long long int T = 0;\n    long long int U = 0;\n\
    \    long long int V = 0;\n    long long int W = 0;\n    long long int X = 0;\n\
    \    long long int Y = 0;\n    long long int Z = 0;\n    long long int A = 0;\n\
    \    long long int B = 0;\n    long long int C = 0;\n    long long int D = 0;\n\
    \    long long int E = 0;\n    long long int F = 0;\n    long long int G = 0;\n\
    \    long long int H = 0;\n    long long int I = 0;\n    long long int J = 0;\n\
    \    long long int K = 0;\n    long long int L = 0;\n    long long int M = 0;\n\
    \    long long int N = 0;\n    long long int O = 0;\n    long long int P = 0;\n\
    \    long long int Q = 0;\n    long long int R = 0;\n    long long int S = 0;\n\
    \    long long int T = 0;\n    long long int U = 0;\n    long long int V = 0;\n\
    \    long long int \n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpp3ox0shb.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpp3ox0shb.cpp:60:19: error: redeclaration of \u2018long long int A\u2019\
    \n   60 |     long long int A = 0;\n      |                   ^\n/tmp/tmpp3ox0shb.cpp:34:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   34 |     long\
    \ long int A = 0;\n      |                   ^\n/tmp/tmpp3ox0shb.cpp:61:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   61 |     long long int B =\
    \ 0;\n      |                   ^\n/tmp/tmpp3ox0shb.cpp:35:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   35 |     long long int B = 0;\n\
    \      |                   ^\n/tmp/tmpp3ox0shb.cpp:62:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   62 |     long long int C = 0;\n      |  \
    \                 ^\n/tmp/tmpp3ox0shb.cpp:36:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   36 |     long long int C = 0;\n      |        \
    \           ^\n/tmp/tmpp3ox0shb.cpp:63:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   63 |     long long int D = 0;\n      |                \
    \   ^\n/tmp/tmpp3ox0shb.cpp:37:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   37 |     long long int D = 0;\n      |                   ^\n\
    /tmp/tmpp3ox0shb.cpp:64:19: error: redeclaration of \u2018long long int E\u2019\
    \n   64 |     long long int E = 0;\n      |                   ^\n/tmp/tmpp3ox0shb.cpp:38:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   38 |     long\
    \ long int E = 0;\n      |                   ^\n/tmp/tmpp3ox0shb.cpp:65:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   65 |     long long int F =\
    \ 0;\n      |                   ^\n/tmp/tmpp3ox0shb.cpp:39:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   39 |     long long int F = 0;\n\
    \      |                   ^\n/tmp/tmpp3ox0shb.cpp:66:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   66 |     long long int G = 0;\n      |  \
    \                 ^\n/tmp/tmpp3ox0shb.cpp:40:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   40 |     long long int G = 0;\n      |        \
    \           ^\n/tmp/tmpp3ox0shb.cpp:67:19: error: "
  stdout: ''
  timestamp: 1660099760
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    while (b <= a) {\n        if (a % b == 0) {\n           \
    \ while (c <= a / b) {\n                if (a % c == 0) {\n                  \
    \  while (d <= a / c) {\n                        if (a % d == 0) {\n         \
    \                   return true;\n                        }\n                \
    \        d++;\n                    }\n                }\n                c++;\n\
    \            }\n        }\n        b++;\n    }\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n\
    \    assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp1bii43ds: /tmp/tmp1bii43ds.cpp:31: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099760
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    while (b <= a) {\n        if (a % b == 0 && a % c == 0 &&\
    \ a % d == 0) {\n            return true;\n        }\n        b += 2;\n      \
    \  c += 2;\n        d += 2;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpzo2qmm7h: /tmp/tmpzo2qmm7h.cpp:23: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099761
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    while (b <= a) {\n        if (a % b == 0 && a % c == 0 &&\
    \ a % d == 0) {\n            return true;\n        }\n        b += 2;\n      \
    \  c += 2;\n        d += 2;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpzo2qmm7h: /tmp/tmpzo2qmm7h.cpp:23: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099761
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = a;\n\
    \    long long int c = 1;\n    long long int d = 1;\n    long long int e = 1;\n\
    \    long long int f = 0;\n    long long int g = 0;\n    long long int h = 0;\n\
    \    long long int i = 0;\n    long long int j = 0;\n    long long int k = 0;\n\
    \    long long int l = 0;\n    long long int m = 0;\n    long long int n = 0;\n\
    \    long long int o = 0;\n    long long int p = 0;\n    long long int q = 0;\n\
    \    long long int r = 0;\n    long long int s = 0;\n    long long int t = 0;\n\
    \    long long int u = 0;\n    long long int v = 0;\n    long long int w = 0;\n\
    \    long long int x = 0;\n    long long int y = 0;\n    long long int z = 0;\n\
    \    long long int A = 0;\n    long long int B = 0;\n    long long int C = 0;\n\
    \    long long int D = 0;\n    long long int E = 0;\n    long long int F = 0;\n\
    \    long long int G = 0;\n    long long int H = 0;\n    long long int I = 0;\n\
    \    long long int J = 0;\n    long long int K = 0;\n    long long int L = 0;\n\
    \    long long int M = 0;\n    long long int N = 0;\n    long long int O = 0;\n\
    \    long long int P = 0;\n    long long int Q = 0;\n    long long int R = 0;\n\
    \    long long int S = 0;\n    long long int T = 0;\n    long long int U = 0;\n\
    \    long long int V = 0;\n    long long int W = 0;\n    long long int X = 0;\n\
    \    long long int Y = 0;\n    long long int Z = 0;\n    long long int A = 0;\n\
    \    long long int B = 0;\n    long long int C = 0;\n    long long int D = 0;\n\
    \    long long int E = 0;\n    long long int F = 0;\n    long long int G = 0;\n\
    \    long long int H = 0;\n    long long int I = 0;\n    long long int J = 0;\n\
    \    long long int K = 0;\n    long long int L = 0;\n    long long int M = 0;\n\
    \    long long int N = 0;\n    long long int O = 0;\n    long long int P = 0;\n\
    \    long long int Q = 0;\n    long long int R = 0;\n    long long int S = 0;\n\
    \    long long int T = 0;\n    long long int U = 0;\n    long long int V = 0;\n\
    \    long long int \n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpa48wm216.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpa48wm216.cpp:60:19: error: redeclaration of \u2018long long int A\u2019\
    \n   60 |     long long int A = 0;\n      |                   ^\n/tmp/tmpa48wm216.cpp:34:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   34 |     long\
    \ long int A = 0;\n      |                   ^\n/tmp/tmpa48wm216.cpp:61:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   61 |     long long int B =\
    \ 0;\n      |                   ^\n/tmp/tmpa48wm216.cpp:35:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   35 |     long long int B = 0;\n\
    \      |                   ^\n/tmp/tmpa48wm216.cpp:62:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   62 |     long long int C = 0;\n      |  \
    \                 ^\n/tmp/tmpa48wm216.cpp:36:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   36 |     long long int C = 0;\n      |        \
    \           ^\n/tmp/tmpa48wm216.cpp:63:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   63 |     long long int D = 0;\n      |                \
    \   ^\n/tmp/tmpa48wm216.cpp:37:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   37 |     long long int D = 0;\n      |                   ^\n\
    /tmp/tmpa48wm216.cpp:64:19: error: redeclaration of \u2018long long int E\u2019\
    \n   64 |     long long int E = 0;\n      |                   ^\n/tmp/tmpa48wm216.cpp:38:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   38 |     long\
    \ long int E = 0;\n      |                   ^\n/tmp/tmpa48wm216.cpp:65:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   65 |     long long int F =\
    \ 0;\n      |                   ^\n/tmp/tmpa48wm216.cpp:39:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   39 |     long long int F = 0;\n\
    \      |                   ^\n/tmp/tmpa48wm216.cpp:66:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   66 |     long long int G = 0;\n      |  \
    \                 ^\n/tmp/tmpa48wm216.cpp:40:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   40 |     long long int G = 0;\n      |        \
    \           ^\n/tmp/tmpa48wm216.cpp:67:19: error: "
  stdout: ''
  timestamp: 1660099760
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long b = 3, c = 5, d\
    \ = 7;\n    while (b <= a) {\n        if (a % b == 0) {\n            while (c\
    \ <= a) {\n                if (a % c == 0) {\n                    while (d <=\
    \ a) {\n                        if (a % d == 0) {\n                          \
    \  if (b * c * d == a) {\n                                return true;\n     \
    \                       }\n                            else {\n              \
    \                  return false;\n                            }\n            \
    \            }\n                        else {\n                            return\
    \ false;\n                        }\n                        d++;\n          \
    \          }\n                }\n                else {\n                    return\
    \ false;\n                }\n                c++;\n            }\n        }\n\
    \        else {\n            return false;\n        }\n        b++;\n    }\n \
    \   return false;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmptm4oh1dl: /tmp/tmptm4oh1dl.cpp:45: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099765
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int p = 1;\n    long long int q = 1;\n    long\
    \ long int r = 1;\n    long long int s = 1;\n    long long int t = 1;\n    long\
    \ long int u = 1;\n    long long int v = 1;\n    long long int w = 1;\n    long\
    \ long int x = 1;\n    long long int y = 1;\n    long long int z = 1;\n    long\
    \ long int aa = 1;\n    long long int bb = 1;\n    long long int cc = 1;\n   \
    \ long long int dd = 1;\n    long long int ee = 1;\n    long long int ff = 1;\n\
    \    long long int gg = 1;\n    long long int hh = 1;\n    long long int ii =\
    \ 1;\n    long long int jj = 1;\n    long long int kk = 1;\n    long long int\
    \ ll = 1;\n    long long int mm = 1;\n    long long int nn = 1;\n    long long\
    \ int oo = 1;\n    long long int pp = 1;\n    long long int qq = 1;\n    long\
    \ long int rr = 1;\n    long long int ss = 0;\n    long long int tt = 0;\n   \
    \ long long int uu = 1;\n    long long int vv = 1;\n    long long int ww = 1;\n\
    \    long long int xx = 0;\n    long long int yy = 0;\n    long long int zz =\
    \ 0;\n    long long int aaa = 0;\n    long long int bbb = 0;\n    long long int\
    \ ccc = 0;\n    long long int ddd = 0;\n    long long int eee = 0;\n    long long\
    \ int fff = 0;\n    long long int ggg = 0;\n    long long int hhh = 0;\n    long\
    \ long int iii = 0;\n    long long int jjj = 0;\n    long long int kkk = 0;\n\
    \    long long int lll = 0;\n    long long int mmm = 0;\n    long long int nnn\
    \ = 0;\n    long long int ooo = 0;\n    long long int ppp = 0;\n    long long\
    \ int qqq = 0;\n    long long int rrr = 0;\n    long long int ss = 0;\n    long\
    \ long int tt = 0;\n    long long int uuu = 0;\n    long long int vvv = 0;\n \
    \   long long int www = 0;\n    long long int xxx = 0;\n    long long int yyy\
    \ = 0;\n    long long int zzz = 0;\n    long long int aaaa = 0;\n    long long\
    \ int bbbb = 0;\n    long long int cccc = 0;\n    long long int dddd = 0;\n  \
    \  long long int eeee = 0;\n    long long int ffff\n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt5wrsjhy.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpt5wrsjhy.cpp:65:19: error: redeclaration of \u2018long long int ss\u2019\
    \n   65 |     long long int ss = 0;\n      |                   ^~\n/tmp/tmpt5wrsjhy.cpp:39:19:\
    \ note: \u2018long long int ss\u2019 previously declared here\n   39 |     long\
    \ long int ss = 0;\n      |                   ^~\n/tmp/tmpt5wrsjhy.cpp:66:19:\
    \ error: redeclaration of \u2018long long int tt\u2019\n   66 |     long long\
    \ int tt = 0;\n      |                   ^~\n/tmp/tmpt5wrsjhy.cpp:40:19: note:\
    \ \u2018long long int tt\u2019 previously declared here\n   40 |     long long\
    \ int tt = 0;\n      |                   ^~\n/tmp/tmpt5wrsjhy.cpp:79:1: error:\
    \ expected initializer before \u2018}\u2019 token\n   79 | }\n      | ^\n/tmp/tmpt5wrsjhy.cpp:79:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660099765
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int counter = 0;\n    while (b <= a) {\n      \
    \  if (a % b == 0) {\n            counter++;\n        }\n        b += 2;\n   \
    \ }\n    if (counter == 3) {\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpn5xalmk2: /tmp/tmpn5xalmk2.cpp:26: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099765
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int d = a%b;\n    long long int c = a%c;\n    long\
    \ long int d = a%d;\n    long long int c = a%c;\n    long long int d = a%d;\n\
    \    long long int c = a%c;\n    long long int d = a%d;\n    long long int c =\
    \ a%c;\n    long long int d = a%d;\n    long long int c = a%c;\n    long long\
    \ int d = a%d;\n    long long int c = a%c;\n    long long int d = a%d;\n    long\
    \ long int c = a%c;\n    long long int d = a%d;\n    long long int c = a%c;\n\
    \    long long int d = a%d;\n    long long int c = a%c;\n    long long int d =\
    \ a%d;\n    long long int c = a%c;\n    long long int d = a%d;\n    long long\
    \ int c = a%c;\n    long long int d = a%d;\n    long long int c = a%c;\n    long\
    \ long int d = a%d;\n    long long int c = a%c;\n    long long int d = a%d;\n\
    \    long long int c = a%c;\n    long long int d = a%d;\n    long long int c =\
    \ a%c;\n    long long int d = a%d;\n    long long int c = a%c;\n    long long\
    \ int d = a%d;\n    long long int c = a%c;\n    long long int d = a%d;\n    long\
    \ long int c = a%c;\n    long long int d = a%d;\n    long long int c = a%c;\n\
    \    long long int d = a%d;\n    long long int c = a%c;\n    long long int d =\
    \ a%d;\n    long long int c = a%c;\n    long long int d = a%d;\n    long long\
    \ int c = a%c;\n    long long int d = a%d;\n    long long int c = a%c;\n    long\
    \ long int d = a%d;\n    long long int c = a%c;\n    long long int d = a%d;\n\
    \    long long int c = a%c;\n    long long int d = a%d;\n    long long int c =\
    \ a%c;\n    long long int d = a%d;\n    long long int c = a%c;\n    long long\
    \ int d = a%d;\n    long long int c = \n}\nint main() {\n    auto candidate =\
    \ is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpv7q7e4wv.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpv7q7e4wv.cpp:10:19: error: redeclaration of \u2018long long int d\u2019\
    \n   10 |     long long int d = a%b;\n      |                   ^\n/tmp/tmpv7q7e4wv.cpp:9:33:\
    \ note: \u2018long long int d\u2019 previously declared here\n    9 |     long\
    \ long int b = 3, c = 5, d = 7;\n      |                                 ^\n/tmp/tmpv7q7e4wv.cpp:11:19:\
    \ error: redeclaration of \u2018long long int c\u2019\n   11 |     long long int\
    \ c = a%c;\n      |                   ^\n/tmp/tmpv7q7e4wv.cpp:9:26: note: \u2018\
    long long int c\u2019 previously declared here\n    9 |     long long int b =\
    \ 3, c = 5, d = 7;\n      |                          ^\n/tmp/tmpv7q7e4wv.cpp:12:19:\
    \ error: redeclaration of \u2018long long int d\u2019\n   12 |     long long int\
    \ d = a%d;\n      |                   ^\n/tmp/tmpv7q7e4wv.cpp:9:33: note: \u2018\
    long long int d\u2019 previously declared here\n    9 |     long long int b =\
    \ 3, c = 5, d = 7;\n      |                                 ^\n/tmp/tmpv7q7e4wv.cpp:13:19:\
    \ error: redeclaration of \u2018long long int c\u2019\n   13 |     long long int\
    \ c = a%c;\n      |                   ^\n/tmp/tmpv7q7e4wv.cpp:9:26: note: \u2018\
    long long int c\u2019 previously declared here\n    9 |     long long int b =\
    \ 3, c = 5, d = 7;\n      |                          ^\n/tmp/tmpv7q7e4wv.cpp:14:19:\
    \ error: redeclaration of \u2018long long int d\u2019\n   14 |     long long int\
    \ d = a%d;\n      |                   ^\n/tmp/tmpv7q7e4wv.cpp:9:33: note: \u2018\
    long long int d\u2019 previously declared here\n    9 |     long long int b =\
    \ 3, c = 5, d = 7;\n      |                                 ^\n/tmp/tmpv7q7e4wv.cpp:15:19:\
    \ error: redeclaration of \u2018long long int c\u2019\n   15 |     long long int\
    \ c = a%c;\n      |                   ^\n/tmp/tmpv7q7e4wv.cpp:9:26: note: \u2018\
    long long int c\u2019 previously declared here\n    9 |     long long int b =\
    \ 3, c = 5, d = 7;\n      |                          ^\n/tmp/tmpv7q7e4wv.cpp:16:19:\
    \ error: redeclaration of \u2018long long int d\u2019\n   16 |     long long int\
    \ d = a%d;\n      |                   ^\n/tmp/tmpv7q7e4wv.cpp:9"
  stdout: ''
  timestamp: 1660099765
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = a;\n\
    \    long long int c = 1;\n    long long int d = 1;\n    long long int e = 1;\n\
    \    long long int f = 0;\n    long long int g = 0;\n    long long int h = 0;\n\
    \    long long int i = 1;\n    long long int j = 1;\n    long long int k = 1;\n\
    \    long long int l = 1;\n    long long int m = 1;\n    long long int n = 1;\n\
    \    long long int o = 1;\n    long long int p = 1;\n    long long int q = 1;\n\
    \    long long int r = 1;\n    long long int s = 1;\n    long long int t = 1;\n\
    \    long long int u = 1;\n    long long int v = 1;\n    long long int w = 1;\n\
    \    long long int x = 1;\n    long long int y = 1;\n    long long int z = 1;\n\
    \    long long int aa = 1;\n    long long int bb = 1;\n    long long int cc =\
    \ 1;\n    long long int dd = 1;\n    long long int ee = 1;\n    long long int\
    \ ff = 1;\n    long long int gg = 1;\n    long long int hh = 1;\n    long long\
    \ int ii = 0;\n    long long int jj = 0;\n    long long int kk = 0;\n    long\
    \ long int ll = 0;\n    long long int mm = 1;\n    long long int nn = 0;\n   \
    \ long long int oo = 0;\n    long long int pp = 1;\n    long long int qq = 1;\n\
    \    long long int rr = 0;\n    long long int ss = 0;\n    long long int tt =\
    \ 0;\n    long long int uu = 1;\n    long long int vv = 1;\n    long long int\
    \ ww = 1;\n    long long int xx = 0;\n    long long int yy = 0;\n    long long\
    \ int zz = 0;\n    long long int aaa = 0;\n    long long int bbb = 0;\n    long\
    \ long int ccc = 0;\n    long long int ddd = 0;\n    long long int eee = 0;\n\
    \    long long int fff = 0;\n    long long int ggg = 0;\n    long long int hhh\
    \ = 0;\n    long long int iii = 0;\n    long long int jjj = 0;\n    long long\
    \ int kkk = 0;\n    long long int lll = 0;\n    long long int mmm = 0;\n    long\
    \ long int nnn = 0;\n    long long int ooo = 0;\n    long long int ppp = 0;\n\
    \    long long int qqq = 0;\n    long long int rrr = 0;\n    long long int sss\
    \ = 0;\n    long long int ttt\n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpptyq5cvh.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpptyq5cvh.cpp:80:1: error: expected initializer before \u2018}\u2019\
    \ token\n   80 | }\n      | ^\n/tmp/tmpptyq5cvh.cpp:80:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660099765
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5;\n    long long int d = 2;\n    long long int e = 1;\n    while (b <=\
    \ a) {\n        if (a % b == 0) {\n            while (c <= a) {\n            \
    \    if (a % c == 0) {\n                    while (d <= a) {\n               \
    \         if (a % d == 0) {\n                            while (e <= a) {\n  \
    \                              if (a % e == 0) {\n                           \
    \         return true;\n                                }\n                  \
    \              e++;\n                            }\n                        }\n\
    \                        d++;\n                    }\n                }\n    \
    \            c++;\n            }\n        }\n        b++;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpr9_qp63i: /tmp/tmpr9_qp63i.cpp:37: int main(): Assertion `candidate((5))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660099766
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = a;\n\
    \    long long int c = 0;\n    long long int d = 0;\n    long long int e = 0;\n\
    \    long long int f = 0;\n    long long int g = 0;\n    long long int h = 0;\n\
    \    long long int i = 0;\n    long long int j = 0;\n    long long int k = 0;\n\
    \    long long int l = 0;\n    long long int m = 0;\n    long long int n = 0;\n\
    \    long long int o = 0;\n    long long int p = 0;\n    long long int q = 0;\n\
    \    long long int r = 0;\n    long long int s = 0;\n    long long int t = 0;\n\
    \    long long int u = 0;\n    long long int v = 0;\n    long long int w = 0;\n\
    \    long long int x = 0;\n    long long int y = 0;\n    long long int z = 0;\n\
    \    long long int A = 0;\n    long long int B = 0;\n    long long int C = 0;\n\
    \    long long int D = 0;\n    long long int E = 0;\n    long long int F = 0;\n\
    \    long long int G = 0;\n    long long int H = 0;\n    long long int I = 0;\n\
    \    long long int J = 0;\n    long long int K = 0;\n    long long int L = 0;\n\
    \    long long int M = 0;\n    long long int N = 0;\n    long long int O = 0;\n\
    \    long long int P = 0;\n    long long int Q = 0;\n    long long int R = 0;\n\
    \    long long int S = 0;\n    long long int T = 0;\n    long long int U = 0;\n\
    \    long long int V = 0;\n    long long int W = 0;\n    long long int X = 0;\n\
    \    long long int Y = 0;\n    long long int Z = 0;\n    long long int A = 0;\n\
    \    long long int B = 0;\n    long long int C = 0;\n    long long int D = 0;\n\
    \    long long int E = 0;\n    long long int F = 0;\n    long long int G = 0;\n\
    \    long long int H = 0;\n    long long int I = 0;\n    long long int J = 0;\n\
    \    long long int K = 0;\n    long long int L = 0;\n    long long int M = 0;\n\
    \    long long int N = 0;\n    long long int O = 0;\n    long long int P = 0;\n\
    \    long long int Q = 0;\n    long long int R = 0;\n    long long int S = 0;\n\
    \    long long int T = 0;\n    long long int U = 0;\n    long long int V = 0;\n\
    \    long long int \n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpp3ox0shb.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpp3ox0shb.cpp:60:19: error: redeclaration of \u2018long long int A\u2019\
    \n   60 |     long long int A = 0;\n      |                   ^\n/tmp/tmpp3ox0shb.cpp:34:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   34 |     long\
    \ long int A = 0;\n      |                   ^\n/tmp/tmpp3ox0shb.cpp:61:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   61 |     long long int B =\
    \ 0;\n      |                   ^\n/tmp/tmpp3ox0shb.cpp:35:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   35 |     long long int B = 0;\n\
    \      |                   ^\n/tmp/tmpp3ox0shb.cpp:62:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   62 |     long long int C = 0;\n      |  \
    \                 ^\n/tmp/tmpp3ox0shb.cpp:36:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   36 |     long long int C = 0;\n      |        \
    \           ^\n/tmp/tmpp3ox0shb.cpp:63:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   63 |     long long int D = 0;\n      |                \
    \   ^\n/tmp/tmpp3ox0shb.cpp:37:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   37 |     long long int D = 0;\n      |                   ^\n\
    /tmp/tmpp3ox0shb.cpp:64:19: error: redeclaration of \u2018long long int E\u2019\
    \n   64 |     long long int E = 0;\n      |                   ^\n/tmp/tmpp3ox0shb.cpp:38:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   38 |     long\
    \ long int E = 0;\n      |                   ^\n/tmp/tmpp3ox0shb.cpp:65:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   65 |     long long int F =\
    \ 0;\n      |                   ^\n/tmp/tmpp3ox0shb.cpp:39:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   39 |     long long int F = 0;\n\
    \      |                   ^\n/tmp/tmpp3ox0shb.cpp:66:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   66 |     long long int G = 0;\n      |  \
    \                 ^\n/tmp/tmpp3ox0shb.cpp:40:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   40 |     long long int G = 0;\n      |        \
    \           ^\n/tmp/tmpp3ox0shb.cpp:67:19: error: "
  stdout: ''
  timestamp: 1660099760
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int temp;\n    long long int count = 0;\n    while\
    \ (b <= a) {\n        temp = a % b;\n        if (temp == 0)\n            return\
    \ false;\n        if (temp == 1)\n            count++;\n        if (temp == 2)\n\
    \            count++;\n        if (temp == 3)\n            count++;\n        if\
    \ (temp == 5)\n            count++;\n        if (temp == 7)\n            count++;\n\
    \        b += 2;\n    }\n    if (count == 3)\n        return true;\n    return\
    \ false;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp_276liqr: /tmp/tmp_276liqr.cpp:35: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099766
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = a;\n\
    \    long long int c = 0;\n    long long int d = 1;\n    long long int e = 1;\n\
    \    long long int f = 0;\n    long long int g = 0;\n    long long int h = 0;\n\
    \    long long int i = 1;\n    long long int j = 1;\n    long long int k = 1;\n\
    \    long long int l = 1;\n    long long int m = 1;\n    long long int n = 1;\n\
    \    long long int o = 1;\n    long long int p = 1;\n    long long int q = 1;\n\
    \    long long int r = 1;\n    long long int s = 1;\n    long long int t = 1;\n\
    \    long long int u = 1;\n    long long int v = 1;\n    long long int w = 1;\n\
    \    long long int x = 1;\n    long long int y = 1;\n    long long int z = 1;\n\
    \    long long int A = 1;\n    long long int B = 1;\n    long long int C = 1;\n\
    \    long long int D = 1;\n    long long int E = 1;\n    long long int F = 1;\n\
    \    long long int G = 1;\n    long long int H = 1;\n    long long int I = 1;\n\
    \    long long int J = 1;\n    long long int K = 1;\n    long long int L = 1;\n\
    \    long long int M = 1;\n    long long int N = 1;\n    long long int O = 1;\n\
    \    long long int P = 1;\n    long long int Q = 1;\n    long long int R = 1;\n\
    \    long long int S = 1;\n    long long int T = 1;\n    long long int U = 1;\n\
    \    long long int V = 1;\n    long long int W = 1;\n    long long int X = 1;\n\
    \    long long int Y = 1;\n    long long int Z = 1;\n    long long int A = 1;\n\
    \    long long int B = 1;\n    long long int C = 1;\n    long long int D = 1;\n\
    \    long long int E = 1;\n    long long int F = 1;\n    long long int G = 1;\n\
    \    long long int H = 1;\n    long long int I = 1;\n    long long int J = 1;\n\
    \    long long int K = 1;\n    long long int L = 1;\n    long long int M = 1;\n\
    \    long long int N = 1;\n    long long int O = 1;\n    long long int P = 1;\n\
    \    long long int Q = 1;\n    long long int R = 1;\n    long long int S = 1;\n\
    \    long long int T = 1;\n    long long int U = 1;\n    long long int V = 1;\n\
    \    \n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1k07f40u.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmp1k07f40u.cpp:60:19: error: redeclaration of \u2018long long int A\u2019\
    \n   60 |     long long int A = 1;\n      |                   ^\n/tmp/tmp1k07f40u.cpp:34:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   34 |     long\
    \ long int A = 1;\n      |                   ^\n/tmp/tmp1k07f40u.cpp:61:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   61 |     long long int B =\
    \ 1;\n      |                   ^\n/tmp/tmp1k07f40u.cpp:35:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   35 |     long long int B = 1;\n\
    \      |                   ^\n/tmp/tmp1k07f40u.cpp:62:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   62 |     long long int C = 1;\n      |  \
    \                 ^\n/tmp/tmp1k07f40u.cpp:36:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   36 |     long long int C = 1;\n      |        \
    \           ^\n/tmp/tmp1k07f40u.cpp:63:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   63 |     long long int D = 1;\n      |                \
    \   ^\n/tmp/tmp1k07f40u.cpp:37:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   37 |     long long int D = 1;\n      |                   ^\n\
    /tmp/tmp1k07f40u.cpp:64:19: error: redeclaration of \u2018long long int E\u2019\
    \n   64 |     long long int E = 1;\n      |                   ^\n/tmp/tmp1k07f40u.cpp:38:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   38 |     long\
    \ long int E = 1;\n      |                   ^\n/tmp/tmp1k07f40u.cpp:65:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   65 |     long long int F =\
    \ 1;\n      |                   ^\n/tmp/tmp1k07f40u.cpp:39:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   39 |     long long int F = 1;\n\
    \      |                   ^\n/tmp/tmp1k07f40u.cpp:66:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   66 |     long long int G = 1;\n      |  \
    \                 ^\n/tmp/tmp1k07f40u.cpp:40:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   40 |     long long int G = 1;\n      |        \
    \           ^\n/tmp/tmp1k07f40u.cpp:67:19: error: "
  stdout: ''
  timestamp: 1660099765
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int flag = 0;\n    while(a != 0) {\n        if(b\
    \ == d) {\n            flag = 1;\n            break;\n        }\n        if(b\
    \ == c) {\n            flag = 1;\n            break;\n        }\n        if(b\
    \ == d) {\n            flag = 1;\n            break;\n        }\n        if(b\
    \ == c) {\n            flag = 1;\n            break;\n        }\n        if(b\
    \ == d) {\n            flag = 1;\n            break;\n        }\n        if(b\
    \ == c) {\n            flag = 1;\n            break;\n        }\n        if(b\
    \ == d) {\n            flag = 1;\n            break;\n        }\n        if(b\
    \ == c) {\n            flag = 1;\n            break;\n        }\n        if(b\
    \ == d) {\n            flag = 1;\n            break;\n        }\n        if(b\
    \ == c) {\n            flag = 1;\n            break;\n        }\n        if(b\
    \ == d) {\n            flag = 1;\n            break;\n        }\n        if(b\
    \ == c) {\n            flag = 1;\n            break;\n        }\n        if(b\
    \ == d) {\n            flag = 1;\n            break;\n        }\n        if(b\
    \ == c) {\n            flag = 1;\n            break;\n        }\n        if(b\
    \ == d) {\n            flag = 1;\n            break;\n        }\n        if(b\
    \ == c) {\n            flag = 1;\n            break;\n        }\n        if(b\
    \ == d) {\n            flag = 1;\n            break;\n        }\n        if(b\
    \ == c) {\n            flag = 1;\n            break;\n        }\n        if(b\
    \ == d) {\n            flag = 1;\n            break;\n        }\n        if(b\
    \ == c) {\n            flag = 1;\n            break;\n        }\n        if(b\
    \ == d) {\n            flag = 1;\n            break;\n        }\n        if(b\
    \ == c) {\n            flag = 1;\n            break;\n        }\n        if(b\
    \ == d) {\n            flag = 1;\n            break;\n        }\n        if(b\
    \ == c) {\n            flag = 1;\n            break;\n        }\n        if(b\
    \ == d) {\n            flag = 1;\n            break;\n        }\n        if(b\
    \ == c) {\n            flag = 1;\n            break;\n        }\n        if(b\
    \ == d) {\n            flag = 1;\n            break;\n        }\n        if(b\
    \ == c) {\n            flag = 1;\n            break;\n        }\n        if(b\
    \ == d) {\n            flag = 1;\n            break;\n        }\n        if(b\
    \ == c) {\n            flag = 1;\n            break;\n        }\n        if(b\
    \ == d) {\n            flag = 1;\n            break;\n        }\n        if(b\
    \ == c) {\n            flag = 1;\n            break;\n        }\n        if(b\
    \ == d) {\n            flag = 1;\n            break;\n        }\n        if(b\
    \ == c) {\n            flag = 1;\n            break;\n        }\n        if(b\
    \ == d) {\n            flag = 1;\n            break;\n        }\n        if(b\
    \ == c) {\n            flag = 1;\n            break;\n        }\n        if(b\
    \ == d) {\n            flag = 1;\n            break;\n        }\n        if(b\
    \ == c) {\n            \n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpzjayhtaq.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpzjayhtaq.cpp:163:12: error: a function-definition is not allowed here\
    \ before \u2018{\u2019 token\n  163 | int main() {\n      |            ^\n/tmp/tmpzjayhtaq.cpp:175:1:\
    \ error: expected \u2018}\u2019 at end of input\n  175 | }\n      | ^\n/tmp/tmpzjayhtaq.cpp:11:19:\
    \ note: to match this \u2018{\u2019\n   11 |     while(a != 0) {\n      |    \
    \               ^\n/tmp/tmpzjayhtaq.cpp:175:1: error: expected \u2018}\u2019 at\
    \ end of input\n  175 | }\n      | ^\n/tmp/tmpzjayhtaq.cpp:8:32: note: to match\
    \ this \u2018{\u2019\n    8 | bool is_multiply_prime(long a) {\n      |      \
    \                          ^\n/tmp/tmpzjayhtaq.cpp:175:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n  175 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660099766
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int sum = 0;\n    while (b <= a) {\n        if\
    \ (a % b == 0) {\n            sum += b;\n        }\n        if (a % c == 0) {\n\
    \            sum += c;\n        }\n        if (a % d == 0) {\n            sum\
    \ += d;\n        }\n        b += 2;\n        c += 2;\n        d += 2;\n    }\n\
    \    if (sum == a) {\n        return true;\n    }\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n\
    \    assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpna1qp_jr: /tmp/tmpna1qp_jr.cpp:33: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099766
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int p = a;\n    while (p) {\n        if (p % 2\
    \ == 0) {\n            if (p % 3 == 0) {\n                if (p % 5 == 0) {\n\
    \                    b += 3;\n                }\n                else {\n    \
    \                b += 2;\n                }\n            }\n            else {\n\
    \                b += 1;\n            }\n        }\n        else {\n         \
    \   b += 1;\n        }\n        p /= 2;\n    }\n    while (b < 100) {\n      \
    \  if (b * c < d) {\n            return false;\n        }\n        b += 1;\n \
    \       c += 1;\n        d += 1;\n    }\n    return true;\n}\nint main() {\n \
    \   auto candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n\
    \    assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpazd_s1wn: /tmp/tmpazd_s1wn.cpp:42: int main(): Assertion `candidate((5))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660099766
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int e = 0;\n    while (b <= a) {\n        if (a\
    \ % b == 0) {\n            while (c <= a) {\n                if (a % c == 0) {\n\
    \                    while (d <= a) {\n                        if (a % d == 0)\
    \ {\n                            e++;\n                        }\n           \
    \             d++;\n                    }\n                }\n               \
    \ c++;\n            }\n        }\n        b++;\n    }\n    if (e == 3) {\n   \
    \     return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmp84ae0x07: /tmp/tmp84ae0x07.cpp:36: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099766
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    int flag = 0;\n    long\
    \ b = 2;\n    long c = a;\n    long d = 1;\n    long e = 1;\n    long f = 0;\n\
    \    long g = 0;\n    long h = 0;\n    long i = 0;\n    long j = 0;\n    long\
    \ k = 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n    long o = 0;\n\
    \    long p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long\
    \ t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n\
    \    long y = 0;\n    long z = 0;\n    long A = 0;\n    long B = 0;\n    long\
    \ C = 0;\n    long D = 0;\n    long E = 0;\n    long F = 0;\n    long G = 0;\n\
    \    long H = 0;\n    long I = 0;\n    long J = 0;\n    long K = 0;\n    long\
    \ L = 0;\n    long M = 0;\n    long N = 0;\n    long O = 0;\n    long P = 0;\n\
    \    long Q = 0;\n    long R = 0;\n    long S = 0;\n    long T = 0;\n    long\
    \ U = 0;\n    long V = 0;\n    long W = 0;\n    long X = 0;\n    long Y = 0;\n\
    \    long Z = 0;\n    long aa = 0;\n    long bb = 0;\n    long cc = 0;\n    long\
    \ dd = 0;\n    long ee = 0;\n    long ff = 0;\n    long gg = 0;\n    long hh =\
    \ 0;\n    long ii = 0;\n    long jj = 0;\n    long kk = 0;\n    long ll = 0;\n\
    \    long mm = 0;\n    long nn = 0;\n    long oo = 0;\n    long pp = 0;\n    long\
    \ qq = 0;\n    long rr = 0;\n    long ss = 0;\n    long tt = 0;\n    long uu =\
    \ 0;\n    long vv = 0;\n    long ww = 0;\n    long xx = 0;\n    long yy = 0;\n\
    \    long zz = 0;\n    long Aa = 0;\n    long Bb = 0;\n    long Cc = 0;\n    long\
    \ Dd = 0;\n    long Ee = 0;\n    long Ff = 0;\n    long Gg = 0;\n    long Hh =\
    \ 0;\n    long Ii = 0;\n    long Jj = 0;\n    long Kk = 0;\n    long Ll = 0;\n\
    \    long Mm = 0;\n    long Nn = 0;\n    long Oo = 0;\n    long Pp = 0;\n    long\
    \ Qq = 0;\n    long Rr = 0;\n    long Ss = 0;\n    long Tt = 0;\n    long Uu =\
    \ 0;\n    long V\n}\nint main() {\n    auto candidate = is_multiply_prime;\n \
    \   assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp8wedov1z.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmp8wedov1z.cpp:109:1: error: expected initializer before \u2018}\u2019\
    \ token\n  109 | }\n      | ^\n/tmp/tmp8wedov1z.cpp:109:1: warning: no return\
    \ statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660099766
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int result = 1;\n    while (b <= a) {\n       \
    \ if (a % b == 0) {\n            while (c <= a / b) {\n                if (a %\
    \ c == 0) {\n                    while (d <= a / c) {\n                      \
    \  if (a % d == 0) {\n                            result = false;\n          \
    \                  break;\n                        }\n                       \
    \ d++;\n                    }\n                    break;\n                }\n\
    \                c++;\n            }\n            break;\n        }\n        b++;\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpub_eg3aa: /tmp/tmpub_eg3aa.cpp:34: int main(): Assertion `candidate((5))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660099766
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = a;\n\
    \    long long int c = a;\n    long long int d = a;\n    long long int e = 1;\n\
    \    long long int f = 1;\n    long long int g = a;\n    long long int h = 1;\n\
    \    long long int i = 1;\n    long long int j = 1;\n    long long int k = 1;\n\
    \    long long int l = 1;\n    long long int m = 1;\n    long long int n = 1;\n\
    \    long long int o = 1;\n    long long int p = 1;\n    long long int q = 1;\n\
    \    long long int r = 1;\n    long long int s = 1;\n    long long int t = 1;\n\
    \    long long int u = 1;\n    long long int v = 1;\n    long long int w = 1;\n\
    \    long long int x = 1;\n    long long int y = 1;\n    long long int z = 1;\n\
    \    long long int a = 1;\n    long long int b = 1;\n    long long int c = 1;\n\
    \    long long int d = 1;\n    long long int e = 1;\n    long long int f = 1;\n\
    \    long long int g = a;\n    long long int h = 1;\n    long long int i = 1;\n\
    \    long long int j = 1;\n    long long int k = 1;\n    long long int l = 1;\n\
    \    long long int m = 1;\n    long long int n = 1;\n    long long int o = 1;\n\
    \    long long int p = 1;\n    long long int q = 1;\n    long long int r = 1;\n\
    \    long long int s = 1;\n    long long int t = 1;\n    long long int u = 1;\n\
    \    long long int v = 1;\n    long long int w = 1;\n    long long int x = 1;\n\
    \    long long int y = 1;\n    long long int z = 1;\n    long long int a = 1;\n\
    \    long long int b = 1;\n    long long int c = 1;\n    long long int d = 1;\n\
    \    long long int e = 1;\n    long long int f = 1;\n    long long int g = a;\n\
    \    long long int h = 1;\n    long long int i = 1;\n    long long int j = 1;\n\
    \    long long int k = 1;\n    long long int l = 1;\n    long long int m = 1;\n\
    \    long long int n = 1;\n    long long int o = 1;\n    long long int p = 1;\n\
    \    long long int q = 1;\n    long long int r = 1;\n    long long int s = 1;\n\
    \    long long int t = 1;\n    long long int u = 1;\n    long long int v = 1;\n\
    \    \n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsz0pnloa.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpsz0pnloa.cpp:34:19: error: declaration of \u2018long long int a\u2019\
    \ shadows a parameter\n   34 |     long long int a = 1;\n      |             \
    \      ^\n/tmp/tmpsz0pnloa.cpp:35:19: error: redeclaration of \u2018long long\
    \ int b\u2019\n   35 |     long long int b = 1;\n      |                   ^\n\
    /tmp/tmpsz0pnloa.cpp:9:19: note: \u2018long long int b\u2019 previously declared\
    \ here\n    9 |     long long int b = a;\n      |                   ^\n/tmp/tmpsz0pnloa.cpp:36:19:\
    \ error: redeclaration of \u2018long long int c\u2019\n   36 |     long long int\
    \ c = 1;\n      |                   ^\n/tmp/tmpsz0pnloa.cpp:10:19: note: \u2018\
    long long int c\u2019 previously declared here\n   10 |     long long int c =\
    \ a;\n      |                   ^\n/tmp/tmpsz0pnloa.cpp:37:19: error: redeclaration\
    \ of \u2018long long int d\u2019\n   37 |     long long int d = 1;\n      |  \
    \                 ^\n/tmp/tmpsz0pnloa.cpp:11:19: note: \u2018long long int d\u2019\
    \ previously declared here\n   11 |     long long int d = a;\n      |        \
    \           ^\n/tmp/tmpsz0pnloa.cpp:38:19: error: redeclaration of \u2018long\
    \ long int e\u2019\n   38 |     long long int e = 1;\n      |                \
    \   ^\n/tmp/tmpsz0pnloa.cpp:12:19: note: \u2018long long int e\u2019 previously\
    \ declared here\n   12 |     long long int e = 1;\n      |                   ^\n\
    /tmp/tmpsz0pnloa.cpp:39:19: error: redeclaration of \u2018long long int f\u2019\
    \n   39 |     long long int f = 1;\n      |                   ^\n/tmp/tmpsz0pnloa.cpp:13:19:\
    \ note: \u2018long long int f\u2019 previously declared here\n   13 |     long\
    \ long int f = 1;\n      |                   ^\n/tmp/tmpsz0pnloa.cpp:40:19: error:\
    \ redeclaration of \u2018long long int g\u2019\n   40 |     long long int g =\
    \ a;\n      |                   ^\n/tmp/tmpsz0pnloa.cpp:14:19: note: \u2018long\
    \ long int g\u2019 previously declared here\n   14 |     long long int g = a;\n\
    \      |                   ^\n/tmp/tmpsz0pnloa.cpp:41:19: error: redeclaration\
    \ of \u2018long long int h\u2019\n   41 |     long long int h = 1;\n      |  \
    \                 ^\n/tmp/tmpsz0pnloa.cpp:15:1"
  stdout: ''
  timestamp: 1660099766
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = a *\
    \ 3;\n    long long int c = b * 5;\n    long long int d = c * 7;\n    long long\
    \ int e = d * 9;\n    long long int f = e * 11;\n    long long int g = f * 13;\n\
    \    long long int h = g * 15;\n    long long int i = h * 17;\n    long long int\
    \ j = i * 19;\n    long long int k = j * 21;\n    long long int l = k * 23;\n\
    \    long long int m = l * 25;\n    long long int n = m * 27;\n    long long int\
    \ o = n * 29;\n    long long int p = o * 31;\n    return p < a;\n}\nint main()\
    \ {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n\
    \    assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp3ftp4kwc: /tmp/tmp3ftp4kwc.cpp:29: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099766
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    while (b <= a) {\n        if (a % b == 0 && a % c == 0 &&\
    \ a % d == 0) {\n            return true;\n        }\n        b += 2;\n      \
    \  c += 2;\n        d += 2;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpzo2qmm7h: /tmp/tmpzo2qmm7h.cpp:23: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099761
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = a;\n\
    \    long long int c = 1;\n    long long int d = 1;\n    long long int e = 1;\n\
    \    long long int f = 0;\n    long long int g = 0;\n    long long int h = 0;\n\
    \    long long int i = 1;\n    long long int j = 1;\n    long long int k = 1;\n\
    \    long long int l = 1;\n    long long int m = 1;\n    long long int n = 1;\n\
    \    long long int o = 1;\n    long long int p = 1;\n    long long int q = 1;\n\
    \    long long int r = 1;\n    long long int s = 1;\n    long long int t = 1;\n\
    \    long long int u = 1;\n    long long int v = 1;\n    long long int w = 1;\n\
    \    long long int x = 1;\n    long long int y = 1;\n    long long int z = 1;\n\
    \    long long int aa = 1;\n    long long int bb = 1;\n    long long int cc =\
    \ 1;\n    long long int dd = 1;\n    long long int ee = 1;\n    long long int\
    \ ff = 1;\n    long long int gg = 1;\n    long long int hh = 1;\n    long long\
    \ int ii = 0;\n    long long int jj = 0;\n    long long int kk = 0;\n    long\
    \ long int ll = 0;\n    long long int mm = 1;\n    long long int nn = 0;\n   \
    \ long long int oo = 0;\n    long long int pp = 1;\n    long long int qq = 1;\n\
    \    long long int rr = 0;\n    long long int ss = 0;\n    long long int tt =\
    \ 0;\n    long long int uu = 1;\n    long long int vv = 1;\n    long long int\
    \ ww = 1;\n    long long int xx = 0;\n    long long int yy = 0;\n    long long\
    \ int zz = 0;\n    long long int aaa = 0;\n    long long int bbb = 0;\n    long\
    \ long int ccc = 0;\n    long long int ddd = 0;\n    long long int eee = 0;\n\
    \    long long int fff = 0;\n    long long int ggg = 0;\n    long long int hhh\
    \ = 0;\n    long long int iii = 0;\n    long long int jjj = 0;\n    long long\
    \ int kkk = 0;\n    long long int lll = 0;\n    long long int mmm = 0;\n    long\
    \ long int nnn = 0;\n    long long int ooo = 0;\n    long long int ppp = 0;\n\
    \    long long int qqq = 0;\n    long long int rrr = 0;\n    long long int sss\
    \ = 0;\n    long long int ttt = 0;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp4d13kqh_: /tmp/tmp4d13kqh_.cpp:83: int main(): Assertion `candidate((5))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660099766
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int n = 3,\
    \ m = 2;\n    long long int i = 1;\n    long long int j = 1;\n    long long int\
    \ k = 1;\n    long long int l = 1;\n    long long int m = 1;\n    long long int\
    \ n = 1;\n    long long int m = 1;\n    long long int i = 1;\n    long long int\
    \ j = 1;\n    long long int k = 1;\n    long long int l = 1;\n    long long int\
    \ m = 1;\n    long long int n = 1;\n    long long int m = 1;\n    long long int\
    \ i = 1;\n    long long int j = 1;\n    long long int k = 1;\n    long long int\
    \ l = 1;\n    long long int m = 1;\n    long long int n = 1;\n    long long int\
    \ m = 1;\n    long long int i = 1;\n    long long int j = 1;\n    long long int\
    \ k = 1;\n    long long int l = 1;\n    long long int m = 1;\n    long long int\
    \ n = 1;\n    long long int m = 1;\n    long long int i = 1;\n    long long int\
    \ j = 1;\n    long long int k = 1;\n    long long int l = 1;\n    long long int\
    \ m = 1;\n    long long int n = 1;\n    long long int m = 1;\n    long long int\
    \ i = 1;\n    long long int j = 1;\n    long long int k = 1;\n    long long int\
    \ l = 1;\n    long long int m = 1;\n    long long int n = 1;\n    long long int\
    \ m = 1;\n    long long int i = 1;\n    long long int j = 1;\n    long long int\
    \ k = 1;\n    long long int l = 1;\n    long long int m = 1;\n    long long int\
    \ n = 1;\n    long long int m = 1;\n    long long int i = 1;\n    long long int\
    \ j = 1;\n    long long int k = 1;\n    long long int l = 1;\n    long long int\
    \ m = 1;\n    long long int n = 1;\n    long long int m = 1;\n    long long int\
    \ i = 1;\n    long long int j = 1;\n    long long int k = 1;\n    long long int\
    \ l = 1;\n    long long int m = 1;\n    long long int n = 1;\n    long long int\
    \ m = 1;\n    long long int i = 1;\n    long long int j = 1;\n    long long int\
    \ k = 1;\n    long long int l = 1;\n    long long int m = 1;\n    long long int\
    \ n = 1;\n    long long int m = 1;\n    long long int i = 1;\n    long long int\
    \ j\n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp93xrera8.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmp93xrera8.cpp:14:19: error: redeclaration of \u2018long long int m\u2019\
    \n   14 |     long long int m = 1;\n      |                   ^\n/tmp/tmp93xrera8.cpp:9:26:\
    \ note: \u2018long long int m\u2019 previously declared here\n    9 |     long\
    \ long int n = 3, m = 2;\n      |                          ^\n/tmp/tmp93xrera8.cpp:15:19:\
    \ error: redeclaration of \u2018long long int n\u2019\n   15 |     long long int\
    \ n = 1;\n      |                   ^\n/tmp/tmp93xrera8.cpp:9:19: note: \u2018\
    long long int n\u2019 previously declared here\n    9 |     long long int n =\
    \ 3, m = 2;\n      |                   ^\n/tmp/tmp93xrera8.cpp:16:19: error: redeclaration\
    \ of \u2018long long int m\u2019\n   16 |     long long int m = 1;\n      |  \
    \                 ^\n/tmp/tmp93xrera8.cpp:9:26: note: \u2018long long int m\u2019\
    \ previously declared here\n    9 |     long long int n = 3, m = 2;\n      | \
    \                         ^\n/tmp/tmp93xrera8.cpp:17:19: error: redeclaration\
    \ of \u2018long long int i\u2019\n   17 |     long long int i = 1;\n      |  \
    \                 ^\n/tmp/tmp93xrera8.cpp:10:19: note: \u2018long long int i\u2019\
    \ previously declared here\n   10 |     long long int i = 1;\n      |        \
    \           ^\n/tmp/tmp93xrera8.cpp:18:19: error: redeclaration of \u2018long\
    \ long int j\u2019\n   18 |     long long int j = 1;\n      |                \
    \   ^\n/tmp/tmp93xrera8.cpp:11:19: note: \u2018long long int j\u2019 previously\
    \ declared here\n   11 |     long long int j = 1;\n      |                   ^\n\
    /tmp/tmp93xrera8.cpp:19:19: error: redeclaration of \u2018long long int k\u2019\
    \n   19 |     long long int k = 1;\n      |                   ^\n/tmp/tmp93xrera8.cpp:12:19:\
    \ note: \u2018long long int k\u2019 previously declared here\n   12 |     long\
    \ long int k = 1;\n      |                   ^\n/tmp/tmp93xrera8.cpp:20:19: error:\
    \ redeclaration of \u2018long long int l\u2019\n   20 |     long long int l =\
    \ 1;\n      |                   ^\n/tmp/tmp93xrera8.cpp:13:19: note: \u2018long\
    \ long int l\u2019 previously declared here\n   13 |     long long int l = 1;\n\
    \      |                   ^\n/tm"
  stdout: ''
  timestamp: 1660099766
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    int count = 0;\n    for\
    \ (int i = 2; i <= a / 2; i++) {\n        if (a % i == 0) {\n            count++;\n\
    \        }\n    }\n    if (count == 3) {\n        return true;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpyessn4me: /tmp/tmpyessn4me.cpp:23: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099767
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    while (b <= a) {\n        if (a % b == 0 && b % c == 0 &&\
    \ b % d == 0) {\n            return true;\n        }\n        b += 2;\n      \
    \  c += 2;\n        d += 2;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp9ldphvsl: /tmp/tmp9ldphvsl.cpp:23: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099765
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int result = 0;\n    while(a != 0) {\n        if(a%b\
    \ == 0 && a % c == 0 && a % d == 0) {\n            result = 1;\n            break;\n\
    \        }\n        b +=2;\n        c +=2;\n        d +=2;\n    }\n    if(result\
    \ == 1) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n\
    \    assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660099771
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    while (b <= a) {\n        if (a % b == 0) {\n           \
    \ while (c <= a) {\n                if (a % c == 0) {\n                    while\
    \ (d <= a) {\n                        if (a % d == 0) {\n                    \
    \        if (b * c + d * a == a) {\n                                return true;\n\
    \                            }\n                        }\n                  \
    \      d++;\n                    }\n                }\n                c++;\n\
    \            }\n            b++;\n        }\n    }\n    return false;\n}\nint\
    \ main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660099771
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    while (b <= a) {\n        if (a % b == 0 && a % c == 0 &&\
    \ a % d == 0) {\n            return true;\n        }\n        b += 2;\n      \
    \  c += 2;\n        d += 2;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpzo2qmm7h: /tmp/tmpzo2qmm7h.cpp:23: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099761
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    while (b <= a) {\n        if (a % b == 0 && a % c == 0 &&\
    \ a % d == 0) {\n            return true;\n        }\n        b += 2;\n      \
    \  c += 2;\n        d += 2;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpzo2qmm7h: /tmp/tmpzo2qmm7h.cpp:23: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099761
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    int flag = 0;\n    for\
    \ (int i = 2; i <= a / 2; i++) {\n        if ((a % i) == 0) {\n            flag\
    \ = 1;\n            break;\n        }\n    }\n    return flag;\n}\nint main()\
    \ {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n\
    \    assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpf507csvm: /tmp/tmpf507csvm.cpp:23: int main(): Assertion `candidate((10))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660099767
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int a1 = 0, a2 = 0, a3 = 0, a4 = 0, a5 = 0, a6\
    \ = 0, a7 = 0;\n    long long int b1 = 0, b2 = 0, b3 = 0, b4 = 0, b5 = 0, b6 =\
    \ 0, b7 = 0;\n    long long int c1 = 0, c2 = 0, c3 = 0, c4 = 0, c5 = 0, c6 = 0,\
    \ c7 = 0;\n    long long int d1 = 0, d2 = 0, d3 = 0, d4 = 0, d5 = 0, d6 = 0, d7\
    \ = 0;\n    long long int e1 = 0, e2 = 0, e3 = 0, e4 = 0, e5 = 0, e6 = 0, e7 =\
    \ 0;\n    long long int f1 = 0, f2 = 0, f3 = 0, f4 = 0, f5 = 0, f6 = 0, f7 = 0;\n\
    \    long long int g1 = 0, g2 = 0, g3 = 0, g4 = 0, g5 = 0, g6 = 0, g7 = 0;\n \
    \   long long int h1 = 0, h2 = 0, h3 = 0, h4 = 0, h5 = 0, h6 = 0, h7 = 0;\n  \
    \  long long int i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;\n   \
    \ long long int j1 = 0, j2 = 0, j3 = 0, j4 = 0, j5 = 0, j6 = 0, j7 = 0;\n    long\
    \ long int k1 = 0, k2 = 0, k3 = 0, k4 = 0, k5 = 0, k6 = 0, k7 = 0;\n    long long\
    \ int l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0;\n    long long int\
    \ m1 = 0, m2 = 0, m3 = 0, m4 = 0, m5 = 0, m6 = 0, m7 = 0;\n    long long int n1\
    \ = 0, n2 = 0, n3 = 0, n4 = 0, n5 = 0, n6 = 0, n7 = 0;\n    long long int o1 =\
    \ 0, o2 = 0, o3 = 0, o4 = 0, o5 = 0, o6 = 0, o7 = 0;\n    long long int p1 = 0,\
    \ p2 = 0, p3 = 0, p4 = 0, p5 = 0, p6 = 0, p7 = 0;\n    long long int q1 = 0, q2\
    \ = 0, q3 = 0, q4 = 0, q5 = 0, q6 = 0, q7 = 0;\n    long long int r1 = 0, r2 =\
    \ 0, r3 = 0, r4 = 0, r5 = 0, r6 = 0, r7 = 0;\n    long long int s1 = 0, s2 = 0,\
    \ s3 = 0, s4 = 0, s5 = 0, s6 = 0, s7 = 0;\n    long long int t1 = 0, t2 = 0, t3\
    \ = 0, t4 = 0, t5 = \n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpf7pc6xkr.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpf7pc6xkr.cpp:30:1: error: expected primary-expression before \u2018\
    }\u2019 token\n   30 | }\n      | ^\n/tmp/tmpf7pc6xkr.cpp:30:1: warning: no return\
    \ statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660099767
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = a;\n\
    \    long long int c = 1;\n    long long int d = 1;\n    long long int e = 1;\n\
    \    long long int f = 1;\n    long long int g = 1;\n    long long int h = 1;\n\
    \    long long int i = 1;\n    long long int j = 1;\n    long long int k = 1;\n\
    \    long long int l = 1;\n    long long int m = 1;\n    long long int n = 1;\n\
    \    long long int o = 1;\n    long long int p = 1;\n    long long int q = 1;\n\
    \    long long int r = 1;\n    long long int s = 1;\n    long long int t = 1;\n\
    \    long long int u = 1;\n    long long int v = 1;\n    long long int w = 1;\n\
    \    long long int x = 1;\n    long long int y = 1;\n    long long int z = 1;\n\
    \    long long int A = 1;\n    long long int B = 1;\n    long long int C = 1;\n\
    \    long long int D = 1;\n    long long int E = 1;\n    long long int F = 1;\n\
    \    long long int G = 1;\n    long long int H = 1;\n    long long int I = 1;\n\
    \    long long int J = 1;\n    long long int K = 1;\n    long long int L = 1;\n\
    \    long long int M = 1;\n    long long int N = 1;\n    long long int O = 1;\n\
    \    long long int P = 1;\n    long long int Q = 1;\n    long long int R = 1;\n\
    \    long long int S = 1;\n    long long int T = 1;\n    long long int U = 1;\n\
    \    long long int V = 1;\n    long long int W = 1;\n    long long int X = 1;\n\
    \    long long int Y = 1;\n    long long int Z = 1;\n    long long int A1 = 1;\n\
    \    long long int B1 = 1;\n    long long int C1 = 1;\n    long long int D1 =\
    \ 1;\n    long long int E1 = 1;\n    long long int F1 = 1;\n    long long int\
    \ G1 = 1;\n    long long int H1 = 1;\n    long long int I1 = 1;\n    long long\
    \ int J1 = 1;\n    long long int K1 = 1;\n    long long int L1 = 1;\n    long\
    \ long int M1 = 1;\n    long long int N1 = 1;\n    long long int O1 = 1;\n   \
    \ long long int P1 = 1;\n    long long int Q1 = 1;\n    long long int R1 = 1;\n\
    \    long long int S1 = 1;\n    long long int T1 = 1;\n    long long int U1 =\
    \ 1;\n    long long int V1 = 1;\n    \n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp65q_5wwg: /tmp/tmp65q_5wwg.cpp:86: int main(): Assertion `candidate((5))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660099767
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int p = 1;\n    long long int q = 1;\n    long\
    \ long int r = 1;\n    long long int s = 1;\n    long long int t = 1;\n    long\
    \ long int u = 1;\n    long long int v = 1;\n    long long int w = 1;\n    long\
    \ long int x = 1;\n    long long int y = 1;\n    long long int z = 1;\n    long\
    \ long int a = a;\n    long long int b = b;\n    long long int c = c;\n    long\
    \ long int d = d;\n    long long int p = p;\n    long long int q = q;\n    long\
    \ long int r = r;\n    long long int s = s;\n    long long int t = t;\n    long\
    \ long int u = u;\n    long long int v = v;\n    long long int w = w;\n    long\
    \ long int x = x;\n    long long int y = y;\n    long long int z = z;\n    long\
    \ long int a = a;\n    long long int b = b;\n    long long int c = c;\n    long\
    \ long int d = d;\n    long long int p = p;\n    long long int q = q;\n    long\
    \ long int r = r;\n    long long int s = s;\n    long long int t = t;\n    long\
    \ long int u = u;\n    long long int v = v;\n    long long int w = w;\n    long\
    \ long int x = x;\n    long long int y = y;\n    long long int z = z;\n    long\
    \ long int a = a;\n    long long int b = b;\n    long long int c = c;\n    long\
    \ long int d = d;\n    long long int p = p;\n    long long int q = q;\n    long\
    \ long int r = r;\n    long long int s = s;\n    long long int t = t;\n    long\
    \ long int u = u;\n    long long int v = v;\n    long long int w = w;\n    long\
    \ long int x = x;\n    long long int y = y;\n    long long int z = z;\n    long\
    \ long int a = a;\n    long long int b = b;\n    long long int c = c;\n    long\
    \ long int d = d;\n    long long int p = p;\n    long long int q = q;\n    long\
    \ long int r = r;\n    long long int s = s;\n    long long int t = t;\n    long\
    \ long int u = u;\n    long long int v = v;\n    long long int w = w;\n    long\
    \ long int x = x;\n    long long int y = \n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2dsbk98p.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmp2dsbk98p.cpp:21:19: error: declaration of \u2018long long int a\u2019\
    \ shadows a parameter\n   21 |     long long int a = a;\n      |             \
    \      ^\n/tmp/tmp2dsbk98p.cpp:22:19: error: redeclaration of \u2018long long\
    \ int b\u2019\n   22 |     long long int b = b;\n      |                   ^\n\
    /tmp/tmp2dsbk98p.cpp:9:19: note: \u2018long long int b\u2019 previously declared\
    \ here\n    9 |     long long int b = 3, c = 5, d = 7;\n      |              \
    \     ^\n/tmp/tmp2dsbk98p.cpp:23:19: error: redeclaration of \u2018long long int\
    \ c\u2019\n   23 |     long long int c = c;\n      |                   ^\n/tmp/tmp2dsbk98p.cpp:9:26:\
    \ note: \u2018long long int c\u2019 previously declared here\n    9 |     long\
    \ long int b = 3, c = 5, d = 7;\n      |                          ^\n/tmp/tmp2dsbk98p.cpp:24:19:\
    \ error: redeclaration of \u2018long long int d\u2019\n   24 |     long long int\
    \ d = d;\n      |                   ^\n/tmp/tmp2dsbk98p.cpp:9:33: note: \u2018\
    long long int d\u2019 previously declared here\n    9 |     long long int b =\
    \ 3, c = 5, d = 7;\n      |                                 ^\n/tmp/tmp2dsbk98p.cpp:25:19:\
    \ error: redeclaration of \u2018long long int p\u2019\n   25 |     long long int\
    \ p = p;\n      |                   ^\n/tmp/tmp2dsbk98p.cpp:10:19: note: \u2018\
    long long int p\u2019 previously declared here\n   10 |     long long int p =\
    \ 1;\n      |                   ^\n/tmp/tmp2dsbk98p.cpp:26:19: error: redeclaration\
    \ of \u2018long long int q\u2019\n   26 |     long long int q = q;\n      |  \
    \                 ^\n/tmp/tmp2dsbk98p.cpp:11:19: note: \u2018long long int q\u2019\
    \ previously declared here\n   11 |     long long int q = 1;\n      |        \
    \           ^\n/tmp/tmp2dsbk98p.cpp:27:19: error: redeclaration of \u2018long\
    \ long int r\u2019\n   27 |     long long int r = r;\n      |                \
    \   ^\n/tmp/tmp2dsbk98p.cpp:12:19: note: \u2018long long int r\u2019 previously\
    \ declared here\n   12 |     long long int r = 1;\n      |                   ^\n\
    /tmp/tmp2dsbk98p.cpp:28:19: error: redeclaration of \u2018long long int s\u2019\
    \n   28 |     long long int"
  stdout: ''
  timestamp: 1660099762
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = a;\n\
    \    long long int c = 1;\n    long long int d = 1;\n    long long int e = 1;\n\
    \    long long int f = 1;\n    long long int g = 1;\n    long long int h = 1;\n\
    \    long long int i = 1;\n    long long int j = 1;\n    long long int k = 1;\n\
    \    long long int l = 1;\n    long long int m = 1;\n    long long int n = 1;\n\
    \    long long int o = 1;\n    long long int p = 1;\n    long long int q = 1;\n\
    \    long long int r = 1;\n    long long int s = 1;\n    long long int t = 1;\n\
    \    long long int u = 1;\n    long long int v = 1;\n    long long int w = 1;\n\
    \    long long int x = 1;\n    long long int y = 1;\n    long long int z = 1;\n\
    \    long long int a = 1;\n    long long int b = 1;\n    long long int c = 1;\n\
    \    long long int d = 1;\n    long long int e = 1;\n    long long int f = 1;\n\
    \    long long int g = 1;\n    long long int h = 1;\n    long long int i = 1;\n\
    \    long long int j = 1;\n    long long int k = 1;\n    long long int l = 1;\n\
    \    long long int m = 1;\n    long long int n = 1;\n    long long int o = 1;\n\
    \    long long int p = 1;\n    long long int q = 1;\n    long long int r = 1;\n\
    \    long long int s = 1;\n    long long int t = 1;\n    long long int u = 1;\n\
    \    long long int v = 1;\n    long long int w = 1;\n    long long int x = 1;\n\
    \    long long int y = 1;\n    long long int z = 1;\n    long long int a = 1;\n\
    \    long long int b = 1;\n    long long int c = 1;\n    long long int d = 1;\n\
    \    long long int e = 1;\n    long long int f = 1;\n    long long int g = 1;\n\
    \    long long int h = 1;\n    long long int i = 1;\n    long long int j = 1;\n\
    \    long long int k = 1;\n    long long int l = 1;\n    long long int m = 1;\n\
    \    long long int n = 1;\n    long long int o = 1;\n    long long int p = 1;\n\
    \    long long int q = 1;\n    long long int r = 1;\n    long long int s = 1;\n\
    \    long long int t = 1;\n    long long int u = 1;\n    long long int v = 1;\n\
    \    \n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpg252gt_c.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpg252gt_c.cpp:34:19: error: declaration of \u2018long long int a\u2019\
    \ shadows a parameter\n   34 |     long long int a = 1;\n      |             \
    \      ^\n/tmp/tmpg252gt_c.cpp:35:19: error: redeclaration of \u2018long long\
    \ int b\u2019\n   35 |     long long int b = 1;\n      |                   ^\n\
    /tmp/tmpg252gt_c.cpp:9:19: note: \u2018long long int b\u2019 previously declared\
    \ here\n    9 |     long long int b = a;\n      |                   ^\n/tmp/tmpg252gt_c.cpp:36:19:\
    \ error: redeclaration of \u2018long long int c\u2019\n   36 |     long long int\
    \ c = 1;\n      |                   ^\n/tmp/tmpg252gt_c.cpp:10:19: note: \u2018\
    long long int c\u2019 previously declared here\n   10 |     long long int c =\
    \ 1;\n      |                   ^\n/tmp/tmpg252gt_c.cpp:37:19: error: redeclaration\
    \ of \u2018long long int d\u2019\n   37 |     long long int d = 1;\n      |  \
    \                 ^\n/tmp/tmpg252gt_c.cpp:11:19: note: \u2018long long int d\u2019\
    \ previously declared here\n   11 |     long long int d = 1;\n      |        \
    \           ^\n/tmp/tmpg252gt_c.cpp:38:19: error: redeclaration of \u2018long\
    \ long int e\u2019\n   38 |     long long int e = 1;\n      |                \
    \   ^\n/tmp/tmpg252gt_c.cpp:12:19: note: \u2018long long int e\u2019 previously\
    \ declared here\n   12 |     long long int e = 1;\n      |                   ^\n\
    /tmp/tmpg252gt_c.cpp:39:19: error: redeclaration of \u2018long long int f\u2019\
    \n   39 |     long long int f = 1;\n      |                   ^\n/tmp/tmpg252gt_c.cpp:13:19:\
    \ note: \u2018long long int f\u2019 previously declared here\n   13 |     long\
    \ long int f = 1;\n      |                   ^\n/tmp/tmpg252gt_c.cpp:40:19: error:\
    \ redeclaration of \u2018long long int g\u2019\n   40 |     long long int g =\
    \ 1;\n      |                   ^\n/tmp/tmpg252gt_c.cpp:14:19: note: \u2018long\
    \ long int g\u2019 previously declared here\n   14 |     long long int g = 1;\n\
    \      |                   ^\n/tmp/tmpg252gt_c.cpp:41:19: error: redeclaration\
    \ of \u2018long long int h\u2019\n   41 |     long long int h = 1;\n      |  \
    \                 ^\n/tmp/tmpg252gt_c.cpp:15:1"
  stdout: ''
  timestamp: 1660099763
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    while (b <= a) {\n        if (a % b == 0) {\n           \
    \ while (c <= a) {\n                if (a % c == 0) {\n                    while\
    \ (d <= a) {\n                        if (a % d == 0) {\n                    \
    \        if (b * c * d == a) {\n                                return true;\n\
    \                            }\n                        }\n                  \
    \      d++;\n                    }\n                }\n                c++;\n\
    \            }\n            b++;\n        }\n    }\n    return false;\n}\nint\
    \ main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660099770
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long b = 3, c = 5, d\
    \ = 7;\n    long long int temp;\n    while(a > 1) {\n        temp = a;\n     \
    \   a = a % b;\n        b = temp % c;\n        c = temp % d;\n        d = temp;\n\
    \    }\n    return a == 1;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660099767
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    long long int res = 0;\n    while (b <= a) {\n        if\
    \ (a % b == 0) {\n            if (a % c == 0) {\n                if (a % d ==\
    \ 0) {\n                    res = 1;\n                    break;\n           \
    \     }\n                else {\n                    res = 0;\n              \
    \      break;\n                }\n            }\n            else {\n        \
    \        res = 0;\n                break;\n            }\n        }\n        else\
    \ {\n            res = 0;\n            break;\n        }\n        b += 2;\n  \
    \      c += 2;\n        d += 2;\n    }\n    return res;\n}\nint main() {\n   \
    \ auto candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n\
    \    assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpdsm3uehc: /tmp/tmpdsm3uehc.cpp:41: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099767
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    while (b <= a) {\n        if (a % b == 0 && a % c == 0 &&\
    \ a % d == 0) {\n            return true;\n        }\n        ++b;\n        ++c;\n\
    \        ++d;\n    }\n    return false;\n}\nint main() {\n    auto candidate =\
    \ is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmp8kq2uwzd: /tmp/tmp8kq2uwzd.cpp:23: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099767
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = a *\
    \ 3;\n    long long int c = b * 5;\n    long long int d = c * 7;\n    long long\
    \ int e = d * 9;\n    long long int f = e * 11;\n    long long int g = f * 13;\n\
    \    long long int h = g * 15;\n    long long int i = h * 17;\n    long long int\
    \ j = i * 19;\n    long long int k = j * 21;\n    long long int l = k * 23;\n\
    \    long long int m = l * 25;\n    long long int n = m * 27;\n    long long int\
    \ o = n * 29;\n    long long int p = o * 31;\n    return p < a;\n}\nint main()\
    \ {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n\
    \    assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp3ftp4kwc: /tmp/tmp3ftp4kwc.cpp:29: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099766
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    while (b <= a) {\n        if (a % b == 0) {\n           \
    \ while (c <= a) {\n                if (a % c == 0) {\n                    while\
    \ (d <= a) {\n                        if (a % d == 0) {\n                    \
    \        return true;\n                        }\n                        d++;\n\
    \                    }\n                }\n                c++;\n            }\n\
    \        }\n        b++;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpwz22cjr5: /tmp/tmpwz22cjr5.cpp:33: int main(): Assertion `candidate((10))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660099763
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = a;\n\
    \    long long int c = 0;\n    long long int d = 1;\n    long long int e = 1;\n\
    \    long long int f = 0;\n    long long int g = 1;\n    long long int h = 1;\n\
    \    long long int i = 1;\n    long long int j = 1;\n    long long int k = 1;\n\
    \    long long int l = 1;\n    long long int m = 1;\n    long long int n = 1;\n\
    \    long long int o = 1;\n    long long int p = 1;\n    long long int q = 1;\n\
    \    long long int r = 1;\n    long long int s = 1;\n    long long int t = 1;\n\
    \    long long int u = 1;\n    long long int v = 1;\n    long long int w = 1;\n\
    \    long long int x = 1;\n    long long int y = 1;\n    long long int z = 1;\n\
    \    long long int aa = 1;\n    long long int bb = 1;\n    long long int cc =\
    \ 1;\n    long long int dd = 1;\n    long long int ee = 1;\n    long long int\
    \ ff = 1;\n    long long int gg = 1;\n    long long int hh = 1;\n    long long\
    \ int ii = 0;\n    long long int jj = 0;\n    long long int kk = 0;\n    long\
    \ long int ll = 0;\n    long long int mm = 1;\n    long long int nn = 0;\n   \
    \ long long int oo = 1;\n    long long int pp = 1;\n    long long int qq = 1;\n\
    \    long long int rr = 1;\n    long long int ss = 0;\n    long long int tt =\
    \ 0;\n    long long int uu = 1;\n    long long int vv = 1;\n    long long int\
    \ ww = 1;\n    long long int xx = 0;\n    long long int yy = 0;\n    long long\
    \ int zz = 0;\n    long long int aaa = 0;\n    long long int bbb = 0;\n    long\
    \ long int ccc = 0;\n    long long int ddd = 0;\n    long long int eee = 0;\n\
    \    long long int fff = 0;\n    long long int ggg = 0;\n    long long int hhh\
    \ = 0;\n    long long int iii = 0;\n    long long int jjj = 0;\n    long long\
    \ int kkk = 0;\n    long long int lll = 0;\n    long long int mmm = 0;\n    long\
    \ long int nnn = 0;\n    long long int ooo = 0;\n    long long int ppp = 0;\n\
    \    long long int qqq = 0;\n    long long int rrr = 0;\n    long long int ss\
    \ = 0;\n    long long int ttt\n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpahh0pfl2.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpahh0pfl2.cpp:78:19: error: redeclaration of \u2018long long int ss\u2019\
    \n   78 |     long long int ss = 0;\n      |                   ^~\n/tmp/tmpahh0pfl2.cpp:52:19:\
    \ note: \u2018long long int ss\u2019 previously declared here\n   52 |     long\
    \ long int ss = 0;\n      |                   ^~\n/tmp/tmpahh0pfl2.cpp:80:1: error:\
    \ expected initializer before \u2018}\u2019 token\n   80 | }\n      | ^\n/tmp/tmpahh0pfl2.cpp:80:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660099766
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5;\n    long long int d = 2;\n    while (b <= a) {\n        if (a % b ==\
    \ 0) {\n            while (c <= a / b) {\n                if (a % c == 0) {\n\
    \                    return false;\n                }\n                c++;\n\
    \            }\n        }\n        b++;\n    }\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n\
    \    assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpzfdwm_dq: /tmp/tmpzfdwm_dq.cpp:26: int main(): Assertion `candidate((5))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660099763
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    while(c <= (a/b)+1) {\n        if(a%b == 0 && a % c == 0)\n\
    \            return true;\n        if(a%b == 0 && a % d == 0)\n            return\
    \ true;\n        if(a%c == 0 && a % d == 0)\n            return true;\n      \
    \  if(a%d == 0 && a % b == 0)\n            return true;\n        b += 2;\n   \
    \     c += 2;\n        d += 2;\n    }\n    return false;\n}\nint main() {\n  \
    \  auto candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n\
    \    assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp6skyueib: /tmp/tmp6skyueib.cpp:29: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099767
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = a;\n\
    \    long long int c = 1;\n    long long int d = 1;\n    long long int e = 1;\n\
    \    long long int f = 0;\n    long long int g = 1;\n    long long int h = 1;\n\
    \    long long int i = 1;\n    long long int j = 1;\n    long long int k = 1;\n\
    \    long long int l = 1;\n    long long int m = 1;\n    long long int n = 1;\n\
    \    long long int o = 1;\n    long long int p = 1;\n    long long int q = 1;\n\
    \    long long int r = 1;\n    long long int s = 1;\n    long long int t = 1;\n\
    \    long long int u = 1;\n    long long int v = 1;\n    long long int w = 1;\n\
    \    long long int x = 1;\n    long long int y = 1;\n    long long int z = 1;\n\
    \    long long int A = 1;\n    long long int B = 1;\n    long long int C = 1;\n\
    \    long long int D = 1;\n    long long int E = 1;\n    long long int F = 1;\n\
    \    long long int G = 1;\n    long long int H = 1;\n    long long int I = 1;\n\
    \    long long int J = 1;\n    long long int K = 1;\n    long long int L = 1;\n\
    \    long long int M = 1;\n    long long int N = 1;\n    long long int O = 1;\n\
    \    long long int P = 1;\n    long long int Q = 1;\n    long long int R = 1;\n\
    \    long long int S = 1;\n    long long int T = 1;\n    long long int U = 1;\n\
    \    long long int V = 1;\n    long long int W = 1;\n    long long int X = 1;\n\
    \    long long int Y = 1;\n    long long int Z = 1;\n    long long int A = 1;\n\
    \    long long int B = 1;\n    long long int C = 1;\n    long long int D = 1;\n\
    \    long long int E = 1;\n    long long int F = 1;\n    long long int G = 1;\n\
    \    long long int H = 1;\n    long long int I = 1;\n    long long int J = 1;\n\
    \    long long int K = 1;\n    long long int L = 1;\n    long long int M = 1;\n\
    \    long long int N = 1;\n    long long int O = 1;\n    long long int P = 1;\n\
    \    long long int Q = 1;\n    long long int R = 1;\n    long long int S = 1;\n\
    \    long long int T = 1;\n    long long int U = 1;\n    long long int V = 1;\n\
    \    \n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkqvzl1l8.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpkqvzl1l8.cpp:60:19: error: redeclaration of \u2018long long int A\u2019\
    \n   60 |     long long int A = 1;\n      |                   ^\n/tmp/tmpkqvzl1l8.cpp:34:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   34 |     long\
    \ long int A = 1;\n      |                   ^\n/tmp/tmpkqvzl1l8.cpp:61:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   61 |     long long int B =\
    \ 1;\n      |                   ^\n/tmp/tmpkqvzl1l8.cpp:35:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   35 |     long long int B = 1;\n\
    \      |                   ^\n/tmp/tmpkqvzl1l8.cpp:62:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   62 |     long long int C = 1;\n      |  \
    \                 ^\n/tmp/tmpkqvzl1l8.cpp:36:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   36 |     long long int C = 1;\n      |        \
    \           ^\n/tmp/tmpkqvzl1l8.cpp:63:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   63 |     long long int D = 1;\n      |                \
    \   ^\n/tmp/tmpkqvzl1l8.cpp:37:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   37 |     long long int D = 1;\n      |                   ^\n\
    /tmp/tmpkqvzl1l8.cpp:64:19: error: redeclaration of \u2018long long int E\u2019\
    \n   64 |     long long int E = 1;\n      |                   ^\n/tmp/tmpkqvzl1l8.cpp:38:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   38 |     long\
    \ long int E = 1;\n      |                   ^\n/tmp/tmpkqvzl1l8.cpp:65:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   65 |     long long int F =\
    \ 1;\n      |                   ^\n/tmp/tmpkqvzl1l8.cpp:39:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   39 |     long long int F = 1;\n\
    \      |                   ^\n/tmp/tmpkqvzl1l8.cpp:66:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   66 |     long long int G = 1;\n      |  \
    \                 ^\n/tmp/tmpkqvzl1l8.cpp:40:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   40 |     long long int G = 1;\n      |        \
    \           ^\n/tmp/tmpkqvzl1l8.cpp:67:19: error: "
  stdout: ''
  timestamp: 1660099767
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    int flag = 0;\n    for\
    \ (int i = 2; i <= a / 2; i++) {\n        if ((a % i) == 0) {\n            flag\
    \ = 1;\n            break;\n        }\n    }\n    return flag;\n}\nint main()\
    \ {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n\
    \    assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpf507csvm: /tmp/tmpf507csvm.cpp:23: int main(): Assertion `candidate((10))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660099767
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    int flag = 0;\n    for(int\
    \ i = 2; i <= a; i++) {\n        if((a % i) == 0) {\n            flag = 1;\n \
    \           break;\n        }\n    }\n    if(flag == 1) {\n        return true;\n\
    \    }\n    return false;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmp6g4e3rdd: /tmp/tmp6g4e3rdd.cpp:23: int main(): Assertion `candidate((5))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660099767
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    while (b <= a) {\n        if (a % b == 0) {\n           \
    \ while (c <= a / b) {\n                if (a % c == 0) {\n                  \
    \  while (d <= a / c) {\n                        if (a % d == 0) {\n         \
    \                   if (b * c * d == a) {\n                                return\
    \ true;\n                            }\n                        }\n          \
    \              d++;\n                    }\n                }\n              \
    \  c++;\n            }\n            b++;\n        }\n        a++;\n    }\n   \
    \ return false;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n  \
    \  assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660099770
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 3, e;\n    while (b <= a) {\n        if (a % b == 0) {\n        \
    \    while (c <= a / b) {\n                if (a % c == 0) {\n               \
    \     while (d <= a / c) {\n                        if (a % d == 0) {\n      \
    \                      e = 1;\n                            break;\n          \
    \              }\n                        d++;\n                    }\n      \
    \              break;\n                }\n                c++;\n            }\n\
    \            break;\n        }\n        b++;\n    }\n    return e;\n}\nint main()\
    \ {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n\
    \    assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmpprpwzw2c: /tmp/tmpprpwzw2c.cpp:33: int main(): Assertion `candidate((5))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660099767
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    while(a != 0) {\n        if(a%b == 0 && a%c == 0 && a%d==0)\
    \ {\n            return true;\n        }\n        b += 2;\n        c += 2;\n \
    \       d += 2;\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660099772
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = a;\n\
    \    long long int c = 0;\n    long long int d = 1;\n    long long int e = 1;\n\
    \    long long int f = 0;\n    long long int g = 1;\n    long long int h = 1;\n\
    \    long long int i = 1;\n    long long int j = 1;\n    long long int k = 1;\n\
    \    long long int l = 1;\n    long long int m = 1;\n    long long int n = 1;\n\
    \    long long int o = 1;\n    long long int p = 1;\n    long long int q = 1;\n\
    \    long long int r = 1;\n    long long int s = 1;\n    long long int t = 1;\n\
    \    long long int u = 1;\n    long long int v = 1;\n    long long int w = 1;\n\
    \    long long int x = 1;\n    long long int y = 1;\n    long long int z = 1;\n\
    \    long long int a = 1;\n    long long int b = 1;\n    long long int c = 1;\n\
    \    long long int d = 1;\n    long long int e = 1;\n    long long int f = 0;\n\
    \    long long int g = 1;\n    long long int h = 1;\n    long long int i = 1;\n\
    \    long long int j = 1;\n    long long int k = 1;\n    long long int l = 1;\n\
    \    long long int m = 1;\n    long long int n = 1;\n    long long int o = 1;\n\
    \    long long int p = 1;\n    long long int q = 1;\n    long long int r = 1;\n\
    \    long long int s = 1;\n    long long int t = 1;\n    long long int u = 1;\n\
    \    long long int v = 1;\n    long long int w = 1;\n    long long int x = 1;\n\
    \    long long int y = 1;\n    long long int z = 1;\n    long long int a = 1;\n\
    \    long long int b = 1;\n    long long int c = 1;\n    long long int d = 1;\n\
    \    long long int e = 1;\n    long long int f = 0;\n    long long int g = 1;\n\
    \    long long int h = 1;\n    long long int i = 1;\n    long long int j = 1;\n\
    \    long long int k = 1;\n    long long int l = 1;\n    long long int m = 1;\n\
    \    long long int n = 1;\n    long long int o = 1;\n    long long int p = 1;\n\
    \    long long int q = 1;\n    long long int r = 1;\n    long long int s = 1;\n\
    \    long long int t = 1;\n    long long int u = 1;\n    long long int v = 1;\n\
    \    \n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph2s45z3i.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmph2s45z3i.cpp:34:19: error: declaration of \u2018long long int a\u2019\
    \ shadows a parameter\n   34 |     long long int a = 1;\n      |             \
    \      ^\n/tmp/tmph2s45z3i.cpp:35:19: error: redeclaration of \u2018long long\
    \ int b\u2019\n   35 |     long long int b = 1;\n      |                   ^\n\
    /tmp/tmph2s45z3i.cpp:9:19: note: \u2018long long int b\u2019 previously declared\
    \ here\n    9 |     long long int b = a;\n      |                   ^\n/tmp/tmph2s45z3i.cpp:36:19:\
    \ error: redeclaration of \u2018long long int c\u2019\n   36 |     long long int\
    \ c = 1;\n      |                   ^\n/tmp/tmph2s45z3i.cpp:10:19: note: \u2018\
    long long int c\u2019 previously declared here\n   10 |     long long int c =\
    \ 0;\n      |                   ^\n/tmp/tmph2s45z3i.cpp:37:19: error: redeclaration\
    \ of \u2018long long int d\u2019\n   37 |     long long int d = 1;\n      |  \
    \                 ^\n/tmp/tmph2s45z3i.cpp:11:19: note: \u2018long long int d\u2019\
    \ previously declared here\n   11 |     long long int d = 1;\n      |        \
    \           ^\n/tmp/tmph2s45z3i.cpp:38:19: error: redeclaration of \u2018long\
    \ long int e\u2019\n   38 |     long long int e = 1;\n      |                \
    \   ^\n/tmp/tmph2s45z3i.cpp:12:19: note: \u2018long long int e\u2019 previously\
    \ declared here\n   12 |     long long int e = 1;\n      |                   ^\n\
    /tmp/tmph2s45z3i.cpp:39:19: error: redeclaration of \u2018long long int f\u2019\
    \n   39 |     long long int f = 0;\n      |                   ^\n/tmp/tmph2s45z3i.cpp:13:19:\
    \ note: \u2018long long int f\u2019 previously declared here\n   13 |     long\
    \ long int f = 0;\n      |                   ^\n/tmp/tmph2s45z3i.cpp:40:19: error:\
    \ redeclaration of \u2018long long int g\u2019\n   40 |     long long int g =\
    \ 1;\n      |                   ^\n/tmp/tmph2s45z3i.cpp:14:19: note: \u2018long\
    \ long int g\u2019 previously declared here\n   14 |     long long int g = 1;\n\
    \      |                   ^\n/tmp/tmph2s45z3i.cpp:41:19: error: redeclaration\
    \ of \u2018long long int h\u2019\n   41 |     long long int h = 1;\n      |  \
    \                 ^\n/tmp/tmph2s45z3i.cpp:15:1"
  stdout: ''
  timestamp: 1660099767
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long b = 3, c = 5, d\
    \ = 7;\n    while (b <= a) {\n        if (a % b == 0) {\n            while (c\
    \ <= a / b) {\n                if (a % c == 0) {\n                    return false;\n\
    \                }\n                c++;\n            }\n        }\n        b++;\n\
    \    }\n    return true;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: Exception
  stderr: 'tmpks5451t0: /tmp/tmpks5451t0.cpp:25: int main(): Assertion `candidate((5))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660099767
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5;\n    while (b < 100) {\n        if (a % b == 0 && a % c == 0)\n     \
    \       return true;\n        b += 2;\n        c += 2;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: Exception
  stderr: 'tmp75jd2_fd: /tmp/tmp75jd2_fd.cpp:22: int main(): Assertion `candidate((8))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099767
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = 3,\
    \ c = 5, d = 7;\n    while (b <= a) {\n        if (a % b == 0 && a % c == 0 &&\
    \ a % d == 0) {\n            return true;\n        }\n        ++b;\n        ++c;\n\
    \        ++d;\n    }\n    return false;\n}\nint main() {\n    auto candidate =\
    \ is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  status: Exception
  stderr: 'tmp8kq2uwzd: /tmp/tmp8kq2uwzd.cpp:23: int main(): Assertion `candidate((30))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660099767
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // 30 = 2 * 3 * 5\nbool is_multiply_prime(long a) {\n    long long int b = a;\n\
    \    long long int c = 1;\n    long long int d = 1;\n    long long int e = 1;\n\
    \    long long int f = 0;\n    long long int g = 0;\n    long long int h = 0;\n\
    \    long long int i = 0;\n    long long int j = 0;\n    long long int k = 0;\n\
    \    long long int l = 0;\n    long long int m = 0;\n    long long int n = 0;\n\
    \    long long int o = 0;\n    long long int p = 0;\n    long long int q = 0;\n\
    \    long long int r = 0;\n    long long int s = 0;\n    long long int t = 0;\n\
    \    long long int u = 0;\n    long long int v = 0;\n    long long int w = 0;\n\
    \    long long int x = 0;\n    long long int y = 0;\n    long long int z = 0;\n\
    \    long long int A = 0;\n    long long int B = 0;\n    long long int C = 0;\n\
    \    long long int D = 0;\n    long long int E = 0;\n    long long int F = 0;\n\
    \    long long int G = 0;\n    long long int H = 0;\n    long long int I = 0;\n\
    \    long long int J = 0;\n    long long int K = 0;\n    long long int L = 0;\n\
    \    long long int M = 0;\n    long long int N = 0;\n    long long int O = 0;\n\
    \    long long int P = 0;\n    long long int Q = 0;\n    long long int R = 0;\n\
    \    long long int S = 0;\n    long long int T = 0;\n    long long int U = 0;\n\
    \    long long int V = 0;\n    long long int W = 0;\n    long long int X = 0;\n\
    \    long long int Y = 0;\n    long long int Z = 0;\n    long long int A = 0;\n\
    \    long long int B = 0;\n    long long int C = 0;\n    long long int D = 0;\n\
    \    long long int E = 0;\n    long long int F = 0;\n    long long int G = 0;\n\
    \    long long int H = 0;\n    long long int I = 0;\n    long long int J = 0;\n\
    \    long long int K = 0;\n    long long int L = 0;\n    long long int M = 0;\n\
    \    long long int N = 0;\n    long long int O = 0;\n    long long int P = 0;\n\
    \    long long int Q = 0;\n    long long int R = 0;\n    long long int S = 0;\n\
    \    long long int T = 0;\n    long long int U = 0;\n    long long int V = 0;\n\
    \    long long int \n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpa48wm216.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpa48wm216.cpp:60:19: error: redeclaration of \u2018long long int A\u2019\
    \n   60 |     long long int A = 0;\n      |                   ^\n/tmp/tmpa48wm216.cpp:34:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   34 |     long\
    \ long int A = 0;\n      |                   ^\n/tmp/tmpa48wm216.cpp:61:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   61 |     long long int B =\
    \ 0;\n      |                   ^\n/tmp/tmpa48wm216.cpp:35:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   35 |     long long int B = 0;\n\
    \      |                   ^\n/tmp/tmpa48wm216.cpp:62:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   62 |     long long int C = 0;\n      |  \
    \                 ^\n/tmp/tmpa48wm216.cpp:36:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   36 |     long long int C = 0;\n      |        \
    \           ^\n/tmp/tmpa48wm216.cpp:63:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   63 |     long long int D = 0;\n      |                \
    \   ^\n/tmp/tmpa48wm216.cpp:37:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   37 |     long long int D = 0;\n      |                   ^\n\
    /tmp/tmpa48wm216.cpp:64:19: error: redeclaration of \u2018long long int E\u2019\
    \n   64 |     long long int E = 0;\n      |                   ^\n/tmp/tmpa48wm216.cpp:38:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   38 |     long\
    \ long int E = 0;\n      |                   ^\n/tmp/tmpa48wm216.cpp:65:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   65 |     long long int F =\
    \ 0;\n      |                   ^\n/tmp/tmpa48wm216.cpp:39:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   39 |     long long int F = 0;\n\
    \      |                   ^\n/tmp/tmpa48wm216.cpp:66:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   66 |     long long int G = 0;\n      |  \
    \                 ^\n/tmp/tmpa48wm216.cpp:40:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   40 |     long long int G = 0;\n      |        \
    \           ^\n/tmp/tmpa48wm216.cpp:67:19: error: "
  stdout: ''
  timestamp: 1660099760

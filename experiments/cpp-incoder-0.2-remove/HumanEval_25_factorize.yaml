name: HumanEval_25_factorize
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list of prime factors\
  \ of given integer in the order from smallest to largest.\n// Each of the factors\
  \ should be listed number of times corresponding to how many times it appeares in\
  \ factorization.\n// Input number should be equal to the product of all factors\n\
  std::vector<long> factorize(long n) {\n"
tests: "}\nint main() {\n    auto candidate = factorize;\n    assert(candidate((2))\
  \ == (std::vector<long>({(long)2})));\n    assert(candidate((4)) == (std::vector<long>({(long)2,\
  \ (long)2})));\n    assert(candidate((8)) == (std::vector<long>({(long)2, (long)2,\
  \ (long)2})));\n    assert(candidate((57)) == (std::vector<long>({(long)3, (long)19})));\n\
  \    assert(candidate((3249)) == (std::vector<long>({(long)3, (long)3, (long)19,\
  \ (long)19})));\n    assert(candidate((185193)) == (std::vector<long>({(long)3,\
  \ (long)3, (long)3, (long)19, (long)19, (long)19})));\n    assert(candidate((20577))\
  \ == (std::vector<long>({(long)3, (long)19, (long)19, (long)19})));\n    assert(candidate((18))\
  \ == (std::vector<long>({(long)2, (long)3, (long)3})));\n}\n"
completions: ["    std::vector<long> factors;\n    long i = 2;\n    while (i <= sqrt(n))\
    \ {\n        while (n % i == 0) {\n            factors.push_back(i);\n       \
    \     n /= i;\n        }\n        i++;\n    }\n    if (n != 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    long i = 2;\n\
    \    long factor = 1;\n    while (i <= sqrt(n)) {\n        while (n % i == 0)\
    \ {\n            factor *= i;\n            n /= i;\n        }\n        i++;\n\
    \    }\n    if (n > 1) {\n        factors.push_back(factor);\n    }\n    return\
    \ factors;", "    std::vector<long> factors;\n    long i = 2;\n    while (i <=\
    \ sqrt(n)) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    if (n != 1)\n      \
    \  factors.push_back(n);\n    return factors;", "    std::vector<long> factors;\n\
    \    long i = 2;\n    while (i <= sqrt(n)) {\n        while (n % i == 0) {\n \
    \           factors.push_back(i);\n            n /= i;\n        }\n        i++;\n\
    \    }\n    if (n != 1) {\n        factors.push_back(n);\n    }\n    return factors;",
  "    std::vector<long> factors;\n    long i = 2;\n    long factor = 1;\n    while\
    \ (i < n) {\n        while (n % i == 0) {\n            factor *= i;\n        \
    \    factors.push_back(factor);\n            n /= i;\n        }\n        i++;\n\
    \    }\n    if (n != 1) {\n        factors.push_back(n);\n    }\n    return factors;",
  "    std::vector<long> factors;\n    long i = 2;\n    long factor = 1;\n    while\
    \ (i * i <= n) {\n        if (n % i == 0) {\n            factor *= i;\n      \
    \      while (n % i == 0) {\n                n /= i;\n                factors.push_back(i);\n\
    \            }\n        }\n        ++i;\n    }\n    if (n != 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    long i = 2;\n\
    \    while (i <= sqrt(n)) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    if (n != 1) {\n    \
    \    factors.push_back(n);\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long i = 2;\n    long factor = 1;\n    while (i <= n) {\n    \
    \    while (n % i == 0) {\n            factor *= i;\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    if (n > 1) {\n     \
    \   factors.push_back(factor);\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long i = 2;\n    long factor = 1;\n    while (i < n) {\n     \
    \   while (n % i == 0) {\n            factor *= i;\n            n /= i;\n    \
    \    }\n        factors.push_back(factor);\n        factor = 1;\n        ++i;\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    long factor\
    \ = 1;\n    long i = 2;\n    while (i <= sqrt(n)) {\n        while (n % i == 0)\
    \ {\n            factor *= i;\n            n /= i;\n        }\n        i++;\n\
    \    }\n    factors.push_back(factor);\n    while (n > 1) {\n        while (n\
    \ % 2 == 0) {\n            factor *= 2;\n            n /= 2;\n        }\n    \
    \    while (n % 3 == 0) {\n            factor *= 3;\n            n /= 3;\n   \
    \     }\n        while (n % 5 == 0) {\n            factor *= 5;\n            n\
    \ /= 5;\n        }\n        factors.push_back(factor);\n    }\n    return factors;",
  "    std::vector<long> factors;\n    long i = 2;\n    while (i <= sqrt(n)) {\n \
    \       while (n % i == 0) {\n            factors.push_back(i);\n            n\
    \ /= i;\n        }\n        i++;\n    }\n    if (n != 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    long i = 2;\n\
    \    while (i <= sqrt(n)) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    if (n != 1) {\n    \
    \    factors.push_back(n);\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long i = 2;\n    while (i < n) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n        i++;\n\
    \    }\n    if (n != 1) {\n        factors.push_back(n);\n    }\n    return factors;",
  "    std::vector<long> factors;\n    long i = 2;\n    long factor = 1;\n    while\
    \ (i <= n) {\n        while (n % i == 0) {\n            factor *= i;\n       \
    \     factors.push_back(factor);\n            n /= i;\n        }\n        i++;\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    long i = 2;\n\
    \    while (i <= sqrt(n)) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    if (n != 1) {\n    \
    \    factors.push_back(n);\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long factor = 1;\n    long count = 1;\n    while (n > 1) {\n \
    \       while (n % factor == 0) {\n            factors.push_back(factor);\n  \
    \          n /= factor;\n            count++;\n        }\n        factor *= 2;\n\
    \    }\n    factors.push_back(factor);\n    factors.push_back(count);\n    return\
    \ factors;", "    std::vector<long> factors;\n    long i = 2;\n    while (i <\
    \ n) {\n        while (n % i == 0) {\n            factors.push_back(i);\n    \
    \        n /= i;\n        }\n        i++;\n    }\n    if (n > 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    long i = 2;\n\
    \    while (i <= n) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    if (n > 1) {\n     \
    \   factors.push_back(n);\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long p = n;\n    long q = n;\n    long r = n;\n    long s = n;\n\
    \    long t = n;\n    long u = n;\n    long v = n;\n    long w = n;\n    long\
    \ x = n;\n    long y = n;\n    long z = n;\n    long a = n;\n    long b = n;\n\
    \    long c = n;\n    long d = n;\n    long e = n;\n    long f = n;\n    long\
    \ g = n;\n    long h = n;\n    long i = n;\n    long j = n;\n    long k = n;\n\
    \    long l = n;\n    long m = n;\n    long n = n;\n    long o = n;\n    long\
    \ p = n;\n    long q = n;\n    long r = n;\n    long s = n;\n    long t = n;\n\
    \    long u = n;\n    long v = n;\n    long w = n;\n    long x = n;\n    long\
    \ y = n;\n    long z = n;\n    long a = n;\n    long b = n;\n    long c = n;\n\
    \    long d = n;\n    long e = n;\n    long f = n;\n    long g = n;\n    long\
    \ h = n;\n    long i = n;\n    long j = n;\n    long k = n;\n    long l = n;\n\
    \    long m = n;\n    long n = n;\n    long o = n;\n    long p = n;\n    long\
    \ q = n;\n    long r = n;\n    long s = n;\n    long t = n;\n    long u = n;\n\
    \    long v = n;\n    long w = n;\n    long x = n;\n    long y = n;\n    long\
    \ z = n;\n    long a = n;\n    long b = n;\n    long c = n;\n    long d = n;\n\
    \    long e = n;\n    long f = n;\n    long g = n;\n    long h = n;\n    long\
    \ i = n;\n    long j = n;\n    long k = n;\n    long l = n;\n    long m = n;\n\
    \    long n = n;\n    long o = n;\n    long p = n;\n    long q = n;\n    long\
    \ r = n;\n    long s = n;\n    long t = n;\n    long u = n;\n    long v = n;\n\
    \    long w = n;\n    long x = n;\n    long y = n;\n    long z = n;\n    long\
    \ a = n;\n    long b = n;\n    long c = n;\n    long d = n;\n    long e = n;\n\
    \    long f = n;\n    long g = n;\n    long h = n;\n    long i = n;\n    long\
    \ j = n;\n    long k = n;\n    long l = n;\n", "    std::vector<long> factors;\n\
    \    long p = n;\n    long q = n;\n    long r = n;\n    long s = n;\n    long\
    \ t = n;\n    long u = n;\n    long v = n;\n    long w = n;\n    long x = n;\n\
    \    long y = n;\n    long z = n;\n    long a = n;\n    long b = n;\n    long\
    \ c = n;\n    long d = n;\n    long e = n;\n    long f = n;\n    long g = n;\n\
    \    long h = n;\n    long i = n;\n    long j = n;\n    long k = n;\n    long\
    \ l = n;\n    long m = n;\n    long n = n;\n    long o = n;\n    long p = n;\n\
    \    long q = n;\n    long r = n;\n    long s = n;\n    long t = n;\n    long\
    \ u = n;\n    long v = n;\n    long w = n;\n    long x = n;\n    long y = n;\n\
    \    long z = n;\n    long a = n;\n    long b = n;\n    long c = n;\n    long\
    \ d = n;\n    long e = n;\n    long f = n;\n    long g = n;\n    long h = n;\n\
    \    long i = n;\n    long j = n;\n    long k = n;\n    long l = n;\n    long\
    \ m = n;\n    long n = n;\n    long o = n;\n    long p = n;\n    long q = n;\n\
    \    long r = n;\n    long s = n;\n    long t = n;\n    long u = n;\n    long\
    \ v = n;\n    long w = n;\n    long x = n;\n    long y = n;\n    long z = n;\n\
    \    long a = n;\n    long b = n;\n    long c = n;\n    long d = n;\n    long\
    \ e = n;\n    long f = n;\n    long g = n;\n    long h = n;\n    long i = n;\n\
    \    long j = n;\n    long k = n;\n    long l = n;\n    long m = n;\n    long\
    \ n = n;\n    long o = n;\n    long p = n;\n    long q = n;\n    long r = n;\n\
    \    long s = n;\n    long t = n;\n    long u = n;\n    long v = n;\n    long\
    \ w = n;\n    long x = n;\n    long y = n;\n    long z = n;\n    long a = n;\n\
    \    long b = n;\n    long c = n;\n    long d = n;\n    long e = n;\n    long\
    \ f = n;\n    long g = n;\n    long h = n;\n    long i = n;\n    long j = n;\n\
    \    long k = n;\n    long l = n;\n", "    std::vector<long> factors;\n    long\
    \ i = 2;\n    long factor = 1;\n    while (i <= n) {\n        while (n % i ==\
    \ 0) {\n            n /= i;\n            factors.push_back(i);\n        }\n  \
    \      i++;\n    }\n    if (n > 1) {\n        factors.push_back(1);\n    }\n \
    \   return factors;", "    std::vector<long> factors;\n    long i = 2;\n    while\
    \ (i <= sqrt(n)) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    if (n > 1) {\n     \
    \   factors.push_back(n);\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long i = 2;\n    while (i < n) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n        i++;\n\
    \    }\n    if (n != 1)\n        factors.push_back(n);\n    return factors;",
  "    std::vector<long> factors;\n    long p = n;\n    long q = n;\n    long r =\
    \ n;\n    long s = n;\n    long t = n;\n    long u = n;\n    long v = n;\n   \
    \ long w = n;\n    long x = n;\n    long y = n;\n    long z = n;\n    long a =\
    \ n;\n    long b = n;\n    long c = n;\n    long d = n;\n    long e = n;\n   \
    \ long f = n;\n    long g = n;\n    long h = n;\n    long i = n;\n    long j =\
    \ n;\n    long k = n;\n    long l = n;\n    long m = n;\n    long n = n;\n   \
    \ long o = n;\n    long p = n;\n    long q = n;\n    long r = n;\n    long s =\
    \ n;\n    long t = n;\n    long u = n;\n    long v = n;\n    long w = n;\n   \
    \ long x = n;\n    long y = n;\n    long z = n;\n    long a = n;\n    long b =\
    \ n;\n    long c = n;\n    long d = n;\n    long e = n;\n    long f = n;\n   \
    \ long g = n;\n    long h = n;\n    long i = n;\n    long j = n;\n    long k =\
    \ n;\n    long l = n;\n    long m = n;\n    long n = n;\n    long o = n;\n   \
    \ long p = n;\n    long q = n;\n    long r = n;\n    long s = n;\n    long t =\
    \ n;\n    long u = n;\n    long v = n;\n    long w = n;\n    long x = n;\n   \
    \ long y = n;\n    long z = n;\n    long a = n;\n    long b = n;\n    long c =\
    \ n;\n    long d = n;\n    long e = n;\n    long f = n;\n    long g = n;\n   \
    \ long h = n;\n    long i = n;\n    long j = n;\n    long k = n;\n    long l =\
    \ n;\n    long m = n;\n    long n = n;\n    long o = n;\n    long p = n;\n   \
    \ long q = n;\n    long r = n;\n    long s = n;\n    long t = n;\n    long u =\
    \ n;\n    long v = n;\n    long w = n;\n    long x = n;\n    long y = n;\n   \
    \ long z = n;\n    long a = n;\n    long b = n;\n    long c = n;\n    long d =\
    \ n;\n    long e = n;\n    long f = n;\n    long g = n;\n    long h = n;\n   \
    \ long i = n;\n    long j = n;\n    long k = n;\n    long l = n;\n", "    std::vector<long>\
    \ factors;\n    long i = 2;\n    while (i <= sqrt(n)) {\n        while (n % i\
    \ == 0) {\n            factors.push_back(i);\n            n /= i;\n        }\n\
    \        i++;\n    }\n    if (n != 1) {\n        factors.push_back(n);\n    }\n\
    \    return factors;", "    std::vector<long> factors;\n    long i = 2;\n    long\
    \ factor = 1;\n    while (i <= n) {\n        while (n % i == 0) {\n          \
    \  factor *= i;\n            factors.push_back(i);\n            n /= i;\n    \
    \    }\n        i++;\n    }\n    if (n != 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    long i = 2;\n\
    \    while (i <= sqrt(n)) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    if (n > 1) {\n     \
    \   factors.push_back(n);\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long i = 2;\n    long factor = 1;\n    while (i <= n) {\n    \
    \    while (n % i == 0) {\n            factor *= i;\n            n /= i;\n   \
    \     }\n        factors.push_back(factor);\n        factor = 1;\n        i++;\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    long i = 2;\n\
    \    while (i <= sqrt(n)) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    if (n != 1)\n      \
    \  factors.push_back(n);\n    return factors;", "    std::vector<long> factors;\n\
    \    long i = 2;\n    long factor = 1;\n    while (i <= n) {\n        while (n\
    \ % i == 0) {\n            factor *= i;\n            n /= i;\n        }\n    \
    \    factors.push_back(factor);\n        factor = 1;\n        ++i;\n    }\n  \
    \  return factors;", "    std::vector<long> factors;\n    long i = 2;\n    while\
    \ (i <= sqrt(n)) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    if (n != 1) {\n    \
    \    factors.push_back(n);\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long i = 2;\n    while (i <= sqrt(n)) {\n        while (n % i\
    \ == 0) {\n            factors.push_back(i);\n            n /= i;\n        }\n\
    \        i++;\n    }\n    if (n > 1) {\n        factors.push_back(n);\n    }\n\
    \    return factors;", "    std::vector<long> factors;\n    long i = 2;\n    while\
    \ (i <= sqrt(n)) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    if (n != 1) {\n    \
    \    factors.push_back(n);\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long p = n;\n    long q = n;\n    long r = n;\n    long s = n;\n\
    \    long t = n;\n    long u = n;\n    long v = n;\n    long w = n;\n    long\
    \ x = n;\n    long y = n;\n    long z = n;\n    long a = n;\n    long b = n;\n\
    \    long c = n;\n    long d = n;\n    long e = n;\n    long f = n;\n    long\
    \ g = n;\n    long h = n;\n    long i = n;\n    long j = n;\n    long k = n;\n\
    \    long l = n;\n    long m = n;\n    long n = n;\n    long o = n;\n    long\
    \ p = n;\n    long q = n;\n    long r = n;\n    long s = n;\n    long t = n;\n\
    \    long u = n;\n    long v = n;\n    long w = n;\n    long x = n;\n    long\
    \ y = n;\n    long z = n;\n    long a = n;\n    long b = n;\n    long c = n;\n\
    \    long d = n;\n    long e = n;\n    long f = n;\n    long g = n;\n    long\
    \ h = n;\n    long i = n;\n    long j = n;\n    long k = n;\n    long l = n;\n\
    \    long m = n;\n    long n = n;\n    long o = n;\n    long p = n;\n    long\
    \ q = n;\n    long r = n;\n    long s = n;\n    long t = n;\n    long u = n;\n\
    \    long v = n;\n    long w = n;\n    long x = n;\n    long y = n;\n    long\
    \ z = n;\n    long a = n;\n    long b = n;\n    long c = n;\n    long d = n;\n\
    \    long e = n;\n    long f = n;\n    long g = n;\n    long h = n;\n    long\
    \ i = n;\n    long j = n;\n    long k = n;\n    long l = n;\n    long m = n;\n\
    \    long n = n;\n    long o = n;\n    long p = n;\n    long q = n;\n    long\
    \ r = n;\n    long s = n;\n    long t = n;\n    long u = n;\n    long v = n;\n\
    \    long w = n;\n    long x = n;\n    long y = n;\n    long z = n;\n    long\
    \ a = n;\n    long b = n;\n    long c = n;\n    long d = n;\n    long e = n;\n\
    \    long f = n;\n    long g = n;\n    long h = n;\n    long i = n;\n    long\
    \ j = n;\n    long k = n;\n    long l = n;\n", "    std::vector<long> factors;\n\
    \    long i = 2;\n    long factor = 1;\n    while (i < n) {\n        if (n % i\
    \ == 0) {\n            factor *= i;\n            while (n % i == 0) {\n      \
    \          n /= i;\n                factors.push_back(i);\n            }\n   \
    \     }\n        i++;\n    }\n    factors.push_back(factor);\n    return factors;",
  "    std::vector<long> factors;\n    long i = 2;\n    long factor = 1;\n    while\
    \ (i <= n) {\n        while (n % i == 0) {\n            factor *= i;\n       \
    \     factors.push_back(factor);\n            n /= i;\n        }\n        i++;\n\
    \    }\n    if (n != 1) {\n        factors.push_back(n);\n    }\n    return factors;",
  "    std::vector<long> factors;\n    long i = 2;\n    long p = n;\n    while (p\
    \ != 1) {\n        while (n % i == 0) {\n            factors.push_back(i);\n \
    \           n /= i;\n        }\n        i++;\n    }\n    if (n != 1) {\n     \
    \   factors.push_back(n);\n    }\n    return factors;", "    std::vector<long>\
    \ factorization;\n    long i = 2;\n    while (i <= sqrt(n)) {\n        while (n\
    \ % i == 0) {\n            factorization.push_back(i);\n            n /= i;\n\
    \        }\n        i++;\n    }\n    if (n != 1) {\n        factorization.push_back(n);\n\
    \    }\n    return factorization;", "    std::vector<long> factors;\n    long\
    \ p = n;\n    long q = n;\n    long r = n;\n    long s = n;\n    long t = n;\n\
    \    long u = n;\n    long v = n;\n    long w = n;\n    long x = n;\n    long\
    \ y = n;\n    long z = n;\n    long a = n;\n    long b = n;\n    long c = n;\n\
    \    long d = n;\n    long e = n;\n    long f = n;\n    long g = n;\n    long\
    \ h = n;\n    long i = n;\n    long j = n;\n    long k = n;\n    long l = n;\n\
    \    long m = n;\n    long n = n;\n    long o = n;\n    long p = n;\n    long\
    \ q = n;\n    long r = n;\n    long s = n;\n    long t = n;\n    long u = n;\n\
    \    long v = n;\n    long w = n;\n    long x = n;\n    long y = n;\n    long\
    \ z = n;\n    long a = n;\n    long b = n;\n    long c = n;\n    long d = n;\n\
    \    long e = n;\n    long f = n;\n    long g = n;\n    long h = n;\n    long\
    \ i = n;\n    long j = n;\n    long k = n;\n    long l = n;\n    long m = n;\n\
    \    long n = n;\n    long o = n;\n    long p = n;\n    long q = n;\n    long\
    \ r = n;\n    long s = n;\n    long t = n;\n    long u = n;\n    long v = n;\n\
    \    long w = n;\n    long x = n;\n    long y = n;\n    long z = n;\n    long\
    \ a = n;\n    long b = n;\n    long c = n;\n    long d = n;\n    long e = n;\n\
    \    long f = n;\n    long g = n;\n    long h = n;\n    long i = n;\n    long\
    \ j = n;\n    long k = n;\n    long l = n;\n    long m = n;\n    long n = n;\n\
    \    long o = n;\n    long p = n;\n    long q = n;\n    long r = n;\n    long\
    \ s = n;\n    long t = n;\n    long u = n;\n    long v = n;\n    long w = n;\n\
    \    long x = n;\n    long y = n;\n    long z = n;\n    long a = n;\n    long\
    \ b = n;\n    long c = n;\n    long d = n;\n    long e = n;\n    long f = n;\n\
    \    long g = n;\n    long h = n;\n    long i = n;\n    long j = n;\n    long\
    \ k = n;\n    long l = n;\n", "    std::vector<long> factors;\n    long factor\
    \ = 1;\n    long i = 2;\n    while (i <= sqrt(n)) {\n        while (n % i == 0)\
    \ {\n            factor *= i;\n            n /= i;\n        }\n        i++;\n\
    \    }\n    factors.push_back(factor);\n    while (n > 1) {\n        factor *=\
    \ 2;\n        while (n % factor == 0) {\n            factors.push_back(factor);\n\
    \            n /= factor;\n        }\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long factor = 1;\n    long i = 2;\n    while (i <= sqrt(n)) {\n\
    \        while (n % i == 0) {\n            factor *= i;\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    if (n != 1) {\n    \
    \    factors.push_back(n);\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long p = n;\n    long q = n;\n    long r = n;\n    long s = n;\n\
    \    long t = n;\n    long u = n;\n    long v = n;\n    long w = n;\n    long\
    \ x = n;\n    long y = n;\n    long z = n;\n    long a = n;\n    long b = n;\n\
    \    long c = n;\n    long d = n;\n    long e = n;\n    long f = n;\n    long\
    \ g = n;\n    long h = n;\n    long i = n;\n    long j = n;\n    long k = n;\n\
    \    long l = n;\n    long m = n;\n    long n = n;\n    long o = n;\n    long\
    \ p = n;\n    long q = n;\n    long r = n;\n    long s = n;\n    long t = n;\n\
    \    long u = n;\n    long v = n;\n    long w = n;\n    long x = n;\n    long\
    \ y = n;\n    long z = n;\n    long a = n;\n    long b = n;\n    long c = n;\n\
    \    long d = n;\n    long e = n;\n    long f = n;\n    long g = n;\n    long\
    \ h = n;\n    long i = n;\n    long j = n;\n    long k = n;\n    long l = n;\n\
    \    long m = n;\n    long n = n;\n    long o = n;\n    long p = n;\n    long\
    \ q = n;\n    long r = n;\n    long s = n;\n    long t = n;\n    long u = n;\n\
    \    long v = n;\n    long w = n;\n    long x = n;\n    long y = n;\n    long\
    \ z = n;\n    long a = n;\n    long b = n;\n    long c = n;\n    long d = n;\n\
    \    long e = n;\n    long f = n;\n    long g = n;\n    long h = n;\n    long\
    \ i = n;\n    long j = n;\n    long k = n;\n    long l = n;\n    long m = n;\n\
    \    long n = n;\n    long o = n;\n    long p = n;\n    long q = n;\n    long\
    \ r = n;\n    long s = n;\n    long t = n;\n    long u = n;\n    long v = n;\n\
    \    long w = n;\n    long x = n;\n    long y = n;\n    long z = n;\n    long\
    \ a = n;\n    long b = n;\n    long c = n;\n    long d = n;\n    long e = n;\n\
    \    long f = n;\n    long g = n;\n    long h = n;\n    long i = n;\n    long\
    \ j = n;\n    long k = n;\n    long l = n;\n", "    std::vector<long> factors;\n\
    \    long i = 2;\n    long p = 1;\n    while (i <= n / p) {\n        if (n % i\
    \ == 0) {\n            factors.push_back(i);\n            while (n % i == 0) {\n\
    \                n /= i;\n                factors.push_back(i);\n            }\n\
    \        }\n        i++;\n    }\n    if (n != 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    long p = n;\n\
    \    long q = n;\n    long r = n;\n    long s = n;\n    long t = n;\n    long\
    \ u = n;\n    long v = n;\n    long w = n;\n    long x = n;\n    long y = n;\n\
    \    long z = n;\n    long a = n;\n    long b = n;\n    long c = n;\n    long\
    \ d = n;\n    long e = n;\n    long f = n;\n    long g = n;\n    long h = n;\n\
    \    long i = n;\n    long j = n;\n    long k = n;\n    long l = n;\n    long\
    \ m = n;\n    long n = n;\n    long o = n;\n    long p = n;\n    long q = n;\n\
    \    long r = n;\n    long s = n;\n    long t = n;\n    long u = n;\n    long\
    \ v = n;\n    long w = n;\n    long x = n;\n    long y = n;\n    long z = n;\n\
    \    long a = n;\n    long b = n;\n    long c = n;\n    long d = n;\n    long\
    \ e = n;\n    long f = n;\n    long g = n;\n    long h = n;\n    long i = n;\n\
    \    long j = n;\n    long k = n;\n    long l = n;\n    long m = n;\n    long\
    \ n = n;\n    long o = n;\n    long p = n;\n    long q = n;\n    long r = n;\n\
    \    long s = n;\n    long t = n;\n    long u = n;\n    long v = n;\n    long\
    \ w = n;\n    long x = n;\n    long y = n;\n    long z = n;\n    long a = n;\n\
    \    long b = n;\n    long c = n;\n    long d = n;\n    long e = n;\n    long\
    \ f = n;\n    long g = n;\n    long h = n;\n    long i = n;\n    long j = n;\n\
    \    long k = n;\n    long l = n;\n    long m = n;\n    long n = n;\n    long\
    \ o = n;\n    long p = n;\n    long q = n;\n    long r = n;\n    long s = n;\n\
    \    long t = n;\n    long u = n;\n    long v = n;\n    long w = n;\n    long\
    \ x = n;\n    long y = n;\n    long z = n;\n    long a = n;\n    long b = n;\n\
    \    long c = n;\n    long d = n;\n    long e = n;\n    long f = n;\n    long\
    \ g = n;\n    long h = n;\n    long i = n;\n    long j = n;\n    long k = n;\n\
    \    long l = n;\n", "    std::vector<long> factors;\n    long p = 1;\n    while\
    \ (p < n) {\n        if (n % p == 0) {\n            factors.push_back(p);\n  \
    \          n /= p;\n        }\n        p++;\n    }\n    if (n != 1)\n        factors.push_back(n);\n\
    \    return factors;", "    std::vector<long> factors;\n    long factor = 1;\n\
    \    long i = 2;\n    while (i <= sqrt(n)) {\n        while (n % i == 0) {\n \
    \           factor *= i;\n            n /= i;\n        }\n        factors.push_back(factor);\n\
    \        factor = 1;\n        ++i;\n    }\n    if (n > 1) {\n        factors.push_back(factor);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    long i = 2;\n\
    \    while (i <= sqrt(n)) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    if (n != 1) {\n    \
    \    factors.push_back(n);\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long i = 2;\n    while (i <= sqrt(n)) {\n        while (n % i\
    \ == 0) {\n            factors.push_back(i);\n            n /= i;\n        }\n\
    \        i++;\n    }\n    if (n != 1) {\n        factors.push_back(n);\n    }\n\
    \    return factors;", "    std::vector<long> factors;\n    long i = 2;\n    while\
    \ (i <= sqrt(n)) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    if (n > 1) {\n     \
    \   factors.push_back(n);\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long p = n;\n    long q = n;\n    long r = n;\n    long s = n;\n\
    \    long t = n;\n    long u = n;\n    long v = n;\n    long w = n;\n    long\
    \ x = n;\n    long y = n;\n    long z = n;\n    long a = n;\n    long b = n;\n\
    \    long c = n;\n    long d = n;\n    long e = n;\n    long f = n;\n    long\
    \ g = n;\n    long h = n;\n    long i = n;\n    long j = n;\n    long k = n;\n\
    \    long l = n;\n    long m = n;\n    long n = n;\n    long o = n;\n    long\
    \ p = n;\n    long q = n;\n    long r = n;\n    long s = n;\n    long t = n;\n\
    \    long u = n;\n    long v = n;\n    long w = n;\n    long x = n;\n    long\
    \ y = n;\n    long z = n;\n    long a = n;\n    long b = n;\n    long c = n;\n\
    \    long d = n;\n    long e = n;\n    long f = n;\n    long g = n;\n    long\
    \ h = n;\n    long i = n;\n    long j = n;\n    long k = n;\n    long l = n;\n\
    \    long m = n;\n    long n = n;\n    long o = n;\n    long p = n;\n    long\
    \ q = n;\n    long r = n;\n    long s = n;\n    long t = n;\n    long u = n;\n\
    \    long v = n;\n    long w = n;\n    long x = n;\n    long y = n;\n    long\
    \ z = n;\n    long a = n;\n    long b = n;\n    long c = n;\n    long d = n;\n\
    \    long e = n;\n    long f = n;\n    long g = n;\n    long h = n;\n    long\
    \ i = n;\n    long j = n;\n    long k = n;\n    long l = n;\n    long m = n;\n\
    \    long n = n;\n    long o = n;\n    long p = n;\n    long q = n;\n    long\
    \ r = n;\n    long s = n;\n    long t = n;\n    long u = n;\n    long v = n;\n\
    \    long w = n;\n    long x = n;\n    long y = n;\n    long z = n;\n    long\
    \ a = n;\n    long b = n;\n    long c = n;\n    long d = n;\n    long e = n;\n\
    \    long f = n;\n    long g = n;\n    long h = n;\n    long i = n;\n    long\
    \ j = n;\n    long k = n;\n    long l = n;\n", "    std::vector<long> factors;\n\
    \    long p = 1;\n    long q = n;\n    while (p != q) {\n        while (q % p\
    \ == 0) {\n            factors.push_back(p);\n            q /= p;\n        }\n\
    \        p += 1;\n    }\n    return factors;", "    std::vector<long> factors;\n\
    \    long p = 1;\n    long q = n;\n    long r = n;\n    long s = 2;\n    long\
    \ t = 2;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n\
    \    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long\
    \ c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 0;\n    long g = 1;\n\
    \    long h = 1;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long\
    \ l = 0;\n    long m = 0;\n    long n = 0;\n    long o = 0;\n    long p = 0;\n\
    \    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long\
    \ u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n\
    \    long z = 0;\n    long a = 0;\n    long b = 0;\n    long c = 0;\n    long\
    \ d = 0;\n    long e = 0;\n    long f = 0;\n    long g = 0;\n    long h = 0;\n\
    \    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long\
    \ m = 0;\n    long n = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n\
    \    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long\
    \ v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n\
    \    long a = 0;\n    long b = 0;\n    long c = 0;\n    long d = 0;\n    long\
    \ e = 0;\n    long f = 0;\n    long g = 0;\n    long h = 0;\n    long i = 0;\n\
    \    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long\
    \ n = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n\
    \    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long\
    \ w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long a = 0;\n\
    \    long b = 0;\n    long c = 0;\n    long d = 0;\n    long e = 0;\n    long\
    \ f = 0;\n    long g = 0;\n    long h = 0;\n    long i = 0;\n    long j = 0;\n\
    \    long k = 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n", "    std::vector<long>\
    \ factors;\n    long i = 2;\n    while (i < n) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n        i++;\n\
    \    }\n    if (n > 1) {\n        factors.push_back(n);\n    }\n    return factors;",
  "    std::vector<long> factors;\n    long i = 2;\n    long factor = 1;\n    while\
    \ (i <= n) {\n        while (n % i == 0) {\n            factor *= i;\n       \
    \     n /= i;\n        }\n        i++;\n    }\n    if (n != 1) {\n        factor\
    \ *= n;\n    }\n    factors.push_back(factor);\n    return factors;", "    std::vector<long>\
    \ factorization;\n    long i = 2;\n    while (i <= n) {\n        while (n % i\
    \ == 0) {\n            factorization.push_back(i);\n            n /= i;\n    \
    \    }\n        i++;\n    }\n    if (n > 1) {\n        factorization.push_back(n);\n\
    \    }\n    return factorization;", "    std::vector<long> factors;\n    long\
    \ i = 2;\n    while (i <= sqrt(n)) {\n        while (n % i == 0) {\n         \
    \   factors.push_back(i);\n            n /= i;\n        }\n        i++;\n    }\n\
    \    if (n > 1) {\n        factors.push_back(n);\n    }\n    return factors;",
  "    std::vector<long> factors;\n    long i = 2;\n    while (i <= sqrt(n)) {\n \
    \       while (n % i == 0) {\n            factors.push_back(i);\n            n\
    \ /= i;\n        }\n        i++;\n    }\n    if (n != 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    long i = 2;\n\
    \    while (i <= sqrt(n)) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    if (n > 1) {\n     \
    \   factors.push_back(n);\n    }\n    return factors;", "    std::vector<long>\
    \ factorization;\n    long i = 2;\n    long factor = 1;\n    while (i <= n / i)\
    \ {\n        while (n % i == 0) {\n            factor *= i;\n            factorization.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    if (n > 1) {\n     \
    \   factorization.push_back(n);\n    }\n    return factorization;", "    std::vector<long>\
    \ factors;\n    long i = 2;\n    while (i <= n) {\n        while (n % i == 0)\
    \ {\n            factors.push_back(i);\n            n /= i;\n        }\n     \
    \   i++;\n    }\n    if (n > 1) {\n        factors.push_back(n);\n    }\n    return\
    \ factors;", "    std::vector<long> factors;\n    long factor = 1;\n    long i\
    \ = 2;\n    while (i <= sqrt(n)) {\n        while (n % i == 0) {\n           \
    \ factor *= i;\n            factors.push_back(i);\n            n /= i;\n     \
    \   }\n        i++;\n    }\n    if (n != 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    long i = 2;\n\
    \    while (i <= sqrt(n)) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    if (n > 1) {\n     \
    \   factors.push_back(n);\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long p = n;\n    long q = n;\n    long r = n;\n    long s = n;\n\
    \    long t = n;\n    long u = n;\n    long v = n;\n    long w = n;\n    long\
    \ x = n;\n    long y = n;\n    long z = n;\n    long a = n;\n    long b = n;\n\
    \    long c = n;\n    long d = n;\n    long e = n;\n    long f = n;\n    long\
    \ g = n;\n    long h = n;\n    long i = n;\n    long j = n;\n    long k = n;\n\
    \    long l = n;\n    long m = n;\n    long n = n;\n    long o = n;\n    long\
    \ p = n;\n    long q = n;\n    long r = n;\n    long s = n;\n    long t = n;\n\
    \    long u = n;\n    long v = n;\n    long w = n;\n    long x = n;\n    long\
    \ y = n;\n    long z = n;\n    long a = n;\n    long b = n;\n    long c = n;\n\
    \    long d = n;\n    long e = n;\n    long f = n;\n    long g = n;\n    long\
    \ h = n;\n    long i = n;\n    long j = n;\n    long k = n;\n    long l = n;\n\
    \    long m = n;\n    long n = n;\n    long o = n;\n    long p = n;\n    long\
    \ q = n;\n    long r = n;\n    long s = n;\n    long t = n;\n    long u = n;\n\
    \    long v = n;\n    long w = n;\n    long x = n;\n    long y = n;\n    long\
    \ z = n;\n    long a = n;\n    long b = n;\n    long c = n;\n    long d = n;\n\
    \    long e = n;\n    long f = n;\n    long g = n;\n    long h = n;\n    long\
    \ i = n;\n    long j = n;\n    long k = n;\n    long l = n;\n    long m = n;\n\
    \    long n = n;\n    long o = n;\n    long p = n;\n    long q = n;\n    long\
    \ r = n;\n    long s = n;\n    long t = n;\n    long u = n;\n    long v = n;\n\
    \    long w = n;\n    long x = n;\n    long y = n;\n    long z = n;\n    long\
    \ a = n;\n    long b = n;\n    long c = n;\n    long d = n;\n    long e = n;\n\
    \    long f = n;\n    long g = n;\n    long h = n;\n    long i = n;\n    long\
    \ j = n;\n    long k = n;\n    long l = n;\n", "    std::vector<long> factors;\n\
    \    long factor = 1;\n    long i = 2;\n    while (i <= sqrt(n)) {\n        while\
    \ (n % i == 0) {\n            factor *= i;\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    if (n != 1) {\n    \
    \    factors.push_back(n);\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long i = 2;\n    while (i <= sqrt(n)) {\n        while (n % i\
    \ == 0) {\n            factors.push_back(i);\n            n /= i;\n        }\n\
    \        i++;\n    }\n    if (n != 1)\n        factors.push_back(n);\n    return\
    \ factors;", "    std::vector<long> factors;\n    long i = 2;\n    while (i <=\
    \ sqrt(n)) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    if (n != 1) {\n    \
    \    factors.push_back(n);\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long i = 2;\n    while (i <= sqrt(n)) {\n        while (n % i\
    \ == 0) {\n            factors.push_back(i);\n            n /= i;\n        }\n\
    \        i++;\n    }\n    if (n != 1) {\n        factors.push_back(n);\n    }\n\
    \    return factors;", "    std::vector<long> factors;\n    long p = n;\n    long\
    \ q = n;\n    long r = n;\n    long s = n;\n    long t = n;\n    long u = n;\n\
    \    long v = n;\n    long w = n;\n    long x = n;\n    long y = n;\n    long\
    \ z = n;\n    long a = n;\n    long b = n;\n    long c = n;\n    long d = n;\n\
    \    long e = n;\n    long f = n;\n    long g = n;\n    long h = n;\n    long\
    \ i = n;\n    long j = n;\n    long k = n;\n    long l = n;\n    long m = n;\n\
    \    long n = n;\n    long o = n;\n    long p = n;\n    long q = n;\n    long\
    \ r = n;\n    long s = n;\n    long t = n;\n    long u = n;\n    long v = n;\n\
    \    long w = n;\n    long x = n;\n    long y = n;\n    long z = n;\n    long\
    \ a = n;\n    long b = n;\n    long c = n;\n    long d = n;\n    long e = n;\n\
    \    long f = n;\n    long g = n;\n    long h = n;\n    long i = n;\n    long\
    \ j = n;\n    long k = n;\n    long l = n;\n    long m = n;\n    long n = n;\n\
    \    long o = n;\n    long p = n;\n    long q = n;\n    long r = n;\n    long\
    \ s = n;\n    long t = n;\n    long u = n;\n    long v = n;\n    long w = n;\n\
    \    long x = n;\n    long y = n;\n    long z = n;\n    long a = n;\n    long\
    \ b = n;\n    long c = n;\n    long d = n;\n    long e = n;\n    long f = n;\n\
    \    long g = n;\n    long h = n;\n    long i = n;\n    long j = n;\n    long\
    \ k = n;\n    long l = n;\n    long m = n;\n    long n = n;\n    long o = n;\n\
    \    long p = n;\n    long q = n;\n    long r = n;\n    long s = n;\n    long\
    \ t = n;\n    long u = n;\n    long v = n;\n    long w = n;\n    long x = n;\n\
    \    long y = n;\n    long z = n;\n    long a = n;\n    long b = n;\n    long\
    \ c = n;\n    long d = n;\n    long e = n;\n    long f = n;\n    long g = n;\n\
    \    long h = n;\n    long i = n;\n    long j = n;\n    long k = n;\n    long\
    \ l = n;\n", "    std::vector<long> factorization;\n    long i = 2;\n    while\
    \ (i <= sqrt(n)) {\n        while (n % i == 0) {\n            factorization.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    if (n != 1) {\n    \
    \    factorization.push_back(n);\n    }\n    return factorization;", "    std::vector<long>\
    \ factors;\n    long i = 2;\n    while (i <= sqrt(n)) {\n        if (n % i ==\
    \ 0) {\n            factors.push_back(i);\n            while (n % i == 0) {\n\
    \                n /= i;\n                factors.push_back(i);\n            }\n\
    \        }\n        i++;\n    }\n    if (n != 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    long i = 2;\n\
    \    long factor = 1;\n    while (i < n) {\n        if (n % i == 0) {\n      \
    \      factor *= i;\n            while (n % i == 0) {\n                n /= i;\n\
    \                factors.push_back(i);\n            }\n        }\n        i++;\n\
    \    }\n    if (n != 1) {\n        factors.push_back(n);\n    }\n    return factors;",
  "    std::vector<long> factors;\n    long i = 2;\n    long factor = 1;\n    while\
    \ (i <= n) {\n        while (n % i == 0) {\n            factor *= i;\n       \
    \     factors.push_back(i);\n            n /= i;\n        }\n        i++;\n  \
    \  }\n    if (n > 1) {\n        factors.push_back(n);\n    }\n    return factors;",
  "    std::vector<long> factors;\n    long i = 2;\n    while (i <= sqrt(n)) {\n \
    \       while (n % i == 0) {\n            factors.push_back(i);\n            n\
    \ /= i;\n        }\n        i++;\n    }\n    if (n != 1)\n        factors.push_back(n);\n\
    \    return factors;", "    std::vector<long> factors;\n    long i = 2;\n    long\
    \ factor = 1;\n    while (i * i <= n) {\n        if (n % i == 0) {\n         \
    \   factor *= i;\n            while (n % i == 0) {\n                n /= i;\n\
    \                factors.push_back(i);\n            }\n        }\n        ++i;\n\
    \    }\n    if (n != 1) {\n        factors.push_back(n);\n    }\n    return factors;",
  "    std::vector<long> factors;\n    long i = 2;\n    long factor = 1;\n    while\
    \ (i <= n) {\n        while (n % i == 0) {\n            factor *= i;\n       \
    \     factors.push_back(i);\n            n /= i;\n        }\n        i++;\n  \
    \  }\n    if (n != 1) {\n        factors.push_back(n);\n    }\n    return factors;",
  "    std::vector<long> factors;\n    long p = n;\n    long q = n;\n    long r =\
    \ n;\n    long s = n;\n    long t = n;\n    long u = n;\n    long v = n;\n   \
    \ long w = n;\n    long x = n;\n    long y = n;\n    long z = n;\n    long a =\
    \ n;\n    long b = n;\n    long c = n;\n    long d = n;\n    long e = n;\n   \
    \ long f = n;\n    long g = n;\n    long h = n;\n    long i = n;\n    long j =\
    \ n;\n    long k = n;\n    long l = n;\n    long m = n;\n    long n = n;\n   \
    \ long o = n;\n    long p = n;\n    long q = n;\n    long r = n;\n    long s =\
    \ n;\n    long t = n;\n    long u = n;\n    long v = n;\n    long w = n;\n   \
    \ long x = n;\n    long y = n;\n    long z = n;\n    long a = n;\n    long b =\
    \ n;\n    long c = n;\n    long d = n;\n    long e = n;\n    long f = n;\n   \
    \ long g = n;\n    long h = n;\n    long i = n;\n    long j = n;\n    long k =\
    \ n;\n    long l = n;\n    long m = n;\n    long n = n;\n    long o = n;\n   \
    \ long p = n;\n    long q = n;\n    long r = n;\n    long s = n;\n    long t =\
    \ n;\n    long u = n;\n    long v = n;\n    long w = n;\n    long x = n;\n   \
    \ long y = n;\n    long z = n;\n    long a = n;\n    long b = n;\n    long c =\
    \ n;\n    long d = n;\n    long e = n;\n    long f = n;\n    long g = n;\n   \
    \ long h = n;\n    long i = n;\n    long j = n;\n    long k = n;\n    long l =\
    \ n;\n    long m = n;\n    long n = n;\n    long o = n;\n    long p = n;\n   \
    \ long q = n;\n    long r = n;\n    long s = n;\n    long t = n;\n    long u =\
    \ n;\n    long v = n;\n    long w = n;\n    long x = n;\n    long y = n;\n   \
    \ long z = n;\n    long a = n;\n    long b = n;\n    long c = n;\n    long d =\
    \ n;\n    long e = n;\n    long f = n;\n    long g = n;\n    long h = n;\n   \
    \ long i = n;\n    long j = n;\n    long k = n;\n    long l = n;\n", "    std::vector<long>\
    \ factors;\n    long i = 2;\n    while (i <= sqrt(n)) {\n        while (n % i\
    \ == 0) {\n            factors.push_back(i);\n            n /= i;\n        }\n\
    \        i++;\n    }\n    if (n > 1) {\n        factors.push_back(n);\n    }\n\
    \    return factors;", "    std::vector<long> factors;\n    long i = 2;\n    while\
    \ (i <= sqrt(n)) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    if (n > 1) {\n     \
    \   factors.push_back(n);\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long factor = 1;\n    long count = 0;\n    long i = 2;\n    while\
    \ (i <= sqrt(n)) {\n        while (n % i == 0) {\n            n /= i;\n      \
    \      count++;\n        }\n        factors.push_back(factor);\n        factor\
    \ *= i;\n        i++;\n    }\n    factors.push_back(factor);\n    factors.push_back(count);\n\
    \    return factors;", "    std::vector<long> factors;\n    long i = 2;\n    while\
    \ (i <= sqrt(n)) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    if (n > 1) {\n     \
    \   factors.push_back(n);\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long factor = 1;\n    long count = 0;\n    long i = 2;\n    while\
    \ (i <= sqrt(n)) {\n        while (n % i == 0) {\n            n /= i;\n      \
    \      count++;\n        }\n        factors.push_back(factor);\n        factor\
    \ *= i;\n        i++;\n    }\n    factors.push_back(factor);\n    factors.push_back(count);\n\
    \    return factors;", "    std::vector<long> factors;\n    long i = 2;\n    while\
    \ (i <= sqrt(n)) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    if (n != 1) {\n    \
    \    factors.push_back(n);\n    }\n    return factors;", "    std::vector<long>\
    \ factorization;\n    long i = 2;\n    while (i <= sqrt(n)) {\n        while (n\
    \ % i == 0) {\n            factorization.push_back(i);\n            n /= i;\n\
    \        }\n        i++;\n    }\n    if (n != 1) {\n        factorization.push_back(n);\n\
    \    }\n    return factorization;", "    std::vector<long> factors;\n    long\
    \ i = 2;\n    while (i <= sqrt(n)) {\n        while (n % i == 0) {\n         \
    \   factors.push_back(i);\n            n /= i;\n        }\n        i++;\n    }\n\
    \    if (n != 1) {\n        factors.push_back(n);\n    }\n    return factors;",
  "    std::vector<long> factors;\n    long p = n;\n    long q = n;\n    long r =\
    \ n;\n    long s = n;\n    long t = n;\n    long u = n;\n    long v = n;\n   \
    \ long w = n;\n    long x = n;\n    long y = n;\n    long z = n;\n    long a =\
    \ n;\n    long b = n;\n    long c = n;\n    long d = n;\n    long e = n;\n   \
    \ long f = n;\n    long g = n;\n    long h = n;\n    long i = n;\n    long j =\
    \ n;\n    long k = n;\n    long l = n;\n    long m = n;\n    long n = n;\n   \
    \ long o = n;\n    long p = n;\n    long q = n;\n    long r = n;\n    long s =\
    \ n;\n    long t = n;\n    long u = n;\n    long v = n;\n    long w = n;\n   \
    \ long x = n;\n    long y = n;\n    long z = n;\n    long a = n;\n    long b =\
    \ n;\n    long c = n;\n    long d = n;\n    long e = n;\n    long f = n;\n   \
    \ long g = n;\n    long h = n;\n    long i = n;\n    long j = n;\n    long k =\
    \ n;\n    long l = n;\n    long m = n;\n    long n = n;\n    long o = n;\n   \
    \ long p = n;\n    long q = n;\n    long r = n;\n    long s = n;\n    long t =\
    \ n;\n    long u = n;\n    long v = n;\n    long w = n;\n    long x = n;\n   \
    \ long y = n;\n    long z = n;\n    long a = n;\n    long b = n;\n    long c =\
    \ n;\n    long d = n;\n    long e = n;\n    long f = n;\n    long g = n;\n   \
    \ long h = n;\n    long i = n;\n    long j = n;\n    long k = n;\n    long l =\
    \ n;\n    long m = n;\n    long n = n;\n    long o = n;\n    long p = n;\n   \
    \ long q = n;\n    long r = n;\n    long s = n;\n    long t = n;\n    long u =\
    \ n;\n    long v = n;\n    long w = n;\n    long x = n;\n    long y = n;\n   \
    \ long z = n;\n    long a = n;\n    long b = n;\n    long c = n;\n    long d =\
    \ n;\n    long e = n;\n    long f = n;\n    long g = n;\n    long h = n;\n   \
    \ long i = n;\n    long j = n;\n    long k = n;\n    long l = n;\n", "    std::vector<long>\
    \ factors;\n    long i = 2;\n    while (i <= sqrt(n)) {\n        while (n % i\
    \ == 0) {\n            factors.push_back(i);\n            n /= i;\n        }\n\
    \        i++;\n    }\n    if (n != 1) {\n        factors.push_back(n);\n    }\n\
    \    return factors;", "    std::vector<long> factors;\n    long p = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n\
    \    long o = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n    long\
    \ s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n\
    \    long x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long\
    \ b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n\
    \    long g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long\
    \ k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n\
    \    long p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long\
    \ t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n\
    \    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long\
    \ c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n\
    \    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long\
    \ l = 1;\n", "    std::vector<long> factors;\n    long i = 2;\n    while (i <=\
    \ sqrt(n)) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    if (n > 1) {\n     \
    \   factors.push_back(n);\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long i = 2;\n    while (i <= sqrt(n)) {\n        while (n % i\
    \ == 0) {\n            factors.push_back(i);\n            n /= i;\n        }\n\
    \        i++;\n    }\n    if (n != 1) {\n        factors.push_back(n);\n    }\n\
    \    return factors;", "    std::vector<long> factors;\n    long i = 2;\n    while\
    \ (i < n) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    if (n != 1) {\n    \
    \    factors.push_back(n);\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long i = 2;\n    while (i < n) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n        i++;\n\
    \    }\n    if (n > 1) {\n        factors.push_back(n);\n    }\n    return factors;",
  "    std::vector<long> factors;\n    long i = 2;\n    while (i < n) {\n        while\
    \ (n % i == 0) {\n            factors.push_back(i);\n            n /= i;\n   \
    \     }\n        i++;\n    }\n    if (n > 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    long factor\
    \ = 1;\n    long factorization = 1;\n    long i = 2;\n    while (i <= sqrt(n))\
    \ {\n        while (n % i == 0) {\n            factorization *= i;\n         \
    \   factors.push_back(factorization);\n            n /= i;\n        }\n      \
    \  i++;\n    }\n    if (n != 1) {\n        factorization *= n;\n        factors.push_back(factorization);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    long i = 2;\n\
    \    while (i <= sqrt(n)) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    if (n > 1) {\n     \
    \   factors.push_back(n);\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long i = 2;\n    long factor = 1;\n    while (i <= n) {\n    \
    \    while (n % i == 0) {\n            factor *= i;\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    if (n != 1) {\n    \
    \    factors.push_back(n);\n    }\n    return factors;", "    std::vector<long>\
    \ factorization;\n    long i = 2;\n    while (i <= sqrt(n)) {\n        while (n\
    \ % i == 0) {\n            factorization.push_back(i);\n            n /= i;\n\
    \        }\n        i++;\n    }\n    if (n != 1) {\n        factorization.push_back(n);\n\
    \    }\n    return factorization;", "    std::vector<long> factors;\n    long\
    \ i = 2;\n    while (i <= sqrt(n)) {\n        while (n % i == 0) {\n         \
    \   factors.push_back(i);\n            n /= i;\n        }\n        i++;\n    }\n\
    \    if (n != 1) {\n        factors.push_back(n);\n    }\n    return factors;",
  "    std::vector<long> factors;\n    long i = 2;\n    while (i < n) {\n        while\
    \ (n % i == 0) {\n            factors.push_back(i);\n            n /= i;\n   \
    \     }\n        i++;\n    }\n    if (n > 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    long i = 2;\n\
    \    while (i <= sqrt(n)) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    if (n != 1) {\n    \
    \    factors.push_back(n);\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long i = 2;\n    while (i <= sqrt(n)) {\n        while (n % i\
    \ == 0) {\n            factors.push_back(i);\n            n /= i;\n        }\n\
    \        i++;\n    }\n    if (n != 1) {\n        factors.push_back(n);\n    }\n\
    \    return factors;", "    std::vector<long> factors;\n    long factor = 1;\n\
    \    long i = 2;\n    long count = 0;\n    while (i <= sqrt(n)) {\n        while\
    \ (n % i == 0) {\n            factors.push_back(i);\n            n /= i;\n   \
    \         count++;\n        }\n        i++;\n    }\n    if (n != 1) {\n      \
    \  factors.push_back(n);\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long p = n;\n    long q = n;\n    long r = n;\n    long s = n;\n\
    \    long t = n;\n    long u = n;\n    long v = n;\n    long w = n;\n    long\
    \ x = n;\n    long y = n;\n    long z = n;\n    long a = n;\n    long b = n;\n\
    \    long c = n;\n    long d = n;\n    long e = n;\n    long f = n;\n    long\
    \ g = n;\n    long h = n;\n    long i = n;\n    long j = n;\n    long k = n;\n\
    \    long l = n;\n    long m = n;\n    long n = n;\n    long o = n;\n    long\
    \ p = n;\n    long q = n;\n    long r = n;\n    long s = n;\n    long t = n;\n\
    \    long u = n;\n    long v = n;\n    long w = n;\n    long x = n;\n    long\
    \ y = n;\n    long z = n;\n    long a = n;\n    long b = n;\n    long c = n;\n\
    \    long d = n;\n    long e = n;\n    long f = n;\n    long g = n;\n    long\
    \ h = n;\n    long i = n;\n    long j = n;\n    long k = n;\n    long l = n;\n\
    \    long m = n;\n    long n = n;\n    long o = n;\n    long p = n;\n    long\
    \ q = n;\n    long r = n;\n    long s = n;\n    long t = n;\n    long u = n;\n\
    \    long v = n;\n    long w = n;\n    long x = n;\n    long y = n;\n    long\
    \ z = n;\n    long a = n;\n    long b = n;\n    long c = n;\n    long d = n;\n\
    \    long e = n;\n    long f = n;\n    long g = n;\n    long h = n;\n    long\
    \ i = n;\n    long j = n;\n    long k = n;\n    long l = n;\n    long m = n;\n\
    \    long n = n;\n    long o = n;\n    long p = n;\n    long q = n;\n    long\
    \ r = n;\n    long s = n;\n    long t = n;\n    long u = n;\n    long v = n;\n\
    \    long w = n;\n    long x = n;\n    long y = n;\n    long z = n;\n    long\
    \ a = n;\n    long b = n;\n    long c = n;\n    long d = n;\n    long e = n;\n\
    \    long f = n;\n    long g = n;\n    long h = n;\n    long i = n;\n    long\
    \ j = n;\n    long k = n;\n    long l = n;\n", "    std::vector<long> factors;\n\
    \    long factor = 1;\n    long i = 2;\n    while (i <= n / factor) {\n      \
    \  while (n % i == 0) {\n            factor *= i;\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    if (n > 1) {\n     \
    \   factors.push_back(1);\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long factor = 1;\n    long count = 1;\n    long i = 2;\n    long\
    \ j = 1;\n    while (i <= n) {\n        while (n % i == 0) {\n            n =\
    \ n / i;\n            factors.push_back(factor);\n            count++;\n     \
    \   }\n        i++;\n        j++;\n    }\n    factors.push_back(factor);\n   \
    \ factors.push_back(count);\n    return factors;", "    std::vector<long> factorization;\n\
    \    long i = 2;\n    while (i <= sqrt(n)) {\n        while (n % i == 0) {\n \
    \           factorization.push_back(i);\n            n /= i;\n        }\n    \
    \    i++;\n    }\n    if (n != 1) {\n        factorization.push_back(n);\n   \
    \ }\n    return factorization;", "    std::vector<long> factors;\n    long p =\
    \ 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n   \
    \ long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y =\
    \ 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n   \
    \ long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h =\
    \ 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n   \
    \ long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q =\
    \ 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n   \
    \ long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z =\
    \ 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n   \
    \ long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i =\
    \ 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n   \
    \ long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long r =\
    \ 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n   \
    \ long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long a =\
    \ 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n   \
    \ long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long j =\
    \ 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n   \
    \ long o = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n    long s =\
    \ 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n   \
    \ long x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b =\
    \ 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n   \
    \ long g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k =\
    \ 1;\n    long l = 1;\n", "    std::vector<long> factors;\n    long i = 2;\n \
    \   while (i <= n) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    if (n > 1) {\n     \
    \   factors.push_back(n);\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long i = 2;\n    while (i <= sqrt(n)) {\n        while (n % i\
    \ == 0) {\n            factors.push_back(i);\n            n /= i;\n        }\n\
    \        i++;\n    }\n    if (n != 1) {\n        factors.push_back(n);\n    }\n\
    \    return factors;", "    std::vector<long> factors;\n    long i = 2;\n    while\
    \ (i <= sqrt(n)) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    if (n != 1) {\n    \
    \    factors.push_back(n);\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long i = 2;\n    while (i <= sqrt(n)) {\n        while (n % i\
    \ == 0) {\n            factors.push_back(i);\n            n /= i;\n        }\n\
    \        i++;\n    }\n    if (n != 1) {\n        factors.push_back(n);\n    }\n\
    \    return factors;", "    std::vector<long> factors;\n    long i = 2;\n    long\
    \ p = n;\n    while (p != 1) {\n        while (p % i == 0) {\n            factors.push_back(i);\n\
    \            p /= i;\n        }\n        i++;\n    }\n    return factors;", " \
    \   std::vector<long> factors;\n    long i = 2;\n    while (i <= n) {\n      \
    \  while (n % i == 0) {\n            factors.push_back(i);\n            n /= i;\n\
    \        }\n        i++;\n    }\n    if (n > 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    long i = 2;\n\
    \    long factor = 1;\n    while (i < n) {\n        if (n % i == 0) {\n      \
    \      factor *= i;\n            while (n % i == 0) {\n                n /= i;\n\
    \                factors.push_back(i);\n            }\n        }\n        i++;\n\
    \    }\n    factors.push_back(factor);\n    return factors;", "    std::vector<long>\
    \ factorization;\n    long i = 2;\n    while (i <= sqrt(n)) {\n        while (n\
    \ % i == 0) {\n            factorization.push_back(i);\n            n /= i;\n\
    \        }\n        i++;\n    }\n    if (n != 1) {\n        factorization.push_back(n);\n\
    \    }\n    return factorization;", "    std::vector<long> factors;\n    long\
    \ i = 2;\n    long factor = 1;\n    while (i <= n) {\n        if (n % i == 0)\
    \ {\n            factor *= i;\n            while (n % i == 0) {\n            \
    \    n /= i;\n                factors.push_back(i);\n            }\n        }\n\
    \        i++;\n    }\n    factors.push_back(factor);\n    return factors;", " \
    \   std::vector<long> factors;\n    long i = 2;\n    while (i <= sqrt(n)) {\n\
    \        while (n % i == 0) {\n            factors.push_back(i);\n           \
    \ n /= i;\n        }\n        i++;\n    }\n    if (n > 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    long i = 2;\n\
    \    while (i <= sqrt(n)) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    if (n != 1) {\n    \
    \    factors.push_back(n);\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long p = 1;\n    while (p < n) {\n        if (n % p == 0) {\n\
    \            factors.push_back(p);\n            while (n % p == 0) {\n       \
    \         n /= p;\n                factors.push_back(p);\n            }\n    \
    \    }\n        p++;\n    }\n    return factors;", "    std::vector<long> factors;\n\
    \    long i = 2;\n    long factor = 1;\n    while (i <= n / i) {\n        while\
    \ (n % i == 0) {\n            factor *= i;\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    if (n > 1) {\n     \
    \   factors.push_back(n);\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long factor = 1;\n    long count = 0;\n    while (n != 1) {\n\
    \        while (n % factor == 0) {\n            factors.push_back(factor);\n \
    \           n /= factor;\n            count++;\n        }\n        factor++;\n\
    \    }\n    factors.push_back(factor);\n    factors.push_back(count);\n    return\
    \ factors;", "    std::vector<long> factorization;\n    long i = 2;\n    long\
    \ factor = 1;\n    while (i <= n) {\n        while (n % i == 0) {\n          \
    \  factor *= i;\n            factorization.push_back(i);\n            n /= i;\n\
    \        }\n        i++;\n    }\n    if (n != 1) {\n        factorization.push_back(n);\n\
    \    }\n    return factorization;", "    std::vector<long> factors;\n    long\
    \ i = 2;\n    while (i <= sqrt(n)) {\n        while (n % i == 0) {\n         \
    \   factors.push_back(i);\n            n /= i;\n        }\n        i++;\n    }\n\
    \    if (n > 1) {\n        factors.push_back(n);\n    }\n    return factors;",
  "    std::vector<long> factors;\n    long i = 2;\n    while (i <= n) {\n       \
    \ while (n % i == 0) {\n            factors.push_back(i);\n            n /= i;\n\
    \        }\n        i++;\n    }\n    if (n > 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    long i = 2;\n\
    \    while (i < n) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    if (n != 1) {\n    \
    \    factors.push_back(n);\n    }\n    return factors;", "    std::vector<long>\
    \ factorization;\n    long i = 2;\n    long factor = 1;\n    while (i <= n) {\n\
    \        while (n % i == 0) {\n            n /= i;\n            factorization.push_back(i);\n\
    \        }\n        i++;\n    }\n    if (n != 1) {\n        factorization.push_back(n);\n\
    \    }\n    return factorization;", "    std::vector<long> factors;\n    long\
    \ i = 2;\n    while (i < n) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    if (n > 1) {\n     \
    \   factors.push_back(n);\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long i = 2;\n    while (i < n) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n        i++;\n\
    \    }\n    if (n != 1) {\n        factors.push_back(n);\n    }\n    return factors;",
  "    std::vector<long> factors;\n    long p = 1;\n    long q = n;\n    long r =\
    \ 1;\n    long s = 1;\n    while (p != q) {\n        while (r != q) {\n      \
    \      while (r != q) {\n                while (r != q) {\n                  \
    \  while (r != q) {\n                        while (r != q) {\n              \
    \              while (r != q) {\n                                while (r != q)\
    \ {\n                                    while (r != q) {\n                  \
    \                      while (r != q) {\n                                    \
    \        while (r != q) {\n                                                while\
    \ (r != q) {\n                                                    while (r !=\
    \ q) {\n                                                        while (r != q)\
    \ {\n                                                            while (r != q)\
    \ {\n                                                                while (r\
    \ != q) {\n                                                                  \
    \  while (r != q) {\n                                                        \
    \                while (r != q) {\n                                          \
    \                                  while (r != q) {\n                        \
    \                                                        while (r != q) {\n  \
    \                                                                            \
    \      while (r != q) {\n                                                    \
    \                                    while (r != q) {\n                      \
    \                                                                      while (r\
    \ != q) {\n                                                                  \
    \                              while (r != q) {\n                            \
    \                                                                        while\
    \ (r != q) {\n                                                               \
    \                                         while (r != q) {\n                 \
    \                                                                            \
    \               while (r != q) {\n                                           \
    \                                                                     while (r\
    \ != q) {\n                                                                  \
    \                                                  while (r != q) {\n        \
    \                                                                            \
    \                                    while (r != q) {\n                      \
    \                                                                            \
    \                          while (r != q) {\n                                \
    \                                                                            \
    \                    while (r != q) {\n                                      \
    \                                                                            \
    \                  while (r != q) {\n                                        \
    \                                                                            \
    \                    while (r != q) {\n                                      \
    \                                                                            \
    \                          while (r != q) {\n                                \
    \                                                                            \
    \                                    while (r != q) {\n                      \
    \                                                                            \
    \                                                  while (r != q) {\n        \
    \                                                                            \
    \                                                                    while (r\
    \ != q) {\n                                                                  \
    \                                                                            \
    \              while (r != q) {\n                                            \
    \                                                                            \
    \                                        while (r != q) {\n                  \
    \                                                                            \
    \                                                                      while (r\
    \ != q) {\n                                                                  \
    \                                                                            \
    \                          while (r != q) {\n                                \
    \                                                                            \
    \                                                                while (r != q)\
    \ {\n                                                                        \
    \                                                                            \
    \                            while (r != q) {\n                              \
    \                                                                            \
    \                                                                          while\
    \ (r != q) {\n                                                               \
    \                                                                            \
    \                                             while (r != q) {\n             \
    \                                                                            \
    \                                                                            \
    \                       while (r != q) {\n                                   \
    \                                                                            \
    \                                                                            \
    \     while (r != q) {\n                                                     \
    \                                                                            \
    \                                                                   while (r !=\
    \ q) {\n                                                                     \
    \                                                                            \
    \                                                       while (r != q) {\n   \
    \                                                                            \
    \                                                                            \
    \                                                 while (r != q) {\n         \
    \                                                                            \
    \                                                                            \
    \                                   while (r != q) {\n                       \
    \                                                                            \
    \                                                                            \
    \                         while (r != q) {\n                                 \
    \                                                                            \
    \                                                                            \
    \                   while (r != q) {\n                                       \
    \                                                                            \
    \                                                                            \
    \                 while (r != q) {\n                                         \
    \                                                                            \
    \                                                                            \
    \               while (r != q) {\n                                           \
    \                                                                            \
    \                                                                            \
    \             while (r != q) {\n                                             \
    \                                                                            \
    \                                                                            \
    \           while (r != q) {\n                                               \
    \                                                                            \
    \                                                                            \
    \         while (r != q) {\n                                                 \
    \                                                                            \
    \                                                                            \
    \       while (r != ", "    std::vector<long> factors;\n    long i = 2;\n    long\
    \ factor = 1;\n    while (i < n) {\n        if (n % i == 0) {\n            factor\
    \ *= i;\n            while (n % i == 0) {\n                n /= i;\n         \
    \       factors.push_back(i);\n            }\n        }\n        i++;\n    }\n\
    \    factors.push_back(factor);\n    return factors;", "    std::vector<long>\
    \ factors;\n    long i = 2;\n    while (i <= sqrt(n)) {\n        while (n % i\
    \ == 0) {\n            factors.push_back(i);\n            n /= i;\n        }\n\
    \        i++;\n    }\n    if (n != 1) {\n        factors.push_back(n);\n    }\n\
    \    return factors;", "    std::vector<long> factors;\n    long i = 2;\n    long\
    \ factor = 1;\n    while (i < n) {\n        while (n % i == 0) {\n           \
    \ factor *= i;\n            n /= i;\n        }\n        factors.push_back(factor);\n\
    \        factor = 1;\n        i++;\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long p = n;\n    long q = n;\n    long r = n;\n    long s = n;\n\
    \    long t = n;\n    long u = n;\n    long v = n;\n    long w = n;\n    long\
    \ x = n;\n    long y = n;\n    long z = n;\n    long a = n;\n    long b = n;\n\
    \    long c = n;\n    long d = n;\n    long e = n;\n    long f = n;\n    long\
    \ g = n;\n    long h = n;\n    long i = n;\n    long j = n;\n    long k = n;\n\
    \    long l = n;\n    long m = n;\n    long n = n;\n    long o = n;\n    long\
    \ p = n;\n    long q = n;\n    long r = n;\n    long s = n;\n    long t = n;\n\
    \    long u = n;\n    long v = n;\n    long w = n;\n    long x = n;\n    long\
    \ y = n;\n    long z = n;\n    long a = n;\n    long b = n;\n    long c = n;\n\
    \    long d = n;\n    long e = n;\n    long f = n;\n    long g = n;\n    long\
    \ h = n;\n    long i = n;\n    long j = n;\n    long k = n;\n    long l = n;\n\
    \    long m = n;\n    long n = n;\n    long o = n;\n    long p = n;\n    long\
    \ q = n;\n    long r = n;\n    long s = n;\n    long t = n;\n    long u = n;\n\
    \    long v = n;\n    long w = n;\n    long x = n;\n    long y = n;\n    long\
    \ z = n;\n    long a = n;\n    long b = n;\n    long c = n;\n    long d = n;\n\
    \    long e = n;\n    long f = n;\n    long g = n;\n    long h = n;\n    long\
    \ i = n;\n    long j = n;\n    long k = n;\n    long l = n;\n    long m = n;\n\
    \    long n = n;\n    long o = n;\n    long p = n;\n    long q = n;\n    long\
    \ r = n;\n    long s = n;\n    long t = n;\n    long u = n;\n    long v = n;\n\
    \    long w = n;\n    long x = n;\n    long y = n;\n    long z = n;\n    long\
    \ a = n;\n    long b = n;\n    long c = n;\n    long d = n;\n    long e = n;\n\
    \    long f = n;\n    long g = n;\n    long h = n;\n    long i = n;\n    long\
    \ j = n;\n    long k = n;\n    long l = n;\n", "    std::vector<long> factors;\n\
    \    long i = 2;\n    while (i <= sqrt(n)) {\n        while (n % i == 0) {\n \
    \           factors.push_back(i);\n            n /= i;\n        }\n        i++;\n\
    \    }\n    if (n != 1) {\n        factors.push_back(n);\n    }\n    return factors;",
  "    std::vector<long> factors;\n    long i = 2;\n    while (i < n) {\n        while\
    \ (n % i == 0) {\n            factors.push_back(i);\n            n /= i;\n   \
    \     }\n        i++;\n    }\n    if (n != 1)\n        factors.push_back(n);\n\
    \    return factors;", "    std::vector<long> factors;\n    long factor = 1;\n\
    \    long count = 0;\n    while (n != 1) {\n        while (n % factor == 0) {\n\
    \            factors.push_back(factor);\n            n /= factor;\n          \
    \  count++;\n        }\n        factor++;\n    }\n    factors.push_back(factor);\n\
    \    factors.push_back(count);\n    return factors;", "    std::vector<long> factors;\n\
    \    long i = 2;\n    while (i < n) {\n        while (n % i == 0) {\n        \
    \    factors.push_back(i);\n            n /= i;\n        }\n        i++;\n   \
    \ }\n    if (n > 1) {\n        factors.push_back(n);\n    }\n    return factors;",
  "    std::vector<long> factors;\n    long i = 2;\n    while (i <= sqrt(n)) {\n \
    \       while (n % i == 0) {\n            factors.push_back(i);\n            n\
    \ /= i;\n        }\n        i++;\n    }\n    if (n != 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    long p = n;\n\
    \    long q = n;\n    long r = n;\n    long s = n;\n    long t = n;\n    long\
    \ u = n;\n    long v = n;\n    long w = n;\n    long x = n;\n    long y = n;\n\
    \    long z = n;\n    long a = n;\n    long b = n;\n    long c = n;\n    long\
    \ d = n;\n    long e = n;\n    long f = n;\n    long g = n;\n    long h = n;\n\
    \    long i = n;\n    long j = n;\n    long k = n;\n    long l = n;\n    long\
    \ m = n;\n    long n = n;\n    long o = n;\n    long p = n;\n    long q = n;\n\
    \    long r = n;\n    long s = n;\n    long t = n;\n    long u = n;\n    long\
    \ v = n;\n    long w = n;\n    long x = n;\n    long y = n;\n    long z = n;\n\
    \    long a = n;\n    long b = n;\n    long c = n;\n    long d = n;\n    long\
    \ e = n;\n    long f = n;\n    long g = n;\n    long h = n;\n    long i = n;\n\
    \    long j = n;\n    long k = n;\n    long l = n;\n    long m = n;\n    long\
    \ n = n;\n    long o = n;\n    long p = n;\n    long q = n;\n    long r = n;\n\
    \    long s = n;\n    long t = n;\n    long u = n;\n    long v = n;\n    long\
    \ w = n;\n    long x = n;\n    long y = n;\n    long z = n;\n    long a = n;\n\
    \    long b = n;\n    long c = n;\n    long d = n;\n    long e = n;\n    long\
    \ f = n;\n    long g = n;\n    long h = n;\n    long i = n;\n    long j = n;\n\
    \    long k = n;\n    long l = n;\n    long m = n;\n    long n = n;\n    long\
    \ o = n;\n    long p = n;\n    long q = n;\n    long r = n;\n    long s = n;\n\
    \    long t = n;\n    long u = n;\n    long v = n;\n    long w = n;\n    long\
    \ x = n;\n    long y = n;\n    long z = n;\n    long a = n;\n    long b = n;\n\
    \    long c = n;\n    long d = n;\n    long e = n;\n    long f = n;\n    long\
    \ g = n;\n    long h = n;\n    long i = n;\n    long j = n;\n    long k = n;\n\
    \    long l = n;\n", "    std::vector<long> factors;\n    long i = 2;\n    while\
    \ (i <= sqrt(n)) {\n        if (n % i == 0) {\n            factors.push_back(i);\n\
    \            while (n / i != i) {\n                n /= i;\n                factors.push_back(i);\n\
    \            }\n        }\n        i++;\n    }\n    if (n != 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    long i = 2;\n\
    \    while (i <= sqrt(n)) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    if (n != 1) {\n    \
    \    factors.push_back(n);\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long i = 2;\n    while (i < n) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n        i++;\n\
    \    }\n    if (n != 1)\n        factors.push_back(n);\n    return factors;",
  "    std::vector<long> factors;\n    long i = 2;\n    while (i < n) {\n        while\
    \ (n % i == 0) {\n            factors.push_back(i);\n            n /= i;\n   \
    \     }\n        i++;\n    }\n    if (n != 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    long i = 2;\n\
    \    while (i <= sqrt(n)) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    if (n != 1) {\n    \
    \    factors.push_back(n);\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long i = 2;\n    while (i <= sqrt(n)) {\n        while (n % i\
    \ == 0) {\n            factors.push_back(i);\n            n /= i;\n        }\n\
    \        i++;\n    }\n    if (n != 1) {\n        factors.push_back(n);\n    }\n\
    \    return factors;", "    std::vector<long> factors;\n    long i = 2;\n    while\
    \ (i <= sqrt(n)) {\n        if (n % i == 0) {\n            factors.push_back(i);\n\
    \            while (n / i != i) {\n                n /= i;\n                factors.push_back(i);\n\
    \            }\n        }\n        i++;\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long i = 2;\n    while (i <= n) {\n        while (n % i == 0)\
    \ {\n            factors.push_back(i);\n            n /= i;\n        }\n     \
    \   i++;\n    }\n    if (n > 1) {\n        factors.push_back(n);\n    }\n    return\
    \ factors;", "    std::vector<long> factors;\n    long i = 2;\n    long factor\
    \ = 1;\n    while (i < n) {\n        while (n % i == 0) {\n            factor\
    \ *= i;\n            factors.push_back(factor);\n            n /= i;\n       \
    \ }\n        i++;\n    }\n    if (n != 1) {\n        factors.push_back(n);\n \
    \   }\n    return factors;", "    std::vector<long> factors;\n    long i = 2;\n\
    \    while (i < n) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    if (n > 1) {\n     \
    \   factors.push_back(n);\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long p = 1;\n    long q = n;\n    long r = n;\n    long s = 1;\n\
    \    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long\
    \ x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n\
    \    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long\
    \ g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n\
    \    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long\
    \ p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n\
    \    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long\
    \ y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n\
    \    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long\
    \ h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\
    \    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n", "    std::vector<long> factors;\n\
    \    long i = 2;\n    while (i < n) {\n        while (n % i == 0) {\n        \
    \    factors.push_back(i);\n            n /= i;\n        }\n        i++;\n   \
    \ }\n    if (n != 1)\n        factors.push_back(n);\n    return factors;", " \
    \   std::vector<long> factors;\n    long i = 2;\n    while (i <= sqrt(n)) {\n\
    \        while (n % i == 0) {\n            factors.push_back(i);\n           \
    \ n /= i;\n        }\n        i++;\n    }\n    if (n > 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    long p = 1;\n\
    \    long q = n;\n    while (p != q) {\n        while (q % p == 0) {\n       \
    \     factors.push_back(p);\n            q /= p;\n        }\n        p += 1;\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    long i = 2;\n\
    \    long factor = 1;\n    while (i <= n) {\n        while (n % i == 0) {\n  \
    \          factor *= i;\n            n /= i;\n        }\n        factors.push_back(factor);\n\
    \        factor = 1;\n        ++i;\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long i = 2;\n    long p = n;\n    while (p != 1) {\n        while\
    \ (p % i == 0) {\n            factors.push_back(i);\n            p /= i;\n   \
    \     }\n        i++;\n    }\n    return factors;", "    std::vector<long> factors;\n\
    \    long i = 2;\n    while (i <= n) {\n        while (n % i == 0) {\n       \
    \     factors.push_back(i);\n            n /= i;\n        }\n        i++;\n  \
    \  }\n    if (n != 1) {\n        factors.push_back(n);\n    }\n    return factors;",
  "    std::vector<long> factors;\n    long i = 2;\n    while (i <= sqrt(n)) {\n \
    \       while (n % i == 0) {\n            factors.push_back(i);\n            n\
    \ /= i;\n        }\n        i++;\n    }\n    if (n > 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    long p = n;\n\
    \    long q = n;\n    long r = n;\n    long s = n;\n    long t = n;\n    long\
    \ u = n;\n    long v = n;\n    long w = n;\n    long x = n;\n    long y = n;\n\
    \    long z = n;\n    long a = n;\n    long b = n;\n    long c = n;\n    long\
    \ d = n;\n    long e = n;\n    long f = n;\n    long g = n;\n    long h = n;\n\
    \    long i = n;\n    long j = n;\n    long k = n;\n    long l = n;\n    long\
    \ m = n;\n    long n = n;\n    long o = n;\n    long p = n;\n    long q = n;\n\
    \    long r = n;\n    long s = n;\n    long t = n;\n    long u = n;\n    long\
    \ v = n;\n    long w = n;\n    long x = n;\n    long y = n;\n    long z = n;\n\
    \    long a = n;\n    long b = n;\n    long c = n;\n    long d = n;\n    long\
    \ e = n;\n    long f = n;\n    long g = n;\n    long h = n;\n    long i = n;\n\
    \    long j = n;\n    long k = n;\n    long l = n;\n    long m = n;\n    long\
    \ n = n;\n    long o = n;\n    long p = n;\n    long q = n;\n    long r = n;\n\
    \    long s = n;\n    long t = n;\n    long u = n;\n    long v = n;\n    long\
    \ w = n;\n    long x = n;\n    long y = n;\n    long z = n;\n    long a = n;\n\
    \    long b = n;\n    long c = n;\n    long d = n;\n    long e = n;\n    long\
    \ f = n;\n    long g = n;\n    long h = n;\n    long i = n;\n    long j = n;\n\
    \    long k = n;\n    long l = n;\n    long m = n;\n    long n = n;\n    long\
    \ o = n;\n    long p = n;\n    long q = n;\n    long r = n;\n    long s = n;\n\
    \    long t = n;\n    long u = n;\n    long v = n;\n    long w = n;\n    long\
    \ x = n;\n    long y = n;\n    long z = n;\n    long a = n;\n    long b = n;\n\
    \    long c = n;\n    long d = n;\n    long e = n;\n    long f = n;\n    long\
    \ g = n;\n    long h = n;\n    long i = n;\n    long j = n;\n    long k = n;\n\
    \    long l = n;\n", "    std::vector<long> factors;\n    long i = 2;\n    while\
    \ (i <= sqrt(n)) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    if (n != 1) {\n    \
    \    factors.push_back(n);\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long i = 2;\n    long factor = 1;\n    while (i <= n) {\n    \
    \    while (n % i == 0) {\n            n /= i;\n            factor *= i;\n   \
    \         factors.push_back(i);\n        }\n        i++;\n    }\n    if (n !=\
    \ 1) {\n        factors.push_back(n);\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long i = 2;\n    while (i < n) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n        i++;\n\
    \    }\n    if (n != 1)\n        factors.push_back(n);\n    return factors;",
  "    std::vector<long> factors;\n    long i = 2;\n    while (i <= sqrt(n)) {\n \
    \       while (n % i == 0) {\n            factors.push_back(i);\n            n\
    \ /= i;\n        }\n        i++;\n    }\n    if (n > 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    long i = 2;\n\
    \    while (i <= n) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    if (n != 1) {\n    \
    \    factors.push_back(n);\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long i = 2;\n    while (i <= sqrt(n)) {\n        while (n % i\
    \ == 0) {\n            factors.push_back(i);\n            n /= i;\n        }\n\
    \        i++;\n    }\n    if (n > 1) {\n        factors.push_back(n);\n    }\n\
    \    return factors;", "    std::vector<long> factors;\n    long i = 2;\n    while\
    \ (i <= sqrt(n)) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    if (n != 1) {\n    \
    \    factors.push_back(n);\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long i = 2;\n    while (i < n) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n        i++;\n\
    \    }\n    if (n != 1) {\n        factors.push_back(n);\n    }\n    return factors;",
  "    std::vector<long> factors;\n    long i = 2;\n    while (i < n) {\n        while\
    \ (n % i == 0) {\n            factors.push_back(i);\n            n /= i;\n   \
    \     }\n        i++;\n    }\n    if (n != 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    long i = 2;\n\
    \    while (i <= sqrt(n)) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    if (n != 1) {\n    \
    \    factors.push_back(n);\n    }\n    return factors;", "    std::vector<long>\
    \ factorization;\n    long factor = 1;\n    long counter = 1;\n    while (n >\
    \ 1) {\n        while (n % factor == 0) {\n            factorization.push_back(factor);\n\
    \            n /= factor;\n            counter++;\n        }\n        factor++;\n\
    \    }\n    factorization.push_back(factor);\n    return factorization;", "  \
    \  std::vector<long> factors;\n    long factor = 1;\n    long i = 2;\n    while\
    \ (i <= sqrt(n)) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    if (n != 1) {\n    \
    \    factors.push_back(n);\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long i = 2;\n    while (i <= sqrt(n)) {\n        while (n % i\
    \ == 0) {\n            factors.push_back(i);\n            n /= i;\n        }\n\
    \        i++;\n    }\n    if (n != 1) {\n        factors.push_back(n);\n    }\n\
    \    return factors;", "    std::vector<long> factors;\n    long i = 2;\n    while\
    \ (i <= sqrt(n)) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    if (n > 1) {\n     \
    \   factors.push_back(n);\n    }\n    return factors;", "    std::vector<long>\
    \ factorization;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n    long\
    \ s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n\
    \    long x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long\
    \ b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n\
    \    long g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long\
    \ k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n\
    \    long p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long\
    \ t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n\
    \    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long\
    \ c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n\
    \    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long\
    \ l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n\
    \    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long\
    \ u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n\
    \    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long\
    \ d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n\
    \    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long\
    \ m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n\
    \    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long\
    \ v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n\
    \    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long\
    \ e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n\
    \    long j = 1;\n    long k = 1;\n    long l = 1;", "    std::vector<long> factors;\n\
    \    long i = 2;\n    long factor = 1;\n    while (i <= n) {\n        if (n %\
    \ i == 0) {\n            factor *= i;\n            while (n % i == 0) {\n    \
    \            n /= i;\n                factors.push_back(i);\n            }\n \
    \       }\n        i++;\n    }\n    factors.push_back(factor);\n    return factors;",
  "    std::vector<long> factors;\n    long i = 2;\n    while (i <= sqrt(n)) {\n \
    \       while (n % i == 0) {\n            factors.push_back(i);\n            n\
    \ /= i;\n        }\n        i++;\n    }\n    if (n != 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    long p = n;\n\
    \    long q = n;\n    long r = n;\n    long s = 1;\n    long t = 1;\n    long\
    \ u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n\
    \    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long\
    \ d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n\
    \    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long\
    \ m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n\
    \    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long\
    \ v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n\
    \    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long\
    \ e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n\
    \    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n    long\
    \ n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n\
    \    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n    long\
    \ w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n\
    \    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n    long\
    \ f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n\
    \    long k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n    long\
    \ o = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n\
    \    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long\
    \ x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n\
    \    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long\
    \ g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n\
    \    long l = 1;\n", "    std::vector<long> factors;\n    long i = 2;\n    while\
    \ (i < n) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    if (n != 1) {\n    \
    \    factors.push_back(n);\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long p = n;\n    long q = 1;\n    long r = 1;\n    long m = 2;\n\
    \    while (p != 1) {\n        while (p % m == 0) {\n            factors.push_back(m);\n\
    \            p /= m;\n        }\n        q = p;\n        while (p % q == 0) {\n\
    \            factors.push_back(q);\n            p /= q;\n        }\n        r\
    \ = p;\n        while (q % r == 0) {\n            factors.push_back(r);\n    \
    \        q /= r;\n        }\n        m = m + 1;\n    }\n    return factors;",
  "    std::vector<long> factors;\n    long i = 2;\n    while (i <= sqrt(n)) {\n \
    \       while (n % i == 0) {\n            factors.push_back(i);\n            n\
    \ /= i;\n        }\n        i++;\n    }\n    if (n != 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factorization;\n    long\
    \ i = 2;\n    while (i < n) {\n        while (n % i == 0) {\n            factorization.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    if (n != 1) {\n    \
    \    factorization.push_back(n);\n    }\n    return factorization;", "    std::vector<long>\
    \ factors;\n    long i = 2;\n    while (i <= sqrt(n)) {\n        while (n % i\
    \ == 0) {\n            factors.push_back(i);\n            n /= i;\n        }\n\
    \        i++;\n    }\n    if (n > 1) {\n        factors.push_back(n);\n    }\n\
    \    return factors;", "    std::vector<long> factors;\n    long i = 2;\n    while\
    \ (i <= sqrt(n)) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    if (n != 1) {\n    \
    \    factors.push_back(n);\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long factor = 1;\n    long i = 2;\n    while (i <= sqrt(n)) {\n\
    \        while (n % i == 0) {\n            factors.push_back(i);\n           \
    \ n /= i;\n        }\n        i++;\n    }\n    if (n != 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    long p = n;\n\
    \    long q = n;\n    long r = n;\n    long s = n;\n    long t = n;\n    long\
    \ u = n;\n    long v = n;\n    long w = n;\n    long x = n;\n    long y = n;\n\
    \    long z = n;\n    long a = n;\n    long b = n;\n    long c = n;\n    long\
    \ d = n;\n    long e = n;\n    long f = n;\n    long g = n;\n    long h = n;\n\
    \    long i = n;\n    long j = n;\n    long k = n;\n    long l = n;\n    long\
    \ m = n;\n    long n = n;\n    long o = n;\n    long p = n;\n    long q = n;\n\
    \    long r = n;\n    long s = n;\n    long t = n;\n    long u = n;\n    long\
    \ v = n;\n    long w = n;\n    long x = n;\n    long y = n;\n    long z = n;\n\
    \    long a = n;\n    long b = n;\n    long c = n;\n    long d = n;\n    long\
    \ e = n;\n    long f = n;\n    long g = n;\n    long h = n;\n    long i = n;\n\
    \    long j = n;\n    long k = n;\n    long l = n;\n    long m = n;\n    long\
    \ n = n;\n    long o = n;\n    long p = n;\n    long q = n;\n    long r = n;\n\
    \    long s = n;\n    long t = n;\n    long u = n;\n    long v = n;\n    long\
    \ w = n;\n    long x = n;\n    long y = n;\n    long z = n;\n    long a = n;\n\
    \    long b = n;\n    long c = n;\n    long d = n;\n    long e = n;\n    long\
    \ f = n;\n    long g = n;\n    long h = n;\n    long i = n;\n    long j = n;\n\
    \    long k = n;\n    long l = n;\n    long m = n;\n    long n = n;\n    long\
    \ o = n;\n    long p = n;\n    long q = n;\n    long r = n;\n    long s = n;\n\
    \    long t = n;\n    long u = n;\n    long v = n;\n    long w = n;\n    long\
    \ x = n;\n    long y = n;\n    long z = n;\n    long a = n;\n    long b = n;\n\
    \    long c = n;\n    long d = n;\n    long e = n;\n    long f = n;\n    long\
    \ g = n;\n    long h = n;\n    long i = n;\n    long j = n;\n    long k = n;\n\
    \    long l = n;\n", "    std::vector<long> factors;\n    long i = 2;\n    long\
    \ p = 1;\n    while (i <= n / p) {\n        if (n % i == 0) {\n            factors.push_back(i);\n\
    \            n = n / i;\n        }\n        i++;\n    }\n    factors.push_back(n);\n\
    \    return factors;", "    std::vector<long> factors;\n    long factor = 1;\n\
    \    long count = 0;\n    long i = 2;\n    long j = 1;\n    while (i <= n / factor)\
    \ {\n        while (n % i == 0) {\n            factors.push_back(factor);\n  \
    \          n /= i;\n            count++;\n        }\n        i++;\n        j++;\n\
    \    }\n    if (n != 1) {\n        factors.push_back(factor);\n        count++;\n\
    \    }\n    factors.push_back(count);\n    return factors;", "    std::vector<long>\
    \ factors;\n    long i = 2;\n    while (i <= sqrt(n)) {\n        while (n % i\
    \ == 0) {\n            factors.push_back(i);\n            n /= i;\n        }\n\
    \        i++;\n    }\n    if (n != 1) {\n        factors.push_back(n);\n    }\n\
    \    return factors;", "    std::vector<long> factors;\n    long factor = 1;\n\
    \    long count = 0;\n    long i = 2;\n    while (i <= sqrt(n)) {\n        while\
    \ (n % i == 0) {\n            n /= i;\n            count++;\n        }\n     \
    \   factors.push_back(factor);\n        factor *= i;\n        i++;\n    }\n  \
    \  factors.push_back(factor);\n    factors.push_back(count);\n    return factors;",
  "    std::vector<long> factors;\n    long i = 2;\n    while (i <= sqrt(n)) {\n \
    \       while (n % i == 0) {\n            factors.push_back(i);\n            n\
    \ /= i;\n        }\n        i++;\n    }\n    if (n != 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    long p = n;\n\
    \    long q = n;\n    long r = n;\n    long s = n;\n    long t = n;\n    long\
    \ u = n;\n    long v = n;\n    long w = n;\n    long x = n;\n    long y = n;\n\
    \    long z = n;\n    long a = n;\n    long b = n;\n    long c = n;\n    long\
    \ d = n;\n    long e = n;\n    long f = n;\n    long g = n;\n    long h = n;\n\
    \    long i = n;\n    long j = n;\n    long k = n;\n    long l = n;\n    long\
    \ m = n;\n    long n = n;\n    long o = n;\n    long p = n;\n    long q = n;\n\
    \    long r = n;\n    long s = n;\n    long t = n;\n    long u = n;\n    long\
    \ v = n;\n    long w = n;\n    long x = n;\n    long y = n;\n    long z = n;\n\
    \    long a = n;\n    long b = n;\n    long c = n;\n    long d = n;\n    long\
    \ e = n;\n    long f = n;\n    long g = n;\n    long h = n;\n    long i = n;\n\
    \    long j = n;\n    long k = n;\n    long l = n;\n    long m = n;\n    long\
    \ n = n;\n    long o = n;\n    long p = n;\n    long q = n;\n    long r = n;\n\
    \    long s = n;\n    long t = n;\n    long u = n;\n    long v = n;\n    long\
    \ w = n;\n    long x = n;\n    long y = n;\n    long z = n;\n    long a = n;\n\
    \    long b = n;\n    long c = n;\n    long d = n;\n    long e = n;\n    long\
    \ f = n;\n    long g = n;\n    long h = n;\n    long i = n;\n    long j = n;\n\
    \    long k = n;\n    long l = n;\n    long m = n;\n    long n = n;\n    long\
    \ o = n;\n    long p = n;\n    long q = n;\n    long r = n;\n    long s = n;\n\
    \    long t = n;\n    long u = n;\n    long v = n;\n    long w = n;\n    long\
    \ x = n;\n    long y = n;\n    long z = n;\n    long a = n;\n    long b = n;\n\
    \    long c = n;\n    long d = n;\n    long e = n;\n    long f = n;\n    long\
    \ g = n;\n    long h = n;\n    long i = n;\n    long j = n;\n    long k = n;\n\
    \    long l = n;\n", "    std::vector<long> factorization;\n    long i = 2;\n\
    \    while (i <= sqrt(n)) {\n        if (n % i == 0) {\n            factorization.push_back(i);\n\
    \            while (n % i == 0) {\n                n /= i;\n                factorization.push_back(i);\n\
    \            }\n        }\n        i++;\n    }\n    if (n != 1) {\n        factorization.push_back(n);\n\
    \    }\n    return factorization;", "    std::vector<long> factors;\n    long\
    \ i = 2;\n    while (i < n) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    if (n != 1) {\n    \
    \    factors.push_back(n);\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long i = 2;\n    while (i <= sqrt(n)) {\n        while (n % i\
    \ == 0) {\n            factors.push_back(i);\n            n /= i;\n        }\n\
    \        i++;\n    }\n    if (n != 1) {\n        factors.push_back(n);\n    }\n\
    \    return factors;", "    std::vector<long> factors;\n    long i = 2;\n    while\
    \ (i <= sqrt(n)) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    if (n != 1) {\n    \
    \    factors.push_back(n);\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long p = n;\n    long q = n;\n    long r = n;\n    long s = n;\n\
    \    long t = n;\n    long u = n;\n    long v = n;\n    long w = n;\n    long\
    \ x = n;\n    long y = n;\n    long z = n;\n    long a = n;\n    long b = n;\n\
    \    long c = n;\n    long d = n;\n    long e = n;\n    long f = n;\n    long\
    \ g = n;\n    long h = n;\n    long i = n;\n    long j = n;\n    long k = n;\n\
    \    long l = n;\n    long m = n;\n    long n = n;\n    long o = n;\n    long\
    \ p = n;\n    long q = n;\n    long r = n;\n    long s = n;\n    long t = n;\n\
    \    long u = n;\n    long v = n;\n    long w = n;\n    long x = n;\n    long\
    \ y = n;\n    long z = n;\n    long a = n;\n    long b = n;\n    long c = n;\n\
    \    long d = n;\n    long e = n;\n    long f = n;\n    long g = n;\n    long\
    \ h = n;\n    long i = n;\n    long j = n;\n    long k = n;\n    long l = n;\n\
    \    long m = n;\n    long n = n;\n    long o = n;\n    long p = n;\n    long\
    \ q = n;\n    long r = n;\n    long s = n;\n    long t = n;\n    long u = n;\n\
    \    long v = n;\n    long w = n;\n    long x = n;\n    long y = n;\n    long\
    \ z = n;\n    long a = n;\n    long b = n;\n    long c = n;\n    long d = n;\n\
    \    long e = n;\n    long f = n;\n    long g = n;\n    long h = n;\n    long\
    \ i = n;\n    long j = n;\n    long k = n;\n    long l = n;\n    long m = n;\n\
    \    long n = n;\n    long o = n;\n    long p = n;\n    long q = n;\n    long\
    \ r = n;\n    long s = n;\n    long t = n;\n    long u = n;\n    long v = n;\n\
    \    long w = n;\n    long x = n;\n    long y = n;\n    long z = n;\n    long\
    \ a = n;\n    long b = n;\n    long c = n;\n    long d = n;\n    long e = n;\n\
    \    long f = n;\n    long g = n;\n    long h = n;\n    long i = n;\n    long\
    \ j = n;\n    long k = n;\n    long l = n;\n", "    std::vector<long> factors;\n\
    \    long i = 2;\n    long factor = 1;\n    while (i <= n) {\n        while (n\
    \ % i == 0) {\n            factor *= i;\n            factors.push_back(i);\n \
    \           n /= i;\n        }\n        i++;\n    }\n    if (n != 1) {\n     \
    \   factors.push_back(n);\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long i = 2;\n    while (i <= sqrt(n)) {\n        while (n % i\
    \ == 0) {\n            factors.push_back(i);\n            n /= i;\n        }\n\
    \        i++;\n    }\n    if (n > 1) {\n        factors.push_back(n);\n    }\n\
    \    return factors;", "    std::vector<long> factors;\n    long factor = 1;\n\
    \    long count = 1;\n    while (n > 1) {\n        while (n % factor == 0) {\n\
    \            factors.push_back(factor);\n            n /= factor;\n          \
    \  count++;\n        }\n        factor++;\n    }\n    factors.push_back(factor);\n\
    \    factors.push_back(count);\n    return factors;", "    std::vector<long> factors;\n\
    \    long i = 2;\n    long p = n;\n    while (p != 1) {\n        while (p % i\
    \ == 0) {\n            factors.push_back(i);\n            p /= i;\n        }\n\
    \        i++;\n    }\n    return factors;", "    std::vector<long> factors;\n\
    \    long i = 2;\n    long p = n;\n    while (i <= p) {\n        while (n % i\
    \ == 0) {\n            factors.push_back(i);\n            n /= i;\n        }\n\
    \        i++;\n    }\n    if (n > 1) {\n        factors.push_back(n);\n    }\n\
    \    return factors;", "    std::vector<long> factors;\n    long i = 2;\n    while\
    \ (i <= sqrt(n)) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    if (n != 1) {\n    \
    \    factors.push_back(n);\n    }\n    return factors;"]
stop_tokens:
- "\n}"

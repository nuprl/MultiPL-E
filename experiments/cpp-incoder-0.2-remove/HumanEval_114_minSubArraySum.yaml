name: HumanEval_114_minSubArraySum
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an array of integers\
  \ nums, find the minimum sum of any non-empty sub-array\n// of nums.\n// Example\n\
  long minSubArraySum(std::vector<long> nums) {\n"
tests: "}\nint main() {\n    auto candidate = minSubArraySum;\n    assert(candidate((std::vector<long>({(long)2,\
  \ (long)3, (long)4, (long)1, (long)2, (long)4}))) == (1));\n    assert(candidate((std::vector<long>({(long)-1,\
  \ (long)-2, (long)-3}))) == (-6));\n    assert(candidate((std::vector<long>({(long)-1,\
  \ (long)-2, (long)-3, (long)2, (long)-10}))) == (-14));\n    assert(candidate((std::vector<long>({(long)-9999999999999999})))\
  \ == (-9999999999999999));\n    assert(candidate((std::vector<long>({(long)0, (long)10,\
  \ (long)20, (long)1000000}))) == (0));\n    assert(candidate((std::vector<long>({(long)-1,\
  \ (long)-2, (long)-3, (long)10, (long)-5}))) == (-6));\n    assert(candidate((std::vector<long>({(long)100,\
  \ (long)-1, (long)-2, (long)-3, (long)10, (long)-5}))) == (-6));\n    assert(candidate((std::vector<long>({(long)10,\
  \ (long)11, (long)13, (long)8, (long)3, (long)4}))) == (3));\n    assert(candidate((std::vector<long>({(long)100,\
  \ (long)-33, (long)32, (long)-1, (long)0, (long)-2}))) == (-33));\n    assert(candidate((std::vector<long>({(long)-10})))\
  \ == (-10));\n    assert(candidate((std::vector<long>({(long)7}))) == (7));\n  \
  \  assert(candidate((std::vector<long>({(long)1, (long)-1}))) == (-1));\n}\n"
completions: ["    long minSum = nums[0];\n    long sum = 0;\n    for(long i = 0;\
    \ i < nums.size(); i++) {\n        sum += nums[i];\n        if(sum < minSum) {\n\
    \            minSum = sum;\n        }\n    }\n    return minSum;", "    long minSum\
    \ = std::numeric_limits<long>::max();\n    long sum = 0;\n    for (long i = 0;\
    \ i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < minSum)\
    \ {\n            minSum = sum;\n        }\n    }\n    return minSum;", "    long\
    \ ans = nums[0];\n    for (long i = 1; i < nums.size(); i++) {\n        ans =\
    \ min(ans, nums[i] + nums[i - 1]);\n    }\n    return ans;", "    long long ans\
    \ = nums[0];\n    for (long i = 1; i < nums.size(); i++) {\n        ans = min(ans,\
    \ nums[i] + nums[i - 1]);\n    }\n    return ans;", "    // Your code here\n \
    \   long sum = 0;\n    long min = INT_MAX;\n    long max = INT_MIN;\n    for (long\
    \ i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min)\
    \ {\n            min = sum;\n        }\n        if (sum > max) {\n           \
    \ max = sum;\n        }\n    }\n    return max;", "    long sum = 0;\n    long\
    \ minSum = INT_MAX;\n    long minSumIndex = 0;\n    long index = 0;\n    for (auto\
    \ num : nums) {\n        if (sum + num < minSum) {\n            minSum = sum +\
    \ num;\n            minSumIndex = index;\n        }\n        sum += num;\n   \
    \     index++;\n    }\n    return minSum;", "    long min = INT_MAX;\n    long\
    \ sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n\
    \        if (sum < min) {\n            min = sum;\n        }\n    }\n    return\
    \ min;", "    // Your code here\n    long sum = 0;\n    long min = INT_MAX;\n\
    \    long max = INT_MIN;\n    for (long i = 0; i < nums.size(); i++) {\n     \
    \   sum += nums[i];\n        if (sum < min)\n            min = sum;\n        if\
    \ (sum > max)\n            max = sum;\n    }\n    return max;", "    long ans\
    \ = INT_MAX;\n    long sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n\
    \        sum += nums[i];\n        if (sum < ans) {\n            ans = sum;\n \
    \       }\n    }\n    return ans;", "    long minSum = nums[0];\n    long sum\
    \ = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n\
    \        if (sum < minSum) {\n            minSum = sum;\n        }\n    }\n  \
    \  return minSum;", "    // Your code here\n    long sum = 0;\n    long min =\
    \ INT_MAX;\n    long max = INT_MIN;\n    long mid = 0;\n    for (long i = 0; i\
    \ < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min) {\n \
    \           min = sum;\n            mid = i;\n        }\n        if (sum > max)\
    \ {\n            max = sum;\n        }\n    }\n    return sum - min + max;", " \
    \   long ans = nums[0];\n    long long sum = 0;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        sum += nums[i];\n        if (sum < ans)\n            ans = sum;\n\
    \    }\n    return ans;", "    // Your code here\n    long sum = 0;\n    long\
    \ min = INT_MAX;\n    long max = INT_MIN;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        sum += nums[i];\n        if (sum < min) {\n            min =\
    \ sum;\n        }\n        if (sum > max) {\n            max = sum;\n        }\n\
    \    }\n    return max;", "    long minSum = nums[0];\n    for (long i = 0; i\
    \ < nums.size(); i++) {\n        minSum = std::min(minSum + nums[i], nums[i]);\n\
    \    }\n    return minSum;", "    // Your code here\n    long sum = 0;\n    long\
    \ min = INT_MAX;\n    for (long i = 0; i < nums.size(); i++) {\n        sum +=\
    \ nums[i];\n        if (sum < min) {\n            min = sum;\n        }\n    }\n\
    \    return min;", "    // Your code here\n    long sum = 0;\n    long min = INT_MAX;\n\
    \    long max = INT_MIN;\n    for (long i = 0; i < nums.size(); i++) {\n     \
    \   sum += nums[i];\n        if (sum < min)\n            min = sum;\n        if\
    \ (sum > max)\n            max = sum;\n    }\n    return sum;", "    // code here\n\
    \    long minSum = nums[0];\n    long minSumIndex = 0;\n    long sum = 0;\n  \
    \  for (int i = 1; i < nums.size(); i++) {\n        sum += nums[i];\n        if\
    \ (sum < minSum) {\n            minSum = sum;\n            minSumIndex = i;\n\
    \        }\n    }\n    return minSum;", "    long ans = nums[0];\n    long sum\
    \ = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n\
    \        if (sum < ans) {\n            ans = sum;\n        }\n    }\n    return\
    \ ans;", "    // Your code here\n    long sum = 0;\n    long min = INT_MAX;\n\
    \    long max = INT_MIN;\n    for (long i = 0; i < nums.size(); i++) {\n     \
    \   sum += nums[i];\n        if (sum < min) {\n            min = sum;\n      \
    \  }\n        if (sum > max) {\n            max = sum;\n        }\n    }\n   \
    \ return max;", "    // Your code here\n    long sum = 0;\n    long minSum = INT_MAX;\n\
    \    long minSumIndex = 0;\n    long n = nums.size();\n    for(long i = 0; i <\
    \ n; i++) {\n        sum += nums[i];\n        if(sum < minSum) {\n           \
    \ minSum = sum;\n            minSumIndex = i;\n        }\n    }\n    return minSum;",
  "    // Your code here\n    long minSum = INT_MAX;\n    long sum = 0;\n    for(long\
    \ i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if(sum < minSum)\
    \ {\n            minSum = sum;\n        }\n    }\n    return minSum;", "    long\
    \ ans = nums[0];\n    for(long i = 1; i < nums.size(); i++) {\n        ans = min(ans,\
    \ nums[i] + nums[i - 1]);\n    }\n    return ans;", "    long ans = nums[0];\n\
    \    long sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum\
    \ += nums[i];\n        if (sum < ans) {\n            ans = sum;\n        }\n \
    \   }\n    return ans;", "    long min = nums[0];\n    long sum = 0;\n    for\
    \ (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum\
    \ < min) {\n            min = sum;\n        }\n    }\n    return min;", "    //\
    \ code here\n    long min = INT_MAX;\n    long sum = 0;\n    long n = nums.size();\n\
    \    for (long i = 0; i < n; i++) {\n        sum += nums[i];\n        if (sum\
    \ < min) {\n            min = sum;\n        }\n    }\n    return min;", "    long\
    \ minSum = nums[0];\n    long sum = 0;\n    long curSum = 0;\n    for(long i =\
    \ 0; i < nums.size(); i++) {\n        curSum += nums[i];\n        if(curSum <\
    \ minSum) {\n            minSum = curSum;\n        }\n    }\n    return minSum;",
  "    // Your code here\n    long sum = 0;\n    long min = INT_MAX;\n    long max\
    \ = INT_MIN;\n    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n\
    \        if (sum < min) {\n            min = sum;\n        }\n        if (sum\
    \ > max) {\n            max = sum;\n        }\n    }\n    return max;", "    //\
    \ code here\n    long min = INT_MAX;\n    long sum = 0;\n    long start = 0;\n\
    \    long end = nums.size() - 1;\n    while (start < end) {\n        sum += nums[start];\n\
    \        if (sum < min) {\n            min = sum;\n        }\n        sum -= nums[end];\n\
    \        if (sum < min) {\n            min = sum;\n        }\n        ++start;\n\
    \        --end;\n    }\n    return min;", "    // Your code here\n    long sum\
    \ = 0;\n    long minSum = INT_MAX;\n    long minIndex = -1;\n    for (long i =\
    \ 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < minSum)\
    \ {\n            minSum = sum;\n            minIndex = i;\n        }\n    }\n\
    \    return minSum;", "    // Write your code here\n    long sum = 0;\n    long\
    \ min = INT_MAX;\n    long max = INT_MIN;\n    for(long i = 0; i < nums.size();\
    \ i++){\n        sum += nums[i];\n        if(sum < min){\n            min = sum;\n\
    \        }\n        if(sum > max){\n            max = sum;\n        }\n    }\n\
    \    return max;", "    // Your code here\n    long sum = 0;\n    long min = std::numeric_limits<long>::max();\n\
    \    for(long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n      \
    \  if(sum < min) {\n            min = sum;\n        }\n    }\n    return min;",
  "    // code here\n    long ans = INT_MAX;\n    long sum = 0;\n    for(long i =\
    \ 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if(sum < ans) {\n\
    \            ans = sum;\n        }\n    }\n    return ans;", "    // Your code\
    \ here\n    long sum = 0;\n    long min = INT_MAX;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        sum += nums[i];\n        if (sum < min) {\n            min =\
    \ sum;\n        }\n    }\n    return min;", "    long min = INT_MAX;\n    long\
    \ sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n\
    \        if (sum < min) {\n            min = sum;\n        }\n    }\n    return\
    \ min;", "    // Your code here\n    long minSum = nums[0];\n    for (long i =\
    \ 1; i < nums.size(); i++) {\n        minSum = std::min(minSum + nums[i], nums[i]);\n\
    \    }\n    return minSum;", "    // Your code here\n    long sum = 0;\n    long\
    \ minSum = INT_MAX;\n    for (long i = 0; i < nums.size(); i++) {\n        sum\
    \ += nums[i];\n        if (sum < minSum) {\n            minSum = sum;\n      \
    \  }\n    }\n    return minSum;", "    // Your code here\n    long min = INT_MAX;\n\
    \    long sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum\
    \ += nums[i];\n        if (sum < min) {\n            min = sum;\n        }\n \
    \   }\n    return min;", "    // Your code here\n    long min = INT_MAX;\n   \
    \ long sum = 0;\n    long cur = 0;\n    for (long i = 0; i < nums.size(); i++)\
    \ {\n        sum += nums[i];\n        if (sum < min) {\n            min = sum;\n\
    \        }\n        cur += nums[i];\n    }\n    return min;", "    // Write your\
    \ code here\n    long sum = 0;\n    long min = INT_MAX;\n    for(long i = 0; i\
    \ < nums.size(); i++)\n    {\n        sum += nums[i];\n        if(sum < min)\n\
    \        {\n            min = sum;\n        }\n    }\n    return min;", "    long\
    \ sum = 0;\n    long min = INT_MAX;\n    for (long i = 0; i < nums.size(); i++)\
    \ {\n        sum += nums[i];\n        if (sum < min) {\n            min = sum;\n\
    \        }\n    }\n    return min;", "    // Your code here\n    long sum = 0;\n\
    \    long min = INT_MAX;\n    long max = INT_MIN;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        sum += nums[i];\n        if (sum < min) {\n            min =\
    \ sum;\n        }\n        if (sum > max) {\n            max = sum;\n        }\n\
    \    }\n    return max;", "    // Your code here\n    long sum = 0;\n    long\
    \ min = INT_MAX;\n    long max = INT_MIN;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        sum += nums[i];\n        if (sum < min) {\n            min =\
    \ sum;\n        }\n        if (sum > max) {\n            max = sum;\n        }\n\
    \    }\n    return max;", "    // Your code here\n    long min = std::numeric_limits<long>::max();\n\
    \    long sum = 0;\n    for (long i : nums) {\n        sum += i;\n        if (sum\
    \ < min) {\n            min = sum;\n        }\n    }\n    return min;", "    //\
    \ Your code here\n    long minSum = INT_MAX;\n    long sum = 0;\n    for (long\
    \ i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < minSum)\
    \ {\n            minSum = sum;\n        }\n    }\n    return minSum;", "    //\
    \ code here\n    long sum = 0;\n    long minSum = INT_MAX;\n    long minSumIndex\
    \ = 0;\n    for(long i = 0; i < nums.size(); i++) {\n        if(sum + nums[i]\
    \ < minSum) {\n            minSum = sum + nums[i];\n            minSumIndex =\
    \ i;\n        }\n        sum += nums[i];\n    }\n    return minSum;", "    long\
    \ minSum = std::numeric_limits<long>::max();\n    long sum = 0;\n    for (long\
    \ i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < minSum)\
    \ {\n            minSum = sum;\n        }\n    }\n    return minSum;", "    //\
    \ Write your code here\n    long sum = 0;\n    long min = INT_MAX;\n    for(long\
    \ i = 0; i < nums.size(); i++){\n        sum += nums[i];\n        if(sum < min){\n\
    \            min = sum;\n        }\n    }\n    return min;", "    // Your code\
    \ here\n    long sum = 0;\n    long min = INT_MAX;\n    for(long i = 0; i < nums.size();\
    \ i++)\n    {\n        sum += nums[i];\n        if(sum < min)\n        {\n   \
    \         min = sum;\n        }\n    }\n    return min;", "    // Your code here\n\
    \    long sum = 0;\n    long min = INT_MAX;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        sum += nums[i];\n        if (sum < min) {\n            min =\
    \ sum;\n        }\n    }\n    return min;", "    long sum = 0;\n    long min =\
    \ INT_MAX;\n    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n\
    \        if (sum < min) {\n            min = sum;\n        }\n    }\n    return\
    \ min;", "    // Your code here\n    long sum = 0;\n    long min = INT_MAX;\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n     \
    \   if (sum < min) {\n            min = sum;\n        }\n    }\n    return min;",
  "    // Your code here\n    long sum = 0;\n    long min = INT_MAX;\n    for (long\
    \ i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min)\
    \ {\n            min = sum;\n        }\n    }\n    return min;", "    long ans\
    \ = nums[0];\n    for (long i = 1; i < nums.size(); i++) {\n        ans = std::min(ans,\
    \ nums[i] + nums[i - 1]);\n    }\n    return ans;", "    long long ans = nums[0];\n\
    \    for(long long i = 1; i < nums.size(); i++) {\n        ans = min(ans, nums[i]\
    \ + nums[i - 1]);\n    }\n    return ans;", "    // Your code here\n    long sum\
    \ = 0;\n    long min = INT_MAX;\n    long max = INT_MIN;\n    for (long i = 0;\
    \ i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min) {\n\
    \            min = sum;\n        }\n        if (sum > max) {\n            max\
    \ = sum;\n        }\n    }\n    return max;", "    long ans = nums[0];\n    for(long\
    \ i = 1; i < nums.size(); i++) {\n        ans = std::min(ans, nums[i] + nums[i\
    \ - 1]);\n    }\n    return ans;", "    // Your code here\n    long sum = 0;\n\
    \    long min = INT_MAX;\n    for(long i = 0; i < nums.size(); i++)\n    {\n \
    \       sum += nums[i];\n        if(sum < min)\n            min = sum;\n    }\n\
    \    return min;", "    long minSum = nums[0];\n    long minSumIndex = 0;\n  \
    \  for (size_t i = 1; i < nums.size(); i++) {\n        minSum = std::min(minSum\
    \ + nums[i], minSum);\n        minSumIndex = i;\n    }\n    return minSum;", " \
    \   // Your code here\n    long min = INT_MAX;\n    long sum = 0;\n    for (long\
    \ i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min)\
    \ {\n            min = sum;\n        }\n    }\n    return min;", "    long minSum\
    \ = std::numeric_limits<long>::max();\n    for (long i = 0; i < nums.size(); i++)\
    \ {\n        minSum = std::min(minSum, nums[i]);\n    }\n    return minSum;",
  "    // Your code here\n    long sum = 0;\n    long min = INT_MAX;\n    long max\
    \ = INT_MIN;\n    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n\
    \        if (sum < min)\n            min = sum;\n        if (sum > max)\n    \
    \        max = sum;\n    }\n    return max;", "    // Your code here\n    long\
    \ min = std::numeric_limits<long>::max();\n    long sum = 0;\n    for (auto i\
    \ : nums) {\n        sum += i;\n        if (sum < min) {\n            min = sum;\n\
    \        }\n    }\n    return min;", "    long ans = nums[0];\n    for(long i\
    \ = 1; i < nums.size(); i++) {\n        ans = min(ans, nums[i] + nums[i - 1]);\n\
    \    }\n    return ans;", "    // Your code here\n    long sum = 0;\n    long\
    \ min = INT_MAX;\n    for (long i = 0; i < nums.size(); i++) {\n        sum +=\
    \ nums[i];\n        if (sum < min) {\n            min = sum;\n        }\n    }\n\
    \    return min;", "    long min = std::numeric_limits<long>::max();\n    for\
    \ (long i = 0; i < nums.size(); i++) {\n        min = std::min(min, nums[i]);\n\
    \    }\n    return min;", "    long ans = nums[0];\n    for(long i = 1; i < nums.size();\
    \ i++) {\n        ans = std::min(ans, nums[i] + nums[i - 1]);\n    }\n    return\
    \ ans;", "    // Your code here\n    long sum = 0;\n    long min = INT_MAX;\n\
    \    long max = INT_MIN;\n    long sumOfSubArray = 0;\n    long sumOfSubArray2\
    \ = 0;\n    long sumOfSubArray3 = 0;\n    long sumOfSubArray4 = 0;\n    long sumOfSubArray5\
    \ = 0;\n    long sumOfSubArray6 = 0;\n    long sumOfSubArray7 = 0;\n    long sumOfSubArray8\
    \ = 0;\n    long sumOfSubArray9 = 0;\n    long sumOfSubArray10 = 0;\n    long\
    \ sumOfSubArray11 = 0;\n    long sumOfSubArray12 = 0;\n    long sumOfSubArray13\
    \ = 0;\n    long sumOfSubArray14 = 0;\n    long sumOfSubArray15 = 0;\n    long\
    \ sumOfSubArray16 = 0;\n    long sumOfSubArray17 = 0;\n    long sumOfSubArray18\
    \ = 0;\n    long sumOfSubArray19 = 0;\n    long sumOfSubArray20 = 0;\n    long\
    \ sumOfSubArray21 = 0;\n    long sumOfSubArray22 = 0;\n    long sumOfSubArray23\
    \ = 0;\n    long sumOfSubArray24 = 0;\n    long sumOfSubArray25 = 0;\n    long\
    \ sumOfSubArray26 = 0;\n    long sumOfSubArray27 = 0;\n    long sumOfSubArray28\
    \ = 0;\n    long sumOfSubArray29 = 0;\n    long sumOfSubArray30 = 0;\n    long\
    \ sumOfSubArray31 = 0;\n    long sumOfSubArray32 = 0;\n    long sumOfSubArray33\
    \ = 0;\n    long sumOfSubArray34 = 0;\n    long sumOfSubArray35 = 0;\n    long\
    \ sumOfSubArray36 = 0;\n    long sumOfSubArray37 = 0;\n    long sumOfSubArray38\
    \ = 0;\n    long sumOfSubArray39 = 0;\n    long sumOfSubArray40 = 0;\n    long\
    \ sumOfSubArray41 = 0;\n    long sumOfSubArray42 = 0;\n    long sumOfSubArray43\
    \ = 0;\n    long sumOfSubArray44 = 0;\n    long sumOfSubArray45 = 0;\n    long\
    \ sumOfSubArray46 = 0;\n    long sumOfSubArray47 = 0;\n    long sumOfSubArray48\
    \ = 0;\n    long sumOfSubArray49 = 0;\n    long sumOfSubArray50 = 0;\n    long\
    \ sumOfSubArray51 = 0;\n    long sumOfSubArray52 = 0;\n    long sumOfSubArray53\
    \ = 0;\n    long sumOfSubArray54 = 0;\n    long sumOfSubArray55", "    // code\
    \ here\n    long ans = nums[0];\n    long sum = 0;\n    long long sumOfSubArray\
    \ = 0;\n    for(long i = 1; i < nums.size(); i++) {\n        sum += nums[i];\n\
    \        sumOfSubArray += nums[i];\n        if(sumOfSubArray < sum) {\n      \
    \      ans = sum;\n            sum = sumOfSubArray;\n        }\n    }\n    return\
    \ ans;", "    // Your code here\n    long min = INT_MAX;\n    long sum = 0;\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n     \
    \   if (sum < min) {\n            min = sum;\n        }\n    }\n    return min;",
  "    // Your code here\n    long sum = 0;\n    long min = INT_MAX;\n    long max\
    \ = INT_MIN;\n    for(long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n\
    \        if(sum < min) {\n            min = sum;\n        }\n        if(sum >\
    \ max) {\n            max = sum;\n        }\n    }\n    return max;", "    //\
    \ Your code here\n    long min = INT_MAX;\n    long sum = 0;\n    for (long i\
    \ = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min)\
    \ {\n            min = sum;\n        }\n    }\n    return min;", "    long sum\
    \ = 0;\n    long min = std::numeric_limits<long>::max();\n    for (long i = 0;\
    \ i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min) {\n\
    \            min = sum;\n        }\n    }\n    return min;", "    long minSum\
    \ = std::numeric_limits<long>::max();\n    long sum = 0;\n    for (long i = 0;\
    \ i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < minSum)\
    \ {\n            minSum = sum;\n        }\n    }\n    return minSum;", "    long\
    \ long ans = nums[0];\n    for(long i = 1; i < nums.size(); i++) {\n        ans\
    \ = min(ans, nums[i] + nums[i - 1]);\n    }\n    return ans;", "    long ans =\
    \ nums[0];\n    for (long i = 1; i < nums.size(); i++) {\n        ans = std::min(ans,\
    \ nums[i] + nums[i - 1]);\n    }\n    return ans;", "    // Your code here\n \
    \   long min = INT_MAX;\n    long sum = 0;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        sum += nums[i];\n        if (sum < min) {\n            min =\
    \ sum;\n        }\n    }\n    return min;", "    long ans = nums[0];\n    long\
    \ long sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum +=\
    \ nums[i];\n        if (sum < ans) {\n            ans = sum;\n        }\n    }\n\
    \    return ans;", "    // Write your code here\n    long minSum = nums[0];\n\
    \    long sum = 0;\n    for(long i = 0; i < nums.size(); i++) {\n        sum +=\
    \ nums[i];\n        if(sum < minSum) {\n            minSum = sum;\n        }\n\
    \    }\n    return minSum;", "    long min = INT_MAX;\n    long sum = 0;\n   \
    \ long curSum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        curSum\
    \ += nums[i];\n        if (curSum < min) {\n            min = curSum;\n      \
    \  }\n    }\n    return min;", "    long sum = 0;\n    long min = INT_MAX;\n \
    \   long max = INT_MIN;\n    for (auto i : nums) {\n        sum += i;\n      \
    \  if (sum < min) {\n            min = sum;\n        }\n        if (sum > max)\
    \ {\n            max = sum;\n        }\n    }\n    return max;", "    // Write\
    \ your code here\n    long min = INT_MAX;\n    long sum = 0;\n    for (long i\
    \ = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min)\
    \ {\n            min = sum;\n        }\n    }\n    return min;", "    long min\
    \ = INT_MAX;\n    long sum = 0;\n    long n = nums.size();\n    for (long i =\
    \ 0; i < n; i++) {\n        sum += nums[i];\n        if (sum < min) {\n      \
    \      min = sum;\n        }\n    }\n    return min;", "    long min = INT_MAX;\n\
    \    long sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum\
    \ += nums[i];\n        if (sum < min) {\n            min = sum;\n        }\n \
    \   }\n    return min;", "    long min = std::numeric_limits<long>::max();\n \
    \   for (long i = 0; i < nums.size(); i++) {\n        min = std::min(min, nums[i]);\n\
    \    }\n    return min;", "    long minSum = nums[0];\n    long sum = 0;\n   \
    \ for(long i = 1; i < nums.size(); i++) {\n        sum += nums[i];\n        if(sum\
    \ < minSum) {\n            minSum = sum;\n        }\n    }\n    return minSum;",
  "    // code here\n    long sum = 0;\n    long min = INT_MAX;\n    long max = INT_MIN;\n\
    \    for(long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n      \
    \  if(sum < min) {\n            min = sum;\n        }\n        if(sum > max) {\n\
    \            max = sum;\n        }\n    }\n    return max;", "    long minSum\
    \ = nums[0];\n    for (long i = 0; i < nums.size(); i++) {\n        minSum = std::min(minSum\
    \ + nums[i], nums[i]);\n    }\n    return minSum;", "    long ans = nums[0];\n\
    \    long sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum\
    \ += nums[i];\n        if (sum < ans) {\n            ans = sum;\n        }\n \
    \   }\n    return ans;", "    // Your code here\n    long sum = 0;\n    long min\
    \ = INT_MAX;\n    long max = INT_MIN;\n    for (long i = 0; i < nums.size(); i++)\
    \ {\n        sum += nums[i];\n        if (sum < min) {\n            min = sum;\n\
    \        }\n        if (sum > max) {\n            max = sum;\n        }\n    }\n\
    \    return max;", "    // Write your code here\n    long sum = 0;\n    long min\
    \ = INT_MAX;\n    for(long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n\
    \        if(sum < min) {\n            min = sum;\n        }\n    }\n    return\
    \ min;", "    // Your code here\n    long sum = 0;\n    long minSum = INT_MAX;\n\
    \    long minSumIndex = -1;\n    for(long i = 0; i < nums.size(); i++) {\n   \
    \     sum += nums[i];\n        if(sum < minSum) {\n            minSum = sum;\n\
    \            minSumIndex = i;\n        }\n    }\n    return minSum;", "    long\
    \ sum = 0;\n    long min = std::numeric_limits<long>::max();\n    for (long i\
    \ = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min)\
    \ {\n            min = sum;\n        }\n    }\n    return min;", "    // Your\
    \ code here\n    long sum = 0;\n    long min = std::numeric_limits<long>::max();\n\
    \    long max = std::numeric_limits<long>::min();\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        sum += nums[i];\n        if (sum < min) {\n            min =\
    \ sum;\n        }\n        if (sum > max) {\n            max = sum;\n        }\n\
    \    }\n    return sum;", "    // code here\n    long sum = 0;\n    long min =\
    \ INT_MAX;\n    long max = INT_MIN;\n    for (long i = 0; i < nums.size(); i++)\
    \ {\n        sum += nums[i];\n        if (sum < min) {\n            min = sum;\n\
    \        }\n        if (sum > max) {\n            max = sum;\n        }\n    }\n\
    \    return max;", "    // Your code here\n    long min = INT_MAX;\n    long sum\
    \ = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n\
    \        if (sum < min) {\n            min = sum;\n        }\n    }\n    return\
    \ min;", "    // Your code here\n    long sum = 0;\n    long min = INT_MAX;\n\
    \    long max = INT_MIN;\n    for (long i = 0; i < nums.size(); i++) {\n     \
    \   sum += nums[i];\n        if (sum < min) {\n            min = sum;\n      \
    \  }\n        if (sum > max) {\n            max = sum;\n        }\n    }\n   \
    \ return max;", "    // Write your code here\n    long minSum = nums[0];\n   \
    \ long sum = 0;\n    for(long i = 1; i < nums.size(); i++) {\n        sum += nums[i];\n\
    \        if(sum < minSum) {\n            minSum = sum;\n        }\n    }\n   \
    \ return minSum;", "    long ans = nums[0];\n    long sum = 0;\n    for (long\
    \ i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < ans)\n\
    \            ans = sum;\n    }\n    return ans;", "    long long ans = nums[0];\n\
    \    for (long i = 1; i < nums.size(); i++) {\n        ans = std::min(ans, nums[i]\
    \ + nums[i - 1]);\n    }\n    return ans;", "    // Your code here\n    long sum\
    \ = 0;\n    long min = std::numeric_limits<long>::max();\n    long max = std::numeric_limits<long>::min();\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n     \
    \   if (sum < min) {\n            min = sum;\n        }\n        if (sum > max)\
    \ {\n            max = sum;\n        }\n    }\n    return max;", "    long minSum\
    \ = nums[0];\n    long sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n\
    \        sum += nums[i];\n        if (sum < minSum) {\n            minSum = sum;\n\
    \        }\n    }\n    return minSum;", "    long minSum = nums[0];\n    for (long\
    \ i = 1; i < nums.size(); i++) {\n        minSum = std::min(minSum + nums[i],\
    \ nums[i]);\n    }\n    return minSum;", "    long minSum = std::numeric_limits<long>::max();\n\
    \    long sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum\
    \ += nums[i];\n        if (sum < minSum) {\n            minSum = sum;\n      \
    \  }\n    }\n    return minSum;", "    // Your code here\n    long sum = 0;\n\
    \    long min = INT_MAX;\n    long max = INT_MIN;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        sum += nums[i];\n        if (sum < min) {\n            min =\
    \ sum;\n        }\n        if (sum > max) {\n            max = sum;\n        }\n\
    \    }\n    return max;", "    // Write your code here\n    long sum = 0;\n  \
    \  long min = INT_MAX;\n    long max = INT_MIN;\n    for(long i = 0; i < nums.size();\
    \ i++){\n        sum += nums[i];\n        if(sum < min){\n            min = sum;\n\
    \        }\n        if(sum > max){\n            max = sum;\n        }\n    }\n\
    \    return max;", "    // Your code here\n    long sum = 0;\n    long min = INT_MAX;\n\
    \    long max = INT_MIN;\n    for(long i = 0; i < nums.size(); i++) {\n      \
    \  sum += nums[i];\n        if(sum < min) {\n            min = sum;\n        }\n\
    \        if(sum > max) {\n            max = sum;\n        }\n    }\n    return\
    \ max;", "    // Your code here\n    long sum = 0;\n    long min = INT_MAX;\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n     \
    \   if (sum < min) {\n            min = sum;\n        }\n    }\n    return min;",
  "    long ans = nums[0];\n    for (long i = 1; i < nums.size(); i++) {\n       \
    \ ans = min(ans, nums[i] + minSubArraySum(nums.begin() + 1, nums.begin() + i +\
    \ 1));\n    }\n    return ans;", "    long ans = nums[0];\n    long sum = 0;\n\
    \    for(long i = 1; i < nums.size(); i++) {\n        sum += nums[i];\n      \
    \  if(sum < ans) {\n            ans = sum;\n        }\n    }\n    return ans;",
  "    // Your code here\n    long sum = 0;\n    long min = INT_MAX;\n    for (long\
    \ i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min)\
    \ {\n            min = sum;\n        }\n    }\n    return min;", "    // Your\
    \ code here\n    long sum = 0;\n    long min = INT_MAX;\n    for(long i = 0; i\
    \ < nums.size(); i++) {\n        sum += nums[i];\n        if(sum < min) {\n  \
    \          min = sum;\n        }\n    }\n    return min;", "    // code here\n\
    \    long sum = 0;\n    long min = INT_MAX;\n    long max = INT_MIN;\n    for\
    \ (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum\
    \ < min) {\n            min = sum;\n        }\n        if (sum > max) {\n    \
    \        max = sum;\n        }\n    }\n    return max;", "    long ans = nums[0];\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        ans = std::min(ans, nums[i]\
    \ + minSubArraySum(nums.substr(i + 1, nums.size() - i)));\n    }\n    return ans;",
  "    long minSum = nums[0];\n    long sum = 0;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        sum += nums[i];\n        if (sum < minSum) {\n            minSum\
    \ = sum;\n        }\n    }\n    return minSum;", "    // Your code here\n    long\
    \ sum = 0;\n    long min = INT_MAX;\n    for (long i = 0; i < nums.size(); i++)\
    \ {\n        sum += nums[i];\n        if (sum < min) {\n            min = sum;\n\
    \        }\n    }\n    return min;", "    long ans = nums[0];\n    for (long i\
    \ = 1; i < nums.size(); i++) {\n        ans = min(ans, nums[i] + nums[i - 1]);\n\
    \    }\n    return ans;", "    // Your code here\n    long min = INT_MAX;\n  \
    \  long sum = 0;\n    for(long i = 0; i < nums.size(); i++){\n        sum += nums[i];\n\
    \        if(sum < min){\n            min = sum;\n        }\n    }\n    return\
    \ min;", "    long min = INT_MAX;\n    long sum = 0;\n    for (long i = 0; i <\
    \ nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min) {\n   \
    \         min = sum;\n        }\n    }\n    return min;", "    long ans = nums[0];\n\
    \    long sum = 0;\n    for (int i = 1; i < nums.size(); i++) {\n        sum +=\
    \ nums[i];\n        if (sum < ans) {\n            ans = sum;\n        }\n    }\n\
    \    return ans;", "    long ans = nums[0];\n    for (long i = 1; i < nums.size();\
    \ i++) {\n        ans = std::min(ans, nums[i] + nums[i - 1]);\n    }\n    return\
    \ ans;", "    long minSum = nums[0];\n    long sum = 0;\n    for(long i = 0; i\
    \ < nums.size(); i++) {\n        sum += nums[i];\n        if(sum < minSum) {\n\
    \            minSum = sum;\n        }\n    }\n    return minSum;", "    // Your\
    \ code here\n    long sum = 0;\n    long min = INT_MAX;\n    for (long i = 0;\
    \ i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min) {\n\
    \            min = sum;\n        }\n    }\n    return min;", "    // Your code\
    \ here\n    long sum = 0;\n    long min = std::numeric_limits<long>::max();\n\
    \    long max = std::numeric_limits<long>::min();\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        sum += nums[i];\n        if (sum < min) {\n            min =\
    \ sum;\n        }\n        if (sum > max) {\n            max = sum;\n        }\n\
    \    }\n    return sum;", "    long long ans = nums[0];\n    for (long i = 1;\
    \ i < nums.size(); i++) {\n        ans = std::min(ans, nums[i] + nums[i - 1]);\n\
    \    }\n    return ans;", "    // code here\n    long sum = 0;\n    long min =\
    \ INT_MAX;\n    long max = INT_MIN;\n    long sumOfSubArray = 0;\n    for (long\
    \ i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min)\
    \ {\n            min = sum;\n        }\n        if (sum > max) {\n           \
    \ max = sum;\n        }\n    }\n    for (long i = 0; i < nums.size(); i++) {\n\
    \        sumOfSubArray += nums[i];\n        if (sumOfSubArray < min) {\n     \
    \       min = sumOfSubArray;\n        }\n        if (sumOfSubArray > max) {\n\
    \            max = sumOfSubArray;\n        }\n    }\n    return min;", "    long\
    \ minSum = nums[0];\n    long sum = 0;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        sum += nums[i];\n        if (sum < minSum) {\n            minSum\
    \ = sum;\n        }\n    }\n    return minSum;", "    long sum = 0;\n    long\
    \ min = INT_MAX;\n    for (long i = 0; i < nums.size(); i++) {\n        sum +=\
    \ nums[i];\n        if (sum < min) {\n            min = sum;\n        }\n    }\n\
    \    return min;", "    // Your code here\n    long sum = 0;\n    long min = INT_MAX;\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n     \
    \   if (sum < min) {\n            min = sum;\n        }\n    }\n    return min;",
  "    // Your code here\n    long sum = 0;\n    long min = INT_MAX;\n    long max\
    \ = INT_MIN;\n    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n\
    \        if (sum < min) {\n            min = sum;\n        }\n        if (sum\
    \ > max) {\n            max = sum;\n        }\n    }\n    return max;", "    long\
    \ sum = 0;\n    long min = INT_MAX;\n    for (long i = 0; i < nums.size(); i++)\
    \ {\n        sum += nums[i];\n        if (sum < min) {\n            min = sum;\n\
    \        }\n    }\n    return min;", "    long ans = nums[0];\n    long long sum\
    \ = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n\
    \        if (sum < ans)\n            ans = sum;\n    }\n    return ans;", "  \
    \  // Your code here\n    long sum = 0;\n    long min = INT_MAX;\n    long max\
    \ = INT_MIN;\n    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n\
    \        if (sum < min) {\n            min = sum;\n        }\n        if (sum\
    \ > max) {\n            max = sum;\n        }\n    }\n    return max;", "    //\
    \ Your code here\n    long minSum = nums[0];\n    long sum = 0;\n    for(int i\
    \ = 1; i < nums.size(); i++){\n        sum += nums[i];\n        if(sum < minSum){\n\
    \            minSum = sum;\n        }\n    }\n    return minSum;", "    // Your\
    \ code here\n    long sum = 0;\n    long min = INT_MAX;\n    long max = INT_MIN;\n\
    \    for(long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n      \
    \  if(sum < min) {\n            min = sum;\n        }\n        if(sum > max) {\n\
    \            max = sum;\n        }\n    }\n    return max;", "    long ans = nums[0];\n\
    \    for (long i = 1; i < nums.size(); i++) {\n        ans = std::min(ans, nums[i]\
    \ + nums[i - 1]);\n    }\n    return ans;", "    // Your code here\n    long minSum\
    \ = nums[0];\n    long sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n\
    \        sum += nums[i];\n        if (sum < minSum) {\n            minSum = sum;\n\
    \        }\n    }\n    return minSum;", "    long min = INT_MAX;\n    long sum\
    \ = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long n = nums.size();\n\
    \    while (i < n) {\n        sum += nums[i];\n        i++;\n    }\n    while\
    \ (j < n) {\n        sum += nums[j];\n        j++;\n    }\n    while (k < n) {\n\
    \        sum += nums[k];\n        k++;\n    }\n    while (i < n) {\n        while\
    \ (j < n) {\n            sum += nums[j];\n            j++;\n        }\n      \
    \  while (j < n) {\n            sum += nums[k];\n            k++;\n        }\n\
    \        while (j < n) {\n            sum += nums[i];\n            i++;\n    \
    \    }\n    }\n    if (sum < min) {\n        min = sum;\n    }\n    return min;",
  "    long sum = 0;\n    long minSum = std::numeric_limits<long>::max();\n    for\
    \ (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum\
    \ < minSum) {\n            minSum = sum;\n        }\n    }\n    return minSum;",
  "    // Your code here\n    long sum = 0;\n    long min = INT_MAX;\n    for (long\
    \ i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min)\
    \ {\n            min = sum;\n        }\n    }\n    return min;", "    // Your\
    \ code here\n    long sum = 0;\n    long min = INT_MAX;\n    long max = INT_MIN;\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n     \
    \   if (sum < min) {\n            min = sum;\n        }\n        if (sum > max)\
    \ {\n            max = sum;\n        }\n    }\n    return max;", "    // Your\
    \ code here\n    long sum = 0;\n    long min = INT_MAX;\n    long max = INT_MIN;\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n     \
    \   if (sum < min)\n            min = sum;\n        if (sum > max)\n         \
    \   max = sum;\n    }\n    return max;", "    // Write your code here\n    long\
    \ sum = 0;\n    long min = INT_MAX;\n    long max = INT_MIN;\n    for(long i =\
    \ 0; i < nums.size(); i++){\n        sum += nums[i];\n        if(sum < min){\n\
    \            min = sum;\n        }\n        if(sum > max){\n            max =\
    \ sum;\n        }\n    }\n    return max;", "    // Your code here\n    long sum\
    \ = 0;\n    long min = INT_MAX;\n    long max = INT_MIN;\n    for(long i = 0;\
    \ i < nums.size(); i++){\n        sum += nums[i];\n        if(sum < min){\n  \
    \          min = sum;\n        }\n        if(sum > max){\n            max = sum;\n\
    \        }\n    }\n    return max;", "    // Your code here\n    long sum = 0;\n\
    \    long min = INT_MAX;\n    long max = INT_MIN;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        sum += nums[i];\n        if (sum < min) {\n            min =\
    \ sum;\n        }\n        if (sum > max) {\n            max = sum;\n        }\n\
    \    }\n    return max;", "    long ans = nums[0];\n    for (long i = 1; i < nums.size();\
    \ i++) {\n        ans = min(ans, nums[i] + nums[i - 1]);\n    }\n    return ans;",
  "    // code here\n    long minSum = nums[0];\n    long sum = 0;\n    long sumOfSubArray\
    \ = 0;\n    for(int i = 1; i < nums.size(); i++){\n        sum = sum + nums[i];\n\
    \        sumOfSubArray = sumOfSubArray + nums[i];\n        if(sumOfSubArray <\
    \ minSum){\n            minSum = sumOfSubArray;\n        }\n    }\n    return\
    \ minSum;", "    long ans = nums[0];\n    for (long i = 1; i < nums.size(); i++)\
    \ {\n        ans = std::min(ans, nums[i] + nums[i - 1]);\n    }\n    return ans;",
  "    long ans = nums[0];\n    for(long i = 1; i < nums.size(); i++) {\n        ans\
    \ = min(ans, nums[i] + nums[i - 1]);\n    }\n    return ans;", "    // Your code\
    \ here\n    long sum = 0;\n    long min = INT_MAX;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        sum += nums[i];\n        if (sum < min) {\n            min =\
    \ sum;\n        }\n    }\n    return min;", "    long minSum = std::numeric_limits<long>::max();\n\
    \    long sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum\
    \ += nums[i];\n        if (sum < minSum) {\n            minSum = sum;\n      \
    \  }\n    }\n    return minSum;", "    long ans = nums[0];\n    long sum = 0;\n\
    \    for(long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n      \
    \  if(sum < ans) {\n            ans = sum;\n        }\n    }\n    return ans;",
  "    long ans = nums[0];\n    for (long i = 1; i < nums.size(); i++) {\n       \
    \ ans = std::min(ans, nums[i] + nums[i - 1]);\n    }\n    return ans;", "    //\
    \ Your code here\n    long sum = 0;\n    long min = INT_MAX;\n    long max = INT_MIN;\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n     \
    \   if (sum < min) {\n            min = sum;\n        }\n        if (sum > max)\
    \ {\n            max = sum;\n        }\n    }\n    return max;", "    // Your\
    \ code here\n    long min = INT_MAX;\n    long sum = 0;\n    for (long i = 0;\
    \ i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min) {\n\
    \            min = sum;\n        }\n    }\n    return min;", "    // code here\n\
    \    long sum = 0;\n    long min = INT_MAX;\n    long max = INT_MIN;\n    for\
    \ (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum\
    \ < min) {\n            min = sum;\n        }\n        if (sum > max) {\n    \
    \        max = sum;\n        }\n    }\n    return max;", "    // Your code here\n\
    \    long sum = 0;\n    long min = INT_MAX;\n    long max = INT_MIN;\n    for\
    \ (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum\
    \ < min) {\n            min = sum;\n        }\n        if (sum > max) {\n    \
    \        max = sum;\n        }\n    }\n    return max;", "    long minSum = nums[0];\n\
    \    long sum = 0;\n    for (int i = 1; i < nums.size(); i++) {\n        sum +=\
    \ nums[i];\n        if (sum < minSum) {\n            minSum = sum;\n        }\n\
    \    }\n    return minSum;", "    // code here\n    long sum = 0;\n    long min\
    \ = INT_MAX;\n    long max = INT_MIN;\n    for (long i = 0; i < nums.size(); i++)\
    \ {\n        sum += nums[i];\n        if (sum < min)\n            min = sum;\n\
    \        if (sum > max)\n            max = sum;\n    }\n    return max;", "  \
    \  long minSum = nums[0];\n    long minSumIndex = 0;\n    long sum = 0;\n    for\
    \ (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum\
    \ < minSum) {\n            minSum = sum;\n            minSumIndex = i;\n     \
    \   }\n    }\n    return minSum;", "    long ans = nums[0];\n    for (long i =\
    \ 0; i < nums.size(); i++) {\n        ans = std::min(ans, nums[i] + minSubArraySum(nums.substr(i\
    \ + 1, nums.size() - i)));\n    }\n    return ans;", "    long min = INT_MAX;\n\
    \    long sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum\
    \ += nums[i];\n        if (sum < min) {\n            min = sum;\n        }\n \
    \   }\n    return min;", "    // Your code here\n    long sum = 0;\n    long min\
    \ = INT_MAX;\n    long max = INT_MIN;\n    for (long i = 0; i < nums.size(); i++)\
    \ {\n        sum += nums[i];\n        if (sum < min) {\n            min = sum;\n\
    \        }\n        if (sum > max) {\n            max = sum;\n        }\n    }\n\
    \    return max;", "    // Write your code here\n    long sum = 0;\n    long min\
    \ = INT_MAX;\n    long max = INT_MIN;\n    for(long i = 0; i < nums.size(); i++){\n\
    \        sum += nums[i];\n        if(sum < min){\n            min = sum;\n   \
    \     }\n        if(sum > max){\n            max = sum;\n        }\n    }\n  \
    \  return max;", "    // Write your code here\n    long sum = 0;\n    long min\
    \ = INT_MAX;\n    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n\
    \        if (sum < min) {\n            min = sum;\n        }\n    }\n    return\
    \ min;", "    // Your code here\n    long min = INT_MAX;\n    long sum = 0;\n\
    \    long i = 0;\n    long j = 0;\n    long sum2 = 0;\n    long sum3 = 0;\n  \
    \  long sum4 = 0;\n    long sum5 = 0;\n    long sum6 = 0;\n    long sum7 = 0;\n\
    \    long sum8 = 0;\n    long sum9 = 0;\n    long sum10 = 0;\n    long sum11 =\
    \ 0;\n    long sum12 = 0;\n    long sum13 = 0;\n    long sum14 = 0;\n    long\
    \ sum15 = 0;\n    long sum16 = 0;\n    long sum17 = 0;\n    long sum18 = 0;\n\
    \    long sum19 = 0;\n    long sum20 = 0;\n    long sum21 = 0;\n    long sum22\
    \ = 0;\n    long sum23 = 0;\n    long sum24 = 0;\n    long sum25 = 0;\n    long\
    \ sum26 = 0;\n    long sum27 = 0;\n    long sum28 = 0;\n    long sum29 = 0;\n\
    \    long sum30 = 0;\n    long sum31 = 0;\n    long sum32 = 0;\n    long sum33\
    \ = 0;\n    long sum34 = 0;\n    long sum35 = 0;\n    long sum36 = 0;\n    long\
    \ sum37 = 0;\n    long sum38 = 0;\n    long sum39 = 0;\n    long sum40 = 0;\n\
    \    long sum41 = 0;\n    long sum42 = 0;\n    long sum43 = 0;\n    long sum44\
    \ = 0;\n    long sum45 = 0;\n    long sum46 = 0;\n    long sum47 = 0;\n    long\
    \ sum48 = 0;\n    long sum49 = 0;\n    long sum50 = 0;\n    long sum51 = 0;\n\
    \    long sum52 = 0;\n    long sum53 = 0;\n    long sum54 = 0;\n    long sum55\
    \ = 0;\n    long sum56 = 0;\n    long sum57 = 0;\n    long sum58 = 0;\n    long\
    \ sum59 = 0;\n    long sum60 = 0;\n    long sum61 = 0;\n    long sum62 = 0;\n\
    \    long sum63 = 0;\n    long sum64 = 0;\n    long sum65 = 0;\n    long sum66\
    \ = 0;\n    long sum67 = 0;\n    long sum68 = 0;\n    long sum69 = 0;\n    long\
    \ sum70 = 0;\n    long sum71 = 0;\n    long sum72 = 0;\n    long sum73 = 0;\n\
    \    long sum74 = 0;\n    long sum75 = 0;\n    long sum76 = 0;\n    long sum77\
    \ = 0;\n    long sum78 = 0;\n    long sum79 = 0;\n    long sum80 = 0;\n    long\
    \ sum81 = 0;\n    long sum82 = 0;\n    long sum83", "    // Your code here\n \
    \   long sum = 0;\n    long min = INT_MAX;\n    long max = INT_MIN;\n    for (long\
    \ i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min)\
    \ {\n            min = sum;\n        }\n        if (sum > max) {\n           \
    \ max = sum;\n        }\n    }\n    return max;", "    long minSum = INT_MAX;\n\
    \    long sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum\
    \ += nums[i];\n        if (sum < minSum) {\n            minSum = sum;\n      \
    \  }\n    }\n    return minSum;", "    long ans = INT_MAX;\n    long sum = 0;\n\
    \    long curSum = 0;\n    for (auto i : nums) {\n        sum += i;\n        curSum\
    \ += i;\n        if (curSum < ans) {\n            ans = curSum;\n        }\n \
    \   }\n    return ans;", "    long ans = nums[0];\n    long sum = 0;\n    for\
    \ (long i = 1; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum\
    \ < ans) {\n            ans = sum;\n        }\n    }\n    return ans;", "    //\
    \ Your code here\n    long minSum = nums[0];\n    long sum = 0;\n    for(long\
    \ i = 1; i < nums.size(); i++) {\n        sum += nums[i];\n        if(sum < minSum)\
    \ {\n            minSum = sum;\n        }\n    }\n    return minSum;", "    //\
    \ Your code here\n    long sum = 0;\n    long min = INT_MAX;\n    long max = INT_MIN;\n\
    \    for(long i = 0; i < nums.size(); i++){\n        sum += nums[i];\n       \
    \ if(sum < min){\n            min = sum;\n        }\n        if(sum > max){\n\
    \            max = sum;\n        }\n    }\n    return max;", "    // Your code\
    \ here\n    long sum = 0;\n    long min = INT_MAX;\n    long max = INT_MIN;\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n     \
    \   if (sum < min) {\n            min = sum;\n        }\n        if (sum > max)\
    \ {\n            max = sum;\n        }\n    }\n    return max;", "    // Your\
    \ code here\n    long sum = 0;\n    long min = INT_MAX;\n    for (long i = 0;\
    \ i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min) {\n\
    \            min = sum;\n        }\n    }\n    return min;", "    // Your code\
    \ here\n    long sum = 0;\n    long min = INT_MAX;\n    long max = INT_MIN;\n\
    \    long mid = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum\
    \ += nums[i];\n        if (sum < min) {\n            min = sum;\n            mid\
    \ = i;\n        }\n        if (sum > max) {\n            max = sum;\n        }\n\
    \    }\n    return sum;", "    // Your code here\n    long sum = 0;\n    long\
    \ min = INT_MAX;\n    long max = INT_MIN;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        sum += nums[i];\n        if (sum < min) {\n            min =\
    \ sum;\n        }\n        if (sum > max) {\n            max = sum;\n        }\n\
    \    }\n    return max;", "    // code here\n    long sum = 0;\n    long min =\
    \ std::numeric_limits<long>::max();\n    long max = std::numeric_limits<long>::min();\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n     \
    \   if (sum < min) {\n            min = sum;\n        }\n        if (sum > max)\
    \ {\n            max = sum;\n        }\n    }\n    return max;", "    // code\
    \ here\n    long sum = 0;\n    long min = INT_MAX;\n    long max = INT_MIN;\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n     \
    \   if (sum < min) {\n            min = sum;\n        }\n        if (sum > max)\
    \ {\n            max = sum;\n        }\n    }\n    return max;", "    // Your\
    \ code here\n    long sum = 0;\n    long min = INT_MAX;\n    long max = INT_MIN;\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n     \
    \   if (sum < min) {\n            min = sum;\n        }\n        if (sum > max)\
    \ {\n            max = sum;\n        }\n    }\n    return max;", "    // Your\
    \ code here\n    long min = INT_MAX;\n    long sum = 0;\n    for (long i = 0;\
    \ i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min) {\n\
    \            min = sum;\n        }\n    }\n    return min;", "    // Your code\
    \ here\n    long sum = 0;\n    long min = INT_MAX;\n    long max = INT_MIN;\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n     \
    \   if (sum < min) {\n            min = sum;\n        }\n        if (sum > max)\
    \ {\n            max = sum;\n        }\n    }\n    return max;", "    // Write\
    \ your code here\n    long sum = 0;\n    long min = INT_MAX;\n    long max = INT_MIN;\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n     \
    \   if (sum < min) {\n            min = sum;\n        }\n        if (sum > max)\
    \ {\n            max = sum;\n        }\n    }\n    return max;", "    // Your\
    \ code here\n    long min = INT_MAX;\n    long sum = 0;\n    for(long i = 0; i\
    \ < nums.size(); i++) {\n        sum += nums[i];\n        if(sum < min) {\n  \
    \          min = sum;\n        }\n    }\n    return min;", "    // Your code here\n\
    \    long sum = 0;\n    long min = INT_MAX;\n    long max = INT_MIN;\n    for\
    \ (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum\
    \ < min) {\n            min = sum;\n        }\n        if (sum > max) {\n    \
    \        max = sum;\n        }\n    }\n    return max;", "    long minSum = nums[0];\n\
    \    long sum = 0;\n    for (int i = 1; i < nums.size(); i++) {\n        sum +=\
    \ nums[i];\n        if (sum < minSum) {\n            minSum = sum;\n        }\n\
    \    }\n    return minSum;", "    long minSum = nums[0];\n    long sum = 0;\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n     \
    \   if (sum < minSum) {\n            minSum = sum;\n        }\n    }\n    return\
    \ minSum;", "    // code here\n    long sum = 0;\n    long min = INT_MAX;\n  \
    \  long max = INT_MIN;\n    for (long i = 0; i < nums.size(); i++) {\n       \
    \ sum += nums[i];\n        if (sum < min) {\n            min = sum;\n        }\n\
    \        if (sum > max) {\n            max = sum;\n        }\n    }\n    return\
    \ max;", "    // Your code here\n    long min = INT_MAX;\n    long sum = 0;\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n     \
    \   if (sum < min) {\n            min = sum;\n        }\n    }\n    return min;",
  "    long minSum = INT_MIN;\n    long sum = 0;\n    long n = nums.size();\n    long\
    \ start = 0;\n    long end = n - 1;\n    while (start < end) {\n        sum +=\
    \ nums[start];\n        if (sum < minSum) {\n            minSum = sum;\n     \
    \   }\n        start += 1;\n        end -= 1;\n    }\n    return minSum;", " \
    \   // Your code here\n    long sum = 0;\n    long min = INT_MAX;\n    long max\
    \ = INT_MIN;\n    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n\
    \        if (sum < min) {\n            min = sum;\n        }\n        if (sum\
    \ > max) {\n            max = sum;\n        }\n    }\n    return max;", "    //\
    \ Write your code here\n    long min = INT_MAX;\n    long sum = 0;\n    for(long\
    \ i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if(sum < min)\
    \ {\n            min = sum;\n        }\n    }\n    return min;", "    // code\
    \ here\n    long minSum = nums[0];\n    long sum = 0;\n    for (int i = 0; i <\
    \ nums.size(); i++) {\n        sum += nums[i];\n        if (sum < minSum) {\n\
    \            minSum = sum;\n        }\n    }\n    return minSum;", "    // Your\
    \ code here\n    long sum = 0;\n    long minSum = nums[0];\n    long minIndex\
    \ = -1;\n    for(int i = 1; i < nums.size(); i++) {\n        if(nums[i] <= minSum)\
    \ {\n            minSum = nums[i];\n            minIndex = i;\n        }\n   \
    \ }\n    for(int i = minIndex; i < nums.size(); i++) {\n        sum += nums[i];\n\
    \        if(sum < minSum) {\n            minSum = sum;\n        }\n    }\n   \
    \ return minSum;", "    long sum = 0;\n    for (long i = 0; i < nums.size(); i++)\
    \ {\n        sum += nums[i];\n    }\n    return sum;", "    // Write your code\
    \ here\n    long sum = 0;\n    long min = INT_MAX;\n    long max = INT_MIN;\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n     \
    \   if (sum < min) {\n            min = sum;\n        }\n        if (sum > max)\
    \ {\n            max = sum;\n        }\n    }\n    return max;", "    // Your\
    \ code here\n    long min = INT_MAX;\n    long sum = 0;\n    long sumOfSubArray\
    \ = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n\
    \        if (sum < min) {\n            min = sum;\n        }\n    }\n    for (long\
    \ i = 0; i < nums.size(); i++) {\n        sumOfSubArray += nums[i];\n        if\
    \ (sumOfSubArray < min) {\n            min = sumOfSubArray;\n        }\n    }\n\
    \    return min;", "    // Your code here\n    long sum = 0;\n    long min = INT_MAX;\n\
    \    long max = INT_MIN;\n    long mid = 0;\n    for(long i = 0; i < nums.size();\
    \ i++){\n        sum += nums[i];\n        if(sum < min){\n            min = sum;\n\
    \            mid = i;\n        }\n        if(sum > max){\n            max = sum;\n\
    \            mid = i;\n        }\n    }\n    return mid;", "    // Your code here\n\
    \    long sum = 0;\n    long min = std::numeric_limits<long>::max();\n    long\
    \ max = std::numeric_limits<long>::min();\n    for(long i = 0; i < nums.size();\
    \ i++) {\n        sum += nums[i];\n        if(sum < min) {\n            min =\
    \ sum;\n        }\n        if(sum > max) {\n            max = sum;\n        }\n\
    \    }\n    return max;", "    long min = std::numeric_limits<long>::max();\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        min = std::min(min, nums[i]);\n\
    \    }\n    return min;", "    // Your code here\n    long sum = 0;\n    long\
    \ min = INT_MAX;\n    long max = INT_MIN;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        sum += nums[i];\n        if (sum < min) {\n            min =\
    \ sum;\n        }\n        if (sum > max) {\n            max = sum;\n        }\n\
    \    }\n    return max;", "    // Your code here\n    long sum = 0;\n    long\
    \ min = INT_MAX;\n    long max = INT_MIN;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        sum += nums[i];\n        if (sum < min) {\n            min =\
    \ sum;\n        }\n        if (sum > max) {\n            max = sum;\n        }\n\
    \    }\n    return max;"]
stop_tokens:
- "\n}"

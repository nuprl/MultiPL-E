language: cpp
name: HumanEval_121_solution
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long even = 0;\n    long odd = 0;\n    for(long i = 0; i < lst.size(); i++){\n\
    \        if(lst[i] % 2 == 0){\n            even = even + lst[i];\n        }\n\
    \        else{\n            odd = odd + lst[i];\n        }\n    }\n    sum = even\
    \ + odd;\n    return sum;\n}\nint main() {\n    auto candidate = solution;\n \
    \   assert(candidate((std::vector<long>({(long)5, (long)8, (long)7, (long)1})))\
    \ == (12));\n    assert(candidate((std::vector<long>({(long)3, (long)3, (long)3,\
    \ (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp7tfrea2c: /tmp/tmp7tfrea2c.cpp:26: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    // code here\n  \
    \  long sum = 0;\n    long even = 0;\n    long odd = 0;\n    for(long i : lst){\n\
    \        if(i%2 == 0){\n            even = even + i;\n        }else{\n       \
    \     odd = odd + i;\n        }\n    }\n    sum = even + odd;\n    return sum;\n\
    }\nint main() {\n    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpaj9tvm_z: /tmp/tmpaj9tvm_z.cpp:26: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long evenSum = 0;\n    for(long i = 0; i < lst.size(); i++){\n        if(lst[i]\
    \ % 2 == 0){\n            evenSum += lst[i];\n        }\n        else{\n     \
    \       sum += evenSum;\n            evenSum = 0;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp_e7t60ww: /tmp/tmp_e7t60ww.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long evenPos = 0;\n    for(long i = 0; i < lst.size(); i++) {\n        if(lst[i]\
    \ % 2 == 0) {\n            sum += lst[i];\n            evenPos++;\n        }\n\
    \    }\n    return sum - lst[evenPos - 1];\n}\nint main() {\n    auto candidate\
    \ = solution;\n    assert(candidate((std::vector<long>({(long)5, (long)8, (long)7,\
    \ (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3, (long)3,\
    \ (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp59ingtmr: /tmp/tmp59ingtmr.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    // Write your code\
    \ here.\n    long sum = 0;\n    for(long i = 0; i < lst.size(); i++){\n      \
    \  if(lst[i] % 2 == 0){\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmps4j71ca0: /tmp/tmps4j71ca0.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for(long i = 0; i < lst.size(); i++) {\n        if(lst[i] % 2 == 0) {\n  \
    \          sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp4g3tvfm6: /tmp/tmp4g3tvfm6.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long evenSum = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        if\
    \ (i % 2 == 0) {\n            sum += lst[i];\n            evenSum += lst[i];\n\
    \        }\n    }\n    return evenSum;\n}\nint main() {\n    auto candidate =\
    \ solution;\n    assert(candidate((std::vector<long>({(long)5, (long)8, (long)7,\
    \ (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3, (long)3,\
    \ (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpi98y8g8x: /tmp/tmpi98y8g8x.cpp:24: int main(): Assertion `candidate((std::vector<long>({(long)30,
    (long)13, (long)24, (long)321}))) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for (long i = 0; i < lst.size(); i++) {\n        if (i % 2 == 0) {\n     \
    \       sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n \
    \   auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp2x6chgsg: /tmp/tmp2x6chgsg.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)30,
    (long)13, (long)24, (long)321}))) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long even = 0;\n    long odd = 0;\n    for(long i = 0; i < lst.size(); i++)\
    \ {\n        if(lst[i] % 2 == 0) {\n            even = even + lst[i];\n      \
    \  } else {\n            odd = odd + lst[i];\n        }\n    }\n    sum = even\
    \ + odd;\n    return sum;\n}\nint main() {\n    auto candidate = solution;\n \
    \   assert(candidate((std::vector<long>({(long)5, (long)8, (long)7, (long)1})))\
    \ == (12));\n    assert(candidate((std::vector<long>({(long)3, (long)3, (long)3,\
    \ (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpq0xqm4o5: /tmp/tmpq0xqm4o5.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long evenSum = 0;\n    for(long i = 0; i < lst.size(); i++) {\n        if(i\
    \ % 2 == 0) {\n            sum += lst[i];\n        } else {\n            evenSum\
    \ += lst[i];\n        }\n    }\n    return evenSum + sum;\n}\nint main() {\n \
    \   auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpkb4vg3eb: /tmp/tmpkb4vg3eb.cpp:23: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for(long i = 0; i < lst.size(); i++) {\n        if(lst[i] % 2 == 0) {\n  \
    \          sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp4g3tvfm6: /tmp/tmp4g3tvfm6.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long even = 0;\n    long odd = 0;\n    for(long i = 0; i < lst.size(); i++){\n\
    \        if(lst[i] % 2 == 0){\n            even = even + lst[i];\n        }\n\
    \        else{\n            odd = odd + lst[i];\n        }\n    }\n    sum = even\
    \ + odd;\n    return sum;\n}\nint main() {\n    auto candidate = solution;\n \
    \   assert(candidate((std::vector<long>({(long)5, (long)8, (long)7, (long)1})))\
    \ == (12));\n    assert(candidate((std::vector<long>({(long)3, (long)3, (long)3,\
    \ (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp7tfrea2c: /tmp/tmp7tfrea2c.cpp:26: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for(long i = 0; i < lst.size(); i++) {\n        if(lst[i] % 2 == 0) {\n  \
    \          sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp4g3tvfm6: /tmp/tmp4g3tvfm6.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long evenSum = 0;\n    for(long i = 0; i < lst.size(); i++) {\n        if(lst[i]\
    \ % 2 == 0) {\n            sum += lst[i];\n            evenSum += lst[i];\n  \
    \      }\n    }\n    return sum + evenSum;\n}\nint main() {\n    auto candidate\
    \ = solution;\n    assert(candidate((std::vector<long>({(long)5, (long)8, (long)7,\
    \ (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3, (long)3,\
    \ (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpjq9ktzsm: /tmp/tmpjq9ktzsm.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for(long i = 0; i < lst.size(); i++) {\n        if(lst[i] % 2 == 0) {\n  \
    \          sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp4g3tvfm6: /tmp/tmp4g3tvfm6.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long even = 0;\n    for(long i = 0; i < lst.size(); i++) {\n        if(lst[i]\
    \ % 2 == 0) {\n            even = even + lst[i];\n        }\n        else {\n\
    \            sum = sum + even;\n            even = 0;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpne_9hmxl: /tmp/tmpne_9hmxl.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long even = 0;\n    long odd = 0;\n    for (auto i : lst) {\n        if (i\
    \ % 2 == 0) {\n            even += i;\n        } else {\n            odd += i;\n\
    \        }\n    }\n    sum = even + odd;\n    return sum;\n}\nint main() {\n \
    \   auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpgxclqwl0: /tmp/tmpgxclqwl0.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for (long i = 0; i < lst.size(); i++) {\n        if (i % 2 == 0) {\n     \
    \       sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n \
    \   auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp2x6chgsg: /tmp/tmp2x6chgsg.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)30,
    (long)13, (long)24, (long)321}))) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long evenSum = 0;\n    for(long i = 0; i < lst.size(); i++) {\n        if(lst[i]\
    \ % 2 == 0) {\n            sum += lst[i];\n            evenSum += lst[i];\n  \
    \      }\n    }\n    return evenSum;\n}\nint main() {\n    auto candidate = solution;\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)8, (long)7, (long)1})))\
    \ == (12));\n    assert(candidate((std::vector<long>({(long)3, (long)3, (long)3,\
    \ (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp2x412hke: /tmp/tmp2x412hke.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for (long i = 0; i < lst.size(); i++) {\n        if (i % 2 == 0) {\n     \
    \       sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n \
    \   auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp2x6chgsg: /tmp/tmp2x6chgsg.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)30,
    (long)13, (long)24, (long)321}))) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 == 0) {\n\
    \            sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main()\
    \ {\n    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp_2h7opbh: /tmp/tmp_2h7opbh.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for(auto i : lst)\n    {\n        if(i % 2 == 0)\n            sum += i;\n\
    \    }\n    return sum;\n}\nint main() {\n    auto candidate = solution;\n   \
    \ assert(candidate((std::vector<long>({(long)5, (long)8, (long)7, (long)1})))\
    \ == (12));\n    assert(candidate((std::vector<long>({(long)3, (long)3, (long)3,\
    \ (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpkmnv0r75: /tmp/tmpkmnv0r75.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for (long i = 0; i < lst.size(); i++) {\n        if (i % 2 == 1) {\n     \
    \       sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n \
    \   auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmphgvoswfr: /tmp/tmphgvoswfr.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for (long i = 0; i < lst.size(); i++) {\n        if (i % 2 == 0) {\n     \
    \       sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n \
    \   auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp2x6chgsg: /tmp/tmp2x6chgsg.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)30,
    (long)13, (long)24, (long)321}))) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long oddSum = 0;\n    for(long i = 0; i < lst.size(); i++) {\n        if(i\
    \ % 2 == 1) {\n            sum += lst[i];\n            oddSum += lst[i];\n   \
    \     }\n    }\n    return oddSum;\n}\nint main() {\n    auto candidate = solution;\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)8, (long)7, (long)1})))\
    \ == (12));\n    assert(candidate((std::vector<long>({(long)3, (long)3, (long)3,\
    \ (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpp3802v3g: /tmp/tmpp3802v3g.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long even = 0;\n    long odd = 0;\n    for(long i : lst) {\n        if(i%2\
    \ == 0) {\n            even = even + i;\n        } else {\n            odd = odd\
    \ + i;\n        }\n    }\n    sum = even + odd;\n    return sum;\n}\nint main()\
    \ {\n    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp1x4z49sc: /tmp/tmp1x4z49sc.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long evenPos = 0;\n    long oddPos = 0;\n    for (auto i : lst) {\n      \
    \  if (i % 2 == 0) {\n            evenPos += i;\n        } else {\n          \
    \  oddPos += i;\n        }\n    }\n    sum = evenPos + oddPos;\n    return sum;\n\
    }\nint main() {\n    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpe96siz28: /tmp/tmpe96siz28.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long evenPos = 0;\n    for(long i = 0; i < lst.size(); i++) {\n        if(lst[i]\
    \ % 2 == 0) {\n            sum += lst[i];\n            evenPos++;\n        }\n\
    \    }\n    return sum - lst[evenPos - 1];\n}\nint main() {\n    auto candidate\
    \ = solution;\n    assert(candidate((std::vector<long>({(long)5, (long)8, (long)7,\
    \ (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3, (long)3,\
    \ (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp59ingtmr: /tmp/tmp59ingtmr.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    // code here\n  \
    \  long sum = 0;\n    long temp = 0;\n    for (long i = 0; i < lst.size(); i++)\
    \ {\n        if (i % 2 == 1) {\n            temp = lst[i];\n            sum +=\
    \ temp;\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = solution;\n    assert(candidate((std::vector<long>({(long)5, (long)8, (long)7,\
    \ (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3, (long)3,\
    \ (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp0w1nx01g: /tmp/tmp0w1nx01g.cpp:23: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for (long i = 0; i < lst.size(); i++) {\n        if (i % 2 == 0) {\n     \
    \       sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n \
    \   auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp2x6chgsg: /tmp/tmp2x6chgsg.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)30,
    (long)13, (long)24, (long)321}))) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    // code here\n  \
    \  long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(lst[i]\
    \ % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmppqt01zzh: /tmp/tmppqt01zzh.cpp:23: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for(long i = 0; i < lst.size(); i++) {\n        if(lst[i] % 2 != 0 && lst[i]\
    \ % 3 != 0) {\n            sum += lst[i];\n        }\n    }\n    return sum;\n\
    }\nint main() {\n    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp0famwwbn: /tmp/tmp0famwwbn.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for(long i = 0; i < lst.size(); i++) {\n        if(lst[i] % 2 != 0) {\n  \
    \          sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpiw4dwz0h: /tmp/tmpiw4dwz0h.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for (long i = 0; i < lst.size(); i++) {\n        if (i % 2 == 0) {\n     \
    \       sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n \
    \   auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp2x6chgsg: /tmp/tmp2x6chgsg.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)30,
    (long)13, (long)24, (long)321}))) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    // Write your code\
    \ here.\n    long sum = 0;\n    long evenPos = 0;\n    for(long i = 0; i < lst.size();\
    \ i++){\n        if(lst[i] % 2 == 0){\n            sum += lst[i];\n          \
    \  evenPos++;\n        }\n    }\n    return sum - evenPos * 2;\n}\nint main()\
    \ {\n    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpte7u4o1y: /tmp/tmpte7u4o1y.cpp:23: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for(long i = 0; i < lst.size(); i++) {\n        if(lst[i] % 2 == 0) {\n  \
    \          sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp4g3tvfm6: /tmp/tmp4g3tvfm6.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    // code here\n  \
    \  long sum = 0;\n    long even = 0;\n    long odd = 0;\n    for(long i = 0; i\
    \ < lst.size(); i++) {\n        if(lst[i] % 2 == 0) {\n            even = even\
    \ + lst[i];\n        } else {\n            odd = odd + lst[i];\n        }\n  \
    \  }\n    sum = even + odd;\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = solution;\n    assert(candidate((std::vector<long>({(long)5, (long)8, (long)7,\
    \ (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3, (long)3,\
    \ (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp0o8a646x: /tmp/tmp0o8a646x.cpp:26: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for(long i = 0; i < lst.size(); i++) {\n        if(lst[i] % 2 == 0) {\n  \
    \          sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp4g3tvfm6: /tmp/tmp4g3tvfm6.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    // code here\n  \
    \  long sum = 0;\n    long evenPos = 0;\n    for(long i = 0; i < lst.size(); i++){\n\
    \        if(lst[i] % 2 == 0){\n            sum += lst[i];\n            evenPos++;\n\
    \        }\n    }\n    return sum - lst[evenPos] * lst[evenPos];\n}\nint main()\
    \ {\n    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpz97vqgag: /tmp/tmpz97vqgag.cpp:23: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    // Write your code\
    \ here\n    long sum = 0;\n    long evenPos = 0;\n    for(long i = 0; i < lst.size();\
    \ i++) {\n        if(lst[i] % 2 == 0) {\n            sum += lst[i];\n        \
    \    evenPos++;\n        }\n    }\n    return sum - evenPos;\n}\nint main() {\n\
    \    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpexneje4a: /tmp/tmpexneje4a.cpp:23: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long evenSum = 0;\n    long oddSum = 0;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (i % 2 == 0) {\n            evenSum += lst[i];\n        }\
    \ else {\n            oddSum += lst[i];\n        }\n    }\n    sum = evenSum +\
    \ oddSum;\n    return sum;\n}\nint main() {\n    auto candidate = solution;\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)8, (long)7, (long)1})))\
    \ == (12));\n    assert(candidate((std::vector<long>({(long)3, (long)3, (long)3,\
    \ (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpf2zqzndb: /tmp/tmpf2zqzndb.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for(long i = 0; i < lst.size(); i++) {\n        if(lst[i] % 2 == 1) {\n  \
    \          sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpxqz226v_: /tmp/tmpxqz226v_.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    // code here\n  \
    \  long sum = 0;\n    long even = 0;\n    long odd = 0;\n    for(long i = 0; i\
    \ < lst.size(); i++){\n        if(lst[i] % 2 == 0){\n            even = even +\
    \ lst[i];\n        }\n        else{\n            odd = odd + lst[i];\n       \
    \ }\n    }\n    sum = even + odd;\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = solution;\n    assert(candidate((std::vector<long>({(long)5, (long)8,\
    \ (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpis55xz8h: /tmp/tmpis55xz8h.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long even = 0;\n    long odd = 0;\n    for(long i = 0; i < lst.size(); i++)\
    \ {\n        if(i % 2 == 0) {\n            even += lst[i];\n        } else {\n\
    \            odd += lst[i];\n        }\n    }\n    sum = even + odd;\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmppu23xq9j: /tmp/tmppu23xq9j.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long even = 0;\n    for(long i = 0; i < lst.size(); i++){\n        if(lst[i]\
    \ % 2 == 0){\n            even += lst[i];\n        }\n        else{\n        \
    \    sum += even;\n            even = 0;\n        }\n    }\n    return sum;\n\
    }\nint main() {\n    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpdl63wq16: /tmp/tmpdl63wq16.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long even = 0;\n    long odd = 0;\n    for(long i = 0; i < lst.size(); i++)\
    \ {\n        if(lst[i] % 2 == 0) {\n            even = even + lst[i];\n      \
    \  } else {\n            odd = odd + lst[i];\n        }\n    }\n    sum = even\
    \ + odd;\n    return sum;\n}\nint main() {\n    auto candidate = solution;\n \
    \   assert(candidate((std::vector<long>({(long)5, (long)8, (long)7, (long)1})))\
    \ == (12));\n    assert(candidate((std::vector<long>({(long)3, (long)3, (long)3,\
    \ (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpq0xqm4o5: /tmp/tmpq0xqm4o5.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for(long i = 0; i < lst.size(); i++) {\n        if(lst[i] % 2 == 0) {\n  \
    \          sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp4g3tvfm6: /tmp/tmp4g3tvfm6.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    // code here\n  \
    \  long sum = 0;\n    for(long i = 0; i < lst.size(); i++){\n        if(lst[i]\
    \ % 2 != 0){\n            sum += lst[i];\n        }\n    }\n    return sum;\n\
    }\nint main() {\n    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpu4j1wkb2: /tmp/tmpu4j1wkb2.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    // Write your code\
    \ here.\n    long sum = 0;\n    for(long i = 0; i < lst.size(); i++){\n      \
    \  if(lst[i] % 2 == 0){\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmps4j71ca0: /tmp/tmps4j71ca0.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for(long i = 0; i < lst.size(); i++) {\n        if(lst[i] % 2 != 0) {\n  \
    \          sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpiw4dwz0h: /tmp/tmpiw4dwz0h.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for(auto &i : lst)\n    {\n        if(i%2 == 0)\n        {\n            sum\
    \ += i;\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = solution;\n    assert(candidate((std::vector<long>({(long)5, (long)8, (long)7,\
    \ (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3, (long)3,\
    \ (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp_gu6uijj: /tmp/tmp_gu6uijj.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long even = 0;\n    long odd = 0;\n    for(long i = 0; i < lst.size(); i++){\n\
    \        if(lst[i] % 2 == 0){\n            even = even + lst[i];\n        }\n\
    \        else{\n            odd = odd + lst[i];\n        }\n    }\n    sum = even\
    \ + odd;\n    return sum;\n}\nint main() {\n    auto candidate = solution;\n \
    \   assert(candidate((std::vector<long>({(long)5, (long)8, (long)7, (long)1})))\
    \ == (12));\n    assert(candidate((std::vector<long>({(long)3, (long)3, (long)3,\
    \ (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp7tfrea2c: /tmp/tmp7tfrea2c.cpp:26: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    // code here\n  \
    \  long sum = 0;\n    for(long i = 0; i < lst.size(); i++){\n        if(lst[i]\
    \ % 2 == 0){\n            sum += lst[i];\n        }\n    }\n    return sum;\n\
    }\nint main() {\n    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp3e0nlupg: /tmp/tmp3e0nlupg.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    // Write your code\
    \ here.\n    long sum = 0;\n    for (long i = 0; i < lst.size(); i++) {\n    \
    \    if (i % 2 == 0) {\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp40l0c_16: /tmp/tmp40l0c_16.cpp:23: int main(): Assertion `candidate((std::vector<long>({(long)30,
    (long)13, (long)24, (long)321}))) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for (long i = 0; i < lst.size(); i++) {\n        if (i % 2 == 0) {\n     \
    \       sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n \
    \   auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp2x6chgsg: /tmp/tmp2x6chgsg.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)30,
    (long)13, (long)24, (long)321}))) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    // code here\n  \
    \  long sum = 0;\n    for(long i = 0; i < lst.size(); i++) {\n        if(i % 2\
    \ == 0) {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\
    int main() {\n    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp6zh6a0ox: /tmp/tmp6zh6a0ox.cpp:23: int main(): Assertion `candidate((std::vector<long>({(long)30,
    (long)13, (long)24, (long)321}))) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long evenSum = 0;\n    long oddSum = 0;\n    for(long i = 0; i < lst.size();\
    \ i++) {\n        if(i % 2 == 0) {\n            evenSum += lst[i];\n        }\
    \ else {\n            oddSum += lst[i];\n        }\n    }\n    sum = evenSum +\
    \ oddSum;\n    return sum;\n}\nint main() {\n    auto candidate = solution;\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)8, (long)7, (long)1})))\
    \ == (12));\n    assert(candidate((std::vector<long>({(long)3, (long)3, (long)3,\
    \ (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp7h7ic2eo: /tmp/tmp7h7ic2eo.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long evenSum = 0;\n    for(long i = 0; i < lst.size(); i++) {\n        if(i\
    \ % 2 == 0) {\n            sum += lst[i];\n            evenSum += lst[i];\n  \
    \      }\n    }\n    return evenSum;\n}\nint main() {\n    auto candidate = solution;\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)8, (long)7, (long)1})))\
    \ == (12));\n    assert(candidate((std::vector<long>({(long)3, (long)3, (long)3,\
    \ (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp0dhi8jx3: /tmp/tmp0dhi8jx3.cpp:24: int main(): Assertion `candidate((std::vector<long>({(long)30,
    (long)13, (long)24, (long)321}))) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for (long i = 0; i < lst.size(); i++) {\n        if (i % 2 == 0) {\n     \
    \       sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n \
    \   auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp2x6chgsg: /tmp/tmp2x6chgsg.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)30,
    (long)13, (long)24, (long)321}))) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for(long i = 0; i < lst.size(); i++){\n        if(lst[i] % 2 == 0){\n    \
    \        sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpgluyye6z: /tmp/tmpgluyye6z.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for (long i = 0; i < lst.size(); i++) {\n        if (i % 2 == 1) {\n     \
    \       sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n \
    \   auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmphgvoswfr: /tmp/tmphgvoswfr.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 == 0) {\n\
    \            sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main()\
    \ {\n    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp_2h7opbh: /tmp/tmp_2h7opbh.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for(long i = 0; i < lst.size(); i++) {\n        if(lst[i] % 2 == 0) {\n  \
    \          sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp4g3tvfm6: /tmp/tmp4g3tvfm6.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for (long i = 0; i < lst.size(); i++) {\n        if (i % 2 == 0) {\n     \
    \       sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n \
    \   auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp2x6chgsg: /tmp/tmp2x6chgsg.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)30,
    (long)13, (long)24, (long)321}))) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for(long i = 0; i < lst.size(); i++) {\n        if(lst[i] % 2 == 1) {\n  \
    \          sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpxqz226v_: /tmp/tmpxqz226v_.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for(long i = 0; i < lst.size(); i++) {\n        if(lst[i] % 2 == 0) {\n  \
    \          sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp4g3tvfm6: /tmp/tmp4g3tvfm6.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long even = 0;\n    long odd = 0;\n    for (auto i : lst) {\n        if (i\
    \ % 2 == 0) {\n            even += i;\n        } else {\n            odd += i;\n\
    \        }\n    }\n    sum = even + odd;\n    return sum;\n}\nint main() {\n \
    \   auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpgxclqwl0: /tmp/tmpgxclqwl0.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long evenSum = 0;\n    long oddSum = 0;\n    for(long i = 0; i < lst.size();\
    \ i++) {\n        if(i % 2 == 0) {\n            evenSum += lst[i];\n        }\
    \ else {\n            oddSum += lst[i];\n        }\n    }\n    sum = evenSum +\
    \ oddSum;\n    return sum;\n}\nint main() {\n    auto candidate = solution;\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)8, (long)7, (long)1})))\
    \ == (12));\n    assert(candidate((std::vector<long>({(long)3, (long)3, (long)3,\
    \ (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp7h7ic2eo: /tmp/tmp7h7ic2eo.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for (long i : lst) {\n        if (i % 2 == 0) {\n            sum += i;\n \
    \       }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = solution;\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)8, (long)7, (long)1})))\
    \ == (12));\n    assert(candidate((std::vector<long>({(long)3, (long)3, (long)3,\
    \ (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp3cb_59od: /tmp/tmp3cb_59od.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for(long i = 0; i < lst.size(); i++) {\n        if(lst[i] % 2 == 0) {\n  \
    \          sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp4g3tvfm6: /tmp/tmp4g3tvfm6.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for(long i = 0; i < lst.size(); i++){\n        if(lst[i] % 2 != 0){\n    \
    \        sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpkfmwuw2k: /tmp/tmpkfmwuw2k.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long even = 0;\n    long odd = 0;\n    for(long i = 0; i < lst.size(); i++)\
    \ {\n        if(lst[i] % 2 == 0) {\n            even = even + lst[i];\n      \
    \  } else {\n            odd = odd + lst[i];\n        }\n    }\n    sum = even\
    \ + odd;\n    return sum;\n}\nint main() {\n    auto candidate = solution;\n \
    \   assert(candidate((std::vector<long>({(long)5, (long)8, (long)7, (long)1})))\
    \ == (12));\n    assert(candidate((std::vector<long>({(long)3, (long)3, (long)3,\
    \ (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpq0xqm4o5: /tmp/tmpq0xqm4o5.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long even = 0;\n    long odd = 0;\n    for (long i : lst) {\n        if (i\
    \ % 2 == 0) {\n            even += i;\n        } else {\n            odd += i;\n\
    \        }\n    }\n    sum = even + odd;\n    return sum;\n}\nint main() {\n \
    \   auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpn_2_wp6j: /tmp/tmpn_2_wp6j.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for (long i : lst) {\n        if (i % 2 == 0) {\n            sum += i;\n \
    \       }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = solution;\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)8, (long)7, (long)1})))\
    \ == (12));\n    assert(candidate((std::vector<long>({(long)3, (long)3, (long)3,\
    \ (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp3cb_59od: /tmp/tmp3cb_59od.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for(long i = 0; i < lst.size(); i++) {\n        if(lst[i] % 2 == 1) {\n  \
    \          sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpxqz226v_: /tmp/tmpxqz226v_.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for (long i = 0; i < lst.size(); i++) {\n        if (i % 2 == 0) {\n     \
    \       sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n \
    \   auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp2x6chgsg: /tmp/tmp2x6chgsg.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)30,
    (long)13, (long)24, (long)321}))) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long even = 0;\n    long odd = 0;\n    for(long i = 0; i < lst.size(); i++)\
    \ {\n        if(i % 2 == 0) {\n            even += lst[i];\n        } else {\n\
    \            odd += lst[i];\n        }\n    }\n    sum = even + odd;\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmppu23xq9j: /tmp/tmppu23xq9j.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    // code here\n  \
    \  long sum = 0;\n    long even = 0;\n    long odd = 0;\n    for(long i = 0; i\
    \ < lst.size(); i++){\n        if(lst[i] % 2 == 0){\n            even += lst[i];\n\
    \        }\n        else{\n            odd += lst[i];\n        }\n    }\n    sum\
    \ = even + odd;\n    return sum;\n}\nint main() {\n    auto candidate = solution;\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)8, (long)7, (long)1})))\
    \ == (12));\n    assert(candidate((std::vector<long>({(long)3, (long)3, (long)3,\
    \ (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmplhucmthv: /tmp/tmplhucmthv.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    // code here\n  \
    \  long sum = 0;\n    for(long i = 0; i < lst.size(); i++){\n        if(lst[i]\
    \ % 2 == 0){\n            sum += lst[i];\n        }\n    }\n    return sum;\n\
    }\nint main() {\n    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp3e0nlupg: /tmp/tmp3e0nlupg.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for (long i = 0; i < lst.size(); i++) {\n        if (i % 2 == 0) {\n     \
    \       sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n \
    \   auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp2x6chgsg: /tmp/tmp2x6chgsg.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)30,
    (long)13, (long)24, (long)321}))) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long even = 0;\n    long odd = 0;\n    for (long i : lst) {\n        if (i\
    \ % 2 == 0) {\n            even += i;\n        } else {\n            odd += i;\n\
    \        }\n    }\n    sum = even + odd;\n    return sum;\n}\nint main() {\n \
    \   auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpn_2_wp6j: /tmp/tmpn_2_wp6j.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long evenPos = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        if\
    \ (lst[i] % 2 == 0) {\n            sum += lst[i];\n            evenPos++;\n  \
    \      }\n    }\n    return sum - evenPos * lst[evenPos]; // The last element\
    \ of the list is the sum of the even elements. \n}\nint main() {\n    auto candidate\
    \ = solution;\n    assert(candidate((std::vector<long>({(long)5, (long)8, (long)7,\
    \ (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3, (long)3,\
    \ (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpe2nzi7y_: /tmp/tmpe2nzi7y_.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for (long i = 0; i < lst.size(); i++) {\n        if (i % 2 == 0) {\n     \
    \       sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n \
    \   auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp2x6chgsg: /tmp/tmp2x6chgsg.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)30,
    (long)13, (long)24, (long)321}))) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long even = 0;\n    long odd = 0;\n    for (long i : lst) {\n        if (i\
    \ % 2 == 0) {\n            even = even + i;\n        } else {\n            odd\
    \ = odd + i;\n        }\n    }\n    sum = even + odd;\n    return sum;\n}\nint\
    \ main() {\n    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp0ik41tep: /tmp/tmp0ik41tep.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113447
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long evenSum = 0;\n    for(long i = 0; i < lst.size(); i++) {\n        if(lst[i]\
    \ % 2 == 0) {\n            sum += lst[i];\n            evenSum += lst[i];\n  \
    \      }\n    }\n    return evenSum;\n}\nint main() {\n    auto candidate = solution;\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)8, (long)7, (long)1})))\
    \ == (12));\n    assert(candidate((std::vector<long>({(long)3, (long)3, (long)3,\
    \ (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp2x412hke: /tmp/tmp2x412hke.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long even = 0;\n    long odd = 0;\n    for(long i : lst) {\n        if(i%2\
    \ == 0) {\n            even+=i;\n        } else {\n            odd+=i;\n     \
    \   }\n    }\n    sum = (even+odd)/2;\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = solution;\n    assert(candidate((std::vector<long>({(long)5, (long)8,\
    \ (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp6j62d1ug: /tmp/tmp6j62d1ug.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113447
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for(long i = 0; i < lst.size(); i++){\n        if(lst[i] % 2 == 0){\n    \
    \        sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpgluyye6z: /tmp/tmpgluyye6z.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for(long i = 0; i < lst.size(); i++) {\n        if(lst[i] % 2 == 0) {\n  \
    \          sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp4g3tvfm6: /tmp/tmp4g3tvfm6.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for (long i = 0; i < lst.size(); i++) {\n        if (i % 2 == 0) {\n     \
    \       sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n \
    \   auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp2x6chgsg: /tmp/tmp2x6chgsg.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)30,
    (long)13, (long)24, (long)321}))) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    // Write your code\
    \ here.\n    long sum = 0;\n    for(long i = 0; i < lst.size(); i++){\n      \
    \  if(lst[i] % 2 == 0){\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmps4j71ca0: /tmp/tmps4j71ca0.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    // Write your code\
    \ here.\n    long sum = 0;\n    for(int i = 0; i < lst.size(); i++){\n       \
    \ if(lst[i] % 2 == 1){\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp0p7valcj: /tmp/tmp0p7valcj.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113447
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long even = 0;\n    long odd = 0;\n    for(long i = 0; i < lst.size(); i++){\n\
    \        if(lst[i] % 2 == 0){\n            even = even + lst[i];\n        }\n\
    \        else{\n            odd = odd + lst[i];\n        }\n    }\n    sum = even\
    \ + odd;\n    return sum;\n}\nint main() {\n    auto candidate = solution;\n \
    \   assert(candidate((std::vector<long>({(long)5, (long)8, (long)7, (long)1})))\
    \ == (12));\n    assert(candidate((std::vector<long>({(long)3, (long)3, (long)3,\
    \ (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp7tfrea2c: /tmp/tmp7tfrea2c.cpp:26: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long evenSum = 0;\n    for(long i = 0; i < lst.size(); i++){\n        if(lst[i]\
    \ % 2 == 0){\n            evenSum += lst[i];\n        }\n        else{\n     \
    \       sum += evenSum;\n            evenSum = 0;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp_e7t60ww: /tmp/tmp_e7t60ww.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for (long i = 0; i < lst.size(); i++) {\n        if (i % 2 == 0) {\n     \
    \       sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n \
    \   auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp2x6chgsg: /tmp/tmp2x6chgsg.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)30,
    (long)13, (long)24, (long)321}))) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long even = 0;\n    long odd = 0;\n    for(long i = 0; i < lst.size(); i++)\
    \ {\n        if(lst[i] % 2 == 0) {\n            even = even + lst[i];\n      \
    \  } else {\n            odd = odd + lst[i];\n        }\n    }\n    sum = even\
    \ + odd;\n    return sum;\n}\nint main() {\n    auto candidate = solution;\n \
    \   assert(candidate((std::vector<long>({(long)5, (long)8, (long)7, (long)1})))\
    \ == (12));\n    assert(candidate((std::vector<long>({(long)3, (long)3, (long)3,\
    \ (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpq0xqm4o5: /tmp/tmpq0xqm4o5.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for(auto i : lst)\n    {\n        if(i % 2 == 0)\n        {\n            sum\
    \ += i;\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = solution;\n    assert(candidate((std::vector<long>({(long)5, (long)8, (long)7,\
    \ (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3, (long)3,\
    \ (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp9poub6fq: /tmp/tmp9poub6fq.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113447
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for(long i = 0; i < lst.size(); i++) {\n        if(lst[i] % 2 == 1) {\n  \
    \          sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpxqz226v_: /tmp/tmpxqz226v_.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for (long i = 0; i < lst.size(); i++) {\n        if (i % 2 == 0) {\n     \
    \       sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n \
    \   auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp2x6chgsg: /tmp/tmp2x6chgsg.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)30,
    (long)13, (long)24, (long)321}))) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long odd = 0;\n    for(long i = 0; i < lst.size(); i++) {\n        if(lst[i]\
    \ % 2 != 0) {\n            sum += lst[i];\n        } else {\n            odd +=\
    \ lst[i];\n        }\n    }\n    return sum + odd;\n}\nint main() {\n    auto\
    \ candidate = solution;\n    assert(candidate((std::vector<long>({(long)5, (long)8,\
    \ (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp0s2hz1x3: /tmp/tmp0s2hz1x3.cpp:23: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113447
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for(long i = 0; i < lst.size(); i++) {\n        if(lst[i] % 2 == 0) {\n  \
    \          sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp4g3tvfm6: /tmp/tmp4g3tvfm6.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for (long i = 0; i < lst.size(); i++) {\n        if (i % 2 == 0) {\n     \
    \       sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n \
    \   auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp2x6chgsg: /tmp/tmp2x6chgsg.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)30,
    (long)13, (long)24, (long)321}))) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for(long i = 0; i < lst.size(); i++){\n        if(lst[i] % 2 == 0){\n    \
    \        sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpgluyye6z: /tmp/tmpgluyye6z.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 == 0) {\n\
    \            sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main()\
    \ {\n    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp_2h7opbh: /tmp/tmp_2h7opbh.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long even = 0;\n    long odd = 0;\n    for(auto i : lst) {\n        if(i%2\
    \ == 0) {\n            even+=i;\n        }\n        else {\n            odd+=i;\n\
    \        }\n    }\n    sum = even+odd;\n    return sum;\n}\nint main() {\n   \
    \ auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp1a1dm01h: /tmp/tmp1a1dm01h.cpp:26: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113447
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long even = 0;\n    for(long i = 0; i < lst.size(); i++) {\n        if(lst[i]\
    \ % 2 == 0) {\n            sum += lst[i];\n            even++;\n        }\n  \
    \  }\n    return sum - even;\n}\nint main() {\n    auto candidate = solution;\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)8, (long)7, (long)1})))\
    \ == (12));\n    assert(candidate((std::vector<long>({(long)3, (long)3, (long)3,\
    \ (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpaowd1wsc: /tmp/tmpaowd1wsc.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113448
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for(long i = 0; i < lst.size(); i++) {\n        if(lst[i] % 2 == 0) {\n  \
    \          sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp4g3tvfm6: /tmp/tmp4g3tvfm6.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    // Write your code\
    \ here.\n    long sum = 0;\n    for(long i = 0; i < lst.size(); i++){\n      \
    \  if(lst[i] % 2 == 0){\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmps4j71ca0: /tmp/tmps4j71ca0.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for(long i = 0; i < lst.size(); i++) {\n        if(lst[i] % 2 != 0) {\n  \
    \          sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpiw4dwz0h: /tmp/tmpiw4dwz0h.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long evenSum = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        if\
    \ (i % 2 == 0) {\n            sum += lst[i];\n            evenSum += lst[i];\n\
    \        }\n    }\n    return evenSum;\n}\nint main() {\n    auto candidate =\
    \ solution;\n    assert(candidate((std::vector<long>({(long)5, (long)8, (long)7,\
    \ (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3, (long)3,\
    \ (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpi98y8g8x: /tmp/tmpi98y8g8x.cpp:24: int main(): Assertion `candidate((std::vector<long>({(long)30,
    (long)13, (long)24, (long)321}))) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for(long i = 0; i < lst.size(); i++) {\n        if(lst[i] % 2 == 0) {\n  \
    \          sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp4g3tvfm6: /tmp/tmp4g3tvfm6.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long oddSum = 0;\n    for(long i = 0; i < lst.size(); i++) {\n        if(i\
    \ % 2 == 0) {\n            sum += lst[i];\n        } else {\n            oddSum\
    \ += lst[i];\n        }\n    }\n    return oddSum + sum;\n}\nint main() {\n  \
    \  auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpkr3zb804: /tmp/tmpkr3zb804.cpp:23: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113447
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long evenSum = 0;\n    for(long i = 0; i < lst.size(); i++) {\n        if(lst[i]\
    \ % 2 == 0) {\n            sum += lst[i];\n            evenSum += lst[i];\n  \
    \      }\n    }\n    return evenSum;\n}\nint main() {\n    auto candidate = solution;\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)8, (long)7, (long)1})))\
    \ == (12));\n    assert(candidate((std::vector<long>({(long)3, (long)3, (long)3,\
    \ (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp2x412hke: /tmp/tmp2x412hke.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long even = 0;\n    long odd = 0;\n    for(long i : lst) {\n        if(i%2\
    \ == 0) {\n            even+=i;\n        } else {\n            odd+=i;\n     \
    \   }\n    }\n    sum = even + odd;\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = solution;\n    assert(candidate((std::vector<long>({(long)5, (long)8,\
    \ (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpvz_4na6p: /tmp/tmpvz_4na6p.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113447
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long even = 0;\n    long odd = 0;\n    for (long i : lst) {\n        if (i\
    \ % 2 == 0) {\n            even = even + i;\n        } else {\n            odd\
    \ = odd + i;\n        }\n    }\n    sum = even + odd;\n    return sum;\n}\nint\
    \ main() {\n    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp0ik41tep: /tmp/tmp0ik41tep.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113447
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long n = lst.size();\n    long even = 0;\n    long odd = 0;\n    for(long\
    \ i = 0; i < n; i++) {\n        if(lst[i] % 2 == 0) {\n            even = even\
    \ + lst[i];\n        } else {\n            odd = odd + lst[i];\n        }\n  \
    \  }\n    sum = even + odd;\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = solution;\n    assert(candidate((std::vector<long>({(long)5, (long)8, (long)7,\
    \ (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3, (long)3,\
    \ (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpvyyik5hl: /tmp/tmpvyyik5hl.cpp:26: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113448
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long even = 0;\n    long odd = 0;\n    for(auto i : lst){\n        if(i%2==0){\n\
    \            even+=i;\n        }else{\n            odd+=i;\n        }\n    }\n\
    \    sum=even+odd;\n    return sum;\n}\nint main() {\n    auto candidate = solution;\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)8, (long)7, (long)1})))\
    \ == (12));\n    assert(candidate((std::vector<long>({(long)3, (long)3, (long)3,\
    \ (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpz857fio6: /tmp/tmpz857fio6.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113447
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long even = 0;\n    long odd = 0;\n    for (long i : lst) {\n        if (i\
    \ % 2 == 0) {\n            even = even + i;\n        } else {\n            odd\
    \ = odd + i;\n        }\n    }\n    sum = even + odd;\n    return sum;\n}\nint\
    \ main() {\n    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp0ik41tep: /tmp/tmp0ik41tep.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113447
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long i = 0;\n    while(i < lst.size()) {\n        if(lst[i] % 2 == 1) {\n\
    \            sum += lst[i];\n        }\n        i++;\n    }\n    return sum;\n\
    }\nint main() {\n    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpr6de6dva: /tmp/tmpr6de6dva.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113447
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for(long i = 0; i < lst.size(); i++){\n        if(lst[i] % 2 == 0){\n    \
    \        sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpgluyye6z: /tmp/tmpgluyye6z.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    // code here\n  \
    \  long sum = 0;\n    for(long i = 0; i < lst.size(); i++){\n        if(lst[i]\
    \ % 2 == 0){\n            sum += lst[i];\n        }\n    }\n    return sum;\n\
    }\nint main() {\n    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp3e0nlupg: /tmp/tmp3e0nlupg.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for(long i = 0; i < lst.size(); i++) {\n        if(lst[i] % 2 == 0) {\n  \
    \          sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp4g3tvfm6: /tmp/tmp4g3tvfm6.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long n = lst.size();\n    for (int i = 0; i < n; i++) {\n        if (lst[i]\
    \ % 2 == 1) {\n            sum += lst[i];\n        }\n    }\n    return sum;\n\
    }\nint main() {\n    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp95zzdbkn: /tmp/tmp95zzdbkn.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113447
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    // code here\n  \
    \  long sum = 0;\n    long even = 0;\n    long odd = 0;\n    for(long i = 0; i\
    \ < lst.size(); i++){\n        if(lst[i] % 2 == 0){\n            even = even +\
    \ lst[i];\n        }\n        else{\n            odd = odd + lst[i];\n       \
    \ }\n    }\n    sum = even + odd;\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = solution;\n    assert(candidate((std::vector<long>({(long)5, (long)8,\
    \ (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpis55xz8h: /tmp/tmpis55xz8h.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long even = 0;\n    long odd = 0;\n    for(long i = 0; i < lst.size(); i++)\
    \ {\n        if(lst[i] % 2 == 0) {\n            even = even + lst[i];\n      \
    \  } else {\n            odd = odd + lst[i];\n        }\n    }\n    sum = even\
    \ + odd;\n    return sum;\n}\nint main() {\n    auto candidate = solution;\n \
    \   assert(candidate((std::vector<long>({(long)5, (long)8, (long)7, (long)1})))\
    \ == (12));\n    assert(candidate((std::vector<long>({(long)3, (long)3, (long)3,\
    \ (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpq0xqm4o5: /tmp/tmpq0xqm4o5.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for (long i = 0; i < lst.size(); i++) {\n        if (i % 2 == 0) {\n     \
    \       sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n \
    \   auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp2x6chgsg: /tmp/tmp2x6chgsg.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)30,
    (long)13, (long)24, (long)321}))) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long evenSum = 0;\n    long oddSum = 0;\n    long evenCount = 0;\n    long\
    \ oddCount = 0;\n    for(auto it=lst.begin();it!=lst.end();it++){\n        if(*it\
    \ % 2 == 0){\n            evenSum += *it;\n            evenCount++;\n        }else{\n\
    \            oddSum += *it;\n            oddCount++;\n        }\n    }\n    sum\
    \ = evenSum + oddSum;\n    return sum;\n}\nint main() {\n    auto candidate =\
    \ solution;\n    assert(candidate((std::vector<long>({(long)5, (long)8, (long)7,\
    \ (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3, (long)3,\
    \ (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpi9xzf3gh: /tmp/tmpi9xzf3gh.cpp:29: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113447
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    // Write your code\
    \ here.\n    long sum = 0;\n    long even = 0;\n    long odd = 0;\n    for(long\
    \ i = 0; i < lst.size(); i++){\n        if(lst[i] % 2 == 0){\n            even\
    \ = even + lst[i];\n        }else{\n            odd = odd + lst[i];\n        }\n\
    \    }\n    sum = even + odd;\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = solution;\n    assert(candidate((std::vector<long>({(long)5, (long)8, (long)7,\
    \ (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3, (long)3,\
    \ (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpqymgty67: /tmp/tmpqymgty67.cpp:26: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113447
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for(long i = 0; i < lst.size(); i++) {\n        if(lst[i] % 2 == 0) {\n  \
    \          sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp4g3tvfm6: /tmp/tmp4g3tvfm6.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for(long i = 0; i < lst.size(); i++) {\n        if(lst[i] % 2 == 0) {\n  \
    \          sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp4g3tvfm6: /tmp/tmp4g3tvfm6.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    // code here\n  \
    \  long sum = 0;\n    for(long i = 0; i < lst.size(); i++){\n        if(lst[i]\
    \ % 2 == 0){\n            sum += lst[i];\n        }\n    }\n    return sum;\n\
    }\nint main() {\n    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp3e0nlupg: /tmp/tmp3e0nlupg.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    // Write your code\
    \ here.\n    long sum = 0;\n    for(long i = 0; i < lst.size(); i++){\n      \
    \  if(lst[i] % 2 == 0){\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmps4j71ca0: /tmp/tmps4j71ca0.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long even = 0;\n    long odd = 0;\n    for(long i = 0; i < lst.size(); i++){\n\
    \        if(lst[i] % 2 == 0){\n            even = even + lst[i];\n        }\n\
    \        else{\n            odd = odd + lst[i];\n        }\n    }\n    sum = even\
    \ + odd;\n    return sum;\n}\nint main() {\n    auto candidate = solution;\n \
    \   assert(candidate((std::vector<long>({(long)5, (long)8, (long)7, (long)1})))\
    \ == (12));\n    assert(candidate((std::vector<long>({(long)3, (long)3, (long)3,\
    \ (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp7tfrea2c: /tmp/tmp7tfrea2c.cpp:26: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for(long i = 0; i < lst.size(); i++) {\n        if(lst[i] % 2 == 0) {\n  \
    \          sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp4g3tvfm6: /tmp/tmp4g3tvfm6.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long evenSum = 0;\n    long oddSum = 0;\n    for(long i = 0; i < lst.size();\
    \ i++) {\n        if(i % 2 == 0) {\n            evenSum += lst[i];\n        }\
    \ else {\n            oddSum += lst[i];\n        }\n    }\n    sum = evenSum +\
    \ oddSum;\n    return sum;\n}\nint main() {\n    auto candidate = solution;\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)8, (long)7, (long)1})))\
    \ == (12));\n    assert(candidate((std::vector<long>({(long)3, (long)3, (long)3,\
    \ (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp7h7ic2eo: /tmp/tmp7h7ic2eo.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for (long i : lst) {\n        if (i % 2 == 0) {\n            sum += i;\n \
    \       }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = solution;\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)8, (long)7, (long)1})))\
    \ == (12));\n    assert(candidate((std::vector<long>({(long)3, (long)3, (long)3,\
    \ (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp3cb_59od: /tmp/tmp3cb_59od.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    // code here\n  \
    \  long sum = 0;\n    long even = 0;\n    long odd = 0;\n    for(long i = 0; i\
    \ < lst.size(); i++){\n        if(lst[i] % 2 == 0){\n            even += lst[i];\n\
    \        }\n        else{\n            odd += lst[i];\n        }\n    }\n    sum\
    \ = even + odd;\n    return sum;\n}\nint main() {\n    auto candidate = solution;\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)8, (long)7, (long)1})))\
    \ == (12));\n    assert(candidate((std::vector<long>({(long)3, (long)3, (long)3,\
    \ (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmplhucmthv: /tmp/tmplhucmthv.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for(long i = 0; i < lst.size(); i++) {\n        if(lst[i] % 2 == 1) {\n  \
    \          sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpxqz226v_: /tmp/tmpxqz226v_.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long evenPos = 0;\n    for(long i = 0; i < lst.size(); i++){\n        if(lst[i]\
    \ % 2 == 0){\n            sum += lst[i];\n            evenPos++;\n        }\n\
    \    }\n    return sum - evenPos * 2;\n}\nint main() {\n    auto candidate = solution;\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)8, (long)7, (long)1})))\
    \ == (12));\n    assert(candidate((std::vector<long>({(long)3, (long)3, (long)3,\
    \ (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp1nf7w3jr: /tmp/tmp1nf7w3jr.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113447
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long evenSum = 0;\n    for(long i = 0; i < lst.size(); i++) {\n        if(lst[i]\
    \ % 2 == 0) {\n            evenSum += lst[i];\n        }\n        else {\n   \
    \         sum += evenSum;\n            evenSum = 0;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp73q1qga0: /tmp/tmp73q1qga0.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113447
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long even = 0;\n    long odd = 0;\n    for(long i : lst)\n    {\n        if(i%2\
    \ == 0)\n        {\n            even = even + i;\n        }\n        else\n  \
    \      {\n            odd = odd + i;\n        }\n    }\n    sum = even + odd;\n\
    \    return sum;\n}\nint main() {\n    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmparfr62wj: /tmp/tmparfr62wj.cpp:29: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113447
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long evenSum = 0;\n    for(long i = 0; i < lst.size(); i++) {\n        if(lst[i]\
    \ % 2 == 0) {\n            sum += lst[i];\n            evenSum += lst[i];\n  \
    \      }\n    }\n    return sum + evenSum;\n}\nint main() {\n    auto candidate\
    \ = solution;\n    assert(candidate((std::vector<long>({(long)5, (long)8, (long)7,\
    \ (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3, (long)3,\
    \ (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpjq9ktzsm: /tmp/tmpjq9ktzsm.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long even = 0;\n    long odd = 0;\n    for (long i : lst) {\n        if (i\
    \ % 2 == 0) {\n            even += i;\n        } else {\n            odd += i;\n\
    \        }\n    }\n    sum = even + odd;\n    return sum;\n}\nint main() {\n \
    \   auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpn_2_wp6j: /tmp/tmpn_2_wp6j.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for (long i = 0; i < lst.size(); i++) {\n        if (i % 2 == 0) {\n     \
    \       sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n \
    \   auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp2x6chgsg: /tmp/tmp2x6chgsg.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)30,
    (long)13, (long)24, (long)321}))) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long even = 0;\n    for(long i = 0; i < lst.size(); i++) {\n        if(lst[i]\
    \ % 2 == 0) {\n            even = even + lst[i];\n        }\n    }\n    for(long\
    \ i = 0; i < lst.size(); i++) {\n        if(lst[i] % 2 != 0) {\n            sum\
    \ = sum + lst[i];\n        }\n    }\n    return sum + even;\n}\nint main() {\n\
    \    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpa0z2at88: /tmp/tmpa0z2at88.cpp:26: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113447
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    // code here\n  \
    \  long sum = 0;\n    long even = 0;\n    long odd = 0;\n    for(long i = 0; i\
    \ < lst.size(); i++){\n        if(lst[i] % 2 == 0){\n            even = even +\
    \ lst[i];\n        }\n        else{\n            odd = odd + lst[i];\n       \
    \ }\n    }\n    sum = even + odd;\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = solution;\n    assert(candidate((std::vector<long>({(long)5, (long)8,\
    \ (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpis55xz8h: /tmp/tmpis55xz8h.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 == 0) {\n\
    \            sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main()\
    \ {\n    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp_2h7opbh: /tmp/tmp_2h7opbh.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for(long i = 0; i < lst.size(); i++) {\n        if(lst[i] % 2 == 1) {\n  \
    \          sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpxqz226v_: /tmp/tmpxqz226v_.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long even = 0;\n    for(long i = 0; i < lst.size(); i++){\n        if(lst[i]\
    \ % 2 == 0){\n            even = even + lst[i];\n        }\n        else{\n  \
    \          sum = sum + even;\n            even = 0;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpq4a59zn1: /tmp/tmpq4a59zn1.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113447
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for(long i = 0; i < lst.size(); i++) {\n        if(lst[i] % 2 == 0) {\n  \
    \          sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp4g3tvfm6: /tmp/tmp4g3tvfm6.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for(long i = 0; i < lst.size(); i++){\n        if(lst[i] % 2 == 0){\n    \
    \        sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpgluyye6z: /tmp/tmpgluyye6z.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long even = 0;\n    long odd = 0;\n    for(long i = 0; i < lst.size(); i++)\
    \ {\n        if(lst[i] % 2 == 0) {\n            even = even + lst[i];\n      \
    \  } else {\n            odd = odd + lst[i];\n        }\n    }\n    sum = even\
    \ + odd;\n    return sum;\n}\nint main() {\n    auto candidate = solution;\n \
    \   assert(candidate((std::vector<long>({(long)5, (long)8, (long)7, (long)1})))\
    \ == (12));\n    assert(candidate((std::vector<long>({(long)3, (long)3, (long)3,\
    \ (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpq0xqm4o5: /tmp/tmpq0xqm4o5.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for(long i = 0; i < lst.size(); i++) {\n        if(lst[i] % 2 == 0) {\n  \
    \          sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp4g3tvfm6: /tmp/tmp4g3tvfm6.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for(long i = 0; i < lst.size(); i++) {\n        if(lst[i] % 2 == 1) {\n  \
    \          sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpxqz226v_: /tmp/tmpxqz226v_.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    // code here\n  \
    \  long sum = 0;\n    long sumOdd = 0;\n    long sumEven = 0;\n    long size =\
    \ lst.size();\n    for(int i = 0; i < size; i++){\n        if(lst[i] % 2 == 0){\n\
    \            sumEven += lst[i];\n        }else{\n            sumOdd += lst[i];\n\
    \        }\n    }\n    sum = sumOdd + sumEven;\n    return sum;\n}\nint main()\
    \ {\n    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpmkdajxov: /tmp/tmpmkdajxov.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113447
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    // code here\n  \
    \  long sum = 0;\n    long evenPos = 0;\n    for(long i = 0; i < lst.size(); i++){\n\
    \        if(lst[i] % 2 == 0){\n            sum += lst[i];\n            evenPos++;\n\
    \        }\n    }\n    return sum - evenPos;\n}\nint main() {\n    auto candidate\
    \ = solution;\n    assert(candidate((std::vector<long>({(long)5, (long)8, (long)7,\
    \ (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3, (long)3,\
    \ (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpfyha233b: /tmp/tmpfyha233b.cpp:23: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113448
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 == 1) {\n\
    \            sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main()\
    \ {\n    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpl5zup8gl: /tmp/tmpl5zup8gl.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113447
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for(long i = 0; i < lst.size(); i++) {\n        if(lst[i] % 2 != 0 && lst[i]\
    \ % 3 != 0) {\n            sum += lst[i];\n        }\n    }\n    return sum;\n\
    }\nint main() {\n    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp0famwwbn: /tmp/tmp0famwwbn.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long n = lst.size();\n    long even = 0;\n    long odd = 0;\n    for(long\
    \ i = 0; i < n; i++) {\n        if(lst[i] % 2 == 0) {\n            even = even\
    \ + lst[i];\n        } else {\n            odd = odd + lst[i];\n        }\n  \
    \  }\n    sum = even + odd;\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = solution;\n    assert(candidate((std::vector<long>({(long)5, (long)8, (long)7,\
    \ (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3, (long)3,\
    \ (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpvyyik5hl: /tmp/tmpvyyik5hl.cpp:26: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113448
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    // Write your code\
    \ here.\n    long sum = 0;\n    long evenPos = 0;\n    for(long i = 0; i < lst.size();\
    \ i++){\n        if(lst[i] % 2 == 0){\n            sum += lst[i];\n          \
    \  evenPos++;\n        }\n    }\n    return sum - evenPos;\n}\nint main() {\n\
    \    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpe0uzf1ji: /tmp/tmpe0uzf1ji.cpp:23: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113448
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for (long i = 0; i < lst.size(); i++) {\n        if (i % 2 == 0) {\n     \
    \       sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n \
    \   auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp2x6chgsg: /tmp/tmp2x6chgsg.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)30,
    (long)13, (long)24, (long)321}))) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long evenSum = 0;\n    for (long i = 0; i < lst.size(); i++) {\n        if\
    \ (i % 2 == 0) {\n            sum += lst[i];\n            evenSum += lst[i];\n\
    \        }\n    }\n    return evenSum;\n}\nint main() {\n    auto candidate =\
    \ solution;\n    assert(candidate((std::vector<long>({(long)5, (long)8, (long)7,\
    \ (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3, (long)3,\
    \ (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpi98y8g8x: /tmp/tmpi98y8g8x.cpp:24: int main(): Assertion `candidate((std::vector<long>({(long)30,
    (long)13, (long)24, (long)321}))) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for(long i = 0; i < lst.size(); i++) {\n        if(lst[i] % 2 == 0) {\n  \
    \          sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp4g3tvfm6: /tmp/tmp4g3tvfm6.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for(long i = 0; i < lst.size(); i++) {\n        if(lst[i] % 2 == 0) {\n  \
    \          sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp4g3tvfm6: /tmp/tmp4g3tvfm6.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for (long i = 0; i < lst.size(); i++) {\n        if (i % 2 == 1) {\n     \
    \       sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n \
    \   auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmphgvoswfr: /tmp/tmphgvoswfr.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long n = lst.size();\n    for(long i = 0; i < n; i++) {\n        if(lst[i]\
    \ % 2 == 0) {\n            sum += lst[i];\n        }\n    }\n    return sum;\n\
    }\nint main() {\n    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpm6w3msvi: /tmp/tmpm6w3msvi.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113447
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for(long i = 0; i < lst.size(); i++) {\n        if(lst[i] % 2 == 0) {\n  \
    \          sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp4g3tvfm6: /tmp/tmp4g3tvfm6.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for(auto i : lst)\n    {\n        if(i % 2 == 0)\n        {\n            sum\
    \ += i;\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = solution;\n    assert(candidate((std::vector<long>({(long)5, (long)8, (long)7,\
    \ (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3, (long)3,\
    \ (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp9poub6fq: /tmp/tmp9poub6fq.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113447
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for(long i = 0; i < lst.size(); i++) {\n        if(lst[i] % 2 == 0) {\n  \
    \          sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp4g3tvfm6: /tmp/tmp4g3tvfm6.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long even = 0;\n    long odd = 0;\n    for (long i = 0; i < lst.size(); i++)\
    \ {\n        if (i % 2 == 0) {\n            even = even + lst[i];\n        } else\
    \ {\n            odd = odd + lst[i];\n        }\n    }\n    sum = even + odd;\n\
    \    return sum;\n}\nint main() {\n    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpyeuif3i6: /tmp/tmpyeuif3i6.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113447
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for(long i = 0; i < lst.size(); i++){\n        if(lst[i] % 2 == 0){\n    \
    \        sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpgluyye6z: /tmp/tmpgluyye6z.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    // code here\n  \
    \  long sum = 0;\n    long even = 0;\n    long odd = 0;\n    for(long i = 0; i\
    \ < lst.size(); i++){\n        if(lst[i] % 2 == 0){\n            even += lst[i];\n\
    \        }\n        else{\n            odd += lst[i];\n        }\n    }\n    sum\
    \ = even + odd;\n    return sum;\n}\nint main() {\n    auto candidate = solution;\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)8, (long)7, (long)1})))\
    \ == (12));\n    assert(candidate((std::vector<long>({(long)3, (long)3, (long)3,\
    \ (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmplhucmthv: /tmp/tmplhucmthv.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 != 0 && lst[i]\
    \ % 2 != 1) {\n            sum += lst[i];\n        }\n    }\n    return sum;\n\
    }\nint main() {\n    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpj7kju8t1: /tmp/tmpj7kju8t1.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113447
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for (long i : lst) {\n        if (i % 2 == 1) {\n            sum += i;\n \
    \       }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = solution;\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)8, (long)7, (long)1})))\
    \ == (12));\n    assert(candidate((std::vector<long>({(long)3, (long)3, (long)3,\
    \ (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpk01na2yu: /tmp/tmpk01na2yu.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113447
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for (long i = 0; i < lst.size(); i++) {\n        if (i % 2 == 0) {\n     \
    \       sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n \
    \   auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp2x6chgsg: /tmp/tmp2x6chgsg.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)30,
    (long)13, (long)24, (long)321}))) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for (long i = 0; i < lst.size(); i++) {\n        if (i % 2 == 0) {\n     \
    \       sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n \
    \   auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp2x6chgsg: /tmp/tmp2x6chgsg.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)30,
    (long)13, (long)24, (long)321}))) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for (long i = 0; i < lst.size(); i++) {\n        if (i % 2 == 0) {\n     \
    \       sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n \
    \   auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp2x6chgsg: /tmp/tmp2x6chgsg.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)30,
    (long)13, (long)24, (long)321}))) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long even = 0;\n    for(long i = 0; i < lst.size(); i++) {\n        if(lst[i]\
    \ % 2 == 0) {\n            even = even + lst[i];\n        } else {\n         \
    \   sum += even;\n            even = 0;\n        }\n    }\n    return sum;\n}\n\
    int main() {\n    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpy9w0o8xl: /tmp/tmpy9w0o8xl.cpp:24: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113447
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    // Write your code\
    \ here\n    long sum = 0;\n    for(long i = 0; i < lst.size(); i++){\n       \
    \ if(i % 2 == 0){\n            sum += lst[i];\n        }\n    }\n    return sum;\n\
    }\nint main() {\n    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpzsl2resf: /tmp/tmpzsl2resf.cpp:23: int main(): Assertion `candidate((std::vector<long>({(long)30,
    (long)13, (long)24, (long)321}))) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660113448
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for(long i = 0; i < lst.size(); i++) {\n        if(lst[i] % 2 == 0) {\n  \
    \          sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp4g3tvfm6: /tmp/tmp4g3tvfm6.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for (long i = 0; i < lst.size(); i++) {\n        if (i % 2 == 0) {\n     \
    \       sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n \
    \   auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp2x6chgsg: /tmp/tmp2x6chgsg.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)30,
    (long)13, (long)24, (long)321}))) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long even = 0;\n    long odd = 0;\n    for (long i : lst) {\n        if (i\
    \ % 2 == 0) {\n            even += i;\n        } else {\n            odd += i;\n\
    \        }\n    }\n    sum = even + odd;\n    return sum;\n}\nint main() {\n \
    \   auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpn_2_wp6j: /tmp/tmpn_2_wp6j.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for (long i : lst) {\n        if (i % 2 == 1) {\n            sum += i;\n \
    \       }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = solution;\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)8, (long)7, (long)1})))\
    \ == (12));\n    assert(candidate((std::vector<long>({(long)3, (long)3, (long)3,\
    \ (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpk01na2yu: /tmp/tmpk01na2yu.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113447
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    // code here\n  \
    \  long sum = 0;\n    long even = 0;\n    long odd = 0;\n    for (long i : lst)\
    \ {\n        if (i % 2 == 0) {\n            even = even + i;\n        } else {\n\
    \            odd = odd + i;\n        }\n    }\n    sum = even + odd;\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpwfqn4goy: /tmp/tmpwfqn4goy.cpp:26: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113447
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for(long i = 0; i < lst.size(); i++) {\n        if(lst[i] % 2 == 0) {\n  \
    \          sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp4g3tvfm6: /tmp/tmp4g3tvfm6.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for (long i = 0; i < lst.size(); i++) {\n        if (i % 2 == 0) {\n     \
    \       sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n \
    \   auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp2x6chgsg: /tmp/tmp2x6chgsg.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)30,
    (long)13, (long)24, (long)321}))) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long even = 0;\n    long odd = 0;\n    for(long i = 0; i < lst.size(); i++)\
    \ {\n        if(lst[i] % 2 == 0) {\n            even += lst[i];\n        } else\
    \ {\n            odd += lst[i];\n        }\n    }\n    sum = even + odd;\n   \
    \ return sum;\n}\nint main() {\n    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp5bvhol8g: /tmp/tmp5bvhol8g.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113447
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for(long i = 0; i < lst.size(); i++){\n        if(lst[i] % 2 == 0){\n    \
    \        sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpgluyye6z: /tmp/tmpgluyye6z.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for (long i = 0; i < lst.size(); i++) {\n        if (i % 2 == 0) {\n     \
    \       sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n \
    \   auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp2x6chgsg: /tmp/tmp2x6chgsg.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)30,
    (long)13, (long)24, (long)321}))) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    // Write your code\
    \ here\n    long sum = 0;\n    long n = lst.size();\n    for(int i = 0; i < n;\
    \ i++) {\n        if(lst[i] % 2 == 0) {\n            sum += lst[i];\n        }\n\
    \    }\n    return sum;\n}\nint main() {\n    auto candidate = solution;\n   \
    \ assert(candidate((std::vector<long>({(long)5, (long)8, (long)7, (long)1})))\
    \ == (12));\n    assert(candidate((std::vector<long>({(long)3, (long)3, (long)3,\
    \ (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpcx6_rw9m: /tmp/tmpcx6_rw9m.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113447
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for(long i = 0; i < lst.size(); i++){\n        if(lst[i] % 2 == 0){\n    \
    \        sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpgluyye6z: /tmp/tmpgluyye6z.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for(long i = 0; i < lst.size(); i++){\n        if(lst[i] % 2 == 0){\n    \
    \        sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpgluyye6z: /tmp/tmpgluyye6z.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    // code here\n  \
    \  long sum = 0;\n    long n = lst.size();\n    for(int i = 0; i < n; i++) {\n\
    \        if(lst[i] % 2 == 0) {\n            sum += lst[i];\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpavzs2b3q: /tmp/tmpavzs2b3q.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113447
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for (long i = 0; i < lst.size(); i++) {\n        if (i % 2 == 0) {\n     \
    \       sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n \
    \   auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp2x6chgsg: /tmp/tmp2x6chgsg.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)30,
    (long)13, (long)24, (long)321}))) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for (long i = 0; i < lst.size(); i++) {\n        if (i % 2 == 0) {\n     \
    \       sum += lst[i];\n        }\n    }\n    return sum;\n}\nint main() {\n \
    \   auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp2x6chgsg: /tmp/tmp2x6chgsg.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)30,
    (long)13, (long)24, (long)321}))) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long even = 0;\n    long odd = 0;\n    for(long i = 0; i < lst.size(); i++)\
    \ {\n        if(lst[i] % 2 == 0) {\n            even += lst[i];\n        } else\
    \ {\n            odd += lst[i];\n        }\n    }\n    sum = even + odd;\n   \
    \ return sum;\n}\nint main() {\n    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp5bvhol8g: /tmp/tmp5bvhol8g.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113447
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long even = 0;\n    for(long i = 0; i < lst.size(); i++) {\n        if(lst[i]\
    \ % 2 == 0) {\n            even = even + lst[i];\n        }\n        else {\n\
    \            sum = sum + even;\n            even = 0;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpne_9hmxl: /tmp/tmpne_9hmxl.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long n = lst.size();\n    for(int i = 0; i < n; i++) {\n        if(lst[i]\
    \ % 2 == 0) {\n            sum += lst[i];\n        }\n    }\n    return sum;\n\
    }\nint main() {\n    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmpv_s253l_: /tmp/tmpv_s253l_.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113447
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long even = 0;\n    for(long i = 0; i < lst.size(); i++) {\n        if(lst[i]\
    \ % 2 == 0) {\n            even += lst[i];\n        }\n        else {\n      \
    \      sum += even;\n            even = 0;\n        }\n    }\n    return sum;\n\
    }\nint main() {\n    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp2i_uw3__: /tmp/tmp2i_uw3__.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113447
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   long n = lst.size();\n    long i = 0;\n    long j = 0;\n    long k = 0;\n\
    \    long temp = 0;\n    long count = 0;\n    while(i < n) {\n        temp = lst[i];\n\
    \        j = i;\n        while(j < n) {\n            if(lst[j] % 2 == 0) {\n \
    \               count++;\n            }\n            j++;\n        }\n       \
    \ while(j < n) {\n            if(lst[j] % 2 != 0) {\n                count++;\n\
    \            }\n            j++;\n        }\n        if(count == 2) {\n      \
    \      sum += temp;\n        }\n        count = 0;\n        i++;\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = solution;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)8, (long)7, (long)1}))) == (12));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)3, (long)3, (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp2y_3_hzd: /tmp/tmp2y_3_hzd.cpp:42: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113447
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty list\
    \ of integers, return the sum of all of the odd elements that are in even positions.\n\
    // Examples\n// >>> solution([5, 8, 7, 1]) \n// 12\n// >>> solution([3, 3, 3,\
    \ 3, 3]) \n// 9\nlong solution(std::vector<long> lst) {\n    long sum = 0;\n \
    \   for (long i : lst) {\n        if (i % 2 == 0) {\n            sum += i;\n \
    \       }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = solution;\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)8, (long)7, (long)1})))\
    \ == (12));\n    assert(candidate((std::vector<long>({(long)3, (long)3, (long)3,\
    \ (long)3, (long)3}))) == (9));\n    assert(candidate((std::vector<long>({(long)30,\
    \ (long)13, (long)24, (long)321}))) == (0));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)9}))) == (5));\n    assert(candidate((std::vector<long>({(long)2, (long)4,\
    \ (long)8}))) == (0));\n    assert(candidate((std::vector<long>({(long)30, (long)13,\
    \ (long)23, (long)32}))) == (23));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)13, (long)2, (long)9}))) == (3));\n}\n"
  status: Exception
  stderr: 'tmp3cb_59od: /tmp/tmp3cb_59od.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)8, (long)7, (long)1}))) == (12)'' failed.

    '
  stdout: ''
  timestamp: 1660113445

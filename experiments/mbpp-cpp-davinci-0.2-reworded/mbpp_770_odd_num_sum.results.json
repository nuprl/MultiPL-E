{
  "name": "mbpp_770_odd_num_sum",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_770_odd_num_sum.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    assert(n>=0);\n    long sum = 0;\n    for(long i=1;i<=n;i++) {\n        sum += pow(2*i-1,4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        if(i % 2 != 0) {\n            sum += pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "tmp5brs0au6: /tmp/tmp5brs0au6.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    assert(n>=0);\n    long sum=0;\n    for(long i=1;i<=n;i++) {\n        sum+=(i*i*i*i);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "tmp5w2zrvp1: /tmp/tmp5w2zrvp1.cpp:14: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (int i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        if (i % 2 != 0) {\n            sum += pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "tmp85wrbti0: /tmp/tmp85wrbti0.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (int i = 1; i <= n; i++) {\n        if (i % 2 != 0) {\n            sum += pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "tmp_px5wlos: /tmp/tmp_px5wlos.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        if (i % 2 != 0) {\n            sum += pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "tmp85wrbti0: /tmp/tmp85wrbti0.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    assert(n>=0);\n    long sum = 0;\n    for (int i = 1; i <= n; i++) {\n        sum += pow(2*i-1,4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    assert(n>=0);\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    assert(n>=0);\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    assert(n>=0);\n    long sum=0;\n    for(int i=1;i<=n;i++) {\n        sum+=pow(2*i-1,4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        if (i % 2 != 0) {\n            sum += pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "tmp85wrbti0: /tmp/tmp85wrbti0.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    assert(n>=0);\n    long sum=0;\n    for(long i=1;i<=n;i++) {\n        sum+=pow(2*i-1,4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(int i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (int i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (int i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    assert(n>=0);\n    long sum=0;\n    for(long i=1;i<=n;i++)\n    {\n        sum=sum+pow(2*i-1,4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (int i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        if(i % 2 != 0) {\n            sum += pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "tmp5brs0au6: /tmp/tmp5brs0au6.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (int i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(int i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (int i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n  long sum = 0;\n  for (long i = 1; i <= n; i++) {\n    sum += pow(2 * i - 1, 4);\n  }\n  return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (int i = 1; i <= n; i++) {\n        if (i % 2 != 0) {\n            sum += pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "tmp_px5wlos: /tmp/tmp_px5wlos.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    assert(n>=0);\n    long sum = 0;\n    for(long i=1;i<=n;i++) {\n        sum += pow(2*i-1,4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    assert(n>=0);\n    long sum = 0;\n    for(long i=1;i<=n;i++) {\n        sum += pow(2*i-1,4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    assert(n>=0);\n    long sum=0;\n    for(long i=1;i<=n;i++) {\n        sum+=pow(2*i-1,4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    assert(n>=0);\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    assert(n>=0);\n    long sum = 0;\n    for(long i=1;i<=n;i++) {\n        sum += pow(2*i-1,4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    assert(n>=0);\n    long sum=0;\n    for(long i=1;i<=n;i++) {\n        sum+=pow(2*i-1,4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    assert(n>=0);\n    long sum = 0;\n    for(int i=1;i<=n;i++) {\n        sum += pow(2*i-1,4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    assert(n>=0);\n    long sum=0;\n    for(long i=1;i<=n;i++) {\n        sum=sum+(i*i*i*i);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "tmp0ht_pgfg: /tmp/tmp0ht_pgfg.cpp:14: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum=0;\n    for(int i=1;i<=n;i++) {\n        sum+=pow(2*i-1,4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (int i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    assert(n>=0);\n    long sum=0;\n    for(int i=1;i<=n;i++) {\n        sum+=pow(2*i-1,4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (int i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (int i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n  long sum = 0;\n  for (int i = 1; i <= n; i++) {\n    sum += pow(2 * i - 1, 4);\n  }\n  return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (int i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (int i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n  long sum = 0;\n  for(long i = 1; i <= n; i++) {\n    sum += pow(2 * i - 1, 4);\n  }\n  return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (int i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (int i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (int i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    assert(n>0);\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(int i=1;i<=n;i++) {\n        sum += pow(2*i-1,4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(int i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        if (i % 2 != 0) {\n            sum += pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "tmp85wrbti0: /tmp/tmp85wrbti0.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    assert(n>=0);\n    long sum=0;\n    for(int i=1;i<=n;i++) {\n        sum=sum+(i*i*i*i);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "tmpvmepnhh1: /tmp/tmpvmepnhh1.cpp:14: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    assert(n>=0);\n    long sum = 0;\n    for (long i=1; i<=n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    assert(n>=0);\n    long sum=0;\n    for(long i=1;i<=n;i++) {\n        sum=sum+pow(2*i-1,4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    assert(n>0);\n    long sum = 0;\n    for(int i=1;i<=n;i++) {\n        sum += pow(2*i-1,4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (int i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (int i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        if (i % 2 != 0) {\n            sum += pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "tmp85wrbti0: /tmp/tmp85wrbti0.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    assert(n>=0);\n    long sum=0;\n    for(long i=1;i<=n;i++) {\n        sum+=pow(2*i-1,4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(int i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(int i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum = sum + pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (int i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    assert(n>=0);\n    long sum = 0;\n    for (long i=1; i<=n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (int i = 1; i <= n; i++) {\n        if (i % 2 != 0) {\n            sum += pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "tmp_px5wlos: /tmp/tmp_px5wlos.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (int i = 1; i <= n; i++) {\n        if (i % 2 != 0) {\n            sum += pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "tmp_px5wlos: /tmp/tmp_px5wlos.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        if (i % 2 != 0) {\n            sum += pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "tmp85wrbti0: /tmp/tmp85wrbti0.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        if (i % 2 != 0) {\n            sum += pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "tmp85wrbti0: /tmp/tmp85wrbti0.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    assert(n>=0);\n    long sum = 0;\n    for(int i=1;i<=n;i++) {\n        sum += pow(2*i-1,4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        if (i % 2 != 0) {\n            sum += pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "tmp85wrbti0: /tmp/tmp85wrbti0.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n  long sum = 0;\n  for (long i = 1; i <= n; i++) {\n    sum += pow(2 * i - 1, 4);\n  }\n  return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        if (i % 2 != 0) {\n            sum = sum + pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122548,
      "stdout": "",
      "stderr": "tmpun3h328z: /tmp/tmpun3h328z.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (int i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n  long sum = 0;\n  for (long i = 1; i <= n; i++) {\n    sum += pow(2 * i - 1, 4);\n  }\n  return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        if (i % 2 != 0) {\n            sum += pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "tmp85wrbti0: /tmp/tmp85wrbti0.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    assert(n>=0);\n    long sum=0;\n    for(long i=1;i<=n;i++) {\n        sum+=pow(2*i-1,4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    assert(n>=0);\n    long sum = 0;\n    for(long i=1;i<=n;i++) {\n        sum += pow(2*i-1,4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    assert(n>=0);\n    long sum=0;\n    for(long i=1;i<=n;i++) {\n        sum+=pow(2*i-1,4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (int i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    assert(n>=0);\n    long sum=0;\n    for(int i=1;i<=n;i++) {\n        sum+=pow(2*i-1,4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    assert(n>=0);\n    long sum = 0;\n    for(long i=1;i<=n;i++) {\n        sum += pow(2*i-1,4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    assert(n>=0);\n    long sum=0;\n    for(int i=1;i<=n;i++)\n    {\n        sum=sum+pow(2*i-1,4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122548,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    assert(n>=0);\n    long sum=0;\n    for(int i=1;i<=n;i++)\n        sum+=pow(2*i-1,4);\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122548,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (int i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (int i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (int i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(int i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum = sum + pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n  long sum = 0;\n  for(long i = 1; i <= n; i++) {\n    sum += pow(2*i - 1, 4);\n  }\n  return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122548,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        if (i % 2 != 0) {\n            sum = sum + pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122548,
      "stdout": "",
      "stderr": "tmpun3h328z: /tmp/tmpun3h328z.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    return n*n*n*n;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122548,
      "stdout": "",
      "stderr": "tmpv5_oeuv1: /tmp/tmpv5_oeuv1.cpp:9: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    }
  ]
}
{
  "name": "mbpp_11_remove_Occ",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to remove first and last occurrence of a given character from the string.\nstd::string remove_Occ(std::string s, std::string ch) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_11_remove_Occ.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = remove_Occ;\n    assert(candidate((\"hello\"), (\"l\")) == (\"heo\"));\n    assert(candidate((\"abcda\"), (\"a\")) == (\"bcd\"));\n    assert(candidate((\"PHP\"), (\"P\")) == (\"H\"));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    int i = 0;\n    while (s[i] != ch[0]) {\n        i++;\n    }\n    s.erase(i, 1);\n    i = s.length() - 1;\n    while (s[i] != ch[0]) {\n        i--;\n    }\n    s.erase(i, 1);\n    return s;",
    "    int i = 0;\n    int j = s.length() - 1;\n    while (i < s.length() && s[i] != ch[0]) {\n        i++;\n    }\n    while (j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if (i == s.length() || j == -1) {\n        return s;\n    }\n    return s.substr(0, i) + s.substr(i + 1, j - i - 1) + s.substr(j + 1, s.length() - j - 1);",
    "\tint n = s.length();\n\tint i = 0;\n\twhile (i < n) {\n\t\tif (s[i] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\tint j = n - 1;\n\twhile (j >= 0) {\n\t\tif (s[j] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t\tj--;\n\t}\n\tstd::string ans = \"\";\n\tfor (int k = 0; k < i; k++) {\n\t\tans += s[k];\n\t}\n\tfor (int k = i + 1; k < j; k++) {\n\t\tans += s[k];\n\t}\n\tfor (int k = j + 1; k < n; k++) {\n\t\tans += s[k];\n\t}\n\treturn ans;",
    "\tstd::string::iterator it = s.begin();\n\twhile (it != s.end()) {\n\t\tif (*it == ch[0]) {\n\t\t\ts.erase(it);\n\t\t\tbreak;\n\t\t}\n\t\tit++;\n\t}\n\tstd::string::reverse_iterator rit = s.rbegin();\n\twhile (rit != s.rend()) {\n\t\tif (*rit == ch[0]) {\n\t\t\ts.erase(rit.base() - 1);\n\t\t\tbreak;\n\t\t}\n\t\trit++;\n\t}\n\treturn s;",
    "    int n = s.length();\n    int i = 0;\n    while (i < n) {\n        if (s[i] == ch[0]) {\n            break;\n        }\n        i++;\n    }\n    int j = n - 1;\n    while (j >= 0) {\n        if (s[j] == ch[0]) {\n            break;\n        }\n        j--;\n    }\n    if (i == n || j == -1) {\n        return s;\n    }\n    std::string ans = \"\";\n    for (int k = 0; k < i; k++) {\n        ans += s[k];\n    }\n    for (int k = j + 1; k < n; k++) {\n        ans += s[k];\n    }\n    return ans;",
    "\tint n = s.length();\n\tint i = 0;\n\twhile (i < n) {\n\t\tif (s[i] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\tint j = n - 1;\n\twhile (j >= 0) {\n\t\tif (s[j] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t\tj--;\n\t}\n\tstd::string ans = \"\";\n\tfor (int k = 0; k < i; k++) {\n\t\tans += s[k];\n\t}\n\tfor (int k = i + 1; k < j; k++) {\n\t\tans += s[k];\n\t}\n\tfor (int k = j + 1; k < n; k++) {\n\t\tans += s[k];\n\t}\n\treturn ans;",
    "    int i = 0;\n    while(s[i] != ch[0]) {\n        i++;\n    }\n    s.erase(i, 1);\n    i = s.size() - 1;\n    while(s[i] != ch[0]) {\n        i--;\n    }\n    s.erase(i, 1);\n    return s;",
    "    int n = s.length();\n    int index = s.find(ch);\n    if (index == -1) {\n        return s;\n    }\n    s.erase(index, 1);\n    index = s.rfind(ch);\n    s.erase(index, 1);\n    return s;",
    "    int i = 0;\n    int j = s.length() - 1;\n    while (i < s.length() && s[i] != ch[0]) {\n        i++;\n    }\n    while (j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if (i == s.length() || j == -1) {\n        return s;\n    }\n    return s.substr(0, i) + s.substr(i + 1, j - i - 1) + s.substr(j + 1);",
    "    int i = s.find(ch);\n    int j = s.find_last_of(ch);\n    if(i == -1) {\n        return s;\n    }\n    if(i == j) {\n        return s.substr(0, i) + s.substr(i+1, s.length());\n    }\n    return s.substr(0, i) + s.substr(i+1, s.length()) + s.substr(0, j) + s.substr(j+1, s.length());",
    "\tint n = s.length();\n\tint i = 0;\n\twhile (i < n) {\n\t\tif (s[i] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\tint j = n - 1;\n\twhile (j >= 0) {\n\t\tif (s[j] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t\tj--;\n\t}\n\tif (i == n || j == -1) {\n\t\treturn s;\n\t}\n\tstd::string ans = \"\";\n\tfor (int k = 0; k < i; k++) {\n\t\tans += s[k];\n\t}\n\tfor (int k = i + 1; k < j; k++) {\n\t\tans += s[k];\n\t}\n\tfor (int k = j + 1; k < n; k++) {\n\t\tans += s[k];\n\t}\n\treturn ans;",
    "\tint i = 0;\n\tint j = s.length() - 1;\n\twhile (i < s.length() && s[i] != ch[0]) {\n\t\ti++;\n\t}\n\twhile (j >= 0 && s[j] != ch[0]) {\n\t\tj--;\n\t}\n\tif (i == s.length() || j == -1) {\n\t\treturn s;\n\t}\n\treturn s.substr(0, i) + s.substr(i + 1, j - i - 1) + s.substr(j + 1);",
    "    int i = 0;\n    while(s[i] != ch[0]) {\n        i++;\n    }\n    s.erase(i, 1);\n    int j = s.length() - 1;\n    while(s[j] != ch[0]) {\n        j--;\n    }\n    s.erase(j, 1);\n    return s;",
    "\tint i = 0;\n\tint j = s.length() - 1;\n\twhile (i < s.length() && s[i] != ch[0]) {\n\t\ti++;\n\t}\n\twhile (j >= 0 && s[j] != ch[0]) {\n\t\tj--;\n\t}\n\tif (i == s.length() || j == -1) {\n\t\treturn s;\n\t}\n\treturn s.substr(0, i) + s.substr(i + 1, j - i - 1) + s.substr(j + 1);",
    "    int n = s.length();\n    int i = 0;\n    int j = n - 1;\n    while (i < n) {\n        if (s[i] == ch[0]) {\n            break;\n        }\n        i++;\n    }\n    while (j >= 0) {\n        if (s[j] == ch[0]) {\n            break;\n        }\n        j--;\n    }\n    if (i == n || j == -1) {\n        return s;\n    }\n    std::string ans = \"\";\n    for (int k = 0; k < i; k++) {\n        ans += s[k];\n    }\n    for (int k = j + 1; k < n; k++) {\n        ans += s[k];\n    }\n    return ans;",
    "\tint i = 0;\n\twhile (s[i] != ch[0]) {\n\t\ti++;\n\t}\n\ts.erase(i, 1);\n\ti = s.size() - 1;\n\twhile (s[i] != ch[0]) {\n\t\ti--;\n\t}\n\ts.erase(i, 1);\n\treturn s;",
    "    int i = 0;\n    while(s[i] != ch[0]) {\n        i++;\n    }\n    s.erase(s.begin() + i);\n    i = s.length() - 1;\n    while(s[i] != ch[0]) {\n        i--;\n    }\n    s.erase(s.begin() + i);\n    return s;",
    "\tint i = s.find(ch);\n\tint j = s.rfind(ch);\n\ts.erase(i, 1);\n\ts.erase(j - 1, 1);\n\treturn s;",
    "    int n = s.length();\n    int i = 0;\n    int j = n - 1;\n    while (i < n && s[i] != ch[0]) {\n        i++;\n    }\n    while (j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if (i == n || j == -1) {\n        return s;\n    }\n    std::string ans = \"\";\n    for (int k = 0; k < i; k++) {\n        ans += s[k];\n    }\n    for (int k = i + 1; k < j; k++) {\n        ans += s[k];\n    }\n    for (int k = j + 1; k < n; k++) {\n        ans += s[k];\n    }\n    return ans;",
    "\tint i = 0;\n\twhile (s[i] != ch[0]) {\n\t\ti++;\n\t}\n\ts.erase(i, 1);\n\tint j = s.length() - 1;\n\twhile (s[j] != ch[0]) {\n\t\tj--;\n\t}\n\ts.erase(j, 1);\n\treturn s;",
    "\tint n = s.length();\n\tint i = 0;\n\tint j = n - 1;\n\twhile (i < n) {\n\t\tif (s[i] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\twhile (j >= 0) {\n\t\tif (s[j] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t\tj--;\n\t}\n\tif (i == n || j == -1) {\n\t\treturn s;\n\t}\n\tstd::string ans = \"\";\n\tfor (int k = 0; k < i; k++) {\n\t\tans += s[k];\n\t}\n\tfor (int k = i + 1; k < j; k++) {\n\t\tans += s[k];\n\t}\n\tfor (int k = j + 1; k < n; k++) {\n\t\tans += s[k];\n\t}\n\treturn ans;",
    "    int n = s.length();\n    int i = 0;\n    while(i < n) {\n        if(s[i] == ch[0]) {\n            s.erase(i, 1);\n            break;\n        }\n        i++;\n    }\n    int j = n-1;\n    while(j >= 0) {\n        if(s[j] == ch[0]) {\n            s.erase(j, 1);\n            break;\n        }\n        j--;\n    }\n    return s;",
    "\tint n = s.length();\n\tint i = 0;\n\tint j = n - 1;\n\twhile (i < n) {\n\t\tif (s[i] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\twhile (j >= 0) {\n\t\tif (s[j] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t\tj--;\n\t}\n\tif (i == n || j == -1) {\n\t\treturn s;\n\t}\n\tstd::string ans = \"\";\n\tfor (int k = 0; k < n; k++) {\n\t\tif (k == i || k == j) {\n\t\t\tcontinue;\n\t\t}\n\t\tans += s[k];\n\t}\n\treturn ans;",
    "    int i = 0;\n    while(s[i] != ch[0]) {\n        i++;\n    }\n    s.erase(s.begin() + i);\n    i = s.length() - 1;\n    while(s[i] != ch[0]) {\n        i--;\n    }\n    s.erase(s.begin() + i);\n    return s;",
    "    int i = 0;\n    int j = s.length() - 1;\n    while (i < s.length() && s[i] != ch) {\n        i++;\n    }\n    while (j >= 0 && s[j] != ch) {\n        j--;\n    }\n    if (i == s.length() || j == -1) {\n        return s;\n    }\n    return s.substr(0, i) + s.substr(i + 1, j - i - 1) + s.substr(j + 1, s.length() - j - 1);",
    "\tint n = s.length();\n\tint i = 0;\n\tint j = n - 1;\n\twhile (i < n) {\n\t\tif (s[i] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\twhile (j >= 0) {\n\t\tif (s[j] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t\tj--;\n\t}\n\tstd::string ans = \"\";\n\tfor (int k = 0; k < i; k++) {\n\t\tans += s[k];\n\t}\n\tfor (int k = j + 1; k < n; k++) {\n\t\tans += s[k];\n\t}\n\treturn ans;",
    "\tint n = s.length();\n\tint i = 0;\n\twhile (i < n) {\n\t\tif (s[i] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\tint j = n - 1;\n\twhile (j >= 0) {\n\t\tif (s[j] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t\tj--;\n\t}\n\tstd::string ans = \"\";\n\tfor (int k = 0; k < i; k++) {\n\t\tans += s[k];\n\t}\n\tfor (int k = i + 1; k < j; k++) {\n\t\tans += s[k];\n\t}\n\tfor (int k = j + 1; k < n; k++) {\n\t\tans += s[k];\n\t}\n\treturn ans;",
    "\tint n = s.length();\n\tint i = 0;\n\tfor (i = 0; i < n; i++) {\n\t\tif (s[i] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (i == n) {\n\t\treturn s;\n\t}\n\tint j = n - 1;\n\tfor (j = n - 1; j >= 0; j--) {\n\t\tif (s[j] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t}\n\tstd::string ans = \"\";\n\tfor (int k = 0; k < i; k++) {\n\t\tans += s[k];\n\t}\n\tfor (int k = j + 1; k < n; k++) {\n\t\tans += s[k];\n\t}\n\treturn ans;",
    "    int i = 0;\n    int j = s.length() - 1;\n    while (i < s.length() && s[i] != ch[0]) {\n        i++;\n    }\n    while (j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if (i == s.length() || j == -1) {\n        return s;\n    }\n    return s.substr(0, i) + s.substr(i + 1, j - i - 1) + s.substr(j + 1);",
    "    int i = s.find(ch);\n    int j = s.rfind(ch);\n    if (i == -1) {\n        return s;\n    }\n    return s.substr(0, i) + s.substr(i + 1, j - i - 1) + s.substr(j + 1);",
    "    int n = s.length();\n    int i = 0;\n    int j = n - 1;\n    while (i < n && s[i] != ch[0]) {\n        i++;\n    }\n    while (j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if (i == n || j == -1) {\n        return s;\n    }\n    std::string ans = \"\";\n    for (int k = 0; k < n; k++) {\n        if (k != i && k != j) {\n            ans += s[k];\n        }\n    }\n    return ans;",
    "    int n = s.length();\n    int i = 0;\n    while(i < n) {\n        if(s[i] == ch[0]) {\n            s.erase(i, 1);\n            n--;\n        }\n        else {\n            i++;\n        }\n    }\n    return s;",
    "    int n = s.length();\n    int i = 0;\n    int j = n - 1;\n    while (i < n && s[i] != ch) {\n        i++;\n    }\n    while (j >= 0 && s[j] != ch) {\n        j--;\n    }\n    if (i == n || j == -1) {\n        return s;\n    }\n    return s.substr(0, i) + s.substr(i + 1, j - i - 1) + s.substr(j + 1, n - j - 1);",
    "\tint i = 0;\n\twhile (i < s.length()) {\n\t\tif (s[i] == ch[0]) {\n\t\t\ts.erase(i, 1);\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\ti = s.length() - 1;\n\twhile (i >= 0) {\n\t\tif (s[i] == ch[0]) {\n\t\t\ts.erase(i, 1);\n\t\t\tbreak;\n\t\t}\n\t\ti--;\n\t}\n\treturn s;",
    "    int i = s.find(ch);\n    int j = s.rfind(ch);\n    if(i == -1) {\n        return s;\n    }\n    else {\n        s.erase(i,1);\n        s.erase(j-1,1);\n        return s;\n    }",
    "    int i = 0;\n    int j = s.length() - 1;\n    while(i < s.length() && s[i] != ch[0]) {\n        i++;\n    }\n    while(j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if(i == s.length() || j == -1) {\n        return s;\n    }\n    return s.substr(0, i) + s.substr(i+1, j-i-1) + s.substr(j+1, s.length()-j-1);",
    "\tint i = s.find(ch);\n\tint j = s.rfind(ch);\n\tif (i == -1 || j == -1) {\n\t\treturn s;\n\t}\n\treturn s.substr(0, i) + s.substr(i + 1, j - i - 1) + s.substr(j + 1);",
    "    int n = s.length();\n    int i = 0;\n    int j = n-1;\n    while(i < n) {\n        if(s[i] == ch[0]) {\n            break;\n        }\n        i++;\n    }\n    while(j >= 0) {\n        if(s[j] == ch[0]) {\n            break;\n        }\n        j--;\n    }\n    std::string ans = \"\";\n    for(int k = 0; k < n; k++) {\n        if(k < i || k > j) {\n            ans += s[k];\n        }\n    }\n    return ans;",
    "    int n = s.length();\n    int i = 0;\n    int j = n - 1;\n    while (i < n && s[i] != ch[0]) {\n        i++;\n    }\n    while (j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if (i == n || j == -1) {\n        return s;\n    }\n    std::string ans = \"\";\n    for (int k = 0; k < i; k++) {\n        ans += s[k];\n    }\n    for (int k = i + 1; k < j; k++) {\n        ans += s[k];\n    }\n    for (int k = j + 1; k < n; k++) {\n        ans += s[k];\n    }\n    return ans;",
    "    int n = s.length();\n    int i = 0;\n    while(s[i] != ch[0]) {\n        i++;\n    }\n    int j = n - 1;\n    while(s[j] != ch[0]) {\n        j--;\n    }\n    std::string res = \"\";\n    for(int k = 0; k < i; k++) {\n        res += s[k];\n    }\n    for(int k = i + 1; k < j; k++) {\n        res += s[k];\n    }\n    for(int k = j + 1; k < n; k++) {\n        res += s[k];\n    }\n    return res;",
    "    int n = s.length();\n    int i = 0;\n    while (i < n) {\n        if (s[i] == ch[0]) {\n            s.erase(i, 1);\n            break;\n        }\n        i++;\n    }\n    int j = s.length() - 1;\n    while (j >= 0) {\n        if (s[j] == ch[0]) {\n            s.erase(j, 1);\n            break;\n        }\n        j--;\n    }\n    return s;",
    "    int i = 0;\n    int j = s.size() - 1;\n    while(s[i] != ch) {\n        i++;\n    }\n    while(s[j] != ch) {\n        j--;\n    }\n    s.erase(s.begin() + i);\n    s.erase(s.begin() + j - 1);\n    return s;",
    "\tint n = s.length();\n\tint i = 0;\n\twhile (i < n) {\n\t\tif (s[i] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\tint j = n - 1;\n\twhile (j >= 0) {\n\t\tif (s[j] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t\tj--;\n\t}\n\tstd::string ans = \"\";\n\tfor (int k = 0; k < i; k++) {\n\t\tans += s[k];\n\t}\n\tfor (int k = j + 1; k < n; k++) {\n\t\tans += s[k];\n\t}\n\treturn ans;",
    "    int i = 0;\n    int j = s.size() - 1;\n    while (i < s.size() && s[i] != ch[0]) {\n        i++;\n    }\n    while (j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if (i == s.size() || j == -1) {\n        return s;\n    }\n    s.erase(i, 1);\n    s.erase(j - 1, 1);\n    return s;",
    "    int i = 0;\n    while(s[i] != ch[0]) {\n        i++;\n    }\n    s.erase(i, 1);\n    i = s.length() - 1;\n    while(s[i] != ch[0]) {\n        i--;\n    }\n    s.erase(i, 1);\n    return s;",
    "\tint n = s.length();\n\tint i = 0;\n\tint j = n - 1;\n\twhile (i < n) {\n\t\tif (s[i] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\twhile (j >= 0) {\n\t\tif (s[j] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t\tj--;\n\t}\n\tif (i == n || j == -1) {\n\t\treturn s;\n\t}\n\tstd::string ans = \"\";\n\tfor (int k = 0; k < i; k++) {\n\t\tans += s[k];\n\t}\n\tfor (int k = i + 1; k < j; k++) {\n\t\tans += s[k];\n\t}\n\tfor (int k = j + 1; k < n; k++) {\n\t\tans += s[k];\n\t}\n\treturn ans;",
    "  int i = 0;\n  while (s[i] != ch[0]) {\n    i++;\n  }\n  s.erase(i, 1);\n  i = s.length() - 1;\n  while (s[i] != ch[0]) {\n    i--;\n  }\n  s.erase(i, 1);\n  return s;",
    "\tint i = 0;\n\tint j = s.length() - 1;\n\twhile (i < s.length() && s[i] != ch[0]) {\n\t\ti++;\n\t}\n\twhile (j >= 0 && s[j] != ch[0]) {\n\t\tj--;\n\t}\n\tif (i == s.length() || j == -1) {\n\t\treturn s;\n\t}\n\tstd::string ans = \"\";\n\tfor (int k = 0; k < s.length(); k++) {\n\t\tif (k != i && k != j) {\n\t\t\tans += s[k];\n\t\t}\n\t}\n\treturn ans;",
    "    int i = 0;\n    while (i < s.length()) {\n        if (s[i] == ch[0]) {\n            s.erase(i, 1);\n            break;\n        }\n        i++;\n    }\n    i = s.length() - 1;\n    while (i >= 0) {\n        if (s[i] == ch[0]) {\n            s.erase(i, 1);\n            break;\n        }\n        i--;\n    }\n    return s;",
    "\tint n = s.length();\n\tint i = 0;\n\twhile (i < n) {\n\t\tif (s[i] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\tint j = n - 1;\n\twhile (j >= 0) {\n\t\tif (s[j] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t\tj--;\n\t}\n\tstd::string ans = \"\";\n\tfor (int k = 0; k < i; k++) {\n\t\tans += s[k];\n\t}\n\tfor (int k = i + 1; k < j; k++) {\n\t\tans += s[k];\n\t}\n\tfor (int k = j + 1; k < n; k++) {\n\t\tans += s[k];\n\t}\n\treturn ans;",
    "\tint n = s.length();\n\tint i = 0;\n\tint j = n - 1;\n\twhile (i < n && s[i] != ch[0]) {\n\t\ti++;\n\t}\n\twhile (j >= 0 && s[j] != ch[0]) {\n\t\tj--;\n\t}\n\tif (i == n || j == -1) {\n\t\treturn s;\n\t}\n\treturn s.substr(0, i) + s.substr(i + 1, j - i - 1) + s.substr(j + 1, n - j - 1);",
    "\tint pos = s.find(ch);\n\tif (pos == -1) {\n\t\treturn s;\n\t}\n\tint pos1 = s.rfind(ch);\n\tif (pos1 == -1) {\n\t\treturn s;\n\t}\n\tstd::string s1 = s.substr(0, pos);\n\tstd::string s2 = s.substr(pos + 1);\n\tstd::string s3 = s2.substr(0, pos1 - pos - 1);\n\tstd::string s4 = s2.substr(pos1 - pos);\n\tstd::string s5 = s1 + s3 + s4;\n\treturn s5;",
    "\tint n = s.length();\n\tint i = 0;\n\twhile (i < n) {\n\t\tif (s[i] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\ts.erase(i, 1);\n\tint j = n - 1;\n\twhile (j >= 0) {\n\t\tif (s[j] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t\tj--;\n\t}\n\ts.erase(j, 1);\n\treturn s;",
    "    int n = s.length();\n    int i = 0;\n    while (i < n) {\n        if (s[i] == ch[0]) {\n            s.erase(i, 1);\n            n--;\n        }\n        else {\n            i++;\n        }\n    }\n    return s;",
    "\tint i = 0;\n\twhile (s[i] != ch[0]) {\n\t\ti++;\n\t}\n\ts.erase(i, 1);\n\ti = s.size() - 1;\n\twhile (s[i] != ch[0]) {\n\t\ti--;\n\t}\n\ts.erase(i, 1);\n\treturn s;",
    "    int n = s.length();\n    int i = 0;\n    int j = n - 1;\n    while (i < n && s[i] != ch[0]) {\n        i++;\n    }\n    while (j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if (i == n || j == -1) {\n        return s;\n    }\n    std::string ans = \"\";\n    for (int k = 0; k < i; k++) {\n        ans += s[k];\n    }\n    for (int k = i + 1; k < j; k++) {\n        ans += s[k];\n    }\n    for (int k = j + 1; k < n; k++) {\n        ans += s[k];\n    }\n    return ans;",
    "    int n = s.length();\n    int i = 0;\n    int j = n - 1;\n    while (i < n && s[i] != ch[0]) {\n        i++;\n    }\n    while (j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if (i == n || j == -1) {\n        return s;\n    }\n    std::string ans = \"\";\n    for (int k = 0; k < i; k++) {\n        ans += s[k];\n    }\n    for (int k = i + 1; k < j; k++) {\n        ans += s[k];\n    }\n    for (int k = j + 1; k < n; k++) {\n        ans += s[k];\n    }\n    return ans;",
    "    int i = s.find(ch);\n    int j = s.rfind(ch);\n    if(i == -1) {\n        return s;\n    }\n    return s.substr(0, i) + s.substr(i+1, j-i-1) + s.substr(j+1);",
    "\tint n = s.length();\n\tint i = 0;\n\tint j = n - 1;\n\twhile (i < n && s[i] != ch[0]) {\n\t\ti++;\n\t}\n\twhile (j >= 0 && s[j] != ch[0]) {\n\t\tj--;\n\t}\n\tif (i == n || j == -1) {\n\t\treturn s;\n\t}\n\tstd::string ans = \"\";\n\tfor (int k = 0; k < i; k++) {\n\t\tans += s[k];\n\t}\n\tfor (int k = i + 1; k < j; k++) {\n\t\tans += s[k];\n\t}\n\tfor (int k = j + 1; k < n; k++) {\n\t\tans += s[k];\n\t}\n\treturn ans;",
    "    int i = s.find(ch);\n    int j = s.rfind(ch);\n    if (i == -1) {\n        return s;\n    }\n    s.erase(i, 1);\n    s.erase(j - 1, 1);\n    return s;",
    "    int i = 0;\n    int j = s.length() - 1;\n    while (i < s.length() && s[i] != ch[0]) {\n        i++;\n    }\n    while (j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if (i == s.length() || j == -1) {\n        return s;\n    }\n    s.erase(i, 1);\n    s.erase(j - 1, 1);\n    return s;",
    "    int n = s.length();\n    int i = 0;\n    int j = n-1;\n    while(i<n) {\n        if(s[i] == ch[0]) {\n            break;\n        }\n        i++;\n    }\n    while(j>=0) {\n        if(s[j] == ch[0]) {\n            break;\n        }\n        j--;\n    }\n    if(i == n || j == -1) {\n        return s;\n    }\n    std::string res = \"\";\n    for(int k = 0; k<i; k++) {\n        res += s[k];\n    }\n    for(int k = j+1; k<n; k++) {\n        res += s[k];\n    }\n    return res;",
    "    int i = s.find(ch);\n    int j = s.rfind(ch);\n    if (i == -1) {\n        return s;\n    }\n    if (i == j) {\n        s.erase(i, 1);\n        return s;\n    }\n    s.erase(i, 1);\n    s.erase(j - 1, 1);\n    return s;",
    "    int n = s.length();\n    int i = 0;\n    int j = n-1;\n    while(i < n && s[i] != ch[0]) {\n        i++;\n    }\n    while(j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if(i == n || j == -1) {\n        return s;\n    }\n    std::string ans = \"\";\n    for(int k = 0; k < i; k++) {\n        ans += s[k];\n    }\n    for(int k = i+1; k < j; k++) {\n        ans += s[k];\n    }\n    for(int k = j+1; k < n; k++) {\n        ans += s[k];\n    }\n    return ans;",
    "    int i = s.find(ch);\n    int j = s.rfind(ch);\n    if (i == -1) {\n        return s;\n    }\n    else {\n        s.erase(i, 1);\n        s.erase(j - 1, 1);\n        return s;\n    }",
    "\tstd::string res = \"\";\n\tint n = s.length();\n\tint i = 0;\n\twhile (i < n) {\n\t\tif (s[i] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t\tres += s[i];\n\t\ti++;\n\t}\n\ti++;\n\twhile (i < n) {\n\t\tif (s[i] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t\tres += s[i];\n\t\ti++;\n\t}\n\ti++;\n\twhile (i < n) {\n\t\tres += s[i];\n\t\ti++;\n\t}\n\treturn res;",
    "    int n = s.length();\n    int i = 0;\n    int j = n - 1;\n    while (i < n && s[i] != ch[0]) {\n        i++;\n    }\n    while (j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if (i == n || j == -1) {\n        return s;\n    }\n    std::string ans = \"\";\n    for (int k = 0; k < i; k++) {\n        ans += s[k];\n    }\n    for (int k = i + 1; k < j; k++) {\n        ans += s[k];\n    }\n    for (int k = j + 1; k < n; k++) {\n        ans += s[k];\n    }\n    return ans;",
    "    int i = 0;\n    int j = s.length() - 1;\n    while (i < s.length() && s[i] != ch[0]) {\n        i++;\n    }\n    while (j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if (i == s.length() || j == -1) {\n        return s;\n    }\n    s.erase(i, 1);\n    s.erase(j - 1, 1);\n    return s;",
    "    int n = s.length();\n    int i = 0;\n    int j = n - 1;\n    while (i < n && s[i] != ch[0]) {\n        i++;\n    }\n    while (j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if (i == n || j == -1) {\n        return s;\n    }\n    std::string ans = \"\";\n    for (int k = 0; k < n; k++) {\n        if (k != i && k != j) {\n            ans += s[k];\n        }\n    }\n    return ans;",
    "    int n = s.length();\n    int i = 0;\n    while (i < n) {\n        if (s[i] == ch[0]) {\n            s.erase(i, 1);\n            n--;\n        } else {\n            i++;\n        }\n    }\n    return s;",
    "    int i = 0;\n    int j = s.length()-1;\n    while(s[i] != ch) {\n        i++;\n    }\n    while(s[j] != ch) {\n        j--;\n    }\n    s.erase(s.begin()+i);\n    s.erase(s.begin()+j-1);\n    return s;",
    "    int n = s.length();\n    int i = 0;\n    int j = n-1;\n    while(i < n && s[i] != ch[0]) {\n        i++;\n    }\n    while(j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if(i == n || j == -1) {\n        return s;\n    }\n    std::string ans = \"\";\n    for(int k = 0; k < i; k++) {\n        ans += s[k];\n    }\n    for(int k = i+1; k < j; k++) {\n        ans += s[k];\n    }\n    for(int k = j+1; k < n; k++) {\n        ans += s[k];\n    }\n    return ans;",
    "    int i = 0;\n    int j = s.length() - 1;\n    while (i < s.length() && s[i] != ch[0]) {\n        i++;\n    }\n    while (j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if (i == s.length() || j == -1) {\n        return s;\n    }\n    return s.substr(0, i) + s.substr(i + 1, j - i - 1) + s.substr(j + 1);",
    "    int i = s.find(ch);\n    if (i == -1) {\n        return s;\n    }\n    int j = s.rfind(ch);\n    s.erase(i, 1);\n    s.erase(j - 1, 1);\n    return s;",
    "    int i = s.find(ch);\n    int j = s.rfind(ch);\n    if (i != -1) {\n        s.erase(i, 1);\n    }\n    if (j != -1) {\n        s.erase(j, 1);\n    }\n    return s;",
    "    int n = s.length();\n    int i = 0;\n    int j = n-1;\n    while(i < n && s[i] != ch[0]) {\n        i++;\n    }\n    while(j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if(i == n || j == 0) {\n        return s;\n    }\n    return s.substr(0, i) + s.substr(i+1, j-i-1) + s.substr(j+1, n-j-1);",
    "    int i = 0;\n    int j = s.length() - 1;\n    while (i < s.length() && s[i] != ch[0]) {\n        i++;\n    }\n    while (j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if (i == s.length() || j == -1) {\n        return s;\n    }\n    s.erase(i, 1);\n    s.erase(j - 1, 1);\n    return s;",
    "\tint n = s.length();\n\tint i = 0;\n\twhile (i < n) {\n\t\tif (s[i] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\tint j = n - 1;\n\twhile (j >= 0) {\n\t\tif (s[j] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t\tj--;\n\t}\n\tstd::string ans = \"\";\n\tfor (int k = 0; k < i; k++) {\n\t\tans += s[k];\n\t}\n\tfor (int k = i + 1; k < j; k++) {\n\t\tans += s[k];\n\t}\n\tfor (int k = j + 1; k < n; k++) {\n\t\tans += s[k];\n\t}\n\treturn ans;",
    "    int i = 0;\n    int j = s.size() - 1;\n    while (i < s.size() && s[i] != ch[0]) {\n        i++;\n    }\n    while (j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if (i == s.size() || j == -1) {\n        return s;\n    }\n    s.erase(i, 1);\n    s.erase(j - 1, 1);\n    return s;",
    "    int n = s.length();\n    int i = 0;\n    int j = n - 1;\n    while (i < n && s[i] != ch[0]) {\n        i++;\n    }\n    while (j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if (i == n || j == -1) {\n        return s;\n    }\n    std::string ans = \"\";\n    for (int k = 0; k < i; k++) {\n        ans += s[k];\n    }\n    for (int k = i + 1; k < j; k++) {\n        ans += s[k];\n    }\n    for (int k = j + 1; k < n; k++) {\n        ans += s[k];\n    }\n    return ans;",
    "\tint i = 0;\n\twhile (i < s.length()) {\n\t\tif (s[i] == ch[0]) {\n\t\t\ts.erase(i, 1);\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\ti = s.length() - 1;\n\twhile (i >= 0) {\n\t\tif (s[i] == ch[0]) {\n\t\t\ts.erase(i, 1);\n\t\t\tbreak;\n\t\t}\n\t\ti--;\n\t}\n\treturn s;",
    "\tint i = 0;\n\tint j = s.length() - 1;\n\twhile (i < s.length() && s[i] != ch[0]) {\n\t\ti++;\n\t}\n\twhile (j >= 0 && s[j] != ch[0]) {\n\t\tj--;\n\t}\n\tif (i == s.length() || j == -1) {\n\t\treturn s;\n\t}\n\treturn s.substr(0, i) + s.substr(i + 1, j - i - 1) + s.substr(j + 1, s.length() - j - 1);",
    "    std::string::iterator it;\n    it = std::find(s.begin(), s.end(), ch[0]);\n    if (it != s.end()) {\n        s.erase(it);\n    }\n    it = std::find(s.rbegin(), s.rend(), ch[0]);\n    if (it != s.rend()) {\n        s.erase(it.base() - 1);\n    }\n    return s;",
    "    int i = 0;\n    int j = s.length() - 1;\n    while(i < s.length() && s[i] != ch[0]) {\n        i++;\n    }\n    while(j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if(i == s.length() || j == -1) {\n        return s;\n    }\n    return s.substr(0, i) + s.substr(i + 1, j - i - 1) + s.substr(j + 1, s.length() - j - 1);",
    "    int index = s.find(ch);\n    if (index == -1) {\n        return s;\n    }\n    s.erase(index, 1);\n    index = s.rfind(ch);\n    s.erase(index, 1);\n    return s;",
    "    int n = s.length();\n    int i = 0;\n    int j = n - 1;\n    while(i < n && s[i] != ch) {\n        i++;\n    }\n    while(j >= 0 && s[j] != ch) {\n        j--;\n    }\n    if(i == n || j == -1) {\n        return s;\n    }\n    std::string ans = \"\";\n    for(int k = 0; k < i; k++) {\n        ans += s[k];\n    }\n    for(int k = i + 1; k < j; k++) {\n        ans += s[k];\n    }\n    for(int k = j + 1; k < n; k++) {\n        ans += s[k];\n    }\n    return ans;",
    "\tstd::string res = \"\";\n\tint i = 0;\n\twhile (i < s.length()) {\n\t\tif (s[i] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t\tres += s[i];\n\t\ti++;\n\t}\n\ti++;\n\twhile (i < s.length()) {\n\t\tif (s[i] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t\tres += s[i];\n\t\ti++;\n\t}\n\ti++;\n\twhile (i < s.length()) {\n\t\tres += s[i];\n\t\ti++;\n\t}\n\treturn res;",
    "    int i = 0;\n    while (s[i] != ch[0]) {\n        i++;\n    }\n    s.erase(i, 1);\n    i = s.length() - 1;\n    while (s[i] != ch[0]) {\n        i--;\n    }\n    s.erase(i, 1);\n    return s;",
    "    int n = s.length();\n    int i = 0;\n    while(i < n) {\n        if(s[i] == ch[0]) {\n            break;\n        }\n        i++;\n    }\n    int j = n - 1;\n    while(j >= 0) {\n        if(s[j] == ch[0]) {\n            break;\n        }\n        j--;\n    }\n    std::string ans = \"\";\n    for(int k = 0; k < i; k++) {\n        ans += s[k];\n    }\n    for(int k = j + 1; k < n; k++) {\n        ans += s[k];\n    }\n    return ans;",
    "    std::string::iterator it;\n    std::string::iterator it1;\n    it = std::find(s.begin(), s.end(), ch[0]);\n    it1 = std::find(s.rbegin(), s.rend(), ch[0]);\n    s.erase(it);\n    s.erase(it1.base()-1);\n    return s;",
    "    int n = s.length();\n    int i = 0;\n    while (i < n) {\n        if (s[i] == ch[0]) {\n            break;\n        }\n        i++;\n    }\n    if (i == n) {\n        return s;\n    }\n    int j = n - 1;\n    while (j >= 0) {\n        if (s[j] == ch[0]) {\n            break;\n        }\n        j--;\n    }\n    if (j == -1) {\n        return s;\n    }\n    return s.substr(0, i) + s.substr(i + 1, j - i - 1) + s.substr(j + 1, n - j - 1);",
    "    int n = s.length();\n    int i = 0;\n    while(i < n) {\n        if(s[i] == ch[0]) {\n            s.erase(i, 1);\n            n--;\n        }\n        else i++;\n    }\n    return s;",
    "    int n = s.length();\n    int i = 0;\n    while (i < n) {\n        if (s[i] == ch[0]) {\n            s.erase(i, 1);\n            n--;\n        }\n        else {\n            i++;\n        }\n    }\n    return s;",
    "    int n = s.length();\n    int i = 0;\n    int j = n-1;\n    while(i<n && s[i] != ch[0]) {\n        i++;\n    }\n    while(j>=0 && s[j] != ch[0]) {\n        j--;\n    }\n    if(i == n || j == -1) {\n        return s;\n    }\n    std::string ans = \"\";\n    for(int k=0;k<i;k++) {\n        ans += s[k];\n    }\n    for(int k=i+1;k<j;k++) {\n        ans += s[k];\n    }\n    for(int k=j+1;k<n;k++) {\n        ans += s[k];\n    }\n    return ans;",
    "    int i = 0;\n    while(s[i] != ch[0]) {\n        i++;\n    }\n    s.erase(i, 1);\n    i = s.length() - 1;\n    while(s[i] != ch[0]) {\n        i--;\n    }\n    s.erase(i, 1);\n    return s;",
    "    int i = 0;\n    while(s[i] != ch[0]) {\n        i++;\n    }\n    s.erase(i, 1);\n    i = s.length() - 1;\n    while(s[i] != ch[0]) {\n        i--;\n    }\n    s.erase(i, 1);\n    return s;",
    "    int n = s.length();\n    int i = 0;\n    int j = n - 1;\n    while (i < n && s[i] != ch[0]) {\n        i++;\n    }\n    while (j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if (i == n || j == -1) {\n        return s;\n    }\n    std::string ans = \"\";\n    for (int k = 0; k < i; k++) {\n        ans += s[k];\n    }\n    for (int k = i + 1; k < j; k++) {\n        ans += s[k];\n    }\n    for (int k = j + 1; k < n; k++) {\n        ans += s[k];\n    }\n    return ans;",
    "    int n = s.length();\n    int i = 0;\n    while(i < n) {\n        if(s[i] == ch[0]) {\n            break;\n        }\n        i++;\n    }\n    if(i == n) {\n        return s;\n    }\n    int j = n - 1;\n    while(j >= 0) {\n        if(s[j] == ch[0]) {\n            break;\n        }\n        j--;\n    }\n    if(j == -1) {\n        return s;\n    }\n    std::string ans = \"\";\n    for(int k = 0; k < i; k++) {\n        ans += s[k];\n    }\n    for(int k = i + 1; k < j; k++) {\n        ans += s[k];\n    }\n    for(int k = j + 1; k < n; k++) {\n        ans += s[k];\n    }\n    return ans;",
    "\tint n = s.length();\n\tint i = 0;\n\twhile (i < n) {\n\t\tif (s[i] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\tint j = n - 1;\n\twhile (j >= 0) {\n\t\tif (s[j] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t\tj--;\n\t}\n\tif (i == n || j == -1) {\n\t\treturn s;\n\t}\n\tstd::string ans = \"\";\n\tfor (int k = 0; k < i; k++) {\n\t\tans += s[k];\n\t}\n\tfor (int k = j + 1; k < n; k++) {\n\t\tans += s[k];\n\t}\n\treturn ans;",
    "    int n = s.length();\n    int i = 0;\n    int j = n - 1;\n    while (i < n && s[i] != ch[0]) {\n        i++;\n    }\n    while (j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if (i == n || j == -1) {\n        return s;\n    }\n    std::string ans = \"\";\n    for (int k = 0; k < i; k++) {\n        ans += s[k];\n    }\n    for (int k = i + 1; k < j; k++) {\n        ans += s[k];\n    }\n    for (int k = j + 1; k < n; k++) {\n        ans += s[k];\n    }\n    return ans;",
    "    int i = 0;\n    int j = s.length() - 1;\n    while (i < s.length() && s[i] != ch[0]) {\n        i++;\n    }\n    while (j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if (i == s.length() || j == -1) {\n        return s;\n    }\n    s.erase(i, 1);\n    s.erase(j - 1, 1);\n    return s;",
    "    int n = s.length();\n    int i = 0;\n    while (i < n) {\n        if (s[i] == ch[0]) {\n            s.erase(i, 1);\n            break;\n        }\n        i++;\n    }\n    i = n - 1;\n    while (i >= 0) {\n        if (s[i] == ch[0]) {\n            s.erase(i, 1);\n            break;\n        }\n        i--;\n    }\n    return s;",
    "\tstd::string res = \"\";\n\tint i = 0;\n\twhile (i < s.length()) {\n\t\tif (s[i] != ch[0]) {\n\t\t\tres += s[i];\n\t\t}\n\t\ti++;\n\t}\n\treturn res;",
    "    int i = 0;\n    int j = s.length() - 1;\n    while (i < s.length() && s[i] != ch[0]) {\n        i++;\n    }\n    while (j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if (i == s.length() || j == -1) {\n        return s;\n    }\n    s.erase(i, 1);\n    s.erase(j - 1, 1);\n    return s;",
    "    int i = 0;\n    int j = s.length() - 1;\n    while (i < s.length() && s[i] != ch[0]) {\n        i++;\n    }\n    while (j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if (i == s.length() || j == -1) {\n        return s;\n    }\n    return s.substr(0, i) + s.substr(i + 1, j - i - 1) + s.substr(j + 1, s.length() - j - 1);",
    "    int n = s.length();\n    int i = 0;\n    int j = n - 1;\n    while (i < n && s[i] != ch[0]) {\n        i++;\n    }\n    while (j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if (i == n || j == -1) {\n        return s;\n    }\n    std::string ans = \"\";\n    for (int k = 0; k < i; k++) {\n        ans += s[k];\n    }\n    for (int k = i + 1; k < j; k++) {\n        ans += s[k];\n    }\n    for (int k = j + 1; k < n; k++) {\n        ans += s[k];\n    }\n    return ans;",
    "\tint n = s.length();\n\tint i = 0;\n\twhile (i < n) {\n\t\tif (s[i] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\tint j = n - 1;\n\twhile (j >= 0) {\n\t\tif (s[j] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t\tj--;\n\t}\n\tstd::string ans = \"\";\n\tfor (int k = 0; k < i; k++) {\n\t\tans += s[k];\n\t}\n\tfor (int k = i + 1; k < j; k++) {\n\t\tans += s[k];\n\t}\n\tfor (int k = j + 1; k < n; k++) {\n\t\tans += s[k];\n\t}\n\treturn ans;",
    "    int i = s.find(ch);\n    int j = s.rfind(ch);\n    if (i == -1) {\n        return s;\n    }\n    if (i == j) {\n        s.erase(i, 1);\n    }\n    else {\n        s.erase(i, 1);\n        s.erase(j - 1, 1);\n    }\n    return s;",
    "\tint i = s.find(ch);\n\tint j = s.rfind(ch);\n\tif (i == -1) {\n\t\treturn s;\n\t}\n\ts.erase(i, 1);\n\ts.erase(j - 1, 1);\n\treturn s;",
    "    int n = s.length();\n    int i = 0;\n    while(i < n) {\n        if(s[i] == ch[0]) {\n            break;\n        }\n        i++;\n    }\n    if(i == n) {\n        return s;\n    }\n    int j = n - 1;\n    while(j >= 0) {\n        if(s[j] == ch[0]) {\n            break;\n        }\n        j--;\n    }\n    if(j < 0) {\n        return s;\n    }\n    std::string ans = \"\";\n    for(int k = 0; k < i; k++) {\n        ans += s[k];\n    }\n    for(int k = j + 1; k < n; k++) {\n        ans += s[k];\n    }\n    return ans;",
    "\tint n = s.length();\n\tint i = 0;\n\twhile (i < n) {\n\t\tif (s[i] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\tint j = n - 1;\n\twhile (j >= 0) {\n\t\tif (s[j] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t\tj--;\n\t}\n\tstd::string ans = \"\";\n\tfor (int k = 0; k < i; k++) {\n\t\tans += s[k];\n\t}\n\tfor (int k = i + 1; k < j; k++) {\n\t\tans += s[k];\n\t}\n\tfor (int k = j + 1; k < n; k++) {\n\t\tans += s[k];\n\t}\n\treturn ans;",
    "    int n = s.length();\n    int i = 0;\n    int j = n - 1;\n    while (i < n && s[i] != ch[0]) {\n        i++;\n    }\n    while (j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if (i == n || j == -1) {\n        return s;\n    }\n    std::string ans = \"\";\n    for (int k = 0; k < i; k++) {\n        ans += s[k];\n    }\n    for (int k = i + 1; k < j; k++) {\n        ans += s[k];\n    }\n    for (int k = j + 1; k < n; k++) {\n        ans += s[k];\n    }\n    return ans;",
    "    int n = s.length();\n    int i = 0;\n    int j = n - 1;\n    while (i < n && s[i] != ch[0]) {\n        i++;\n    }\n    while (j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if (i == n || j == -1) {\n        return s;\n    }\n    std::string ans = \"\";\n    for (int k = 0; k < i; k++) {\n        ans += s[k];\n    }\n    for (int k = i + 1; k < j; k++) {\n        ans += s[k];\n    }\n    for (int k = j + 1; k < n; k++) {\n        ans += s[k];\n    }\n    return ans;",
    "    int n = s.length();\n    int i = 0;\n    int j = n - 1;\n    int flag = 0;\n    while (i < n) {\n        if (s[i] == ch[0]) {\n            flag = 1;\n            break;\n        }\n        i++;\n    }\n    if (flag == 0) {\n        return s;\n    }\n    while (j >= 0) {\n        if (s[j] == ch[0]) {\n            break;\n        }\n        j--;\n    }\n    std::string ans = \"\";\n    for (int k = 0; k < i; k++) {\n        ans += s[k];\n    }\n    for (int k = j + 1; k < n; k++) {\n        ans += s[k];\n    }\n    return ans;",
    "    int i = 0;\n    while(s[i] != ch[0]) {\n        i++;\n    }\n    s.erase(i, 1);\n    i = s.size() - 1;\n    while(s[i] != ch[0]) {\n        i--;\n    }\n    s.erase(i, 1);\n    return s;",
    "\tint i = 0;\n\twhile (s[i] != ch[0]) {\n\t\ti++;\n\t}\n\ts.erase(s.begin() + i);\n\ti = s.size() - 1;\n\twhile (s[i] != ch[0]) {\n\t\ti--;\n\t}\n\ts.erase(s.begin() + i);\n\treturn s;",
    "    int n = s.length();\n    int i = 0;\n    while (i < n) {\n        if (s[i] == ch[0]) {\n            break;\n        }\n        i++;\n    }\n    int j = n - 1;\n    while (j >= 0) {\n        if (s[j] == ch[0]) {\n            break;\n        }\n        j--;\n    }\n    std::string ans = \"\";\n    for (int k = 0; k < i; k++) {\n        ans += s[k];\n    }\n    for (int k = i + 1; k < j; k++) {\n        ans += s[k];\n    }\n    for (int k = j + 1; k < n; k++) {\n        ans += s[k];\n    }\n    return ans;",
    "    int i = 0;\n    int j = s.size() - 1;\n    while (i < s.size() && s[i] != ch[0]) {\n        i++;\n    }\n    while (j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if (i == s.size() || j == -1) {\n        return s;\n    }\n    return s.substr(0, i) + s.substr(i + 1, j - i - 1) + s.substr(j + 1);",
    "    int n = s.length();\n    int i = 0;\n    int j = n - 1;\n    while (s[i] != ch) {\n        i++;\n    }\n    while (s[j] != ch) {\n        j--;\n    }\n    s.erase(i, 1);\n    s.erase(j - 1, 1);\n    return s;",
    "    int i = s.find(ch);\n    int j = s.rfind(ch);\n    if(i == -1 || j == -1) {\n        return s;\n    }\n    s.erase(i, 1);\n    s.erase(j-1, 1);\n    return s;",
    "    int i = 0;\n    int j = s.length() - 1;\n    while (i < s.length() && s[i] != ch[0]) {\n        i++;\n    }\n    while (j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if (i == s.length() || j == -1) {\n        return s;\n    }\n    s.erase(i, 1);\n    s.erase(j - 1, 1);\n    return s;",
    "    int n = s.length();\n    int i = 0;\n    int j = n - 1;\n    while (i < n) {\n        if (s[i] == ch[0]) {\n            break;\n        }\n        i++;\n    }\n    while (j >= 0) {\n        if (s[j] == ch[0]) {\n            break;\n        }\n        j--;\n    }\n    if (i == n || j == -1) {\n        return s;\n    }\n    std::string ans = \"\";\n    for (int k = 0; k < i; k++) {\n        ans += s[k];\n    }\n    for (int k = j + 1; k < n; k++) {\n        ans += s[k];\n    }\n    return ans;",
    "    int i = 0;\n    int j = s.length() - 1;\n    while (i < s.length() && s[i] != ch[0]) {\n        i++;\n    }\n    while (j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if (i == s.length() || j == -1) {\n        return s;\n    }\n    s.erase(s.begin() + i);\n    s.erase(s.begin() + j - 1);\n    return s;",
    "\tint n = s.length();\n\tint i = 0;\n\twhile (i < n) {\n\t\tif (s[i] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\tint j = n - 1;\n\twhile (j >= 0) {\n\t\tif (s[j] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t\tj--;\n\t}\n\tstd::string ans = \"\";\n\tfor (int k = 0; k < i; k++) {\n\t\tans += s[k];\n\t}\n\tfor (int k = j + 1; k < n; k++) {\n\t\tans += s[k];\n\t}\n\treturn ans;",
    "    int i = s.find(ch);\n    int j = s.rfind(ch);\n    if (i == -1) {\n        return s;\n    }\n    else {\n        s.erase(i, 1);\n        s.erase(j - 1, 1);\n        return s;\n    }",
    "    int i = 0;\n    int j = s.length() - 1;\n    while (i < s.length() && s[i] != ch[0]) {\n        i++;\n    }\n    while (j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if (i == s.length() || j == -1) {\n        return s;\n    }\n    return s.substr(0, i) + s.substr(i + 1, j - i - 1) + s.substr(j + 1);",
    "    int n = s.length();\n    int i = 0;\n    int j = n - 1;\n    while (i < n && s[i] != ch[0]) {\n        i++;\n    }\n    while (j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if (i == n || j == -1) {\n        return s;\n    }\n    std::string ans = \"\";\n    for (int k = 0; k < i; k++) {\n        ans += s[k];\n    }\n    for (int k = i + 1; k < j; k++) {\n        ans += s[k];\n    }\n    for (int k = j + 1; k < n; k++) {\n        ans += s[k];\n    }\n    return ans;",
    "\tstd::string::iterator it;\n\tfor (it = s.begin(); it != s.end(); it++) {\n\t\tif (*it == ch[0]) {\n\t\t\ts.erase(it);\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor (it = s.end(); it != s.begin(); it--) {\n\t\tif (*it == ch[0]) {\n\t\t\ts.erase(it);\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn s;",
    "    int i = 0;\n    while(s[i] != ch[0]) {\n        i++;\n    }\n    s.erase(i, 1);\n    int j = s.length() - 1;\n    while(s[j] != ch[0]) {\n        j--;\n    }\n    s.erase(j, 1);\n    return s;",
    "\tint n = s.length();\n\tint i = 0;\n\tint j = n - 1;\n\twhile (i < n) {\n\t\tif (s[i] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\twhile (j >= 0) {\n\t\tif (s[j] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t\tj--;\n\t}\n\tif (i == n || j == -1) {\n\t\treturn s;\n\t}\n\tstd::string ans = \"\";\n\tfor (int k = 0; k < i; k++) {\n\t\tans += s[k];\n\t}\n\tfor (int k = i + 1; k < j; k++) {\n\t\tans += s[k];\n\t}\n\tfor (int k = j + 1; k < n; k++) {\n\t\tans += s[k];\n\t}\n\treturn ans;",
    "    int n = s.length();\n    int i = 0;\n    while (i < n) {\n        if (s[i] == ch[0]) {\n            break;\n        }\n        i++;\n    }\n    if (i == n) {\n        return s;\n    }\n    int j = n - 1;\n    while (j >= 0) {\n        if (s[j] == ch[0]) {\n            break;\n        }\n        j--;\n    }\n    if (j == -1) {\n        return s;\n    }\n    std::string ans = \"\";\n    for (int k = 0; k < i; k++) {\n        ans += s[k];\n    }\n    for (int k = i + 1; k < j; k++) {\n        ans += s[k];\n    }\n    for (int k = j + 1; k < n; k++) {\n        ans += s[k];\n    }\n    return ans;",
    "    int n = s.length();\n    int i = 0;\n    int j = n - 1;\n    while (i < n && s[i] != ch[0]) {\n        i++;\n    }\n    while (j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if (i == n || j == -1) {\n        return s;\n    }\n    std::string ans = \"\";\n    for (int k = 0; k < i; k++) {\n        ans += s[k];\n    }\n    for (int k = i + 1; k < j; k++) {\n        ans += s[k];\n    }\n    for (int k = j + 1; k < n; k++) {\n        ans += s[k];\n    }\n    return ans;",
    "    int pos = s.find(ch);\n    if(pos == -1) {\n        return s;\n    }\n    int pos1 = s.rfind(ch);\n    s.erase(pos, 1);\n    s.erase(pos1-1, 1);\n    return s;",
    "\tint n = s.length();\n\tint pos = s.find(ch);\n\tif(pos == -1) {\n\t\treturn s;\n\t}\n\ts.erase(pos, 1);\n\tpos = s.rfind(ch);\n\ts.erase(pos, 1);\n\treturn s;",
    "    int n = s.length();\n    int i = 0;\n    int j = n - 1;\n    while (i < n && s[i] != ch[0]) {\n        i++;\n    }\n    while (j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if (i == n || j == -1) {\n        return s;\n    }\n    std::string ans = \"\";\n    for (int k = 0; k < i; k++) {\n        ans += s[k];\n    }\n    for (int k = i + 1; k < j; k++) {\n        ans += s[k];\n    }\n    for (int k = j + 1; k < n; k++) {\n        ans += s[k];\n    }\n    return ans;",
    "\tint n = s.length();\n\tint i = 0;\n\twhile (i < n) {\n\t\tif (s[i] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\tint j = n - 1;\n\twhile (j >= 0) {\n\t\tif (s[j] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t\tj--;\n\t}\n\tstd::string ans = \"\";\n\tfor (int k = 0; k < i; k++) {\n\t\tans += s[k];\n\t}\n\tfor (int k = i + 1; k < j; k++) {\n\t\tans += s[k];\n\t}\n\tfor (int k = j + 1; k < n; k++) {\n\t\tans += s[k];\n\t}\n\treturn ans;",
    "\tint i = 0;\n\twhile (s[i] != ch[0]) {\n\t\ti++;\n\t}\n\ts.erase(i, 1);\n\tint j = s.length() - 1;\n\twhile (s[j] != ch[0]) {\n\t\tj--;\n\t}\n\ts.erase(j, 1);\n\treturn s;",
    "\tint i = 0;\n\twhile (s[i] != ch[0]) {\n\t\ti++;\n\t}\n\ts.erase(i, 1);\n\tint j = s.length() - 1;\n\twhile (s[j] != ch[0]) {\n\t\tj--;\n\t}\n\ts.erase(j, 1);\n\treturn s;",
    "    int i = 0;\n    int j = s.length() - 1;\n    while (i < s.length() && s[i] != ch[0]) {\n        i++;\n    }\n    while (j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if (i == s.length() || j == -1) {\n        return s;\n    }\n    return s.substr(0, i) + s.substr(i + 1, j - i - 1) + s.substr(j + 1, s.length() - j - 1);",
    "    std::string::iterator it = s.begin();\n    while(it != s.end()) {\n        if(*it == ch[0]) {\n            s.erase(it);\n            break;\n        }\n        it++;\n    }\n    it = s.end();\n    while(it != s.begin()) {\n        it--;\n        if(*it == ch[0]) {\n            s.erase(it);\n            break;\n        }\n    }\n    return s;",
    "    int i = s.find(ch);\n    int j = s.rfind(ch);\n    if (i == -1) {\n        return s;\n    }\n    else {\n        return s.substr(0, i) + s.substr(i + 1, j - i - 1) + s.substr(j + 1);\n    }",
    "    int i = 0;\n    int j = s.length() - 1;\n    while (i < s.length() && s[i] != ch[0]) {\n        i++;\n    }\n    while (j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if (i == s.length() || j == -1) {\n        return s;\n    }\n    return s.substr(0, i) + s.substr(i + 1, j - i - 1) + s.substr(j + 1);",
    "    int n = s.length();\n    int i = 0;\n    while (i < n) {\n        if (s[i] == ch[0]) {\n            break;\n        }\n        i++;\n    }\n    s.erase(i, 1);\n    i = n - 1;\n    while (i >= 0) {\n        if (s[i] == ch[0]) {\n            break;\n        }\n        i--;\n    }\n    s.erase(i, 1);\n    return s;",
    "    int n = s.size();\n    int i = 0;\n    int j = n - 1;\n    while (i < n && s[i] != ch[0]) {\n        i++;\n    }\n    while (j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if (i < n && j >= 0) {\n        s.erase(i, 1);\n        s.erase(j - 1, 1);\n    }\n    return s;",
    "\tint i = 0;\n\tint j = s.size() - 1;\n\twhile (s[i] != ch) {\n\t\ti++;\n\t}\n\twhile (s[j] != ch) {\n\t\tj--;\n\t}\n\ts.erase(i, 1);\n\ts.erase(j - 1, 1);\n\treturn s;",
    "    int n = s.length();\n    int i = 0;\n    int j = n-1;\n    while(i < n && s[i] != ch[0]) {\n        i++;\n    }\n    while(j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if(i == n || j == -1) {\n        return s;\n    }\n    std::string ans = \"\";\n    for(int k = 0; k < i; k++) {\n        ans += s[k];\n    }\n    for(int k = i+1; k < j; k++) {\n        ans += s[k];\n    }\n    for(int k = j+1; k < n; k++) {\n        ans += s[k];\n    }\n    return ans;",
    "\tint i = 0;\n\tint j = s.size() - 1;\n\twhile (i < s.size() && s[i] != ch[0]) {\n\t\ti++;\n\t}\n\twhile (j >= 0 && s[j] != ch[0]) {\n\t\tj--;\n\t}\n\tif (i == s.size() || j == -1) {\n\t\treturn s;\n\t}\n\treturn s.substr(0, i) + s.substr(i + 1, j - i - 1) + s.substr(j + 1);",
    "    int i = 0;\n    int j = s.length() - 1;\n    while (i < s.length() && s[i] != ch[0]) {\n        i++;\n    }\n    while (j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if (i == s.length() || j == -1) {\n        return s;\n    }\n    std::string str = \"\";\n    for (int k = 0; k < s.length(); k++) {\n        if (k != i && k != j) {\n            str += s[k];\n        }\n    }\n    return str;",
    "\tint i = 0;\n\tint j = s.length() - 1;\n\twhile (i < s.length() && s[i] != ch[0]) {\n\t\ti++;\n\t}\n\twhile (j >= 0 && s[j] != ch[0]) {\n\t\tj--;\n\t}\n\tif (i == s.length() || j == -1) {\n\t\treturn s;\n\t}\n\tstd::string ans = \"\";\n\tfor (int k = 0; k < s.length(); k++) {\n\t\tif (k != i && k != j) {\n\t\t\tans += s[k];\n\t\t}\n\t}\n\treturn ans;",
    "\tint n = s.length();\n\tint i = 0;\n\tint j = n - 1;\n\twhile (i < n && s[i] != ch[0]) {\n\t\ti++;\n\t}\n\twhile (j >= 0 && s[j] != ch[0]) {\n\t\tj--;\n\t}\n\tif (i == n || j == -1) {\n\t\treturn s;\n\t}\n\tstd::string ans = \"\";\n\tfor (int k = 0; k < i; k++) {\n\t\tans += s[k];\n\t}\n\tfor (int k = i + 1; k < j; k++) {\n\t\tans += s[k];\n\t}\n\tfor (int k = j + 1; k < n; k++) {\n\t\tans += s[k];\n\t}\n\treturn ans;",
    "    int i = 0;\n    while(s[i] != ch[0]) {\n        i++;\n    }\n    s.erase(s.begin() + i);\n    int j = s.length() - 1;\n    while(s[j] != ch[0]) {\n        j--;\n    }\n    s.erase(s.begin() + j);\n    return s;",
    "    int n = s.length();\n    int i = 0;\n    int j = n - 1;\n    while (i < n && s[i] != ch[0]) {\n        i++;\n    }\n    while (j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if (i == n || j == -1) {\n        return s;\n    }\n    std::string ans = \"\";\n    for (int k = 0; k < i; k++) {\n        ans += s[k];\n    }\n    for (int k = i + 1; k < j; k++) {\n        ans += s[k];\n    }\n    for (int k = j + 1; k < n; k++) {\n        ans += s[k];\n    }\n    return ans;",
    "    int n = s.length();\n    int i = 0;\n    int j = n - 1;\n    while (i < n && s[i] != ch[0]) {\n        i++;\n    }\n    while (j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if (i == n || j == -1) {\n        return s;\n    }\n    std::string ans = \"\";\n    for (int k = 0; k < i; k++) {\n        ans += s[k];\n    }\n    for (int k = i + 1; k < j; k++) {\n        ans += s[k];\n    }\n    for (int k = j + 1; k < n; k++) {\n        ans += s[k];\n    }\n    return ans;",
    "\tint n = s.length();\n\tint i = 0;\n\twhile (i < n) {\n\t\tif (s[i] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\tint j = n - 1;\n\twhile (j >= 0) {\n\t\tif (s[j] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t\tj--;\n\t}\n\tstd::string ans = \"\";\n\tfor (int k = 0; k < i; k++) {\n\t\tans += s[k];\n\t}\n\tfor (int k = i + 1; k < j; k++) {\n\t\tans += s[k];\n\t}\n\tfor (int k = j + 1; k < n; k++) {\n\t\tans += s[k];\n\t}\n\treturn ans;",
    "    int i = 0;\n    int j = s.length() - 1;\n    while (i < s.length() && s[i] != ch[0]) {\n        i++;\n    }\n    while (j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if (i == s.length() || j == -1) {\n        return s;\n    }\n    std::string ans = \"\";\n    for (int k = 0; k < i; k++) {\n        ans += s[k];\n    }\n    for (int k = i + 1; k < j; k++) {\n        ans += s[k];\n    }\n    for (int k = j + 1; k < s.length(); k++) {\n        ans += s[k];\n    }\n    return ans;",
    "\tint len = s.length();\n\tint i = 0;\n\twhile (i < len) {\n\t\tif (s[i] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\tint j = len - 1;\n\twhile (j >= 0) {\n\t\tif (s[j] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t\tj--;\n\t}\n\tstd::string ans = \"\";\n\tfor (int k = 0; k < i; k++) {\n\t\tans += s[k];\n\t}\n\tfor (int k = i + 1; k < j; k++) {\n\t\tans += s[k];\n\t}\n\tfor (int k = j + 1; k < len; k++) {\n\t\tans += s[k];\n\t}\n\treturn ans;",
    "\tint i = 0;\n\tint j = s.length() - 1;\n\twhile (i < s.length() && s[i] != ch[0]) {\n\t\ti++;\n\t}\n\twhile (j >= 0 && s[j] != ch[0]) {\n\t\tj--;\n\t}\n\tif (i == s.length() || j == -1) {\n\t\treturn s;\n\t}\n\treturn s.substr(0, i) + s.substr(i + 1, j - i - 1) + s.substr(j + 1);",
    "    int n = s.length();\n    int i = 0;\n    int j = n - 1;\n    while (i < n && s[i] != ch[0]) {\n        i++;\n    }\n    while (j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if (i == n || j == -1) {\n        return s;\n    }\n    std::string ans = \"\";\n    for (int k = 0; k < i; k++) {\n        ans += s[k];\n    }\n    for (int k = i + 1; k < j; k++) {\n        ans += s[k];\n    }\n    for (int k = j + 1; k < n; k++) {\n        ans += s[k];\n    }\n    return ans;",
    "    int n = s.length();\n    int i = 0;\n    int j = n - 1;\n    while (i < n && s[i] != ch[0]) {\n        i++;\n    }\n    while (j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if (i == n || j == -1) {\n        return s;\n    }\n    std::string ans = \"\";\n    for (int k = 0; k < i; k++) {\n        ans += s[k];\n    }\n    for (int k = i + 1; k < j; k++) {\n        ans += s[k];\n    }\n    for (int k = j + 1; k < n; k++) {\n        ans += s[k];\n    }\n    return ans;",
    "    int n = s.length();\n    int i = 0;\n    while (i < n) {\n        if (s[i] == ch[0]) {\n            s.erase(i, 1);\n            break;\n        }\n        i++;\n    }\n    i = n - 1;\n    while (i >= 0) {\n        if (s[i] == ch[0]) {\n            s.erase(i, 1);\n            break;\n        }\n        i--;\n    }\n    return s;",
    "    int i = 0;\n    while (s[i] != ch[0]) {\n        i++;\n    }\n    s.erase(i, 1);\n    i = s.length() - 1;\n    while (s[i] != ch[0]) {\n        i--;\n    }\n    s.erase(i, 1);\n    return s;",
    "    int i = 0;\n    int j = s.length() - 1;\n    while (s[i] != ch) {\n        i++;\n    }\n    while (s[j] != ch) {\n        j--;\n    }\n    s.erase(i, 1);\n    s.erase(j - 1, 1);\n    return s;",
    "    int first_occ = s.find(ch);\n    int last_occ = s.rfind(ch);\n    std::string s1 = s.substr(0, first_occ);\n    std::string s2 = s.substr(first_occ + 1, last_occ - first_occ - 1);\n    std::string s3 = s.substr(last_occ + 1, s.length() - last_occ - 1);\n    return s1 + s2 + s3;",
    "\tint i = 0;\n\twhile (s[i] != ch[0]) {\n\t\ti++;\n\t}\n\ts.erase(i, 1);\n\ti = s.length() - 1;\n\twhile (s[i] != ch[0]) {\n\t\ti--;\n\t}\n\ts.erase(i, 1);\n\treturn s;",
    "\tint n = s.length();\n\tint i = 0;\n\twhile (i < n) {\n\t\tif (s[i] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\ts.erase(i, 1);\n\tint j = n - 1;\n\twhile (j >= 0) {\n\t\tif (s[j] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t\tj--;\n\t}\n\ts.erase(j, 1);\n\treturn s;",
    "    int n = s.length();\n    int i = 0;\n    int j = n - 1;\n    while (i < n && s[i] != ch[0]) {\n        i++;\n    }\n    while (j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if (i == n || j == -1) {\n        return s;\n    }\n    std::string ans = \"\";\n    for (int k = 0; k < i; k++) {\n        ans += s[k];\n    }\n    for (int k = i + 1; k < j; k++) {\n        ans += s[k];\n    }\n    for (int k = j + 1; k < n; k++) {\n        ans += s[k];\n    }\n    return ans;",
    "    int i = 0;\n    int j = s.length() - 1;\n    while (i < s.length() && s[i] != ch[0]) {\n        i++;\n    }\n    while (j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if (i == s.length() || j == -1) {\n        return s;\n    }\n    return s.substr(0, i) + s.substr(i + 1, j - i - 1) + s.substr(j + 1, s.length() - j - 1);",
    "    int n = s.length();\n    int i = 0;\n    while(i < n) {\n        if(s[i] == ch[0]) {\n            break;\n        }\n        i++;\n    }\n    int j = n - 1;\n    while(j >= 0) {\n        if(s[j] == ch[0]) {\n            break;\n        }\n        j--;\n    }\n    std::string ans = \"\";\n    for(int k = 0; k < i; k++) {\n        ans += s[k];\n    }\n    for(int k = j + 1; k < n; k++) {\n        ans += s[k];\n    }\n    return ans;",
    "    int n = s.length();\n    int i = 0;\n    int j = n - 1;\n    while(i < n && s[i] != ch[0]) {\n        i++;\n    }\n    while(j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if(i == n || j == -1) {\n        return s;\n    }\n    std::string ans = \"\";\n    for(int k = 0; k < i; k++) {\n        ans += s[k];\n    }\n    for(int k = i + 1; k < j; k++) {\n        ans += s[k];\n    }\n    for(int k = j + 1; k < n; k++) {\n        ans += s[k];\n    }\n    return ans;",
    "    int n = s.length();\n    int i = 0;\n    int j = n - 1;\n    while (i < n && s[i] != ch[0]) {\n        i++;\n    }\n    while (j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if (i == n || j == -1) {\n        return s;\n    }\n    std::string ans = \"\";\n    for (int k = 0; k < n; k++) {\n        if (k != i && k != j) {\n            ans += s[k];\n        }\n    }\n    return ans;",
    "\tint n = s.length();\n\tint i = 0;\n\twhile (i < n) {\n\t\tif (s[i] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\tint j = n - 1;\n\twhile (j >= 0) {\n\t\tif (s[j] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t\tj--;\n\t}\n\tif (i == n || j == -1) {\n\t\treturn s;\n\t}\n\tstd::string ans = \"\";\n\tfor (int k = 0; k < i; k++) {\n\t\tans += s[k];\n\t}\n\tfor (int k = i + 1; k < j; k++) {\n\t\tans += s[k];\n\t}\n\tfor (int k = j + 1; k < n; k++) {\n\t\tans += s[k];\n\t}\n\treturn ans;",
    "\tint n = s.length();\n\tint i = 0;\n\twhile (i < n) {\n\t\tif (s[i] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\tint j = n - 1;\n\twhile (j >= 0) {\n\t\tif (s[j] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t\tj--;\n\t}\n\tstd::string ans = \"\";\n\tfor (int k = 0; k < i; k++) {\n\t\tans += s[k];\n\t}\n\tfor (int k = i + 1; k < j; k++) {\n\t\tans += s[k];\n\t}\n\tfor (int k = j + 1; k < n; k++) {\n\t\tans += s[k];\n\t}\n\treturn ans;",
    "    int n = s.length();\n    int i = 0;\n    while (i < n) {\n        if (s[i] == ch[0]) {\n            break;\n        }\n        i++;\n    }\n    int j = n - 1;\n    while (j >= 0) {\n        if (s[j] == ch[0]) {\n            break;\n        }\n        j--;\n    }\n    std::string ans = \"\";\n    for (int k = 0; k < i; k++) {\n        ans += s[k];\n    }\n    for (int k = i + 1; k < j; k++) {\n        ans += s[k];\n    }\n    for (int k = j + 1; k < n; k++) {\n        ans += s[k];\n    }\n    return ans;",
    "    int n = s.length();\n    int i = 0;\n    int j = n - 1;\n    while (i < n && s[i] != ch[0]) {\n        i++;\n    }\n    while (j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if (i == n || j == -1) {\n        return s;\n    }\n    std::string ans = \"\";\n    for (int k = 0; k < i; k++) {\n        ans += s[k];\n    }\n    for (int k = i + 1; k < j; k++) {\n        ans += s[k];\n    }\n    for (int k = j + 1; k < n; k++) {\n        ans += s[k];\n    }\n    return ans;",
    "    int n = s.length();\n    int i = 0;\n    int j = n-1;\n    while(i < n && s[i] != ch[0]) {\n        i++;\n    }\n    while(j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if(i == n || j == -1) {\n        return s;\n    }\n    std::string ans = \"\";\n    for(int k = 0; k < n; k++) {\n        if(k != i && k != j) {\n            ans += s[k];\n        }\n    }\n    return ans;",
    "    int n = s.length();\n    int i = 0;\n    int j = n - 1;\n    while (i < n && s[i] != ch[0]) {\n        i++;\n    }\n    while (j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if (i == n || j == -1) {\n        return s;\n    }\n    std::string ans = \"\";\n    for (int k = 0; k < i; k++) {\n        ans += s[k];\n    }\n    for (int k = i + 1; k < j; k++) {\n        ans += s[k];\n    }\n    for (int k = j + 1; k < n; k++) {\n        ans += s[k];\n    }\n    return ans;",
    "    int i = 0;\n    while (s[i] != ch[0]) {\n        i++;\n    }\n    s.erase(i, 1);\n    int j = s.length() - 1;\n    while (s[j] != ch[0]) {\n        j--;\n    }\n    s.erase(j, 1);\n    return s;",
    "\tint i = 0;\n\twhile (s[i] != ch[0]) {\n\t\ti++;\n\t}\n\ts.erase(s.begin() + i);\n\tint j = s.size() - 1;\n\twhile (s[j] != ch[0]) {\n\t\tj--;\n\t}\n\ts.erase(s.begin() + j);\n\treturn s;",
    "    int n = s.length();\n    int i = 0;\n    int j = n - 1;\n    while (i < n) {\n        if (s[i] == ch[0]) {\n            break;\n        }\n        i++;\n    }\n    while (j >= 0) {\n        if (s[j] == ch[0]) {\n            break;\n        }\n        j--;\n    }\n    if (i == n || j == -1) {\n        return s;\n    }\n    std::string ans = \"\";\n    for (int k = 0; k < i; k++) {\n        ans += s[k];\n    }\n    for (int k = j + 1; k < n; k++) {\n        ans += s[k];\n    }\n    return ans;",
    "\tint n = s.length();\n\tint i = 0;\n\twhile (i < n) {\n\t\tif (s[i] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\tint j = n - 1;\n\twhile (j >= 0) {\n\t\tif (s[j] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t\tj--;\n\t}\n\tstd::string ans = \"\";\n\tfor (int k = 0; k < i; k++) {\n\t\tans += s[k];\n\t}\n\tfor (int k = i + 1; k < j; k++) {\n\t\tans += s[k];\n\t}\n\tfor (int k = j + 1; k < n; k++) {\n\t\tans += s[k];\n\t}\n\treturn ans;",
    "\tint i = 0;\n\twhile (s[i] != ch[0]) {\n\t\ti++;\n\t}\n\ts.erase(s.begin() + i);\n\tint j = s.size() - 1;\n\twhile (s[j] != ch[0]) {\n\t\tj--;\n\t}\n\ts.erase(s.begin() + j);\n\treturn s;",
    "\tstd::string::iterator it;\n\tit = std::find(s.begin(), s.end(), ch);\n\tif (it != s.end()) {\n\t\ts.erase(it);\n\t}\n\tstd::string::reverse_iterator rit;\n\trit = std::find(s.rbegin(), s.rend(), ch);\n\tif (rit != s.rend()) {\n\t\ts.erase(rit.base() - 1);\n\t}\n\treturn s;",
    "    int i = 0;\n    int j = s.length() - 1;\n    while (i < s.length() && s[i] != ch[0]) {\n        i++;\n    }\n    while (j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if (i == s.length() || j == -1) {\n        return s;\n    }\n    return s.substr(0, i) + s.substr(i + 1, j - i - 1) + s.substr(j + 1);",
    "    int n = s.length();\n    int i = 0;\n    int j = n - 1;\n    while (i < n && s[i] != ch[0]) {\n        i++;\n    }\n    while (j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if (i == n || j == -1) {\n        return s;\n    }\n    std::string str = \"\";\n    for (int k = 0; k < i; k++) {\n        str += s[k];\n    }\n    for (int k = i + 1; k < j; k++) {\n        str += s[k];\n    }\n    for (int k = j + 1; k < n; k++) {\n        str += s[k];\n    }\n    return str;",
    "    int n = s.length();\n    int i = 0;\n    int j = n - 1;\n    while (i < n && s[i] != ch[0]) {\n        i++;\n    }\n    while (j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if (i == n || j == -1) {\n        return s;\n    }\n    std::string str = \"\";\n    for (int k = 0; k < i; k++) {\n        str += s[k];\n    }\n    for (int k = i + 1; k < j; k++) {\n        str += s[k];\n    }\n    for (int k = j + 1; k < n; k++) {\n        str += s[k];\n    }\n    return str;",
    "    int n = s.length();\n    int i = 0;\n    while (i < n) {\n        if (s[i] == ch[0]) {\n            break;\n        }\n        i++;\n    }\n    if (i == n) {\n        return s;\n    }\n    int j = n - 1;\n    while (j >= 0) {\n        if (s[j] == ch[0]) {\n            break;\n        }\n        j--;\n    }\n    if (j == -1) {\n        return s;\n    }\n    std::string ans = \"\";\n    for (int k = 0; k < i; k++) {\n        ans += s[k];\n    }\n    for (int k = i + 1; k < j; k++) {\n        ans += s[k];\n    }\n    for (int k = j + 1; k < n; k++) {\n        ans += s[k];\n    }\n    return ans;",
    "    int i = 0;\n    int j = s.length() - 1;\n    while (s[i] != ch) {\n        i++;\n    }\n    while (s[j] != ch) {\n        j--;\n    }\n    s.erase(i, 1);\n    s.erase(j - 1, 1);\n    return s;",
    "\tint n = s.length();\n\tint i = 0;\n\twhile (i < n) {\n\t\tif (s[i] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\tint j = n - 1;\n\twhile (j >= 0) {\n\t\tif (s[j] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t\tj--;\n\t}\n\tstd::string ans = \"\";\n\tfor (int k = 0; k < i; k++) {\n\t\tans += s[k];\n\t}\n\tfor (int k = i + 1; k < j; k++) {\n\t\tans += s[k];\n\t}\n\tfor (int k = j + 1; k < n; k++) {\n\t\tans += s[k];\n\t}\n\treturn ans;",
    "    int n = s.length();\n    int i = 0;\n    int j = n - 1;\n    while (i < n && s[i] != ch[0]) {\n        i++;\n    }\n    while (j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if (i == n || j == -1) {\n        return s;\n    }\n    std::string ans = \"\";\n    for (int k = 0; k < i; k++) {\n        ans += s[k];\n    }\n    for (int k = i + 1; k < j; k++) {\n        ans += s[k];\n    }\n    for (int k = j + 1; k < n; k++) {\n        ans += s[k];\n    }\n    return ans;",
    "\tint n = s.length();\n\tint i = 0;\n\twhile (i < n) {\n\t\tif (s[i] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\tint j = n - 1;\n\twhile (j >= 0) {\n\t\tif (s[j] == ch[0]) {\n\t\t\tbreak;\n\t\t}\n\t\tj--;\n\t}\n\tstd::string ans = \"\";\n\tfor (int k = 0; k < i; k++) {\n\t\tans += s[k];\n\t}\n\tfor (int k = i + 1; k < j; k++) {\n\t\tans += s[k];\n\t}\n\tfor (int k = j + 1; k < n; k++) {\n\t\tans += s[k];\n\t}\n\treturn ans;",
    "    int n = s.length();\n    int i = 0;\n    int j = n - 1;\n    while(i < n && s[i] != ch[0]) {\n        i++;\n    }\n    while(j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if(i == n || j == -1) {\n        return s;\n    }\n    std::string ans = \"\";\n    for(int k = 0; k < n; k++) {\n        if(k == i || k == j) {\n            continue;\n        }\n        ans += s[k];\n    }\n    return ans;",
    "    int i = 0;\n    int j = s.length() - 1;\n    while (i < s.length() && s[i] != ch[0]) {\n        i++;\n    }\n    while (j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if (i == s.length() || j == -1) {\n        return s;\n    }\n    return s.substr(0, i) + s.substr(i + 1, j - i - 1) + s.substr(j + 1);",
    "\tint i = 0;\n\twhile (i < s.length()) {\n\t\tif (s[i] == ch[0]) {\n\t\t\ts.erase(i, 1);\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\ti = s.length() - 1;\n\twhile (i >= 0) {\n\t\tif (s[i] == ch[0]) {\n\t\t\ts.erase(i, 1);\n\t\t\tbreak;\n\t\t}\n\t\ti--;\n\t}\n\treturn s;",
    "    int i = 0;\n    int j = s.size() - 1;\n    while (i < s.size() && s[i] != ch[0]) {\n        i++;\n    }\n    while (j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if (i == s.size() || j == -1) {\n        return s;\n    }\n    s.erase(i, 1);\n    s.erase(j - 1, 1);\n    return s;",
    "    int i = 0;\n    int j = s.length() - 1;\n    while (i < s.length() && s[i] != ch[0]) {\n        i++;\n    }\n    while (j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if (i == s.length() || j == -1) {\n        return s;\n    }\n    return s.substr(0, i) + s.substr(i + 1, j - i - 1) + s.substr(j + 1, s.length() - j - 1);",
    "    int n = s.length();\n    int i = 0;\n    while(i < n) {\n        if(s[i] == ch[0]) {\n            s.erase(i, 1);\n            break;\n        }\n        i++;\n    }\n    n = s.length();\n    i = n - 1;\n    while(i >= 0) {\n        if(s[i] == ch[0]) {\n            s.erase(i, 1);\n            break;\n        }\n        i--;\n    }\n    return s;",
    "    int i = 0;\n    while (s[i] != ch[0]) {\n        i++;\n    }\n    s.erase(i, 1);\n    i = s.length() - 1;\n    while (s[i] != ch[0]) {\n        i--;\n    }\n    s.erase(i, 1);\n    return s;",
    "    int n = s.length();\n    int i = 0;\n    int j = n - 1;\n    while (i < n && s[i] != ch[0]) {\n        i++;\n    }\n    while (j >= 0 && s[j] != ch[0]) {\n        j--;\n    }\n    if (i == n || j == -1) {\n        return s;\n    }\n    std::string ans = \"\";\n    for (int k = 0; k < i; k++) {\n        ans += s[k];\n    }\n    for (int k = i + 1; k < j; k++) {\n        ans += s[k];\n    }\n    for (int k = j + 1; k < n; k++) {\n        ans += s[k];\n    }\n    return ans;",
    "\tint i = 0;\n\tint j = s.length() - 1;\n\twhile (i < s.length() && s[i] != ch[0]) {\n\t\ti++;\n\t}\n\twhile (j >= 0 && s[j] != ch[0]) {\n\t\tj--;\n\t}\n\tif (i == s.length() || j == -1) {\n\t\treturn s;\n\t}\n\treturn s.substr(0, i) + s.substr(i + 1, j - i - 1) + s.substr(j + 1);",
    "    int n = s.length();\n    int i = 0;\n    while(i < n) {\n        if(s[i] == ch[0]) {\n            s.erase(i, 1);\n            n--;\n        }\n        else {\n            i++;\n        }\n    }\n    return s;"
  ]
}